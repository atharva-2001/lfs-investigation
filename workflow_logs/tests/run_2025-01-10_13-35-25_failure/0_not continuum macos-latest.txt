2025-01-10T13:35:26.6240451Z Requested labels: macos-latest
2025-01-10T13:35:26.6240720Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2935/merge
2025-01-10T13:35:26.6240855Z Waiting for a runner to pick up this job...
2025-01-10T13:35:27.0052036Z Job is waiting for a hosted runner to come online.
2025-01-10T13:35:29.2893996Z Job is about to start running on the hosted runner: GitHub Actions 58 (hosted)
2025-01-10T13:35:30.2780260Z Current runner version: '2.321.0'
2025-01-10T13:35:30.2800290Z ##[group]Operating System
2025-01-10T13:35:30.2800740Z macOS
2025-01-10T13:35:30.2801030Z 14.7.2
2025-01-10T13:35:30.2801320Z 23H311
2025-01-10T13:35:30.2801600Z ##[endgroup]
2025-01-10T13:35:30.2801920Z ##[group]Runner Image
2025-01-10T13:35:30.2802250Z Image: macos-14-arm64
2025-01-10T13:35:30.2802560Z Version: 20250106.725
2025-01-10T13:35:30.2803220Z Included Software: https://github.com/actions/runner-images/blob/macos-14-arm64/20250106.725/images/macos/macos-14-arm64-Readme.md
2025-01-10T13:35:30.2804120Z Image Release: https://github.com/actions/runner-images/releases/tag/macos-14-arm64%2F20250106.725
2025-01-10T13:35:30.2804690Z ##[endgroup]
2025-01-10T13:35:30.2804990Z ##[group]Runner Image Provisioner
2025-01-10T13:35:30.2805370Z 2.0.404.1+573eac7f0cc07d6bb82d8b9bf5e1ffa69a554644
2025-01-10T13:35:30.2805760Z ##[endgroup]
2025-01-10T13:35:30.2807050Z ##[group]GITHUB_TOKEN Permissions
2025-01-10T13:35:30.2808060Z Actions: read
2025-01-10T13:35:30.2808370Z Attestations: read
2025-01-10T13:35:30.2808660Z Checks: read
2025-01-10T13:35:30.2808940Z Contents: read
2025-01-10T13:35:30.2809240Z Deployments: read
2025-01-10T13:35:30.2809540Z Discussions: read
2025-01-10T13:35:30.2809830Z Issues: read
2025-01-10T13:35:30.2810110Z Metadata: read
2025-01-10T13:35:30.2810400Z Packages: read
2025-01-10T13:35:30.2810690Z Pages: read
2025-01-10T13:35:30.2810970Z PullRequests: read
2025-01-10T13:35:30.2811280Z RepositoryProjects: read
2025-01-10T13:35:30.2811600Z SecurityEvents: read
2025-01-10T13:35:30.2811910Z Statuses: read
2025-01-10T13:35:30.2812200Z ##[endgroup]
2025-01-10T13:35:30.2814080Z Secret source: None
2025-01-10T13:35:30.2814520Z Prepare workflow directory
2025-01-10T13:35:30.3172240Z Prepare all required actions
2025-01-10T13:35:30.3198360Z Getting action download info
2025-01-10T13:35:30.4873810Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-10T13:35:30.8052540Z Download action repository 'actions/upload-artifact@v4' (SHA:6f51ac03b9356f520e9adb1b1b7802705f340c2b)
2025-01-10T13:35:30.9590890Z Complete job name: not continuum macos-latest 
2025-01-10T13:35:30.9990600Z ##[group]Run actions/checkout@v4
2025-01-10T13:35:30.9991180Z with:
2025-01-10T13:35:30.9991480Z   repository: tardis-sn/tardis
2025-01-10T13:35:30.9992050Z   token: ***
2025-01-10T13:35:30.9992330Z   ssh-strict: true
2025-01-10T13:35:30.9992610Z   ssh-user: git
2025-01-10T13:35:30.9992890Z   persist-credentials: true
2025-01-10T13:35:30.9993210Z   clean: true
2025-01-10T13:35:30.9993500Z   sparse-checkout-cone-mode: true
2025-01-10T13:35:30.9993840Z   fetch-depth: 1
2025-01-10T13:35:30.9994120Z   fetch-tags: false
2025-01-10T13:35:30.9994410Z   show-progress: true
2025-01-10T13:35:30.9994700Z   lfs: false
2025-01-10T13:35:30.9994970Z   submodules: false
2025-01-10T13:35:30.9995260Z   set-safe-directory: true
2025-01-10T13:35:30.9995700Z env:
2025-01-10T13:35:30.9995970Z   CACHE_NUMBER: 0
2025-01-10T13:35:30.9996760Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:30.9997630Z   CODECOV_TOKEN: 
2025-01-10T13:35:30.9997920Z ##[endgroup]
2025-01-10T13:35:31.2880900Z Syncing repository: tardis-sn/tardis
2025-01-10T13:35:31.2882520Z ##[group]Getting Git version info
2025-01-10T13:35:31.2883020Z Working directory is '/Users/runner/work/tardis/tardis'
2025-01-10T13:35:31.2883790Z [command]/opt/homebrew/bin/git version
2025-01-10T13:35:31.3398310Z git version 2.47.1
2025-01-10T13:35:31.3432870Z ##[endgroup]
2025-01-10T13:35:31.3447510Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/131bfa9f-3418-4619-bfcc-1abebfe57f91/.gitconfig'
2025-01-10T13:35:31.3448640Z Temporarily overriding HOME='/Users/runner/work/_temp/131bfa9f-3418-4619-bfcc-1abebfe57f91' before making global git config changes
2025-01-10T13:35:31.3449600Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:35:31.3461030Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-10T13:35:31.3548330Z Deleting the contents of '/Users/runner/work/tardis/tardis'
2025-01-10T13:35:31.3550980Z ##[group]Initializing the repository
2025-01-10T13:35:31.3555320Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis
2025-01-10T13:35:31.3745090Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T13:35:31.3747600Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T13:35:31.3748310Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T13:35:31.3748840Z hint:
2025-01-10T13:35:31.3749240Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T13:35:31.3750090Z hint:
2025-01-10T13:35:31.3750630Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T13:35:31.3751340Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T13:35:31.3751940Z hint:
2025-01-10T13:35:31.3752360Z hint: 	git branch -m <name>
2025-01-10T13:35:31.3753050Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/.git/
2025-01-10T13:35:31.3757590Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-10T13:35:31.3822890Z ##[endgroup]
2025-01-10T13:35:31.3823540Z ##[group]Disabling automatic garbage collection
2025-01-10T13:35:31.3825620Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-10T13:35:31.3885170Z ##[endgroup]
2025-01-10T13:35:31.3885750Z ##[group]Setting up auth
2025-01-10T13:35:31.3886370Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:35:31.3921430Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:35:31.4603740Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:35:31.4654050Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:35:31.5267970Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T13:35:31.5571880Z ##[endgroup]
2025-01-10T13:35:31.5572850Z ##[group]Fetching the repository
2025-01-10T13:35:31.5578110Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +6bb3492707f1bf8b6c612b72fba961366f4d0cb5:refs/remotes/pull/2935/merge
2025-01-10T13:35:33.2360550Z From https://github.com/tardis-sn/tardis
2025-01-10T13:35:33.2363250Z  * [new ref]         6bb3492707f1bf8b6c612b72fba961366f4d0cb5 -> pull/2935/merge
2025-01-10T13:35:33.2427890Z ##[endgroup]
2025-01-10T13:35:33.2428950Z ##[group]Determining the checkout info
2025-01-10T13:35:33.2429950Z ##[endgroup]
2025-01-10T13:35:33.2433360Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-10T13:35:33.2497030Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T13:35:33.2578660Z ##[group]Checking out the ref
2025-01-10T13:35:33.2579550Z [command]/opt/homebrew/bin/git checkout --progress --force refs/remotes/pull/2935/merge
2025-01-10T13:35:33.4578210Z HEAD is now at 6bb3492 Merge 356c0d35ff4e1880a25ad28dff47e1288de13362 into 0fc2c76326b8122f88ddaf369f17a637bbe37c63
2025-01-10T13:35:33.4588160Z ##[endgroup]
2025-01-10T13:35:33.4651520Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-10T13:35:33.4713660Z 6bb3492707f1bf8b6c612b72fba961366f4d0cb5
2025-01-10T13:35:33.4953280Z Prepare all required actions
2025-01-10T13:35:33.4953920Z Getting action download info
2025-01-10T13:35:33.6361460Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-10T13:35:33.7354350Z ##[group]Run ./.github/actions/setup_lfs
2025-01-10T13:35:33.7354980Z with:
2025-01-10T13:35:33.7355600Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-10T13:35:33.7356260Z env:
2025-01-10T13:35:33.7356750Z   CACHE_NUMBER: 0
2025-01-10T13:35:33.7357960Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:33.7359260Z   CODECOV_TOKEN: 
2025-01-10T13:35:33.7359720Z ##[endgroup]
2025-01-10T13:35:33.7541700Z ##[group]Run actions/checkout@v4
2025-01-10T13:35:33.7542290Z with:
2025-01-10T13:35:33.7542770Z   repository: tardis-sn/tardis-regression-data
2025-01-10T13:35:33.7543430Z   path: tardis-regression-data
2025-01-10T13:35:33.7544150Z   token: ***
2025-01-10T13:35:33.7544590Z   ssh-strict: true
2025-01-10T13:35:33.7545060Z   ssh-user: git
2025-01-10T13:35:33.7545540Z   persist-credentials: true
2025-01-10T13:35:33.7546060Z   clean: true
2025-01-10T13:35:33.7546540Z   sparse-checkout-cone-mode: true
2025-01-10T13:35:33.7547130Z   fetch-depth: 1
2025-01-10T13:35:33.7547580Z   fetch-tags: false
2025-01-10T13:35:33.7548060Z   show-progress: true
2025-01-10T13:35:33.7548510Z   lfs: false
2025-01-10T13:35:33.7548930Z   submodules: false
2025-01-10T13:35:33.7549400Z   set-safe-directory: true
2025-01-10T13:35:33.7549890Z env:
2025-01-10T13:35:33.7550280Z   CACHE_NUMBER: 0
2025-01-10T13:35:33.7551500Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:33.7552810Z   CODECOV_TOKEN: 
2025-01-10T13:35:33.7553240Z ##[endgroup]
2025-01-10T13:35:33.8439020Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-10T13:35:33.8442510Z ##[group]Getting Git version info
2025-01-10T13:35:33.8443370Z Working directory is '/Users/runner/work/tardis/tardis/tardis-regression-data'
2025-01-10T13:35:33.8472850Z [command]/opt/homebrew/bin/git version
2025-01-10T13:35:33.8519910Z git version 2.47.1
2025-01-10T13:35:33.8534770Z ##[endgroup]
2025-01-10T13:35:33.8540250Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/f1f46732-8e71-4bb4-b16d-bc91f7a56785/.gitconfig'
2025-01-10T13:35:33.8548000Z Temporarily overriding HOME='/Users/runner/work/_temp/f1f46732-8e71-4bb4-b16d-bc91f7a56785' before making global git config changes
2025-01-10T13:35:33.8549430Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:35:33.8550920Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:35:33.8608820Z ##[group]Initializing the repository
2025-01-10T13:35:33.8615770Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:35:33.8706970Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-10T13:35:33.8708220Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-10T13:35:33.8709270Z hint: of your new repositories, which will suppress this warning, call:
2025-01-10T13:35:33.8710030Z hint:
2025-01-10T13:35:33.8710600Z hint: 	git config --global init.defaultBranch <name>
2025-01-10T13:35:33.8711260Z hint:
2025-01-10T13:35:33.8711900Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-10T13:35:33.8712900Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-10T13:35:33.8713730Z hint:
2025-01-10T13:35:33.8714200Z hint: 	git branch -m <name>
2025-01-10T13:35:33.8715110Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-10T13:35:33.8731060Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-10T13:35:33.8794330Z ##[endgroup]
2025-01-10T13:35:33.8797370Z ##[group]Disabling automatic garbage collection
2025-01-10T13:35:33.8800660Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-10T13:35:33.9410600Z ##[endgroup]
2025-01-10T13:35:33.9487610Z ##[group]Setting up auth
2025-01-10T13:35:33.9505300Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:35:33.9510470Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:35:34.1211950Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:35:34.1518330Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:35:34.2288520Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-10T13:35:34.2343850Z ##[endgroup]
2025-01-10T13:35:34.2356070Z ##[group]Determining the default branch
2025-01-10T13:35:34.2356840Z Retrieving the default branch name
2025-01-10T13:35:34.6836970Z Default branch 'main'
2025-01-10T13:35:34.7141890Z ##[endgroup]
2025-01-10T13:35:34.7245380Z ##[group]Fetching the repository
2025-01-10T13:35:34.7347960Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-10T13:35:35.8323710Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-10T13:35:35.8324220Z  * [new branch]      main       -> origin/main
2025-01-10T13:35:35.8381070Z ##[endgroup]
2025-01-10T13:35:35.8381510Z ##[group]Determining the checkout info
2025-01-10T13:35:35.8381990Z ##[endgroup]
2025-01-10T13:35:35.8388860Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-10T13:35:35.8443690Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-10T13:35:35.8491670Z ##[group]Checking out the ref
2025-01-10T13:35:35.8495180Z [command]/opt/homebrew/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-10T13:35:36.0477800Z Switched to a new branch 'main'
2025-01-10T13:35:36.0480120Z branch 'main' set up to track 'origin/main'.
2025-01-10T13:35:36.1072160Z ##[endgroup]
2025-01-10T13:35:36.1130090Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-10T13:35:36.1171720Z 666ab8501c2b2aea30d05b8822e7ddbfca078d23
2025-01-10T13:35:36.1272080Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-10T13:35:36.1272510Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-10T13:35:36.1334270Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:35:36.1334620Z env:
2025-01-10T13:35:36.1334770Z   CACHE_NUMBER: 0
2025-01-10T13:35:36.1335260Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:36.1335790Z   CODECOV_TOKEN: 
2025-01-10T13:35:36.1335950Z ##[endgroup]
2025-01-10T13:35:36.4353570Z ##[group]Run actions/cache/restore@v4
2025-01-10T13:35:36.4353810Z with:
2025-01-10T13:35:36.4353970Z   path: tardis-regression-data/.git/lfs
2025-01-10T13:35:36.4354320Z   key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T13:35:36.4354760Z   enableCrossOsArchive: false
2025-01-10T13:35:36.4354950Z   fail-on-cache-miss: false
2025-01-10T13:35:36.4355120Z   lookup-only: false
2025-01-10T13:35:36.4355300Z env:
2025-01-10T13:35:36.4355470Z   CACHE_NUMBER: 0
2025-01-10T13:35:36.4356340Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:35:36.4356880Z   CODECOV_TOKEN: 
2025-01-10T13:35:36.4357020Z ##[endgroup]
2025-01-10T13:35:37.9651180Z Received 37748736 of 1706796060 (2.2%), 36.0 MBs/sec
2025-01-10T13:35:38.9668800Z Received 104857600 of 1706796060 (6.1%), 49.9 MBs/sec
2025-01-10T13:35:39.9675860Z Received 163577856 of 1706796060 (9.6%), 51.9 MBs/sec
2025-01-10T13:35:40.9738010Z Received 213909504 of 1706796060 (12.5%), 50.9 MBs/sec
2025-01-10T13:35:41.9754740Z Received 276824064 of 1706796060 (16.2%), 52.7 MBs/sec
2025-01-10T13:35:42.9759230Z Received 335544320 of 1706796060 (19.7%), 53.2 MBs/sec
2025-01-10T13:35:43.9801560Z Received 390070272 of 1706796060 (22.9%), 53.0 MBs/sec
2025-01-10T13:35:44.9769850Z Received 457179136 of 1706796060 (26.8%), 54.4 MBs/sec
2025-01-10T13:35:45.9777480Z Received 515899392 of 1706796060 (30.2%), 54.6 MBs/sec
2025-01-10T13:35:46.9803130Z Received 570425344 of 1706796060 (33.4%), 54.3 MBs/sec
2025-01-10T13:35:47.9811960Z Received 629145600 of 1706796060 (36.9%), 54.5 MBs/sec
2025-01-10T13:35:48.9820040Z Received 696254464 of 1706796060 (40.8%), 55.2 MBs/sec
2025-01-10T13:35:49.9826190Z Received 763363328 of 1706796060 (44.7%), 55.9 MBs/sec
2025-01-10T13:35:50.9841310Z Received 830472192 of 1706796060 (48.7%), 56.5 MBs/sec
2025-01-10T13:35:51.9876430Z Received 889192448 of 1706796060 (52.1%), 56.4 MBs/sec
2025-01-10T13:35:52.9902220Z Received 952107008 of 1706796060 (55.8%), 56.7 MBs/sec
2025-01-10T13:35:53.9914100Z Received 1006632960 of 1706796060 (59.0%), 56.4 MBs/sec
2025-01-10T13:35:54.9927110Z Received 1073741824 of 1706796060 (62.9%), 56.8 MBs/sec
2025-01-10T13:35:55.9949160Z Received 1145044992 of 1706796060 (67.1%), 57.4 MBs/sec
2025-01-10T13:35:56.9942810Z Received 1212153856 of 1706796060 (71.0%), 57.7 MBs/sec
2025-01-10T13:35:57.9972420Z Received 1283457024 of 1706796060 (75.2%), 58.2 MBs/sec
2025-01-10T13:35:59.0091630Z Received 1350565888 of 1706796060 (79.1%), 58.5 MBs/sec
2025-01-10T13:36:00.0005600Z Received 1405091840 of 1706796060 (82.3%), 58.2 MBs/sec
2025-01-10T13:36:01.0133490Z Received 1463812096 of 1706796060 (85.8%), 58.1 MBs/sec
2025-01-10T13:36:02.0044340Z Received 1530920960 of 1706796060 (89.7%), 58.3 MBs/sec
2025-01-10T13:36:03.0075210Z Received 1585446912 of 1706796060 (92.9%), 58.1 MBs/sec
2025-01-10T13:36:04.0085990Z Received 1652555776 of 1706796060 (96.8%), 58.3 MBs/sec
2025-01-10T13:36:05.0122990Z Received 1706796060 of 1706796060 (100.0%), 58.0 MBs/sec
2025-01-10T13:36:05.0336340Z Cache Size: ~1628 MB (1706796060 B)
2025-01-10T13:36:05.0467620Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/181f2465-1d20-432e-984b-a831f409ebdf/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-10T13:36:13.4980670Z Cache restored successfully
2025-01-10T13:36:13.5657720Z Cache restored from key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-10T13:36:13.5859700Z ##[group]Run git lfs checkout
2025-01-10T13:36:13.5860090Z [36;1mgit lfs checkout[0m
2025-01-10T13:36:13.5940020Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:36:13.5940350Z env:
2025-01-10T13:36:13.5940580Z   CACHE_NUMBER: 0
2025-01-10T13:36:13.5941140Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:13.5941620Z   CODECOV_TOKEN: 
2025-01-10T13:36:13.5941750Z ##[endgroup]
2025-01-10T13:36:21.3359990Z Checking out LFS objects: 100% (204/204), 3.5 GB | 350 MB/s, done.
2025-01-10T13:36:29.1543660Z Prepare all required actions
2025-01-10T13:36:29.1544140Z Getting action download info
2025-01-10T13:36:29.3191770Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-10T13:36:30.4371580Z ##[group]Run ./.github/actions/setup_env
2025-01-10T13:36:30.4372040Z with:
2025-01-10T13:36:30.4372170Z   os-label: osx-arm64
2025-01-10T13:36:30.4372370Z env:
2025-01-10T13:36:30.4372670Z   CACHE_NUMBER: 0
2025-01-10T13:36:30.4373260Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:30.4374660Z   CODECOV_TOKEN: 
2025-01-10T13:36:30.4374880Z ##[endgroup]
2025-01-10T13:36:30.4404340Z ##[group]Run file_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-10T13:36:30.4404900Z [36;1mfile_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-10T13:36:30.4405330Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-10T13:36:30.4456410Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-10T13:36:30.4456660Z env:
2025-01-10T13:36:30.4456800Z   CACHE_NUMBER: 0
2025-01-10T13:36:30.4457300Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:30.4457790Z   CODECOV_TOKEN: 
2025-01-10T13:36:30.4457920Z ##[endgroup]
2025-01-10T13:36:30.5577150Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-10T13:36:30.5577390Z with:
2025-01-10T13:36:30.5577560Z   environment-file: conda-osx-arm64.lock
2025-01-10T13:36:30.5577910Z   cache-environment-key: 354e2cc8bd515676980814f312c10753c2dc4a43f483398b98b444c582fdd35f
2025-01-10T13:36:30.5578350Z   cache-downloads-key: 354e2cc8bd515676980814f312c10753c2dc4a43f483398b98b444c582fdd35f
2025-01-10T13:36:30.5578660Z   environment-name: tardis
2025-01-10T13:36:30.5578830Z   cache-environment: true
2025-01-10T13:36:30.5579030Z   cache-downloads: true
2025-01-10T13:36:30.5579180Z env:
2025-01-10T13:36:30.5579290Z   CACHE_NUMBER: 0
2025-01-10T13:36:30.5579750Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:30.5580220Z   CODECOV_TOKEN: 
2025-01-10T13:36:30.5580370Z ##[endgroup]
2025-01-10T13:36:30.8328100Z Will download micromamba to /Users/runner/micromamba-bin/micromamba
2025-01-10T13:36:30.8332030Z ##[group]Install micromamba
2025-01-10T13:36:31.5115330Z micromamba installed to /Users/runner/micromamba-bin/micromamba
2025-01-10T13:36:31.5118010Z ##[endgroup]
2025-01-10T13:36:31.5118640Z Adding conda-forge to condarc channels ...
2025-01-10T13:36:31.5166870Z ##[group]Initialize micromamba for bash.
2025-01-10T13:36:31.5185730Z [command]/Users/runner/micromamba-bin/micromamba shell init -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:31.5423560Z Modifying RC file "/Users/runner/.bash_profile"
2025-01-10T13:36:31.5425300Z Generating config for root prefix [1m"/Users/runner/micromamba"[0m
2025-01-10T13:36:31.5425840Z Setting mamba executable to: [1m"/Users/runner/micromamba-bin/micromamba"[0m
2025-01-10T13:36:31.5426490Z Adding (or replacing) the following in your "/Users/runner/.bash_profile" file
2025-01-10T13:36:31.5426730Z 
2025-01-10T13:36:31.5426800Z # >>> mamba initialize >>>
2025-01-10T13:36:31.5427050Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-10T13:36:31.5427360Z export MAMBA_EXE='/Users/runner/micromamba-bin/micromamba';
2025-01-10T13:36:31.5427680Z export MAMBA_ROOT_PREFIX='/Users/runner/micromamba';
2025-01-10T13:36:31.5428060Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-10T13:36:31.5428450Z if [ $? -eq 0 ]; then
2025-01-10T13:36:31.5428600Z     eval "$__mamba_setup"
2025-01-10T13:36:31.5429480Z else
2025-01-10T13:36:31.5429760Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-10T13:36:31.5430020Z fi
2025-01-10T13:36:31.5430150Z unset __mamba_setup
2025-01-10T13:36:31.5430300Z # <<< mamba initialize <<<
2025-01-10T13:36:31.5430410Z 
2025-01-10T13:36:31.5433870Z ##[endgroup]
2025-01-10T13:36:31.5434610Z ##[group]Restoring downloads from `/Users/runner/micromamba/pkgs` ...
2025-01-10T13:36:32.8756080Z Received 25165824 of 310634157 (8.1%), 24.0 MBs/sec
2025-01-10T13:36:33.8797270Z Received 83886080 of 310634157 (27.0%), 39.9 MBs/sec
2025-01-10T13:36:34.8776860Z Received 150994944 of 310634157 (48.6%), 47.9 MBs/sec
2025-01-10T13:36:35.8821040Z Received 205520896 of 310634157 (66.2%), 48.9 MBs/sec
2025-01-10T13:36:36.8826280Z Received 272629760 of 310634157 (87.8%), 51.9 MBs/sec
2025-01-10T13:36:37.4177060Z Cache Size: ~296 MB (310634157 B)
2025-01-10T13:36:37.4205590Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/8928ab19-9837-4952-8bf4-a80e4a8e4fbb/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-10T13:36:37.8851850Z Received 310634157 of 310634157 (100.0%), 49.3 MBs/sec
2025-01-10T13:36:37.9231740Z Cache restored successfully
2025-01-10T13:36:37.9265010Z Restored cache with key `354e2cc8bd515676980814f312c10753c2dc4a43f483398b98b444c582fdd35f-osx-arm64`
2025-01-10T13:36:37.9266600Z ##[endgroup]
2025-01-10T13:36:37.9372300Z ##[group]Restoring environment `tardis` from `/Users/runner/micromamba/envs/tardis` ...
2025-01-10T13:36:39.2912980Z Received 37748736 of 385976706 (9.8%), 36.0 MBs/sec
2025-01-10T13:36:40.2917250Z Received 100663296 of 385976706 (26.1%), 48.0 MBs/sec
2025-01-10T13:36:41.2917660Z Received 171966464 of 385976706 (44.6%), 54.6 MBs/sec
2025-01-10T13:36:42.2932890Z Received 226492416 of 385976706 (58.7%), 54.0 MBs/sec
2025-01-10T13:36:43.2942730Z Received 289406976 of 385976706 (75.0%), 55.2 MBs/sec
2025-01-10T13:36:44.2971310Z Received 360810882 of 385976706 (93.5%), 57.3 MBs/sec
2025-01-10T13:36:44.4624250Z Cache Size: ~368 MB (385976706 B)
2025-01-10T13:36:44.4684020Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/747a3bbe-b937-445c-9aa8-1b3cc3530182/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-10T13:36:45.3022780Z Received 385976706 of 385976706 (100.0%), 52.5 MBs/sec
2025-01-10T13:36:57.7432280Z Cache restored successfully
2025-01-10T13:36:57.7466430Z Restored cache with key `354e2cc8bd515676980814f312c10753c2dc4a43f483398b98b444c582fdd35f-osx-arm64-tardis-args-4f53cda-root-873f6fe-bin-[object Promise]-file-354e2cc8bd515676980814f312c10753c2dc4a43f483398b98b444c582fdd35f`
2025-01-10T13:36:57.7472140Z ##[endgroup]
2025-01-10T13:36:57.7473470Z Adding environment tardis to auto-activate bash ...
2025-01-10T13:36:57.7475490Z Generating micromamba run shell.
2025-01-10T13:36:57.7486240Z ##[endgroup]
2025-01-10T13:36:57.7493090Z Set environment variables.
2025-01-10T13:36:57.7595680Z ##[group]micromamba info
2025-01-10T13:36:57.7599140Z [command]/Users/runner/micromamba-bin/micromamba info -r /Users/runner/micromamba -n tardis
2025-01-10T13:36:58.2128760Z 
2025-01-10T13:36:58.2130100Z        libmamba version : 1.5.10
2025-01-10T13:36:58.2130640Z      micromamba version : 1.5.10
2025-01-10T13:36:58.2132150Z            curl version : libcurl/8.10.1 (OpenSSL/3.3.2) SecureTransport zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-10T13:36:58.2133110Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-10T13:36:58.2134550Z        envs directories : /Users/runner/micromamba/envs
2025-01-10T13:36:58.2135170Z           package cache : /Users/runner/micromamba/pkgs
2025-01-10T13:36:58.2135600Z                           /Users/runner/.mamba/pkgs
2025-01-10T13:36:58.2135910Z             environment : tardis
2025-01-10T13:36:58.2136310Z            env location : /Users/runner/micromamba/envs/tardis
2025-01-10T13:36:58.2141020Z       user config files : /Users/runner/.mambarc
2025-01-10T13:36:58.2141480Z  populated config files : /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:58.2141870Z        virtual packages : __unix=0=0
2025-01-10T13:36:58.2142100Z                           __osx=14.7.2=0
2025-01-10T13:36:58.2142470Z                           __archspec=1=arm64
2025-01-10T13:36:58.2142950Z                channels : https://conda.anaconda.org/conda-forge/osx-arm64
2025-01-10T13:36:58.2143300Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-10T13:36:58.2143650Z        base environment : /Users/runner/micromamba
2025-01-10T13:36:58.2143980Z                platform : osx-arm64
2025-01-10T13:36:58.2146390Z ##[endgroup]
2025-01-10T13:36:58.2146830Z ##[group]micromamba list
2025-01-10T13:36:58.2147380Z [command]/Users/runner/micromamba-bin/micromamba list -r /Users/runner/micromamba -n tardis
2025-01-10T13:36:58.5639050Z List of packages in environment: "/Users/runner/micromamba/envs/tardis"
2025-01-10T13:36:58.5639400Z 
2025-01-10T13:36:58.5639570Z   Name                           Version              Build                    Channel    
2025-01-10T13:36:58.5641130Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-10T13:36:58.5641640Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5642050Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5642460Z   appnope                        0.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5642840Z   argon2-cffi                    23.1.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5643460Z   argon2-cffi-bindings           21.2.0               py312h024a12e_5          conda-forge
2025-01-10T13:36:58.5643900Z   arrow                          1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5644410Z   astropy                        6.1.1                py312hbebd99a_1          conda-forge
2025-01-10T13:36:58.5644850Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5645360Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5647230Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5647670Z   async-lru                      2.0.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5648010Z   atk-1.0                        2.38.0               hd03087b_2               conda-forge
2025-01-10T13:36:58.5648430Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-10T13:36:58.5648830Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5649170Z   beautifulsoup4                 4.12.3               pyha770c72_1             conda-forge
2025-01-10T13:36:58.5649620Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5650060Z   blosc                          1.21.6               h7dd00d9_1               conda-forge
2025-01-10T13:36:58.5650390Z   brotli                         1.1.0                hd74edd7_2               conda-forge
2025-01-10T13:36:58.5650790Z   brotli-bin                     1.1.0                hd74edd7_2               conda-forge
2025-01-10T13:36:58.5651160Z   brotli-python                  1.1.0                py312hde4cb15_2          conda-forge
2025-01-10T13:36:58.5652510Z   bzip2                          1.0.8                h99b78c6_7               conda-forge
2025-01-10T13:36:58.5652930Z   c-ares                         1.28.1               h93a5062_0               conda-forge
2025-01-10T13:36:58.5653400Z   c-blosc2                       2.15.2               h9cbb436_1               conda-forge
2025-01-10T13:36:58.5654280Z   ca-certificates                2024.12.14           hf0a4a13_0               conda-forge
2025-01-10T13:36:58.5654920Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-10T13:36:58.5655310Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-10T13:36:58.5655710Z   cairo                          1.18.0               hc6c324b_2               conda-forge
2025-01-10T13:36:58.5656060Z   certifi                        2024.12.14           pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5656670Z   cffi                           1.16.0               py312h8e38eb3_0          conda-forge
2025-01-10T13:36:58.5657610Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5658190Z   click                          8.1.7                unix_pyh707e725_1        conda-forge
2025-01-10T13:36:58.5658540Z   codespell                      2.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5659000Z   colorama                       0.4.6                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5659360Z   comm                           0.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5659840Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-10T13:36:58.5660220Z   contourpy                      1.2.1                py312h0fef576_0          conda-forge
2025-01-10T13:36:58.5660610Z   coverage                       7.5.3                py312h7e5086c_0          conda-forge
2025-01-10T13:36:58.5660940Z   cycler                         0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5661350Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-10T13:36:58.5661800Z   debugpy                        1.8.1                py312h20a0b95_0          conda-forge
2025-01-10T13:36:58.5662260Z   decorator                      5.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5662700Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5663290Z   docutils                       0.20.1               py312h81bd7bf_3          conda-forge
2025-01-10T13:36:58.5663690Z   dot2tex                        2.11.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5664060Z   entrypoints                    0.4                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5664510Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:58.5664980Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5665430Z   expat                          2.6.2                hebf3989_0               conda-forge
2025-01-10T13:36:58.5665820Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-10T13:36:58.5666270Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-10T13:36:58.5666650Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-10T13:36:58.5667050Z   font-ttf-ubuntu                0.83                 h77eed37_3               conda-forge
2025-01-10T13:36:58.5667380Z   fontconfig                     2.14.2               h82840c6_0               conda-forge
2025-01-10T13:36:58.5667760Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-10T13:36:58.5668120Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-10T13:36:58.5668640Z   fonttools                      4.53.0               py312h7e5086c_0          conda-forge
2025-01-10T13:36:58.5669080Z   fqdn                           1.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5669600Z   freetype                       2.12.1               hadb7bae_2               conda-forge
2025-01-10T13:36:58.5670010Z   fribidi                        1.0.10               h27ca646_0               conda-forge
2025-01-10T13:36:58.5670320Z   future                         1.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5670740Z   gdk-pixbuf                     2.42.12              h7ddc832_0               conda-forge
2025-01-10T13:36:58.5671080Z   gettext                        0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5671690Z   gettext-tools                  0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5672550Z   giflib                         5.2.2                h93a5062_0               conda-forge
2025-01-10T13:36:58.5672910Z   git-lfs                        3.5.1                h40ddcf5_1               conda-forge
2025-01-10T13:36:58.5673290Z   gmp                            6.3.0                h7bae524_2               conda-forge
2025-01-10T13:36:58.5673670Z   gmpy2                          2.1.5                py312h524cf62_3          conda-forge
2025-01-10T13:36:58.5674220Z   graphite2                      1.3.13               hebf3989_1003            conda-forge
2025-01-10T13:36:58.5674590Z   graphviz                       11.0.0               h9bb9bc9_0               conda-forge
2025-01-10T13:36:58.5674980Z   gtk2                           2.24.33              h7895bb2_4               conda-forge
2025-01-10T13:36:58.5675800Z   gts                            0.7.6                he42f4ea_4               conda-forge
2025-01-10T13:36:58.5676240Z   h11                            0.14.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5676630Z   h2                             4.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5677000Z   h5py                           3.11.0               nompi_py312h3cd0824_103  conda-forge
2025-01-10T13:36:58.5677400Z   harfbuzz                       8.5.0                h1836168_0               conda-forge
2025-01-10T13:36:58.5677710Z   hdf5                           1.14.3               nompi_hec07895_105       conda-forge
2025-01-10T13:36:58.5678140Z   hpack                          4.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5678710Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5679150Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5679510Z   hyperframe                     6.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5679880Z   icu                            73.2                 hc8870d7_0               conda-forge
2025-01-10T13:36:58.5680270Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5680800Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5681180Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-10T13:36:58.5681600Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-10T13:36:58.5682120Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5682500Z   iniconfig                      2.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5682920Z   ipykernel                      6.29.4               pyh57ce528_0             conda-forge
2025-01-10T13:36:58.5683400Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-10T13:36:58.5683820Z   ipython_genutils               0.2.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:58.5684270Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5685130Z   isoduration                    20.11.0              pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5685550Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5685920Z   jinja2                         3.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5686310Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5686660Z   jsonpointer                    3.0.0                py312h81bd7bf_1          conda-forge
2025-01-10T13:36:58.5687090Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5687660Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5688110Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5688520Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5688920Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5689310Z   jupyter_core                   5.7.2                pyh31011fe_1             conda-forge
2025-01-10T13:36:58.5689700Z   jupyter_events                 0.10.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5690080Z   jupyter_server                 2.14.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5690500Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5690910Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5691260Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:58.5691680Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5692060Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5692470Z   kiwisolver                     1.4.5                py312h6142ec9_2          conda-forge
2025-01-10T13:36:58.5692780Z   krb5                           1.21.2               h92f50d5_0               conda-forge
2025-01-10T13:36:58.5693130Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-10T13:36:58.5693500Z   lcms2                          2.16                 ha0e7c42_0               conda-forge
2025-01-10T13:36:58.5693850Z   lerc                           4.0.0                h9a09cb3_0               conda-forge
2025-01-10T13:36:58.5694150Z   libaec                         1.1.3                hebf3989_0               conda-forge
2025-01-10T13:36:58.5694520Z   libasprintf                    0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5694990Z   libasprintf-devel              0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5695370Z   libblas                        3.9.0                24_osxarm64_openblas     conda-forge
2025-01-10T13:36:58.5695740Z   libbrotlicommon                1.1.0                hd74edd7_2               conda-forge
2025-01-10T13:36:58.5696180Z   libbrotlidec                   1.1.0                hd74edd7_2               conda-forge
2025-01-10T13:36:58.5696720Z   libbrotlienc                   1.1.0                hd74edd7_2               conda-forge
2025-01-10T13:36:58.5697080Z   libcblas                       3.9.0                24_osxarm64_openblas     conda-forge
2025-01-10T13:36:58.5697530Z   libcurl                        8.8.0                h7b6f9a7_0               conda-forge
2025-01-10T13:36:58.5697880Z   libcxx                         19.1.6               ha82da77_1               conda-forge
2025-01-10T13:36:58.5698250Z   libdeflate                     1.20                 h93a5062_0               conda-forge
2025-01-10T13:36:58.5722500Z   libedit                        3.1.20191231         hc8eb9b7_2               conda-forge
2025-01-10T13:36:58.5723400Z   libev                          4.33                 h93a5062_2               conda-forge
2025-01-10T13:36:58.5723790Z   libexpat                       2.6.2                hebf3989_0               conda-forge
2025-01-10T13:36:58.5724110Z   libffi                         3.4.2                h3422bc3_5               conda-forge
2025-01-10T13:36:58.5724420Z   libgd                          2.3.3                hfdf3952_9               conda-forge
2025-01-10T13:36:58.5724770Z   libgettextpo                   0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5725120Z   libgettextpo-devel             0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5725980Z   libgfortran                    5.0.0                13_2_0_hd922786_3        conda-forge
2025-01-10T13:36:58.5726360Z   libgfortran5                   13.2.0               hf226fd6_3               conda-forge
2025-01-10T13:36:58.5726690Z   libglib                        2.80.2               h59d46d9_1               conda-forge
2025-01-10T13:36:58.5727030Z   libiconv                       1.17                 h0d3ecfb_2               conda-forge
2025-01-10T13:36:58.5727440Z   libintl                        0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5727760Z   libintl-devel                  0.22.5               h8414b35_3               conda-forge
2025-01-10T13:36:58.5728140Z   libjpeg-turbo                  3.0.0                hb547adb_1               conda-forge
2025-01-10T13:36:58.5728600Z   liblapack                      3.9.0                24_osxarm64_openblas     conda-forge
2025-01-10T13:36:58.5729060Z   libllvm14                      14.0.6               hd1a9a77_4               conda-forge
2025-01-10T13:36:58.5729430Z   libnghttp2                     1.58.0               ha4dd798_1               conda-forge
2025-01-10T13:36:58.5729810Z   libopenblas                    0.3.27               openmp_h517c56d_1        conda-forge
2025-01-10T13:36:58.5730190Z   libpng                         1.6.43               h091b4b1_0               conda-forge
2025-01-10T13:36:58.5730550Z   librsvg                        2.58.1               hbc281fb_0               conda-forge
2025-01-10T13:36:58.5730890Z   libsodium                      1.0.18               h27ca646_1               conda-forge
2025-01-10T13:36:58.5731390Z   libsqlite                      3.46.0               hfb93653_0               conda-forge
2025-01-10T13:36:58.5731780Z   libssh2                        1.11.0               h7a5bd25_0               conda-forge
2025-01-10T13:36:58.5732140Z   libtiff                        4.6.0                h07db509_3               conda-forge
2025-01-10T13:36:58.5732540Z   libwebp                        1.4.0                h54798ee_0               conda-forge
2025-01-10T13:36:58.5732860Z   libwebp-base                   1.4.0                h93a5062_0               conda-forge
2025-01-10T13:36:58.5733220Z   libxcb                         1.16                 hc9fafa5_1               conda-forge
2025-01-10T13:36:58.5733610Z   libxml2                        2.12.7               h9a80f22_3               conda-forge
2025-01-10T13:36:58.5733930Z   libxslt                        1.1.39               h223e5b9_0               conda-forge
2025-01-10T13:36:58.5734330Z   libzlib                        1.3.1                h8359307_2               conda-forge
2025-01-10T13:36:58.5734670Z   llvm-openmp                    18.1.7               hde57baf_0               conda-forge
2025-01-10T13:36:58.5735070Z   llvmlite                       0.43.0               py312ha9ca408_1          conda-forge
2025-01-10T13:36:58.5735410Z   lxml                           5.2.2                py312h0e5ab22_0          conda-forge
2025-01-10T13:36:58.5735760Z   lz4-c                          1.10.0               h286801f_1               conda-forge
2025-01-10T13:36:58.5736090Z   markupsafe                     2.1.5                py312h024a12e_1          conda-forge
2025-01-10T13:36:58.5737220Z   matplotlib-base                3.8.4                py312h4479663_2          conda-forge
2025-01-10T13:36:58.5737680Z   matplotlib-inline              0.1.7                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5737990Z   mistune                        3.0.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5738260Z   mpc                            1.3.1                h8f1351a_1               conda-forge
2025-01-10T13:36:58.5738560Z   mpfr                           4.2.1                hb693164_3               conda-forge
2025-01-10T13:36:58.5738940Z   mpmath                         1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5739430Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-10T13:36:58.5739810Z   mypy_extensions                1.0.0                pyha770c72_1             conda-forge
2025-01-10T13:36:58.5740160Z   nbclassic                      1.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5740540Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5740870Z   nbconvert                      7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T13:36:58.5741250Z   nbconvert-core                 7.16.4               pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:58.5741640Z   nbconvert-pandoc               7.16.4               hd8ed1ab_3               conda-forge
2025-01-10T13:36:58.5742000Z   nbformat                       5.10.4               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5742320Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5742660Z   ncurses                        6.5                  h7bae524_1               conda-forge
2025-01-10T13:36:58.5743000Z   nest-asyncio                   1.6.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5743440Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5743760Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5744110Z   notebook-shim                  0.2.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5744430Z   numba                          0.60.0               py312h41cea2d_0          conda-forge
2025-01-10T13:36:58.5744750Z   numexpr                        2.10.0               py312h8ae5369_0          conda-forge
2025-01-10T13:36:58.5745010Z   numpy                          2.0.2                py312h94ee1e1_1          conda-forge
2025-01-10T13:36:58.5745370Z   numpydoc                       1.7.0                pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:58.5745650Z   openjpeg                       2.5.2                h9f1df11_0               conda-forge
2025-01-10T13:36:58.5745970Z   openssl                        3.4.0                h81ee809_1               conda-forge
2025-01-10T13:36:58.5746240Z   overrides                      7.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5746520Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5746790Z   pandas                         2.2.2                py312h8ae5369_1          conda-forge
2025-01-10T13:36:58.5747050Z   pandoc                         3.2.1                hce30654_0               conda-forge
2025-01-10T13:36:58.5747370Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5747650Z   pango                          1.54.0               h5cb9fbc_0               conda-forge
2025-01-10T13:36:58.5747910Z   parso                          0.8.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5748190Z   pathspec                       0.12.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5748590Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5748850Z   pcre2                          10.44                h297a79d_2               conda-forge
2025-01-10T13:36:58.5749120Z   pexpect                        4.9.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5749400Z   pickleshare                    0.7.5                pyhd8ed1ab_1004          conda-forge
2025-01-10T13:36:58.5749670Z   pillow                         10.3.0               py312h39b1d8d_1          conda-forge
2025-01-10T13:36:58.5749930Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5750450Z   pixman                         0.43.4               hebf3989_0               conda-forge
2025-01-10T13:36:58.5750740Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:58.5751060Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5751350Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5751650Z   pluggy                         1.5.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5751930Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5752240Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-10T13:36:58.5752530Z   psutil                         5.9.8                py312he37b823_0          conda-forge
2025-01-10T13:36:58.5752810Z   pthread-stubs                  0.4                  hd74edd7_1002            conda-forge
2025-01-10T13:36:58.5753100Z   ptyprocess                     0.7.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5753380Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5753650Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5753930Z   pybtex                         0.24.0               pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:58.5754210Z   pybtex-docutils                1.0.3                py312h81bd7bf_2          conda-forge
2025-01-10T13:36:58.5754500Z   pycparser                      2.22                 pyh29332c3_1             conda-forge
2025-01-10T13:36:58.5754770Z   pyerfa                         2.0.1.4              py312h755e627_2          conda-forge
2025-01-10T13:36:58.5755040Z   pygments                       2.18.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5755330Z   pygraphviz                     1.13                 py312h5f4d302_1          conda-forge
2025-01-10T13:36:58.5755610Z   pyobjc-core                    10.3.1               py312hd24fc31_1          conda-forge
2025-01-10T13:36:58.5755930Z   pyobjc-framework-cocoa         10.3.1               py312hd24fc31_1          conda-forge
2025-01-10T13:36:58.5756240Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5756520Z   pysocks                        1.7.1                pyha55dd90_7             conda-forge
2025-01-10T13:36:58.5756790Z   pytables                       3.10.2               py312h2ca37b8_0          conda-forge
2025-01-10T13:36:58.5757060Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5757340Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5757650Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5757960Z   pytest-html                    4.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5758260Z   pytest-metadata                3.1.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5758770Z   python                         3.12.4               h30c5eda_0_cpython       conda-forge
2025-01-10T13:36:58.5759090Z   python-dateutil                2.9.0.post0          pyhff2d567_1             conda-forge
2025-01-10T13:36:58.5759420Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5759760Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5760080Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5760360Z   python_abi                     3.12                 5_cp312                  conda-forge
2025-01-10T13:36:58.5760760Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5761020Z   pyyaml                         6.0.1                py312h02f2b3b_1          conda-forge
2025-01-10T13:36:58.5761290Z   pyzmq                          26.0.3               py312hfa13136_0          conda-forge
2025-01-10T13:36:58.5761560Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-10T13:36:58.5761850Z   radioactivedecay               0.5.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5762150Z   readline                       8.2                  h92ec313_1               conda-forge
2025-01-10T13:36:58.5762420Z   recommonmark                   0.7.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5762710Z   referencing                    0.35.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5762990Z   requests                       2.32.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5763290Z   rfc3339-validator              0.1.4                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5763600Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-10T13:36:58.5763900Z   rpds-py                        0.18.1               py312h552d48e_0          conda-forge
2025-01-10T13:36:58.5764170Z   ruff                           0.4.9                py312h3402d49_0          conda-forge
2025-01-10T13:36:58.5764430Z   scipy                          1.13.1               py312h14ffa8f_0          conda-forge
2025-01-10T13:36:58.5764710Z   send2trash                     1.8.3                pyh31c8845_1             conda-forge
2025-01-10T13:36:58.5764990Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5765280Z   setuptools-scm                 8.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5765580Z   setuptools_scm                 8.1.0                hd8ed1ab_1               conda-forge
2025-01-10T13:36:58.5765850Z   six                            1.16.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5766130Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5766400Z   snappy                         1.2.1                h98b9ce2_1               conda-forge
2025-01-10T13:36:58.5766680Z   sniffio                        1.3.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5766980Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5767280Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5767560Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5767850Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5768180Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-10T13:36:58.5768500Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5768930Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5769270Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5769590Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-10T13:36:58.5769910Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-10T13:36:58.5770270Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5770620Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5771070Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5771420Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5771770Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5772100Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5772430Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5772780Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5773110Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5773380Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-10T13:36:58.5773650Z   tabulate                       0.9.0                pyhd8ed1ab_2             conda-forge
2025-01-10T13:36:58.5773920Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5774200Z   terminado                      0.18.1               pyh31c8845_0             conda-forge
2025-01-10T13:36:58.5774480Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5774740Z   tk                             8.6.13               h5083fa2_1               conda-forge
2025-01-10T13:36:58.5774990Z   toml                           0.10.2               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5775240Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5775500Z   tornado                        6.4.1                py312h024a12e_1          conda-forge
2025-01-10T13:36:58.5775770Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5776040Z   traitlets                      5.14.3               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5776320Z   typed-ast                      1.5.5                py312h02f2b3b_1          conda-forge
2025-01-10T13:36:58.5776630Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5776970Z   typing-extensions              4.12.2               hd8ed1ab_1               conda-forge
2025-01-10T13:36:58.5777290Z   typing_extensions              4.12.2               pyha770c72_1             conda-forge
2025-01-10T13:36:58.5777580Z   typing_utils                   0.1.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5777870Z   tzdata                         2024a                h8827d51_1               conda-forge
2025-01-10T13:36:58.5778150Z   uri-template                   1.3.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5778430Z   urllib3                        2.2.2                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5778700Z   wcwidth                        0.2.13               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5778970Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5779340Z   webencodings                   0.5.1                pyhd8ed1ab_3             conda-forge
2025-01-10T13:36:58.5779640Z   websocket-client               1.8.0                pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5779930Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-10T13:36:58.5780220Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5780520Z   xorg-libxau                    1.0.11               hd74edd7_1               conda-forge
2025-01-10T13:36:58.5780820Z   xorg-libxdmcp                  1.1.3                hd74edd7_2               conda-forge
2025-01-10T13:36:58.5781170Z   xz                             5.2.6                h57fd34a_0               conda-forge
2025-01-10T13:36:58.5781420Z   yaml                           0.2.5                h3422bc3_2               conda-forge
2025-01-10T13:36:58.5781680Z   zeromq                         4.3.5                hcc0f68c_4               conda-forge
2025-01-10T13:36:58.5781950Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-10T13:36:58.5782200Z   zlib                           1.3.1                h8359307_2               conda-forge
2025-01-10T13:36:58.5782460Z   zlib-ng                        2.2.3                h13dfb9a_0               conda-forge
2025-01-10T13:36:58.5782730Z   zstandard                      0.23.0               py312h15fbf35_1          conda-forge
2025-01-10T13:36:58.5782990Z   zstd                           1.5.6                hb46c0d2_0               conda-forge
2025-01-10T13:36:58.5783500Z ##[endgroup]
2025-01-10T13:36:58.5833430Z ##[group]Run pip install -e . --user
2025-01-10T13:36:58.5833650Z [36;1mpip install -e . --user[0m
2025-01-10T13:36:58.7707970Z shell: /bin/bash -l {0}
2025-01-10T13:36:58.7708170Z env:
2025-01-10T13:36:58.7708500Z   CACHE_NUMBER: 0
2025-01-10T13:36:58.7709060Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:36:58.7709780Z   CODECOV_TOKEN: 
2025-01-10T13:36:58.7710050Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-10T13:36:58.7724850Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-10T13:36:58.7725260Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:36:58.7725510Z ##[endgroup]
2025-01-10T13:36:59.7780880Z Obtaining file:///Users/runner/work/tardis/tardis
2025-01-10T13:36:59.7810880Z   Installing build dependencies: started
2025-01-10T13:37:02.3021690Z   Installing build dependencies: finished with status 'done'
2025-01-10T13:37:02.3028720Z   Checking if build backend supports build_editable: started
2025-01-10T13:37:02.4107260Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-10T13:37:02.4125320Z   Getting requirements to build editable: started
2025-01-10T13:37:02.8539780Z   Getting requirements to build editable: finished with status 'done'
2025-01-10T13:37:02.8552260Z   Preparing editable metadata (pyproject.toml): started
2025-01-10T13:37:03.2788450Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-10T13:37:03.3204820Z Requirement already satisfied: astropy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-10T13:37:03.3456730Z Requirement already satisfied: numpy>=1.23 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.2)
2025-01-10T13:37:03.3462480Z Requirement already satisfied: pyerfa>=2.0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-10T13:37:03.3469220Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-10T13:37:03.3474040Z Requirement already satisfied: PyYAML>=3.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-10T13:37:03.3479770Z Requirement already satisfied: packaging>=19.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-10T13:37:03.3533600Z Building wheels for collected packages: tardis
2025-01-10T13:37:03.3540200Z   Building editable for tardis (pyproject.toml): started
2025-01-10T13:37:04.0183460Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-10T13:37:04.0191460Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8878 sha256=df2298052936f362c123aaefd7facfd5367ee8c84fcfb8cf332aa4d1d006ad6b
2025-01-10T13:37:04.0193080Z   Stored in directory: /private/var/folders/ml/x_tvfgn50_s7p67dm1ypcqqm0000gn/T/pip-ephem-wheel-cache-7dm0c0jq/wheels/bb/4f/6a/0829b918c1c10bc28535ce7f14be21eee54375bdd9cd0c306a
2025-01-10T13:37:04.0220020Z Successfully built tardis
2025-01-10T13:37:04.5786610Z Installing collected packages: tardis
2025-01-10T13:37:04.5853890Z Successfully installed tardis-0.0.0
2025-01-10T13:37:04.8665640Z ##[group]Run pip install qgridnext
2025-01-10T13:37:04.8665910Z [36;1mpip install qgridnext[0m
2025-01-10T13:37:04.8760610Z shell: /bin/bash -l {0}
2025-01-10T13:37:04.8760840Z env:
2025-01-10T13:37:04.8761000Z   CACHE_NUMBER: 0
2025-01-10T13:37:04.8761780Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:37:04.8762340Z   CODECOV_TOKEN: 
2025-01-10T13:37:04.8762510Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-10T13:37:04.8762800Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-10T13:37:04.8763480Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:37:04.8763750Z ##[endgroup]
2025-01-10T13:37:05.5290020Z Collecting qgridnext
2025-01-10T13:37:05.5665810Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-10T13:37:05.5829410Z Requirement already satisfied: pandas>=0.20.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-10T13:37:05.5839280Z Requirement already satisfied: ipywidgets>=7.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-10T13:37:05.5841860Z Requirement already satisfied: numpy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.0.2)
2025-01-10T13:37:05.5848510Z Requirement already satisfied: traitlets in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-10T13:37:05.5903080Z Requirement already satisfied: comm>=0.1.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T13:37:05.5907820Z Requirement already satisfied: ipython-genutils~=0.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-10T13:37:05.5916480Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-10T13:37:05.5925770Z Requirement already satisfied: ipython>=4.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-10T13:37:05.5934430Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-10T13:37:05.6223940Z Requirement already satisfied: python-dateutil>=2.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0.post0)
2025-01-10T13:37:05.6233130Z Requirement already satisfied: pytz>=2020.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T13:37:05.6238810Z Requirement already satisfied: tzdata>=2022.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-10T13:37:05.6438360Z Requirement already satisfied: decorator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-10T13:37:05.6449120Z Requirement already satisfied: jedi>=0.16 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-10T13:37:05.6454330Z Requirement already satisfied: matplotlib-inline in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-10T13:37:05.6460100Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-10T13:37:05.6465500Z Requirement already satisfied: pygments>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-10T13:37:05.6471110Z Requirement already satisfied: stack-data in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-10T13:37:05.6482610Z Requirement already satisfied: pexpect>4.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-10T13:37:05.6509330Z Requirement already satisfied: six>=1.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-10T13:37:05.6546170Z Requirement already satisfied: notebook>=4.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-10T13:37:05.6665580Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-10T13:37:05.6764220Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-10T13:37:05.6866080Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-10T13:37:05.6968080Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T13:37:05.7070050Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-10T13:37:05.7171820Z Requirement already satisfied: tornado>=6.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-10T13:37:05.7274200Z Requirement already satisfied: ptyprocess>=0.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-10T13:37:05.7376000Z Requirement already satisfied: wcwidth in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-10T13:37:05.7477880Z Requirement already satisfied: executing>=1.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-10T13:37:05.7579850Z Requirement already satisfied: asttokens>=2.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-10T13:37:05.7700660Z Requirement already satisfied: pure-eval in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-10T13:37:05.7802600Z Requirement already satisfied: anyio>=3.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-10T13:37:05.7904780Z Requirement already satisfied: argon2-cffi>=21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-10T13:37:05.8007210Z Requirement already satisfied: jinja2>=3.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-10T13:37:05.8117730Z Requirement already satisfied: jupyter-client>=7.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-10T13:37:05.8219800Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-10T13:37:05.8321920Z Requirement already satisfied: jupyter-events>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T13:37:05.8424280Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-10T13:37:05.8526320Z Requirement already satisfied: nbconvert>=6.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-10T13:37:05.8628330Z Requirement already satisfied: nbformat>=5.3.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-10T13:37:05.8730820Z Requirement already satisfied: overrides>=5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-10T13:37:05.8832870Z Requirement already satisfied: packaging>=22.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-10T13:37:05.8941660Z Requirement already satisfied: prometheus-client>=0.9 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-10T13:37:05.9043750Z Requirement already satisfied: pyzmq>=24 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-10T13:37:05.9145810Z Requirement already satisfied: send2trash>=1.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-10T13:37:05.9247960Z Requirement already satisfied: terminado>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T13:37:05.9350350Z Requirement already satisfied: websocket-client>=1.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-10T13:37:05.9452580Z Requirement already satisfied: async-lru>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-10T13:37:05.9555360Z Requirement already satisfied: httpx>=0.25.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-10T13:37:05.9658000Z Requirement already satisfied: ipykernel>=6.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-10T13:37:05.9760030Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-10T13:37:05.9862160Z Requirement already satisfied: setuptools>=40.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-10T13:37:05.9964160Z Requirement already satisfied: babel>=2.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-10T13:37:06.0066260Z Requirement already satisfied: json5>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-10T13:37:06.0168280Z Requirement already satisfied: jsonschema>=4.18.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-10T13:37:06.0270310Z Requirement already satisfied: requests>=2.31 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-10T13:37:06.0369790Z Requirement already satisfied: idna>=2.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-10T13:37:06.0372250Z Requirement already satisfied: sniffio>=1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-10T13:37:06.0373520Z Requirement already satisfied: argon2-cffi-bindings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-10T13:37:06.0374800Z Requirement already satisfied: certifi in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.12.14)
2025-01-10T13:37:06.0375990Z Requirement already satisfied: httpcore==1.* in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-10T13:37:06.0377200Z Requirement already satisfied: h11<0.15,>=0.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-10T13:37:06.0378390Z Requirement already satisfied: appnope in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-10T13:37:06.0379980Z Requirement already satisfied: debugpy>=1.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-10T13:37:06.0381440Z Requirement already satisfied: nest-asyncio in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-10T13:37:06.0382630Z Requirement already satisfied: psutil in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-10T13:37:06.0383840Z Requirement already satisfied: MarkupSafe>=2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-10T13:37:06.0385100Z Requirement already satisfied: attrs>=22.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-10T13:37:06.0386550Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-10T13:37:06.0387820Z Requirement already satisfied: referencing>=0.28.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-10T13:37:06.0389070Z Requirement already satisfied: rpds-py>=0.7.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-10T13:37:06.0390320Z Requirement already satisfied: platformdirs>=2.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-10T13:37:06.0391580Z Requirement already satisfied: python-json-logger>=2.0.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-10T13:37:06.0392820Z Requirement already satisfied: pyyaml>=5.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-10T13:37:06.0394060Z Requirement already satisfied: rfc3339-validator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-10T13:37:06.0395330Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-10T13:37:06.0396640Z Requirement already satisfied: beautifulsoup4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-10T13:37:06.0397880Z Requirement already satisfied: bleach!=5.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-10T13:37:06.0399260Z Requirement already satisfied: defusedxml in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-10T13:37:06.0400850Z Requirement already satisfied: jupyterlab-pygments in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-10T13:37:06.0402440Z Requirement already satisfied: mistune<4,>=2.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-10T13:37:06.0403750Z Requirement already satisfied: nbclient>=0.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-10T13:37:06.0405010Z Requirement already satisfied: pandocfilters>=1.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-10T13:37:06.0406260Z Requirement already satisfied: tinycss2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:37:06.0407470Z Requirement already satisfied: fastjsonschema>=2.15 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-10T13:37:06.0408730Z Requirement already satisfied: charset_normalizer<4,>=2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-10T13:37:06.0409980Z Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-10T13:37:06.0411230Z Requirement already satisfied: webencodings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-10T13:37:06.0782010Z Requirement already satisfied: fqdn in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-10T13:37:06.0794200Z Requirement already satisfied: isoduration in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-10T13:37:06.0795630Z Requirement already satisfied: jsonpointer>1.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-10T13:37:06.0797030Z Requirement already satisfied: uri-template in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:37:06.0798800Z Requirement already satisfied: webcolors>=1.11 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-10T13:37:06.1604000Z Requirement already satisfied: cffi>=1.0.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-10T13:37:06.1706310Z Requirement already satisfied: soupsieve>1.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-10T13:37:06.2115930Z Requirement already satisfied: pycparser in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-10T13:37:06.2519260Z Requirement already satisfied: arrow>=0.15.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-10T13:37:06.2726690Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-10T13:37:06.2951290Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-10T13:37:06.3437870Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 26.5 MB/s eta 0:00:00
2025-01-10T13:37:06.9436640Z Installing collected packages: qgridnext
2025-01-10T13:37:06.9870010Z Successfully installed qgridnext-2.0.4
2025-01-10T13:37:07.1993170Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-10T13:37:07.1994170Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-10T13:37:07.2046230Z shell: /bin/bash -l {0}
2025-01-10T13:37:07.2046410Z env:
2025-01-10T13:37:07.2046620Z   CACHE_NUMBER: 0
2025-01-10T13:37:07.2047120Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-10T13:37:07.2047640Z   CODECOV_TOKEN: 
2025-01-10T13:37:07.2047810Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-10T13:37:07.2048070Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-10T13:37:07.2048410Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:37:07.2048670Z ##[endgroup]
2025-01-10T13:37:19.9270370Z ============================= test session starts ==============================
2025-01-10T13:37:19.9270910Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-10T13:37:19.9271320Z rootdir: /Users/runner/work/tardis/tardis
2025-01-10T13:37:19.9271600Z configfile: pyproject.toml
2025-01-10T13:37:19.9272040Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-01-10T13:37:19.9272460Z collected 1796 items / 2 deselected / 1794 selected
2025-01-10T13:37:19.9272680Z 
2025-01-10T13:37:23.1268430Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-10T13:37:24.6778580Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-10T13:37:26.2009220Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-10T13:37:27.2451000Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-10T13:37:27.2552780Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-10T13:37:28.2350270Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-10T13:37:28.4834520Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-10T13:37:28.4843750Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-10T13:37:31.6622680Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-10T13:37:31.6705800Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-10T13:37:31.6876050Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-10T13:38:01.0549320Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-10T13:38:01.0823180Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-10T13:38:01.0970350Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-10T13:38:01.1250760Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-10T13:38:01.1443600Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-10T13:38:01.3844380Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-10T13:38:01.9396470Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-10T13:38:01.9624300Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-10T13:38:02.0971690Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-10T13:38:02.1012990Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-10T13:38:28.5174860Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-10T13:38:29.2230390Z ............                                                             [ 10%]
2025-01-10T13:38:31.4489520Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-10T13:38:31.4798300Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-10T13:38:32.6284130Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-10T13:38:33.7969080Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-10T13:38:35.5801730Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-01-10T13:38:37.7785850Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-10T13:39:22.4125060Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-10T13:39:33.0462210Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-10T13:39:35.0439020Z tardis/plasma/tests/test_complete_plasmas.py ...........FFF..FFF..s..... [ 13%]
2025-01-10T13:39:38.5586620Z sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-01-10T13:39:41.3467450Z F..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss.... [ 22%]
2025-01-10T13:39:46.4044430Z ........s...FFF..FFF.ss.....sFF.F....ss............s...FFF..FFF.ss.....s [ 26%]
2025-01-10T13:39:50.1609570Z FF.F....ss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-01-10T13:39:51.9846820Z ..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sFssFssssss..... [ 34%]
2025-01-10T13:39:56.3387570Z .......s...FFF..FFF.ss.....sFF.Fssssss............s...FFF..FFF.ss.....sF [ 38%]
2025-01-10T13:39:59.8623640Z F.Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF. [ 42%]
2025-01-10T13:40:03.5356190Z .FFF.ss.....sFF.Fssssss............s...FFF..FFF.s.....FFFF.Fssssss...... [ 46%]
2025-01-10T13:40:05.8865540Z ......s...FFF..FFF.s.....FFFF.Fssssss............s...FFF..FFF.s.....FFFF [ 50%]
2025-01-10T13:40:08.8657760Z .Fssssss............s...FFF..FFF.ss.....sFF.Fssssss............s...FFF.. [ 54%]
2025-01-10T13:40:11.9501890Z FFF.ss.....sFF.Fssssss................FFF..FFF..s.....sFF.Fssss......... [ 58%]
2025-01-10T13:40:12.8320930Z .........FFF..FFF..s.....sFF.Fssss.......                                [ 60%]
2025-01-10T13:40:13.3346290Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-01-10T13:40:13.3438680Z ......                                                                   [ 62%]
2025-01-10T13:40:13.7600780Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-10T13:41:59.8510260Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-10T13:41:59.8536430Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-10T13:42:15.1613810Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-10T13:42:24.0084760Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-10T13:42:24.4825030Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-10T13:42:30.2387560Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-01-10T13:42:30.7439030Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-10T13:42:31.0061840Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-10T13:42:31.0101850Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-10T13:42:31.7486790Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-10T13:42:31.7596540Z ..........                                                               [ 69%]
2025-01-10T13:42:31.8645810Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-10T13:42:31.8834530Z .........                                                                [ 72%]
2025-01-10T13:42:46.3371400Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-01-10T13:43:32.9101470Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-01-10T13:44:59.1831710Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-01-10T13:44:59.2233020Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-10T13:45:01.0516630Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-10T13:45:05.2042680Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-10T13:45:05.3313500Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-10T13:45:05.3407530Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-10T13:45:05.3633950Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-10T13:45:12.4553140Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-10T13:45:12.4643880Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-10T13:45:14.8809480Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-10T13:45:15.1949990Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-10T13:45:15.8333770Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-10T13:45:15.9199790Z XX.........                                                              [ 84%]
2025-01-10T13:45:15.9442820Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-10T13:45:16.1317730Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-10T13:45:16.3689450Z .....                                                                    [ 85%]
2025-01-10T13:45:25.2009260Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-01-10T13:45:25.2222100Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-10T13:45:25.2245890Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-10T13:45:26.9413200Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-10T13:45:26.9591560Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-10T13:45:30.0562640Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-10T13:45:30.0563850Z                                                                          [ 86%]
2025-01-10T13:45:30.6538440Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-10T13:45:32.4423060Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-10T13:45:34.2777380Z ......                                                                   [ 88%]
2025-01-10T13:45:38.2306990Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-01-10T13:45:42.8486480Z ..F..FF..FF.F........FF..FF.F                                            [ 91%]
2025-01-10T13:45:46.0618990Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-10T13:45:53.5749830Z ....                                                                     [ 92%]
2025-01-10T13:45:58.7033800Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-01-10T13:46:06.4434770Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-01-10T13:46:06.8438880Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-10T13:46:06.8871260Z ....                                                                     [ 96%]
2025-01-10T13:46:08.2221500Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-10T13:46:08.7518330Z ..................                                                       [ 98%]
2025-01-10T13:49:15.5555080Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-10T13:49:20.5517290Z ......                                                                   [100%]
2025-01-10T13:49:20.5517720Z 
2025-01-10T13:49:20.5517920Z =================================== FAILURES ===================================
2025-01-10T13:49:20.5518310Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-01-10T13:49:20.5518660Z 
2025-01-10T13:49:20.5518830Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-01-10T13:49:20.5519240Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-01-10T13:49:20.5519740Z 
2025-01-10T13:49:20.5521530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5521980Z         if err_msg is None:
2025-01-10T13:49:20.5522270Z             if left.shape != right.shape:
2025-01-10T13:49:20.5522610Z                 raise_assert_detail(
2025-01-10T13:49:20.5522940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5523360Z                 )
2025-01-10T13:49:20.5523620Z     
2025-01-10T13:49:20.5523910Z             diff = 0
2025-01-10T13:49:20.5524270Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5524670Z                 # count up differences
2025-01-10T13:49:20.5525060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5525520Z                     diff += 1
2025-01-10T13:49:20.5525800Z     
2025-01-10T13:49:20.5526850Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5537640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5537960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5538250Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5538450Z E           
2025-01-10T13:49:20.5538610Z E           numpy array values are different (0.09581 %)
2025-01-10T13:49:20.5539120Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T13:49:20.5539880Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-01-10T13:49:20.5540260Z 
2025-01-10T13:49:20.5540510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5540810Z 
2025-01-10T13:49:20.5541000Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5541190Z 
2025-01-10T13:49:20.5541390Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x147f92ae0>
2025-01-10T13:49:20.5541860Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30d51a0c0>
2025-01-10T13:49:20.5542130Z 
2025-01-10T13:49:20.5542200Z     def test_calculate_sobolev_line_opacity(
2025-01-10T13:49:20.5542430Z         nb_simulation_verysimple, regression_data
2025-01-10T13:49:20.5542660Z     ):
2025-01-10T13:49:20.5542820Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T13:49:20.5543020Z     
2025-01-10T13:49:20.5543170Z         actual = calculate_sobolev_line_opacity(
2025-01-10T13:49:20.5543360Z             legacy_plasma.lines,
2025-01-10T13:49:20.5549180Z             legacy_plasma.level_number_density,
2025-01-10T13:49:20.5549700Z             legacy_plasma.time_explosion,
2025-01-10T13:49:20.5549970Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T13:49:20.5550210Z         )
2025-01-10T13:49:20.5550420Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.5550700Z >       pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5550880Z 
2025-01-10T13:49:20.5551010Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-01-10T13:49:20.5551310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5551670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5551950Z     ???
2025-01-10T13:49:20.5552200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5552350Z 
2025-01-10T13:49:20.5552440Z >   ???
2025-01-10T13:49:20.5552670Z E   AssertionError: MultiIndex level [0] are different
2025-01-10T13:49:20.5552930Z E   
2025-01-10T13:49:20.5553170Z E   MultiIndex level [0] values are different (0.09581 %)
2025-01-10T13:49:20.5553450Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:20.5553740Z E          ...
2025-01-10T13:49:20.5553920Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:20.5554210Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:20.5554510Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:20.5554790Z E          ...
2025-01-10T13:49:20.5554970Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:20.5555280Z E         dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:20.5555730Z E   At positional index 54, first diff: 12 != 14
2025-01-10T13:49:20.5555920Z 
2025-01-10T13:49:20.5556040Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5556310Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.5559260Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:20.5559860Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:20.5560420Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:49:20.5560650Z 
2025-01-10T13:49:20.5561050Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:09<00:01,  1.99s/it]
2025-01-10T13:49:20.5561260Z 
2025-01-10T13:49:20.5561470Z Packets:                                                                                   4030/? [00:09<00:00, 574.13it/s][A
2025-01-10T13:49:20.5561860Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.5562470Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:20.5563160Z _________________________ test_calculate_beta_sobolevs _________________________
2025-01-10T13:49:20.5563430Z 
2025-01-10T13:49:20.5563600Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x147f92ae0>
2025-01-10T13:49:20.5564130Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x147ff0170>
2025-01-10T13:49:20.5564400Z 
2025-01-10T13:49:20.5564550Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-01-10T13:49:20.5564940Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-01-10T13:49:20.5565180Z     
2025-01-10T13:49:20.5565450Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-01-10T13:49:20.5565720Z             legacy_plasma.lines,
2025-01-10T13:49:20.5565980Z             legacy_plasma.level_number_density,
2025-01-10T13:49:20.5566240Z             legacy_plasma.time_explosion,
2025-01-10T13:49:20.5566790Z             legacy_plasma.stimulated_emission_factor,
2025-01-10T13:49:20.5567080Z         )
2025-01-10T13:49:20.5567280Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-01-10T13:49:20.5567560Z         expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.5567820Z >       npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.5568030Z 
2025-01-10T13:49:20.5568160Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-01-10T13:49:20.5568440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5568640Z 
2025-01-10T13:49:20.5568890Z args = (<function assert_allclose.<locals>.compare at 0x11ca24860>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5569250Z        [1., 1., 1.,.....,
2025-01-10T13:49:20.5569450Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5569620Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5569890Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T13:49:20.5570220Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.5570490Z 
2025-01-10T13:49:20.5570540Z     @wraps(func)
2025-01-10T13:49:20.5570680Z     def inner(*args, **kwds):
2025-01-10T13:49:20.5570840Z         with self._recreate_cm():
2025-01-10T13:49:20.5571060Z >           return func(*args, **kwds)
2025-01-10T13:49:20.5571240Z E           AssertionError: 
2025-01-10T13:49:20.5571430Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.5571620Z E           
2025-01-10T13:49:20.5571810Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:20.5572130Z E           Max absolute difference among violations: 0.99984222
2025-01-10T13:49:20.5572720Z E           Max relative difference among violations: 6337.12154973
2025-01-10T13:49:20.5572970Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5573180Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5573370Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.5573630Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5573840Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.5574040Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.5574170Z 
2025-01-10T13:49:20.5574330Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.5574740Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-01-10T13:49:20.5575010Z 
2025-01-10T13:49:20.5575110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5575490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5575780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5576110Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5576430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5576770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5577000Z err_msg = None
2025-01-10T13:49:20.5577080Z 
2025-01-10T13:49:20.5577210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5577520Z         if err_msg is None:
2025-01-10T13:49:20.5577730Z             if left.shape != right.shape:
2025-01-10T13:49:20.5577920Z                 raise_assert_detail(
2025-01-10T13:49:20.5578280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5578560Z                 )
2025-01-10T13:49:20.5578760Z     
2025-01-10T13:49:20.5578910Z             diff = 0
2025-01-10T13:49:20.5579180Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5579470Z                 # count up differences
2025-01-10T13:49:20.5580010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5580310Z                     diff += 1
2025-01-10T13:49:20.5580530Z     
2025-01-10T13:49:20.5580660Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5580950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5581290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5581670Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5581900Z E           
2025-01-10T13:49:20.5582160Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5582630Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5583170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5583500Z 
2025-01-10T13:49:20.5583780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5584120Z 
2025-01-10T13:49:20.5584250Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5584490Z 
2025-01-10T13:49:20.5584660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e20f0>
2025-01-10T13:49:20.5585130Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>, attr = 'lines'
2025-01-10T13:49:20.5585360Z 
2025-01-10T13:49:20.5585460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5585720Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5586030Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5586230Z         try:
2025-01-10T13:49:20.5586420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5586650Z         except KeyError:
2025-01-10T13:49:20.5586960Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5587400Z     
2025-01-10T13:49:20.5587520Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5587700Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5587890Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5588130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5588440Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5588620Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5588830Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5589030Z             else:
2025-01-10T13:49:20.5589210Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5589490Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5589710Z 
2025-01-10T13:49:20.5589860Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5590150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5590530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5590810Z     ???
2025-01-10T13:49:20.5591080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5591280Z 
2025-01-10T13:49:20.5591320Z >   ???
2025-01-10T13:49:20.5591610Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5591860Z E   
2025-01-10T13:49:20.5592090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5592420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5592710Z E          ...
2025-01-10T13:49:20.5593120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5593370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5593750Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5593980Z E          ...
2025-01-10T13:49:20.5594220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5594500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5594740Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5594880Z 
2025-01-10T13:49:20.5594980Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5595350Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-01-10T13:49:20.5595600Z 
2025-01-10T13:49:20.5595760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e21b0>
2025-01-10T13:49:20.5596160Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>
2025-01-10T13:49:20.5596420Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.5596580Z 
2025-01-10T13:49:20.5596740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5597070Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5597310Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5597470Z         try:
2025-01-10T13:49:20.5597700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5597930Z         except KeyError:
2025-01-10T13:49:20.5598160Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5598470Z     
2025-01-10T13:49:20.5598600Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5598780Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5599090Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5599360Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5599630Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5599920Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5600180Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5600370Z 
2025-01-10T13:49:20.5600510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5600800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5600990Z 
2025-01-10T13:49:20.5601170Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.5601450Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.5601670Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5601950Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.5602300Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.5602590Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.5602850Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5603060Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.5603320Z err_msg = None
2025-01-10T13:49:20.5603410Z 
2025-01-10T13:49:20.5603510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5603780Z         if err_msg is None:
2025-01-10T13:49:20.5618400Z             if left.shape != right.shape:
2025-01-10T13:49:20.5618650Z                 raise_assert_detail(
2025-01-10T13:49:20.5618930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5619230Z                 )
2025-01-10T13:49:20.5619360Z     
2025-01-10T13:49:20.5619470Z             diff = 0
2025-01-10T13:49:20.5619680Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5619910Z                 # count up differences
2025-01-10T13:49:20.5620180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5620430Z                     diff += 1
2025-01-10T13:49:20.5620580Z     
2025-01-10T13:49:20.5620710Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5621190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5621510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5621790Z E           AssertionError: Series are different
2025-01-10T13:49:20.5621980Z E           
2025-01-10T13:49:20.5622140Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.5622590Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.5623230Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5623820Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5624150Z 
2025-01-10T13:49:20.5624500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5624970Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-01-10T13:49:20.5625200Z 
2025-01-10T13:49:20.5625370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e2270>
2025-01-10T13:49:20.5625730Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>
2025-01-10T13:49:20.5625980Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.5626100Z 
2025-01-10T13:49:20.5626220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5626480Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5626690Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5626840Z         try:
2025-01-10T13:49:20.5627030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5627260Z         except KeyError:
2025-01-10T13:49:20.5627470Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5627690Z     
2025-01-10T13:49:20.5627810Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5627990Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5628190Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5628420Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5628640Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5628820Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5629030Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5629180Z 
2025-01-10T13:49:20.5629280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5629520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5629680Z 
2025-01-10T13:49:20.5629790Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.5630030Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.5630250Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.5630500Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.5630740Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.5631220Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.5631450Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.5631660Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.5631830Z err_msg = None
2025-01-10T13:49:20.5631910Z 
2025-01-10T13:49:20.5631990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5632190Z         if err_msg is None:
2025-01-10T13:49:20.5632360Z             if left.shape != right.shape:
2025-01-10T13:49:20.5632550Z                 raise_assert_detail(
2025-01-10T13:49:20.5632780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5633010Z                 )
2025-01-10T13:49:20.5633130Z     
2025-01-10T13:49:20.5633240Z             diff = 0
2025-01-10T13:49:20.5633410Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5633610Z                 # count up differences
2025-01-10T13:49:20.5633890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5634150Z                     diff += 1
2025-01-10T13:49:20.5634300Z     
2025-01-10T13:49:20.5634420Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5634650Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5634950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5635230Z E           AssertionError: Series are different
2025-01-10T13:49:20.5635410Z E           
2025-01-10T13:49:20.5635560Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.5636080Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.5637220Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.5637890Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.5638260Z 
2025-01-10T13:49:20.5638500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5638970Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-01-10T13:49:20.5639180Z 
2025-01-10T13:49:20.5639290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5639560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5639800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5640040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5640320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5640570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5640750Z err_msg = None
2025-01-10T13:49:20.5640830Z 
2025-01-10T13:49:20.5641070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5641270Z         if err_msg is None:
2025-01-10T13:49:20.5641440Z             if left.shape != right.shape:
2025-01-10T13:49:20.5641650Z                 raise_assert_detail(
2025-01-10T13:49:20.5641970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5642210Z                 )
2025-01-10T13:49:20.5642340Z     
2025-01-10T13:49:20.5642440Z             diff = 0
2025-01-10T13:49:20.5642620Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5642830Z                 # count up differences
2025-01-10T13:49:20.5643080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5643340Z                     diff += 1
2025-01-10T13:49:20.5643480Z     
2025-01-10T13:49:20.5643600Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5643840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5644150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5644430Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5644630Z E           
2025-01-10T13:49:20.5644780Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5645140Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5645710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5645980Z 
2025-01-10T13:49:20.5646220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5646520Z 
2025-01-10T13:49:20.5646650Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5646850Z 
2025-01-10T13:49:20.5647020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e24b0>
2025-01-10T13:49:20.5647400Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>, attr = 'nu'
2025-01-10T13:49:20.5647620Z 
2025-01-10T13:49:20.5647720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5647980Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5648190Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5648350Z         try:
2025-01-10T13:49:20.5648530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5648750Z         except KeyError:
2025-01-10T13:49:20.5648960Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5649170Z     
2025-01-10T13:49:20.5649290Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5649470Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5649660Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5649890Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5650120Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5650300Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5650510Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5650660Z 
2025-01-10T13:49:20.5650750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5651000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5651270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5651490Z     ???
2025-01-10T13:49:20.5651750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5651910Z 
2025-01-10T13:49:20.5651960Z >   ???
2025-01-10T13:49:20.5652120Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5652320Z E   
2025-01-10T13:49:20.5652490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5652730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5652930Z E          ...
2025-01-10T13:49:20.5653070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5653300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5653560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5653760Z E          ...
2025-01-10T13:49:20.5653890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5654130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5654370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5654510Z 
2025-01-10T13:49:20.5654570Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5654840Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-01-10T13:49:20.5655070Z 
2025-01-10T13:49:20.5655170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5655440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5655680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5655920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5656270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5656510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5656700Z err_msg = None
2025-01-10T13:49:20.5656770Z 
2025-01-10T13:49:20.5656880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5657080Z         if err_msg is None:
2025-01-10T13:49:20.5657250Z             if left.shape != right.shape:
2025-01-10T13:49:20.5657430Z                 raise_assert_detail(
2025-01-10T13:49:20.5657660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5657890Z                 )
2025-01-10T13:49:20.5658010Z     
2025-01-10T13:49:20.5658120Z             diff = 0
2025-01-10T13:49:20.5658390Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5658600Z                 # count up differences
2025-01-10T13:49:20.5658910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5659160Z                     diff += 1
2025-01-10T13:49:20.5659310Z     
2025-01-10T13:49:20.5659430Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5659660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5659970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5660260Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5660450Z E           
2025-01-10T13:49:20.5660610Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5660980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5661480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5661910Z 
2025-01-10T13:49:20.5662160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5662460Z 
2025-01-10T13:49:20.5662590Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5662780Z 
2025-01-10T13:49:20.5662950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e2570>
2025-01-10T13:49:20.5663300Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>
2025-01-10T13:49:20.5663540Z attr = 'wavelength_cm'
2025-01-10T13:49:20.5663640Z 
2025-01-10T13:49:20.5663760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5664020Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5664230Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5664380Z         try:
2025-01-10T13:49:20.5664560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5664790Z         except KeyError:
2025-01-10T13:49:20.5664990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5665210Z     
2025-01-10T13:49:20.5665330Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5665510Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5665700Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5665930Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5666160Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5666340Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5666550Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5666700Z 
2025-01-10T13:49:20.5666850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5667120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5667380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5667600Z     ???
2025-01-10T13:49:20.5667760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5667910Z 
2025-01-10T13:49:20.5667960Z >   ???
2025-01-10T13:49:20.5668110Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5668310Z E   
2025-01-10T13:49:20.5668470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5668710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5668910Z E          ...
2025-01-10T13:49:20.5669050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5669280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5669530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5669730Z E          ...
2025-01-10T13:49:20.5669870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5670100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5670330Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5670480Z 
2025-01-10T13:49:20.5670540Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5670800Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-01-10T13:49:20.5671010Z 
2025-01-10T13:49:20.5671110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5671390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5671630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5671870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5672170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5672410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5672600Z err_msg = None
2025-01-10T13:49:20.5672680Z 
2025-01-10T13:49:20.5673020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5673230Z         if err_msg is None:
2025-01-10T13:49:20.5673400Z             if left.shape != right.shape:
2025-01-10T13:49:20.5673580Z                 raise_assert_detail(
2025-01-10T13:49:20.5673820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5674040Z                 )
2025-01-10T13:49:20.5674160Z     
2025-01-10T13:49:20.5674270Z             diff = 0
2025-01-10T13:49:20.5674440Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5674650Z                 # count up differences
2025-01-10T13:49:20.5674910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5675160Z                     diff += 1
2025-01-10T13:49:20.5675490Z     
2025-01-10T13:49:20.5675710Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5676010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5676490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5676840Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5815440Z E           
2025-01-10T13:49:20.5818540Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5818950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5825090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5825370Z 
2025-01-10T13:49:20.5825630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5825940Z 
2025-01-10T13:49:20.5826080Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5826280Z 
2025-01-10T13:49:20.5826450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e2630>
2025-01-10T13:49:20.5826860Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>, attr = 'f_lu'
2025-01-10T13:49:20.5827090Z 
2025-01-10T13:49:20.5827200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5827470Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5827690Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5827840Z         try:
2025-01-10T13:49:20.5828040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5828270Z         except KeyError:
2025-01-10T13:49:20.5828490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5828710Z     
2025-01-10T13:49:20.5828840Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5829030Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5829230Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5829470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5829710Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5829900Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5830120Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5830280Z 
2025-01-10T13:49:20.5830380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5830640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5830910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5831140Z     ???
2025-01-10T13:49:20.5831600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5831770Z 
2025-01-10T13:49:20.5831810Z >   ???
2025-01-10T13:49:20.5831980Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5832190Z E   
2025-01-10T13:49:20.5832360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5832610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5832810Z E          ...
2025-01-10T13:49:20.5832960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5833220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5833480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5833750Z E          ...
2025-01-10T13:49:20.5833940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5834230Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5834500Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5834660Z 
2025-01-10T13:49:20.5834750Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5835070Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-01-10T13:49:20.5835340Z 
2025-01-10T13:49:20.5835480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5835800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5836080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5836360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5836770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5837030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5837220Z err_msg = None
2025-01-10T13:49:20.5837300Z 
2025-01-10T13:49:20.5837390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5837590Z         if err_msg is None:
2025-01-10T13:49:20.5837770Z             if left.shape != right.shape:
2025-01-10T13:49:20.5837960Z                 raise_assert_detail(
2025-01-10T13:49:20.5838210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5838440Z                 )
2025-01-10T13:49:20.5838670Z     
2025-01-10T13:49:20.5838780Z             diff = 0
2025-01-10T13:49:20.5838960Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5839180Z                 # count up differences
2025-01-10T13:49:20.5840780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5841100Z                     diff += 1
2025-01-10T13:49:20.5841250Z     
2025-01-10T13:49:20.5841380Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5841620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5841950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5842240Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5842440Z E           
2025-01-10T13:49:20.5842600Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5842960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5843660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5843950Z 
2025-01-10T13:49:20.5844210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5844520Z 
2025-01-10T13:49:20.5844660Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5844860Z 
2025-01-10T13:49:20.5845040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e2db0>
2025-01-10T13:49:20.5845410Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>
2025-01-10T13:49:20.5845670Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.5845760Z 
2025-01-10T13:49:20.5845870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5846150Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5846360Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5846530Z         try:
2025-01-10T13:49:20.5846720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5846960Z         except KeyError:
2025-01-10T13:49:20.5847710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5847930Z     
2025-01-10T13:49:20.5848050Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5848250Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5848450Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5848680Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5848920Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5849090Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5849310Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5849510Z             else:
2025-01-10T13:49:20.5849730Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5849950Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5850100Z 
2025-01-10T13:49:20.5850200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5850460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5850730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5850960Z     ???
2025-01-10T13:49:20.5851120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5851270Z 
2025-01-10T13:49:20.5851320Z >   ???
2025-01-10T13:49:20.5851480Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5851700Z E   
2025-01-10T13:49:20.5851860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5852100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5852310Z E          ...
2025-01-10T13:49:20.5852450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5852690Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5852930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5853130Z E          ...
2025-01-10T13:49:20.5853270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5853490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5853730Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5853870Z 
2025-01-10T13:49:20.5853930Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5854200Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-01-10T13:49:20.5854420Z 
2025-01-10T13:49:20.5854530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5854800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5855040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5855290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5855670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5855910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5856100Z err_msg = None
2025-01-10T13:49:20.5856180Z 
2025-01-10T13:49:20.5856260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5856450Z         if err_msg is None:
2025-01-10T13:49:20.5856620Z             if left.shape != right.shape:
2025-01-10T13:49:20.5856810Z                 raise_assert_detail(
2025-01-10T13:49:20.5857050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5857280Z                 )
2025-01-10T13:49:20.5857400Z     
2025-01-10T13:49:20.5857500Z             diff = 0
2025-01-10T13:49:20.5857680Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5857880Z                 # count up differences
2025-01-10T13:49:20.5858140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5858390Z                     diff += 1
2025-01-10T13:49:20.5858540Z     
2025-01-10T13:49:20.5858670Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5858920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5859230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5859530Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5859730Z E           
2025-01-10T13:49:20.5859900Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5860380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5860980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5861290Z 
2025-01-10T13:49:20.5861530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5861840Z 
2025-01-10T13:49:20.5861970Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5862170Z 
2025-01-10T13:49:20.5862360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e2e70>
2025-01-10T13:49:20.5862720Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>
2025-01-10T13:49:20.5862960Z attr = 'beta_sobolev'
2025-01-10T13:49:20.5863060Z 
2025-01-10T13:49:20.5863180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5863440Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5863660Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5863860Z         try:
2025-01-10T13:49:20.5864070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5864300Z         except KeyError:
2025-01-10T13:49:20.5864520Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5864750Z     
2025-01-10T13:49:20.5864880Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5865070Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5865270Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5865520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5865760Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5865950Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5866160Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5866360Z             else:
2025-01-10T13:49:20.5866510Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5867400Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5867580Z 
2025-01-10T13:49:20.5867670Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5867920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5868180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5868400Z     ???
2025-01-10T13:49:20.5868550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5868710Z 
2025-01-10T13:49:20.5868750Z >   ???
2025-01-10T13:49:20.5868910Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5869120Z E   
2025-01-10T13:49:20.5869270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5869520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5869720Z E          ...
2025-01-10T13:49:20.5869880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5870130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5870380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5870580Z E          ...
2025-01-10T13:49:20.5870710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5870940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5871170Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5871310Z 
2025-01-10T13:49:20.5871370Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5871640Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-01-10T13:49:20.5872080Z 
2025-01-10T13:49:20.5872180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5872460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5872700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5872940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5873220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5873460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5873640Z err_msg = None
2025-01-10T13:49:20.5873710Z 
2025-01-10T13:49:20.5873790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5873990Z         if err_msg is None:
2025-01-10T13:49:20.5874160Z             if left.shape != right.shape:
2025-01-10T13:49:20.5874340Z                 raise_assert_detail(
2025-01-10T13:49:20.5874570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5874800Z                 )
2025-01-10T13:49:20.5874920Z     
2025-01-10T13:49:20.5875030Z             diff = 0
2025-01-10T13:49:20.5875210Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5875420Z                 # count up differences
2025-01-10T13:49:20.5875680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5875920Z                     diff += 1
2025-01-10T13:49:20.5876070Z     
2025-01-10T13:49:20.5876190Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5876420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5876720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5877000Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5877190Z E           
2025-01-10T13:49:20.5877350Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5877740Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5878230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5878490Z 
2025-01-10T13:49:20.5878730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5879040Z 
2025-01-10T13:49:20.5879170Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5879360Z 
2025-01-10T13:49:20.5879530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e2ff0>
2025-01-10T13:49:20.5879930Z plasma = <tardis.plasma.base.BasePlasma object at 0x310796b10>, attr = 'j_blues'
2025-01-10T13:49:20.5880170Z 
2025-01-10T13:49:20.5880270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5880530Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5880820Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5880970Z         try:
2025-01-10T13:49:20.5881150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5881370Z         except KeyError:
2025-01-10T13:49:20.5889500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5889730Z     
2025-01-10T13:49:20.5889870Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5890070Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5890410Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5890640Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5890870Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5891050Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5891260Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5891460Z             else:
2025-01-10T13:49:20.5891610Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5891820Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5891970Z 
2025-01-10T13:49:20.5892060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5892300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5892570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5892790Z     ???
2025-01-10T13:49:20.5892950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5893110Z 
2025-01-10T13:49:20.5893150Z >   ???
2025-01-10T13:49:20.5893310Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5893510Z E   
2025-01-10T13:49:20.5893670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5893910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5894100Z E          ...
2025-01-10T13:49:20.5894230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5894460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5894710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5894900Z E          ...
2025-01-10T13:49:20.5895030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5895260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5895490Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5895630Z 
2025-01-10T13:49:20.5895700Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5895960Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-01-10T13:49:20.5896170Z 
2025-01-10T13:49:20.5896270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5896600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5896850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5897090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5897360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5897590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5897780Z err_msg = None
2025-01-10T13:49:20.5897850Z 
2025-01-10T13:49:20.5897940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5898140Z         if err_msg is None:
2025-01-10T13:49:20.5898300Z             if left.shape != right.shape:
2025-01-10T13:49:20.5898490Z                 raise_assert_detail(
2025-01-10T13:49:20.5898720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5898940Z                 )
2025-01-10T13:49:20.5899060Z     
2025-01-10T13:49:20.5899170Z             diff = 0
2025-01-10T13:49:20.5899340Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5899540Z                 # count up differences
2025-01-10T13:49:20.5899790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5900040Z                     diff += 1
2025-01-10T13:49:20.5900190Z     
2025-01-10T13:49:20.5900310Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5900550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5900860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5901190Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5901380Z E           
2025-01-10T13:49:20.5901530Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5901890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5902360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5902620Z 
2025-01-10T13:49:20.5902860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5903150Z 
2025-01-10T13:49:20.5903280Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5903480Z 
2025-01-10T13:49:20.5903650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e3d70>
2025-01-10T13:49:20.5904060Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>, attr = 'lines'
2025-01-10T13:49:20.5904290Z 
2025-01-10T13:49:20.5904390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5904660Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5904870Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5905030Z         try:
2025-01-10T13:49:20.5905210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5905440Z         except KeyError:
2025-01-10T13:49:20.5905640Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5905850Z     
2025-01-10T13:49:20.5905970Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5906150Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5906330Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5906620Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5906850Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5907030Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5907240Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5907420Z             else:
2025-01-10T13:49:20.5907570Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5907780Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5907930Z 
2025-01-10T13:49:20.5908010Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5908260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5908520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5908740Z     ???
2025-01-10T13:49:20.5908900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5909060Z 
2025-01-10T13:49:20.5909100Z >   ???
2025-01-10T13:49:20.5909260Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5909450Z E   
2025-01-10T13:49:20.5909610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5909850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5910040Z E          ...
2025-01-10T13:49:20.5910180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5910400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5910650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5910840Z E          ...
2025-01-10T13:49:20.5910970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5911260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5911490Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5911800Z 
2025-01-10T13:49:20.5911860Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5912140Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-01-10T13:49:20.5912360Z 
2025-01-10T13:49:20.5912530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e3e30>
2025-01-10T13:49:20.5912880Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>
2025-01-10T13:49:20.5913120Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.5913240Z 
2025-01-10T13:49:20.5913340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5913580Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5913790Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5913940Z         try:
2025-01-10T13:49:20.5914120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5914340Z         except KeyError:
2025-01-10T13:49:20.5914550Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5914750Z     
2025-01-10T13:49:20.5914870Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5915050Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5915240Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5915460Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5915680Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5915860Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5916060Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5916210Z 
2025-01-10T13:49:20.5916300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5916540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5916700Z 
2025-01-10T13:49:20.5916810Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.5917040Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.5917250Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5917640Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.5917880Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.5918110Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.5918320Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5918530Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.5918710Z err_msg = None
2025-01-10T13:49:20.5918790Z 
2025-01-10T13:49:20.5918870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5919070Z         if err_msg is None:
2025-01-10T13:49:20.5919250Z             if left.shape != right.shape:
2025-01-10T13:49:20.5919440Z                 raise_assert_detail(
2025-01-10T13:49:20.5919680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5919900Z                 )
2025-01-10T13:49:20.5920020Z     
2025-01-10T13:49:20.5920130Z             diff = 0
2025-01-10T13:49:20.5920310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5920510Z                 # count up differences
2025-01-10T13:49:20.5920760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5921080Z                     diff += 1
2025-01-10T13:49:20.5921230Z     
2025-01-10T13:49:20.5921350Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5921570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5921880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5922150Z E           AssertionError: Series are different
2025-01-10T13:49:20.5922330Z E           
2025-01-10T13:49:20.5922770Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.5923200Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.5923820Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5924410Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5924750Z 
2025-01-10T13:49:20.5924980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5925440Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-01-10T13:49:20.5925660Z 
2025-01-10T13:49:20.5925830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11b9e3ef0>
2025-01-10T13:49:20.5926170Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>
2025-01-10T13:49:20.5926410Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.5926530Z 
2025-01-10T13:49:20.5926630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5926890Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5927090Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5927240Z         try:
2025-01-10T13:49:20.5927410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5927630Z         except KeyError:
2025-01-10T13:49:20.5927890Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5928100Z     
2025-01-10T13:49:20.5928210Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5928400Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5928580Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5928810Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5929030Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5929210Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5929410Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5929570Z 
2025-01-10T13:49:20.5929660Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5929900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5930050Z 
2025-01-10T13:49:20.5930160Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.5930380Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.5930600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.5930800Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.5931020Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.5931250Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.5931460Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.5931660Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.5931820Z err_msg = None
2025-01-10T13:49:20.5931900Z 
2025-01-10T13:49:20.5932030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5932220Z         if err_msg is None:
2025-01-10T13:49:20.5932380Z             if left.shape != right.shape:
2025-01-10T13:49:20.5932570Z                 raise_assert_detail(
2025-01-10T13:49:20.5932810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5933020Z                 )
2025-01-10T13:49:20.5933150Z     
2025-01-10T13:49:20.5933250Z             diff = 0
2025-01-10T13:49:20.5933420Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5933610Z                 # count up differences
2025-01-10T13:49:20.5933870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5934110Z                     diff += 1
2025-01-10T13:49:20.5934250Z     
2025-01-10T13:49:20.5934370Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5934600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5934900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5935170Z E           AssertionError: Series are different
2025-01-10T13:49:20.5935350Z E           
2025-01-10T13:49:20.5935490Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.5935920Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.5936560Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.5937250Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.5937610Z 
2025-01-10T13:49:20.5937850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5938280Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-01-10T13:49:20.5938480Z 
2025-01-10T13:49:20.5938580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5938850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5939090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5939330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5939590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5939830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5940010Z err_msg = None
2025-01-10T13:49:20.5940090Z 
2025-01-10T13:49:20.5940160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5940390Z         if err_msg is None:
2025-01-10T13:49:20.5940550Z             if left.shape != right.shape:
2025-01-10T13:49:20.5940730Z                 raise_assert_detail(
2025-01-10T13:49:20.5940960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5941230Z                 )
2025-01-10T13:49:20.5941350Z     
2025-01-10T13:49:20.5941460Z             diff = 0
2025-01-10T13:49:20.5941630Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5941850Z                 # count up differences
2025-01-10T13:49:20.5942110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5942360Z                     diff += 1
2025-01-10T13:49:20.5942520Z     
2025-01-10T13:49:20.5942640Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5942880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5943200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5943490Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5943680Z E           
2025-01-10T13:49:20.5943830Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5944180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5944650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5944920Z 
2025-01-10T13:49:20.5945150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5945440Z 
2025-01-10T13:49:20.5945570Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5945770Z 
2025-01-10T13:49:20.5945940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0c170>
2025-01-10T13:49:20.5946310Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>, attr = 'nu'
2025-01-10T13:49:20.5946520Z 
2025-01-10T13:49:20.5946670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5946920Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5952690Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5952870Z         try:
2025-01-10T13:49:20.5953050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5953270Z         except KeyError:
2025-01-10T13:49:20.5953480Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5953690Z     
2025-01-10T13:49:20.5953810Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5953990Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5954170Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5954410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5954630Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5954810Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5955010Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5955160Z 
2025-01-10T13:49:20.5955260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5955500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5955760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5955980Z     ???
2025-01-10T13:49:20.5956130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5956280Z 
2025-01-10T13:49:20.5956320Z >   ???
2025-01-10T13:49:20.5956480Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5956670Z E   
2025-01-10T13:49:20.5956830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5957200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5957390Z E          ...
2025-01-10T13:49:20.5957520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5957750Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5957990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5958180Z E          ...
2025-01-10T13:49:20.5958320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5958540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5958770Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5958910Z 
2025-01-10T13:49:20.5958970Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5959240Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-01-10T13:49:20.5959460Z 
2025-01-10T13:49:20.5959560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5959830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5960070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5960300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5960570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5960800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5961060Z err_msg = None
2025-01-10T13:49:20.5961140Z 
2025-01-10T13:49:20.5961220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5961430Z         if err_msg is None:
2025-01-10T13:49:20.5961610Z             if left.shape != right.shape:
2025-01-10T13:49:20.5961800Z                 raise_assert_detail(
2025-01-10T13:49:20.5962030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5962250Z                 )
2025-01-10T13:49:20.5962370Z     
2025-01-10T13:49:20.5962480Z             diff = 0
2025-01-10T13:49:20.5962650Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5962860Z                 # count up differences
2025-01-10T13:49:20.5963370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5963630Z                     diff += 1
2025-01-10T13:49:20.5963780Z     
2025-01-10T13:49:20.5963900Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5964130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5964430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5964710Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5964900Z E           
2025-01-10T13:49:20.5965050Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5965410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5965890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5966170Z 
2025-01-10T13:49:20.5966400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5966690Z 
2025-01-10T13:49:20.5966820Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5967010Z 
2025-01-10T13:49:20.5967440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0c230>
2025-01-10T13:49:20.5967790Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>
2025-01-10T13:49:20.5968020Z attr = 'wavelength_cm'
2025-01-10T13:49:20.5968110Z 
2025-01-10T13:49:20.5968210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5968460Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5968660Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5968810Z         try:
2025-01-10T13:49:20.5968980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5969200Z         except KeyError:
2025-01-10T13:49:20.5969390Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5969600Z     
2025-01-10T13:49:20.5969710Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5969890Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5970080Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5970300Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5970520Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5970700Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5970920Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5971070Z 
2025-01-10T13:49:20.5971160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5971400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5971660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5971880Z     ???
2025-01-10T13:49:20.5972030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5972180Z 
2025-01-10T13:49:20.5972220Z >   ???
2025-01-10T13:49:20.5972370Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5972570Z E   
2025-01-10T13:49:20.5972720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5972960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5973150Z E          ...
2025-01-10T13:49:20.5973280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5973580Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5973830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5974020Z E          ...
2025-01-10T13:49:20.5974160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5974380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5974620Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5974760Z 
2025-01-10T13:49:20.5974820Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5975080Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-01-10T13:49:20.5975280Z 
2025-01-10T13:49:20.5975380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5975650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5975890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5976140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5976410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5976650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5976830Z err_msg = None
2025-01-10T13:49:20.5976910Z 
2025-01-10T13:49:20.5976980Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5977180Z         if err_msg is None:
2025-01-10T13:49:20.5977340Z             if left.shape != right.shape:
2025-01-10T13:49:20.5977520Z                 raise_assert_detail(
2025-01-10T13:49:20.5977760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5978060Z                 )
2025-01-10T13:49:20.5978100Z     
2025-01-10T13:49:20.5978150Z             diff = 0
2025-01-10T13:49:20.5978230Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5978300Z                 # count up differences
2025-01-10T13:49:20.5978430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5978480Z                     diff += 1
2025-01-10T13:49:20.5978520Z     
2025-01-10T13:49:20.5978590Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5978690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5978820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5978900Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5978950Z E           
2025-01-10T13:49:20.5979030Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5979230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5979440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5979440Z 
2025-01-10T13:49:20.5979670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5979680Z 
2025-01-10T13:49:20.5979800Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5979800Z 
2025-01-10T13:49:20.5979970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0c2f0>
2025-01-10T13:49:20.5980110Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>, attr = 'f_lu'
2025-01-10T13:49:20.5980120Z 
2025-01-10T13:49:20.5980270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5980350Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5980410Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5980460Z         try:
2025-01-10T13:49:20.5980560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5980620Z         except KeyError:
2025-01-10T13:49:20.5980710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5980760Z     
2025-01-10T13:49:20.5980810Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5980880Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5980940Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5981040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5981090Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5981160Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5981240Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5981240Z 
2025-01-10T13:49:20.5981330Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.5981420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5981530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5981580Z     ???
2025-01-10T13:49:20.5981660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5981670Z 
2025-01-10T13:49:20.5981710Z >   ???
2025-01-10T13:49:20.5981800Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5981850Z E   
2025-01-10T13:49:20.5981950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5982080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5982130Z E          ...
2025-01-10T13:49:20.5982200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5982290Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5982380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5982430Z E          ...
2025-01-10T13:49:20.5982490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5982580Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5982660Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5982660Z 
2025-01-10T13:49:20.5982720Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5982870Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-01-10T13:49:20.5982880Z 
2025-01-10T13:49:20.5982980Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5983080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5983150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5983250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5983350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5983420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5983460Z err_msg = None
2025-01-10T13:49:20.5983470Z 
2025-01-10T13:49:20.5983540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5983590Z         if err_msg is None:
2025-01-10T13:49:20.5983660Z             if left.shape != right.shape:
2025-01-10T13:49:20.5983720Z                 raise_assert_detail(
2025-01-10T13:49:20.5983820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5983870Z                 )
2025-01-10T13:49:20.5983920Z     
2025-01-10T13:49:20.5983960Z             diff = 0
2025-01-10T13:49:20.5984040Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5984100Z                 # count up differences
2025-01-10T13:49:20.5984260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5984320Z                     diff += 1
2025-01-10T13:49:20.5984360Z     
2025-01-10T13:49:20.5984420Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5984520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5984650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5984730Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5984780Z E           
2025-01-10T13:49:20.5984850Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5985060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5985270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5985270Z 
2025-01-10T13:49:20.5985500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5985500Z 
2025-01-10T13:49:20.5985630Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5985630Z 
2025-01-10T13:49:20.5985830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0ca70>
2025-01-10T13:49:20.5985950Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>
2025-01-10T13:49:20.5986010Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.5986010Z 
2025-01-10T13:49:20.5986110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5986190Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5986240Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5986290Z         try:
2025-01-10T13:49:20.5986390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5986440Z         except KeyError:
2025-01-10T13:49:20.5986540Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5986590Z     
2025-01-10T13:49:20.5986650Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5986710Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5986770Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5986870Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5986930Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5986990Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5987080Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5987130Z             else:
2025-01-10T13:49:20.5987200Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5987270Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5987270Z 
2025-01-10T13:49:20.5987360Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5987450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5987560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5987600Z     ???
2025-01-10T13:49:20.5987690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5987690Z 
2025-01-10T13:49:20.5987740Z >   ???
2025-01-10T13:49:20.5987830Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5987870Z E   
2025-01-10T13:49:20.5987960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5988170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5988220Z E          ...
2025-01-10T13:49:20.5988290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5988380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5988460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5988510Z E          ...
2025-01-10T13:49:20.5988570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5988660Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5988730Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5988730Z 
2025-01-10T13:49:20.5988790Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5988940Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-01-10T13:49:20.5988950Z 
2025-01-10T13:49:20.5989040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5989140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5989220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5989310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5989410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5989480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5989530Z err_msg = None
2025-01-10T13:49:20.5989530Z 
2025-01-10T13:49:20.5989610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5989660Z         if err_msg is None:
2025-01-10T13:49:20.5989920Z             if left.shape != right.shape:
2025-01-10T13:49:20.5989980Z                 raise_assert_detail(
2025-01-10T13:49:20.5990090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5990130Z                 )
2025-01-10T13:49:20.5990180Z     
2025-01-10T13:49:20.5990220Z             diff = 0
2025-01-10T13:49:20.5990300Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5990360Z                 # count up differences
2025-01-10T13:49:20.5990490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5990530Z                     diff += 1
2025-01-10T13:49:20.5990580Z     
2025-01-10T13:49:20.5990630Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5990740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5990870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5990950Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5991000Z E           
2025-01-10T13:49:20.5991070Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5991280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5991480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5991490Z 
2025-01-10T13:49:20.5991710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5991720Z 
2025-01-10T13:49:20.5991850Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5991850Z 
2025-01-10T13:49:20.5992050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0cb30>
2025-01-10T13:49:20.5992170Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>
2025-01-10T13:49:20.5992220Z attr = 'beta_sobolev'
2025-01-10T13:49:20.5992220Z 
2025-01-10T13:49:20.5992320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5992400Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5992460Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5992510Z         try:
2025-01-10T13:49:20.5992610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5992660Z         except KeyError:
2025-01-10T13:49:20.5992760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5992810Z     
2025-01-10T13:49:20.5992870Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5992940Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5993000Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5993110Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5993160Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5993220Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5993300Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5993350Z             else:
2025-01-10T13:49:20.5993410Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5993480Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5993490Z 
2025-01-10T13:49:20.5993570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5993660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5993760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.5993850Z     ???
2025-01-10T13:49:20.5993930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.5993940Z 
2025-01-10T13:49:20.5993980Z >   ???
2025-01-10T13:49:20.5994070Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.5994110Z E   
2025-01-10T13:49:20.5994210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.5994290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5994340Z E          ...
2025-01-10T13:49:20.5994400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5994490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5994570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.5994610Z E          ...
2025-01-10T13:49:20.5994680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.5994770Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.5994850Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.5994850Z 
2025-01-10T13:49:20.5994900Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.5995070Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-01-10T13:49:20.5995070Z 
2025-01-10T13:49:20.5995180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5995290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5995360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5995460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.5995560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.5995630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.5995680Z err_msg = None
2025-01-10T13:49:20.5995690Z 
2025-01-10T13:49:20.5995760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.5995810Z         if err_msg is None:
2025-01-10T13:49:20.5995880Z             if left.shape != right.shape:
2025-01-10T13:49:20.5996010Z                 raise_assert_detail(
2025-01-10T13:49:20.5996120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.5996160Z                 )
2025-01-10T13:49:20.5996200Z     
2025-01-10T13:49:20.5996250Z             diff = 0
2025-01-10T13:49:20.5996330Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.5996390Z                 # count up differences
2025-01-10T13:49:20.5996520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.5996570Z                     diff += 1
2025-01-10T13:49:20.5996610Z     
2025-01-10T13:49:20.5996670Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.5996770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.5996900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.5996990Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.5997030Z E           
2025-01-10T13:49:20.5997120Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.5997330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5997540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.5997590Z 
2025-01-10T13:49:20.5997830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.5997840Z 
2025-01-10T13:49:20.5997970Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.5997970Z 
2025-01-10T13:49:20.5998140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0ccb0>
2025-01-10T13:49:20.5998300Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d168b00>, attr = 'j_blues'
2025-01-10T13:49:20.5998300Z 
2025-01-10T13:49:20.5998400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.5998490Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.5998540Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.5998590Z         try:
2025-01-10T13:49:20.5998690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.5998760Z         except KeyError:
2025-01-10T13:49:20.5998860Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.5998910Z     
2025-01-10T13:49:20.5998960Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.5999030Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.5999090Z             if attr == "selected_atoms":
2025-01-10T13:49:20.5999190Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.5999250Z             elif actual.ndim == 1:
2025-01-10T13:49:20.5999310Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.5999390Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.5999430Z             else:
2025-01-10T13:49:20.5999570Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.5999640Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.5999650Z 
2025-01-10T13:49:20.5999810Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.5999900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6000210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6000250Z     ???
2025-01-10T13:49:20.6000410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6000420Z 
2025-01-10T13:49:20.6000570Z >   ???
2025-01-10T13:49:20.6000940Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6001140Z E   
2025-01-10T13:49:20.6001300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6001520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6007850Z E          ...
2025-01-10T13:49:20.6007950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6008050Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6008150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6008200Z E          ...
2025-01-10T13:49:20.6008260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6008360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6008440Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6008440Z 
2025-01-10T13:49:20.6008500Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6008650Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-01-10T13:49:20.6008650Z 
2025-01-10T13:49:20.6008760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6008860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6008940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6009040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6009260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6009330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6009370Z err_msg = None
2025-01-10T13:49:20.6009380Z 
2025-01-10T13:49:20.6009460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6009510Z         if err_msg is None:
2025-01-10T13:49:20.6009580Z             if left.shape != right.shape:
2025-01-10T13:49:20.6009630Z                 raise_assert_detail(
2025-01-10T13:49:20.6009740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6009780Z                 )
2025-01-10T13:49:20.6009830Z     
2025-01-10T13:49:20.6009870Z             diff = 0
2025-01-10T13:49:20.6009950Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6010010Z                 # count up differences
2025-01-10T13:49:20.6010140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6010190Z                     diff += 1
2025-01-10T13:49:20.6010230Z     
2025-01-10T13:49:20.6010290Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6010390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6010530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6010610Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6010650Z E           
2025-01-10T13:49:20.6010730Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6010940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6011140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6011460Z 
2025-01-10T13:49:20.6011700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6011700Z 
2025-01-10T13:49:20.6011830Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6011830Z 
2025-01-10T13:49:20.6012000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0da30>
2025-01-10T13:49:20.6012150Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>, attr = 'lines'
2025-01-10T13:49:20.6012150Z 
2025-01-10T13:49:20.6012250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6012340Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6012400Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6012440Z         try:
2025-01-10T13:49:20.6012550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6012600Z         except KeyError:
2025-01-10T13:49:20.6012700Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6012740Z     
2025-01-10T13:49:20.6012800Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6012870Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6012920Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6013020Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6013080Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6013140Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6013220Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6013270Z             else:
2025-01-10T13:49:20.6013590Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6013670Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6013670Z 
2025-01-10T13:49:20.6013760Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6013860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6013960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6014010Z     ???
2025-01-10T13:49:20.6014100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6014100Z 
2025-01-10T13:49:20.6014140Z >   ???
2025-01-10T13:49:20.6014240Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6014280Z E   
2025-01-10T13:49:20.6014370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6014460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6014500Z E          ...
2025-01-10T13:49:20.6014570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6014670Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6014750Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6014800Z E          ...
2025-01-10T13:49:20.6014860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6014960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6015030Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6015030Z 
2025-01-10T13:49:20.6015090Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6015250Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-01-10T13:49:20.6015250Z 
2025-01-10T13:49:20.6015410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0daf0>
2025-01-10T13:49:20.6015530Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>
2025-01-10T13:49:20.6015590Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6015590Z 
2025-01-10T13:49:20.6015690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6015770Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6015830Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6015870Z         try:
2025-01-10T13:49:20.6016020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6016070Z         except KeyError:
2025-01-10T13:49:20.6016180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6016220Z     
2025-01-10T13:49:20.6016280Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6016340Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6016400Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6016500Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6016550Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6016610Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6016690Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6016690Z 
2025-01-10T13:49:20.6016780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6016870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6016870Z 
2025-01-10T13:49:20.6016980Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6017040Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6017130Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6017180Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6017290Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6017360Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6017440Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6017490Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6017590Z err_msg = None
2025-01-10T13:49:20.6017590Z 
2025-01-10T13:49:20.6017670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6017720Z         if err_msg is None:
2025-01-10T13:49:20.6017790Z             if left.shape != right.shape:
2025-01-10T13:49:20.6017850Z                 raise_assert_detail(
2025-01-10T13:49:20.6017960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6018010Z                 )
2025-01-10T13:49:20.6018050Z     
2025-01-10T13:49:20.6018100Z             diff = 0
2025-01-10T13:49:20.6018180Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6018240Z                 # count up differences
2025-01-10T13:49:20.6018360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6018410Z                     diff += 1
2025-01-10T13:49:20.6018450Z     
2025-01-10T13:49:20.6018510Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6018610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6018750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6018820Z E           AssertionError: Series are different
2025-01-10T13:49:20.6018860Z E           
2025-01-10T13:49:20.6018930Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6019230Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6019490Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6019790Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6019800Z 
2025-01-10T13:49:20.6020030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6020180Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-01-10T13:49:20.6020180Z 
2025-01-10T13:49:20.6020350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0dbb0>
2025-01-10T13:49:20.6020470Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>
2025-01-10T13:49:20.6020530Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6020530Z 
2025-01-10T13:49:20.6020650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6020730Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6020790Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6020830Z         try:
2025-01-10T13:49:20.6020950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6021000Z         except KeyError:
2025-01-10T13:49:20.6021110Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6021150Z     
2025-01-10T13:49:20.6021210Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6021280Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6021340Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6021490Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6021550Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6021610Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6021690Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6021700Z 
2025-01-10T13:49:20.6021790Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6021880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6021880Z 
2025-01-10T13:49:20.6021990Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6022050Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6022120Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6022180Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6022280Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6022340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6022420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6022480Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6022520Z err_msg = None
2025-01-10T13:49:20.6022530Z 
2025-01-10T13:49:20.6022600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6022650Z         if err_msg is None:
2025-01-10T13:49:20.6022710Z             if left.shape != right.shape:
2025-01-10T13:49:20.6022770Z                 raise_assert_detail(
2025-01-10T13:49:20.6022880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6022920Z                 )
2025-01-10T13:49:20.6022960Z     
2025-01-10T13:49:20.6023010Z             diff = 0
2025-01-10T13:49:20.6023090Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6023150Z                 # count up differences
2025-01-10T13:49:20.6023280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6023330Z                     diff += 1
2025-01-10T13:49:20.6023370Z     
2025-01-10T13:49:20.6023430Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6023560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6023700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6023770Z E           AssertionError: Series are different
2025-01-10T13:49:20.6023810Z E           
2025-01-10T13:49:20.6023890Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6024180Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6024480Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6024770Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6024810Z 
2025-01-10T13:49:20.6025030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6025170Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-01-10T13:49:20.6025180Z 
2025-01-10T13:49:20.6025280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6025380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6025450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6025540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6025640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6025710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6025760Z err_msg = None
2025-01-10T13:49:20.6025760Z 
2025-01-10T13:49:20.6025840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6025890Z         if err_msg is None:
2025-01-10T13:49:20.6025950Z             if left.shape != right.shape:
2025-01-10T13:49:20.6026010Z                 raise_assert_detail(
2025-01-10T13:49:20.6026120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6026170Z                 )
2025-01-10T13:49:20.6026210Z     
2025-01-10T13:49:20.6026260Z             diff = 0
2025-01-10T13:49:20.6026340Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6026400Z                 # count up differences
2025-01-10T13:49:20.6026530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6026580Z                     diff += 1
2025-01-10T13:49:20.6026620Z     
2025-01-10T13:49:20.6026680Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6026780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6026910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6026990Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6027030Z E           
2025-01-10T13:49:20.6027280Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6027490Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6027700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6027710Z 
2025-01-10T13:49:20.6027950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6027950Z 
2025-01-10T13:49:20.6028080Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6028090Z 
2025-01-10T13:49:20.6028250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0ddf0>
2025-01-10T13:49:20.6028410Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>, attr = 'nu'
2025-01-10T13:49:20.6028410Z 
2025-01-10T13:49:20.6028510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6028600Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6028680Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6028730Z         try:
2025-01-10T13:49:20.6028850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6028910Z         except KeyError:
2025-01-10T13:49:20.6029350Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6029400Z     
2025-01-10T13:49:20.6029460Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6029520Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6029590Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6029700Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6029760Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6029820Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6029910Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6029910Z 
2025-01-10T13:49:20.6030000Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6030090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6030200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6030250Z     ???
2025-01-10T13:49:20.6030340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6030340Z 
2025-01-10T13:49:20.6030390Z >   ???
2025-01-10T13:49:20.6030480Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6030520Z E   
2025-01-10T13:49:20.6030630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6030710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6030760Z E          ...
2025-01-10T13:49:20.6030820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6030920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6031000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6031050Z E          ...
2025-01-10T13:49:20.6031110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6031210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6031290Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6031290Z 
2025-01-10T13:49:20.6031350Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6031510Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-01-10T13:49:20.6031510Z 
2025-01-10T13:49:20.6031670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6031780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6031850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6031950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6032050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6032120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6032170Z err_msg = None
2025-01-10T13:49:20.6032170Z 
2025-01-10T13:49:20.6032250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6032310Z         if err_msg is None:
2025-01-10T13:49:20.6032380Z             if left.shape != right.shape:
2025-01-10T13:49:20.6032440Z                 raise_assert_detail(
2025-01-10T13:49:20.6032550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6032590Z                 )
2025-01-10T13:49:20.6032640Z     
2025-01-10T13:49:20.6032690Z             diff = 0
2025-01-10T13:49:20.6032770Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6032830Z                 # count up differences
2025-01-10T13:49:20.6032960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6033010Z                     diff += 1
2025-01-10T13:49:20.6033060Z     
2025-01-10T13:49:20.6033120Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6033230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6033410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6033490Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6033540Z E           
2025-01-10T13:49:20.6033620Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6033830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6034040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6034050Z 
2025-01-10T13:49:20.6034290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6034290Z 
2025-01-10T13:49:20.6034420Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6034430Z 
2025-01-10T13:49:20.6034590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0deb0>
2025-01-10T13:49:20.6034710Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>
2025-01-10T13:49:20.6034760Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6034770Z 
2025-01-10T13:49:20.6034880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6034960Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6035020Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6035060Z         try:
2025-01-10T13:49:20.6035170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6035230Z         except KeyError:
2025-01-10T13:49:20.6035340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6035380Z     
2025-01-10T13:49:20.6035440Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6035510Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6035610Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6035720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6035770Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6035840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6035920Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6035930Z 
2025-01-10T13:49:20.6036020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6036110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6036220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6036260Z     ???
2025-01-10T13:49:20.6036350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6036360Z 
2025-01-10T13:49:20.6036400Z >   ???
2025-01-10T13:49:20.6036500Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6036540Z E   
2025-01-10T13:49:20.6036640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6036720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6036770Z E          ...
2025-01-10T13:49:20.6036830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6036930Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6037020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6037060Z E          ...
2025-01-10T13:49:20.6037130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6037220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6037350Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6037350Z 
2025-01-10T13:49:20.6037420Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6037560Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-01-10T13:49:20.6037560Z 
2025-01-10T13:49:20.6037670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6037770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6037840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6037940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6038040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6038110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6038170Z err_msg = None
2025-01-10T13:49:20.6038170Z 
2025-01-10T13:49:20.6038250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6038310Z         if err_msg is None:
2025-01-10T13:49:20.6038370Z             if left.shape != right.shape:
2025-01-10T13:49:20.6038430Z                 raise_assert_detail(
2025-01-10T13:49:20.6038540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6038580Z                 )
2025-01-10T13:49:20.6038630Z     
2025-01-10T13:49:20.6038680Z             diff = 0
2025-01-10T13:49:20.6038760Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6038820Z                 # count up differences
2025-01-10T13:49:20.6038960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6039010Z                     diff += 1
2025-01-10T13:49:20.6039050Z     
2025-01-10T13:49:20.6039110Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6039220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6039360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6039440Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6039490Z E           
2025-01-10T13:49:20.6039610Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6039830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6040040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6040040Z 
2025-01-10T13:49:20.6040360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6040360Z 
2025-01-10T13:49:20.6040490Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6040500Z 
2025-01-10T13:49:20.6040660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0df70>
2025-01-10T13:49:20.6040820Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>, attr = 'f_lu'
2025-01-10T13:49:20.6040820Z 
2025-01-10T13:49:20.6040930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6041010Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6041070Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6041110Z         try:
2025-01-10T13:49:20.6041220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6041280Z         except KeyError:
2025-01-10T13:49:20.6041430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6041470Z     
2025-01-10T13:49:20.6041530Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6041600Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6041660Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6041760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6041820Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6041890Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6041970Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6041980Z 
2025-01-10T13:49:20.6042070Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6042160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6042280Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6042320Z     ???
2025-01-10T13:49:20.6042410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6042410Z 
2025-01-10T13:49:20.6042460Z >   ???
2025-01-10T13:49:20.6042550Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6042600Z E   
2025-01-10T13:49:20.6042700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6042780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6042840Z E          ...
2025-01-10T13:49:20.6042900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6043000Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6043080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6043130Z E          ...
2025-01-10T13:49:20.6043190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6043290Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6043370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6043370Z 
2025-01-10T13:49:20.6043430Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6043590Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-01-10T13:49:20.6043590Z 
2025-01-10T13:49:20.6044030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6044160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6044230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6044340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6044450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6044520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6044570Z err_msg = None
2025-01-10T13:49:20.6044580Z 
2025-01-10T13:49:20.6044660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6044710Z         if err_msg is None:
2025-01-10T13:49:20.6044800Z             if left.shape != right.shape:
2025-01-10T13:49:20.6044870Z                 raise_assert_detail(
2025-01-10T13:49:20.6044980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6045030Z                 )
2025-01-10T13:49:20.6045070Z     
2025-01-10T13:49:20.6045120Z             diff = 0
2025-01-10T13:49:20.6045200Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6045270Z                 # count up differences
2025-01-10T13:49:20.6045400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6045460Z                     diff += 1
2025-01-10T13:49:20.6045500Z     
2025-01-10T13:49:20.6045560Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6045670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6046270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6046370Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6046410Z E           
2025-01-10T13:49:20.6046500Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6046700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6046920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6046930Z 
2025-01-10T13:49:20.6047170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6047170Z 
2025-01-10T13:49:20.6047300Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6047300Z 
2025-01-10T13:49:20.6047470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0e6f0>
2025-01-10T13:49:20.6047600Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>
2025-01-10T13:49:20.6047650Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6047650Z 
2025-01-10T13:49:20.6047760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6047840Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6047900Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6047940Z         try:
2025-01-10T13:49:20.6048050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6048100Z         except KeyError:
2025-01-10T13:49:20.6048220Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6048260Z     
2025-01-10T13:49:20.6048320Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6048380Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6048510Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6048620Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6048680Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6048750Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6048840Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6048890Z             else:
2025-01-10T13:49:20.6048960Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6049040Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6049040Z 
2025-01-10T13:49:20.6049130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6049230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6049340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6049390Z     ???
2025-01-10T13:49:20.6049470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6049480Z 
2025-01-10T13:49:20.6049530Z >   ???
2025-01-10T13:49:20.6049620Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6049660Z E   
2025-01-10T13:49:20.6049760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6049850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6049890Z E          ...
2025-01-10T13:49:20.6049960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6050060Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6050140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6050240Z E          ...
2025-01-10T13:49:20.6050300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6050400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6050470Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6050470Z 
2025-01-10T13:49:20.6050540Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6050690Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-01-10T13:49:20.6050700Z 
2025-01-10T13:49:20.6050800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6050900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6050970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6051080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6051170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6051250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6051300Z err_msg = None
2025-01-10T13:49:20.6051300Z 
2025-01-10T13:49:20.6051380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6051440Z         if err_msg is None:
2025-01-10T13:49:20.6051510Z             if left.shape != right.shape:
2025-01-10T13:49:20.6051570Z                 raise_assert_detail(
2025-01-10T13:49:20.6051680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6051720Z                 )
2025-01-10T13:49:20.6051950Z     
2025-01-10T13:49:20.6052000Z             diff = 0
2025-01-10T13:49:20.6052150Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6052310Z                 # count up differences
2025-01-10T13:49:20.6052520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6052680Z                     diff += 1
2025-01-10T13:49:20.6052720Z     
2025-01-10T13:49:20.6052910Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6053090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6053380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6053550Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6053590Z E           
2025-01-10T13:49:20.6059100Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6059340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6059560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6059570Z 
2025-01-10T13:49:20.6059810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6059820Z 
2025-01-10T13:49:20.6059950Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6059950Z 
2025-01-10T13:49:20.6060130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0e7b0>
2025-01-10T13:49:20.6060250Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>
2025-01-10T13:49:20.6060300Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6060300Z 
2025-01-10T13:49:20.6060410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6060500Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6060690Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6060750Z         try:
2025-01-10T13:49:20.6060850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6060910Z         except KeyError:
2025-01-10T13:49:20.6061020Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6061070Z     
2025-01-10T13:49:20.6061120Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6061200Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6061260Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6061370Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6061430Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6061490Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6061570Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6061620Z             else:
2025-01-10T13:49:20.6061690Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6061770Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6061780Z 
2025-01-10T13:49:20.6061870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6061960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6062080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6062120Z     ???
2025-01-10T13:49:20.6062210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6062210Z 
2025-01-10T13:49:20.6062250Z >   ???
2025-01-10T13:49:20.6062340Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6062390Z E   
2025-01-10T13:49:20.6062490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6062570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6062610Z E          ...
2025-01-10T13:49:20.6062680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6062780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6062870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6062910Z E          ...
2025-01-10T13:49:20.6063030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6063130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6063210Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6063210Z 
2025-01-10T13:49:20.6063280Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6063420Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-01-10T13:49:20.6063430Z 
2025-01-10T13:49:20.6063530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6063630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6063710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6063810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6063920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6063990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6064040Z err_msg = None
2025-01-10T13:49:20.6064050Z 
2025-01-10T13:49:20.6064130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6064180Z         if err_msg is None:
2025-01-10T13:49:20.6064260Z             if left.shape != right.shape:
2025-01-10T13:49:20.6064320Z                 raise_assert_detail(
2025-01-10T13:49:20.6064440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6064480Z                 )
2025-01-10T13:49:20.6064530Z     
2025-01-10T13:49:20.6064580Z             diff = 0
2025-01-10T13:49:20.6064660Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6064760Z                 # count up differences
2025-01-10T13:49:20.6064900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6064950Z                     diff += 1
2025-01-10T13:49:20.6065010Z     
2025-01-10T13:49:20.6065070Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6065190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6065330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6065410Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6065460Z E           
2025-01-10T13:49:20.6065540Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6065760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6065970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6065980Z 
2025-01-10T13:49:20.6066220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6066220Z 
2025-01-10T13:49:20.6066360Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6066360Z 
2025-01-10T13:49:20.6066530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0e930>
2025-01-10T13:49:20.6066690Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c63fc50>, attr = 'j_blues'
2025-01-10T13:49:20.6066700Z 
2025-01-10T13:49:20.6066800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6066890Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6066950Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6067000Z         try:
2025-01-10T13:49:20.6067350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6067410Z         except KeyError:
2025-01-10T13:49:20.6067520Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6067570Z     
2025-01-10T13:49:20.6067630Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6067690Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6067760Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6067860Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6067920Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6067980Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6068080Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6068130Z             else:
2025-01-10T13:49:20.6068190Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6068270Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6068280Z 
2025-01-10T13:49:20.6068370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6068460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6068570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6068620Z     ???
2025-01-10T13:49:20.6068710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6068710Z 
2025-01-10T13:49:20.6068760Z >   ???
2025-01-10T13:49:20.6068850Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6068900Z E   
2025-01-10T13:49:20.6068990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6069280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6069320Z E          ...
2025-01-10T13:49:20.6069390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6069490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6069570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6069630Z E          ...
2025-01-10T13:49:20.6069690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6069790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6069870Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6069870Z 
2025-01-10T13:49:20.6069930Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6070090Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-01-10T13:49:20.6070090Z 
2025-01-10T13:49:20.6070190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6070300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6070370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6070480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6070580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6070650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6070700Z err_msg = None
2025-01-10T13:49:20.6070700Z 
2025-01-10T13:49:20.6070780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6070840Z         if err_msg is None:
2025-01-10T13:49:20.6070900Z             if left.shape != right.shape:
2025-01-10T13:49:20.6070960Z                 raise_assert_detail(
2025-01-10T13:49:20.6071080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6071130Z                 )
2025-01-10T13:49:20.6071170Z     
2025-01-10T13:49:20.6071220Z             diff = 0
2025-01-10T13:49:20.6071300Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6071360Z                 # count up differences
2025-01-10T13:49:20.6071540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6071600Z                     diff += 1
2025-01-10T13:49:20.6071640Z     
2025-01-10T13:49:20.6071700Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6071810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6071950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6072030Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6072080Z E           
2025-01-10T13:49:20.6072160Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6072380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6072600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6072600Z 
2025-01-10T13:49:20.6072830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6072840Z 
2025-01-10T13:49:20.6072960Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6072970Z 
2025-01-10T13:49:20.6073190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0f6b0>
2025-01-10T13:49:20.6073340Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>, attr = 'lines'
2025-01-10T13:49:20.6073350Z 
2025-01-10T13:49:20.6073450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6073540Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6073600Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6073650Z         try:
2025-01-10T13:49:20.6073750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6073810Z         except KeyError:
2025-01-10T13:49:20.6073910Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6073960Z     
2025-01-10T13:49:20.6074020Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6074090Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6074150Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6074260Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6074320Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6074380Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6074460Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6074520Z             else:
2025-01-10T13:49:20.6074580Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6074660Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6074670Z 
2025-01-10T13:49:20.6074750Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6074840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6074950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6075000Z     ???
2025-01-10T13:49:20.6075090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6075090Z 
2025-01-10T13:49:20.6075130Z >   ???
2025-01-10T13:49:20.6075230Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6075270Z E   
2025-01-10T13:49:20.6075370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6075460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6075550Z E          ...
2025-01-10T13:49:20.6075610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6075710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6075800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6075850Z E          ...
2025-01-10T13:49:20.6075910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6076000Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6076080Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6076080Z 
2025-01-10T13:49:20.6076140Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6076320Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-01-10T13:49:20.6076330Z 
2025-01-10T13:49:20.6076500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0f770>
2025-01-10T13:49:20.6076630Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>
2025-01-10T13:49:20.6076690Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6076690Z 
2025-01-10T13:49:20.6076800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6076880Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6076950Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6076990Z         try:
2025-01-10T13:49:20.6077100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6077160Z         except KeyError:
2025-01-10T13:49:20.6077270Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6077310Z     
2025-01-10T13:49:20.6077370Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6077480Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6077540Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6077650Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6077700Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6077770Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6077850Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6077850Z 
2025-01-10T13:49:20.6077950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6078030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6078040Z 
2025-01-10T13:49:20.6078140Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6078200Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6078290Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6078340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6078450Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6078510Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6078600Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6078650Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6078700Z err_msg = None
2025-01-10T13:49:20.6078710Z 
2025-01-10T13:49:20.6078780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6078840Z         if err_msg is None:
2025-01-10T13:49:20.6078900Z             if left.shape != right.shape:
2025-01-10T13:49:20.6078960Z                 raise_assert_detail(
2025-01-10T13:49:20.6079060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6079110Z                 )
2025-01-10T13:49:20.6079150Z     
2025-01-10T13:49:20.6079210Z             diff = 0
2025-01-10T13:49:20.6079290Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6079350Z                 # count up differences
2025-01-10T13:49:20.6079480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6079530Z                     diff += 1
2025-01-10T13:49:20.6079610Z     
2025-01-10T13:49:20.6079680Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6079780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6079920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6079990Z E           AssertionError: Series are different
2025-01-10T13:49:20.6080030Z E           
2025-01-10T13:49:20.6080110Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6080410Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6080690Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6080960Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6081000Z 
2025-01-10T13:49:20.6081230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6081410Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-01-10T13:49:20.6081410Z 
2025-01-10T13:49:20.6081580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0f830>
2025-01-10T13:49:20.6081700Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>
2025-01-10T13:49:20.6081760Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6081760Z 
2025-01-10T13:49:20.6081860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6081950Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6082010Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6082060Z         try:
2025-01-10T13:49:20.6082170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6082220Z         except KeyError:
2025-01-10T13:49:20.6082330Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6082370Z     
2025-01-10T13:49:20.6082430Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6082500Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6082560Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6082670Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6082730Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6082790Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6082870Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6082880Z 
2025-01-10T13:49:20.6082970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6083060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6083060Z 
2025-01-10T13:49:20.6083170Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6083230Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6083320Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6083380Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6083800Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6083870Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6083960Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6084020Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6084060Z err_msg = None
2025-01-10T13:49:20.6084060Z 
2025-01-10T13:49:20.6084140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6084190Z         if err_msg is None:
2025-01-10T13:49:20.6084260Z             if left.shape != right.shape:
2025-01-10T13:49:20.6084320Z                 raise_assert_detail(
2025-01-10T13:49:20.6084430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6084480Z                 )
2025-01-10T13:49:20.6084520Z     
2025-01-10T13:49:20.6084570Z             diff = 0
2025-01-10T13:49:20.6084650Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6084720Z                 # count up differences
2025-01-10T13:49:20.6084850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6084910Z                     diff += 1
2025-01-10T13:49:20.6084950Z     
2025-01-10T13:49:20.6085020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6085130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6085270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6085340Z E           AssertionError: Series are different
2025-01-10T13:49:20.6085380Z E           
2025-01-10T13:49:20.6085460Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6085960Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6086260Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6086570Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6086570Z 
2025-01-10T13:49:20.6086810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6086960Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-01-10T13:49:20.6086960Z 
2025-01-10T13:49:20.6087060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6087170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6087240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6087340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6087440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6087510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6087610Z err_msg = None
2025-01-10T13:49:20.6087610Z 
2025-01-10T13:49:20.6087690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6087750Z         if err_msg is None:
2025-01-10T13:49:20.6087810Z             if left.shape != right.shape:
2025-01-10T13:49:20.6087870Z                 raise_assert_detail(
2025-01-10T13:49:20.6087980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6088030Z                 )
2025-01-10T13:49:20.6088070Z     
2025-01-10T13:49:20.6088120Z             diff = 0
2025-01-10T13:49:20.6088200Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6088260Z                 # count up differences
2025-01-10T13:49:20.6088400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6088450Z                     diff += 1
2025-01-10T13:49:20.6088490Z     
2025-01-10T13:49:20.6088550Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6088660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6088790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6088880Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6088920Z E           
2025-01-10T13:49:20.6089010Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6089210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6089470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6089480Z 
2025-01-10T13:49:20.6089710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6089720Z 
2025-01-10T13:49:20.6089840Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6089850Z 
2025-01-10T13:49:20.6090010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0fa70>
2025-01-10T13:49:20.6090160Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>, attr = 'nu'
2025-01-10T13:49:20.6090160Z 
2025-01-10T13:49:20.6090270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6090360Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6090410Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6090460Z         try:
2025-01-10T13:49:20.6090570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6090630Z         except KeyError:
2025-01-10T13:49:20.6090730Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6090770Z     
2025-01-10T13:49:20.6090830Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6090900Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6090960Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6091060Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6091120Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6091180Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6091270Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6091270Z 
2025-01-10T13:49:20.6091360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6091450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6091600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6091650Z     ???
2025-01-10T13:49:20.6091740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6091740Z 
2025-01-10T13:49:20.6091790Z >   ???
2025-01-10T13:49:20.6091880Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6091920Z E   
2025-01-10T13:49:20.6092020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6092100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6092150Z E          ...
2025-01-10T13:49:20.6092210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6092310Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6092400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6092440Z E          ...
2025-01-10T13:49:20.6092500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6092600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6092670Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6092670Z 
2025-01-10T13:49:20.6092740Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6092900Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-01-10T13:49:20.6092900Z 
2025-01-10T13:49:20.6093000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6093100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6093170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6093280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6093420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6093490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6093540Z err_msg = None
2025-01-10T13:49:20.6093540Z 
2025-01-10T13:49:20.6093620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6093680Z         if err_msg is None:
2025-01-10T13:49:20.6093740Z             if left.shape != right.shape:
2025-01-10T13:49:20.6093800Z                 raise_assert_detail(
2025-01-10T13:49:20.6093910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6093960Z                 )
2025-01-10T13:49:20.6094000Z     
2025-01-10T13:49:20.6094050Z             diff = 0
2025-01-10T13:49:20.6094130Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6094190Z                 # count up differences
2025-01-10T13:49:20.6094320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6094380Z                     diff += 1
2025-01-10T13:49:20.6094420Z     
2025-01-10T13:49:20.6094480Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6094590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6094720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6094810Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6094850Z E           
2025-01-10T13:49:20.6094940Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6095150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6095400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6095410Z 
2025-01-10T13:49:20.6095640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6095650Z 
2025-01-10T13:49:20.6095780Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6095780Z 
2025-01-10T13:49:20.6095950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0fb30>
2025-01-10T13:49:20.6096060Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>
2025-01-10T13:49:20.6096120Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6096130Z 
2025-01-10T13:49:20.6096230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6096320Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6096380Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6096430Z         try:
2025-01-10T13:49:20.6096530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6096590Z         except KeyError:
2025-01-10T13:49:20.6096700Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6096740Z     
2025-01-10T13:49:20.6096800Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6096870Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6096930Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6097030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6097090Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6097150Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6097250Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6097290Z 
2025-01-10T13:49:20.6097380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6097470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6097580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6097630Z     ???
2025-01-10T13:49:20.6097720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6097730Z 
2025-01-10T13:49:20.6097770Z >   ???
2025-01-10T13:49:20.6097860Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6097900Z E   
2025-01-10T13:49:20.6098010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6098090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6098130Z E          ...
2025-01-10T13:49:20.6098190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6098290Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6098380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6098430Z E          ...
2025-01-10T13:49:20.6098490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6098590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6098660Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6098670Z 
2025-01-10T13:49:20.6098720Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6098880Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-01-10T13:49:20.6098880Z 
2025-01-10T13:49:20.6098980Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6099090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6099160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6099270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6099370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6099440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6099700Z err_msg = None
2025-01-10T13:49:20.6099710Z 
2025-01-10T13:49:20.6099790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6099850Z         if err_msg is None:
2025-01-10T13:49:20.6099920Z             if left.shape != right.shape:
2025-01-10T13:49:20.6099980Z                 raise_assert_detail(
2025-01-10T13:49:20.6100090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6100140Z                 )
2025-01-10T13:49:20.6100180Z     
2025-01-10T13:49:20.6100230Z             diff = 0
2025-01-10T13:49:20.6100310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6100380Z                 # count up differences
2025-01-10T13:49:20.6100510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6100560Z                     diff += 1
2025-01-10T13:49:20.6100610Z     
2025-01-10T13:49:20.6100670Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6100780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6100910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6101080Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6101130Z E           
2025-01-10T13:49:20.6101210Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6101420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6101860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6101870Z 
2025-01-10T13:49:20.6102100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6102110Z 
2025-01-10T13:49:20.6102240Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6102240Z 
2025-01-10T13:49:20.6102410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba0fbf0>
2025-01-10T13:49:20.6102560Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>, attr = 'f_lu'
2025-01-10T13:49:20.6102560Z 
2025-01-10T13:49:20.6102670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6102760Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6102810Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6102860Z         try:
2025-01-10T13:49:20.6102970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6103020Z         except KeyError:
2025-01-10T13:49:20.6103120Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6103170Z     
2025-01-10T13:49:20.6103230Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6103310Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6103370Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6103470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6103530Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6103600Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6103680Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6103690Z 
2025-01-10T13:49:20.6103900Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6104140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6104420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6104550Z     ???
2025-01-10T13:49:20.6104660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6104660Z 
2025-01-10T13:49:20.6110610Z >   ???
2025-01-10T13:49:20.6110760Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6110800Z E   
2025-01-10T13:49:20.6110900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6110990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6111040Z E          ...
2025-01-10T13:49:20.6111100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6111200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6111300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6111340Z E          ...
2025-01-10T13:49:20.6111410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6111500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6111580Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6111580Z 
2025-01-10T13:49:20.6111640Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6111810Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-01-10T13:49:20.6111810Z 
2025-01-10T13:49:20.6111910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6112020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6112090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6112200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6112490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6112560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6112610Z err_msg = None
2025-01-10T13:49:20.6112610Z 
2025-01-10T13:49:20.6112690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6112750Z         if err_msg is None:
2025-01-10T13:49:20.6112810Z             if left.shape != right.shape:
2025-01-10T13:49:20.6112870Z                 raise_assert_detail(
2025-01-10T13:49:20.6112980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6113030Z                 )
2025-01-10T13:49:20.6113070Z     
2025-01-10T13:49:20.6113120Z             diff = 0
2025-01-10T13:49:20.6113210Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6113270Z                 # count up differences
2025-01-10T13:49:20.6113410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6113460Z                     diff += 1
2025-01-10T13:49:20.6113500Z     
2025-01-10T13:49:20.6113560Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6113670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6113810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6113890Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6113940Z E           
2025-01-10T13:49:20.6114020Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6114230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6114540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6114540Z 
2025-01-10T13:49:20.6114790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6114790Z 
2025-01-10T13:49:20.6114920Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6114930Z 
2025-01-10T13:49:20.6115090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba303b0>
2025-01-10T13:49:20.6115220Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>
2025-01-10T13:49:20.6115270Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6115270Z 
2025-01-10T13:49:20.6115380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6115470Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6115530Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6115570Z         try:
2025-01-10T13:49:20.6115690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6115740Z         except KeyError:
2025-01-10T13:49:20.6115840Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6115880Z     
2025-01-10T13:49:20.6115950Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6116010Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6116070Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6116180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6116240Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6116310Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6116390Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6116490Z             else:
2025-01-10T13:49:20.6116560Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6116640Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6116650Z 
2025-01-10T13:49:20.6116740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6116830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6116940Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6116990Z     ???
2025-01-10T13:49:20.6117080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6117080Z 
2025-01-10T13:49:20.6117130Z >   ???
2025-01-10T13:49:20.6117220Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6117260Z E   
2025-01-10T13:49:20.6117360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6117440Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6117490Z E          ...
2025-01-10T13:49:20.6117550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6117650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6117740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6117790Z E          ...
2025-01-10T13:49:20.6117850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6117950Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6118020Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6118030Z 
2025-01-10T13:49:20.6118080Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6118250Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-01-10T13:49:20.6118250Z 
2025-01-10T13:49:20.6118350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6118450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6118530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6118630Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6118780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6118860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6118910Z err_msg = None
2025-01-10T13:49:20.6118910Z 
2025-01-10T13:49:20.6118990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6119050Z         if err_msg is None:
2025-01-10T13:49:20.6119110Z             if left.shape != right.shape:
2025-01-10T13:49:20.6119170Z                 raise_assert_detail(
2025-01-10T13:49:20.6119280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6119330Z                 )
2025-01-10T13:49:20.6119380Z     
2025-01-10T13:49:20.6119420Z             diff = 0
2025-01-10T13:49:20.6119510Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6119570Z                 # count up differences
2025-01-10T13:49:20.6119700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6119750Z                     diff += 1
2025-01-10T13:49:20.6119790Z     
2025-01-10T13:49:20.6119860Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6119960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6120100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6120190Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6120230Z E           
2025-01-10T13:49:20.6120320Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6120520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6120780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6120790Z 
2025-01-10T13:49:20.6121030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6121030Z 
2025-01-10T13:49:20.6121160Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6121160Z 
2025-01-10T13:49:20.6121330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba30470>
2025-01-10T13:49:20.6121450Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>
2025-01-10T13:49:20.6121510Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6121510Z 
2025-01-10T13:49:20.6121610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6121700Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6121760Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6121810Z         try:
2025-01-10T13:49:20.6121930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6121980Z         except KeyError:
2025-01-10T13:49:20.6122090Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6122130Z     
2025-01-10T13:49:20.6122200Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6122260Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6122330Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6122430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6122490Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6122550Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6122640Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6122950Z             else:
2025-01-10T13:49:20.6123060Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6123140Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6123150Z 
2025-01-10T13:49:20.6123230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6123330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6123440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6123480Z     ???
2025-01-10T13:49:20.6123570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6123570Z 
2025-01-10T13:49:20.6123620Z >   ???
2025-01-10T13:49:20.6123710Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6123760Z E   
2025-01-10T13:49:20.6123850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6123940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6123980Z E          ...
2025-01-10T13:49:20.6124050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6124150Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6124230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6124280Z E          ...
2025-01-10T13:49:20.6124340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6124440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6124510Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6124510Z 
2025-01-10T13:49:20.6124580Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6124730Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-01-10T13:49:20.6125080Z 
2025-01-10T13:49:20.6125190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6125300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6125380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6125500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6125600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6125680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6125720Z err_msg = None
2025-01-10T13:49:20.6125720Z 
2025-01-10T13:49:20.6125810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6125860Z         if err_msg is None:
2025-01-10T13:49:20.6125930Z             if left.shape != right.shape:
2025-01-10T13:49:20.6125990Z                 raise_assert_detail(
2025-01-10T13:49:20.6126100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6126150Z                 )
2025-01-10T13:49:20.6126190Z     
2025-01-10T13:49:20.6126240Z             diff = 0
2025-01-10T13:49:20.6126320Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6126410Z                 # count up differences
2025-01-10T13:49:20.6126550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6126600Z                     diff += 1
2025-01-10T13:49:20.6126650Z     
2025-01-10T13:49:20.6126710Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6126810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6126950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6127050Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6127110Z E           
2025-01-10T13:49:20.6127190Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6127480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6127700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6127700Z 
2025-01-10T13:49:20.6127940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6127950Z 
2025-01-10T13:49:20.6128080Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6128080Z 
2025-01-10T13:49:20.6128260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba305f0>
2025-01-10T13:49:20.6128420Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0fc140>, attr = 'j_blues'
2025-01-10T13:49:20.6128420Z 
2025-01-10T13:49:20.6128530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6128620Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6128680Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6128740Z         try:
2025-01-10T13:49:20.6128860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6128910Z         except KeyError:
2025-01-10T13:49:20.6129020Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6129070Z     
2025-01-10T13:49:20.6129130Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6129270Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6129330Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6129440Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6129500Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6129580Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6129660Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6129710Z             else:
2025-01-10T13:49:20.6129770Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6129850Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6129860Z 
2025-01-10T13:49:20.6129940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6130030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6130140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6130190Z     ???
2025-01-10T13:49:20.6130280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6130280Z 
2025-01-10T13:49:20.6130330Z >   ???
2025-01-10T13:49:20.6130420Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6130470Z E   
2025-01-10T13:49:20.6130570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6130650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6130700Z E          ...
2025-01-10T13:49:20.6130760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6130860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6130940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6130990Z E          ...
2025-01-10T13:49:20.6131050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6131150Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6131230Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6131230Z 
2025-01-10T13:49:20.6131290Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6131480Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-01-10T13:49:20.6131490Z 
2025-01-10T13:49:20.6131640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6131750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6131830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6131930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6132030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6132100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6132150Z err_msg = None
2025-01-10T13:49:20.6132160Z 
2025-01-10T13:49:20.6132230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6132290Z         if err_msg is None:
2025-01-10T13:49:20.6132360Z             if left.shape != right.shape:
2025-01-10T13:49:20.6132420Z                 raise_assert_detail(
2025-01-10T13:49:20.6132550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6132600Z                 )
2025-01-10T13:49:20.6132640Z     
2025-01-10T13:49:20.6132690Z             diff = 0
2025-01-10T13:49:20.6132770Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6132830Z                 # count up differences
2025-01-10T13:49:20.6132960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6133020Z                     diff += 1
2025-01-10T13:49:20.6133060Z     
2025-01-10T13:49:20.6133120Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6133230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6133450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6133540Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6133580Z E           
2025-01-10T13:49:20.6133670Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6133880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6134090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6134100Z 
2025-01-10T13:49:20.6134330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6134330Z 
2025-01-10T13:49:20.6134470Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6134480Z 
2025-01-10T13:49:20.6134640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba31370>
2025-01-10T13:49:20.6134800Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>, attr = 'lines'
2025-01-10T13:49:20.6134800Z 
2025-01-10T13:49:20.6134910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6134990Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6135050Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6135090Z         try:
2025-01-10T13:49:20.6135200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6135250Z         except KeyError:
2025-01-10T13:49:20.6135370Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6135410Z     
2025-01-10T13:49:20.6135480Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6135540Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6135650Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6135760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6135820Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6135880Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6135970Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6136020Z             else:
2025-01-10T13:49:20.6136080Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6136160Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6136170Z 
2025-01-10T13:49:20.6136260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6136340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6136460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6136500Z     ???
2025-01-10T13:49:20.6136590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6136600Z 
2025-01-10T13:49:20.6136640Z >   ???
2025-01-10T13:49:20.6136740Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6136780Z E   
2025-01-10T13:49:20.6136880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6136960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6137010Z E          ...
2025-01-10T13:49:20.6137070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6137170Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6137250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6137300Z E          ...
2025-01-10T13:49:20.6137400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6137500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6137580Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6137580Z 
2025-01-10T13:49:20.6137640Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6137880Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-01-10T13:49:20.6137880Z 
2025-01-10T13:49:20.6138050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba31430>
2025-01-10T13:49:20.6138170Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>
2025-01-10T13:49:20.6138230Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6138240Z 
2025-01-10T13:49:20.6138340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6138420Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6138490Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6138530Z         try:
2025-01-10T13:49:20.6138650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6138700Z         except KeyError:
2025-01-10T13:49:20.6138800Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6138860Z     
2025-01-10T13:49:20.6138910Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6138980Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6139040Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6139150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6139210Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6139270Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6139350Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6139350Z 
2025-01-10T13:49:20.6139450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6139530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6139540Z 
2025-01-10T13:49:20.6139650Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6139710Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6139980Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6140050Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6140160Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6140220Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6140300Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6140400Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6140450Z err_msg = None
2025-01-10T13:49:20.6140450Z 
2025-01-10T13:49:20.6140530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6140580Z         if err_msg is None:
2025-01-10T13:49:20.6140650Z             if left.shape != right.shape:
2025-01-10T13:49:20.6140720Z                 raise_assert_detail(
2025-01-10T13:49:20.6140830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6140880Z                 )
2025-01-10T13:49:20.6140920Z     
2025-01-10T13:49:20.6140970Z             diff = 0
2025-01-10T13:49:20.6141160Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6141220Z                 # count up differences
2025-01-10T13:49:20.6141350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6141400Z                     diff += 1
2025-01-10T13:49:20.6141440Z     
2025-01-10T13:49:20.6141510Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6141610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6141750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6142140Z E           AssertionError: Series are different
2025-01-10T13:49:20.6142180Z E           
2025-01-10T13:49:20.6142260Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6142590Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6142870Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6143140Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6143150Z 
2025-01-10T13:49:20.6143380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6143610Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-01-10T13:49:20.6143620Z 
2025-01-10T13:49:20.6143780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba314f0>
2025-01-10T13:49:20.6143900Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>
2025-01-10T13:49:20.6143970Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6143970Z 
2025-01-10T13:49:20.6144070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6144160Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6144220Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6144260Z         try:
2025-01-10T13:49:20.6144450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6144510Z         except KeyError:
2025-01-10T13:49:20.6144620Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6144660Z     
2025-01-10T13:49:20.6144720Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6144790Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6144850Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6144950Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6145010Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6145070Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6145160Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6145170Z 
2025-01-10T13:49:20.6145250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6145340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6145350Z 
2025-01-10T13:49:20.6145450Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6145520Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6145600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6145660Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6145770Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6145820Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6145910Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6146030Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6146080Z err_msg = None
2025-01-10T13:49:20.6146080Z 
2025-01-10T13:49:20.6146160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6146210Z         if err_msg is None:
2025-01-10T13:49:20.6146280Z             if left.shape != right.shape:
2025-01-10T13:49:20.6146340Z                 raise_assert_detail(
2025-01-10T13:49:20.6146450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6146490Z                 )
2025-01-10T13:49:20.6146540Z     
2025-01-10T13:49:20.6146590Z             diff = 0
2025-01-10T13:49:20.6146670Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6146730Z                 # count up differences
2025-01-10T13:49:20.6146860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6146910Z                     diff += 1
2025-01-10T13:49:20.6146960Z     
2025-01-10T13:49:20.6147020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6147130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6147260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6147340Z E           AssertionError: Series are different
2025-01-10T13:49:20.6147390Z E           
2025-01-10T13:49:20.6147460Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6147760Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6148110Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6148420Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6148430Z 
2025-01-10T13:49:20.6148670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6148840Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-01-10T13:49:20.6148850Z 
2025-01-10T13:49:20.6148950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6149060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6149130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6149240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6149340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6149420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6149460Z err_msg = None
2025-01-10T13:49:20.6149470Z 
2025-01-10T13:49:20.6149550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6149600Z         if err_msg is None:
2025-01-10T13:49:20.6149680Z             if left.shape != right.shape:
2025-01-10T13:49:20.6149780Z                 raise_assert_detail(
2025-01-10T13:49:20.6149900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6149950Z                 )
2025-01-10T13:49:20.6150000Z     
2025-01-10T13:49:20.6150040Z             diff = 0
2025-01-10T13:49:20.6150130Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6150190Z                 # count up differences
2025-01-10T13:49:20.6150330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6150380Z                     diff += 1
2025-01-10T13:49:20.6150420Z     
2025-01-10T13:49:20.6150490Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6150590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6150730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6150810Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6150860Z E           
2025-01-10T13:49:20.6150950Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6151160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6151380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6151380Z 
2025-01-10T13:49:20.6151620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6151620Z 
2025-01-10T13:49:20.6151750Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6151760Z 
2025-01-10T13:49:20.6151920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba31730>
2025-01-10T13:49:20.6152120Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>, attr = 'nu'
2025-01-10T13:49:20.6152120Z 
2025-01-10T13:49:20.6152230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6152320Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6152380Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6152420Z         try:
2025-01-10T13:49:20.6152540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6152590Z         except KeyError:
2025-01-10T13:49:20.6152700Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6152740Z     
2025-01-10T13:49:20.6152810Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6152880Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6152940Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6153040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6153100Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6153170Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6153250Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6153260Z 
2025-01-10T13:49:20.6153350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6153440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6153560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6153600Z     ???
2025-01-10T13:49:20.6153690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6153690Z 
2025-01-10T13:49:20.6153740Z >   ???
2025-01-10T13:49:20.6153840Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6153920Z E   
2025-01-10T13:49:20.6154030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6154110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6154160Z E          ...
2025-01-10T13:49:20.6154220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6154320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6154410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6154450Z E          ...
2025-01-10T13:49:20.6154520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6154620Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6154710Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6154710Z 
2025-01-10T13:49:20.6154770Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6154980Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-01-10T13:49:20.6154990Z 
2025-01-10T13:49:20.6155280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6155390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6155580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6155780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6155970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6156040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6156290Z err_msg = None
2025-01-10T13:49:20.6156290Z 
2025-01-10T13:49:20.6156390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6156440Z         if err_msg is None:
2025-01-10T13:49:20.6156580Z             if left.shape != right.shape:
2025-01-10T13:49:20.6156710Z                 raise_assert_detail(
2025-01-10T13:49:20.6156880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6156930Z                 )
2025-01-10T13:49:20.6157050Z     
2025-01-10T13:49:20.6166810Z             diff = 0
2025-01-10T13:49:20.6167480Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6167550Z                 # count up differences
2025-01-10T13:49:20.6167690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6167740Z                     diff += 1
2025-01-10T13:49:20.6167780Z     
2025-01-10T13:49:20.6167850Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6167950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6168090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6168170Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6168230Z E           
2025-01-10T13:49:20.6168310Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6168520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6168730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6168740Z 
2025-01-10T13:49:20.6168980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6169170Z 
2025-01-10T13:49:20.6169310Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6169310Z 
2025-01-10T13:49:20.6169480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba317f0>
2025-01-10T13:49:20.6169610Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>
2025-01-10T13:49:20.6169660Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6169670Z 
2025-01-10T13:49:20.6169770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6169860Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6169910Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6169960Z         try:
2025-01-10T13:49:20.6170070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6170120Z         except KeyError:
2025-01-10T13:49:20.6170230Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6170270Z     
2025-01-10T13:49:20.6170330Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6170400Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6170460Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6170570Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6170620Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6170690Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6170780Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6170780Z 
2025-01-10T13:49:20.6170870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6170960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6171070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6171120Z     ???
2025-01-10T13:49:20.6171210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6171210Z 
2025-01-10T13:49:20.6171260Z >   ???
2025-01-10T13:49:20.6171360Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6171410Z E   
2025-01-10T13:49:20.6171500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6171590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6171690Z E          ...
2025-01-10T13:49:20.6171750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6171860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6171940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6171990Z E          ...
2025-01-10T13:49:20.6172050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6172150Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6172220Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6172220Z 
2025-01-10T13:49:20.6172290Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6172470Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-01-10T13:49:20.6172480Z 
2025-01-10T13:49:20.6172580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6172690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6172760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6172870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6172980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6173050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6173110Z err_msg = None
2025-01-10T13:49:20.6173110Z 
2025-01-10T13:49:20.6173190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6173240Z         if err_msg is None:
2025-01-10T13:49:20.6173360Z             if left.shape != right.shape:
2025-01-10T13:49:20.6173410Z                 raise_assert_detail(
2025-01-10T13:49:20.6173530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6173570Z                 )
2025-01-10T13:49:20.6173620Z     
2025-01-10T13:49:20.6173670Z             diff = 0
2025-01-10T13:49:20.6173750Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6173810Z                 # count up differences
2025-01-10T13:49:20.6173940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6174000Z                     diff += 1
2025-01-10T13:49:20.6174040Z     
2025-01-10T13:49:20.6174110Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6174210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6174360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6174460Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6174510Z E           
2025-01-10T13:49:20.6174590Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6174800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6175020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6175020Z 
2025-01-10T13:49:20.6175250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6175260Z 
2025-01-10T13:49:20.6175390Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6175400Z 
2025-01-10T13:49:20.6175560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba318b0>
2025-01-10T13:49:20.6175790Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>, attr = 'f_lu'
2025-01-10T13:49:20.6175800Z 
2025-01-10T13:49:20.6175910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6175990Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6176050Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6176090Z         try:
2025-01-10T13:49:20.6176200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6176250Z         except KeyError:
2025-01-10T13:49:20.6176360Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6176410Z     
2025-01-10T13:49:20.6176470Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6176540Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6176600Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6176710Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6176770Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6176840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6176920Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6176920Z 
2025-01-10T13:49:20.6177020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6177100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6177220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6177260Z     ???
2025-01-10T13:49:20.6177350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6177350Z 
2025-01-10T13:49:20.6177400Z >   ???
2025-01-10T13:49:20.6177550Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6177600Z E   
2025-01-10T13:49:20.6177700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6177780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6177830Z E          ...
2025-01-10T13:49:20.6177900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6177990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6178080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6178130Z E          ...
2025-01-10T13:49:20.6178190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6178290Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6178360Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6178370Z 
2025-01-10T13:49:20.6178430Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6178640Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-01-10T13:49:20.6178650Z 
2025-01-10T13:49:20.6178750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6178850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6178930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6179030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6179130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6179200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6179240Z err_msg = None
2025-01-10T13:49:20.6179250Z 
2025-01-10T13:49:20.6179330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6179380Z         if err_msg is None:
2025-01-10T13:49:20.6179450Z             if left.shape != right.shape:
2025-01-10T13:49:20.6179510Z                 raise_assert_detail(
2025-01-10T13:49:20.6179620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6179670Z                 )
2025-01-10T13:49:20.6179710Z     
2025-01-10T13:49:20.6179800Z             diff = 0
2025-01-10T13:49:20.6179890Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6179950Z                 # count up differences
2025-01-10T13:49:20.6180090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6180140Z                     diff += 1
2025-01-10T13:49:20.6180190Z     
2025-01-10T13:49:20.6180250Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6180350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6180490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6180570Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6180620Z E           
2025-01-10T13:49:20.6180700Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6180920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6181240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6181250Z 
2025-01-10T13:49:20.6181480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6181540Z 
2025-01-10T13:49:20.6181680Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6181680Z 
2025-01-10T13:49:20.6181840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba32030>
2025-01-10T13:49:20.6181970Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>
2025-01-10T13:49:20.6182020Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6182020Z 
2025-01-10T13:49:20.6182130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6182220Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6182270Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6182320Z         try:
2025-01-10T13:49:20.6182430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6182480Z         except KeyError:
2025-01-10T13:49:20.6182580Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6182630Z     
2025-01-10T13:49:20.6182690Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6182760Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6182820Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6182920Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6182980Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6183050Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6183140Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6183180Z             else:
2025-01-10T13:49:20.6183250Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6183330Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6183330Z 
2025-01-10T13:49:20.6183430Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6183520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6183630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6183670Z     ???
2025-01-10T13:49:20.6183770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6183770Z 
2025-01-10T13:49:20.6183810Z >   ???
2025-01-10T13:49:20.6184120Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6184170Z E   
2025-01-10T13:49:20.6184270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6184360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6184410Z E          ...
2025-01-10T13:49:20.6184470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6184570Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6184650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6184700Z E          ...
2025-01-10T13:49:20.6184770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6184860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6184940Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6184940Z 
2025-01-10T13:49:20.6185000Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6185210Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-01-10T13:49:20.6185220Z 
2025-01-10T13:49:20.6185320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6185420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6185490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6185590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6185690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6185760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6185980Z err_msg = None
2025-01-10T13:49:20.6185990Z 
2025-01-10T13:49:20.6186070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6186120Z         if err_msg is None:
2025-01-10T13:49:20.6186190Z             if left.shape != right.shape:
2025-01-10T13:49:20.6186260Z                 raise_assert_detail(
2025-01-10T13:49:20.6186370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6186410Z                 )
2025-01-10T13:49:20.6186460Z     
2025-01-10T13:49:20.6186500Z             diff = 0
2025-01-10T13:49:20.6186590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6186640Z                 # count up differences
2025-01-10T13:49:20.6186780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6186830Z                     diff += 1
2025-01-10T13:49:20.6186880Z     
2025-01-10T13:49:20.6186940Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6187050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6187180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6187270Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6187310Z E           
2025-01-10T13:49:20.6187400Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6187620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6187830Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6187830Z 
2025-01-10T13:49:20.6188070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6188070Z 
2025-01-10T13:49:20.6188250Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6188250Z 
2025-01-10T13:49:20.6188420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba320f0>
2025-01-10T13:49:20.6188550Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>
2025-01-10T13:49:20.6188600Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6188600Z 
2025-01-10T13:49:20.6188700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6188780Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6188850Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6188900Z         try:
2025-01-10T13:49:20.6189010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6189070Z         except KeyError:
2025-01-10T13:49:20.6189170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6189220Z     
2025-01-10T13:49:20.6189280Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6189350Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6189410Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6189510Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6189580Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6189640Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6189720Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6189770Z             else:
2025-01-10T13:49:20.6189830Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6189920Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6189920Z 
2025-01-10T13:49:20.6190050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6190140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6190250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6190300Z     ???
2025-01-10T13:49:20.6190390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6190390Z 
2025-01-10T13:49:20.6190440Z >   ???
2025-01-10T13:49:20.6190540Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6190600Z E   
2025-01-10T13:49:20.6190700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6190780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6190830Z E          ...
2025-01-10T13:49:20.6190890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6190990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6191080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6191130Z E          ...
2025-01-10T13:49:20.6191190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6191280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6191360Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6191360Z 
2025-01-10T13:49:20.6191430Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6191620Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-01-10T13:49:20.6191620Z 
2025-01-10T13:49:20.6191720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6191830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6191900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6192010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6192110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6192180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6192230Z err_msg = None
2025-01-10T13:49:20.6192230Z 
2025-01-10T13:49:20.6192360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6192420Z         if err_msg is None:
2025-01-10T13:49:20.6192480Z             if left.shape != right.shape:
2025-01-10T13:49:20.6192550Z                 raise_assert_detail(
2025-01-10T13:49:20.6192660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6192700Z                 )
2025-01-10T13:49:20.6192740Z     
2025-01-10T13:49:20.6192790Z             diff = 0
2025-01-10T13:49:20.6192870Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6192940Z                 # count up differences
2025-01-10T13:49:20.6193070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6193120Z                     diff += 1
2025-01-10T13:49:20.6193160Z     
2025-01-10T13:49:20.6193230Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6193330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6193470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6193550Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6193600Z E           
2025-01-10T13:49:20.6193680Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6193890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6194160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6194160Z 
2025-01-10T13:49:20.6194400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6194400Z 
2025-01-10T13:49:20.6194530Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6194530Z 
2025-01-10T13:49:20.6194700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba32270>
2025-01-10T13:49:20.6194850Z plasma = <tardis.plasma.base.BasePlasma object at 0x12ba28170>, attr = 'j_blues'
2025-01-10T13:49:20.6194860Z 
2025-01-10T13:49:20.6194960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6195050Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6195110Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6195150Z         try:
2025-01-10T13:49:20.6195260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6195320Z         except KeyError:
2025-01-10T13:49:20.6195430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6195470Z     
2025-01-10T13:49:20.6195530Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6195600Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6195660Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6195760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6195820Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6195890Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6195970Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6196020Z             else:
2025-01-10T13:49:20.6196090Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6196170Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6196170Z 
2025-01-10T13:49:20.6196260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6196390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6196510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6196560Z     ???
2025-01-10T13:49:20.6196640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6196640Z 
2025-01-10T13:49:20.6196690Z >   ???
2025-01-10T13:49:20.6196780Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6196820Z E   
2025-01-10T13:49:20.6196920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6197000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6197050Z E          ...
2025-01-10T13:49:20.6197120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6197220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6197300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6197350Z E          ...
2025-01-10T13:49:20.6197420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6197510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6197590Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6197600Z 
2025-01-10T13:49:20.6197650Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6197820Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-01-10T13:49:20.6197820Z 
2025-01-10T13:49:20.6197920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6198030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6198140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6198250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6198360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6198430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6198480Z err_msg = None
2025-01-10T13:49:20.6198480Z 
2025-01-10T13:49:20.6198560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6198610Z         if err_msg is None:
2025-01-10T13:49:20.6198680Z             if left.shape != right.shape:
2025-01-10T13:49:20.6198740Z                 raise_assert_detail(
2025-01-10T13:49:20.6198850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6198890Z                 )
2025-01-10T13:49:20.6198940Z     
2025-01-10T13:49:20.6198980Z             diff = 0
2025-01-10T13:49:20.6199070Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6199140Z                 # count up differences
2025-01-10T13:49:20.6199270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6199320Z                     diff += 1
2025-01-10T13:49:20.6199360Z     
2025-01-10T13:49:20.6199420Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6199530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6199660Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6199750Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6199800Z E           
2025-01-10T13:49:20.6199880Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6200090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6200570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6200580Z 
2025-01-10T13:49:20.6200830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6200830Z 
2025-01-10T13:49:20.6200960Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6200960Z 
2025-01-10T13:49:20.6201130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba32ff0>
2025-01-10T13:49:20.6201280Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>, attr = 'lines'
2025-01-10T13:49:20.6201290Z 
2025-01-10T13:49:20.6201390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6201480Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6201530Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6201580Z         try:
2025-01-10T13:49:20.6201690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6201740Z         except KeyError:
2025-01-10T13:49:20.6201850Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6201900Z     
2025-01-10T13:49:20.6201950Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6202020Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6202080Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6202180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6202240Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6202730Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6202820Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6202860Z             else:
2025-01-10T13:49:20.6202930Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6203010Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6203020Z 
2025-01-10T13:49:20.6203110Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6203190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6203310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6203350Z     ???
2025-01-10T13:49:20.6203440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6203440Z 
2025-01-10T13:49:20.6203490Z >   ???
2025-01-10T13:49:20.6203580Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6203620Z E   
2025-01-10T13:49:20.6203720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6203810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6203850Z E          ...
2025-01-10T13:49:20.6203920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6204020Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6204110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6204150Z E          ...
2025-01-10T13:49:20.6204220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6204310Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6204390Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6204390Z 
2025-01-10T13:49:20.6204450Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6204650Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-01-10T13:49:20.6204650Z 
2025-01-10T13:49:20.6204820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba330b0>
2025-01-10T13:49:20.6204940Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>
2025-01-10T13:49:20.6205000Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6205010Z 
2025-01-10T13:49:20.6205160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6205250Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6205310Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6205360Z         try:
2025-01-10T13:49:20.6205460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6205510Z         except KeyError:
2025-01-10T13:49:20.6205620Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6205660Z     
2025-01-10T13:49:20.6205730Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6205790Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6205860Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6205960Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6206020Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6206080Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6206170Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6206180Z 
2025-01-10T13:49:20.6206260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6206360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6206360Z 
2025-01-10T13:49:20.6206470Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6206530Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6206620Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6206670Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6206790Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6206890Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6206980Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6207030Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6207090Z err_msg = None
2025-01-10T13:49:20.6207090Z 
2025-01-10T13:49:20.6207170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6207230Z         if err_msg is None:
2025-01-10T13:49:20.6207290Z             if left.shape != right.shape:
2025-01-10T13:49:20.6207350Z                 raise_assert_detail(
2025-01-10T13:49:20.6207460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6207510Z                 )
2025-01-10T13:49:20.6207550Z     
2025-01-10T13:49:20.6207590Z             diff = 0
2025-01-10T13:49:20.6207680Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6207740Z                 # count up differences
2025-01-10T13:49:20.6207880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6207930Z                     diff += 1
2025-01-10T13:49:20.6207980Z     
2025-01-10T13:49:20.6208040Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6208150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6208280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6208350Z E           AssertionError: Series are different
2025-01-10T13:49:20.6208400Z E           
2025-01-10T13:49:20.6208470Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6208780Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6209100Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6209370Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6209380Z 
2025-01-10T13:49:20.6209610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6209820Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-01-10T13:49:20.6209820Z 
2025-01-10T13:49:20.6209990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba33170>
2025-01-10T13:49:20.6210110Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>
2025-01-10T13:49:20.6210180Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6210180Z 
2025-01-10T13:49:20.6210290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6210370Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6210430Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6210470Z         try:
2025-01-10T13:49:20.6210580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6210630Z         except KeyError:
2025-01-10T13:49:20.6210740Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6210820Z     
2025-01-10T13:49:20.6210890Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6210950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6211020Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6211120Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6211360Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6211500Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6211640Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6211650Z 
2025-01-10T13:49:20.6211820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6211910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6211910Z 
2025-01-10T13:49:20.6212090Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6212160Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6212340Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6212400Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6218510Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6218630Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6218720Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6218780Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6218830Z err_msg = None
2025-01-10T13:49:20.6218830Z 
2025-01-10T13:49:20.6218910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6218960Z         if err_msg is None:
2025-01-10T13:49:20.6219030Z             if left.shape != right.shape:
2025-01-10T13:49:20.6219090Z                 raise_assert_detail(
2025-01-10T13:49:20.6219200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6219250Z                 )
2025-01-10T13:49:20.6219300Z     
2025-01-10T13:49:20.6219350Z             diff = 0
2025-01-10T13:49:20.6219430Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6219500Z                 # count up differences
2025-01-10T13:49:20.6219850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6219910Z                     diff += 1
2025-01-10T13:49:20.6219960Z     
2025-01-10T13:49:20.6220020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6220120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6220260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6220340Z E           AssertionError: Series are different
2025-01-10T13:49:20.6220380Z E           
2025-01-10T13:49:20.6220460Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6220760Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6221080Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6221470Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6221540Z 
2025-01-10T13:49:20.6221780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6221950Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-01-10T13:49:20.6221950Z 
2025-01-10T13:49:20.6222050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6222160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6222230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6222340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6222440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6222510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6222560Z err_msg = None
2025-01-10T13:49:20.6222560Z 
2025-01-10T13:49:20.6222640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6222700Z         if err_msg is None:
2025-01-10T13:49:20.6222760Z             if left.shape != right.shape:
2025-01-10T13:49:20.6222830Z                 raise_assert_detail(
2025-01-10T13:49:20.6222940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6222980Z                 )
2025-01-10T13:49:20.6223030Z     
2025-01-10T13:49:20.6223070Z             diff = 0
2025-01-10T13:49:20.6223160Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6223220Z                 # count up differences
2025-01-10T13:49:20.6223350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6223400Z                     diff += 1
2025-01-10T13:49:20.6223450Z     
2025-01-10T13:49:20.6223510Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6223620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6223990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6224090Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6224140Z E           
2025-01-10T13:49:20.6224220Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6224430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6224640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6224650Z 
2025-01-10T13:49:20.6224880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6224890Z 
2025-01-10T13:49:20.6225020Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6225020Z 
2025-01-10T13:49:20.6225190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba333b0>
2025-01-10T13:49:20.6225330Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>, attr = 'nu'
2025-01-10T13:49:20.6225340Z 
2025-01-10T13:49:20.6225440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6225530Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6225800Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6225850Z         try:
2025-01-10T13:49:20.6225960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6226010Z         except KeyError:
2025-01-10T13:49:20.6226120Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6226170Z     
2025-01-10T13:49:20.6226230Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6226300Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6226360Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6226470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6226520Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6226590Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6226670Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6226680Z 
2025-01-10T13:49:20.6226770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6226860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6226970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6227020Z     ???
2025-01-10T13:49:20.6227130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6227140Z 
2025-01-10T13:49:20.6227220Z >   ???
2025-01-10T13:49:20.6227350Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6227420Z E   
2025-01-10T13:49:20.6227540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6227630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6227680Z E          ...
2025-01-10T13:49:20.6227740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6227860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6227960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6228020Z E          ...
2025-01-10T13:49:20.6228080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6228180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6228250Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6228370Z 
2025-01-10T13:49:20.6228450Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6228630Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-01-10T13:49:20.6228640Z 
2025-01-10T13:49:20.6228740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6228840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6228910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6229050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6229170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6229290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6229370Z err_msg = None
2025-01-10T13:49:20.6229380Z 
2025-01-10T13:49:20.6229500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6229590Z         if err_msg is None:
2025-01-10T13:49:20.6229680Z             if left.shape != right.shape:
2025-01-10T13:49:20.6229760Z                 raise_assert_detail(
2025-01-10T13:49:20.6229920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6229980Z                 )
2025-01-10T13:49:20.6230030Z     
2025-01-10T13:49:20.6230080Z             diff = 0
2025-01-10T13:49:20.6230170Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6230230Z                 # count up differences
2025-01-10T13:49:20.6230370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6230560Z                     diff += 1
2025-01-10T13:49:20.6230610Z     
2025-01-10T13:49:20.6230680Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6230830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6231010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6231120Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6231190Z E           
2025-01-10T13:49:20.6231310Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6231560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6231820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6231840Z 
2025-01-10T13:49:20.6232130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6232130Z 
2025-01-10T13:49:20.6232290Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6232300Z 
2025-01-10T13:49:20.6232500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba33470>
2025-01-10T13:49:20.6232640Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>
2025-01-10T13:49:20.6232700Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6232700Z 
2025-01-10T13:49:20.6232800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6232890Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6232950Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6233000Z         try:
2025-01-10T13:49:20.6233130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6233200Z         except KeyError:
2025-01-10T13:49:20.6233400Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6233450Z     
2025-01-10T13:49:20.6233520Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6233620Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6233700Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6233810Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6233880Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6233970Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6234090Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6234100Z 
2025-01-10T13:49:20.6234230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6234360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6234510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6234560Z     ???
2025-01-10T13:49:20.6234670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6234670Z 
2025-01-10T13:49:20.6234720Z >   ???
2025-01-10T13:49:20.6234850Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6234920Z E   
2025-01-10T13:49:20.6235040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6235150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6235200Z E          ...
2025-01-10T13:49:20.6235290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6235400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6235500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6235650Z E          ...
2025-01-10T13:49:20.6235720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6235820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6235930Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6235950Z 
2025-01-10T13:49:20.6236020Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6236200Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-01-10T13:49:20.6236200Z 
2025-01-10T13:49:20.6236330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6236470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6236540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6236670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6236780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6236860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6236920Z err_msg = None
2025-01-10T13:49:20.6236930Z 
2025-01-10T13:49:20.6237020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6237110Z         if err_msg is None:
2025-01-10T13:49:20.6237200Z             if left.shape != right.shape:
2025-01-10T13:49:20.6237270Z                 raise_assert_detail(
2025-01-10T13:49:20.6237400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6237470Z                 )
2025-01-10T13:49:20.6237530Z     
2025-01-10T13:49:20.6237600Z             diff = 0
2025-01-10T13:49:20.6237710Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6237800Z                 # count up differences
2025-01-10T13:49:20.6237970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6238030Z                     diff += 1
2025-01-10T13:49:20.6238080Z     
2025-01-10T13:49:20.6238140Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6238280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6238500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6238630Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6238680Z E           
2025-01-10T13:49:20.6238770Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6239000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6239220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6239240Z 
2025-01-10T13:49:20.6239510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6239510Z 
2025-01-10T13:49:20.6239670Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6239670Z 
2025-01-10T13:49:20.6239880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba33530>
2025-01-10T13:49:20.6240050Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>, attr = 'f_lu'
2025-01-10T13:49:20.6240050Z 
2025-01-10T13:49:20.6240160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6240240Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6240370Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6240490Z         try:
2025-01-10T13:49:20.6240600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6240660Z         except KeyError:
2025-01-10T13:49:20.6240760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6240820Z     
2025-01-10T13:49:20.6240890Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6240970Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6241030Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6241150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6241210Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6241280Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6241360Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6241360Z 
2025-01-10T13:49:20.6241450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6241570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6241680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6241730Z     ???
2025-01-10T13:49:20.6241810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6241820Z 
2025-01-10T13:49:20.6241860Z >   ???
2025-01-10T13:49:20.6241960Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6242010Z E   
2025-01-10T13:49:20.6242100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6242180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6242230Z E          ...
2025-01-10T13:49:20.6242300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6242410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6242500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6242550Z E          ...
2025-01-10T13:49:20.6242620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6242710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6242780Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6243070Z 
2025-01-10T13:49:20.6243140Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6243320Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-01-10T13:49:20.6243320Z 
2025-01-10T13:49:20.6243430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6243550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6243620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6243730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6243830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6243900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6243960Z err_msg = None
2025-01-10T13:49:20.6243960Z 
2025-01-10T13:49:20.6244040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6244100Z         if err_msg is None:
2025-01-10T13:49:20.6244170Z             if left.shape != right.shape:
2025-01-10T13:49:20.6244230Z                 raise_assert_detail(
2025-01-10T13:49:20.6244340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6244380Z                 )
2025-01-10T13:49:20.6244430Z     
2025-01-10T13:49:20.6244470Z             diff = 0
2025-01-10T13:49:20.6244560Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6244640Z                 # count up differences
2025-01-10T13:49:20.6244780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6245060Z                     diff += 1
2025-01-10T13:49:20.6245100Z     
2025-01-10T13:49:20.6245160Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6245270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6245410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6245500Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6245540Z E           
2025-01-10T13:49:20.6245620Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6245840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6246040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6246050Z 
2025-01-10T13:49:20.6246300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6246310Z 
2025-01-10T13:49:20.6246440Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6246440Z 
2025-01-10T13:49:20.6246610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba33cb0>
2025-01-10T13:49:20.6246730Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>
2025-01-10T13:49:20.6246780Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6246790Z 
2025-01-10T13:49:20.6246890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6246970Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6247030Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6247080Z         try:
2025-01-10T13:49:20.6247190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6247240Z         except KeyError:
2025-01-10T13:49:20.6247430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6247490Z     
2025-01-10T13:49:20.6247550Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6247620Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6247680Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6247790Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6247850Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6247920Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6248020Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6248080Z             else:
2025-01-10T13:49:20.6248150Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6248230Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6248230Z 
2025-01-10T13:49:20.6248330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6248410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6248530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6248570Z     ???
2025-01-10T13:49:20.6248660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6248660Z 
2025-01-10T13:49:20.6248700Z >   ???
2025-01-10T13:49:20.6248800Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6248840Z E   
2025-01-10T13:49:20.6248940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6249020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6249070Z E          ...
2025-01-10T13:49:20.6249200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6249300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6249390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6249430Z E          ...
2025-01-10T13:49:20.6249500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6249590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6249670Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6249670Z 
2025-01-10T13:49:20.6249730Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6249900Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-01-10T13:49:20.6249900Z 
2025-01-10T13:49:20.6250000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6250110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6250190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6250290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6250410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6250480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6250530Z err_msg = None
2025-01-10T13:49:20.6250540Z 
2025-01-10T13:49:20.6250610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6250670Z         if err_msg is None:
2025-01-10T13:49:20.6250740Z             if left.shape != right.shape:
2025-01-10T13:49:20.6250800Z                 raise_assert_detail(
2025-01-10T13:49:20.6250900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6250960Z                 )
2025-01-10T13:49:20.6251000Z     
2025-01-10T13:49:20.6251040Z             diff = 0
2025-01-10T13:49:20.6251140Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6251190Z                 # count up differences
2025-01-10T13:49:20.6251330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6251380Z                     diff += 1
2025-01-10T13:49:20.6251500Z     
2025-01-10T13:49:20.6251570Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6251680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6251810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6251890Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6251940Z E           
2025-01-10T13:49:20.6252020Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6252230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6252450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6252450Z 
2025-01-10T13:49:20.6252690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6252690Z 
2025-01-10T13:49:20.6252820Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6252830Z 
2025-01-10T13:49:20.6252990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba33d70>
2025-01-10T13:49:20.6253110Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>
2025-01-10T13:49:20.6253210Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6253210Z 
2025-01-10T13:49:20.6253320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6253400Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6253470Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6253510Z         try:
2025-01-10T13:49:20.6253620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6253670Z         except KeyError:
2025-01-10T13:49:20.6253790Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6253830Z     
2025-01-10T13:49:20.6253890Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6253950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6254010Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6254120Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6254190Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6254270Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6254350Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6254400Z             else:
2025-01-10T13:49:20.6254470Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6254550Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6254550Z 
2025-01-10T13:49:20.6254640Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6254750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6254860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6254910Z     ???
2025-01-10T13:49:20.6255000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6255000Z 
2025-01-10T13:49:20.6255040Z >   ???
2025-01-10T13:49:20.6255140Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6255180Z E   
2025-01-10T13:49:20.6255280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6255360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6255410Z E          ...
2025-01-10T13:49:20.6255480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6255650Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6255730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6255780Z E          ...
2025-01-10T13:49:20.6255850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6255940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6256020Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6256020Z 
2025-01-10T13:49:20.6256090Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6256250Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-01-10T13:49:20.6256250Z 
2025-01-10T13:49:20.6256360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6256460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6256530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6256640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6256730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6256810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6256860Z err_msg = None
2025-01-10T13:49:20.6256860Z 
2025-01-10T13:49:20.6256940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6256990Z         if err_msg is None:
2025-01-10T13:49:20.6257060Z             if left.shape != right.shape:
2025-01-10T13:49:20.6257120Z                 raise_assert_detail(
2025-01-10T13:49:20.6257220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6257320Z                 )
2025-01-10T13:49:20.6257360Z     
2025-01-10T13:49:20.6257420Z             diff = 0
2025-01-10T13:49:20.6257500Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6257570Z                 # count up differences
2025-01-10T13:49:20.6257700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6257750Z                     diff += 1
2025-01-10T13:49:20.6257790Z     
2025-01-10T13:49:20.6257850Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6257960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6258090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6258180Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6258220Z E           
2025-01-10T13:49:20.6258310Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6258520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6258730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6258730Z 
2025-01-10T13:49:20.6258970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6258970Z 
2025-01-10T13:49:20.6259100Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6259100Z 
2025-01-10T13:49:20.6259270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba33ef0>
2025-01-10T13:49:20.6259430Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c2990>, attr = 'j_blues'
2025-01-10T13:49:20.6259430Z 
2025-01-10T13:49:20.6259700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6259800Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6259850Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6259900Z         try:
2025-01-10T13:49:20.6260010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6260060Z         except KeyError:
2025-01-10T13:49:20.6260170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6260220Z     
2025-01-10T13:49:20.6260270Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6260350Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6260410Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6260540Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6260600Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6260670Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6260750Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6260810Z             else:
2025-01-10T13:49:20.6260880Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6260960Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6260960Z 
2025-01-10T13:49:20.6261050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6261140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6261250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6261300Z     ???
2025-01-10T13:49:20.6261490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6261810Z 
2025-01-10T13:49:20.6261870Z >   ???
2025-01-10T13:49:20.6261970Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6262020Z E   
2025-01-10T13:49:20.6262120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6262210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6262250Z E          ...
2025-01-10T13:49:20.6262320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6262410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6262500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6262540Z E          ...
2025-01-10T13:49:20.6262610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6262700Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6262780Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6262780Z 
2025-01-10T13:49:20.6262840Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6263000Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-01-10T13:49:20.6263010Z 
2025-01-10T13:49:20.6263110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6263210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6263290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6263390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6263490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6263560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6263610Z err_msg = None
2025-01-10T13:49:20.6263610Z 
2025-01-10T13:49:20.6263690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6263750Z         if err_msg is None:
2025-01-10T13:49:20.6263820Z             if left.shape != right.shape:
2025-01-10T13:49:20.6263870Z                 raise_assert_detail(
2025-01-10T13:49:20.6263980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6264030Z                 )
2025-01-10T13:49:20.6264130Z     
2025-01-10T13:49:20.6264170Z             diff = 0
2025-01-10T13:49:20.6264260Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6264320Z                 # count up differences
2025-01-10T13:49:20.6264450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6264500Z                     diff += 1
2025-01-10T13:49:20.6264550Z     
2025-01-10T13:49:20.6264610Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6264720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6264850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6264940Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6264980Z E           
2025-01-10T13:49:20.6265070Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6265280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6265490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6265490Z 
2025-01-10T13:49:20.6265730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6265780Z 
2025-01-10T13:49:20.6265980Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6265980Z 
2025-01-10T13:49:20.6266150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5ccb0>
2025-01-10T13:49:20.6266460Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>, attr = 'lines'
2025-01-10T13:49:20.6266460Z 
2025-01-10T13:49:20.6266660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6266810Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6266960Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6267000Z         try:
2025-01-10T13:49:20.6267180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6267320Z         except KeyError:
2025-01-10T13:49:20.6267490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6267540Z     
2025-01-10T13:49:20.6267710Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6267860Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6275980Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6276160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6276230Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6276300Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6276390Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6276470Z             else:
2025-01-10T13:49:20.6276550Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6276630Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6276640Z 
2025-01-10T13:49:20.6276730Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6276820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6276940Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6276990Z     ???
2025-01-10T13:49:20.6277090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6277090Z 
2025-01-10T13:49:20.6277130Z >   ???
2025-01-10T13:49:20.6277490Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6277540Z E   
2025-01-10T13:49:20.6277640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6277730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6277780Z E          ...
2025-01-10T13:49:20.6277850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6277960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6278050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6278100Z E          ...
2025-01-10T13:49:20.6278170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6278270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6278350Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6278360Z 
2025-01-10T13:49:20.6278420Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6278630Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-01-10T13:49:20.6278640Z 
2025-01-10T13:49:20.6278820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5cd70>
2025-01-10T13:49:20.6278950Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>
2025-01-10T13:49:20.6279010Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6279010Z 
2025-01-10T13:49:20.6279130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6279210Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6279270Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6279330Z         try:
2025-01-10T13:49:20.6279460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6279650Z         except KeyError:
2025-01-10T13:49:20.6279770Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6279820Z     
2025-01-10T13:49:20.6279880Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6279960Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6280020Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6280130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6280200Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6280260Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6280350Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6280350Z 
2025-01-10T13:49:20.6280450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6280540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6280540Z 
2025-01-10T13:49:20.6280650Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6280720Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6280810Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6280870Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6280980Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6281040Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6281130Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6281190Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6281240Z err_msg = None
2025-01-10T13:49:20.6281240Z 
2025-01-10T13:49:20.6281330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6281390Z         if err_msg is None:
2025-01-10T13:49:20.6281450Z             if left.shape != right.shape:
2025-01-10T13:49:20.6281510Z                 raise_assert_detail(
2025-01-10T13:49:20.6281630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6281700Z                 )
2025-01-10T13:49:20.6281740Z     
2025-01-10T13:49:20.6281790Z             diff = 0
2025-01-10T13:49:20.6281980Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6282060Z                 # count up differences
2025-01-10T13:49:20.6282190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6282250Z                     diff += 1
2025-01-10T13:49:20.6282290Z     
2025-01-10T13:49:20.6282350Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6282460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6282600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6282680Z E           AssertionError: Series are different
2025-01-10T13:49:20.6282730Z E           
2025-01-10T13:49:20.6282810Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6283150Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6283430Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6283700Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6283780Z 
2025-01-10T13:49:20.6284040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6284280Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-01-10T13:49:20.6284290Z 
2025-01-10T13:49:20.6284460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5ce30>
2025-01-10T13:49:20.6284590Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>
2025-01-10T13:49:20.6284650Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6284660Z 
2025-01-10T13:49:20.6284760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6284860Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6284910Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6284960Z         try:
2025-01-10T13:49:20.6285070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6285120Z         except KeyError:
2025-01-10T13:49:20.6376380Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6376520Z     
2025-01-10T13:49:20.6376600Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6376670Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6376730Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6376850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6376910Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6376970Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6377060Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6377070Z 
2025-01-10T13:49:20.6377170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6377270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6377270Z 
2025-01-10T13:49:20.6377380Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6377950Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6378040Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6378100Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6378210Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6378270Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6378360Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6378420Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6378470Z err_msg = None
2025-01-10T13:49:20.6378470Z 
2025-01-10T13:49:20.6378560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6378620Z         if err_msg is None:
2025-01-10T13:49:20.6378680Z             if left.shape != right.shape:
2025-01-10T13:49:20.6378740Z                 raise_assert_detail(
2025-01-10T13:49:20.6378860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6378910Z                 )
2025-01-10T13:49:20.6378950Z     
2025-01-10T13:49:20.6380690Z             diff = 0
2025-01-10T13:49:20.6380780Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6380840Z                 # count up differences
2025-01-10T13:49:20.6380980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6381030Z                     diff += 1
2025-01-10T13:49:20.6381080Z     
2025-01-10T13:49:20.6381140Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6381250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6381750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6381830Z E           AssertionError: Series are different
2025-01-10T13:49:20.6381870Z E           
2025-01-10T13:49:20.6381950Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6382260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6382570Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6382880Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6382880Z 
2025-01-10T13:49:20.6383130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6383290Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-01-10T13:49:20.6383290Z 
2025-01-10T13:49:20.6383390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6383500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6383580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6383740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6383850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6383920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6383970Z err_msg = None
2025-01-10T13:49:20.6383970Z 
2025-01-10T13:49:20.6384060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6384110Z         if err_msg is None:
2025-01-10T13:49:20.6384180Z             if left.shape != right.shape:
2025-01-10T13:49:20.6384240Z                 raise_assert_detail(
2025-01-10T13:49:20.6384360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6384410Z                 )
2025-01-10T13:49:20.6384460Z     
2025-01-10T13:49:20.6384500Z             diff = 0
2025-01-10T13:49:20.6384590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6384640Z                 # count up differences
2025-01-10T13:49:20.6384780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6384840Z                     diff += 1
2025-01-10T13:49:20.6384890Z     
2025-01-10T13:49:20.6384950Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6385050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6385190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6385270Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6385320Z E           
2025-01-10T13:49:20.6385400Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6385680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6385890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6385900Z 
2025-01-10T13:49:20.6386130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6386130Z 
2025-01-10T13:49:20.6386270Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6386270Z 
2025-01-10T13:49:20.6386440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5d070>
2025-01-10T13:49:20.6386600Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>, attr = 'nu'
2025-01-10T13:49:20.6386600Z 
2025-01-10T13:49:20.6386710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6386790Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6386850Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6386900Z         try:
2025-01-10T13:49:20.6387010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6387060Z         except KeyError:
2025-01-10T13:49:20.6387170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6387220Z     
2025-01-10T13:49:20.6387280Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6387340Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6387410Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6387510Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6387580Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6387640Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6387720Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6387770Z 
2025-01-10T13:49:20.6387870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6387960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6388080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6388120Z     ???
2025-01-10T13:49:20.6388210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6388210Z 
2025-01-10T13:49:20.6388260Z >   ???
2025-01-10T13:49:20.6388350Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6388390Z E   
2025-01-10T13:49:20.6388500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6388580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6388640Z E          ...
2025-01-10T13:49:20.6388700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6388800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6388880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6388930Z E          ...
2025-01-10T13:49:20.6389000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6389090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6389170Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6389170Z 
2025-01-10T13:49:20.6389230Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6389410Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-01-10T13:49:20.6389420Z 
2025-01-10T13:49:20.6389520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6389670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6389750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6389850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6389960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6390030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6390080Z err_msg = None
2025-01-10T13:49:20.6390080Z 
2025-01-10T13:49:20.6390160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6390220Z         if err_msg is None:
2025-01-10T13:49:20.6390280Z             if left.shape != right.shape:
2025-01-10T13:49:20.6390340Z                 raise_assert_detail(
2025-01-10T13:49:20.6390460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6390510Z                 )
2025-01-10T13:49:20.6390560Z     
2025-01-10T13:49:20.6390600Z             diff = 0
2025-01-10T13:49:20.6390690Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6390750Z                 # count up differences
2025-01-10T13:49:20.6390890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6390940Z                     diff += 1
2025-01-10T13:49:20.6390990Z     
2025-01-10T13:49:20.6391050Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6391150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6391280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6391370Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6391420Z E           
2025-01-10T13:49:20.6391500Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6391760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6391970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6391970Z 
2025-01-10T13:49:20.6392220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6392220Z 
2025-01-10T13:49:20.6392350Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6392350Z 
2025-01-10T13:49:20.6392520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5d130>
2025-01-10T13:49:20.6392640Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>
2025-01-10T13:49:20.6392690Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6392700Z 
2025-01-10T13:49:20.6392800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6392890Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6392950Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6392990Z         try:
2025-01-10T13:49:20.6393100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6393150Z         except KeyError:
2025-01-10T13:49:20.6393290Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6393340Z     
2025-01-10T13:49:20.6393400Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6393470Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6393530Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6393720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6393780Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6393840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6393920Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6393930Z 
2025-01-10T13:49:20.6394020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6394110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6394220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6394260Z     ???
2025-01-10T13:49:20.6394350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6394350Z 
2025-01-10T13:49:20.6394400Z >   ???
2025-01-10T13:49:20.6394500Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6394550Z E   
2025-01-10T13:49:20.6394640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6394730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6394780Z E          ...
2025-01-10T13:49:20.6394840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6394940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6395020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6395070Z E          ...
2025-01-10T13:49:20.6395130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6395230Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6395300Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6395310Z 
2025-01-10T13:49:20.6395370Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6395530Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-01-10T13:49:20.6395530Z 
2025-01-10T13:49:20.6395630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6395740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6395820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6396160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6396270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6396350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6396400Z err_msg = None
2025-01-10T13:49:20.6396400Z 
2025-01-10T13:49:20.6396480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6396530Z         if err_msg is None:
2025-01-10T13:49:20.6396600Z             if left.shape != right.shape:
2025-01-10T13:49:20.6396660Z                 raise_assert_detail(
2025-01-10T13:49:20.6396780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6396820Z                 )
2025-01-10T13:49:20.6396870Z     
2025-01-10T13:49:20.6396910Z             diff = 0
2025-01-10T13:49:20.6397000Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6397060Z                 # count up differences
2025-01-10T13:49:20.6397200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6397250Z                     diff += 1
2025-01-10T13:49:20.6397300Z     
2025-01-10T13:49:20.6397360Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6397460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6397600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6397680Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6397730Z E           
2025-01-10T13:49:20.6397820Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6398330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6398540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6398550Z 
2025-01-10T13:49:20.6398790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6398790Z 
2025-01-10T13:49:20.6398920Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6398930Z 
2025-01-10T13:49:20.6399090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5d1f0>
2025-01-10T13:49:20.6399250Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>, attr = 'f_lu'
2025-01-10T13:49:20.6399250Z 
2025-01-10T13:49:20.6399350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6399450Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6399500Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6399550Z         try:
2025-01-10T13:49:20.6399660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6399710Z         except KeyError:
2025-01-10T13:49:20.6399820Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6399860Z     
2025-01-10T13:49:20.6399920Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6399980Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6400050Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6400150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6400220Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6400280Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6400370Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6400430Z 
2025-01-10T13:49:20.6400530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6400620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6400730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6400780Z     ???
2025-01-10T13:49:20.6400870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6400870Z 
2025-01-10T13:49:20.6400910Z >   ???
2025-01-10T13:49:20.6401010Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6401050Z E   
2025-01-10T13:49:20.6401150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6401240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6401290Z E          ...
2025-01-10T13:49:20.6401350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6401450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6401530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6401580Z E          ...
2025-01-10T13:49:20.6401650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6401740Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6401820Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6401820Z 
2025-01-10T13:49:20.6401880Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6402060Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-01-10T13:49:20.6402060Z 
2025-01-10T13:49:20.6402160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6402310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6402380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6402490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6402590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6402660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6402710Z err_msg = None
2025-01-10T13:49:20.6402720Z 
2025-01-10T13:49:20.6402800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6402850Z         if err_msg is None:
2025-01-10T13:49:20.6402920Z             if left.shape != right.shape:
2025-01-10T13:49:20.6402980Z                 raise_assert_detail(
2025-01-10T13:49:20.6403090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6403140Z                 )
2025-01-10T13:49:20.6403180Z     
2025-01-10T13:49:20.6403230Z             diff = 0
2025-01-10T13:49:20.6403310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6403370Z                 # count up differences
2025-01-10T13:49:20.6403510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6403560Z                     diff += 1
2025-01-10T13:49:20.6403610Z     
2025-01-10T13:49:20.6403670Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6403780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6403910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6404000Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6404050Z E           
2025-01-10T13:49:20.6404130Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6404390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6404610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6404610Z 
2025-01-10T13:49:20.6404840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6404840Z 
2025-01-10T13:49:20.6404970Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6404970Z 
2025-01-10T13:49:20.6405150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5d970>
2025-01-10T13:49:20.6405270Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>
2025-01-10T13:49:20.6405320Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6405320Z 
2025-01-10T13:49:20.6405430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6405510Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6405570Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6405610Z         try:
2025-01-10T13:49:20.6405720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6405770Z         except KeyError:
2025-01-10T13:49:20.6405880Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6405920Z     
2025-01-10T13:49:20.6405980Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6406050Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6406110Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6406270Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6406330Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6406390Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6406470Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6406520Z             else:
2025-01-10T13:49:20.6406590Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6406670Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6406670Z 
2025-01-10T13:49:20.6406760Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6406850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6406960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6407010Z     ???
2025-01-10T13:49:20.6407090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6407100Z 
2025-01-10T13:49:20.6407140Z >   ???
2025-01-10T13:49:20.6407240Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6407280Z E   
2025-01-10T13:49:20.6407380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6407460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6407510Z E          ...
2025-01-10T13:49:20.6407570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6407680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6407760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6407810Z E          ...
2025-01-10T13:49:20.6407870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6407970Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6408040Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6408050Z 
2025-01-10T13:49:20.6408100Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6408280Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-01-10T13:49:20.6408280Z 
2025-01-10T13:49:20.6408380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6408530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6408600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6408710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6408810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6408880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6408930Z err_msg = None
2025-01-10T13:49:20.6408930Z 
2025-01-10T13:49:20.6409010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6409070Z         if err_msg is None:
2025-01-10T13:49:20.6409140Z             if left.shape != right.shape:
2025-01-10T13:49:20.6409200Z                 raise_assert_detail(
2025-01-10T13:49:20.6409310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6409360Z                 )
2025-01-10T13:49:20.6409400Z     
2025-01-10T13:49:20.6409450Z             diff = 0
2025-01-10T13:49:20.6409530Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6409590Z                 # count up differences
2025-01-10T13:49:20.6409720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6409770Z                     diff += 1
2025-01-10T13:49:20.6409820Z     
2025-01-10T13:49:20.6409880Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6409990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6410120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6410250Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6410300Z E           
2025-01-10T13:49:20.6410380Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6410590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6410800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6410800Z 
2025-01-10T13:49:20.6411040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6411040Z 
2025-01-10T13:49:20.6411170Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6411170Z 
2025-01-10T13:49:20.6411350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5da30>
2025-01-10T13:49:20.6411470Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>
2025-01-10T13:49:20.6411520Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6411530Z 
2025-01-10T13:49:20.6411630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6411720Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6411780Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6411830Z         try:
2025-01-10T13:49:20.6411940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6411990Z         except KeyError:
2025-01-10T13:49:20.6412100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6412150Z     
2025-01-10T13:49:20.6412210Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6412270Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6412340Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6412840Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6412920Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6412980Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6425410Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6425490Z             else:
2025-01-10T13:49:20.6425570Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6425660Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6425660Z 
2025-01-10T13:49:20.6425750Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6425850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6425960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6426020Z     ???
2025-01-10T13:49:20.6426100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6426110Z 
2025-01-10T13:49:20.6426150Z >   ???
2025-01-10T13:49:20.6426250Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6426290Z E   
2025-01-10T13:49:20.6426390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6426470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6426530Z E          ...
2025-01-10T13:49:20.6426590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6426690Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6426770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6426820Z E          ...
2025-01-10T13:49:20.6426880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6427350Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6427420Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6427430Z 
2025-01-10T13:49:20.6427490Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6427650Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-01-10T13:49:20.6427660Z 
2025-01-10T13:49:20.6427760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6427860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6427940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6428040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6428140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6428210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6428260Z err_msg = None
2025-01-10T13:49:20.6428260Z 
2025-01-10T13:49:20.6428340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6428390Z         if err_msg is None:
2025-01-10T13:49:20.6428460Z             if left.shape != right.shape:
2025-01-10T13:49:20.6428520Z                 raise_assert_detail(
2025-01-10T13:49:20.6428640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6428680Z                 )
2025-01-10T13:49:20.6428720Z     
2025-01-10T13:49:20.6428770Z             diff = 0
2025-01-10T13:49:20.6428850Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6428910Z                 # count up differences
2025-01-10T13:49:20.6429040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6429090Z                     diff += 1
2025-01-10T13:49:20.6429130Z     
2025-01-10T13:49:20.6429190Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6429300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6429430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6429510Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6429680Z E           
2025-01-10T13:49:20.6429760Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6429980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6430190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6430200Z 
2025-01-10T13:49:20.6430440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6430440Z 
2025-01-10T13:49:20.6430580Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6430580Z 
2025-01-10T13:49:20.6430740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5dbb0>
2025-01-10T13:49:20.6430900Z plasma = <tardis.plasma.base.BasePlasma object at 0x3287c07d0>, attr = 'j_blues'
2025-01-10T13:49:20.6430900Z 
2025-01-10T13:49:20.6431000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6431090Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6431140Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6431190Z         try:
2025-01-10T13:49:20.6431300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6431400Z         except KeyError:
2025-01-10T13:49:20.6431510Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6431550Z     
2025-01-10T13:49:20.6431610Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6431680Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6431740Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6431840Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6431900Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6431960Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6432050Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6432090Z             else:
2025-01-10T13:49:20.6432150Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6432230Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6432230Z 
2025-01-10T13:49:20.6432330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6432420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6432520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6432570Z     ???
2025-01-10T13:49:20.6432650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6432660Z 
2025-01-10T13:49:20.6432700Z >   ???
2025-01-10T13:49:20.6432790Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6432830Z E   
2025-01-10T13:49:20.6432930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6433010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6433050Z E          ...
2025-01-10T13:49:20.6433120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6433210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6433300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6433340Z E          ...
2025-01-10T13:49:20.6433400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6433500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6433620Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6433630Z 
2025-01-10T13:49:20.6433690Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6433860Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-01-10T13:49:20.6433860Z 
2025-01-10T13:49:20.6433960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6434060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6434140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6434240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6434340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6434410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6434450Z err_msg = None
2025-01-10T13:49:20.6434460Z 
2025-01-10T13:49:20.6434540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6434590Z         if err_msg is None:
2025-01-10T13:49:20.6434660Z             if left.shape != right.shape:
2025-01-10T13:49:20.6434710Z                 raise_assert_detail(
2025-01-10T13:49:20.6434820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6434870Z                 )
2025-01-10T13:49:20.6434910Z     
2025-01-10T13:49:20.6434950Z             diff = 0
2025-01-10T13:49:20.6435040Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6435090Z                 # count up differences
2025-01-10T13:49:20.6435230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6435330Z                     diff += 1
2025-01-10T13:49:20.6435370Z     
2025-01-10T13:49:20.6435430Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6435530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6435670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6435750Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6435800Z E           
2025-01-10T13:49:20.6435870Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6436080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6436300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6436310Z 
2025-01-10T13:49:20.6436540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6436540Z 
2025-01-10T13:49:20.6436670Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6436680Z 
2025-01-10T13:49:20.6436840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5e930>
2025-01-10T13:49:20.6437000Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>, attr = 'lines'
2025-01-10T13:49:20.6437000Z 
2025-01-10T13:49:20.6437100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6437190Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6437250Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6437290Z         try:
2025-01-10T13:49:20.6437400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6437460Z         except KeyError:
2025-01-10T13:49:20.6437610Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6437650Z     
2025-01-10T13:49:20.6437710Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6437780Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6437840Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6437940Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6438000Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6438060Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6438140Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6438190Z             else:
2025-01-10T13:49:20.6438260Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6438340Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6438340Z 
2025-01-10T13:49:20.6438430Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6438520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6438620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6438670Z     ???
2025-01-10T13:49:20.6438760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6438760Z 
2025-01-10T13:49:20.6438800Z >   ???
2025-01-10T13:49:20.6438900Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6438940Z E   
2025-01-10T13:49:20.6439040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6439120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6439160Z E          ...
2025-01-10T13:49:20.6439270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6439370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6439450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6439500Z E          ...
2025-01-10T13:49:20.6439560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6439660Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6439730Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6439730Z 
2025-01-10T13:49:20.6439790Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6440020Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-01-10T13:49:20.6440020Z 
2025-01-10T13:49:20.6440180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5e9f0>
2025-01-10T13:49:20.6440310Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>
2025-01-10T13:49:20.6440360Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6440370Z 
2025-01-10T13:49:20.6440470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6440550Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6440610Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6440660Z         try:
2025-01-10T13:49:20.6440770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6440820Z         except KeyError:
2025-01-10T13:49:20.6440930Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6440970Z     
2025-01-10T13:49:20.6441030Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6441100Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6441150Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6441260Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6441320Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6441380Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6441470Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6441470Z 
2025-01-10T13:49:20.6441560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6441890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6441900Z 
2025-01-10T13:49:20.6442010Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6442080Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6442160Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6442220Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6442330Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6442390Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6442470Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6442530Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6442580Z err_msg = None
2025-01-10T13:49:20.6442580Z 
2025-01-10T13:49:20.6442660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6442710Z         if err_msg is None:
2025-01-10T13:49:20.6442780Z             if left.shape != right.shape:
2025-01-10T13:49:20.6442830Z                 raise_assert_detail(
2025-01-10T13:49:20.6442940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6442990Z                 )
2025-01-10T13:49:20.6443030Z     
2025-01-10T13:49:20.6443080Z             diff = 0
2025-01-10T13:49:20.6443160Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6443220Z                 # count up differences
2025-01-10T13:49:20.6443340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6443390Z                     diff += 1
2025-01-10T13:49:20.6443430Z     
2025-01-10T13:49:20.6443720Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6443830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6443960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6444040Z E           AssertionError: Series are different
2025-01-10T13:49:20.6444080Z E           
2025-01-10T13:49:20.6444160Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6444460Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6444730Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6445000Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6445000Z 
2025-01-10T13:49:20.6445240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6445460Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-01-10T13:49:20.6445460Z 
2025-01-10T13:49:20.6445620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5eab0>
2025-01-10T13:49:20.6445750Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>
2025-01-10T13:49:20.6445810Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6445820Z 
2025-01-10T13:49:20.6445960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6446050Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6446110Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6446150Z         try:
2025-01-10T13:49:20.6446250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6446310Z         except KeyError:
2025-01-10T13:49:20.6446410Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6446460Z     
2025-01-10T13:49:20.6446510Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6446610Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6446700Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6446800Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6446860Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6446930Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6447010Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6447020Z 
2025-01-10T13:49:20.6447100Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6447200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6447200Z 
2025-01-10T13:49:20.6447300Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6447360Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6447440Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6447500Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6447600Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6447750Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6447840Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6447890Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6447940Z err_msg = None
2025-01-10T13:49:20.6447950Z 
2025-01-10T13:49:20.6448020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6448080Z         if err_msg is None:
2025-01-10T13:49:20.6448140Z             if left.shape != right.shape:
2025-01-10T13:49:20.6448200Z                 raise_assert_detail(
2025-01-10T13:49:20.6448310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6448350Z                 )
2025-01-10T13:49:20.6448390Z     
2025-01-10T13:49:20.6448440Z             diff = 0
2025-01-10T13:49:20.6448520Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6448580Z                 # count up differences
2025-01-10T13:49:20.6448710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6448770Z                     diff += 1
2025-01-10T13:49:20.6448810Z     
2025-01-10T13:49:20.6448870Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6448980Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6449110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6449190Z E           AssertionError: Series are different
2025-01-10T13:49:20.6449230Z E           
2025-01-10T13:49:20.6449310Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6449610Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6450000Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6450310Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6450310Z 
2025-01-10T13:49:20.6450550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6450710Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-01-10T13:49:20.6450710Z 
2025-01-10T13:49:20.6450820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6450920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6451000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6451090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6451200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6451270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6451370Z err_msg = None
2025-01-10T13:49:20.6451370Z 
2025-01-10T13:49:20.6451450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6451500Z         if err_msg is None:
2025-01-10T13:49:20.6451570Z             if left.shape != right.shape:
2025-01-10T13:49:20.6451630Z                 raise_assert_detail(
2025-01-10T13:49:20.6451740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6451780Z                 )
2025-01-10T13:49:20.6451830Z     
2025-01-10T13:49:20.6451870Z             diff = 0
2025-01-10T13:49:20.6451960Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6452020Z                 # count up differences
2025-01-10T13:49:20.6452150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6452200Z                     diff += 1
2025-01-10T13:49:20.6452240Z     
2025-01-10T13:49:20.6452300Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6452410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6452540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6452630Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6452670Z E           
2025-01-10T13:49:20.6452750Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6452970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6453180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6453190Z 
2025-01-10T13:49:20.6453420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6453420Z 
2025-01-10T13:49:20.6453600Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6453600Z 
2025-01-10T13:49:20.6453760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5ecf0>
2025-01-10T13:49:20.6453920Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>, attr = 'nu'
2025-01-10T13:49:20.6453920Z 
2025-01-10T13:49:20.6454020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6454100Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6454170Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6454210Z         try:
2025-01-10T13:49:20.6454320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6454380Z         except KeyError:
2025-01-10T13:49:20.6454490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6454530Z     
2025-01-10T13:49:20.6454580Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6454650Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6454720Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6454820Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6454880Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6454940Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6455030Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6455040Z 
2025-01-10T13:49:20.6455120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6455210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6455320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6455410Z     ???
2025-01-10T13:49:20.6455500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6455500Z 
2025-01-10T13:49:20.6455550Z >   ???
2025-01-10T13:49:20.6455640Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6455690Z E   
2025-01-10T13:49:20.6455790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6455870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6455920Z E          ...
2025-01-10T13:49:20.6455980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6456080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6456160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6456200Z E          ...
2025-01-10T13:49:20.6456270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6456450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6456530Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6456540Z 
2025-01-10T13:49:20.6456600Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6456790Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-01-10T13:49:20.6456800Z 
2025-01-10T13:49:20.6456900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6457000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6457070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6457180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6457290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6457360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6457410Z err_msg = None
2025-01-10T13:49:20.6457410Z 
2025-01-10T13:49:20.6457490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6457550Z         if err_msg is None:
2025-01-10T13:49:20.6457610Z             if left.shape != right.shape:
2025-01-10T13:49:20.6457670Z                 raise_assert_detail(
2025-01-10T13:49:20.6458050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6458110Z                 )
2025-01-10T13:49:20.6458150Z     
2025-01-10T13:49:20.6458200Z             diff = 0
2025-01-10T13:49:20.6458280Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6458350Z                 # count up differences
2025-01-10T13:49:20.6458480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6458530Z                     diff += 1
2025-01-10T13:49:20.6458570Z     
2025-01-10T13:49:20.6458630Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6458740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6458870Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6458960Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6459000Z E           
2025-01-10T13:49:20.6459090Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6459300Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6459510Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6459820Z 
2025-01-10T13:49:20.6460060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6460070Z 
2025-01-10T13:49:20.6460200Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6460200Z 
2025-01-10T13:49:20.6460370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5edb0>
2025-01-10T13:49:20.6460490Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>
2025-01-10T13:49:20.6460540Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6460540Z 
2025-01-10T13:49:20.6460640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6460730Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6460780Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6460840Z         try:
2025-01-10T13:49:20.6460940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6461000Z         except KeyError:
2025-01-10T13:49:20.6461100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6461140Z     
2025-01-10T13:49:20.6461200Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6461270Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6461330Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6461430Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6461490Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6461550Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6461640Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6461640Z 
2025-01-10T13:49:20.6461730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6461820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6461930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6461980Z     ???
2025-01-10T13:49:20.6462070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6462070Z 
2025-01-10T13:49:20.6462110Z >   ???
2025-01-10T13:49:20.6462250Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6462290Z E   
2025-01-10T13:49:20.6462390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6462470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6462520Z E          ...
2025-01-10T13:49:20.6462580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6462680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6462760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6462800Z E          ...
2025-01-10T13:49:20.6462870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6462960Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6463040Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6463040Z 
2025-01-10T13:49:20.6463100Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6463270Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-01-10T13:49:20.6463280Z 
2025-01-10T13:49:20.6463370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6463470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6463550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6463660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6463760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6463830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6463930Z err_msg = None
2025-01-10T13:49:20.6463930Z 
2025-01-10T13:49:20.6464010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6464070Z         if err_msg is None:
2025-01-10T13:49:20.6464130Z             if left.shape != right.shape:
2025-01-10T13:49:20.6464190Z                 raise_assert_detail(
2025-01-10T13:49:20.6464300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6464340Z                 )
2025-01-10T13:49:20.6464380Z     
2025-01-10T13:49:20.6464430Z             diff = 0
2025-01-10T13:49:20.6464510Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6464570Z                 # count up differences
2025-01-10T13:49:20.6464710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6464760Z                     diff += 1
2025-01-10T13:49:20.6464800Z     
2025-01-10T13:49:20.6464860Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6464970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6465100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6465190Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6465230Z E           
2025-01-10T13:49:20.6465320Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6465530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6465730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6465740Z 
2025-01-10T13:49:20.6465980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6465980Z 
2025-01-10T13:49:20.6466150Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6466160Z 
2025-01-10T13:49:20.6466330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5ee70>
2025-01-10T13:49:20.6466480Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>, attr = 'f_lu'
2025-01-10T13:49:20.6466490Z 
2025-01-10T13:49:20.6466590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6466680Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6466730Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6466780Z         try:
2025-01-10T13:49:20.6466880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6466940Z         except KeyError:
2025-01-10T13:49:20.6467040Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6467080Z     
2025-01-10T13:49:20.6467140Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6467210Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6467270Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6467370Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6467430Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6467490Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6467580Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6467590Z 
2025-01-10T13:49:20.6467670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6467760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6467860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6467960Z     ???
2025-01-10T13:49:20.6468040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6468040Z 
2025-01-10T13:49:20.6468090Z >   ???
2025-01-10T13:49:20.6468180Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6468230Z E   
2025-01-10T13:49:20.6468320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6468410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6468450Z E          ...
2025-01-10T13:49:20.6468510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6468610Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6468700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6468740Z E          ...
2025-01-10T13:49:20.6468800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6468940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6469030Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6469030Z 
2025-01-10T13:49:20.6469100Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6469290Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-01-10T13:49:20.6469290Z 
2025-01-10T13:49:20.6469400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6469500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6469570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6469680Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6469780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6469850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6469900Z err_msg = None
2025-01-10T13:49:20.6469900Z 
2025-01-10T13:49:20.6475600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6475690Z         if err_msg is None:
2025-01-10T13:49:20.6475770Z             if left.shape != right.shape:
2025-01-10T13:49:20.6476020Z                 raise_assert_detail(
2025-01-10T13:49:20.6476220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6476270Z                 )
2025-01-10T13:49:20.6476310Z     
2025-01-10T13:49:20.6476350Z             diff = 0
2025-01-10T13:49:20.6476440Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6476500Z                 # count up differences
2025-01-10T13:49:20.6476630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6476680Z                     diff += 1
2025-01-10T13:49:20.6476730Z     
2025-01-10T13:49:20.6476790Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6476900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6477030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6477110Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6477160Z E           
2025-01-10T13:49:20.6477240Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6477460Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6477670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6477730Z 
2025-01-10T13:49:20.6477970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6477980Z 
2025-01-10T13:49:20.6478110Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6478110Z 
2025-01-10T13:49:20.6478280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5f5f0>
2025-01-10T13:49:20.6478400Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>
2025-01-10T13:49:20.6478450Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6478450Z 
2025-01-10T13:49:20.6478560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6478660Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6478740Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6478790Z         try:
2025-01-10T13:49:20.6478890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6478950Z         except KeyError:
2025-01-10T13:49:20.6479050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6479100Z     
2025-01-10T13:49:20.6479160Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6479230Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6479280Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6479390Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6479440Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6479510Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6479590Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6479640Z             else:
2025-01-10T13:49:20.6479710Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6479780Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6479780Z 
2025-01-10T13:49:20.6479880Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6479970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6480080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6480120Z     ???
2025-01-10T13:49:20.6480520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6480530Z 
2025-01-10T13:49:20.6480590Z >   ???
2025-01-10T13:49:20.6480680Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6480720Z E   
2025-01-10T13:49:20.6480830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6480910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6480960Z E          ...
2025-01-10T13:49:20.6481020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6481110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6481200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6481250Z E          ...
2025-01-10T13:49:20.6481320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6481410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6481490Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6481490Z 
2025-01-10T13:49:20.6481550Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6481740Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-01-10T13:49:20.6481740Z 
2025-01-10T13:49:20.6481840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6481940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6482020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6482120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6482510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6482580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6482630Z err_msg = None
2025-01-10T13:49:20.6482630Z 
2025-01-10T13:49:20.6482710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6482770Z         if err_msg is None:
2025-01-10T13:49:20.6482830Z             if left.shape != right.shape:
2025-01-10T13:49:20.6482890Z                 raise_assert_detail(
2025-01-10T13:49:20.6483000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6483050Z                 )
2025-01-10T13:49:20.6483090Z     
2025-01-10T13:49:20.6483140Z             diff = 0
2025-01-10T13:49:20.6483220Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6483280Z                 # count up differences
2025-01-10T13:49:20.6483410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6483460Z                     diff += 1
2025-01-10T13:49:20.6483510Z     
2025-01-10T13:49:20.6483570Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6483680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6483810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6483890Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6483930Z E           
2025-01-10T13:49:20.6484010Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6484220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6484500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6484500Z 
2025-01-10T13:49:20.6484740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6484750Z 
2025-01-10T13:49:20.6484880Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6484880Z 
2025-01-10T13:49:20.6485050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5f6b0>
2025-01-10T13:49:20.6485170Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>
2025-01-10T13:49:20.6485220Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6485220Z 
2025-01-10T13:49:20.6485320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6485410Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6485470Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6485510Z         try:
2025-01-10T13:49:20.6485620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6485670Z         except KeyError:
2025-01-10T13:49:20.6485780Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6485830Z     
2025-01-10T13:49:20.6485890Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6485950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6486010Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6486120Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6486170Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6486230Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6486310Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6486410Z             else:
2025-01-10T13:49:20.6486470Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6486560Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6486560Z 
2025-01-10T13:49:20.6486650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6486730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6486850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6486890Z     ???
2025-01-10T13:49:20.6486980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6486980Z 
2025-01-10T13:49:20.6487020Z >   ???
2025-01-10T13:49:20.6487120Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6487160Z E   
2025-01-10T13:49:20.6487260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6487350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6487400Z E          ...
2025-01-10T13:49:20.6487460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6487550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6487630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6487680Z E          ...
2025-01-10T13:49:20.6487750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6487840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6487920Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6487920Z 
2025-01-10T13:49:20.6487980Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6488150Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-01-10T13:49:20.6488160Z 
2025-01-10T13:49:20.6488260Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6488360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6488430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6488540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6488690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6488770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6488820Z err_msg = None
2025-01-10T13:49:20.6488830Z 
2025-01-10T13:49:20.6488900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6488960Z         if err_msg is None:
2025-01-10T13:49:20.6489020Z             if left.shape != right.shape:
2025-01-10T13:49:20.6489080Z                 raise_assert_detail(
2025-01-10T13:49:20.6489190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6489240Z                 )
2025-01-10T13:49:20.6489280Z     
2025-01-10T13:49:20.6489330Z             diff = 0
2025-01-10T13:49:20.6489410Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6489470Z                 # count up differences
2025-01-10T13:49:20.6489600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6489650Z                     diff += 1
2025-01-10T13:49:20.6489700Z     
2025-01-10T13:49:20.6489760Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6489870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6490000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6490080Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6490130Z E           
2025-01-10T13:49:20.6490210Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6490420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6490680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6490680Z 
2025-01-10T13:49:20.6490930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6490930Z 
2025-01-10T13:49:20.6491050Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6491060Z 
2025-01-10T13:49:20.6491220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba5f830>
2025-01-10T13:49:20.6491380Z plasma = <tardis.plasma.base.BasePlasma object at 0x30e0092b0>, attr = 'j_blues'
2025-01-10T13:49:20.6491390Z 
2025-01-10T13:49:20.6491480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6491580Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6491640Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6491680Z         try:
2025-01-10T13:49:20.6491790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6491840Z         except KeyError:
2025-01-10T13:49:20.6491940Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6491980Z     
2025-01-10T13:49:20.6492040Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6492110Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6492160Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6492270Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6492320Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6492390Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6492480Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6492520Z             else:
2025-01-10T13:49:20.6492590Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6492720Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6492720Z 
2025-01-10T13:49:20.6492820Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6492900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6493010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6493060Z     ???
2025-01-10T13:49:20.6493140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6493150Z 
2025-01-10T13:49:20.6493190Z >   ???
2025-01-10T13:49:20.6493280Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6493320Z E   
2025-01-10T13:49:20.6493420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6493510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6493550Z E          ...
2025-01-10T13:49:20.6493610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6493710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6493800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6493840Z E          ...
2025-01-10T13:49:20.6493910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6494010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6494080Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6494080Z 
2025-01-10T13:49:20.6494140Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6494300Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-01-10T13:49:20.6494300Z 
2025-01-10T13:49:20.6494440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6494550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6494620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6494720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6494830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6494890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6494950Z err_msg = None
2025-01-10T13:49:20.6494950Z 
2025-01-10T13:49:20.6495030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6495080Z         if err_msg is None:
2025-01-10T13:49:20.6495150Z             if left.shape != right.shape:
2025-01-10T13:49:20.6495200Z                 raise_assert_detail(
2025-01-10T13:49:20.6495320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6495360Z                 )
2025-01-10T13:49:20.6495410Z     
2025-01-10T13:49:20.6495450Z             diff = 0
2025-01-10T13:49:20.6495530Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6495590Z                 # count up differences
2025-01-10T13:49:20.6495730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6495780Z                     diff += 1
2025-01-10T13:49:20.6495820Z     
2025-01-10T13:49:20.6495880Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6495990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6496130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6496210Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6496250Z E           
2025-01-10T13:49:20.6496330Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6496960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6497190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6497190Z 
2025-01-10T13:49:20.6497430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6497440Z 
2025-01-10T13:49:20.6497570Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6497570Z 
2025-01-10T13:49:20.6497740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba885f0>
2025-01-10T13:49:20.6497900Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>, attr = 'lines'
2025-01-10T13:49:20.6497900Z 
2025-01-10T13:49:20.6498010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6498090Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6498150Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6498200Z         try:
2025-01-10T13:49:20.6498300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6498350Z         except KeyError:
2025-01-10T13:49:20.6498460Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6498500Z     
2025-01-10T13:49:20.6498560Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6498620Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6498930Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6499030Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6499090Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6499150Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6499240Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6499280Z             else:
2025-01-10T13:49:20.6499350Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6499430Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6499440Z 
2025-01-10T13:49:20.6499520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6499610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6499720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6499760Z     ???
2025-01-10T13:49:20.6499850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6499850Z 
2025-01-10T13:49:20.6499900Z >   ???
2025-01-10T13:49:20.6499990Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6500040Z E   
2025-01-10T13:49:20.6500130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6500220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6500270Z E          ...
2025-01-10T13:49:20.6500330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6500430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6500520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6500560Z E          ...
2025-01-10T13:49:20.6500620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6500720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6500790Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6500800Z 
2025-01-10T13:49:20.6500860Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6501050Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-01-10T13:49:20.6501050Z 
2025-01-10T13:49:20.6501220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba886b0>
2025-01-10T13:49:20.6501380Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>
2025-01-10T13:49:20.6501450Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6501450Z 
2025-01-10T13:49:20.6501560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6501640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6501700Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6501740Z         try:
2025-01-10T13:49:20.6501860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6501910Z         except KeyError:
2025-01-10T13:49:20.6502020Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6502070Z     
2025-01-10T13:49:20.6502130Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6502190Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6502250Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6502350Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6502420Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6502480Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6502560Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6502560Z 
2025-01-10T13:49:20.6502650Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6502740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6502740Z 
2025-01-10T13:49:20.6502850Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6502910Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6502990Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6503090Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6503200Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6503260Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6503350Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6503400Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6503450Z err_msg = None
2025-01-10T13:49:20.6503460Z 
2025-01-10T13:49:20.6503530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6503580Z         if err_msg is None:
2025-01-10T13:49:20.6503650Z             if left.shape != right.shape:
2025-01-10T13:49:20.6503710Z                 raise_assert_detail(
2025-01-10T13:49:20.6503820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6503860Z                 )
2025-01-10T13:49:20.6503920Z     
2025-01-10T13:49:20.6503960Z             diff = 0
2025-01-10T13:49:20.6504050Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6504110Z                 # count up differences
2025-01-10T13:49:20.6504240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6504290Z                     diff += 1
2025-01-10T13:49:20.6504330Z     
2025-01-10T13:49:20.6504390Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6504500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6504630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6504710Z E           AssertionError: Series are different
2025-01-10T13:49:20.6504750Z E           
2025-01-10T13:49:20.6504820Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6505170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6505440Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6505710Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6505720Z 
2025-01-10T13:49:20.6505960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6506150Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-01-10T13:49:20.6506160Z 
2025-01-10T13:49:20.6506320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba88770>
2025-01-10T13:49:20.6506440Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>
2025-01-10T13:49:20.6506510Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6506510Z 
2025-01-10T13:49:20.6506610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6506690Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6506750Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6506800Z         try:
2025-01-10T13:49:20.6506960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6507010Z         except KeyError:
2025-01-10T13:49:20.6507120Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6507160Z     
2025-01-10T13:49:20.6507230Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6507300Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6507360Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6507460Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6507520Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6507590Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6507670Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6507670Z 
2025-01-10T13:49:20.6507760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6507850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6507860Z 
2025-01-10T13:49:20.6507960Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6508020Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6508110Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6508160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6508270Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6508330Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6508410Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6508470Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6508510Z err_msg = None
2025-01-10T13:49:20.6508520Z 
2025-01-10T13:49:20.6508600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6508650Z         if err_msg is None:
2025-01-10T13:49:20.6508720Z             if left.shape != right.shape:
2025-01-10T13:49:20.6508780Z                 raise_assert_detail(
2025-01-10T13:49:20.6508890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6508940Z                 )
2025-01-10T13:49:20.6508980Z     
2025-01-10T13:49:20.6509030Z             diff = 0
2025-01-10T13:49:20.6509390Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6509450Z                 # count up differences
2025-01-10T13:49:20.6509590Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6509640Z                     diff += 1
2025-01-10T13:49:20.6509680Z     
2025-01-10T13:49:20.6509740Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6509850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6509980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6510050Z E           AssertionError: Series are different
2025-01-10T13:49:20.6510100Z E           
2025-01-10T13:49:20.6510170Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6510470Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6510770Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6511120Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6511120Z 
2025-01-10T13:49:20.6511360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6511510Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-01-10T13:49:20.6511520Z 
2025-01-10T13:49:20.6511620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6511720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6511790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6511900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6512000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6512070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6512120Z err_msg = None
2025-01-10T13:49:20.6512120Z 
2025-01-10T13:49:20.6512200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6512260Z         if err_msg is None:
2025-01-10T13:49:20.6512320Z             if left.shape != right.shape:
2025-01-10T13:49:20.6512380Z                 raise_assert_detail(
2025-01-10T13:49:20.6512490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6512540Z                 )
2025-01-10T13:49:20.6512580Z     
2025-01-10T13:49:20.6512630Z             diff = 0
2025-01-10T13:49:20.6512710Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6512770Z                 # count up differences
2025-01-10T13:49:20.6512900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6512950Z                     diff += 1
2025-01-10T13:49:20.6513230Z     
2025-01-10T13:49:20.6513310Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6513410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6513540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6513630Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6513670Z E           
2025-01-10T13:49:20.6513760Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6513960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6514190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6514190Z 
2025-01-10T13:49:20.6514420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6514420Z 
2025-01-10T13:49:20.6514550Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6514560Z 
2025-01-10T13:49:20.6514780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba889b0>
2025-01-10T13:49:20.6514950Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>, attr = 'nu'
2025-01-10T13:49:20.6515250Z 
2025-01-10T13:49:20.6515370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6515450Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6515510Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6515560Z         try:
2025-01-10T13:49:20.6515660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6515720Z         except KeyError:
2025-01-10T13:49:20.6515820Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6515860Z     
2025-01-10T13:49:20.6515920Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6515980Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6516040Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6516150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6516200Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6516270Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6516350Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6516360Z 
2025-01-10T13:49:20.6516450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6516540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6516650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6516690Z     ???
2025-01-10T13:49:20.6516780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6516780Z 
2025-01-10T13:49:20.6516830Z >   ???
2025-01-10T13:49:20.6516920Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6516960Z E   
2025-01-10T13:49:20.6517060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6517150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6517190Z E          ...
2025-01-10T13:49:20.6517250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6517350Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6517440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6517490Z E          ...
2025-01-10T13:49:20.6517630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6517730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6517800Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6517800Z 
2025-01-10T13:49:20.6517860Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6518030Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-01-10T13:49:20.6518030Z 
2025-01-10T13:49:20.6518140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6518240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6518310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6518430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6518520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6518600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6518640Z err_msg = None
2025-01-10T13:49:20.6518650Z 
2025-01-10T13:49:20.6518730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6518780Z         if err_msg is None:
2025-01-10T13:49:20.6518860Z             if left.shape != right.shape:
2025-01-10T13:49:20.6518910Z                 raise_assert_detail(
2025-01-10T13:49:20.6519020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6519070Z                 )
2025-01-10T13:49:20.6519110Z     
2025-01-10T13:49:20.6519160Z             diff = 0
2025-01-10T13:49:20.6519240Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6519360Z                 # count up differences
2025-01-10T13:49:20.6519490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6519540Z                     diff += 1
2025-01-10T13:49:20.6519580Z     
2025-01-10T13:49:20.6519650Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6519750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6519890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6519970Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6520020Z E           
2025-01-10T13:49:20.6520100Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6520310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6520530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6520530Z 
2025-01-10T13:49:20.6520770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6520770Z 
2025-01-10T13:49:20.6520900Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6520900Z 
2025-01-10T13:49:20.6521060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba88a70>
2025-01-10T13:49:20.6521180Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>
2025-01-10T13:49:20.6521250Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6521250Z 
2025-01-10T13:49:20.6521350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6521430Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6521490Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6527100Z         try:
2025-01-10T13:49:20.6527250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6527310Z         except KeyError:
2025-01-10T13:49:20.6527410Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6527460Z     
2025-01-10T13:49:20.6527520Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6527590Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6527650Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6527760Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6527820Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6527880Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6527970Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6527970Z 
2025-01-10T13:49:20.6528060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6528150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6528260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6528310Z     ???
2025-01-10T13:49:20.6528390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6528400Z 
2025-01-10T13:49:20.6528440Z >   ???
2025-01-10T13:49:20.6528540Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6528580Z E   
2025-01-10T13:49:20.6528670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6528750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6528800Z E          ...
2025-01-10T13:49:20.6528910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6529010Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6529090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6529140Z E          ...
2025-01-10T13:49:20.6529200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6529300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6529370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6529370Z 
2025-01-10T13:49:20.6529440Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6529600Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-01-10T13:49:20.6529610Z 
2025-01-10T13:49:20.6529700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6529810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6529880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6529990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6530090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6530170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6530210Z err_msg = None
2025-01-10T13:49:20.6530220Z 
2025-01-10T13:49:20.6530300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6530350Z         if err_msg is None:
2025-01-10T13:49:20.6530410Z             if left.shape != right.shape:
2025-01-10T13:49:20.6530470Z                 raise_assert_detail(
2025-01-10T13:49:20.6530590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6530630Z                 )
2025-01-10T13:49:20.6530670Z     
2025-01-10T13:49:20.6530720Z             diff = 0
2025-01-10T13:49:20.6530800Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6530870Z                 # count up differences
2025-01-10T13:49:20.6531000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6531050Z                     diff += 1
2025-01-10T13:49:20.6531140Z     
2025-01-10T13:49:20.6531210Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6531320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6531460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6531540Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6531590Z E           
2025-01-10T13:49:20.6531670Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6531870Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6532090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6532090Z 
2025-01-10T13:49:20.6532330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6532330Z 
2025-01-10T13:49:20.6532460Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6532460Z 
2025-01-10T13:49:20.6532630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba88b30>
2025-01-10T13:49:20.6532780Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>, attr = 'f_lu'
2025-01-10T13:49:20.6532820Z 
2025-01-10T13:49:20.6532930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6533020Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6533080Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6533120Z         try:
2025-01-10T13:49:20.6533230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6533280Z         except KeyError:
2025-01-10T13:49:20.6533390Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6533430Z     
2025-01-10T13:49:20.6533490Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6533560Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6533620Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6533720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6533770Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6533840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6533930Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6533930Z 
2025-01-10T13:49:20.6534020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6534110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6534230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6534270Z     ???
2025-01-10T13:49:20.6534360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6534360Z 
2025-01-10T13:49:20.6534400Z >   ???
2025-01-10T13:49:20.6534490Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6534540Z E   
2025-01-10T13:49:20.6534630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6534720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6534760Z E          ...
2025-01-10T13:49:20.6534830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6534930Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6535020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6535060Z E          ...
2025-01-10T13:49:20.6535390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6535500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6535570Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6535570Z 
2025-01-10T13:49:20.6535640Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6535800Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-01-10T13:49:20.6535800Z 
2025-01-10T13:49:20.6535900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6536000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6536080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6536180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6536280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6536350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6536400Z err_msg = None
2025-01-10T13:49:20.6536400Z 
2025-01-10T13:49:20.6536480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6536680Z         if err_msg is None:
2025-01-10T13:49:20.6536760Z             if left.shape != right.shape:
2025-01-10T13:49:20.6536810Z                 raise_assert_detail(
2025-01-10T13:49:20.6536930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6536970Z                 )
2025-01-10T13:49:20.6537020Z     
2025-01-10T13:49:20.6537060Z             diff = 0
2025-01-10T13:49:20.6537150Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6537560Z                 # count up differences
2025-01-10T13:49:20.6537690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6537740Z                     diff += 1
2025-01-10T13:49:20.6537790Z     
2025-01-10T13:49:20.6537850Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6537960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6538090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6538170Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6538230Z E           
2025-01-10T13:49:20.6538310Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6538510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6538730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6538730Z 
2025-01-10T13:49:20.6538970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6538970Z 
2025-01-10T13:49:20.6539100Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6539110Z 
2025-01-10T13:49:20.6539270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba892b0>
2025-01-10T13:49:20.6539390Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>
2025-01-10T13:49:20.6539440Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6539450Z 
2025-01-10T13:49:20.6539550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6539640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6539690Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6539790Z         try:
2025-01-10T13:49:20.6539900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6539960Z         except KeyError:
2025-01-10T13:49:20.6540060Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6540100Z     
2025-01-10T13:49:20.6540160Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6540220Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6540280Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6540390Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6540440Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6540520Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6540600Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6540640Z             else:
2025-01-10T13:49:20.6540710Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6540790Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6540790Z 
2025-01-10T13:49:20.6540890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6540980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6541090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6541130Z     ???
2025-01-10T13:49:20.6541220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6541220Z 
2025-01-10T13:49:20.6541270Z >   ???
2025-01-10T13:49:20.6541360Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6541400Z E   
2025-01-10T13:49:20.6541560Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6541640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6541680Z E          ...
2025-01-10T13:49:20.6541750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6541840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6541930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6541980Z E          ...
2025-01-10T13:49:20.6542040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6542130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6542210Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6542220Z 
2025-01-10T13:49:20.6542280Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6542440Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-01-10T13:49:20.6542450Z 
2025-01-10T13:49:20.6542550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6542700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6542780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6542890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6543000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6543070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6543120Z err_msg = None
2025-01-10T13:49:20.6543120Z 
2025-01-10T13:49:20.6543200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6543250Z         if err_msg is None:
2025-01-10T13:49:20.6543310Z             if left.shape != right.shape:
2025-01-10T13:49:20.6543370Z                 raise_assert_detail(
2025-01-10T13:49:20.6543490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6543530Z                 )
2025-01-10T13:49:20.6543580Z     
2025-01-10T13:49:20.6543630Z             diff = 0
2025-01-10T13:49:20.6543710Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6543890Z                 # count up differences
2025-01-10T13:49:20.6544020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6544080Z                     diff += 1
2025-01-10T13:49:20.6544120Z     
2025-01-10T13:49:20.6544180Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6544290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6544420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6544500Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6544550Z E           
2025-01-10T13:49:20.6544630Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6544840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6545050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6545050Z 
2025-01-10T13:49:20.6545290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6545300Z 
2025-01-10T13:49:20.6545420Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6545500Z 
2025-01-10T13:49:20.6545660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba894f0>
2025-01-10T13:49:20.6545820Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e0cb7a0>, attr = 'j_blues'
2025-01-10T13:49:20.6545830Z 
2025-01-10T13:49:20.6545930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6546020Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6546070Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6546120Z         try:
2025-01-10T13:49:20.6546230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6546280Z         except KeyError:
2025-01-10T13:49:20.6546390Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6546430Z     
2025-01-10T13:49:20.6546490Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6546550Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6546620Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6546720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6546780Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6546840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6546940Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6546980Z             else:
2025-01-10T13:49:20.6547050Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6547120Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6547130Z 
2025-01-10T13:49:20.6547220Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6547310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6547420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6547460Z     ???
2025-01-10T13:49:20.6547550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6547560Z 
2025-01-10T13:49:20.6547600Z >   ???
2025-01-10T13:49:20.6547690Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6547740Z E   
2025-01-10T13:49:20.6547830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6547960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6548000Z E          ...
2025-01-10T13:49:20.6548070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6548160Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6548250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6548300Z E          ...
2025-01-10T13:49:20.6548360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6548450Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6548520Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6548520Z 
2025-01-10T13:49:20.6548590Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6548750Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-01-10T13:49:20.6548760Z 
2025-01-10T13:49:20.6548850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6548960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6549030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6549130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6549230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6549310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6549360Z err_msg = None
2025-01-10T13:49:20.6549360Z 
2025-01-10T13:49:20.6549440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6549490Z         if err_msg is None:
2025-01-10T13:49:20.6549610Z             if left.shape != right.shape:
2025-01-10T13:49:20.6549670Z                 raise_assert_detail(
2025-01-10T13:49:20.6549780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6549820Z                 )
2025-01-10T13:49:20.6549870Z     
2025-01-10T13:49:20.6549920Z             diff = 0
2025-01-10T13:49:20.6550000Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6550060Z                 # count up differences
2025-01-10T13:49:20.6550190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6550240Z                     diff += 1
2025-01-10T13:49:20.6550290Z     
2025-01-10T13:49:20.6550350Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6550450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6550580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6550670Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6550720Z E           
2025-01-10T13:49:20.6550800Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6551010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6551230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6551230Z 
2025-01-10T13:49:20.6551460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6551470Z 
2025-01-10T13:49:20.6551600Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6551600Z 
2025-01-10T13:49:20.6552010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8a270>
2025-01-10T13:49:20.6552180Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>, attr = 'lines'
2025-01-10T13:49:20.6552180Z 
2025-01-10T13:49:20.6552290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6552370Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6552430Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6552470Z         try:
2025-01-10T13:49:20.6552580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6552630Z         except KeyError:
2025-01-10T13:49:20.6552740Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6552780Z     
2025-01-10T13:49:20.6552840Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6552910Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6552970Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6553070Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6553130Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6553200Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6553280Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6553320Z             else:
2025-01-10T13:49:20.6553390Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6553470Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6553470Z 
2025-01-10T13:49:20.6553560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6553650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6553760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6554080Z     ???
2025-01-10T13:49:20.6554170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6554170Z 
2025-01-10T13:49:20.6554220Z >   ???
2025-01-10T13:49:20.6554320Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6554360Z E   
2025-01-10T13:49:20.6554460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6554540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6554590Z E          ...
2025-01-10T13:49:20.6554650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6554740Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6554830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6554880Z E          ...
2025-01-10T13:49:20.6554940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6555030Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6555110Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6555110Z 
2025-01-10T13:49:20.6555170Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6555380Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-01-10T13:49:20.6555380Z 
2025-01-10T13:49:20.6555550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8a330>
2025-01-10T13:49:20.6555670Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>
2025-01-10T13:49:20.6555730Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6555730Z 
2025-01-10T13:49:20.6555830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6555920Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6555970Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6556020Z         try:
2025-01-10T13:49:20.6556130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6556180Z         except KeyError:
2025-01-10T13:49:20.6556290Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6556330Z     
2025-01-10T13:49:20.6556390Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6556460Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6556570Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6556680Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6556740Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6556800Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6556880Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6556890Z 
2025-01-10T13:49:20.6556980Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6557060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6557060Z 
2025-01-10T13:49:20.6557170Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6557230Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6557350Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6557410Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6557530Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6557580Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6557670Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6557730Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6557770Z err_msg = None
2025-01-10T13:49:20.6557770Z 
2025-01-10T13:49:20.6557860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6557910Z         if err_msg is None:
2025-01-10T13:49:20.6557970Z             if left.shape != right.shape:
2025-01-10T13:49:20.6558020Z                 raise_assert_detail(
2025-01-10T13:49:20.6558220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6558270Z                 )
2025-01-10T13:49:20.6558310Z     
2025-01-10T13:49:20.6558350Z             diff = 0
2025-01-10T13:49:20.6558440Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6558500Z                 # count up differences
2025-01-10T13:49:20.6558630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6558680Z                     diff += 1
2025-01-10T13:49:20.6558720Z     
2025-01-10T13:49:20.6558790Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6558890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6559020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6559100Z E           AssertionError: Series are different
2025-01-10T13:49:20.6559140Z E           
2025-01-10T13:49:20.6559210Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6559520Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6559800Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6560060Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6560070Z 
2025-01-10T13:49:20.6560370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6560570Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-01-10T13:49:20.6560580Z 
2025-01-10T13:49:20.6560740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8a3f0>
2025-01-10T13:49:20.6560870Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>
2025-01-10T13:49:20.6560920Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6560930Z 
2025-01-10T13:49:20.6561030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6561110Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6561170Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6561220Z         try:
2025-01-10T13:49:20.6561330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6561380Z         except KeyError:
2025-01-10T13:49:20.6561490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6561530Z     
2025-01-10T13:49:20.6561590Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6561660Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6561720Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6561820Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6561870Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6561940Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6562020Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6562030Z 
2025-01-10T13:49:20.6562120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6562250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6562250Z 
2025-01-10T13:49:20.6562360Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6562430Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6562510Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6562580Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6562690Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6562750Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6562830Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6562890Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6562930Z err_msg = None
2025-01-10T13:49:20.6562940Z 
2025-01-10T13:49:20.6563020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6563070Z         if err_msg is None:
2025-01-10T13:49:20.6563140Z             if left.shape != right.shape:
2025-01-10T13:49:20.6563200Z                 raise_assert_detail(
2025-01-10T13:49:20.6563310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6563350Z                 )
2025-01-10T13:49:20.6563390Z     
2025-01-10T13:49:20.6563440Z             diff = 0
2025-01-10T13:49:20.6563520Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6563580Z                 # count up differences
2025-01-10T13:49:20.6563710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6563760Z                     diff += 1
2025-01-10T13:49:20.6563800Z     
2025-01-10T13:49:20.6563860Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6563960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6564100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6564170Z E           AssertionError: Series are different
2025-01-10T13:49:20.6564220Z E           
2025-01-10T13:49:20.6564290Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6564660Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6564970Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6565280Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6565280Z 
2025-01-10T13:49:20.6565520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6565680Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-01-10T13:49:20.6565680Z 
2025-01-10T13:49:20.6565780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6565940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6566010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6566110Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6566210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6566280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6566330Z err_msg = None
2025-01-10T13:49:20.6566330Z 
2025-01-10T13:49:20.6566410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6566460Z         if err_msg is None:
2025-01-10T13:49:20.6566520Z             if left.shape != right.shape:
2025-01-10T13:49:20.6566590Z                 raise_assert_detail(
2025-01-10T13:49:20.6566700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6566750Z                 )
2025-01-10T13:49:20.6566790Z     
2025-01-10T13:49:20.6566830Z             diff = 0
2025-01-10T13:49:20.6566920Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6566970Z                 # count up differences
2025-01-10T13:49:20.6567110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6567160Z                     diff += 1
2025-01-10T13:49:20.6567200Z     
2025-01-10T13:49:20.6567260Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6567370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6567500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6567590Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6567630Z E           
2025-01-10T13:49:20.6567710Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6568330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6568560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6568560Z 
2025-01-10T13:49:20.6568800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6568800Z 
2025-01-10T13:49:20.6568930Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6568930Z 
2025-01-10T13:49:20.6569100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8a630>
2025-01-10T13:49:20.6569250Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>, attr = 'nu'
2025-01-10T13:49:20.6569260Z 
2025-01-10T13:49:20.6569350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6569440Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6569500Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6569550Z         try:
2025-01-10T13:49:20.6569650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6569710Z         except KeyError:
2025-01-10T13:49:20.6569810Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6569850Z     
2025-01-10T13:49:20.6569910Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6569980Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6570030Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6570140Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6570330Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6570400Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6570480Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6570490Z 
2025-01-10T13:49:20.6570580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6570670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6570770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6570820Z     ???
2025-01-10T13:49:20.6570910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6570910Z 
2025-01-10T13:49:20.6570960Z >   ???
2025-01-10T13:49:20.6571050Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6571100Z E   
2025-01-10T13:49:20.6571190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6571290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6571330Z E          ...
2025-01-10T13:49:20.6571390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6571490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6571570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6571630Z E          ...
2025-01-10T13:49:20.6571690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6571790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6571870Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6571870Z 
2025-01-10T13:49:20.6571930Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6572100Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-01-10T13:49:20.6572110Z 
2025-01-10T13:49:20.6572210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6572320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6579320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6579840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6579970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6580050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6580100Z err_msg = None
2025-01-10T13:49:20.6580100Z 
2025-01-10T13:49:20.6580190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6580250Z         if err_msg is None:
2025-01-10T13:49:20.6580320Z             if left.shape != right.shape:
2025-01-10T13:49:20.6580380Z                 raise_assert_detail(
2025-01-10T13:49:20.6580500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6580550Z                 )
2025-01-10T13:49:20.6580600Z     
2025-01-10T13:49:20.6580640Z             diff = 0
2025-01-10T13:49:20.6580730Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6580790Z                 # count up differences
2025-01-10T13:49:20.6580930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6580980Z                     diff += 1
2025-01-10T13:49:20.6581030Z     
2025-01-10T13:49:20.6581090Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6581200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6581340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6581430Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6581470Z E           
2025-01-10T13:49:20.6581550Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6581770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6582060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6582070Z 
2025-01-10T13:49:20.6582320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6582320Z 
2025-01-10T13:49:20.6582450Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6582460Z 
2025-01-10T13:49:20.6582630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8a6f0>
2025-01-10T13:49:20.6582760Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>
2025-01-10T13:49:20.6582810Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6582810Z 
2025-01-10T13:49:20.6582920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6583030Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6583110Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6583160Z         try:
2025-01-10T13:49:20.6583270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6583320Z         except KeyError:
2025-01-10T13:49:20.6583430Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6583470Z     
2025-01-10T13:49:20.6583530Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6583600Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6583660Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6583770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6583830Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6583900Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6583980Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6584060Z 
2025-01-10T13:49:20.6584170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6584260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6584370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6584420Z     ???
2025-01-10T13:49:20.6584500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6584510Z 
2025-01-10T13:49:20.6584550Z >   ???
2025-01-10T13:49:20.6584640Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6584690Z E   
2025-01-10T13:49:20.6584780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6584870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6584920Z E          ...
2025-01-10T13:49:20.6584980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6585080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6585170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6585220Z E          ...
2025-01-10T13:49:20.6585280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6585380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6585450Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6585450Z 
2025-01-10T13:49:20.6585520Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6585680Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-01-10T13:49:20.6585690Z 
2025-01-10T13:49:20.6585790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6585950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6586020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6586130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6586230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6586310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6586350Z err_msg = None
2025-01-10T13:49:20.6586350Z 
2025-01-10T13:49:20.6586440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6586490Z         if err_msg is None:
2025-01-10T13:49:20.6586560Z             if left.shape != right.shape:
2025-01-10T13:49:20.6586610Z                 raise_assert_detail(
2025-01-10T13:49:20.6586720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6586770Z                 )
2025-01-10T13:49:20.6586820Z     
2025-01-10T13:49:20.6586860Z             diff = 0
2025-01-10T13:49:20.6586950Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6587000Z                 # count up differences
2025-01-10T13:49:20.6587140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6587190Z                     diff += 1
2025-01-10T13:49:20.6587230Z     
2025-01-10T13:49:20.6587300Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6587400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6587540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6587620Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6587670Z E           
2025-01-10T13:49:20.6587750Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6588010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6588230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6588230Z 
2025-01-10T13:49:20.6588470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6588470Z 
2025-01-10T13:49:20.6588600Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6588610Z 
2025-01-10T13:49:20.6588770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8a7b0>
2025-01-10T13:49:20.6588930Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>, attr = 'f_lu'
2025-01-10T13:49:20.6588940Z 
2025-01-10T13:49:20.6589040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6589130Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6589190Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6589230Z         try:
2025-01-10T13:49:20.6589340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6589390Z         except KeyError:
2025-01-10T13:49:20.6589500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6589540Z     
2025-01-10T13:49:20.6589600Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6589660Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6589730Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6589870Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6589930Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6590000Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6590080Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6590090Z 
2025-01-10T13:49:20.6590180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6590270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6590380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6590420Z     ???
2025-01-10T13:49:20.6590510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6590510Z 
2025-01-10T13:49:20.6590550Z >   ???
2025-01-10T13:49:20.6590660Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6590700Z E   
2025-01-10T13:49:20.6590790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6590880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6590930Z E          ...
2025-01-10T13:49:20.6591000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6591090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6591180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6591220Z E          ...
2025-01-10T13:49:20.6591290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6591380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6591460Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6591460Z 
2025-01-10T13:49:20.6591520Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6591700Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-01-10T13:49:20.6591700Z 
2025-01-10T13:49:20.6591800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6591910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6591990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6592360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6592480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6592560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6592630Z err_msg = None
2025-01-10T13:49:20.6592630Z 
2025-01-10T13:49:20.6592710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6592760Z         if err_msg is None:
2025-01-10T13:49:20.6592830Z             if left.shape != right.shape:
2025-01-10T13:49:20.6592890Z                 raise_assert_detail(
2025-01-10T13:49:20.6593000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6593050Z                 )
2025-01-10T13:49:20.6593100Z     
2025-01-10T13:49:20.6593140Z             diff = 0
2025-01-10T13:49:20.6593230Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6593280Z                 # count up differences
2025-01-10T13:49:20.6593430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6593480Z                     diff += 1
2025-01-10T13:49:20.6593520Z     
2025-01-10T13:49:20.6593580Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6593690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6593820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6593900Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6593950Z E           
2025-01-10T13:49:20.6594030Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6594240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6594730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6594730Z 
2025-01-10T13:49:20.6594970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6594970Z 
2025-01-10T13:49:20.6595100Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6595100Z 
2025-01-10T13:49:20.6595270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8af30>
2025-01-10T13:49:20.6595400Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>
2025-01-10T13:49:20.6595450Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6595450Z 
2025-01-10T13:49:20.6595560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6595640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6595700Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6595750Z         try:
2025-01-10T13:49:20.6595860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6595910Z         except KeyError:
2025-01-10T13:49:20.6596020Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6596060Z     
2025-01-10T13:49:20.6596110Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6596190Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6596250Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6596350Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6596410Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6596480Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6596560Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6596670Z             else:
2025-01-10T13:49:20.6596740Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6596820Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6596820Z 
2025-01-10T13:49:20.6596910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6597000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6597110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6597150Z     ???
2025-01-10T13:49:20.6597240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6597240Z 
2025-01-10T13:49:20.6597290Z >   ???
2025-01-10T13:49:20.6597380Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6597430Z E   
2025-01-10T13:49:20.6597520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6597600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6597670Z E          ...
2025-01-10T13:49:20.6597740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6597840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6597920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6597960Z E          ...
2025-01-10T13:49:20.6598030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6598120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6598190Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6598190Z 
2025-01-10T13:49:20.6598250Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6598510Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-01-10T13:49:20.6598510Z 
2025-01-10T13:49:20.6598610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6598720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6598790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6598890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6599000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6599060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6599110Z err_msg = None
2025-01-10T13:49:20.6599110Z 
2025-01-10T13:49:20.6599190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6599250Z         if err_msg is None:
2025-01-10T13:49:20.6599320Z             if left.shape != right.shape:
2025-01-10T13:49:20.6599370Z                 raise_assert_detail(
2025-01-10T13:49:20.6599480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6599530Z                 )
2025-01-10T13:49:20.6599570Z     
2025-01-10T13:49:20.6599620Z             diff = 0
2025-01-10T13:49:20.6599700Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6599770Z                 # count up differences
2025-01-10T13:49:20.6599900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6599950Z                     diff += 1
2025-01-10T13:49:20.6600000Z     
2025-01-10T13:49:20.6600060Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6600160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6600290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6600380Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6600420Z E           
2025-01-10T13:49:20.6600510Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6600770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6600990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6600990Z 
2025-01-10T13:49:20.6601230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6601230Z 
2025-01-10T13:49:20.6601360Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6601360Z 
2025-01-10T13:49:20.6601540Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8aff0>
2025-01-10T13:49:20.6601650Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>
2025-01-10T13:49:20.6601710Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6601710Z 
2025-01-10T13:49:20.6601810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6601900Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6601960Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6602000Z         try:
2025-01-10T13:49:20.6602100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6602150Z         except KeyError:
2025-01-10T13:49:20.6602260Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6602350Z     
2025-01-10T13:49:20.6602410Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6602470Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6602540Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6602640Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6602700Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6602770Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6602860Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6602920Z             else:
2025-01-10T13:49:20.6602980Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6603060Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6603060Z 
2025-01-10T13:49:20.6603150Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6603250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6603370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6603430Z     ???
2025-01-10T13:49:20.6603520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6603520Z 
2025-01-10T13:49:20.6603570Z >   ???
2025-01-10T13:49:20.6603680Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6603720Z E   
2025-01-10T13:49:20.6603820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6603900Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6603950Z E          ...
2025-01-10T13:49:20.6604010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6604110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6604190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6604240Z E          ...
2025-01-10T13:49:20.6604300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6604390Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6604470Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6604470Z 
2025-01-10T13:49:20.6604550Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6604790Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-01-10T13:49:20.6604800Z 
2025-01-10T13:49:20.6604900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6605010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6605080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6605190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6605290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6605360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6605410Z err_msg = None
2025-01-10T13:49:20.6605410Z 
2025-01-10T13:49:20.6605490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6605550Z         if err_msg is None:
2025-01-10T13:49:20.6605610Z             if left.shape != right.shape:
2025-01-10T13:49:20.6605670Z                 raise_assert_detail(
2025-01-10T13:49:20.6605780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6605830Z                 )
2025-01-10T13:49:20.6605870Z     
2025-01-10T13:49:20.6605920Z             diff = 0
2025-01-10T13:49:20.6606000Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6606060Z                 # count up differences
2025-01-10T13:49:20.6606190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6606240Z                     diff += 1
2025-01-10T13:49:20.6606280Z     
2025-01-10T13:49:20.6606350Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6606510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6606650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6606740Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6606780Z E           
2025-01-10T13:49:20.6606870Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6607080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6607290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6607300Z 
2025-01-10T13:49:20.6607530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6607540Z 
2025-01-10T13:49:20.6607670Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6607670Z 
2025-01-10T13:49:20.6607840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8b170>
2025-01-10T13:49:20.6608000Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150f50>, attr = 'j_blues'
2025-01-10T13:49:20.6608000Z 
2025-01-10T13:49:20.6608100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6608190Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6608240Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6608290Z         try:
2025-01-10T13:49:20.6608400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6608460Z         except KeyError:
2025-01-10T13:49:20.6608560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6608600Z     
2025-01-10T13:49:20.6608660Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6608890Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6608960Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6609070Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6609130Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6609200Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6609280Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6609320Z             else:
2025-01-10T13:49:20.6609390Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6609470Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6609470Z 
2025-01-10T13:49:20.6609560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6609650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6609760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6609800Z     ???
2025-01-10T13:49:20.6609900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6609900Z 
2025-01-10T13:49:20.6609940Z >   ???
2025-01-10T13:49:20.6610030Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6610070Z E   
2025-01-10T13:49:20.6610170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6610250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6610300Z E          ...
2025-01-10T13:49:20.6610360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6610460Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6610540Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6611020Z E          ...
2025-01-10T13:49:20.6611090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6611180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6611260Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6611260Z 
2025-01-10T13:49:20.6611320Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6611490Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-01-10T13:49:20.6611490Z 
2025-01-10T13:49:20.6611590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6611700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6611770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6611870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6611970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6612040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6612090Z err_msg = None
2025-01-10T13:49:20.6612090Z 
2025-01-10T13:49:20.6612170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6612230Z         if err_msg is None:
2025-01-10T13:49:20.6612290Z             if left.shape != right.shape:
2025-01-10T13:49:20.6612350Z                 raise_assert_detail(
2025-01-10T13:49:20.6612460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6612500Z                 )
2025-01-10T13:49:20.6612550Z     
2025-01-10T13:49:20.6612590Z             diff = 0
2025-01-10T13:49:20.6612670Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6612730Z                 # count up differences
2025-01-10T13:49:20.6612860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6612910Z                     diff += 1
2025-01-10T13:49:20.6612960Z     
2025-01-10T13:49:20.6613020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6613120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6613310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6613400Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6613440Z E           
2025-01-10T13:49:20.6613520Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6613730Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6613960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6613980Z 
2025-01-10T13:49:20.6614220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6614220Z 
2025-01-10T13:49:20.6614350Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6614350Z 
2025-01-10T13:49:20.6614520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8bef0>
2025-01-10T13:49:20.6614670Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>, attr = 'lines'
2025-01-10T13:49:20.6614670Z 
2025-01-10T13:49:20.6614770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6614860Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6615000Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6615040Z         try:
2025-01-10T13:49:20.6615150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6615210Z         except KeyError:
2025-01-10T13:49:20.6615310Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6615360Z     
2025-01-10T13:49:20.6615420Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6615490Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6615560Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6615660Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6615710Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6615780Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6615860Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6615900Z             else:
2025-01-10T13:49:20.6615980Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6616060Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6616060Z 
2025-01-10T13:49:20.6616150Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6616240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6616350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6616390Z     ???
2025-01-10T13:49:20.6616490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6616490Z 
2025-01-10T13:49:20.6616530Z >   ???
2025-01-10T13:49:20.6616620Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6616670Z E   
2025-01-10T13:49:20.6616760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6616850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6616890Z E          ...
2025-01-10T13:49:20.6616950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6617050Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6617140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6617180Z E          ...
2025-01-10T13:49:20.6617310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6617400Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6617480Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6617480Z 
2025-01-10T13:49:20.6617550Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6617750Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-01-10T13:49:20.6617750Z 
2025-01-10T13:49:20.6617920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11ba8bfb0>
2025-01-10T13:49:20.6618040Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>
2025-01-10T13:49:20.6618100Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6618110Z 
2025-01-10T13:49:20.6618210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6618300Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6618350Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6618400Z         try:
2025-01-10T13:49:20.6618510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6618570Z         except KeyError:
2025-01-10T13:49:20.6618670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6618710Z     
2025-01-10T13:49:20.6618780Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6618840Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6618900Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6619000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6619060Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6619120Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6619370Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6619370Z 
2025-01-10T13:49:20.6619460Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6619550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6619560Z 
2025-01-10T13:49:20.6619660Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6619720Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6619800Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6619860Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6619970Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6620020Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6620110Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6620170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6620220Z err_msg = None
2025-01-10T13:49:20.6620220Z 
2025-01-10T13:49:20.6620300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6620350Z         if err_msg is None:
2025-01-10T13:49:20.6620420Z             if left.shape != right.shape:
2025-01-10T13:49:20.6620480Z                 raise_assert_detail(
2025-01-10T13:49:20.6620590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6620630Z                 )
2025-01-10T13:49:20.6620680Z     
2025-01-10T13:49:20.6620730Z             diff = 0
2025-01-10T13:49:20.6620810Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6620870Z                 # count up differences
2025-01-10T13:49:20.6621010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6621050Z                     diff += 1
2025-01-10T13:49:20.6621100Z     
2025-01-10T13:49:20.6621160Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6621270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6621400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6621550Z E           AssertionError: Series are different
2025-01-10T13:49:20.6621600Z E           
2025-01-10T13:49:20.6621670Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6621980Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6622250Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6622530Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6622530Z 
2025-01-10T13:49:20.6622770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6622970Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-01-10T13:49:20.6622980Z 
2025-01-10T13:49:20.6623190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab00b0>
2025-01-10T13:49:20.6623310Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>
2025-01-10T13:49:20.6623370Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6623370Z 
2025-01-10T13:49:20.6623480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6623560Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6623620Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6623660Z         try:
2025-01-10T13:49:20.6623770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6623820Z         except KeyError:
2025-01-10T13:49:20.6630170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6630270Z     
2025-01-10T13:49:20.6630330Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6630410Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6630470Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6630590Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6630640Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6630710Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6630800Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6630800Z 
2025-01-10T13:49:20.6630890Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6630980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6630990Z 
2025-01-10T13:49:20.6631090Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6631150Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6631230Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6631290Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6631400Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6631460Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6631550Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6631600Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6631980Z err_msg = None
2025-01-10T13:49:20.6631980Z 
2025-01-10T13:49:20.6632080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6632130Z         if err_msg is None:
2025-01-10T13:49:20.6632190Z             if left.shape != right.shape:
2025-01-10T13:49:20.6632250Z                 raise_assert_detail(
2025-01-10T13:49:20.6632360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6632410Z                 )
2025-01-10T13:49:20.6632450Z     
2025-01-10T13:49:20.6632500Z             diff = 0
2025-01-10T13:49:20.6632580Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6632640Z                 # count up differences
2025-01-10T13:49:20.6632780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6632830Z                     diff += 1
2025-01-10T13:49:20.6632870Z     
2025-01-10T13:49:20.6632930Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6633040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6633170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6633250Z E           AssertionError: Series are different
2025-01-10T13:49:20.6633290Z E           
2025-01-10T13:49:20.6633370Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6633660Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6634220Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6634530Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6634530Z 
2025-01-10T13:49:20.6634780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6634940Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-01-10T13:49:20.6634940Z 
2025-01-10T13:49:20.6635050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6635150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6635220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6635320Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6635420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6635490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6635540Z err_msg = None
2025-01-10T13:49:20.6635550Z 
2025-01-10T13:49:20.6635630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6635680Z         if err_msg is None:
2025-01-10T13:49:20.6635750Z             if left.shape != right.shape:
2025-01-10T13:49:20.6635800Z                 raise_assert_detail(
2025-01-10T13:49:20.6635960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6636010Z                 )
2025-01-10T13:49:20.6636050Z     
2025-01-10T13:49:20.6636100Z             diff = 0
2025-01-10T13:49:20.6636190Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6636240Z                 # count up differences
2025-01-10T13:49:20.6636380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6636420Z                     diff += 1
2025-01-10T13:49:20.6636470Z     
2025-01-10T13:49:20.6636530Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6636630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6636770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6636860Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6636900Z E           
2025-01-10T13:49:20.6636990Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6637200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6637410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6637460Z 
2025-01-10T13:49:20.6637700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6637700Z 
2025-01-10T13:49:20.6637830Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6637840Z 
2025-01-10T13:49:20.6638000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab02f0>
2025-01-10T13:49:20.6638160Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>, attr = 'nu'
2025-01-10T13:49:20.6638160Z 
2025-01-10T13:49:20.6638260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6638350Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6638410Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6638450Z         try:
2025-01-10T13:49:20.6638560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6638610Z         except KeyError:
2025-01-10T13:49:20.6638720Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6638770Z     
2025-01-10T13:49:20.6638820Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6638890Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6638960Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6639060Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6639120Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6639190Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6639270Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6639270Z 
2025-01-10T13:49:20.6639370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6639450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6639570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6639620Z     ???
2025-01-10T13:49:20.6639700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6639710Z 
2025-01-10T13:49:20.6639750Z >   ???
2025-01-10T13:49:20.6639850Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6639890Z E   
2025-01-10T13:49:20.6640030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6640110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6640160Z E          ...
2025-01-10T13:49:20.6640220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6640320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6640400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6640450Z E          ...
2025-01-10T13:49:20.6640520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6640610Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6640690Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6640690Z 
2025-01-10T13:49:20.6640750Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6640930Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-01-10T13:49:20.6640930Z 
2025-01-10T13:49:20.6641030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6641140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6641210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6641310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6641410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6641500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6641570Z err_msg = None
2025-01-10T13:49:20.6641640Z 
2025-01-10T13:49:20.6641720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6641780Z         if err_msg is None:
2025-01-10T13:49:20.6641840Z             if left.shape != right.shape:
2025-01-10T13:49:20.6641910Z                 raise_assert_detail(
2025-01-10T13:49:20.6642020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6642070Z                 )
2025-01-10T13:49:20.6642110Z     
2025-01-10T13:49:20.6642160Z             diff = 0
2025-01-10T13:49:20.6642240Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6642300Z                 # count up differences
2025-01-10T13:49:20.6642430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6642480Z                     diff += 1
2025-01-10T13:49:20.6642530Z     
2025-01-10T13:49:20.6642590Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6642690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6642830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6642910Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6642960Z E           
2025-01-10T13:49:20.6643040Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6643250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6643460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6643470Z 
2025-01-10T13:49:20.6643710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6643710Z 
2025-01-10T13:49:20.6643890Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6643900Z 
2025-01-10T13:49:20.6644070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab03b0>
2025-01-10T13:49:20.6644190Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>
2025-01-10T13:49:20.6644240Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6644250Z 
2025-01-10T13:49:20.6644360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6644440Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6644500Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6644540Z         try:
2025-01-10T13:49:20.6644650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6644710Z         except KeyError:
2025-01-10T13:49:20.6644820Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6644860Z     
2025-01-10T13:49:20.6644920Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6644980Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6645050Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6645150Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6645210Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6645270Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6645350Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6645360Z 
2025-01-10T13:49:20.6645450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6645530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6645650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6645730Z     ???
2025-01-10T13:49:20.6645820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6645820Z 
2025-01-10T13:49:20.6645860Z >   ???
2025-01-10T13:49:20.6645960Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6646000Z E   
2025-01-10T13:49:20.6646090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6646180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6646230Z E          ...
2025-01-10T13:49:20.6646290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6646390Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6646480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6646520Z E          ...
2025-01-10T13:49:20.6646590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6646680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6646760Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6646760Z 
2025-01-10T13:49:20.6646820Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6646980Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-01-10T13:49:20.6646980Z 
2025-01-10T13:49:20.6647090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6647190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6647260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6647360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6647460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6647530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6647580Z err_msg = None
2025-01-10T13:49:20.6647590Z 
2025-01-10T13:49:20.6647660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6647720Z         if err_msg is None:
2025-01-10T13:49:20.6647780Z             if left.shape != right.shape:
2025-01-10T13:49:20.6647840Z                 raise_assert_detail(
2025-01-10T13:49:20.6648360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6648420Z                 )
2025-01-10T13:49:20.6648470Z     
2025-01-10T13:49:20.6648510Z             diff = 0
2025-01-10T13:49:20.6648600Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6648650Z                 # count up differences
2025-01-10T13:49:20.6648790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6648840Z                     diff += 1
2025-01-10T13:49:20.6648880Z     
2025-01-10T13:49:20.6648940Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6649050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6649180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6649260Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6649310Z E           
2025-01-10T13:49:20.6649390Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6649600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6649800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6650040Z 
2025-01-10T13:49:20.6650280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6650280Z 
2025-01-10T13:49:20.6650420Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6650420Z 
2025-01-10T13:49:20.6650580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab0470>
2025-01-10T13:49:20.6650740Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>, attr = 'f_lu'
2025-01-10T13:49:20.6650740Z 
2025-01-10T13:49:20.6650840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6650930Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6650990Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6651040Z         try:
2025-01-10T13:49:20.6651140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6651200Z         except KeyError:
2025-01-10T13:49:20.6651310Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6651350Z     
2025-01-10T13:49:20.6651410Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6651470Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6651540Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6651640Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6651700Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6651770Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6651850Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6651850Z 
2025-01-10T13:49:20.6651940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6652030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6652140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6652190Z     ???
2025-01-10T13:49:20.6652280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6652280Z 
2025-01-10T13:49:20.6652320Z >   ???
2025-01-10T13:49:20.6652410Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6652450Z E   
2025-01-10T13:49:20.6652600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6652680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6652730Z E          ...
2025-01-10T13:49:20.6652790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6652890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6652980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6653020Z E          ...
2025-01-10T13:49:20.6653080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6653180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6653260Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6653260Z 
2025-01-10T13:49:20.6653320Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6653500Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-01-10T13:49:20.6653500Z 
2025-01-10T13:49:20.6653610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6653710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6653790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6653890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6653990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6654060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6654110Z err_msg = None
2025-01-10T13:49:20.6654160Z 
2025-01-10T13:49:20.6654240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6654290Z         if err_msg is None:
2025-01-10T13:49:20.6654350Z             if left.shape != right.shape:
2025-01-10T13:49:20.6654410Z                 raise_assert_detail(
2025-01-10T13:49:20.6654520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6654570Z                 )
2025-01-10T13:49:20.6654610Z     
2025-01-10T13:49:20.6654660Z             diff = 0
2025-01-10T13:49:20.6654740Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6654800Z                 # count up differences
2025-01-10T13:49:20.6654930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6654980Z                     diff += 1
2025-01-10T13:49:20.6655020Z     
2025-01-10T13:49:20.6655080Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6655190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6655320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6655410Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6655450Z E           
2025-01-10T13:49:20.6655540Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6655770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6655990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6656000Z 
2025-01-10T13:49:20.6656240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6656240Z 
2025-01-10T13:49:20.6656450Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6656460Z 
2025-01-10T13:49:20.6656630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab0bf0>
2025-01-10T13:49:20.6656750Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>
2025-01-10T13:49:20.6656800Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6656810Z 
2025-01-10T13:49:20.6656910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6656990Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6657050Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6657090Z         try:
2025-01-10T13:49:20.6657200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6657250Z         except KeyError:
2025-01-10T13:49:20.6657360Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6657400Z     
2025-01-10T13:49:20.6657460Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6657530Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6657590Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6657690Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6657760Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6657820Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6657900Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6657950Z             else:
2025-01-10T13:49:20.6658010Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6658090Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6658100Z 
2025-01-10T13:49:20.6658180Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6658340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6658450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6658490Z     ???
2025-01-10T13:49:20.6658580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6658580Z 
2025-01-10T13:49:20.6658630Z >   ???
2025-01-10T13:49:20.6658730Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6658770Z E   
2025-01-10T13:49:20.6658870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6658950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6659000Z E          ...
2025-01-10T13:49:20.6659060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6659160Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6659240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6659290Z E          ...
2025-01-10T13:49:20.6659440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6659550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6659620Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6659630Z 
2025-01-10T13:49:20.6659690Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6659860Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-01-10T13:49:20.6659870Z 
2025-01-10T13:49:20.6659970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6660070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6660150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6660260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6660360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6660430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6660480Z err_msg = None
2025-01-10T13:49:20.6660480Z 
2025-01-10T13:49:20.6660620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6660680Z         if err_msg is None:
2025-01-10T13:49:20.6660740Z             if left.shape != right.shape:
2025-01-10T13:49:20.6660800Z                 raise_assert_detail(
2025-01-10T13:49:20.6660920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6660960Z                 )
2025-01-10T13:49:20.6661000Z     
2025-01-10T13:49:20.6661050Z             diff = 0
2025-01-10T13:49:20.6661130Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6661200Z                 # count up differences
2025-01-10T13:49:20.6661330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6661380Z                     diff += 1
2025-01-10T13:49:20.6661420Z     
2025-01-10T13:49:20.6661490Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6661610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6661750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6661830Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6661880Z E           
2025-01-10T13:49:20.6661960Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6662170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6662380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6662430Z 
2025-01-10T13:49:20.6662670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6662670Z 
2025-01-10T13:49:20.6662800Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6662810Z 
2025-01-10T13:49:20.6662970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab0cb0>
2025-01-10T13:49:20.6663090Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>
2025-01-10T13:49:20.6663140Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6663150Z 
2025-01-10T13:49:20.6663250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6663340Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6663390Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6663440Z         try:
2025-01-10T13:49:20.6663550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6663600Z         except KeyError:
2025-01-10T13:49:20.6663710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6663750Z     
2025-01-10T13:49:20.6663810Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6663880Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6663940Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6664040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6664100Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6664170Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6664250Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6664300Z             else:
2025-01-10T13:49:20.6664370Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6664450Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6664450Z 
2025-01-10T13:49:20.6664540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6664850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6664980Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6665030Z     ???
2025-01-10T13:49:20.6665110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6665110Z 
2025-01-10T13:49:20.6665160Z >   ???
2025-01-10T13:49:20.6665250Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6665290Z E   
2025-01-10T13:49:20.6665380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6665470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6665520Z E          ...
2025-01-10T13:49:20.6665590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6665680Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6665770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6665810Z E          ...
2025-01-10T13:49:20.6665880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6665980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6666050Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6666050Z 
2025-01-10T13:49:20.6666110Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6666270Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-01-10T13:49:20.6666270Z 
2025-01-10T13:49:20.6666380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6666480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6666770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6666870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6666970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6667040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6667090Z err_msg = None
2025-01-10T13:49:20.6667090Z 
2025-01-10T13:49:20.6667170Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6667220Z         if err_msg is None:
2025-01-10T13:49:20.6667290Z             if left.shape != right.shape:
2025-01-10T13:49:20.6667340Z                 raise_assert_detail(
2025-01-10T13:49:20.6667460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6667500Z                 )
2025-01-10T13:49:20.6667540Z     
2025-01-10T13:49:20.6667590Z             diff = 0
2025-01-10T13:49:20.6667670Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6667730Z                 # count up differences
2025-01-10T13:49:20.6667860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6667910Z                     diff += 1
2025-01-10T13:49:20.6667960Z     
2025-01-10T13:49:20.6668020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6668120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6668260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6668340Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6668380Z E           
2025-01-10T13:49:20.6668460Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6668670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6668930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6668930Z 
2025-01-10T13:49:20.6669170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6669170Z 
2025-01-10T13:49:20.6669300Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6669300Z 
2025-01-10T13:49:20.6669470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab0e30>
2025-01-10T13:49:20.6669630Z plasma = <tardis.plasma.base.BasePlasma object at 0x30c9e8380>, attr = 'j_blues'
2025-01-10T13:49:20.6669630Z 
2025-01-10T13:49:20.6669740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6669820Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6669880Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6669920Z         try:
2025-01-10T13:49:20.6670030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6670080Z         except KeyError:
2025-01-10T13:49:20.6670190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6670230Z     
2025-01-10T13:49:20.6670300Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6670360Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6670420Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6670520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6670580Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6670690Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6670780Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6670820Z             else:
2025-01-10T13:49:20.6670880Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6670970Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6670970Z 
2025-01-10T13:49:20.6671060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6671150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6671260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6671310Z     ???
2025-01-10T13:49:20.6671390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6671400Z 
2025-01-10T13:49:20.6671440Z >   ???
2025-01-10T13:49:20.6671530Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6671580Z E   
2025-01-10T13:49:20.6671670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6671760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6671800Z E          ...
2025-01-10T13:49:20.6671860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6672020Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6672100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6672150Z E          ...
2025-01-10T13:49:20.6672210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6672300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6672370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6672380Z 
2025-01-10T13:49:20.6672440Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6672600Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-01-10T13:49:20.6672600Z 
2025-01-10T13:49:20.6672700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6672810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6672880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6673040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6673140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6673210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6673260Z err_msg = None
2025-01-10T13:49:20.6673260Z 
2025-01-10T13:49:20.6673340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6673400Z         if err_msg is None:
2025-01-10T13:49:20.6673460Z             if left.shape != right.shape:
2025-01-10T13:49:20.6673520Z                 raise_assert_detail(
2025-01-10T13:49:20.6673630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6673680Z                 )
2025-01-10T13:49:20.6673720Z     
2025-01-10T13:49:20.6673780Z             diff = 0
2025-01-10T13:49:20.6673860Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6673920Z                 # count up differences
2025-01-10T13:49:20.6674050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6674100Z                     diff += 1
2025-01-10T13:49:20.6674140Z     
2025-01-10T13:49:20.6674200Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6674310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6674440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6674530Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6674570Z E           
2025-01-10T13:49:20.6674650Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6674910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6675160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6675170Z 
2025-01-10T13:49:20.6675440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6675440Z 
2025-01-10T13:49:20.6675570Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6675580Z 
2025-01-10T13:49:20.6675750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab1bb0>
2025-01-10T13:49:20.6682490Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>, attr = 'lines'
2025-01-10T13:49:20.6682520Z 
2025-01-10T13:49:20.6682690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6682780Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6682840Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6682890Z         try:
2025-01-10T13:49:20.6683000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6683060Z         except KeyError:
2025-01-10T13:49:20.6683170Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6683220Z     
2025-01-10T13:49:20.6683280Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6683350Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6683410Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6683520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6683580Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6683650Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6683970Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6684030Z             else:
2025-01-10T13:49:20.6684100Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6684190Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6684190Z 
2025-01-10T13:49:20.6684290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6684380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6684500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6684540Z     ???
2025-01-10T13:49:20.6684630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6684630Z 
2025-01-10T13:49:20.6684680Z >   ???
2025-01-10T13:49:20.6684780Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6684830Z E   
2025-01-10T13:49:20.6684930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6685020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6685080Z E          ...
2025-01-10T13:49:20.6685150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6685250Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6685340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6685380Z E          ...
2025-01-10T13:49:20.6685450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6685540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6685620Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6685630Z 
2025-01-10T13:49:20.6685690Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6685970Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-01-10T13:49:20.6685970Z 
2025-01-10T13:49:20.6686140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab1c70>
2025-01-10T13:49:20.6686270Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>
2025-01-10T13:49:20.6686340Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6686340Z 
2025-01-10T13:49:20.6686450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6686530Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6686590Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6686640Z         try:
2025-01-10T13:49:20.6686750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6686810Z         except KeyError:
2025-01-10T13:49:20.6686910Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6686960Z     
2025-01-10T13:49:20.6687020Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6687090Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6687150Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6687250Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6687320Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6687380Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6687460Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6687460Z 
2025-01-10T13:49:20.6687550Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6687650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6687650Z 
2025-01-10T13:49:20.6687760Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6687820Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6687900Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6687960Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6688070Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6688130Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6688410Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6688480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6688540Z err_msg = None
2025-01-10T13:49:20.6688540Z 
2025-01-10T13:49:20.6688620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6688680Z         if err_msg is None:
2025-01-10T13:49:20.6688740Z             if left.shape != right.shape:
2025-01-10T13:49:20.6688800Z                 raise_assert_detail(
2025-01-10T13:49:20.6688920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6688960Z                 )
2025-01-10T13:49:20.6689010Z     
2025-01-10T13:49:20.6689060Z             diff = 0
2025-01-10T13:49:20.6689140Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6689210Z                 # count up differences
2025-01-10T13:49:20.6689340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6689390Z                     diff += 1
2025-01-10T13:49:20.6689730Z     
2025-01-10T13:49:20.6689800Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6689920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6690050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6690130Z E           AssertionError: Series are different
2025-01-10T13:49:20.6690180Z E           
2025-01-10T13:49:20.6690250Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6690550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6691300Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6691570Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6691580Z 
2025-01-10T13:49:20.6873120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6873450Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-01-10T13:49:20.6873450Z 
2025-01-10T13:49:20.6873630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab1d30>
2025-01-10T13:49:20.6873760Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>
2025-01-10T13:49:20.6873830Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6873830Z 
2025-01-10T13:49:20.6873940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6874030Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6874080Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6874130Z         try:
2025-01-10T13:49:20.6874250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6874310Z         except KeyError:
2025-01-10T13:49:20.6874420Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6874460Z     
2025-01-10T13:49:20.6874520Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6874950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6875030Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6875130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6875200Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6875260Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6875350Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6875350Z 
2025-01-10T13:49:20.6875440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6875540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6875550Z 
2025-01-10T13:49:20.6875660Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6875720Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6875810Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6875860Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6875980Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6876040Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6876120Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6876180Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6876230Z err_msg = None
2025-01-10T13:49:20.6876230Z 
2025-01-10T13:49:20.6876310Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6876360Z         if err_msg is None:
2025-01-10T13:49:20.6876430Z             if left.shape != right.shape:
2025-01-10T13:49:20.6876480Z                 raise_assert_detail(
2025-01-10T13:49:20.6876730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6876780Z                 )
2025-01-10T13:49:20.6876820Z     
2025-01-10T13:49:20.6876870Z             diff = 0
2025-01-10T13:49:20.6876960Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6877020Z                 # count up differences
2025-01-10T13:49:20.6877160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6877210Z                     diff += 1
2025-01-10T13:49:20.6877250Z     
2025-01-10T13:49:20.6877310Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6877420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6877560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6877630Z E           AssertionError: Series are different
2025-01-10T13:49:20.6877680Z E           
2025-01-10T13:49:20.6877760Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6878070Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6878370Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6878730Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6878740Z 
2025-01-10T13:49:20.6878990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6879160Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-01-10T13:49:20.6879160Z 
2025-01-10T13:49:20.6879270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6879380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6879450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6879560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6879660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6879730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6879780Z err_msg = None
2025-01-10T13:49:20.6879780Z 
2025-01-10T13:49:20.6879870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6879920Z         if err_msg is None:
2025-01-10T13:49:20.6879990Z             if left.shape != right.shape:
2025-01-10T13:49:20.6880040Z                 raise_assert_detail(
2025-01-10T13:49:20.6880150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6880200Z                 )
2025-01-10T13:49:20.6880240Z     
2025-01-10T13:49:20.6880290Z             diff = 0
2025-01-10T13:49:20.6880370Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6880490Z                 # count up differences
2025-01-10T13:49:20.6880620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6880680Z                     diff += 1
2025-01-10T13:49:20.6880720Z     
2025-01-10T13:49:20.6880790Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6880890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6881020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6881110Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6881150Z E           
2025-01-10T13:49:20.6881240Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6881440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6881670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6881670Z 
2025-01-10T13:49:20.6881900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6881910Z 
2025-01-10T13:49:20.6882040Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6882040Z 
2025-01-10T13:49:20.6882210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab1f70>
2025-01-10T13:49:20.6882360Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>, attr = 'nu'
2025-01-10T13:49:20.6882370Z 
2025-01-10T13:49:20.6882480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6882560Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6882620Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6882660Z         try:
2025-01-10T13:49:20.6882820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6882880Z         except KeyError:
2025-01-10T13:49:20.6882990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6883030Z     
2025-01-10T13:49:20.6883090Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6883170Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6883220Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6883330Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6883390Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6883450Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6883540Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6883540Z 
2025-01-10T13:49:20.6883640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6883720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6883840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6883880Z     ???
2025-01-10T13:49:20.6883970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6883980Z 
2025-01-10T13:49:20.6884020Z >   ???
2025-01-10T13:49:20.6884110Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6884160Z E   
2025-01-10T13:49:20.6884250Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6884350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6884400Z E          ...
2025-01-10T13:49:20.6884470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6884610Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6884700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6884740Z E          ...
2025-01-10T13:49:20.6884810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6884900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6884980Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6884980Z 
2025-01-10T13:49:20.6885040Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6885230Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-01-10T13:49:20.6885230Z 
2025-01-10T13:49:20.6885330Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6885430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6885510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6885610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6885720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6885790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6885840Z err_msg = None
2025-01-10T13:49:20.6885840Z 
2025-01-10T13:49:20.6885920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6885980Z         if err_msg is None:
2025-01-10T13:49:20.6886050Z             if left.shape != right.shape:
2025-01-10T13:49:20.6886100Z                 raise_assert_detail(
2025-01-10T13:49:20.6886220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6886260Z                 )
2025-01-10T13:49:20.6886300Z     
2025-01-10T13:49:20.6886350Z             diff = 0
2025-01-10T13:49:20.6886430Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6886490Z                 # count up differences
2025-01-10T13:49:20.6886630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6886680Z                     diff += 1
2025-01-10T13:49:20.6886720Z     
2025-01-10T13:49:20.6887120Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6887240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6887370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6887450Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6887510Z E           
2025-01-10T13:49:20.6887590Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6887800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6888010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6888020Z 
2025-01-10T13:49:20.6888260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6888260Z 
2025-01-10T13:49:20.6888390Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6888400Z 
2025-01-10T13:49:20.6888560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab2030>
2025-01-10T13:49:20.6888690Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>
2025-01-10T13:49:20.6889000Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6889000Z 
2025-01-10T13:49:20.6889110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6889200Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6889250Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6889300Z         try:
2025-01-10T13:49:20.6889410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6889460Z         except KeyError:
2025-01-10T13:49:20.6889570Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6889610Z     
2025-01-10T13:49:20.6889660Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6889730Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6889790Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6889890Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6889950Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6890010Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6890100Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6890100Z 
2025-01-10T13:49:20.6890190Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6890290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6890390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6890440Z     ???
2025-01-10T13:49:20.6890520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6890520Z 
2025-01-10T13:49:20.6890570Z >   ???
2025-01-10T13:49:20.6890660Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6890700Z E   
2025-01-10T13:49:20.6890800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6890880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6890930Z E          ...
2025-01-10T13:49:20.6890990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6891100Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6891180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6891230Z E          ...
2025-01-10T13:49:20.6891340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6891440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6891510Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6891510Z 
2025-01-10T13:49:20.6891570Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6891730Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-01-10T13:49:20.6891730Z 
2025-01-10T13:49:20.6891830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6891940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6892010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6892120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6892210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6892290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6892340Z err_msg = None
2025-01-10T13:49:20.6892340Z 
2025-01-10T13:49:20.6892420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6892470Z         if err_msg is None:
2025-01-10T13:49:20.6892540Z             if left.shape != right.shape:
2025-01-10T13:49:20.6892600Z                 raise_assert_detail(
2025-01-10T13:49:20.6892710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6892750Z                 )
2025-01-10T13:49:20.6892800Z     
2025-01-10T13:49:20.6892840Z             diff = 0
2025-01-10T13:49:20.6892920Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6893030Z                 # count up differences
2025-01-10T13:49:20.6893160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6893220Z                     diff += 1
2025-01-10T13:49:20.6893260Z     
2025-01-10T13:49:20.6893330Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6893430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6893560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6893640Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6893690Z E           
2025-01-10T13:49:20.6893770Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6893980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6894200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6894200Z 
2025-01-10T13:49:20.6894430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6894440Z 
2025-01-10T13:49:20.6894570Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6894570Z 
2025-01-10T13:49:20.6894740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab20f0>
2025-01-10T13:49:20.6894890Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>, attr = 'f_lu'
2025-01-10T13:49:20.6894900Z 
2025-01-10T13:49:20.6895000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6895080Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6895150Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6895200Z         try:
2025-01-10T13:49:20.6895350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6895410Z         except KeyError:
2025-01-10T13:49:20.6895520Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6895560Z     
2025-01-10T13:49:20.6895620Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6895690Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6895740Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6895850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6895900Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6895960Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6896060Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6896060Z 
2025-01-10T13:49:20.6896150Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6896240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6896350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6896390Z     ???
2025-01-10T13:49:20.6896520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6896530Z 
2025-01-10T13:49:20.6896580Z >   ???
2025-01-10T13:49:20.6896670Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6896720Z E   
2025-01-10T13:49:20.6896810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6896900Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6896950Z E          ...
2025-01-10T13:49:20.6897010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6897220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6897300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6897350Z E          ...
2025-01-10T13:49:20.6897410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6897500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6897570Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6897580Z 
2025-01-10T13:49:20.6897640Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6897810Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-01-10T13:49:20.6897820Z 
2025-01-10T13:49:20.6897920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6898020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6898090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6898200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6898300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6898370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6898420Z err_msg = None
2025-01-10T13:49:20.6898420Z 
2025-01-10T13:49:20.6898510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6898560Z         if err_msg is None:
2025-01-10T13:49:20.6898630Z             if left.shape != right.shape:
2025-01-10T13:49:20.6898690Z                 raise_assert_detail(
2025-01-10T13:49:20.6898800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6898840Z                 )
2025-01-10T13:49:20.6898880Z     
2025-01-10T13:49:20.6898930Z             diff = 0
2025-01-10T13:49:20.6899010Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6899080Z                 # count up differences
2025-01-10T13:49:20.6899210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6899260Z                     diff += 1
2025-01-10T13:49:20.6899310Z     
2025-01-10T13:49:20.6899440Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6899550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6899690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6899770Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6899820Z E           
2025-01-10T13:49:20.6899900Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6900100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6900320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6900330Z 
2025-01-10T13:49:20.6900560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6900570Z 
2025-01-10T13:49:20.6900690Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6900700Z 
2025-01-10T13:49:20.6900860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab2870>
2025-01-10T13:49:20.6900980Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>
2025-01-10T13:49:20.6901070Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6901080Z 
2025-01-10T13:49:20.6901180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6901270Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6901320Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6901370Z         try:
2025-01-10T13:49:20.6901480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6901530Z         except KeyError:
2025-01-10T13:49:20.6901640Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6901680Z     
2025-01-10T13:49:20.6901740Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6901800Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6901870Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6901970Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6902030Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6902090Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6902170Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6902220Z             else:
2025-01-10T13:49:20.6902290Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6902360Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6902370Z 
2025-01-10T13:49:20.6902460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6902550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6902660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6902700Z     ???
2025-01-10T13:49:20.6902790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6902790Z 
2025-01-10T13:49:20.6902840Z >   ???
2025-01-10T13:49:20.6902930Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6902980Z E   
2025-01-10T13:49:20.6903070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6903160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6903200Z E          ...
2025-01-10T13:49:20.6903270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6903730Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6903830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6903880Z E          ...
2025-01-10T13:49:20.6903940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6904030Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6904100Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6904110Z 
2025-01-10T13:49:20.6904170Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6904350Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-01-10T13:49:20.6904350Z 
2025-01-10T13:49:20.6904450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6904560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6904630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6904740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6904840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6904910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6904960Z err_msg = None
2025-01-10T13:49:20.6904960Z 
2025-01-10T13:49:20.6905040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6905090Z         if err_msg is None:
2025-01-10T13:49:20.6905160Z             if left.shape != right.shape:
2025-01-10T13:49:20.6905210Z                 raise_assert_detail(
2025-01-10T13:49:20.6905320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6905620Z                 )
2025-01-10T13:49:20.6905660Z     
2025-01-10T13:49:20.6905710Z             diff = 0
2025-01-10T13:49:20.6905790Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6905850Z                 # count up differences
2025-01-10T13:49:20.6905990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6906040Z                     diff += 1
2025-01-10T13:49:20.6906090Z     
2025-01-10T13:49:20.6906150Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6906250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6906390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6906470Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6906520Z E           
2025-01-10T13:49:20.6906600Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6906810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6916470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6916490Z 
2025-01-10T13:49:20.6916770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6916780Z 
2025-01-10T13:49:20.6916910Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6916920Z 
2025-01-10T13:49:20.6917090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab2930>
2025-01-10T13:49:20.6917210Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>
2025-01-10T13:49:20.6917260Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6917260Z 
2025-01-10T13:49:20.6917550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6917640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6917700Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6917740Z         try:
2025-01-10T13:49:20.6917860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6917910Z         except KeyError:
2025-01-10T13:49:20.6918020Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6918060Z     
2025-01-10T13:49:20.6918120Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6918190Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6918250Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6918350Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6918420Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6918480Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6918570Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6918610Z             else:
2025-01-10T13:49:20.6918680Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6918760Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6918770Z 
2025-01-10T13:49:20.6918860Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6918950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6919060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6919100Z     ???
2025-01-10T13:49:20.6919190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6919250Z 
2025-01-10T13:49:20.6919300Z >   ???
2025-01-10T13:49:20.6919400Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6919440Z E   
2025-01-10T13:49:20.6919540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6919620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6919670Z E          ...
2025-01-10T13:49:20.6919730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6919830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6919910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6919960Z E          ...
2025-01-10T13:49:20.6920020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6920110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6920180Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6920190Z 
2025-01-10T13:49:20.6920250Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6920410Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-01-10T13:49:20.6920410Z 
2025-01-10T13:49:20.6920510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6920620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6920690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6920800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6920900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6920970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6921020Z err_msg = None
2025-01-10T13:49:20.6921020Z 
2025-01-10T13:49:20.6921100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6921150Z         if err_msg is None:
2025-01-10T13:49:20.6921220Z             if left.shape != right.shape:
2025-01-10T13:49:20.6921290Z                 raise_assert_detail(
2025-01-10T13:49:20.6921400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6921440Z                 )
2025-01-10T13:49:20.6921530Z     
2025-01-10T13:49:20.6921580Z             diff = 0
2025-01-10T13:49:20.6921660Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6921730Z                 # count up differences
2025-01-10T13:49:20.6921860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6921920Z                     diff += 1
2025-01-10T13:49:20.6921960Z     
2025-01-10T13:49:20.6922020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6922130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6922260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6922340Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6922390Z E           
2025-01-10T13:49:20.6922470Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6922680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6922890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6922900Z 
2025-01-10T13:49:20.6923140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6923190Z 
2025-01-10T13:49:20.6923320Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6923330Z 
2025-01-10T13:49:20.6923490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab2ab0>
2025-01-10T13:49:20.6923650Z plasma = <tardis.plasma.base.BasePlasma object at 0x11cf02ff0>, attr = 'j_blues'
2025-01-10T13:49:20.6923650Z 
2025-01-10T13:49:20.6923760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6923840Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6923900Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6923950Z         try:
2025-01-10T13:49:20.6924050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6924110Z         except KeyError:
2025-01-10T13:49:20.6924210Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6924260Z     
2025-01-10T13:49:20.6924320Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6924390Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6924450Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6924550Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6924610Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6924680Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6924760Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6924810Z             else:
2025-01-10T13:49:20.6924870Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6924950Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6924950Z 
2025-01-10T13:49:20.6925050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6925130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6925240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6925290Z     ???
2025-01-10T13:49:20.6925380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6925380Z 
2025-01-10T13:49:20.6925420Z >   ???
2025-01-10T13:49:20.6925570Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6925610Z E   
2025-01-10T13:49:20.6925720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6925800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6925850Z E          ...
2025-01-10T13:49:20.6925910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6926000Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6926090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6926130Z E          ...
2025-01-10T13:49:20.6926200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6926290Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6926370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6926370Z 
2025-01-10T13:49:20.6926440Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6926600Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-01-10T13:49:20.6926600Z 
2025-01-10T13:49:20.6926700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6926810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6926880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6926980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6927080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6927150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6927250Z err_msg = None
2025-01-10T13:49:20.6927250Z 
2025-01-10T13:49:20.6927330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6927380Z         if err_msg is None:
2025-01-10T13:49:20.6927440Z             if left.shape != right.shape:
2025-01-10T13:49:20.6927500Z                 raise_assert_detail(
2025-01-10T13:49:20.6927610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6927660Z                 )
2025-01-10T13:49:20.6927700Z     
2025-01-10T13:49:20.6927750Z             diff = 0
2025-01-10T13:49:20.6927830Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6927890Z                 # count up differences
2025-01-10T13:49:20.6928030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6928070Z                     diff += 1
2025-01-10T13:49:20.6928120Z     
2025-01-10T13:49:20.6928180Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6928290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6928420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6928500Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6928540Z E           
2025-01-10T13:49:20.6928630Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6928830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6929040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6929050Z 
2025-01-10T13:49:20.6929280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6929290Z 
2025-01-10T13:49:20.6929660Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6929670Z 
2025-01-10T13:49:20.6929840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab3830>
2025-01-10T13:49:20.6930000Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>, attr = 'lines'
2025-01-10T13:49:20.6930000Z 
2025-01-10T13:49:20.6930100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6930190Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6930240Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6930290Z         try:
2025-01-10T13:49:20.6930400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6930460Z         except KeyError:
2025-01-10T13:49:20.6930560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6930610Z     
2025-01-10T13:49:20.6930660Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6930730Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6930800Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6930900Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6930960Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6931020Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6931110Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6931150Z             else:
2025-01-10T13:49:20.6931220Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6931290Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6931300Z 
2025-01-10T13:49:20.6931390Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6931740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6931850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6931900Z     ???
2025-01-10T13:49:20.6931980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6931980Z 
2025-01-10T13:49:20.6932030Z >   ???
2025-01-10T13:49:20.6932120Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6932170Z E   
2025-01-10T13:49:20.6932260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6932350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6932390Z E          ...
2025-01-10T13:49:20.6932450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6932540Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6932630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6932680Z E          ...
2025-01-10T13:49:20.6932740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6932840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6932910Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6932910Z 
2025-01-10T13:49:20.6932980Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6933180Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-01-10T13:49:20.6933180Z 
2025-01-10T13:49:20.6933350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab38f0>
2025-01-10T13:49:20.6933470Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>
2025-01-10T13:49:20.6933530Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6933530Z 
2025-01-10T13:49:20.6933630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6933720Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6933780Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6933820Z         try:
2025-01-10T13:49:20.6933930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6933980Z         except KeyError:
2025-01-10T13:49:20.6934140Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6934180Z     
2025-01-10T13:49:20.6934250Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6934310Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6934370Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6934470Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6934530Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6934590Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6934670Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6934680Z 
2025-01-10T13:49:20.6934770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6934860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6934860Z 
2025-01-10T13:49:20.6934970Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6935020Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6935120Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6935170Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6935280Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6935330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6935420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6935470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.6935520Z err_msg = None
2025-01-10T13:49:20.6935520Z 
2025-01-10T13:49:20.6935600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6935700Z         if err_msg is None:
2025-01-10T13:49:20.6935770Z             if left.shape != right.shape:
2025-01-10T13:49:20.6935820Z                 raise_assert_detail(
2025-01-10T13:49:20.6935930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6935970Z                 )
2025-01-10T13:49:20.6936020Z     
2025-01-10T13:49:20.6936070Z             diff = 0
2025-01-10T13:49:20.6936150Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6936220Z                 # count up differences
2025-01-10T13:49:20.6936420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6936500Z                     diff += 1
2025-01-10T13:49:20.6936540Z     
2025-01-10T13:49:20.6936630Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6936760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6936920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6937030Z E           AssertionError: Series are different
2025-01-10T13:49:20.6937090Z E           
2025-01-10T13:49:20.6937180Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.6937520Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6937820Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6938310Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6938310Z 
2025-01-10T13:49:20.6938570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6938800Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-01-10T13:49:20.6938810Z 
2025-01-10T13:49:20.6938980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab39b0>
2025-01-10T13:49:20.6939120Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>
2025-01-10T13:49:20.6939190Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.6939190Z 
2025-01-10T13:49:20.6939310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6939400Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6939450Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6939510Z         try:
2025-01-10T13:49:20.6939610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6939670Z         except KeyError:
2025-01-10T13:49:20.6939770Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6939820Z     
2025-01-10T13:49:20.6939880Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6939950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6940010Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6940110Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6940190Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6940380Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6940460Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6940470Z 
2025-01-10T13:49:20.6940560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6940650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6940660Z 
2025-01-10T13:49:20.6940760Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6940820Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6940910Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6940960Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6941080Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.6941130Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.6941210Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.6941270Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.6941320Z err_msg = None
2025-01-10T13:49:20.6941320Z 
2025-01-10T13:49:20.6941400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6941460Z         if err_msg is None:
2025-01-10T13:49:20.6941530Z             if left.shape != right.shape:
2025-01-10T13:49:20.6941580Z                 raise_assert_detail(
2025-01-10T13:49:20.6941690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6941740Z                 )
2025-01-10T13:49:20.6941780Z     
2025-01-10T13:49:20.6941830Z             diff = 0
2025-01-10T13:49:20.6941910Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6941970Z                 # count up differences
2025-01-10T13:49:20.6942100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6942150Z                     diff += 1
2025-01-10T13:49:20.6942200Z     
2025-01-10T13:49:20.6942250Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6942360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6942490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6942610Z E           AssertionError: Series are different
2025-01-10T13:49:20.6942660Z E           
2025-01-10T13:49:20.6942740Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.6943040Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.6943340Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6943650Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.6943650Z 
2025-01-10T13:49:20.6943900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6944100Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-01-10T13:49:20.6944100Z 
2025-01-10T13:49:20.6944210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6944310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6944390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6944490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6944590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6944660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6944700Z err_msg = None
2025-01-10T13:49:20.6944710Z 
2025-01-10T13:49:20.6944790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6944850Z         if err_msg is None:
2025-01-10T13:49:20.6944910Z             if left.shape != right.shape:
2025-01-10T13:49:20.6944970Z                 raise_assert_detail(
2025-01-10T13:49:20.6945080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6945130Z                 )
2025-01-10T13:49:20.6945170Z     
2025-01-10T13:49:20.6945210Z             diff = 0
2025-01-10T13:49:20.6945300Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6945360Z                 # count up differences
2025-01-10T13:49:20.6945490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6945540Z                     diff += 1
2025-01-10T13:49:20.6945580Z     
2025-01-10T13:49:20.6945640Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6945740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6945880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6945960Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6946010Z E           
2025-01-10T13:49:20.6946090Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6946520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6946770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6946770Z 
2025-01-10T13:49:20.6947000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6947010Z 
2025-01-10T13:49:20.6947140Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6947140Z 
2025-01-10T13:49:20.6947310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab3bf0>
2025-01-10T13:49:20.6947460Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>, attr = 'nu'
2025-01-10T13:49:20.6947460Z 
2025-01-10T13:49:20.6947570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6947650Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6947710Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6947770Z         try:
2025-01-10T13:49:20.6947900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6947970Z         except KeyError:
2025-01-10T13:49:20.6948080Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6948120Z     
2025-01-10T13:49:20.6948180Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6948720Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6948780Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6948880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6948950Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6949010Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6949110Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6949110Z 
2025-01-10T13:49:20.6949210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6949300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6949420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6949470Z     ???
2025-01-10T13:49:20.6949560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6949570Z 
2025-01-10T13:49:20.6949620Z >   ???
2025-01-10T13:49:20.6949730Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6949770Z E   
2025-01-10T13:49:20.6949880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6949970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6950030Z E          ...
2025-01-10T13:49:20.6950090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6950180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6950280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6950330Z E          ...
2025-01-10T13:49:20.6950390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6950500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6950580Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6950580Z 
2025-01-10T13:49:20.6950650Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6950840Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-01-10T13:49:20.6950850Z 
2025-01-10T13:49:20.6950970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6951190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6951280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6951380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6951490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6951580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6951620Z err_msg = None
2025-01-10T13:49:20.6951630Z 
2025-01-10T13:49:20.6951720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6951780Z         if err_msg is None:
2025-01-10T13:49:20.6951840Z             if left.shape != right.shape:
2025-01-10T13:49:20.6951900Z                 raise_assert_detail(
2025-01-10T13:49:20.6952010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6952070Z                 )
2025-01-10T13:49:20.6952120Z     
2025-01-10T13:49:20.6952170Z             diff = 0
2025-01-10T13:49:20.6952250Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6952330Z                 # count up differences
2025-01-10T13:49:20.6952460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6952510Z                     diff += 1
2025-01-10T13:49:20.6952570Z     
2025-01-10T13:49:20.6952640Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6952740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6952890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6952970Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6953240Z E           
2025-01-10T13:49:20.6953320Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6953550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6953780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6953790Z 
2025-01-10T13:49:20.6954020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6954030Z 
2025-01-10T13:49:20.6954170Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6954180Z 
2025-01-10T13:49:20.6954340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab3cb0>
2025-01-10T13:49:20.6954470Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>
2025-01-10T13:49:20.6954520Z attr = 'wavelength_cm'
2025-01-10T13:49:20.6954520Z 
2025-01-10T13:49:20.6954640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6954730Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6954800Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6954850Z         try:
2025-01-10T13:49:20.6954960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6955020Z         except KeyError:
2025-01-10T13:49:20.6955130Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6955180Z     
2025-01-10T13:49:20.6955260Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6955330Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6955390Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6955490Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6955650Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6955730Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6955810Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6955810Z 
2025-01-10T13:49:20.6955920Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6956010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6956140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6956190Z     ???
2025-01-10T13:49:20.6956290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6956290Z 
2025-01-10T13:49:20.6956340Z >   ???
2025-01-10T13:49:20.6956440Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6956490Z E   
2025-01-10T13:49:20.6956600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6956680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6956740Z E          ...
2025-01-10T13:49:20.6956810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6956910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6957000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6957060Z E          ...
2025-01-10T13:49:20.6957120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6957220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6957310Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6957310Z 
2025-01-10T13:49:20.6957370Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6957620Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-01-10T13:49:20.6957630Z 
2025-01-10T13:49:20.6957730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6957830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6957920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6958020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6958130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6958210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6958260Z err_msg = None
2025-01-10T13:49:20.6958260Z 
2025-01-10T13:49:20.6958350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6958410Z         if err_msg is None:
2025-01-10T13:49:20.6958480Z             if left.shape != right.shape:
2025-01-10T13:49:20.6958560Z                 raise_assert_detail(
2025-01-10T13:49:20.6958680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6958720Z                 )
2025-01-10T13:49:20.6958780Z     
2025-01-10T13:49:20.6958830Z             diff = 0
2025-01-10T13:49:20.6958910Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6958970Z                 # count up differences
2025-01-10T13:49:20.6959120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6959170Z                     diff += 1
2025-01-10T13:49:20.6959210Z     
2025-01-10T13:49:20.6959290Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6959410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6959550Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6959650Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6959690Z E           
2025-01-10T13:49:20.6959770Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6960060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6960300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6960310Z 
2025-01-10T13:49:20.6960550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6960560Z 
2025-01-10T13:49:20.6960680Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6960680Z 
2025-01-10T13:49:20.6960870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bab3d70>
2025-01-10T13:49:20.6961030Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>, attr = 'f_lu'
2025-01-10T13:49:20.6961030Z 
2025-01-10T13:49:20.6961150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6961240Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6961290Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6961340Z         try:
2025-01-10T13:49:20.6961460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6961520Z         except KeyError:
2025-01-10T13:49:20.6961620Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6961680Z     
2025-01-10T13:49:20.6961810Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6961880Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6961940Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6962040Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6962110Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6962170Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6962260Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6962260Z 
2025-01-10T13:49:20.6962370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6962460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6962570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6962620Z     ???
2025-01-10T13:49:20.6962700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6962700Z 
2025-01-10T13:49:20.6962750Z >   ???
2025-01-10T13:49:20.6962840Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6962890Z E   
2025-01-10T13:49:20.6962980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6963070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6963130Z E          ...
2025-01-10T13:49:20.6963200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6970200Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6970340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6970390Z E          ...
2025-01-10T13:49:20.6970450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6970550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6970640Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6970640Z 
2025-01-10T13:49:20.6970710Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6970890Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-01-10T13:49:20.6970910Z 
2025-01-10T13:49:20.6971030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6971530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6971630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6971740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6971850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6971930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6971970Z err_msg = None
2025-01-10T13:49:20.6971980Z 
2025-01-10T13:49:20.6972080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6972130Z         if err_msg is None:
2025-01-10T13:49:20.6972200Z             if left.shape != right.shape:
2025-01-10T13:49:20.6972280Z                 raise_assert_detail(
2025-01-10T13:49:20.6972400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6972450Z                 )
2025-01-10T13:49:20.6972510Z     
2025-01-10T13:49:20.6972560Z             diff = 0
2025-01-10T13:49:20.6972640Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6972790Z                 # count up differences
2025-01-10T13:49:20.6972930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6972990Z                     diff += 1
2025-01-10T13:49:20.6973040Z     
2025-01-10T13:49:20.6973100Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6973210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6973350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6973440Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6973670Z E           
2025-01-10T13:49:20.6973760Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6973990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6974230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6974230Z 
2025-01-10T13:49:20.6974490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6974500Z 
2025-01-10T13:49:20.6974640Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6974640Z 
2025-01-10T13:49:20.6974810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badc530>
2025-01-10T13:49:20.6974940Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>
2025-01-10T13:49:20.6974990Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.6975000Z 
2025-01-10T13:49:20.6975100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6975200Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6975260Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6975310Z         try:
2025-01-10T13:49:20.6975410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6975470Z         except KeyError:
2025-01-10T13:49:20.6975570Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6975620Z     
2025-01-10T13:49:20.6975680Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6975750Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6975810Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6975910Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6976050Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6976130Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6976220Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6976260Z             else:
2025-01-10T13:49:20.6976330Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6976420Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6976420Z 
2025-01-10T13:49:20.6976520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6976610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6976720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6976790Z     ???
2025-01-10T13:49:20.6976880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6976880Z 
2025-01-10T13:49:20.6976930Z >   ???
2025-01-10T13:49:20.6977020Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6977070Z E   
2025-01-10T13:49:20.6977160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6977260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6977310Z E          ...
2025-01-10T13:49:20.6977380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6977490Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6977580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6977620Z E          ...
2025-01-10T13:49:20.6977700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6977800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6977950Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6977950Z 
2025-01-10T13:49:20.6978020Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6978190Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-01-10T13:49:20.6978200Z 
2025-01-10T13:49:20.6978300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6978400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6978480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6978590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6978700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6978760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6978820Z err_msg = None
2025-01-10T13:49:20.6978820Z 
2025-01-10T13:49:20.6978910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6978970Z         if err_msg is None:
2025-01-10T13:49:20.6979040Z             if left.shape != right.shape:
2025-01-10T13:49:20.6979100Z                 raise_assert_detail(
2025-01-10T13:49:20.6979210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6979250Z                 )
2025-01-10T13:49:20.6979300Z     
2025-01-10T13:49:20.6979340Z             diff = 0
2025-01-10T13:49:20.6979430Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6979490Z                 # count up differences
2025-01-10T13:49:20.6979620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6979670Z                     diff += 1
2025-01-10T13:49:20.6979710Z     
2025-01-10T13:49:20.6979770Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6979900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6980040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6980130Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6980270Z E           
2025-01-10T13:49:20.6980360Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6980580Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6980810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6980830Z 
2025-01-10T13:49:20.6981080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6981090Z 
2025-01-10T13:49:20.6981220Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6981220Z 
2025-01-10T13:49:20.6981390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badc5f0>
2025-01-10T13:49:20.6981510Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>
2025-01-10T13:49:20.6981560Z attr = 'beta_sobolev'
2025-01-10T13:49:20.6981570Z 
2025-01-10T13:49:20.6981670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6981750Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6981810Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6981850Z         try:
2025-01-10T13:49:20.6981960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6982130Z         except KeyError:
2025-01-10T13:49:20.6982230Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6982280Z     
2025-01-10T13:49:20.6982330Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6982400Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6982460Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6982560Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6982620Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6982690Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6982770Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6982830Z             else:
2025-01-10T13:49:20.6982900Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6982970Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6982980Z 
2025-01-10T13:49:20.6983090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6983180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6983290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6983340Z     ???
2025-01-10T13:49:20.6983430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6983430Z 
2025-01-10T13:49:20.6983470Z >   ???
2025-01-10T13:49:20.6983570Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6983620Z E   
2025-01-10T13:49:20.6983710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6983790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6983830Z E          ...
2025-01-10T13:49:20.6983900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6983990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6984080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6984130Z E          ...
2025-01-10T13:49:20.6984190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6984280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6984430Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6984430Z 
2025-01-10T13:49:20.6984490Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6984680Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-01-10T13:49:20.6984680Z 
2025-01-10T13:49:20.6984800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6984910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6984980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6985080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6985200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6985280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6985340Z err_msg = None
2025-01-10T13:49:20.6985350Z 
2025-01-10T13:49:20.6985430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6985490Z         if err_msg is None:
2025-01-10T13:49:20.6985550Z             if left.shape != right.shape:
2025-01-10T13:49:20.6985610Z                 raise_assert_detail(
2025-01-10T13:49:20.6985740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6985790Z                 )
2025-01-10T13:49:20.6985840Z     
2025-01-10T13:49:20.6985880Z             diff = 0
2025-01-10T13:49:20.6985980Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6986040Z                 # count up differences
2025-01-10T13:49:20.6986170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6986290Z                     diff += 1
2025-01-10T13:49:20.6986330Z     
2025-01-10T13:49:20.6986390Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6986510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6986650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6986740Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6986790Z E           
2025-01-10T13:49:20.6986880Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6987090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6987310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6987310Z 
2025-01-10T13:49:20.6987550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6987550Z 
2025-01-10T13:49:20.6987680Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6987680Z 
2025-01-10T13:49:20.6987850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badc770>
2025-01-10T13:49:20.6988000Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e230650>, attr = 'j_blues'
2025-01-10T13:49:20.6988010Z 
2025-01-10T13:49:20.6988110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6988190Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6988250Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6988300Z         try:
2025-01-10T13:49:20.6988410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6988460Z         except KeyError:
2025-01-10T13:49:20.6988900Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6988980Z     
2025-01-10T13:49:20.6989050Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6989110Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6989180Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6989280Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6989340Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6989400Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6989480Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6989530Z             else:
2025-01-10T13:49:20.6989600Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6989690Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6989700Z 
2025-01-10T13:49:20.6989800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6989880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6990000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6990050Z     ???
2025-01-10T13:49:20.6990130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6990130Z 
2025-01-10T13:49:20.6990180Z >   ???
2025-01-10T13:49:20.6990270Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6990320Z E   
2025-01-10T13:49:20.6990410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6990500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6990540Z E          ...
2025-01-10T13:49:20.6990820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6990920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6991000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6991050Z E          ...
2025-01-10T13:49:20.6991120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6991220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6991290Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6991290Z 
2025-01-10T13:49:20.6991360Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6991570Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-01-10T13:49:20.6991570Z 
2025-01-10T13:49:20.6991670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6991780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6991850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6991950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.6992050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.6992130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.6992170Z err_msg = None
2025-01-10T13:49:20.6992180Z 
2025-01-10T13:49:20.6992250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.6992310Z         if err_msg is None:
2025-01-10T13:49:20.6992370Z             if left.shape != right.shape:
2025-01-10T13:49:20.6992440Z                 raise_assert_detail(
2025-01-10T13:49:20.6992540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.6992590Z                 )
2025-01-10T13:49:20.6992630Z     
2025-01-10T13:49:20.6992680Z             diff = 0
2025-01-10T13:49:20.6992760Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.6992830Z                 # count up differences
2025-01-10T13:49:20.6992950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.6993060Z                     diff += 1
2025-01-10T13:49:20.6993200Z     
2025-01-10T13:49:20.6993260Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.6993360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.6993490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.6993580Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.6993620Z E           
2025-01-10T13:49:20.6993700Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.6993910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6994130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.6994130Z 
2025-01-10T13:49:20.6994370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.6994370Z 
2025-01-10T13:49:20.6994500Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.6994500Z 
2025-01-10T13:49:20.6994670Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badd4f0>
2025-01-10T13:49:20.6994820Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>, attr = 'lines'
2025-01-10T13:49:20.6994870Z 
2025-01-10T13:49:20.6994990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6995070Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6995130Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6995170Z         try:
2025-01-10T13:49:20.6995280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6995330Z         except KeyError:
2025-01-10T13:49:20.6995440Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6995480Z     
2025-01-10T13:49:20.6995530Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6995610Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6995670Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6995770Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6995830Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6995900Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6995980Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6996030Z             else:
2025-01-10T13:49:20.6996090Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.6996170Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.6996170Z 
2025-01-10T13:49:20.6996270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.6996360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6996470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.6996510Z     ???
2025-01-10T13:49:20.6996600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6996600Z 
2025-01-10T13:49:20.6996640Z >   ???
2025-01-10T13:49:20.6996730Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.6996780Z E   
2025-01-10T13:49:20.6996880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.6996990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6997030Z E          ...
2025-01-10T13:49:20.6997100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6997240Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6997330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.6997380Z E          ...
2025-01-10T13:49:20.6997450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.6997550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.6997640Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.6997640Z 
2025-01-10T13:49:20.6997700Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.6997960Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-01-10T13:49:20.6997970Z 
2025-01-10T13:49:20.6998170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badd5b0>
2025-01-10T13:49:20.6998290Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.6998350Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.6998360Z 
2025-01-10T13:49:20.6998460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.6998550Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.6998600Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.6998650Z         try:
2025-01-10T13:49:20.6998750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.6998810Z         except KeyError:
2025-01-10T13:49:20.6998930Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.6998980Z     
2025-01-10T13:49:20.6999040Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.6999100Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.6999170Z             if attr == "selected_atoms":
2025-01-10T13:49:20.6999350Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.6999410Z             elif actual.ndim == 1:
2025-01-10T13:49:20.6999470Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.6999560Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.6999560Z 
2025-01-10T13:49:20.6999650Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.6999730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.6999740Z 
2025-01-10T13:49:20.6999840Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.6999900Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.6999990Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7000050Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7000160Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7000210Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7000300Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7000350Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7000420Z err_msg = None
2025-01-10T13:49:20.7000420Z 
2025-01-10T13:49:20.7000500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7000560Z         if err_msg is None:
2025-01-10T13:49:20.7000620Z             if left.shape != right.shape:
2025-01-10T13:49:20.7000680Z                 raise_assert_detail(
2025-01-10T13:49:20.7000790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7000840Z                 )
2025-01-10T13:49:20.7000890Z     
2025-01-10T13:49:20.7000930Z             diff = 0
2025-01-10T13:49:20.7001020Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7001080Z                 # count up differences
2025-01-10T13:49:20.7001220Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7001270Z                     diff += 1
2025-01-10T13:49:20.7001310Z     
2025-01-10T13:49:20.7001370Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7001540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7001670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7001750Z E           AssertionError: Series are different
2025-01-10T13:49:20.7001800Z E           
2025-01-10T13:49:20.7001880Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7002210Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7002490Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7002760Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7002760Z 
2025-01-10T13:49:20.7003000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7003300Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-01-10T13:49:20.7003310Z 
2025-01-10T13:49:20.7003480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badd670>
2025-01-10T13:49:20.7003600Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.7003670Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7003670Z 
2025-01-10T13:49:20.7003780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7003860Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7003920Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7003960Z         try:
2025-01-10T13:49:20.7004070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7004130Z         except KeyError:
2025-01-10T13:49:20.7004230Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7004280Z     
2025-01-10T13:49:20.7004340Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7004410Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7004470Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7004570Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7004640Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7004700Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7004780Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7004790Z 
2025-01-10T13:49:20.7004880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7004960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7004970Z 
2025-01-10T13:49:20.7005080Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7005130Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7005220Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7005280Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7005610Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7005670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7005760Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7005820Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7005860Z err_msg = None
2025-01-10T13:49:20.7005870Z 
2025-01-10T13:49:20.7005950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7006000Z         if err_msg is None:
2025-01-10T13:49:20.7006060Z             if left.shape != right.shape:
2025-01-10T13:49:20.7006120Z                 raise_assert_detail(
2025-01-10T13:49:20.7006230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7006290Z                 )
2025-01-10T13:49:20.7006340Z     
2025-01-10T13:49:20.7006380Z             diff = 0
2025-01-10T13:49:20.7006470Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7006530Z                 # count up differences
2025-01-10T13:49:20.7006670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7006720Z                     diff += 1
2025-01-10T13:49:20.7006760Z     
2025-01-10T13:49:20.7006820Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7006920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7007060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7007130Z E           AssertionError: Series are different
2025-01-10T13:49:20.7007180Z E           
2025-01-10T13:49:20.7007250Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7007560Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7008050Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7008350Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7008370Z 
2025-01-10T13:49:20.7008610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7008820Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-01-10T13:49:20.7008820Z 
2025-01-10T13:49:20.7008930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7009040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7009110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7009220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7009330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7009400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7009450Z err_msg = None
2025-01-10T13:49:20.7009500Z 
2025-01-10T13:49:20.7009580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7009640Z         if err_msg is None:
2025-01-10T13:49:20.7009710Z             if left.shape != right.shape:
2025-01-10T13:49:20.7009770Z                 raise_assert_detail(
2025-01-10T13:49:20.7009890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7009930Z                 )
2025-01-10T13:49:20.7009980Z     
2025-01-10T13:49:20.7010030Z             diff = 0
2025-01-10T13:49:20.7010110Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7010170Z                 # count up differences
2025-01-10T13:49:20.7010310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7010360Z                     diff += 1
2025-01-10T13:49:20.7010400Z     
2025-01-10T13:49:20.7010460Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7010580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7010720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7010800Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7010840Z E           
2025-01-10T13:49:20.7010940Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7011150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7011420Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7011420Z 
2025-01-10T13:49:20.7011680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7011690Z 
2025-01-10T13:49:20.7011830Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7011830Z 
2025-01-10T13:49:20.7011990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badd8b0>
2025-01-10T13:49:20.7012150Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>, attr = 'nu'
2025-01-10T13:49:20.7012150Z 
2025-01-10T13:49:20.7012280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7012380Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7012440Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7012480Z         try:
2025-01-10T13:49:20.7012760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7012930Z         except KeyError:
2025-01-10T13:49:20.7013200Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7013250Z     
2025-01-10T13:49:20.7033780Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7033990Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7034060Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7034190Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7034270Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7034370Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7034460Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7034510Z 
2025-01-10T13:49:20.7034630Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7034740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7034860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7034920Z     ???
2025-01-10T13:49:20.7035300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7035310Z 
2025-01-10T13:49:20.7035370Z >   ???
2025-01-10T13:49:20.7035490Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7035550Z E   
2025-01-10T13:49:20.7035640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7035740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7035810Z E          ...
2025-01-10T13:49:20.7035910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7036030Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7036120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7036160Z E          ...
2025-01-10T13:49:20.7036230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7036330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7036400Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7036410Z 
2025-01-10T13:49:20.7036470Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7036700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-01-10T13:49:20.7036710Z 
2025-01-10T13:49:20.7036840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7036960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7037050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7037180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7037430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7037530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7037580Z err_msg = None
2025-01-10T13:49:20.7037580Z 
2025-01-10T13:49:20.7037680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7037740Z         if err_msg is None:
2025-01-10T13:49:20.7037840Z             if left.shape != right.shape:
2025-01-10T13:49:20.7037900Z                 raise_assert_detail(
2025-01-10T13:49:20.7038040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7038090Z                 )
2025-01-10T13:49:20.7038150Z     
2025-01-10T13:49:20.7038200Z             diff = 0
2025-01-10T13:49:20.7038290Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7038380Z                 # count up differences
2025-01-10T13:49:20.7038540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7038620Z                     diff += 1
2025-01-10T13:49:20.7038670Z     
2025-01-10T13:49:20.7038750Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7038870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7039020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7039120Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7039180Z E           
2025-01-10T13:49:20.7039270Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7039510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7039880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7039890Z 
2025-01-10T13:49:20.7040160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7040170Z 
2025-01-10T13:49:20.7040320Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7040330Z 
2025-01-10T13:49:20.7040510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badd970>
2025-01-10T13:49:20.7040650Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.7040720Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7040730Z 
2025-01-10T13:49:20.7040830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7040930Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7040990Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7041040Z         try:
2025-01-10T13:49:20.7041170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7041240Z         except KeyError:
2025-01-10T13:49:20.7041340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7041390Z     
2025-01-10T13:49:20.7041460Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7041550Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7041620Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7041740Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7041800Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7041860Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7041950Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7042030Z 
2025-01-10T13:49:20.7042130Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7042250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7042390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7042450Z     ???
2025-01-10T13:49:20.7042540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7042550Z 
2025-01-10T13:49:20.7042590Z >   ???
2025-01-10T13:49:20.7042700Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7042750Z E   
2025-01-10T13:49:20.7042850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7042930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7042970Z E          ...
2025-01-10T13:49:20.7043040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7043170Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7043260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7043320Z E          ...
2025-01-10T13:49:20.7043410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7043550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7043630Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7043640Z 
2025-01-10T13:49:20.7043710Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7043950Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-01-10T13:49:20.7043950Z 
2025-01-10T13:49:20.7044080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7044210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7044290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7044430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7044540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7044640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7045050Z err_msg = None
2025-01-10T13:49:20.7045070Z 
2025-01-10T13:49:20.7045160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7045230Z         if err_msg is None:
2025-01-10T13:49:20.7045320Z             if left.shape != right.shape:
2025-01-10T13:49:20.7045410Z                 raise_assert_detail(
2025-01-10T13:49:20.7045540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7045600Z                 )
2025-01-10T13:49:20.7045650Z     
2025-01-10T13:49:20.7045710Z             diff = 0
2025-01-10T13:49:20.7045820Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7045900Z                 # count up differences
2025-01-10T13:49:20.7046070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7046140Z                     diff += 1
2025-01-10T13:49:20.7046190Z     
2025-01-10T13:49:20.7046250Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7046380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7046560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7046670Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7046720Z E           
2025-01-10T13:49:20.7046810Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7047040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7047610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7047610Z 
2025-01-10T13:49:20.7047880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7047890Z 
2025-01-10T13:49:20.7048020Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7048020Z 
2025-01-10T13:49:20.7048210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badda30>
2025-01-10T13:49:20.7048380Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>, attr = 'f_lu'
2025-01-10T13:49:20.7048390Z 
2025-01-10T13:49:20.7048520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7048610Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7048670Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7048730Z         try:
2025-01-10T13:49:20.7048860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7048920Z         except KeyError:
2025-01-10T13:49:20.7049030Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7049090Z     
2025-01-10T13:49:20.7049150Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7049230Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7049300Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7049420Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7049480Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7049540Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7049640Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7049650Z 
2025-01-10T13:49:20.7049750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7049850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7050080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7050160Z     ???
2025-01-10T13:49:20.7050260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7050260Z 
2025-01-10T13:49:20.7050300Z >   ???
2025-01-10T13:49:20.7050410Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7050460Z E   
2025-01-10T13:49:20.7050550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7050650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7050690Z E          ...
2025-01-10T13:49:20.7050780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7050900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7051000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7051050Z E          ...
2025-01-10T13:49:20.7051130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7051240Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7051320Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7051320Z 
2025-01-10T13:49:20.7051390Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7051640Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-01-10T13:49:20.7051650Z 
2025-01-10T13:49:20.7051810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bade030>
2025-01-10T13:49:20.7051930Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.7052000Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:20.7052000Z 
2025-01-10T13:49:20.7052190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7052290Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7052360Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7052410Z         try:
2025-01-10T13:49:20.7052530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7052580Z         except KeyError:
2025-01-10T13:49:20.7052690Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7052730Z     
2025-01-10T13:49:20.7052790Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7052860Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7052920Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7053160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7053220Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7053290Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7053370Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7053420Z             else:
2025-01-10T13:49:20.7053490Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7053570Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7053570Z 
2025-01-10T13:49:20.7053660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7053750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7053860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7053910Z     ???
2025-01-10T13:49:20.7053990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7053990Z 
2025-01-10T13:49:20.7054040Z >   ???
2025-01-10T13:49:20.7054180Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.7054220Z E   
2025-01-10T13:49:20.7054360Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-10T13:49:20.7054770Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7058260Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-01-10T13:49:20.7061820Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T13:49:20.7061980Z E   At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T13:49:20.7061980Z 
2025-01-10T13:49:20.7062040Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7062280Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-01-10T13:49:20.7062330Z 
2025-01-10T13:49:20.7062440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7062560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7062630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7062730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7062840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7062910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7062960Z err_msg = None
2025-01-10T13:49:20.7062970Z 
2025-01-10T13:49:20.7063040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7063100Z         if err_msg is None:
2025-01-10T13:49:20.7063160Z             if left.shape != right.shape:
2025-01-10T13:49:20.7063230Z                 raise_assert_detail(
2025-01-10T13:49:20.7063330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7063380Z                 )
2025-01-10T13:49:20.7063430Z     
2025-01-10T13:49:20.7063470Z             diff = 0
2025-01-10T13:49:20.7063550Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7063620Z                 # count up differences
2025-01-10T13:49:20.7063760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7063820Z                     diff += 1
2025-01-10T13:49:20.7063860Z     
2025-01-10T13:49:20.7063920Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7064090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7064230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7064330Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7064380Z E           
2025-01-10T13:49:20.7064470Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7064700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7064920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7064930Z 
2025-01-10T13:49:20.7065190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7065190Z 
2025-01-10T13:49:20.7065330Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7065330Z 
2025-01-10T13:49:20.7065510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bade0f0>
2025-01-10T13:49:20.7065640Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.7065700Z attr = 'previous_beta_sobolev'
2025-01-10T13:49:20.7065710Z 
2025-01-10T13:49:20.7065820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7065910Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7065970Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7066020Z         try:
2025-01-10T13:49:20.7066130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7066190Z         except KeyError:
2025-01-10T13:49:20.7066310Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7066350Z     
2025-01-10T13:49:20.7066420Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7066790Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7066890Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7067000Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7067060Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7067120Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7067210Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7067260Z             else:
2025-01-10T13:49:20.7067330Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7067420Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7067420Z 
2025-01-10T13:49:20.7067520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7067620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7067740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7067790Z     ???
2025-01-10T13:49:20.7067880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7067890Z 
2025-01-10T13:49:20.7067940Z >   ???
2025-01-10T13:49:20.7068040Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7068080Z E   
2025-01-10T13:49:20.7068190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7068280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7068330Z E          ...
2025-01-10T13:49:20.7068400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7068500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7068580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7068940Z E          ...
2025-01-10T13:49:20.7069010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7069110Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7069190Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7069190Z 
2025-01-10T13:49:20.7069250Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7069500Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-01-10T13:49:20.7069500Z 
2025-01-10T13:49:20.7069620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7069750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7069850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7069960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7070070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7070160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7070220Z err_msg = None
2025-01-10T13:49:20.7070230Z 
2025-01-10T13:49:20.7070330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7070410Z         if err_msg is None:
2025-01-10T13:49:20.7070500Z             if left.shape != right.shape:
2025-01-10T13:49:20.7070580Z                 raise_assert_detail(
2025-01-10T13:49:20.7070710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7070760Z                 )
2025-01-10T13:49:20.7070800Z     
2025-01-10T13:49:20.7070850Z             diff = 0
2025-01-10T13:49:20.7070930Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7070990Z                 # count up differences
2025-01-10T13:49:20.7071130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7071190Z                     diff += 1
2025-01-10T13:49:20.7071250Z     
2025-01-10T13:49:20.7071320Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7071560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7071720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7071830Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7071890Z E           
2025-01-10T13:49:20.7072000Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7072250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7072520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7072530Z 
2025-01-10T13:49:20.7072840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7072850Z 
2025-01-10T13:49:20.7073000Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7073000Z 
2025-01-10T13:49:20.7073210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bade1b0>
2025-01-10T13:49:20.7073480Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.7073550Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7073550Z 
2025-01-10T13:49:20.7073670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7073880Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7073950Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7073990Z         try:
2025-01-10T13:49:20.7074110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7074180Z         except KeyError:
2025-01-10T13:49:20.7074290Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7074350Z     
2025-01-10T13:49:20.7074420Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7074520Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7074590Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7074690Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7074750Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7074810Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7074890Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7074940Z             else:
2025-01-10T13:49:20.7075010Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7075110Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7075120Z 
2025-01-10T13:49:20.7075220Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7075330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7075460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7075520Z     ???
2025-01-10T13:49:20.7075610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7075610Z 
2025-01-10T13:49:20.7075670Z >   ???
2025-01-10T13:49:20.7075780Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7075840Z E   
2025-01-10T13:49:20.7075950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7076050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7076130Z E          ...
2025-01-10T13:49:20.7076200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7076320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7076420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7076610Z E          ...
2025-01-10T13:49:20.7076710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7076830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7076920Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7076930Z 
2025-01-10T13:49:20.7076990Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7077220Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-01-10T13:49:20.7077230Z 
2025-01-10T13:49:20.7077350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7077460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7077550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7077670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7077790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7077880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7077930Z err_msg = None
2025-01-10T13:49:20.7077930Z 
2025-01-10T13:49:20.7078030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7078090Z         if err_msg is None:
2025-01-10T13:49:20.7078160Z             if left.shape != right.shape:
2025-01-10T13:49:20.7078230Z                 raise_assert_detail(
2025-01-10T13:49:20.7078360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7078410Z                 )
2025-01-10T13:49:20.7078560Z     
2025-01-10T13:49:20.7078630Z             diff = 0
2025-01-10T13:49:20.7078720Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7078810Z                 # count up differences
2025-01-10T13:49:20.7078950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7079020Z                     diff += 1
2025-01-10T13:49:20.7079070Z     
2025-01-10T13:49:20.7079150Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7079270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7079440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7079530Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7079590Z E           
2025-01-10T13:49:20.7079680Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7079930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7080150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7080150Z 
2025-01-10T13:49:20.7080420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7080430Z 
2025-01-10T13:49:20.7080580Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7080590Z 
2025-01-10T13:49:20.7080780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bade270>
2025-01-10T13:49:20.7080930Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>
2025-01-10T13:49:20.7081010Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7081010Z 
2025-01-10T13:49:20.7081130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7081340Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7081420Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7081490Z         try:
2025-01-10T13:49:20.7081620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7081700Z         except KeyError:
2025-01-10T13:49:20.7081830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7081890Z     
2025-01-10T13:49:20.7081960Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7082040Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7082130Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7082240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7082310Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7082370Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7082460Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7082530Z             else:
2025-01-10T13:49:20.7082610Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7082710Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7082710Z 
2025-01-10T13:49:20.7082800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7082890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7083000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7083050Z     ???
2025-01-10T13:49:20.7083130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7083140Z 
2025-01-10T13:49:20.7083210Z >   ???
2025-01-10T13:49:20.7083330Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7083470Z E   
2025-01-10T13:49:20.7083590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7083690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7083750Z E          ...
2025-01-10T13:49:20.7083840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7083940Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7084040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7084100Z E          ...
2025-01-10T13:49:20.7084180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7084300Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7084380Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7084390Z 
2025-01-10T13:49:20.7084470Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7084700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-01-10T13:49:20.7084710Z 
2025-01-10T13:49:20.7084830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7084950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7085040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7085160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7085290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7085380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7085440Z err_msg = None
2025-01-10T13:49:20.7085450Z 
2025-01-10T13:49:20.7085530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7085580Z         if err_msg is None:
2025-01-10T13:49:20.7085660Z             if left.shape != right.shape:
2025-01-10T13:49:20.7085730Z                 raise_assert_detail(
2025-01-10T13:49:20.7085860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7085910Z                 )
2025-01-10T13:49:20.7085970Z     
2025-01-10T13:49:20.7086030Z             diff = 0
2025-01-10T13:49:20.7086590Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7086690Z                 # count up differences
2025-01-10T13:49:20.7086840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7086900Z                     diff += 1
2025-01-10T13:49:20.7086950Z     
2025-01-10T13:49:20.7087020Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7087140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7087300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7087390Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7087440Z E           
2025-01-10T13:49:20.7087520Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7087770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7088020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7088020Z 
2025-01-10T13:49:20.7088280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7088520Z 
2025-01-10T13:49:20.7088690Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7088690Z 
2025-01-10T13:49:20.7088890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bade3f0>
2025-01-10T13:49:20.7089070Z plasma = <tardis.plasma.base.BasePlasma object at 0x30edf1f40>, attr = 'j_blues'
2025-01-10T13:49:20.7089080Z 
2025-01-10T13:49:20.7089210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7089290Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7089520Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7089570Z         try:
2025-01-10T13:49:20.7089790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7090300Z         except KeyError:
2025-01-10T13:49:20.7090550Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7090610Z     
2025-01-10T13:49:20.7090800Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7091010Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7091180Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7091410Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7091480Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7091650Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7091840Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7091980Z             else:
2025-01-10T13:49:20.7092170Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7092270Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7092270Z 
2025-01-10T13:49:20.7092410Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7092580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7092820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7092880Z     ???
2025-01-10T13:49:20.7093050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7093050Z 
2025-01-10T13:49:20.7093200Z >   ???
2025-01-10T13:49:20.7093370Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7093410Z E   
2025-01-10T13:49:20.7093720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7093930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7093980Z E          ...
2025-01-10T13:49:20.7094320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7094440Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7094640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7094770Z E          ...
2025-01-10T13:49:20.7094970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7095090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7095190Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7095200Z 
2025-01-10T13:49:20.7095270Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7095580Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-01-10T13:49:20.7095590Z 
2025-01-10T13:49:20.7095750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7095860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7096020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7096220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7096330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7103110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7103190Z err_msg = None
2025-01-10T13:49:20.7103370Z 
2025-01-10T13:49:20.7103470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7103520Z         if err_msg is None:
2025-01-10T13:49:20.7103590Z             if left.shape != right.shape:
2025-01-10T13:49:20.7103660Z                 raise_assert_detail(
2025-01-10T13:49:20.7103800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7103850Z                 )
2025-01-10T13:49:20.7103910Z     
2025-01-10T13:49:20.7103960Z             diff = 0
2025-01-10T13:49:20.7104040Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7104100Z                 # count up differences
2025-01-10T13:49:20.7104260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7104330Z                     diff += 1
2025-01-10T13:49:20.7104370Z     
2025-01-10T13:49:20.7104470Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7104600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7104770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7104880Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7104940Z E           
2025-01-10T13:49:20.7105040Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7105280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7105520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7105540Z 
2025-01-10T13:49:20.7105800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7105800Z 
2025-01-10T13:49:20.7106060Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7106070Z 
2025-01-10T13:49:20.7106260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badf170>
2025-01-10T13:49:20.7106420Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>, attr = 'lines'
2025-01-10T13:49:20.7106420Z 
2025-01-10T13:49:20.7106550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7106640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7106710Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7106760Z         try:
2025-01-10T13:49:20.7106880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7106960Z         except KeyError:
2025-01-10T13:49:20.7107090Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7107150Z     
2025-01-10T13:49:20.7107220Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7107300Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7107370Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7107500Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7107550Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7107640Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7107720Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7107770Z             else:
2025-01-10T13:49:20.7107840Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7107930Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7107940Z 
2025-01-10T13:49:20.7108030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7108250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7108380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7108430Z     ???
2025-01-10T13:49:20.7108540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7108540Z 
2025-01-10T13:49:20.7108590Z >   ???
2025-01-10T13:49:20.7108700Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7108760Z E   
2025-01-10T13:49:20.7108870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7108950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7109030Z E          ...
2025-01-10T13:49:20.7109110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7109210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7109290Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7109350Z E          ...
2025-01-10T13:49:20.7109430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7109530Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7109600Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7109600Z 
2025-01-10T13:49:20.7109680Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7109930Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-01-10T13:49:20.7109930Z 
2025-01-10T13:49:20.7110120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badf230>
2025-01-10T13:49:20.7110270Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7110350Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7110350Z 
2025-01-10T13:49:20.7110480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7110590Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7110660Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7110730Z         try:
2025-01-10T13:49:20.7110860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7110920Z         except KeyError:
2025-01-10T13:49:20.7111050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7111210Z     
2025-01-10T13:49:20.7111290Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7111390Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7111450Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7111560Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7111610Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7111680Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7111760Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7111770Z 
2025-01-10T13:49:20.7111860Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7111950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7111960Z 
2025-01-10T13:49:20.7112080Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7112140Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7112240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7112320Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7112440Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7112530Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7112630Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7112710Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7112770Z err_msg = None
2025-01-10T13:49:20.7112770Z 
2025-01-10T13:49:20.7112870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7112940Z         if err_msg is None:
2025-01-10T13:49:20.7113090Z             if left.shape != right.shape:
2025-01-10T13:49:20.7113180Z                 raise_assert_detail(
2025-01-10T13:49:20.7113320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7113500Z                 )
2025-01-10T13:49:20.7113560Z     
2025-01-10T13:49:20.7113620Z             diff = 0
2025-01-10T13:49:20.7113710Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7113780Z                 # count up differences
2025-01-10T13:49:20.7113930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7113990Z                     diff += 1
2025-01-10T13:49:20.7114030Z     
2025-01-10T13:49:20.7114100Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7114240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7114370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7114470Z E           AssertionError: Series are different
2025-01-10T13:49:20.7114510Z E           
2025-01-10T13:49:20.7114600Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7114920Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7115210Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7115820Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7115830Z 
2025-01-10T13:49:20.7116100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7116380Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-01-10T13:49:20.7116390Z 
2025-01-10T13:49:20.7116590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badf2f0>
2025-01-10T13:49:20.7116750Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7116840Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7116840Z 
2025-01-10T13:49:20.7116960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7117070Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7117150Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7117200Z         try:
2025-01-10T13:49:20.7117320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7117380Z         except KeyError:
2025-01-10T13:49:20.7117490Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7117550Z     
2025-01-10T13:49:20.7117610Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7117680Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7117780Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7117890Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7117940Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7118000Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7118270Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7118280Z 
2025-01-10T13:49:20.7118370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7118500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7118510Z 
2025-01-10T13:49:20.7118630Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7118700Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7118800Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7118870Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7118990Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7119050Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7119150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7119220Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7119290Z err_msg = None
2025-01-10T13:49:20.7119290Z 
2025-01-10T13:49:20.7119370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7119420Z         if err_msg is None:
2025-01-10T13:49:20.7119490Z             if left.shape != right.shape:
2025-01-10T13:49:20.7119550Z                 raise_assert_detail(
2025-01-10T13:49:20.7119660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7119700Z                 )
2025-01-10T13:49:20.7119750Z     
2025-01-10T13:49:20.7119790Z             diff = 0
2025-01-10T13:49:20.7119890Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7119950Z                 # count up differences
2025-01-10T13:49:20.7120110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7120160Z                     diff += 1
2025-01-10T13:49:20.7120230Z     
2025-01-10T13:49:20.7120310Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7120430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7120590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7120750Z E           AssertionError: Series are different
2025-01-10T13:49:20.7120810Z E           
2025-01-10T13:49:20.7120910Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7121230Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7121560Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7121900Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7121900Z 
2025-01-10T13:49:20.7122180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7122400Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-01-10T13:49:20.7122500Z 
2025-01-10T13:49:20.7122620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7122720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7122800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7122930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7123030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7123120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7123170Z err_msg = None
2025-01-10T13:49:20.7123180Z 
2025-01-10T13:49:20.7123260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7123320Z         if err_msg is None:
2025-01-10T13:49:20.7123390Z             if left.shape != right.shape:
2025-01-10T13:49:20.7123450Z                 raise_assert_detail(
2025-01-10T13:49:20.7123580Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7123620Z                 )
2025-01-10T13:49:20.7123670Z     
2025-01-10T13:49:20.7123720Z             diff = 0
2025-01-10T13:49:20.7123800Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7123860Z                 # count up differences
2025-01-10T13:49:20.7124000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7124060Z                     diff += 1
2025-01-10T13:49:20.7124110Z     
2025-01-10T13:49:20.7124180Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7124310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7124450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7124540Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7124590Z E           
2025-01-10T13:49:20.7124670Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7125020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7125280Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7125290Z 
2025-01-10T13:49:20.7125530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7125540Z 
2025-01-10T13:49:20.7125690Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7125700Z 
2025-01-10T13:49:20.7125870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badf530>
2025-01-10T13:49:20.7126020Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>, attr = 'nu'
2025-01-10T13:49:20.7126020Z 
2025-01-10T13:49:20.7126150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7126240Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7126300Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7126360Z         try:
2025-01-10T13:49:20.7126480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7126530Z         except KeyError:
2025-01-10T13:49:20.7126660Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7126710Z     
2025-01-10T13:49:20.7126860Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7126950Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7127030Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7127160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7127250Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7127330Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7127440Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7127440Z 
2025-01-10T13:49:20.7127540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7127660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7127780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7127820Z     ???
2025-01-10T13:49:20.7127920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7127920Z 
2025-01-10T13:49:20.7127970Z >   ???
2025-01-10T13:49:20.7128070Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7128110Z E   
2025-01-10T13:49:20.7128210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7128290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7128370Z E          ...
2025-01-10T13:49:20.7128440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7128550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7128650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7128720Z E          ...
2025-01-10T13:49:20.7128800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7128910Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7129010Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7129020Z 
2025-01-10T13:49:20.7129100Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7129350Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-01-10T13:49:20.7129360Z 
2025-01-10T13:49:20.7129460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7129650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7129760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7129860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7129980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7130060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7130120Z err_msg = None
2025-01-10T13:49:20.7130130Z 
2025-01-10T13:49:20.7130210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7130260Z         if err_msg is None:
2025-01-10T13:49:20.7130330Z             if left.shape != right.shape:
2025-01-10T13:49:20.7130410Z                 raise_assert_detail(
2025-01-10T13:49:20.7130540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7130610Z                 )
2025-01-10T13:49:20.7130660Z     
2025-01-10T13:49:20.7130700Z             diff = 0
2025-01-10T13:49:20.7130790Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7130870Z                 # count up differences
2025-01-10T13:49:20.7131010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7131060Z                     diff += 1
2025-01-10T13:49:20.7131120Z     
2025-01-10T13:49:20.7131180Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7131290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7131430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7131590Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7131640Z E           
2025-01-10T13:49:20.7131750Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7132010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7132260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7132270Z 
2025-01-10T13:49:20.7132550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7132560Z 
2025-01-10T13:49:20.7132710Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7132720Z 
2025-01-10T13:49:20.7132890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badf5f0>
2025-01-10T13:49:20.7133020Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7133080Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7133080Z 
2025-01-10T13:49:20.7133190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7133270Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7133350Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7133400Z         try:
2025-01-10T13:49:20.7133540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7133610Z         except KeyError:
2025-01-10T13:49:20.7133740Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7133820Z     
2025-01-10T13:49:20.7133880Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7133970Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7134060Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7134180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7134600Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7134690Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7134770Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7134770Z 
2025-01-10T13:49:20.7134880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7135740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7136240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7136340Z     ???
2025-01-10T13:49:20.7136430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7136450Z 
2025-01-10T13:49:20.7136490Z >   ???
2025-01-10T13:49:20.7136580Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7136630Z E   
2025-01-10T13:49:20.7136750Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7136870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7136930Z E          ...
2025-01-10T13:49:20.7137020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7137140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7137260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7137310Z E          ...
2025-01-10T13:49:20.7137390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7137520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7137660Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7137670Z 
2025-01-10T13:49:20.7137750Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7138670Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-01-10T13:49:20.7138680Z 
2025-01-10T13:49:20.7138820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7138930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7139030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7139140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7139280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7139380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7139460Z err_msg = None
2025-01-10T13:49:20.7139470Z 
2025-01-10T13:49:20.7139590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7139680Z         if err_msg is None:
2025-01-10T13:49:20.7139790Z             if left.shape != right.shape:
2025-01-10T13:49:20.7139880Z                 raise_assert_detail(
2025-01-10T13:49:20.7140030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7140100Z                 )
2025-01-10T13:49:20.7140190Z     
2025-01-10T13:49:20.7140250Z             diff = 0
2025-01-10T13:49:20.7140380Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7140480Z                 # count up differences
2025-01-10T13:49:20.7140680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7140770Z                     diff += 1
2025-01-10T13:49:20.7140860Z     
2025-01-10T13:49:20.7140950Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7141100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7141300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7141420Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7141500Z E           
2025-01-10T13:49:20.7141640Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7142080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7142370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7142400Z 
2025-01-10T13:49:20.7142730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7142740Z 
2025-01-10T13:49:20.7142930Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7142930Z 
2025-01-10T13:49:20.7143150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badf6b0>
2025-01-10T13:49:20.7143350Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>, attr = 'f_lu'
2025-01-10T13:49:20.7143360Z 
2025-01-10T13:49:20.7143500Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7143630Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7143710Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7143780Z         try:
2025-01-10T13:49:20.7143920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7143980Z         except KeyError:
2025-01-10T13:49:20.7144130Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7144290Z     
2025-01-10T13:49:20.7144400Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7144490Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7144590Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7144720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7144820Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7144910Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7145030Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7145030Z 
2025-01-10T13:49:20.7145140Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7145260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7145410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7145470Z     ???
2025-01-10T13:49:20.7145580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7145590Z 
2025-01-10T13:49:20.7145640Z >   ???
2025-01-10T13:49:20.7145760Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7145830Z E   
2025-01-10T13:49:20.7145960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7146080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7146140Z E          ...
2025-01-10T13:49:20.7146230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7146340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7146450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7146520Z E          ...
2025-01-10T13:49:20.7146590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7146700Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7146790Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7146800Z 
2025-01-10T13:49:20.7146870Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7147150Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-01-10T13:49:20.7147160Z 
2025-01-10T13:49:20.7147340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badfcb0>
2025-01-10T13:49:20.7147570Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7147660Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:20.7147670Z 
2025-01-10T13:49:20.7147810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7147910Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7147980Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7148030Z         try:
2025-01-10T13:49:20.7148160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7148230Z         except KeyError:
2025-01-10T13:49:20.7148340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7148400Z     
2025-01-10T13:49:20.7148460Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7148550Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7148610Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7148720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7148780Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7148840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7148920Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7148980Z             else:
2025-01-10T13:49:20.7149070Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7149150Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7149160Z 
2025-01-10T13:49:20.7149260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7149350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7149470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7149590Z     ???
2025-01-10T13:49:20.7149700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7149710Z 
2025-01-10T13:49:20.7149750Z >   ???
2025-01-10T13:49:20.7149910Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.7149970Z E   
2025-01-10T13:49:20.7150140Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:20.7150460Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7154400Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.7158320Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.7158590Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:20.7158590Z 
2025-01-10T13:49:20.7158670Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7158930Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-01-10T13:49:20.7158940Z 
2025-01-10T13:49:20.7159060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7159170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7159260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7159390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7159520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7159600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7159660Z err_msg = None
2025-01-10T13:49:20.7159670Z 
2025-01-10T13:49:20.7159750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7159810Z         if err_msg is None:
2025-01-10T13:49:20.7159880Z             if left.shape != right.shape:
2025-01-10T13:49:20.7159940Z                 raise_assert_detail(
2025-01-10T13:49:20.7160080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7160140Z                 )
2025-01-10T13:49:20.7160200Z     
2025-01-10T13:49:20.7160240Z             diff = 0
2025-01-10T13:49:20.7160620Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7160710Z                 # count up differences
2025-01-10T13:49:20.7160880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7160940Z                     diff += 1
2025-01-10T13:49:20.7161000Z     
2025-01-10T13:49:20.7161070Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7161190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7161350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7161450Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7161510Z E           
2025-01-10T13:49:20.7161590Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7161840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7162080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7162080Z 
2025-01-10T13:49:20.7162340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7162340Z 
2025-01-10T13:49:20.7162500Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7162710Z 
2025-01-10T13:49:20.7162910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badfd70>
2025-01-10T13:49:20.7163040Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7163100Z attr = 'previous_beta_sobolev'
2025-01-10T13:49:20.7163110Z 
2025-01-10T13:49:20.7163220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7163310Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7163370Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7163410Z         try:
2025-01-10T13:49:20.7163530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7163590Z         except KeyError:
2025-01-10T13:49:20.7163710Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7163780Z     
2025-01-10T13:49:20.7163850Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7163930Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7163980Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7164120Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7164200Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7164280Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7164390Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7164460Z             else:
2025-01-10T13:49:20.7164540Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7164640Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7164650Z 
2025-01-10T13:49:20.7164740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7164850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7164990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7165050Z     ???
2025-01-10T13:49:20.7165150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7165160Z 
2025-01-10T13:49:20.7165210Z >   ???
2025-01-10T13:49:20.7165320Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7165370Z E   
2025-01-10T13:49:20.7165620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7165750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7165820Z E          ...
2025-01-10T13:49:20.7165880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7165990Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7166090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7166140Z E          ...
2025-01-10T13:49:20.7166230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7166330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7166430Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7166450Z 
2025-01-10T13:49:20.7166540Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7166770Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-01-10T13:49:20.7166770Z 
2025-01-10T13:49:20.7166880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7166980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7167060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7167170Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7167380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7167560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7167630Z err_msg = None
2025-01-10T13:49:20.7167630Z 
2025-01-10T13:49:20.7168000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7168130Z         if err_msg is None:
2025-01-10T13:49:20.7168330Z             if left.shape != right.shape:
2025-01-10T13:49:20.7168390Z                 raise_assert_detail(
2025-01-10T13:49:20.7174970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7175050Z                 )
2025-01-10T13:49:20.7175100Z     
2025-01-10T13:49:20.7175150Z             diff = 0
2025-01-10T13:49:20.7175240Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7175300Z                 # count up differences
2025-01-10T13:49:20.7175440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7175490Z                     diff += 1
2025-01-10T13:49:20.7175540Z     
2025-01-10T13:49:20.7175600Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7175710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7175850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7175940Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7175990Z E           
2025-01-10T13:49:20.7176070Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7176290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7176500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7176510Z 
2025-01-10T13:49:20.7176750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7176750Z 
2025-01-10T13:49:20.7176890Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7177080Z 
2025-01-10T13:49:20.7177250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badfe30>
2025-01-10T13:49:20.7177380Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7177430Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7177430Z 
2025-01-10T13:49:20.7177530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7177630Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7177680Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7177730Z         try:
2025-01-10T13:49:20.7177840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7177900Z         except KeyError:
2025-01-10T13:49:20.7178010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7178060Z     
2025-01-10T13:49:20.7178110Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7178190Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7178250Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7178360Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7178420Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7178480Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7178570Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7178620Z             else:
2025-01-10T13:49:20.7178690Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7178770Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7178770Z 
2025-01-10T13:49:20.7178870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7179070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7179230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7179270Z     ???
2025-01-10T13:49:20.7179370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7179370Z 
2025-01-10T13:49:20.7179420Z >   ???
2025-01-10T13:49:20.7179520Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7179560Z E   
2025-01-10T13:49:20.7179660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7179740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7179790Z E          ...
2025-01-10T13:49:20.7179880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7179980Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7180090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7180160Z E          ...
2025-01-10T13:49:20.7180240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7180340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7180440Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7180440Z 
2025-01-10T13:49:20.7180500Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7180740Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-01-10T13:49:20.7180750Z 
2025-01-10T13:49:20.7180860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7180980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7181060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7181190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7181300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7181370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7181430Z err_msg = None
2025-01-10T13:49:20.7181430Z 
2025-01-10T13:49:20.7181510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7181640Z         if err_msg is None:
2025-01-10T13:49:20.7181720Z             if left.shape != right.shape:
2025-01-10T13:49:20.7181780Z                 raise_assert_detail(
2025-01-10T13:49:20.7181890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7181930Z                 )
2025-01-10T13:49:20.7181990Z     
2025-01-10T13:49:20.7182040Z             diff = 0
2025-01-10T13:49:20.7182140Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7182220Z                 # count up differences
2025-01-10T13:49:20.7182360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7182410Z                     diff += 1
2025-01-10T13:49:20.7182480Z     
2025-01-10T13:49:20.7182560Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7182680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7182830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7182940Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7183010Z E           
2025-01-10T13:49:20.7183100Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7183340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7183550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7183640Z 
2025-01-10T13:49:20.7183900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7183910Z 
2025-01-10T13:49:20.7184050Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7184050Z 
2025-01-10T13:49:20.7282210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11badfef0>
2025-01-10T13:49:20.7282500Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>
2025-01-10T13:49:20.7282560Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7282560Z 
2025-01-10T13:49:20.7282690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7282780Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7282880Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7282940Z         try:
2025-01-10T13:49:20.7283060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7283110Z         except KeyError:
2025-01-10T13:49:20.7283230Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7283290Z     
2025-01-10T13:49:20.7283360Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7283450Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7283510Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7283640Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7283710Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7283790Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7283900Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7283980Z             else:
2025-01-10T13:49:20.7284060Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7284170Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7284180Z 
2025-01-10T13:49:20.7284290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7285190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7285350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7285400Z     ???
2025-01-10T13:49:20.7285510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7285530Z 
2025-01-10T13:49:20.7285580Z >   ???
2025-01-10T13:49:20.7285690Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7285740Z E   
2025-01-10T13:49:20.7285860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7285950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7286000Z E          ...
2025-01-10T13:49:20.7286080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7286210Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7286300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7286340Z E          ...
2025-01-10T13:49:20.7286410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7286500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7286590Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7286590Z 
2025-01-10T13:49:20.7286660Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7286900Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-01-10T13:49:20.7286900Z 
2025-01-10T13:49:20.7287000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7287120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7287490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7287590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7287700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7287770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7287830Z err_msg = None
2025-01-10T13:49:20.7287830Z 
2025-01-10T13:49:20.7287930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7288010Z         if err_msg is None:
2025-01-10T13:49:20.7288070Z             if left.shape != right.shape:
2025-01-10T13:49:20.7288150Z                 raise_assert_detail(
2025-01-10T13:49:20.7288290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7288340Z                 )
2025-01-10T13:49:20.7288390Z     
2025-01-10T13:49:20.7288440Z             diff = 0
2025-01-10T13:49:20.7288540Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7288600Z                 # count up differences
2025-01-10T13:49:20.7288740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7288790Z                     diff += 1
2025-01-10T13:49:20.7288870Z     
2025-01-10T13:49:20.7288950Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7289080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7289220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7289320Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7289380Z E           
2025-01-10T13:49:20.7289470Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7289710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7290050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7290060Z 
2025-01-10T13:49:20.7290340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7290350Z 
2025-01-10T13:49:20.7290490Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7290500Z 
2025-01-10T13:49:20.7290680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb080b0>
2025-01-10T13:49:20.7290850Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e150b30>, attr = 'j_blues'
2025-01-10T13:49:20.7290850Z 
2025-01-10T13:49:20.7290970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7291080Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7291150Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7291220Z         try:
2025-01-10T13:49:20.7291360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7291430Z         except KeyError:
2025-01-10T13:49:20.7291560Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7291620Z     
2025-01-10T13:49:20.7291690Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7291780Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7291850Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7291970Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7292040Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7292170Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7292260Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7292320Z             else:
2025-01-10T13:49:20.7292400Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7292490Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7292490Z 
2025-01-10T13:49:20.7292580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7292670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7292780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7292830Z     ???
2025-01-10T13:49:20.7292910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7292910Z 
2025-01-10T13:49:20.7292960Z >   ???
2025-01-10T13:49:20.7293050Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7293090Z E   
2025-01-10T13:49:20.7293180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7293280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7293320Z E          ...
2025-01-10T13:49:20.7293390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7293500Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7293590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7293640Z E          ...
2025-01-10T13:49:20.7293700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7293800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7293870Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7293870Z 
2025-01-10T13:49:20.7293940Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7294120Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-01-10T13:49:20.7294120Z 
2025-01-10T13:49:20.7294230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7294340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7294430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7294620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7294750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7294840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7294890Z err_msg = None
2025-01-10T13:49:20.7294890Z 
2025-01-10T13:49:20.7294990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7295050Z         if err_msg is None:
2025-01-10T13:49:20.7295120Z             if left.shape != right.shape:
2025-01-10T13:49:20.7295170Z                 raise_assert_detail(
2025-01-10T13:49:20.7295290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7295340Z                 )
2025-01-10T13:49:20.7295390Z     
2025-01-10T13:49:20.7295440Z             diff = 0
2025-01-10T13:49:20.7295540Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7295610Z                 # count up differences
2025-01-10T13:49:20.7295740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7295810Z                     diff += 1
2025-01-10T13:49:20.7295860Z     
2025-01-10T13:49:20.7295920Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7296020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7296180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7296260Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7296310Z E           
2025-01-10T13:49:20.7296390Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7296710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7296950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7296960Z 
2025-01-10T13:49:20.7297240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7297250Z 
2025-01-10T13:49:20.7297420Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7297420Z 
2025-01-10T13:49:20.7297620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb08e30>
2025-01-10T13:49:20.7297800Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>, attr = 'lines'
2025-01-10T13:49:20.7297810Z 
2025-01-10T13:49:20.7297940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7298020Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7298100Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7298150Z         try:
2025-01-10T13:49:20.7298270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7298330Z         except KeyError:
2025-01-10T13:49:20.7298440Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7298480Z     
2025-01-10T13:49:20.7298540Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7298610Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7298670Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7298790Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7298870Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7298930Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7299090Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7299140Z             else:
2025-01-10T13:49:20.7299210Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7299300Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7299310Z 
2025-01-10T13:49:20.7299400Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7299490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7299610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7299660Z     ???
2025-01-10T13:49:20.7299750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7299750Z 
2025-01-10T13:49:20.7299810Z >   ???
2025-01-10T13:49:20.7299900Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7299950Z E   
2025-01-10T13:49:20.7300050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7300140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7300180Z E          ...
2025-01-10T13:49:20.7300250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7300340Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7300420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7300470Z E          ...
2025-01-10T13:49:20.7300530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7300640Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7300720Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7300730Z 
2025-01-10T13:49:20.7300780Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7301040Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-01-10T13:49:20.7301040Z 
2025-01-10T13:49:20.7301240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb08ef0>
2025-01-10T13:49:20.7301400Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7301470Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7301480Z 
2025-01-10T13:49:20.7301630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7301740Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7301800Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7301870Z         try:
2025-01-10T13:49:20.7301990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7302040Z         except KeyError:
2025-01-10T13:49:20.7302140Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7302190Z     
2025-01-10T13:49:20.7302250Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7302320Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7302380Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7302480Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7302550Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7302610Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7302690Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7302690Z 
2025-01-10T13:49:20.7302780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7302870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7302870Z 
2025-01-10T13:49:20.7302980Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7303050Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7303130Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7303200Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7303310Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7303360Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7303690Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7303750Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7303800Z err_msg = None
2025-01-10T13:49:20.7303810Z 
2025-01-10T13:49:20.7303890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7303970Z         if err_msg is None:
2025-01-10T13:49:20.7304030Z             if left.shape != right.shape:
2025-01-10T13:49:20.7304090Z                 raise_assert_detail(
2025-01-10T13:49:20.7304210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7304270Z                 )
2025-01-10T13:49:20.7304310Z     
2025-01-10T13:49:20.7304360Z             diff = 0
2025-01-10T13:49:20.7304450Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7304510Z                 # count up differences
2025-01-10T13:49:20.7304640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7304690Z                     diff += 1
2025-01-10T13:49:20.7304740Z     
2025-01-10T13:49:20.7304810Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7304930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7305080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7305190Z E           AssertionError: Series are different
2025-01-10T13:49:20.7305240Z E           
2025-01-10T13:49:20.7305330Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7305680Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7306310Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7306610Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7306620Z 
2025-01-10T13:49:20.7306870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7307050Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-01-10T13:49:20.7307060Z 
2025-01-10T13:49:20.7307250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb08fb0>
2025-01-10T13:49:20.7307380Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7307450Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7307460Z 
2025-01-10T13:49:20.7307580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7307690Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7307750Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7307800Z         try:
2025-01-10T13:49:20.7307940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7308000Z         except KeyError:
2025-01-10T13:49:20.7308100Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7308140Z     
2025-01-10T13:49:20.7308210Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7308360Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7308420Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7308520Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7308590Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7308670Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7308750Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7308750Z 
2025-01-10T13:49:20.7308850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7308950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7308960Z 
2025-01-10T13:49:20.7309080Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7309150Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7309230Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7309290Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7309400Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7309470Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7309560Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7309620Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7309670Z err_msg = None
2025-01-10T13:49:20.7309670Z 
2025-01-10T13:49:20.7309750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7309800Z         if err_msg is None:
2025-01-10T13:49:20.7309870Z             if left.shape != right.shape:
2025-01-10T13:49:20.7309920Z                 raise_assert_detail(
2025-01-10T13:49:20.7310110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7310150Z                 )
2025-01-10T13:49:20.7310200Z     
2025-01-10T13:49:20.7310250Z             diff = 0
2025-01-10T13:49:20.7310330Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7310390Z                 # count up differences
2025-01-10T13:49:20.7310530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7310570Z                     diff += 1
2025-01-10T13:49:20.7310640Z     
2025-01-10T13:49:20.7310720Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7310830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7310970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7311040Z E           AssertionError: Series are different
2025-01-10T13:49:20.7311090Z E           
2025-01-10T13:49:20.7311160Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7311470Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7311800Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7312220Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7312230Z 
2025-01-10T13:49:20.7312520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7312690Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-01-10T13:49:20.7312700Z 
2025-01-10T13:49:20.7312800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7312900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7312970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7313090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7313210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7313310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7313390Z err_msg = None
2025-01-10T13:49:20.7313390Z 
2025-01-10T13:49:20.7313480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7313530Z         if err_msg is None:
2025-01-10T13:49:20.7313600Z             if left.shape != right.shape:
2025-01-10T13:49:20.7313660Z                 raise_assert_detail(
2025-01-10T13:49:20.7313800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7313850Z                 )
2025-01-10T13:49:20.7313890Z     
2025-01-10T13:49:20.7313950Z             diff = 0
2025-01-10T13:49:20.7314060Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7314280Z                 # count up differences
2025-01-10T13:49:20.7314450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7314530Z                     diff += 1
2025-01-10T13:49:20.7314600Z     
2025-01-10T13:49:20.7314690Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7314820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7315020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7315130Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7315210Z E           
2025-01-10T13:49:20.7315330Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7315590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7315860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7315870Z 
2025-01-10T13:49:20.7316160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7316180Z 
2025-01-10T13:49:20.7316340Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7316350Z 
2025-01-10T13:49:20.7316560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb091f0>
2025-01-10T13:49:20.7316760Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>, attr = 'nu'
2025-01-10T13:49:20.7316770Z 
2025-01-10T13:49:20.7316900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7317010Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7317110Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7317160Z         try:
2025-01-10T13:49:20.7317420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7317500Z         except KeyError:
2025-01-10T13:49:20.7317660Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7317710Z     
2025-01-10T13:49:20.7317780Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7317880Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7317960Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7318100Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7318180Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7318280Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7318390Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7318410Z 
2025-01-10T13:49:20.7318530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7318640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7318780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7318830Z     ???
2025-01-10T13:49:20.7318930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7318930Z 
2025-01-10T13:49:20.7319000Z >   ???
2025-01-10T13:49:20.7319130Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7319200Z E   
2025-01-10T13:49:20.7319330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7319450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7319520Z E          ...
2025-01-10T13:49:20.7319640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7319860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7319980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7320030Z E          ...
2025-01-10T13:49:20.7320130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7320260Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7320370Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7320370Z 
2025-01-10T13:49:20.7320460Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7320650Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-01-10T13:49:20.7320660Z 
2025-01-10T13:49:20.7320810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7320930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7321050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7321180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7321330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7321450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7321520Z err_msg = None
2025-01-10T13:49:20.7321530Z 
2025-01-10T13:49:20.7321650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7321740Z         if err_msg is None:
2025-01-10T13:49:20.7321840Z             if left.shape != right.shape:
2025-01-10T13:49:20.7321920Z                 raise_assert_detail(
2025-01-10T13:49:20.7322260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7322320Z                 )
2025-01-10T13:49:20.7322400Z     
2025-01-10T13:49:20.7322470Z             diff = 0
2025-01-10T13:49:20.7322600Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7322690Z                 # count up differences
2025-01-10T13:49:20.7322840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7322890Z                     diff += 1
2025-01-10T13:49:20.7322930Z     
2025-01-10T13:49:20.7323270Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7323390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7323530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7323620Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7323670Z E           
2025-01-10T13:49:20.7323750Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7323960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7324200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7324210Z 
2025-01-10T13:49:20.7324480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7324480Z 
2025-01-10T13:49:20.7324630Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7324640Z 
2025-01-10T13:49:20.7324820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb092b0>
2025-01-10T13:49:20.7324980Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7325040Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7325430Z 
2025-01-10T13:49:20.7325550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7325640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7325700Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7325760Z         try:
2025-01-10T13:49:20.7325890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7325950Z         except KeyError:
2025-01-10T13:49:20.7326060Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7326100Z     
2025-01-10T13:49:20.7326160Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7326230Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7326290Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7326390Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7326450Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7326520Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7336610Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7336640Z 
2025-01-10T13:49:20.7336800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7336910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7337040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7337100Z     ???
2025-01-10T13:49:20.7337200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7337210Z 
2025-01-10T13:49:20.7337250Z >   ???
2025-01-10T13:49:20.7337370Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7337410Z E   
2025-01-10T13:49:20.7337510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7337610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7337670Z E          ...
2025-01-10T13:49:20.7337730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7337830Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7337940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7337980Z E          ...
2025-01-10T13:49:20.7338050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7338370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7338450Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7338460Z 
2025-01-10T13:49:20.7338530Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7338690Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-01-10T13:49:20.7338690Z 
2025-01-10T13:49:20.7338790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7338930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7339030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7339140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7339260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7339340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7339390Z err_msg = None
2025-01-10T13:49:20.7339400Z 
2025-01-10T13:49:20.7339470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7339530Z         if err_msg is None:
2025-01-10T13:49:20.7339590Z             if left.shape != right.shape:
2025-01-10T13:49:20.7339650Z                 raise_assert_detail(
2025-01-10T13:49:20.7339780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7339840Z                 )
2025-01-10T13:49:20.7339880Z     
2025-01-10T13:49:20.7339920Z             diff = 0
2025-01-10T13:49:20.7340030Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7340240Z                 # count up differences
2025-01-10T13:49:20.7340400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7340470Z                     diff += 1
2025-01-10T13:49:20.7340520Z     
2025-01-10T13:49:20.7340580Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7340710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7340860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7340970Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7341020Z E           
2025-01-10T13:49:20.7341110Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7341340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7341580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7341590Z 
2025-01-10T13:49:20.7341830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7341830Z 
2025-01-10T13:49:20.7341970Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7341980Z 
2025-01-10T13:49:20.7342140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb09370>
2025-01-10T13:49:20.7342300Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>, attr = 'f_lu'
2025-01-10T13:49:20.7342310Z 
2025-01-10T13:49:20.7342420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7342520Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7342580Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7342630Z         try:
2025-01-10T13:49:20.7342820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7342880Z         except KeyError:
2025-01-10T13:49:20.7342990Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7343030Z     
2025-01-10T13:49:20.7343100Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7343200Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7343270Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7343400Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7343470Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7343530Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7343620Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7343620Z 
2025-01-10T13:49:20.7343730Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7343830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7343960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7344030Z     ???
2025-01-10T13:49:20.7344120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7344120Z 
2025-01-10T13:49:20.7344170Z >   ???
2025-01-10T13:49:20.7344260Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7344300Z E   
2025-01-10T13:49:20.7344410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7344490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7344540Z E          ...
2025-01-10T13:49:20.7344600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7344780Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7344860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7344910Z E          ...
2025-01-10T13:49:20.7344970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7345070Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7345160Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7345160Z 
2025-01-10T13:49:20.7345230Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7345430Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-01-10T13:49:20.7345430Z 
2025-01-10T13:49:20.7345590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb09970>
2025-01-10T13:49:20.7345710Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7345770Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:20.7345770Z 
2025-01-10T13:49:20.7345880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7345960Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7346020Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7346060Z         try:
2025-01-10T13:49:20.7346190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7346250Z         except KeyError:
2025-01-10T13:49:20.7346360Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7346400Z     
2025-01-10T13:49:20.7346460Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7346550Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7346610Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7346720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7346790Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7346870Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7346970Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7347030Z             else:
2025-01-10T13:49:20.7347090Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7347170Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7347170Z 
2025-01-10T13:49:20.7347340Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7347460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7347600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7347650Z     ???
2025-01-10T13:49:20.7347760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7347760Z 
2025-01-10T13:49:20.7347820Z >   ???
2025-01-10T13:49:20.7347980Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.7348030Z E   
2025-01-10T13:49:20.7348170Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:20.7348510Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7352330Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.7356520Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.7356690Z E   At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:20.7356690Z 
2025-01-10T13:49:20.7356760Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7356950Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-01-10T13:49:20.7356960Z 
2025-01-10T13:49:20.7357090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7357210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7357310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7357420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7357560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7357930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7357980Z err_msg = None
2025-01-10T13:49:20.7357980Z 
2025-01-10T13:49:20.7358060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7358110Z         if err_msg is None:
2025-01-10T13:49:20.7358180Z             if left.shape != right.shape:
2025-01-10T13:49:20.7358240Z                 raise_assert_detail(
2025-01-10T13:49:20.7358350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7358400Z                 )
2025-01-10T13:49:20.7358460Z     
2025-01-10T13:49:20.7358510Z             diff = 0
2025-01-10T13:49:20.7358600Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7358670Z                 # count up differences
2025-01-10T13:49:20.7358820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7358890Z                     diff += 1
2025-01-10T13:49:20.7358940Z     
2025-01-10T13:49:20.7359000Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7359130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7359270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7359350Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7359400Z E           
2025-01-10T13:49:20.7359480Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7359710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7359940Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7359960Z 
2025-01-10T13:49:20.7360290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7360290Z 
2025-01-10T13:49:20.7360460Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7360470Z 
2025-01-10T13:49:20.7360660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb09a30>
2025-01-10T13:49:20.7360800Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7360860Z attr = 'previous_beta_sobolev'
2025-01-10T13:49:20.7360860Z 
2025-01-10T13:49:20.7360990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7361080Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7361160Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7361200Z         try:
2025-01-10T13:49:20.7361330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7361390Z         except KeyError:
2025-01-10T13:49:20.7361500Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7361540Z     
2025-01-10T13:49:20.7361600Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7361670Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7361740Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7361850Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7361930Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7362000Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7362100Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7362280Z             else:
2025-01-10T13:49:20.7362350Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7362580Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7362580Z 
2025-01-10T13:49:20.7362700Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7362800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7362950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7363000Z     ???
2025-01-10T13:49:20.7363100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7363110Z 
2025-01-10T13:49:20.7363150Z >   ???
2025-01-10T13:49:20.7363250Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7363290Z E   
2025-01-10T13:49:20.7363400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7363490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7363530Z E          ...
2025-01-10T13:49:20.7363610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7363720Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7363800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7363850Z E          ...
2025-01-10T13:49:20.7363910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7364040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7364110Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7364120Z 
2025-01-10T13:49:20.7364200Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7364390Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-01-10T13:49:20.7364400Z 
2025-01-10T13:49:20.7364500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7364620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7364720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7364830Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7364960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7365150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7365220Z err_msg = None
2025-01-10T13:49:20.7365230Z 
2025-01-10T13:49:20.7365340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7365400Z         if err_msg is None:
2025-01-10T13:49:20.7365460Z             if left.shape != right.shape:
2025-01-10T13:49:20.7365520Z                 raise_assert_detail(
2025-01-10T13:49:20.7365640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7365680Z                 )
2025-01-10T13:49:20.7365730Z     
2025-01-10T13:49:20.7365770Z             diff = 0
2025-01-10T13:49:20.7365860Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7365920Z                 # count up differences
2025-01-10T13:49:20.7366080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7366130Z                     diff += 1
2025-01-10T13:49:20.7366180Z     
2025-01-10T13:49:20.7366240Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7366350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7366490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7366570Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7366620Z E           
2025-01-10T13:49:20.7366700Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7366940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7367260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7367270Z 
2025-01-10T13:49:20.7367510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7367510Z 
2025-01-10T13:49:20.7367650Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7367650Z 
2025-01-10T13:49:20.7367830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb09af0>
2025-01-10T13:49:20.7367960Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7368040Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7368040Z 
2025-01-10T13:49:20.7368150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7368230Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7368290Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7368340Z         try:
2025-01-10T13:49:20.7368450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7368500Z         except KeyError:
2025-01-10T13:49:20.7368600Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7368650Z     
2025-01-10T13:49:20.7368710Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7368800Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7368860Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7368980Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7369070Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7369140Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7369240Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7369310Z             else:
2025-01-10T13:49:20.7369380Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7369570Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7369580Z 
2025-01-10T13:49:20.7369680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7369770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7369890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7369930Z     ???
2025-01-10T13:49:20.7370020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7370020Z 
2025-01-10T13:49:20.7370060Z >   ???
2025-01-10T13:49:20.7370160Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7370200Z E   
2025-01-10T13:49:20.7370300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7370390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7370430Z E          ...
2025-01-10T13:49:20.7370500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7370590Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7370680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7370730Z E          ...
2025-01-10T13:49:20.7370790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7370880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7370960Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7370960Z 
2025-01-10T13:49:20.7371020Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7371180Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-01-10T13:49:20.7371180Z 
2025-01-10T13:49:20.7371280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7371430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7371520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7371620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7371730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7371790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7371850Z err_msg = None
2025-01-10T13:49:20.7371850Z 
2025-01-10T13:49:20.7371920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7371980Z         if err_msg is None:
2025-01-10T13:49:20.7372060Z             if left.shape != right.shape:
2025-01-10T13:49:20.7372120Z                 raise_assert_detail(
2025-01-10T13:49:20.7372240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7372300Z                 )
2025-01-10T13:49:20.7372350Z     
2025-01-10T13:49:20.7372390Z             diff = 0
2025-01-10T13:49:20.7372490Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7372560Z                 # count up differences
2025-01-10T13:49:20.7372720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7372770Z                     diff += 1
2025-01-10T13:49:20.7372820Z     
2025-01-10T13:49:20.7372880Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7372990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7373140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7373220Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7373270Z E           
2025-01-10T13:49:20.7373370Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7374020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7374260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7374270Z 
2025-01-10T13:49:20.7374530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7374540Z 
2025-01-10T13:49:20.7374690Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7374700Z 
2025-01-10T13:49:20.7374890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb09bb0>
2025-01-10T13:49:20.7375040Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>
2025-01-10T13:49:20.7375100Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7375100Z 
2025-01-10T13:49:20.7375230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7375320Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7375380Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7375420Z         try:
2025-01-10T13:49:20.7375530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7375590Z         except KeyError:
2025-01-10T13:49:20.7375700Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7375740Z     
2025-01-10T13:49:20.7375800Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7375870Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7376140Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7376260Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7376330Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7376390Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7376500Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7376550Z             else:
2025-01-10T13:49:20.7376630Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7376730Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7376740Z 
2025-01-10T13:49:20.7376830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7376940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7377070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7377110Z     ???
2025-01-10T13:49:20.7377200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7377210Z 
2025-01-10T13:49:20.7377250Z >   ???
2025-01-10T13:49:20.7377360Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7377420Z E   
2025-01-10T13:49:20.7377530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7377620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7377660Z E          ...
2025-01-10T13:49:20.7377730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7377820Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7377920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7377970Z E          ...
2025-01-10T13:49:20.7378030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7378130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7378220Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7378230Z 
2025-01-10T13:49:20.7378290Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7378480Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-01-10T13:49:20.7378490Z 
2025-01-10T13:49:20.7378600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7378830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7378920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7379050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7379150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7379230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7379290Z err_msg = None
2025-01-10T13:49:20.7379290Z 
2025-01-10T13:49:20.7379380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7379450Z         if err_msg is None:
2025-01-10T13:49:20.7379510Z             if left.shape != right.shape:
2025-01-10T13:49:20.7379590Z                 raise_assert_detail(
2025-01-10T13:49:20.7379730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7379780Z                 )
2025-01-10T13:49:20.7379820Z     
2025-01-10T13:49:20.7379870Z             diff = 0
2025-01-10T13:49:20.7379970Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7380030Z                 # count up differences
2025-01-10T13:49:20.7380170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7380230Z                     diff += 1
2025-01-10T13:49:20.7380280Z     
2025-01-10T13:49:20.7380360Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7380480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7380630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7380790Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7380840Z E           
2025-01-10T13:49:20.7380920Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7381160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7381390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7381390Z 
2025-01-10T13:49:20.7381650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7381660Z 
2025-01-10T13:49:20.7381840Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7381850Z 
2025-01-10T13:49:20.7382040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb09d30>
2025-01-10T13:49:20.7382220Z plasma = <tardis.plasma.base.BasePlasma object at 0x11d1a4710>, attr = 'j_blues'
2025-01-10T13:49:20.7382220Z 
2025-01-10T13:49:20.7382340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7382450Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7382510Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7382570Z         try:
2025-01-10T13:49:20.7382680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7382760Z         except KeyError:
2025-01-10T13:49:20.7382880Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7382940Z     
2025-01-10T13:49:20.7383000Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7383070Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7383130Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7383310Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7383400Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7383480Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7383580Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7383630Z             else:
2025-01-10T13:49:20.7383700Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7383780Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7383780Z 
2025-01-10T13:49:20.7383890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7383980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7384110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7384160Z     ???
2025-01-10T13:49:20.7384270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7384270Z 
2025-01-10T13:49:20.7384320Z >   ???
2025-01-10T13:49:20.7384430Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7384480Z E   
2025-01-10T13:49:20.7384590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7384690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7384740Z E          ...
2025-01-10T13:49:20.7384800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7384900Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7384990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7385030Z E          ...
2025-01-10T13:49:20.7385090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7385270Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7385340Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7385350Z 
2025-01-10T13:49:20.7385400Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7385610Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-01-10T13:49:20.7385610Z 
2025-01-10T13:49:20.7385710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7385830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7385910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7386010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7386110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7386190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7386240Z err_msg = None
2025-01-10T13:49:20.7386240Z 
2025-01-10T13:49:20.7386320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7386370Z         if err_msg is None:
2025-01-10T13:49:20.7386440Z             if left.shape != right.shape:
2025-01-10T13:49:20.7386500Z                 raise_assert_detail(
2025-01-10T13:49:20.7386610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7386660Z                 )
2025-01-10T13:49:20.7386710Z     
2025-01-10T13:49:20.7386790Z             diff = 0
2025-01-10T13:49:20.7386900Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7386970Z                 # count up differences
2025-01-10T13:49:20.7387100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7387150Z                     diff += 1
2025-01-10T13:49:20.7387190Z     
2025-01-10T13:49:20.7387250Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7387370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7387490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7387580Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7387700Z E           
2025-01-10T13:49:20.7387790Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7388000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7388210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7388210Z 
2025-01-10T13:49:20.7388450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7388460Z 
2025-01-10T13:49:20.7388580Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7388590Z 
2025-01-10T13:49:20.7388750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0aab0>
2025-01-10T13:49:20.7388910Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>, attr = 'lines'
2025-01-10T13:49:20.7388910Z 
2025-01-10T13:49:20.7389010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7389100Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7389150Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7389200Z         try:
2025-01-10T13:49:20.7389300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7389400Z         except KeyError:
2025-01-10T13:49:20.7389510Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7389550Z     
2025-01-10T13:49:20.7389610Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7389680Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7389740Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7389840Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7389900Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7389960Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7390040Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7390090Z             else:
2025-01-10T13:49:20.7390150Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7390230Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7390230Z 
2025-01-10T13:49:20.7390330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7390420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7390530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7390570Z     ???
2025-01-10T13:49:20.7390660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7390670Z 
2025-01-10T13:49:20.7390710Z >   ???
2025-01-10T13:49:20.7390800Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7390850Z E   
2025-01-10T13:49:20.7390940Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7391030Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7391070Z E          ...
2025-01-10T13:49:20.7391140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7391230Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7391320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7391370Z E          ...
2025-01-10T13:49:20.7391430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7391520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7391800Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7391810Z 
2025-01-10T13:49:20.7391880Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7392060Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-01-10T13:49:20.7392060Z 
2025-01-10T13:49:20.7392230Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0ab70>
2025-01-10T13:49:20.7392350Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>
2025-01-10T13:49:20.7392410Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7392410Z 
2025-01-10T13:49:20.7392510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7392600Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7392660Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7392700Z         try:
2025-01-10T13:49:20.7392830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7392880Z         except KeyError:
2025-01-10T13:49:20.7393010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7393070Z     
2025-01-10T13:49:20.7393130Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7393200Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7393260Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7393490Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7398510Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7398640Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7398750Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7398760Z 
2025-01-10T13:49:20.7398850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7399420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7399430Z 
2025-01-10T13:49:20.7399540Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7399610Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7399710Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7399790Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7399930Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7400010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7400100Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7400160Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7400210Z err_msg = None
2025-01-10T13:49:20.7400210Z 
2025-01-10T13:49:20.7400290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7400360Z         if err_msg is None:
2025-01-10T13:49:20.7400450Z             if left.shape != right.shape:
2025-01-10T13:49:20.7400530Z                 raise_assert_detail(
2025-01-10T13:49:20.7400680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7400730Z                 )
2025-01-10T13:49:20.7400790Z     
2025-01-10T13:49:20.7400840Z             diff = 0
2025-01-10T13:49:20.7400950Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7401030Z                 # count up differences
2025-01-10T13:49:20.7401180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7401230Z                     diff += 1
2025-01-10T13:49:20.7401280Z     
2025-01-10T13:49:20.7401350Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7401490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7401650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7401750Z E           AssertionError: Series are different
2025-01-10T13:49:20.7401790Z E           
2025-01-10T13:49:20.7401870Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7402460Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7402790Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7403100Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7403110Z 
2025-01-10T13:49:20.7403410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7403600Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-01-10T13:49:20.7403600Z 
2025-01-10T13:49:20.7403790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0ac30>
2025-01-10T13:49:20.7403940Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>
2025-01-10T13:49:20.7404130Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7404150Z 
2025-01-10T13:49:20.7404280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7404390Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7404450Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7404490Z         try:
2025-01-10T13:49:20.7404620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7404680Z         except KeyError:
2025-01-10T13:49:20.7404790Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7404830Z     
2025-01-10T13:49:20.7404900Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7404970Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7405030Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7405130Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7405190Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7405250Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7405340Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7405340Z 
2025-01-10T13:49:20.7405440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7405540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7405540Z 
2025-01-10T13:49:20.7405650Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7405710Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7405800Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7405850Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7405970Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7406020Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7406100Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7406170Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7406220Z err_msg = None
2025-01-10T13:49:20.7406230Z 
2025-01-10T13:49:20.7406310Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7406410Z         if err_msg is None:
2025-01-10T13:49:20.7406560Z             if left.shape != right.shape:
2025-01-10T13:49:20.7406620Z                 raise_assert_detail(
2025-01-10T13:49:20.7406740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7406780Z                 )
2025-01-10T13:49:20.7406830Z     
2025-01-10T13:49:20.7406880Z             diff = 0
2025-01-10T13:49:20.7406960Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7407020Z                 # count up differences
2025-01-10T13:49:20.7407160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7407210Z                     diff += 1
2025-01-10T13:49:20.7407260Z     
2025-01-10T13:49:20.7407320Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7407420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7407560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7407640Z E           AssertionError: Series are different
2025-01-10T13:49:20.7407690Z E           
2025-01-10T13:49:20.7407760Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7408070Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7408380Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7408740Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7408740Z 
2025-01-10T13:49:20.7408980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7409140Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-01-10T13:49:20.7409140Z 
2025-01-10T13:49:20.7409250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7409350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7409430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7409530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7409630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7409710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7409750Z err_msg = None
2025-01-10T13:49:20.7409760Z 
2025-01-10T13:49:20.7409840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7409910Z         if err_msg is None:
2025-01-10T13:49:20.7409980Z             if left.shape != right.shape:
2025-01-10T13:49:20.7410040Z                 raise_assert_detail(
2025-01-10T13:49:20.7410240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7410300Z                 )
2025-01-10T13:49:20.7410340Z     
2025-01-10T13:49:20.7410470Z             diff = 0
2025-01-10T13:49:20.7410550Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7410620Z                 # count up differences
2025-01-10T13:49:20.7410750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7410800Z                     diff += 1
2025-01-10T13:49:20.7410840Z     
2025-01-10T13:49:20.7410900Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7411010Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7411140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7411230Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7411280Z E           
2025-01-10T13:49:20.7411370Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7411580Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7411800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7411800Z 
2025-01-10T13:49:20.7412060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7412150Z 
2025-01-10T13:49:20.7412310Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7412310Z 
2025-01-10T13:49:20.7412480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0ae70>
2025-01-10T13:49:20.7412630Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>, attr = 'nu'
2025-01-10T13:49:20.7412640Z 
2025-01-10T13:49:20.7412740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7412830Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7412890Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7412930Z         try:
2025-01-10T13:49:20.7413040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7413110Z         except KeyError:
2025-01-10T13:49:20.7413220Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7413270Z     
2025-01-10T13:49:20.7413320Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7413400Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7413450Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7413580Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7413890Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7413970Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7414060Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7414070Z 
2025-01-10T13:49:20.7414170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7414270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7414420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7414470Z     ???
2025-01-10T13:49:20.7414560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7414560Z 
2025-01-10T13:49:20.7414600Z >   ???
2025-01-10T13:49:20.7414720Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7414800Z E   
2025-01-10T13:49:20.7414920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7415000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7415330Z E          ...
2025-01-10T13:49:20.7415410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7415510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7415620Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7415670Z E          ...
2025-01-10T13:49:20.7415750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7415870Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7415960Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7415970Z 
2025-01-10T13:49:20.7416050Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7416250Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-01-10T13:49:20.7416260Z 
2025-01-10T13:49:20.7416370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7416470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7416560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7416680Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7416810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7416910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7416980Z err_msg = None
2025-01-10T13:49:20.7416990Z 
2025-01-10T13:49:20.7417100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7417170Z         if err_msg is None:
2025-01-10T13:49:20.7417250Z             if left.shape != right.shape:
2025-01-10T13:49:20.7417730Z                 raise_assert_detail(
2025-01-10T13:49:20.7417860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7417910Z                 )
2025-01-10T13:49:20.7417960Z     
2025-01-10T13:49:20.7418020Z             diff = 0
2025-01-10T13:49:20.7418130Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7418200Z                 # count up differences
2025-01-10T13:49:20.7418320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7418380Z                     diff += 1
2025-01-10T13:49:20.7418430Z     
2025-01-10T13:49:20.7418490Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7418600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7418730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7418820Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7418860Z E           
2025-01-10T13:49:20.7418950Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7419160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7419360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7419360Z 
2025-01-10T13:49:20.7419590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7419590Z 
2025-01-10T13:49:20.7419720Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7419720Z 
2025-01-10T13:49:20.7419880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0af30>
2025-01-10T13:49:20.7420070Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>
2025-01-10T13:49:20.7420130Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7420130Z 
2025-01-10T13:49:20.7420230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7420310Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7420370Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7420410Z         try:
2025-01-10T13:49:20.7420510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7420560Z         except KeyError:
2025-01-10T13:49:20.7420670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7420710Z     
2025-01-10T13:49:20.7420780Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7420840Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7420900Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7420990Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7421060Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7421110Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7421200Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7421200Z 
2025-01-10T13:49:20.7421290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7421370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7421480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7421520Z     ???
2025-01-10T13:49:20.7421600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7421600Z 
2025-01-10T13:49:20.7421690Z >   ???
2025-01-10T13:49:20.7421790Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7421830Z E   
2025-01-10T13:49:20.7421920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7422010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7422060Z E          ...
2025-01-10T13:49:20.7422120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7422220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7422300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7422350Z E          ...
2025-01-10T13:49:20.7422410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7422510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7422800Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7422820Z 
2025-01-10T13:49:20.7422900Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7423100Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-01-10T13:49:20.7423110Z 
2025-01-10T13:49:20.7423210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7423350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7423450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7423550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7423660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7423730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7423780Z err_msg = None
2025-01-10T13:49:20.7423790Z 
2025-01-10T13:49:20.7423890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7423960Z         if err_msg is None:
2025-01-10T13:49:20.7424040Z             if left.shape != right.shape:
2025-01-10T13:49:20.7424120Z                 raise_assert_detail(
2025-01-10T13:49:20.7424270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7424340Z                 )
2025-01-10T13:49:20.7424410Z     
2025-01-10T13:49:20.7424660Z             diff = 0
2025-01-10T13:49:20.7424770Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7424830Z                 # count up differences
2025-01-10T13:49:20.7424970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7425020Z                     diff += 1
2025-01-10T13:49:20.7425070Z     
2025-01-10T13:49:20.7425130Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7425240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7425370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7425460Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7425510Z E           
2025-01-10T13:49:20.7425590Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7425800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7426010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7426010Z 
2025-01-10T13:49:20.7426250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7426310Z 
2025-01-10T13:49:20.7426450Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7426450Z 
2025-01-10T13:49:20.7426610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0aff0>
2025-01-10T13:49:20.7426760Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>, attr = 'f_lu'
2025-01-10T13:49:20.7426770Z 
2025-01-10T13:49:20.7426870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7426960Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7427010Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7427060Z         try:
2025-01-10T13:49:20.7427170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7427220Z         except KeyError:
2025-01-10T13:49:20.7427320Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7427360Z     
2025-01-10T13:49:20.7427420Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7427490Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7427550Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7427650Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7427710Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7427770Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7427860Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7427860Z 
2025-01-10T13:49:20.7427950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7428040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7428140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7428190Z     ???
2025-01-10T13:49:20.7428270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7428280Z 
2025-01-10T13:49:20.7428320Z >   ???
2025-01-10T13:49:20.7428420Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7428460Z E   
2025-01-10T13:49:20.7428550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7428630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7428730Z E          ...
2025-01-10T13:49:20.7428800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7428890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7428970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7429020Z E          ...
2025-01-10T13:49:20.7429080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7429180Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7429250Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7429250Z 
2025-01-10T13:49:20.7429320Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7429480Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-01-10T13:49:20.7429480Z 
2025-01-10T13:49:20.7429580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7429690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7429760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7429870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7429980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7430050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7430110Z err_msg = None
2025-01-10T13:49:20.7430120Z 
2025-01-10T13:49:20.7430210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7430260Z         if err_msg is None:
2025-01-10T13:49:20.7430330Z             if left.shape != right.shape:
2025-01-10T13:49:20.7430460Z                 raise_assert_detail(
2025-01-10T13:49:20.7430570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7430620Z                 )
2025-01-10T13:49:20.7430660Z     
2025-01-10T13:49:20.7430720Z             diff = 0
2025-01-10T13:49:20.7430800Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7430860Z                 # count up differences
2025-01-10T13:49:20.7431000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7431050Z                     diff += 1
2025-01-10T13:49:20.7431090Z     
2025-01-10T13:49:20.7431160Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7431260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7431400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7431480Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7431520Z E           
2025-01-10T13:49:20.7431610Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7431810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7432010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7432010Z 
2025-01-10T13:49:20.7432240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7432250Z 
2025-01-10T13:49:20.7432370Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7432370Z 
2025-01-10T13:49:20.7432540Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0b770>
2025-01-10T13:49:20.7432810Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>
2025-01-10T13:49:20.7432870Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7432880Z 
2025-01-10T13:49:20.7432980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7433060Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7433120Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7433160Z         try:
2025-01-10T13:49:20.7433270Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7433320Z         except KeyError:
2025-01-10T13:49:20.7433420Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7433460Z     
2025-01-10T13:49:20.7433530Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7433590Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7433650Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7433750Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7433810Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7433870Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7433950Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7433990Z             else:
2025-01-10T13:49:20.7434060Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7434140Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7434140Z 
2025-01-10T13:49:20.7434230Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7434320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7434420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7434620Z     ???
2025-01-10T13:49:20.7434700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7434710Z 
2025-01-10T13:49:20.7434750Z >   ???
2025-01-10T13:49:20.7434840Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7434900Z E   
2025-01-10T13:49:20.7435000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7435080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7435120Z E          ...
2025-01-10T13:49:20.7435180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7435280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7435360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7435410Z E          ...
2025-01-10T13:49:20.7435470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7435570Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7435640Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7435650Z 
2025-01-10T13:49:20.7435710Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7435860Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-01-10T13:49:20.7435870Z 
2025-01-10T13:49:20.7435970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7436090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7436160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7436260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7436360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7436440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7436490Z err_msg = None
2025-01-10T13:49:20.7436490Z 
2025-01-10T13:49:20.7436580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7436640Z         if err_msg is None:
2025-01-10T13:49:20.7436710Z             if left.shape != right.shape:
2025-01-10T13:49:20.7436770Z                 raise_assert_detail(
2025-01-10T13:49:20.7436960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7437010Z                 )
2025-01-10T13:49:20.7437060Z     
2025-01-10T13:49:20.7437110Z             diff = 0
2025-01-10T13:49:20.7437190Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7437260Z                 # count up differences
2025-01-10T13:49:20.7437390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7437440Z                     diff += 1
2025-01-10T13:49:20.7437480Z     
2025-01-10T13:49:20.7437540Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7437670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7437840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7437940Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7437980Z E           
2025-01-10T13:49:20.7438070Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7438300Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7438550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7438660Z 
2025-01-10T13:49:20.7438940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7438950Z 
2025-01-10T13:49:20.7439110Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7439110Z 
2025-01-10T13:49:20.7439310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0b830>
2025-01-10T13:49:20.7439450Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>
2025-01-10T13:49:20.7439540Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7439540Z 
2025-01-10T13:49:20.7439660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7439780Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7439840Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7439890Z         try:
2025-01-10T13:49:20.7440010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7440080Z         except KeyError:
2025-01-10T13:49:20.7440180Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7440240Z     
2025-01-10T13:49:20.7440290Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7440390Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7440460Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7440560Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7440630Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7440690Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7440790Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7440850Z             else:
2025-01-10T13:49:20.7440920Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7441000Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7441000Z 
2025-01-10T13:49:20.7441100Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7441190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7441300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7441350Z     ???
2025-01-10T13:49:20.7441500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7441510Z 
2025-01-10T13:49:20.7441560Z >   ???
2025-01-10T13:49:20.7441650Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7441690Z E   
2025-01-10T13:49:20.7441790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7441870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7441920Z E          ...
2025-01-10T13:49:20.7441990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7442080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7442160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7442210Z E          ...
2025-01-10T13:49:20.7442280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7442370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7442450Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7442450Z 
2025-01-10T13:49:20.7442520Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7442670Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-01-10T13:49:20.7442670Z 
2025-01-10T13:49:20.7442770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7442870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7442950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7443050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7443250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7443320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7443370Z err_msg = None
2025-01-10T13:49:20.7443370Z 
2025-01-10T13:49:20.7443450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7443510Z         if err_msg is None:
2025-01-10T13:49:20.7443590Z             if left.shape != right.shape:
2025-01-10T13:49:20.7443670Z                 raise_assert_detail(
2025-01-10T13:49:20.7443780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7443830Z                 )
2025-01-10T13:49:20.7443870Z     
2025-01-10T13:49:20.7443920Z             diff = 0
2025-01-10T13:49:20.7444000Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7444060Z                 # count up differences
2025-01-10T13:49:20.7444200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7444260Z                     diff += 1
2025-01-10T13:49:20.7444330Z     
2025-01-10T13:49:20.7444390Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7444490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7444630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7444710Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7444760Z E           
2025-01-10T13:49:20.7444840Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7445060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7445280Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7445360Z 
2025-01-10T13:49:20.7445600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7445600Z 
2025-01-10T13:49:20.7445730Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7445740Z 
2025-01-10T13:49:20.7445900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb0b9b0>
2025-01-10T13:49:20.7446090Z plasma = <tardis.plasma.base.BasePlasma object at 0x11bb09400>, attr = 'j_blues'
2025-01-10T13:49:20.7446090Z 
2025-01-10T13:49:20.7446200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7446280Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7446340Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7446390Z         try:
2025-01-10T13:49:20.7446490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7446560Z         except KeyError:
2025-01-10T13:49:20.7446670Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7446720Z     
2025-01-10T13:49:20.7446780Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7446840Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7449120Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7449120Z 
2025-01-10T13:49:20.7449660Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-01-10T13:49:20.7449670Z 
2025-01-10T13:49:20.7449920Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7450030Z 
2025-01-10T13:49:20.7450560Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-01-10T13:49:20.7450570Z 
2025-01-10T13:49:20.7450840Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7450850Z 
2025-01-10T13:49:20.7451400Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-01-10T13:49:20.7451410Z 
2025-01-10T13:49:20.7457970Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7457990Z 
2025-01-10T13:49:20.7458600Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-01-10T13:49:20.7458630Z 
2025-01-10T13:49:20.7458900Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7458900Z 
2025-01-10T13:49:20.7459450Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-01-10T13:49:20.7459450Z 
2025-01-10T13:49:20.7459720Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7459720Z 
2025-01-10T13:49:20.7460260Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-01-10T13:49:20.7460270Z 
2025-01-10T13:49:20.7460560Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7460570Z 
2025-01-10T13:49:20.7461780Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-01-10T13:49:20.7461780Z 
2025-01-10T13:49:20.7462050Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7462060Z 
2025-01-10T13:49:20.7462590Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-01-10T13:49:20.7462600Z 
2025-01-10T13:49:20.7462840Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7462850Z 
2025-01-10T13:49:20.7463380Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-01-10T13:49:20.7463380Z 
2025-01-10T13:49:20.7463630Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7463630Z 
2025-01-10T13:49:20.7464120Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-01-10T13:49:20.7464130Z 
2025-01-10T13:49:20.7464370Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7464380Z 
2025-01-10T13:49:20.7464910Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-01-10T13:49:20.7465110Z 
2025-01-10T13:49:20.7465370Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7465370Z 
2025-01-10T13:49:20.7465900Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-01-10T13:49:20.7465910Z 
2025-01-10T13:49:20.7466150Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7466150Z 
2025-01-10T13:49:20.7466650Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl7__.h5
2025-01-10T13:49:20.7466660Z 
2025-01-10T13:49:20.7466900Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7466900Z 
2025-01-10T13:49:20.7467450Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-01-10T13:49:20.7467450Z 
2025-01-10T13:49:20.7467700Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7467700Z 
2025-01-10T13:49:20.7468200Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-01-10T13:49:20.7468200Z 
2025-01-10T13:49:20.7468450Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7468460Z 
2025-01-10T13:49:20.7469020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-01-10T13:49:20.7469030Z 
2025-01-10T13:49:20.7469280Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7469280Z 
2025-01-10T13:49:20.7469780Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-01-10T13:49:20.7469780Z 
2025-01-10T13:49:20.7470030Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7470030Z 
2025-01-10T13:49:20.7470540Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-01-10T13:49:20.7470550Z 
2025-01-10T13:49:20.7470800Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7470800Z 
2025-01-10T13:49:20.7471310Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-01-10T13:49:20.7471310Z 
2025-01-10T13:49:20.7471560Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7471560Z 
2025-01-10T13:49:20.7472100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-01-10T13:49:20.7472170Z 
2025-01-10T13:49:20.7472420Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7472420Z 
2025-01-10T13:49:20.7473980Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-01-10T13:49:20.7474000Z 
2025-01-10T13:49:20.7474760Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7474780Z 
2025-01-10T13:49:20.7476570Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-01-10T13:49:20.7476570Z 
2025-01-10T13:49:20.7476850Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7476860Z 
2025-01-10T13:49:20.7482240Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-01-10T13:49:20.7482260Z 
2025-01-10T13:49:20.7482520Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7482520Z 
2025-01-10T13:49:20.7483020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply7__.h5
2025-01-10T13:49:20.7483020Z 
2025-01-10T13:49:20.7483260Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7483270Z 
2025-01-10T13:49:20.7483800Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-01-10T13:49:20.7483800Z 
2025-01-10T13:49:20.7484050Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7484390Z 
2025-01-10T13:49:20.7484900Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-01-10T13:49:20.7484900Z 
2025-01-10T13:49:20.7485150Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7485150Z 
2025-01-10T13:49:20.7485640Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-01-10T13:49:20.7485650Z 
2025-01-10T13:49:20.7485890Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7485900Z 
2025-01-10T13:49:20.7486400Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-01-10T13:49:20.7486410Z 
2025-01-10T13:49:20.7486650Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7486650Z 
2025-01-10T13:49:20.7487190Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-01-10T13:49:20.7487190Z 
2025-01-10T13:49:20.7487430Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7487550Z 
2025-01-10T13:49:20.7488100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-01-10T13:49:20.7488100Z 
2025-01-10T13:49:20.7488350Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7488350Z 
2025-01-10T13:49:20.7488880Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-01-10T13:49:20.7488880Z 
2025-01-10T13:49:20.7489120Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7489130Z 
2025-01-10T13:49:20.7489660Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-01-10T13:49:20.7489660Z 
2025-01-10T13:49:20.7489900Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7489910Z 
2025-01-10T13:49:20.7490410Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-01-10T13:49:20.7490420Z 
2025-01-10T13:49:20.7490660Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7490660Z 
2025-01-10T13:49:20.7491160Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-01-10T13:49:20.7491170Z 
2025-01-10T13:49:20.7491410Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7491410Z 
2025-01-10T13:49:20.7492000Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-01-10T13:49:20.7492010Z 
2025-01-10T13:49:20.7492250Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7492250Z 
2025-01-10T13:49:20.7492750Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-01-10T13:49:20.7492750Z 
2025-01-10T13:49:20.7492990Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7493000Z 
2025-01-10T13:49:20.7493530Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-01-10T13:49:20.7493530Z 
2025-01-10T13:49:20.7493780Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7493780Z 
2025-01-10T13:49:20.7494310Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-01-10T13:49:20.7494310Z 
2025-01-10T13:49:20.7494550Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7494550Z 
2025-01-10T13:49:20.7495060Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-01-10T13:49:20.7495110Z 
2025-01-10T13:49:20.7495350Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7495360Z 
2025-01-10T13:49:20.7495890Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-01-10T13:49:20.7495890Z 
2025-01-10T13:49:20.7496140Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7496140Z 
2025-01-10T13:49:20.7496640Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-01-10T13:49:20.7496650Z 
2025-01-10T13:49:20.7496890Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:130: UnclosedFileWarning:
2025-01-10T13:49:20.7496890Z 
2025-01-10T13:49:20.7497400Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-01-10T13:49:20.7497400Z 
2025-01-10T13:49:20.7497470Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7497580Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7497650Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7497710Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7497800Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7497840Z             else:
2025-01-10T13:49:20.7497910Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7497990Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7498000Z 
2025-01-10T13:49:20.7498090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7498190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7498610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7498690Z     ???
2025-01-10T13:49:20.7498770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7498780Z 
2025-01-10T13:49:20.7498830Z >   ???
2025-01-10T13:49:20.7498920Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7498960Z E   
2025-01-10T13:49:20.7499060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7499150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7499190Z E          ...
2025-01-10T13:49:20.7499270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7499360Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7499450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7499500Z E          ...
2025-01-10T13:49:20.7499560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7499660Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7499730Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7499730Z 
2025-01-10T13:49:20.7499800Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7499950Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-01-10T13:49:20.7499950Z 
2025-01-10T13:49:20.7500060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7500160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7500240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7500350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7500700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7500770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7500820Z err_msg = None
2025-01-10T13:49:20.7500830Z 
2025-01-10T13:49:20.7500920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7500970Z         if err_msg is None:
2025-01-10T13:49:20.7501040Z             if left.shape != right.shape:
2025-01-10T13:49:20.7501100Z                 raise_assert_detail(
2025-01-10T13:49:20.7501220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7501260Z                 )
2025-01-10T13:49:20.7501300Z     
2025-01-10T13:49:20.7501350Z             diff = 0
2025-01-10T13:49:20.7501430Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7501500Z                 # count up differences
2025-01-10T13:49:20.7501630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7501690Z                     diff += 1
2025-01-10T13:49:20.7501740Z     
2025-01-10T13:49:20.7501800Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7501910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7502040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7502130Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7502180Z E           
2025-01-10T13:49:20.7502260Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7502470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7502780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7502780Z 
2025-01-10T13:49:20.7503020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7503030Z 
2025-01-10T13:49:20.7503160Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7503160Z 
2025-01-10T13:49:20.7503330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb30770>
2025-01-10T13:49:20.7503480Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>, attr = 'lines'
2025-01-10T13:49:20.7503490Z 
2025-01-10T13:49:20.7503590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7503680Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7503750Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7503790Z         try:
2025-01-10T13:49:20.7503900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7503950Z         except KeyError:
2025-01-10T13:49:20.7504060Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7504110Z     
2025-01-10T13:49:20.7504170Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7504230Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7504290Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7504400Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7504460Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7504530Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7504600Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7504710Z             else:
2025-01-10T13:49:20.7504780Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7504860Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7504860Z 
2025-01-10T13:49:20.7504950Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7505040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7505150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7505200Z     ???
2025-01-10T13:49:20.7505290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7505290Z 
2025-01-10T13:49:20.7505330Z >   ???
2025-01-10T13:49:20.7505430Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7505470Z E   
2025-01-10T13:49:20.7505570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7505650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7505700Z E          ...
2025-01-10T13:49:20.7505760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7505860Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7505940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7506000Z E          ...
2025-01-10T13:49:20.7506060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7506160Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7506230Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7506240Z 
2025-01-10T13:49:20.7506290Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7506470Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-01-10T13:49:20.7506470Z 
2025-01-10T13:49:20.7506630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb30830>
2025-01-10T13:49:20.7506760Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>
2025-01-10T13:49:20.7506820Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7506830Z 
2025-01-10T13:49:20.7506930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7507010Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7507120Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7507170Z         try:
2025-01-10T13:49:20.7507290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7507340Z         except KeyError:
2025-01-10T13:49:20.7507440Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7507490Z     
2025-01-10T13:49:20.7507540Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7507610Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7507670Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7507780Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7507830Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7507900Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7507980Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7507980Z 
2025-01-10T13:49:20.7508080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7508170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7508170Z 
2025-01-10T13:49:20.7508280Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7508340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7508430Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7508480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7508590Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7508650Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7508730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7508840Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7508890Z err_msg = None
2025-01-10T13:49:20.7508900Z 
2025-01-10T13:49:20.7508970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7509030Z         if err_msg is None:
2025-01-10T13:49:20.7509100Z             if left.shape != right.shape:
2025-01-10T13:49:20.7509160Z                 raise_assert_detail(
2025-01-10T13:49:20.7509270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7509320Z                 )
2025-01-10T13:49:20.7509360Z     
2025-01-10T13:49:20.7509400Z             diff = 0
2025-01-10T13:49:20.7509490Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7509550Z                 # count up differences
2025-01-10T13:49:20.7509680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7509730Z                     diff += 1
2025-01-10T13:49:20.7509780Z     
2025-01-10T13:49:20.7509840Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7509950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7510080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7510160Z E           AssertionError: Series are different
2025-01-10T13:49:20.7510200Z E           
2025-01-10T13:49:20.7510280Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7510580Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7510910Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7511190Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7511190Z 
2025-01-10T13:49:20.7511440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7511610Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-01-10T13:49:20.7511620Z 
2025-01-10T13:49:20.7511790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb308f0>
2025-01-10T13:49:20.7511910Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>
2025-01-10T13:49:20.7511980Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7511990Z 
2025-01-10T13:49:20.7512090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7512170Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7512230Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7512280Z         try:
2025-01-10T13:49:20.7512380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7512430Z         except KeyError:
2025-01-10T13:49:20.7512540Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7512580Z     
2025-01-10T13:49:20.7512640Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7512710Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7512820Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7512920Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7512980Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7513040Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7513130Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7513140Z 
2025-01-10T13:49:20.7513230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7513320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7513320Z 
2025-01-10T13:49:20.7513430Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7513490Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7513570Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7513630Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7513740Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7513790Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7513880Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7513930Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7513980Z err_msg = None
2025-01-10T13:49:20.7513990Z 
2025-01-10T13:49:20.7514060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7514120Z         if err_msg is None:
2025-01-10T13:49:20.7514190Z             if left.shape != right.shape:
2025-01-10T13:49:20.7514240Z                 raise_assert_detail(
2025-01-10T13:49:20.7514350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7514400Z                 )
2025-01-10T13:49:20.7514440Z     
2025-01-10T13:49:20.7514480Z             diff = 0
2025-01-10T13:49:20.7514570Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7514630Z                 # count up differences
2025-01-10T13:49:20.7514770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7514820Z                     diff += 1
2025-01-10T13:49:20.7514870Z     
2025-01-10T13:49:20.7515250Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7515380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7515510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7515590Z E           AssertionError: Series are different
2025-01-10T13:49:20.7515630Z E           
2025-01-10T13:49:20.7515710Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7516010Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7516310Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7516620Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7517180Z 
2025-01-10T13:49:20.7517440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7517590Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-01-10T13:49:20.7517590Z 
2025-01-10T13:49:20.7517700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7517800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7517870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7517980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7518080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7518150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7518200Z err_msg = None
2025-01-10T13:49:20.7518200Z 
2025-01-10T13:49:20.7518280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7518340Z         if err_msg is None:
2025-01-10T13:49:20.7518410Z             if left.shape != right.shape:
2025-01-10T13:49:20.7518460Z                 raise_assert_detail(
2025-01-10T13:49:20.7518580Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7518620Z                 )
2025-01-10T13:49:20.7518670Z     
2025-01-10T13:49:20.7518710Z             diff = 0
2025-01-10T13:49:20.7518790Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7518860Z                 # count up differences
2025-01-10T13:49:20.7518980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7519040Z                     diff += 1
2025-01-10T13:49:20.7519080Z     
2025-01-10T13:49:20.7519150Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7519250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7519390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7519470Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7519580Z E           
2025-01-10T13:49:20.7519670Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7519880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7520090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7520100Z 
2025-01-10T13:49:20.7520330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7520340Z 
2025-01-10T13:49:20.7520470Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7520470Z 
2025-01-10T13:49:20.7520630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb30b30>
2025-01-10T13:49:20.7520790Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>, attr = 'nu'
2025-01-10T13:49:20.7520790Z 
2025-01-10T13:49:20.7520900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7520980Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7521040Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7521080Z         try:
2025-01-10T13:49:20.7521190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7521280Z         except KeyError:
2025-01-10T13:49:20.7521390Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7521430Z     
2025-01-10T13:49:20.7521490Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7521560Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7521620Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7521720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7521780Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7521850Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7521930Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7521930Z 
2025-01-10T13:49:20.7522030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7522110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7522430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7522480Z     ???
2025-01-10T13:49:20.7522560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7522570Z 
2025-01-10T13:49:20.7522610Z >   ???
2025-01-10T13:49:20.7522710Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7522750Z E   
2025-01-10T13:49:20.7522850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7522940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7522980Z E          ...
2025-01-10T13:49:20.7523050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7523140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7523230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7523270Z E          ...
2025-01-10T13:49:20.7523340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7523430Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7523510Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7523510Z 
2025-01-10T13:49:20.7523570Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7523820Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-01-10T13:49:20.7523830Z 
2025-01-10T13:49:20.7523930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7524030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7524110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7524200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7524310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7524380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7524430Z err_msg = None
2025-01-10T13:49:20.7524430Z 
2025-01-10T13:49:20.7524510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7524560Z         if err_msg is None:
2025-01-10T13:49:20.7524630Z             if left.shape != right.shape:
2025-01-10T13:49:20.7524700Z                 raise_assert_detail(
2025-01-10T13:49:20.7524810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7524860Z                 )
2025-01-10T13:49:20.7524910Z     
2025-01-10T13:49:20.7524950Z             diff = 0
2025-01-10T13:49:20.7525040Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7525090Z                 # count up differences
2025-01-10T13:49:20.7525230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7525280Z                     diff += 1
2025-01-10T13:49:20.7525320Z     
2025-01-10T13:49:20.7525380Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7525540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7525680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7525770Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7525810Z E           
2025-01-10T13:49:20.7525900Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7526120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7526320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7526330Z 
2025-01-10T13:49:20.7526560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7526570Z 
2025-01-10T13:49:20.7526700Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7526700Z 
2025-01-10T13:49:20.7526860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb30bf0>
2025-01-10T13:49:20.7526990Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>
2025-01-10T13:49:20.7527040Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7527040Z 
2025-01-10T13:49:20.7527150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7527230Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7527290Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7527330Z         try:
2025-01-10T13:49:20.7527440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7527490Z         except KeyError:
2025-01-10T13:49:20.7527600Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7527650Z     
2025-01-10T13:49:20.7527700Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7527820Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7527880Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7527990Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7528050Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7528120Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7528200Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7528200Z 
2025-01-10T13:49:20.7528300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7528380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7528500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7528540Z     ???
2025-01-10T13:49:20.7528630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7528630Z 
2025-01-10T13:49:20.7528680Z >   ???
2025-01-10T13:49:20.7528780Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7528830Z E   
2025-01-10T13:49:20.7528920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7529000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7529050Z E          ...
2025-01-10T13:49:20.7529120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7529220Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7529310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7529350Z E          ...
2025-01-10T13:49:20.7529410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7529560Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7529640Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7529650Z 
2025-01-10T13:49:20.7529710Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7529860Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-01-10T13:49:20.7529860Z 
2025-01-10T13:49:20.7529960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7530060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7530140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7530240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7530340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7530410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7530470Z err_msg = None
2025-01-10T13:49:20.7530470Z 
2025-01-10T13:49:20.7530550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7530600Z         if err_msg is None:
2025-01-10T13:49:20.7530670Z             if left.shape != right.shape:
2025-01-10T13:49:20.7530720Z                 raise_assert_detail(
2025-01-10T13:49:20.7530830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7530880Z                 )
2025-01-10T13:49:20.7530920Z     
2025-01-10T13:49:20.7530970Z             diff = 0
2025-01-10T13:49:20.7531060Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7531120Z                 # count up differences
2025-01-10T13:49:20.7531250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7531300Z                     diff += 1
2025-01-10T13:49:20.7531340Z     
2025-01-10T13:49:20.7531400Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7531510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7531650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7531940Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7532010Z E           
2025-01-10T13:49:20.7532090Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7532300Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7532520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7532520Z 
2025-01-10T13:49:20.7532760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7532770Z 
2025-01-10T13:49:20.7532900Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7532910Z 
2025-01-10T13:49:20.7533070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb30cb0>
2025-01-10T13:49:20.7533230Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>, attr = 'f_lu'
2025-01-10T13:49:20.7533230Z 
2025-01-10T13:49:20.7533330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7533420Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7533480Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7533520Z         try:
2025-01-10T13:49:20.7533630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7533940Z         except KeyError:
2025-01-10T13:49:20.7534050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7534090Z     
2025-01-10T13:49:20.7534160Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7534220Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7534290Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7534390Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7534450Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7534510Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7534600Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7534600Z 
2025-01-10T13:49:20.7534690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7534780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7534890Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7534930Z     ???
2025-01-10T13:49:20.7535020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7535030Z 
2025-01-10T13:49:20.7535070Z >   ???
2025-01-10T13:49:20.7535170Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7535210Z E   
2025-01-10T13:49:20.7535320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7535400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7535450Z E          ...
2025-01-10T13:49:20.7535510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7535600Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7535690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7535740Z E          ...
2025-01-10T13:49:20.7535800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7535890Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7535980Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7535980Z 
2025-01-10T13:49:20.7536040Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7536260Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-01-10T13:49:20.7536260Z 
2025-01-10T13:49:20.7536370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7536470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7536550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7536650Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7536750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7536820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7542230Z err_msg = None
2025-01-10T13:49:20.7542250Z 
2025-01-10T13:49:20.7542340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7542390Z         if err_msg is None:
2025-01-10T13:49:20.7542460Z             if left.shape != right.shape:
2025-01-10T13:49:20.7542520Z                 raise_assert_detail(
2025-01-10T13:49:20.7542640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7542680Z                 )
2025-01-10T13:49:20.7542720Z     
2025-01-10T13:49:20.7542770Z             diff = 0
2025-01-10T13:49:20.7542850Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7542910Z                 # count up differences
2025-01-10T13:49:20.7543040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7543090Z                     diff += 1
2025-01-10T13:49:20.7543130Z     
2025-01-10T13:49:20.7543190Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7543520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7543660Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7543750Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7543800Z E           
2025-01-10T13:49:20.7543880Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7544090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7544300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7544300Z 
2025-01-10T13:49:20.7544540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7544540Z 
2025-01-10T13:49:20.7544680Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7544680Z 
2025-01-10T13:49:20.7544840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb31430>
2025-01-10T13:49:20.7544970Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>
2025-01-10T13:49:20.7545020Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7545020Z 
2025-01-10T13:49:20.7545130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7545210Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7545260Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7545310Z         try:
2025-01-10T13:49:20.7545420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7545470Z         except KeyError:
2025-01-10T13:49:20.7545580Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7545620Z     
2025-01-10T13:49:20.7545740Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7545810Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7545870Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7545970Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7546030Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7546090Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7546170Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7546220Z             else:
2025-01-10T13:49:20.7546290Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7546370Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7546380Z 
2025-01-10T13:49:20.7546470Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7546550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7546670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7546710Z     ???
2025-01-10T13:49:20.7546800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7546800Z 
2025-01-10T13:49:20.7546840Z >   ???
2025-01-10T13:49:20.7546940Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7546980Z E   
2025-01-10T13:49:20.7547080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7547160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7547210Z E          ...
2025-01-10T13:49:20.7547270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7547370Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7547510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7547550Z E          ...
2025-01-10T13:49:20.7547620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7547710Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7547790Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7547800Z 
2025-01-10T13:49:20.7547860Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7548010Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-01-10T13:49:20.7548010Z 
2025-01-10T13:49:20.7548110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7548220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7548300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7548400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7548500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7548570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7548620Z err_msg = None
2025-01-10T13:49:20.7548620Z 
2025-01-10T13:49:20.7548700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7548760Z         if err_msg is None:
2025-01-10T13:49:20.7548820Z             if left.shape != right.shape:
2025-01-10T13:49:20.7548890Z                 raise_assert_detail(
2025-01-10T13:49:20.7548990Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7549050Z                 )
2025-01-10T13:49:20.7549090Z     
2025-01-10T13:49:20.7549130Z             diff = 0
2025-01-10T13:49:20.7549220Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7549270Z                 # count up differences
2025-01-10T13:49:20.7549410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7549460Z                     diff += 1
2025-01-10T13:49:20.7549510Z     
2025-01-10T13:49:20.7549570Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7549730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7549860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7549950Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7549990Z E           
2025-01-10T13:49:20.7550070Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7550280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7550490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7550490Z 
2025-01-10T13:49:20.7550730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7550740Z 
2025-01-10T13:49:20.7550870Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7550870Z 
2025-01-10T13:49:20.7551040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb314f0>
2025-01-10T13:49:20.7551160Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>
2025-01-10T13:49:20.7551210Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7551210Z 
2025-01-10T13:49:20.7551320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7551450Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7551510Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7551550Z         try:
2025-01-10T13:49:20.7551660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7551720Z         except KeyError:
2025-01-10T13:49:20.7551830Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7551870Z     
2025-01-10T13:49:20.7551930Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7552000Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7552050Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7552160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7552210Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7552280Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7552370Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7552410Z             else:
2025-01-10T13:49:20.7552480Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7552560Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7552560Z 
2025-01-10T13:49:20.7552650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7552740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7552850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7552890Z     ???
2025-01-10T13:49:20.7552980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7552980Z 
2025-01-10T13:49:20.7553030Z >   ???
2025-01-10T13:49:20.7553120Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7553160Z E   
2025-01-10T13:49:20.7553260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7553340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7553390Z E          ...
2025-01-10T13:49:20.7553450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7553550Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7553630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7554130Z E          ...
2025-01-10T13:49:20.7554220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7554320Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7554390Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7554390Z 
2025-01-10T13:49:20.7554450Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7554610Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-01-10T13:49:20.7554610Z 
2025-01-10T13:49:20.7554710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7554820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7554890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7554990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7555090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7555160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7555210Z err_msg = None
2025-01-10T13:49:20.7555220Z 
2025-01-10T13:49:20.7555290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7555350Z         if err_msg is None:
2025-01-10T13:49:20.7555420Z             if left.shape != right.shape:
2025-01-10T13:49:20.7555480Z                 raise_assert_detail(
2025-01-10T13:49:20.7555590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7555630Z                 )
2025-01-10T13:49:20.7555680Z     
2025-01-10T13:49:20.7555960Z             diff = 0
2025-01-10T13:49:20.7556040Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7556100Z                 # count up differences
2025-01-10T13:49:20.7556230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7556290Z                     diff += 1
2025-01-10T13:49:20.7556330Z     
2025-01-10T13:49:20.7556390Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7556500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7556630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7556710Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7556760Z E           
2025-01-10T13:49:20.7556840Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7557040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7557260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7557260Z 
2025-01-10T13:49:20.7557640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7557640Z 
2025-01-10T13:49:20.7557770Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7557780Z 
2025-01-10T13:49:20.7557940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb31670>
2025-01-10T13:49:20.7558100Z plasma = <tardis.plasma.base.BasePlasma object at 0x308fd79e0>, attr = 'j_blues'
2025-01-10T13:49:20.7558110Z 
2025-01-10T13:49:20.7558210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7558300Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7558430Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7558480Z         try:
2025-01-10T13:49:20.7558580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7558640Z         except KeyError:
2025-01-10T13:49:20.7558740Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7558790Z     
2025-01-10T13:49:20.7558840Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7558910Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7558970Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7559080Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7559130Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7559210Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7559290Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7559340Z             else:
2025-01-10T13:49:20.7559400Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7559480Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7559490Z 
2025-01-10T13:49:20.7559580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7559660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7559770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7559810Z     ???
2025-01-10T13:49:20.7559900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7559900Z 
2025-01-10T13:49:20.7559950Z >   ???
2025-01-10T13:49:20.7560050Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7560130Z E   
2025-01-10T13:49:20.7560230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7560310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7560360Z E          ...
2025-01-10T13:49:20.7560420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7560520Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7560610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7560650Z E          ...
2025-01-10T13:49:20.7560720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7560810Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7560890Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7560890Z 
2025-01-10T13:49:20.7560950Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7561110Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-01-10T13:49:20.7561110Z 
2025-01-10T13:49:20.7561210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7561320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7561390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7561490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7561590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7561660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7561720Z err_msg = None
2025-01-10T13:49:20.7561720Z 
2025-01-10T13:49:20.7561800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7561850Z         if err_msg is None:
2025-01-10T13:49:20.7561910Z             if left.shape != right.shape:
2025-01-10T13:49:20.7561970Z                 raise_assert_detail(
2025-01-10T13:49:20.7562080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7562130Z                 )
2025-01-10T13:49:20.7562180Z     
2025-01-10T13:49:20.7562220Z             diff = 0
2025-01-10T13:49:20.7562410Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7562530Z                 # count up differences
2025-01-10T13:49:20.7562670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7562720Z                     diff += 1
2025-01-10T13:49:20.7562770Z     
2025-01-10T13:49:20.7562820Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7562930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7563060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7563160Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7563200Z E           
2025-01-10T13:49:20.7563290Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7563500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7563710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7563710Z 
2025-01-10T13:49:20.7563940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7563950Z 
2025-01-10T13:49:20.7564070Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7564130Z 
2025-01-10T13:49:20.7564300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb323f0>
2025-01-10T13:49:20.7564450Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>, attr = 'lines'
2025-01-10T13:49:20.7564460Z 
2025-01-10T13:49:20.7564560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7564650Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7564700Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7564750Z         try:
2025-01-10T13:49:20.7564850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7564910Z         except KeyError:
2025-01-10T13:49:20.7565010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7565050Z     
2025-01-10T13:49:20.7565110Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7565180Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7565250Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7565340Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7565400Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7565470Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7565560Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7565600Z             else:
2025-01-10T13:49:20.7565670Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7565740Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7565750Z 
2025-01-10T13:49:20.7565840Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7565930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7566040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7566080Z     ???
2025-01-10T13:49:20.7566170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7566180Z 
2025-01-10T13:49:20.7566220Z >   ???
2025-01-10T13:49:20.7566310Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7566360Z E   
2025-01-10T13:49:20.7566450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7566580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7566630Z E          ...
2025-01-10T13:49:20.7566690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7566790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7566870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7566920Z E          ...
2025-01-10T13:49:20.7566980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7567080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7567150Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7567150Z 
2025-01-10T13:49:20.7567220Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7567410Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-01-10T13:49:20.7567420Z 
2025-01-10T13:49:20.7567580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb324b0>
2025-01-10T13:49:20.7567700Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>
2025-01-10T13:49:20.7567770Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7567770Z 
2025-01-10T13:49:20.7567870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7567960Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7568010Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7568070Z         try:
2025-01-10T13:49:20.7568170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7568220Z         except KeyError:
2025-01-10T13:49:20.7568340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7568430Z     
2025-01-10T13:49:20.7568490Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7568560Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7568620Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7568720Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7568780Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7568840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7568930Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7568930Z 
2025-01-10T13:49:20.7569020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7569110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7569110Z 
2025-01-10T13:49:20.7569210Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7569270Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7569360Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7569420Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7569530Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7569590Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7569670Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7569730Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7569780Z err_msg = None
2025-01-10T13:49:20.7569780Z 
2025-01-10T13:49:20.7569860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7569910Z         if err_msg is None:
2025-01-10T13:49:20.7569980Z             if left.shape != right.shape:
2025-01-10T13:49:20.7570040Z                 raise_assert_detail(
2025-01-10T13:49:20.7570150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7570190Z                 )
2025-01-10T13:49:20.7570240Z     
2025-01-10T13:49:20.7570290Z             diff = 0
2025-01-10T13:49:20.7570370Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7570430Z                 # count up differences
2025-01-10T13:49:20.7570870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7570940Z                     diff += 1
2025-01-10T13:49:20.7570980Z     
2025-01-10T13:49:20.7571040Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7571150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7571280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7571360Z E           AssertionError: Series are different
2025-01-10T13:49:20.7571410Z E           
2025-01-10T13:49:20.7571480Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7571790Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7572060Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7572330Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7572480Z 
2025-01-10T13:49:20.7572720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7572920Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-01-10T13:49:20.7572920Z 
2025-01-10T13:49:20.7573090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb32570>
2025-01-10T13:49:20.7573210Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>
2025-01-10T13:49:20.7573270Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7573270Z 
2025-01-10T13:49:20.7573380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7573470Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7573520Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7573560Z         try:
2025-01-10T13:49:20.7573680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7573730Z         except KeyError:
2025-01-10T13:49:20.7573840Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7573880Z     
2025-01-10T13:49:20.7573940Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7574010Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7574070Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7574180Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7574240Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7574310Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7574390Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7574390Z 
2025-01-10T13:49:20.7574480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7574560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7574570Z 
2025-01-10T13:49:20.7574680Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7574730Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7574820Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7574930Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7575040Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7575110Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7575190Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7575240Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7575290Z err_msg = None
2025-01-10T13:49:20.7575290Z 
2025-01-10T13:49:20.7575370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7575420Z         if err_msg is None:
2025-01-10T13:49:20.7575490Z             if left.shape != right.shape:
2025-01-10T13:49:20.7575550Z                 raise_assert_detail(
2025-01-10T13:49:20.7575660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7575710Z                 )
2025-01-10T13:49:20.7575750Z     
2025-01-10T13:49:20.7575800Z             diff = 0
2025-01-10T13:49:20.7575880Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7575940Z                 # count up differences
2025-01-10T13:49:20.7576070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7576130Z                     diff += 1
2025-01-10T13:49:20.7576170Z     
2025-01-10T13:49:20.7576230Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7576330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7576480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7576550Z E           AssertionError: Series are different
2025-01-10T13:49:20.7576640Z E           
2025-01-10T13:49:20.7576730Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7577030Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7577330Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7577640Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7577650Z 
2025-01-10T13:49:20.7577890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7578050Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-01-10T13:49:20.7578050Z 
2025-01-10T13:49:20.7578150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7578250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7578330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7578430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7578580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7578660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7578710Z err_msg = None
2025-01-10T13:49:20.7578710Z 
2025-01-10T13:49:20.7578790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7578850Z         if err_msg is None:
2025-01-10T13:49:20.7578910Z             if left.shape != right.shape:
2025-01-10T13:49:20.7578970Z                 raise_assert_detail(
2025-01-10T13:49:20.7579080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7579130Z                 )
2025-01-10T13:49:20.7579170Z     
2025-01-10T13:49:20.7579230Z             diff = 0
2025-01-10T13:49:20.7579320Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7579390Z                 # count up differences
2025-01-10T13:49:20.7579520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7579570Z                     diff += 1
2025-01-10T13:49:20.7579620Z     
2025-01-10T13:49:20.7579670Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7579780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7579910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7580000Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7580040Z E           
2025-01-10T13:49:20.7580140Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7580340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7580610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7580620Z 
2025-01-10T13:49:20.7580850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7580850Z 
2025-01-10T13:49:20.7580980Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7580980Z 
2025-01-10T13:49:20.7581150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb327b0>
2025-01-10T13:49:20.7581290Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>, attr = 'nu'
2025-01-10T13:49:20.7581300Z 
2025-01-10T13:49:20.7581400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7581490Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7581550Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7581600Z         try:
2025-01-10T13:49:20.7581700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7581750Z         except KeyError:
2025-01-10T13:49:20.7581860Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7581900Z     
2025-01-10T13:49:20.7581960Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7582030Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7582130Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7582240Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7582300Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7582370Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7582450Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7582450Z 
2025-01-10T13:49:20.7582540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7582690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7582800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7582850Z     ???
2025-01-10T13:49:20.7582930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7582940Z 
2025-01-10T13:49:20.7582980Z >   ???
2025-01-10T13:49:20.7583070Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7583120Z E   
2025-01-10T13:49:20.7583210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7583300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7583340Z E          ...
2025-01-10T13:49:20.7583410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7583510Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7583590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7583640Z E          ...
2025-01-10T13:49:20.7583700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7583800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7583870Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7583870Z 
2025-01-10T13:49:20.7583940Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7584100Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-01-10T13:49:20.7584110Z 
2025-01-10T13:49:20.7584210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7584300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7584420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7584530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7584620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7584700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7584740Z err_msg = None
2025-01-10T13:49:20.7584750Z 
2025-01-10T13:49:20.7584830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7584880Z         if err_msg is None:
2025-01-10T13:49:20.7584950Z             if left.shape != right.shape:
2025-01-10T13:49:20.7585000Z                 raise_assert_detail(
2025-01-10T13:49:20.7585120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7585160Z                 )
2025-01-10T13:49:20.7585210Z     
2025-01-10T13:49:20.7585250Z             diff = 0
2025-01-10T13:49:20.7585330Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7585400Z                 # count up differences
2025-01-10T13:49:20.7585520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7585580Z                     diff += 1
2025-01-10T13:49:20.7585630Z     
2025-01-10T13:49:20.7585690Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7585790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7585920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7586010Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7586050Z E           
2025-01-10T13:49:20.7586130Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7586340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7586750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7586760Z 
2025-01-10T13:49:20.7587010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7587010Z 
2025-01-10T13:49:20.7587150Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7587150Z 
2025-01-10T13:49:20.7587320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb32870>
2025-01-10T13:49:20.7587430Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>
2025-01-10T13:49:20.7587490Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7587500Z 
2025-01-10T13:49:20.7587600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7587680Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7587740Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7587790Z         try:
2025-01-10T13:49:20.7587890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7587940Z         except KeyError:
2025-01-10T13:49:20.7588050Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7588090Z     
2025-01-10T13:49:20.7588150Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7588220Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7588280Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7588380Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7592090Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7592590Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7592680Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7592680Z 
2025-01-10T13:49:20.7592770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7592860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7592970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7593030Z     ???
2025-01-10T13:49:20.7593120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7593120Z 
2025-01-10T13:49:20.7593160Z >   ???
2025-01-10T13:49:20.7593250Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7593290Z E   
2025-01-10T13:49:20.7593390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7593470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7593530Z E          ...
2025-01-10T13:49:20.7593590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7593690Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7593770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7593820Z E          ...
2025-01-10T13:49:20.7594030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7594130Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7594210Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7594210Z 
2025-01-10T13:49:20.7594270Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7594430Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-01-10T13:49:20.7594430Z 
2025-01-10T13:49:20.7594530Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7594640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7594710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7594820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7594980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7595060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7595110Z err_msg = None
2025-01-10T13:49:20.7595110Z 
2025-01-10T13:49:20.7595220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7595280Z         if err_msg is None:
2025-01-10T13:49:20.7595340Z             if left.shape != right.shape:
2025-01-10T13:49:20.7595410Z                 raise_assert_detail(
2025-01-10T13:49:20.7595510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7595560Z                 )
2025-01-10T13:49:20.7595600Z     
2025-01-10T13:49:20.7595650Z             diff = 0
2025-01-10T13:49:20.7595740Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7595810Z                 # count up differences
2025-01-10T13:49:20.7595930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7595990Z                     diff += 1
2025-01-10T13:49:20.7596040Z     
2025-01-10T13:49:20.7596090Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7596200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7596330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7596420Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7596470Z E           
2025-01-10T13:49:20.7596560Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7596770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7597030Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7597030Z 
2025-01-10T13:49:20.7597270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7597280Z 
2025-01-10T13:49:20.7597410Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7597410Z 
2025-01-10T13:49:20.7597580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb32930>
2025-01-10T13:49:20.7597720Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>, attr = 'f_lu'
2025-01-10T13:49:20.7597730Z 
2025-01-10T13:49:20.7597840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7597920Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7597970Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7598020Z         try:
2025-01-10T13:49:20.7598130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7598180Z         except KeyError:
2025-01-10T13:49:20.7598280Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7598330Z     
2025-01-10T13:49:20.7598390Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7598460Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7598520Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7598630Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7598690Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7598760Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7598840Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7598840Z 
2025-01-10T13:49:20.7598930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7599060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7599170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7599220Z     ???
2025-01-10T13:49:20.7599300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7599300Z 
2025-01-10T13:49:20.7599350Z >   ???
2025-01-10T13:49:20.7599440Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7599500Z E   
2025-01-10T13:49:20.7599590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7599670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7599720Z E          ...
2025-01-10T13:49:20.7599780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7599880Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7599960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7600010Z E          ...
2025-01-10T13:49:20.7600070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7600170Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7600240Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7600240Z 
2025-01-10T13:49:20.7600310Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7600470Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-01-10T13:49:20.7600470Z 
2025-01-10T13:49:20.7600570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7600670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7600800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7600910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7601010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7601080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7601130Z err_msg = None
2025-01-10T13:49:20.7601130Z 
2025-01-10T13:49:20.7601210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7601260Z         if err_msg is None:
2025-01-10T13:49:20.7601330Z             if left.shape != right.shape:
2025-01-10T13:49:20.7601390Z                 raise_assert_detail(
2025-01-10T13:49:20.7601500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7601540Z                 )
2025-01-10T13:49:20.7601590Z     
2025-01-10T13:49:20.7601630Z             diff = 0
2025-01-10T13:49:20.7601710Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7601780Z                 # count up differences
2025-01-10T13:49:20.7601910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7601960Z                     diff += 1
2025-01-10T13:49:20.7602010Z     
2025-01-10T13:49:20.7602080Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7602180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7602310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7602450Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7602500Z E           
2025-01-10T13:49:20.7602590Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7602790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7603060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7603070Z 
2025-01-10T13:49:20.7603310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7603310Z 
2025-01-10T13:49:20.7603440Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7603440Z 
2025-01-10T13:49:20.7603610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb330b0>
2025-01-10T13:49:20.7603730Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>
2025-01-10T13:49:20.7603780Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7603790Z 
2025-01-10T13:49:20.7603890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7603970Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7604030Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7604080Z         try:
2025-01-10T13:49:20.7604190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7604240Z         except KeyError:
2025-01-10T13:49:20.7604340Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7604380Z     
2025-01-10T13:49:20.7604440Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7604500Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7604570Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7604670Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7604740Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7604840Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7604930Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7604970Z             else:
2025-01-10T13:49:20.7605040Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7605120Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7605120Z 
2025-01-10T13:49:20.7605210Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7605300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7605410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7605450Z     ???
2025-01-10T13:49:20.7605540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7605540Z 
2025-01-10T13:49:20.7605590Z >   ???
2025-01-10T13:49:20.7605680Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7605730Z E   
2025-01-10T13:49:20.7605830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7605910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7605960Z E          ...
2025-01-10T13:49:20.7606020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7606120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7606210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7606250Z E          ...
2025-01-10T13:49:20.7606320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7606410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7606480Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7606490Z 
2025-01-10T13:49:20.7606550Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7606710Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-01-10T13:49:20.7606710Z 
2025-01-10T13:49:20.7606810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7606920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7607000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7607250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7607360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7607440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7607490Z err_msg = None
2025-01-10T13:49:20.7607490Z 
2025-01-10T13:49:20.7607570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7607620Z         if err_msg is None:
2025-01-10T13:49:20.7607690Z             if left.shape != right.shape:
2025-01-10T13:49:20.7607740Z                 raise_assert_detail(
2025-01-10T13:49:20.7607850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7607900Z                 )
2025-01-10T13:49:20.7607950Z     
2025-01-10T13:49:20.7607990Z             diff = 0
2025-01-10T13:49:20.7608080Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7608140Z                 # count up differences
2025-01-10T13:49:20.7608270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7608320Z                     diff += 1
2025-01-10T13:49:20.7608370Z     
2025-01-10T13:49:20.7608430Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7608540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7608670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7608760Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7608800Z E           
2025-01-10T13:49:20.7608880Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7609320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7609530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7609540Z 
2025-01-10T13:49:20.7609770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7609780Z 
2025-01-10T13:49:20.7609900Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7609910Z 
2025-01-10T13:49:20.7610070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb33170>
2025-01-10T13:49:20.7610200Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>
2025-01-10T13:49:20.7610240Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7610250Z 
2025-01-10T13:49:20.7610360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7610440Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7610500Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7610550Z         try:
2025-01-10T13:49:20.7610650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7610710Z         except KeyError:
2025-01-10T13:49:20.7610810Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7610860Z     
2025-01-10T13:49:20.7610920Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7610990Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7611050Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7611160Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7611210Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7611280Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7611420Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7611480Z             else:
2025-01-10T13:49:20.7611550Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7611630Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7611630Z 
2025-01-10T13:49:20.7611720Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7611810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7611920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7611970Z     ???
2025-01-10T13:49:20.7612060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7612060Z 
2025-01-10T13:49:20.7612100Z >   ???
2025-01-10T13:49:20.7612210Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7612250Z E   
2025-01-10T13:49:20.7612350Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7612430Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7612480Z E          ...
2025-01-10T13:49:20.7612540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7612640Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7612730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7612770Z E          ...
2025-01-10T13:49:20.7612830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7612920Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7613000Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7613000Z 
2025-01-10T13:49:20.7613110Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7613280Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-01-10T13:49:20.7613280Z 
2025-01-10T13:49:20.7613380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7613490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7613560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7613660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7613760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7613830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7613880Z err_msg = None
2025-01-10T13:49:20.7613890Z 
2025-01-10T13:49:20.7613970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7614030Z         if err_msg is None:
2025-01-10T13:49:20.7614090Z             if left.shape != right.shape:
2025-01-10T13:49:20.7614150Z                 raise_assert_detail(
2025-01-10T13:49:20.7614250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7614310Z                 )
2025-01-10T13:49:20.7614350Z     
2025-01-10T13:49:20.7614390Z             diff = 0
2025-01-10T13:49:20.7614480Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7614530Z                 # count up differences
2025-01-10T13:49:20.7614670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7614720Z                     diff += 1
2025-01-10T13:49:20.7614760Z     
2025-01-10T13:49:20.7614820Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7614930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7615060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7615150Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7615190Z E           
2025-01-10T13:49:20.7615280Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7615540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7615750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7615750Z 
2025-01-10T13:49:20.7615990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7615990Z 
2025-01-10T13:49:20.7616110Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7616120Z 
2025-01-10T13:49:20.7616290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb332f0>
2025-01-10T13:49:20.7616450Z plasma = <tardis.plasma.base.BasePlasma object at 0x30d778260>, attr = 'j_blues'
2025-01-10T13:49:20.7616450Z 
2025-01-10T13:49:20.7616550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7616640Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7616690Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7616740Z         try:
2025-01-10T13:49:20.7616850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7616900Z         except KeyError:
2025-01-10T13:49:20.7617010Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7617100Z     
2025-01-10T13:49:20.7617160Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7617230Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7617300Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7617400Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7617460Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7617520Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7617610Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7617660Z             else:
2025-01-10T13:49:20.7617720Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7617800Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7617800Z 
2025-01-10T13:49:20.7617890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7617980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7618090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7618130Z     ???
2025-01-10T13:49:20.7618220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7618230Z 
2025-01-10T13:49:20.7618270Z >   ???
2025-01-10T13:49:20.7618360Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7618410Z E   
2025-01-10T13:49:20.7618510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7618590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7618640Z E          ...
2025-01-10T13:49:20.7618700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7618790Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7618880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7618920Z E          ...
2025-01-10T13:49:20.7618980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7619080Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7619150Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7619160Z 
2025-01-10T13:49:20.7619220Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7619460Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-01-10T13:49:20.7619460Z 
2025-01-10T13:49:20.7619570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7619670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7619740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7619840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7619950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7620020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7620070Z err_msg = None
2025-01-10T13:49:20.7620070Z 
2025-01-10T13:49:20.7620150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7620210Z         if err_msg is None:
2025-01-10T13:49:20.7620280Z             if left.shape != right.shape:
2025-01-10T13:49:20.7620330Z                 raise_assert_detail(
2025-01-10T13:49:20.7620450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7620490Z                 )
2025-01-10T13:49:20.7620540Z     
2025-01-10T13:49:20.7620580Z             diff = 0
2025-01-10T13:49:20.7620670Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7620730Z                 # count up differences
2025-01-10T13:49:20.7620860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7620910Z                     diff += 1
2025-01-10T13:49:20.7620960Z     
2025-01-10T13:49:20.7621060Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7621170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7621300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7621380Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7621430Z E           
2025-01-10T13:49:20.7621510Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7621720Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7621930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7621940Z 
2025-01-10T13:49:20.7622180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7622180Z 
2025-01-10T13:49:20.7622310Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7622310Z 
2025-01-10T13:49:20.7622480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb580b0>
2025-01-10T13:49:20.7622630Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>, attr = 'lines'
2025-01-10T13:49:20.7622630Z 
2025-01-10T13:49:20.7622740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7622820Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7622880Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7622920Z         try:
2025-01-10T13:49:20.7623030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7623080Z         except KeyError:
2025-01-10T13:49:20.7623190Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7623230Z     
2025-01-10T13:49:20.7623290Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7623690Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7623780Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7623880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7623940Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7624000Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7624080Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7624130Z             else:
2025-01-10T13:49:20.7624200Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7624280Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7624280Z 
2025-01-10T13:49:20.7624370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7624460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7624570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7624620Z     ???
2025-01-10T13:49:20.7624700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7624700Z 
2025-01-10T13:49:20.7624760Z >   ???
2025-01-10T13:49:20.7624850Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7624890Z E   
2025-01-10T13:49:20.7624990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7625070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7625120Z E          ...
2025-01-10T13:49:20.7625180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7625280Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7625600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7625640Z E          ...
2025-01-10T13:49:20.7625700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7625800Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7625880Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7625880Z 
2025-01-10T13:49:20.7625940Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7626190Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-01-10T13:49:20.7626190Z 
2025-01-10T13:49:20.7626360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58170>
2025-01-10T13:49:20.7626480Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>
2025-01-10T13:49:20.7626540Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7626540Z 
2025-01-10T13:49:20.7626650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7626740Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7626800Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7626840Z         try:
2025-01-10T13:49:20.7626950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7627010Z         except KeyError:
2025-01-10T13:49:20.7627110Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7627150Z     
2025-01-10T13:49:20.7627220Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7627290Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7627350Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7627450Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7627510Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7627580Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7627660Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7627660Z 
2025-01-10T13:49:20.7627760Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7627840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7627840Z 
2025-01-10T13:49:20.7627950Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7628050Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7628140Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7628200Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7628310Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-01-10T13:49:20.7628370Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-01-10T13:49:20.7628450Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7628520Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-01-10T13:49:20.7628560Z err_msg = None
2025-01-10T13:49:20.7628560Z 
2025-01-10T13:49:20.7628650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7628700Z         if err_msg is None:
2025-01-10T13:49:20.7628770Z             if left.shape != right.shape:
2025-01-10T13:49:20.7628820Z                 raise_assert_detail(
2025-01-10T13:49:20.7628930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7628980Z                 )
2025-01-10T13:49:20.7629030Z     
2025-01-10T13:49:20.7629070Z             diff = 0
2025-01-10T13:49:20.7629160Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7629230Z                 # count up differences
2025-01-10T13:49:20.7629350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7629410Z                     diff += 1
2025-01-10T13:49:20.7629450Z     
2025-01-10T13:49:20.7629510Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7629610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7629790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7629870Z E           AssertionError: Series are different
2025-01-10T13:49:20.7629910Z E           
2025-01-10T13:49:20.7629990Z E           Series values are different (4.04858 %)
2025-01-10T13:49:20.7630300Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7630570Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7630840Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7630840Z 
2025-01-10T13:49:20.7631080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7631310Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-01-10T13:49:20.7631320Z 
2025-01-10T13:49:20.7631480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58230>
2025-01-10T13:49:20.7631610Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>
2025-01-10T13:49:20.7631670Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7631670Z 
2025-01-10T13:49:20.7631780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7631910Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7631970Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7632030Z         try:
2025-01-10T13:49:20.7632130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7632190Z         except KeyError:
2025-01-10T13:49:20.7632290Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7632330Z     
2025-01-10T13:49:20.7632390Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7632460Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7632520Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7632620Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7632690Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7632750Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7632830Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7632840Z 
2025-01-10T13:49:20.7632930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7633030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7633030Z 
2025-01-10T13:49:20.7633130Z left = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7633190Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7633270Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7633330Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7633440Z right = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-01-10T13:49:20.7633500Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-01-10T13:49:20.7633620Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-01-10T13:49:20.7633680Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-01-10T13:49:20.7633720Z err_msg = None
2025-01-10T13:49:20.7633730Z 
2025-01-10T13:49:20.7633810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7633870Z         if err_msg is None:
2025-01-10T13:49:20.7633930Z             if left.shape != right.shape:
2025-01-10T13:49:20.7633990Z                 raise_assert_detail(
2025-01-10T13:49:20.7634100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7634150Z                 )
2025-01-10T13:49:20.7634190Z     
2025-01-10T13:49:20.7634230Z             diff = 0
2025-01-10T13:49:20.7634310Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7634380Z                 # count up differences
2025-01-10T13:49:20.7634510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7634560Z                     diff += 1
2025-01-10T13:49:20.7634600Z     
2025-01-10T13:49:20.7634660Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7634770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7634900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7634980Z E           AssertionError: Series are different
2025-01-10T13:49:20.7635020Z E           
2025-01-10T13:49:20.7635100Z E           Series values are different (6.47773 %)
2025-01-10T13:49:20.7635400Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7635750Z E           [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7636060Z E           [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.7636070Z 
2025-01-10T13:49:20.7636300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7636490Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-01-10T13:49:20.7636500Z 
2025-01-10T13:49:20.7636600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7636710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7636780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7636890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7636990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7637050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7637100Z err_msg = None
2025-01-10T13:49:20.7637110Z 
2025-01-10T13:49:20.7637180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7637280Z         if err_msg is None:
2025-01-10T13:49:20.7637350Z             if left.shape != right.shape:
2025-01-10T13:49:20.7637410Z                 raise_assert_detail(
2025-01-10T13:49:20.7637520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7637560Z                 )
2025-01-10T13:49:20.7637610Z     
2025-01-10T13:49:20.7637660Z             diff = 0
2025-01-10T13:49:20.7637740Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7641320Z                 # count up differences
2025-01-10T13:49:20.7641480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7641530Z                     diff += 1
2025-01-10T13:49:20.7641580Z     
2025-01-10T13:49:20.7641640Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7641740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7641880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7641970Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7642020Z E           
2025-01-10T13:49:20.7642100Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7642310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7642640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7642650Z 
2025-01-10T13:49:20.7642880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7642890Z 
2025-01-10T13:49:20.7643020Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7643020Z 
2025-01-10T13:49:20.7643570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58470>
2025-01-10T13:49:20.7643730Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>, attr = 'nu'
2025-01-10T13:49:20.7643730Z 
2025-01-10T13:49:20.7643840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7643920Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7643980Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7644020Z         try:
2025-01-10T13:49:20.7644130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7644180Z         except KeyError:
2025-01-10T13:49:20.7644290Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7644340Z     
2025-01-10T13:49:20.7644400Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7644470Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7644530Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7644630Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7644690Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7644760Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7644850Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7644850Z 
2025-01-10T13:49:20.7644930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7645030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7645140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7645180Z     ???
2025-01-10T13:49:20.7645270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7645500Z 
2025-01-10T13:49:20.7645550Z >   ???
2025-01-10T13:49:20.7645650Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7645700Z E   
2025-01-10T13:49:20.7645800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7645880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7645930Z E          ...
2025-01-10T13:49:20.7645990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7646090Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7646170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7646220Z E          ...
2025-01-10T13:49:20.7646280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7646380Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7646450Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7646450Z 
2025-01-10T13:49:20.7646520Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7646750Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-01-10T13:49:20.7646750Z 
2025-01-10T13:49:20.7646850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7646960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7647030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7647140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7647230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7647300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7647360Z err_msg = None
2025-01-10T13:49:20.7647360Z 
2025-01-10T13:49:20.7647440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7647500Z         if err_msg is None:
2025-01-10T13:49:20.7647560Z             if left.shape != right.shape:
2025-01-10T13:49:20.7647620Z                 raise_assert_detail(
2025-01-10T13:49:20.7647730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7647830Z                 )
2025-01-10T13:49:20.7647880Z     
2025-01-10T13:49:20.7647920Z             diff = 0
2025-01-10T13:49:20.7648010Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7648070Z                 # count up differences
2025-01-10T13:49:20.7648200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7648250Z                     diff += 1
2025-01-10T13:49:20.7648300Z     
2025-01-10T13:49:20.7648360Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7648460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7648590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7648680Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7648730Z E           
2025-01-10T13:49:20.7648810Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7649020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7649230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7649230Z 
2025-01-10T13:49:20.7649510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7649520Z 
2025-01-10T13:49:20.7649640Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7649650Z 
2025-01-10T13:49:20.7649810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58530>
2025-01-10T13:49:20.7649930Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>
2025-01-10T13:49:20.7649980Z attr = 'wavelength_cm'
2025-01-10T13:49:20.7649990Z 
2025-01-10T13:49:20.7650090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7650170Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7650230Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7650270Z         try:
2025-01-10T13:49:20.7650380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7650430Z         except KeyError:
2025-01-10T13:49:20.7650540Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7650580Z     
2025-01-10T13:49:20.7650650Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7650710Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7650770Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7650880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7650940Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7651020Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7651100Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7651100Z 
2025-01-10T13:49:20.7651200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7651280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7651390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7651430Z     ???
2025-01-10T13:49:20.7651520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7651530Z 
2025-01-10T13:49:20.7651570Z >   ???
2025-01-10T13:49:20.7651660Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7651700Z E   
2025-01-10T13:49:20.7651850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7651940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7651980Z E          ...
2025-01-10T13:49:20.7652040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7652140Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7652220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7652260Z E          ...
2025-01-10T13:49:20.7652330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7652420Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7652500Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7652500Z 
2025-01-10T13:49:20.7652560Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7652760Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-01-10T13:49:20.7652770Z 
2025-01-10T13:49:20.7652870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7652970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7653040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7653140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7653250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7653320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7653370Z err_msg = None
2025-01-10T13:49:20.7653370Z 
2025-01-10T13:49:20.7653450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7653550Z         if err_msg is None:
2025-01-10T13:49:20.7653620Z             if left.shape != right.shape:
2025-01-10T13:49:20.7653680Z                 raise_assert_detail(
2025-01-10T13:49:20.7653790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7653840Z                 )
2025-01-10T13:49:20.7653880Z     
2025-01-10T13:49:20.7653920Z             diff = 0
2025-01-10T13:49:20.7654010Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7654060Z                 # count up differences
2025-01-10T13:49:20.7654200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7654250Z                     diff += 1
2025-01-10T13:49:20.7654290Z     
2025-01-10T13:49:20.7654350Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7654460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7654590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7654680Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7654720Z E           
2025-01-10T13:49:20.7654800Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7655020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7655220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7655230Z 
2025-01-10T13:49:20.7655470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7655470Z 
2025-01-10T13:49:20.7655610Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7655610Z 
2025-01-10T13:49:20.7655820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb585f0>
2025-01-10T13:49:20.7655980Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>, attr = 'f_lu'
2025-01-10T13:49:20.7655990Z 
2025-01-10T13:49:20.7656090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7656180Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7656230Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7656280Z         try:
2025-01-10T13:49:20.7656380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7656440Z         except KeyError:
2025-01-10T13:49:20.7656540Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7656580Z     
2025-01-10T13:49:20.7656650Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7656710Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7656770Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7656880Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7656940Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7657000Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7657080Z >               pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7657090Z 
2025-01-10T13:49:20.7657170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-01-10T13:49:20.7657260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7657370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7657420Z     ???
2025-01-10T13:49:20.7657500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7657550Z 
2025-01-10T13:49:20.7657590Z >   ???
2025-01-10T13:49:20.7657690Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7657730Z E   
2025-01-10T13:49:20.7657830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7657910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7657960Z E          ...
2025-01-10T13:49:20.7658020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7658120Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7658200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7658250Z E          ...
2025-01-10T13:49:20.7658310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7658410Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7658480Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7658480Z 
2025-01-10T13:49:20.7658540Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7658760Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-01-10T13:49:20.7658760Z 
2025-01-10T13:49:20.7658860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7658970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7659040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7659140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7659240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7659320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7659360Z err_msg = None
2025-01-10T13:49:20.7659370Z 
2025-01-10T13:49:20.7659440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7659500Z         if err_msg is None:
2025-01-10T13:49:20.7659560Z             if left.shape != right.shape:
2025-01-10T13:49:20.7659630Z                 raise_assert_detail(
2025-01-10T13:49:20.7659880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7659940Z                 )
2025-01-10T13:49:20.7659980Z     
2025-01-10T13:49:20.7660030Z             diff = 0
2025-01-10T13:49:20.7660110Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7660170Z                 # count up differences
2025-01-10T13:49:20.7660300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7660360Z                     diff += 1
2025-01-10T13:49:20.7660400Z     
2025-01-10T13:49:20.7660460Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7660570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7660710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7660790Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7660830Z E           
2025-01-10T13:49:20.7660920Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7661120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7661330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7661490Z 
2025-01-10T13:49:20.7661730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7661730Z 
2025-01-10T13:49:20.7661860Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7661860Z 
2025-01-10T13:49:20.7662030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58d70>
2025-01-10T13:49:20.7662150Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>
2025-01-10T13:49:20.7662200Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7662210Z 
2025-01-10T13:49:20.7662310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7662390Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7662450Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7662490Z         try:
2025-01-10T13:49:20.7662600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7662650Z         except KeyError:
2025-01-10T13:49:20.7662760Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7662800Z     
2025-01-10T13:49:20.7662870Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7662930Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7662990Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7663100Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7663160Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7663220Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7663310Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7663350Z             else:
2025-01-10T13:49:20.7663420Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7663490Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7663500Z 
2025-01-10T13:49:20.7663590Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7663690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7663800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7663850Z     ???
2025-01-10T13:49:20.7663930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7663980Z 
2025-01-10T13:49:20.7664030Z >   ???
2025-01-10T13:49:20.7664120Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7664170Z E   
2025-01-10T13:49:20.7664260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7664350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7664390Z E          ...
2025-01-10T13:49:20.7664460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7664560Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7664640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7664680Z E          ...
2025-01-10T13:49:20.7664750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7664840Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7664910Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7664920Z 
2025-01-10T13:49:20.7664980Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7665200Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-01-10T13:49:20.7665200Z 
2025-01-10T13:49:20.7665310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7665410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7665480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7665590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7665680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7665800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7665850Z err_msg = None
2025-01-10T13:49:20.7665850Z 
2025-01-10T13:49:20.7665930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7665980Z         if err_msg is None:
2025-01-10T13:49:20.7666060Z             if left.shape != right.shape:
2025-01-10T13:49:20.7666110Z                 raise_assert_detail(
2025-01-10T13:49:20.7666220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7666270Z                 )
2025-01-10T13:49:20.7666310Z     
2025-01-10T13:49:20.7666360Z             diff = 0
2025-01-10T13:49:20.7666430Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7666500Z                 # count up differences
2025-01-10T13:49:20.7666630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7666680Z                     diff += 1
2025-01-10T13:49:20.7666730Z     
2025-01-10T13:49:20.7666790Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7666900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7667030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7667120Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7667160Z E           
2025-01-10T13:49:20.7667240Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7667450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7667660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7667660Z 
2025-01-10T13:49:20.7667940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7667940Z 
2025-01-10T13:49:20.7668070Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7668080Z 
2025-01-10T13:49:20.7668250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58e30>
2025-01-10T13:49:20.7668360Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>
2025-01-10T13:49:20.7668410Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7668420Z 
2025-01-10T13:49:20.7668520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7668600Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7668660Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7668710Z         try:
2025-01-10T13:49:20.7668820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7668870Z         except KeyError:
2025-01-10T13:49:20.7668980Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7669030Z     
2025-01-10T13:49:20.7669080Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7669150Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7669210Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7669310Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7669370Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7669430Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7669520Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7669570Z             else:
2025-01-10T13:49:20.7669630Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7669750Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7669760Z 
2025-01-10T13:49:20.7669850Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7669930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7670050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7670090Z     ???
2025-01-10T13:49:20.7670180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7670180Z 
2025-01-10T13:49:20.7670230Z >   ???
2025-01-10T13:49:20.7670320Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7670370Z E   
2025-01-10T13:49:20.7670460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7670540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7670590Z E          ...
2025-01-10T13:49:20.7670660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7670760Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7670840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7670880Z E          ...
2025-01-10T13:49:20.7670950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7671040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7671120Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7671120Z 
2025-01-10T13:49:20.7671180Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7671380Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-01-10T13:49:20.7671390Z 
2025-01-10T13:49:20.7671490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7671590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7671660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7671770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-01-10T13:49:20.7671870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-01-10T13:49:20.7671980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-01-10T13:49:20.7672030Z err_msg = None
2025-01-10T13:49:20.7672030Z 
2025-01-10T13:49:20.7672110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-01-10T13:49:20.7672160Z         if err_msg is None:
2025-01-10T13:49:20.7672230Z             if left.shape != right.shape:
2025-01-10T13:49:20.7672290Z                 raise_assert_detail(
2025-01-10T13:49:20.7672400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-01-10T13:49:20.7672450Z                 )
2025-01-10T13:49:20.7672490Z     
2025-01-10T13:49:20.7672530Z             diff = 0
2025-01-10T13:49:20.7672620Z             for left_arr, right_arr in zip(left, right):
2025-01-10T13:49:20.7672680Z                 # count up differences
2025-01-10T13:49:20.7672810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-01-10T13:49:20.7672860Z                     diff += 1
2025-01-10T13:49:20.7672910Z     
2025-01-10T13:49:20.7672970Z             diff = diff * 100.0 / left.size
2025-01-10T13:49:20.7673080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-01-10T13:49:20.7673210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-01-10T13:49:20.7673290Z E           AssertionError: numpy array are different
2025-01-10T13:49:20.7673340Z E           
2025-01-10T13:49:20.7673420Z E           numpy array values are different (4.04858 %)
2025-01-10T13:49:20.7673630Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7673890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.7673890Z 
2025-01-10T13:49:20.7674130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-01-10T13:49:20.7674130Z 
2025-01-10T13:49:20.7674260Z During handling of the above exception, another exception occurred:
2025-01-10T13:49:20.7674260Z 
2025-01-10T13:49:20.7674430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11bb58fb0>
2025-01-10T13:49:20.7674590Z plasma = <tardis.plasma.base.BasePlasma object at 0x12bb57110>, attr = 'j_blues'
2025-01-10T13:49:20.7674600Z 
2025-01-10T13:49:20.7674700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-01-10T13:49:20.7674780Z     def test_plasma_properties(self, plasma, attr):
2025-01-10T13:49:20.7674840Z         key = f"plasma/{attr}"
2025-01-10T13:49:20.7674880Z         try:
2025-01-10T13:49:20.7674990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-01-10T13:49:20.7675040Z         except KeyError:
2025-01-10T13:49:20.7675150Z             pytest.skip(f"Key {key} not found in regression data")
2025-01-10T13:49:20.7675190Z     
2025-01-10T13:49:20.7675250Z         if hasattr(plasma, attr):
2025-01-10T13:49:20.7675310Z             actual = getattr(plasma, attr)
2025-01-10T13:49:20.7675380Z             if attr == "selected_atoms":
2025-01-10T13:49:20.7675480Z                 npt.assert_allclose(actual.values, expected.values)
2025-01-10T13:49:20.7675540Z             elif actual.ndim == 1:
2025-01-10T13:49:20.7675600Z                 actual = pd.Series(actual)
2025-01-10T13:49:20.7675690Z                 pdt.assert_series_equal(actual, expected)
2025-01-10T13:49:20.7675730Z             else:
2025-01-10T13:49:20.7675800Z                 actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7675880Z >               pdt.assert_frame_equal(actual, expected)
2025-01-10T13:49:20.7676040Z 
2025-01-10T13:49:20.7676140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-01-10T13:49:20.7676230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7676340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7676390Z     ???
2025-01-10T13:49:20.7676470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7676470Z 
2025-01-10T13:49:20.7676520Z >   ???
2025-01-10T13:49:20.7676610Z E   AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.7676650Z E   
2025-01-10T13:49:20.7676740Z E   MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.7676830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7676880Z E          ...
2025-01-10T13:49:20.7676940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7677040Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7677120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.7677170Z E          ...
2025-01-10T13:49:20.7677240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.7677330Z E         dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.7677410Z E   At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.7677410Z 
2025-01-10T13:49:20.7677480Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7677600Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-01-10T13:49:20.7677610Z 
2025-01-10T13:49:20.7677780Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7678290Z attr = 'stimulated_emission_factor'
2025-01-10T13:49:20.7678490Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x133e7ec30>
2025-01-10T13:49:20.7678490Z 
2025-01-10T13:49:20.7678600Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7678740Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7678830Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7678930Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7679030Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7679090Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7679150Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7679220Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7679230Z 
2025-01-10T13:49:20.7679300Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7679390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7679390Z 
2025-01-10T13:49:20.7679630Z args = (<function assert_allclose.<locals>.compare at 0x30f93db20>, array([[0.        , 0.        , 0.        , ..., 0.      ...1,
2025-01-10T13:49:20.7679680Z         0.01476858],
2025-01-10T13:49:20.7679780Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-01-10T13:49:20.7679830Z         0.01473787]]))
2025-01-10T13:49:20.7680030Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7680040Z 
2025-01-10T13:49:20.7680090Z     @wraps(func)
2025-01-10T13:49:20.7680150Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7680210Z         with self._recreate_cm():
2025-01-10T13:49:20.7680280Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7680330Z E           AssertionError: 
2025-01-10T13:49:20.7680410Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7680460Z E           
2025-01-10T13:49:20.7680540Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-01-10T13:49:20.7680620Z E           Max absolute difference among violations: 1.
2025-01-10T13:49:20.7680710Z E           Max relative difference among violations: 1.
2025-01-10T13:49:20.7680950Z E            ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.7681040Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.7681120Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:20.7681240Z E            DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.7681320Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.7681400Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:20.7681410Z 
2025-01-10T13:49:20.7681570Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7681700Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-01-10T13:49:20.7681700Z 
2025-01-10T13:49:20.7681870Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7681930Z attr = 'lines_lower_level_index'
2025-01-10T13:49:20.7682190Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x12b921ac0>
2025-01-10T13:49:20.7682190Z 
2025-01-10T13:49:20.7682310Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7682430Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7682530Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7682740Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7682830Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7682990Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7683060Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7683130Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7683130Z 
2025-01-10T13:49:20.7683210Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7683290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7683300Z 
2025-01-10T13:49:20.7683600Z args = (<function assert_allclose.<locals>.compare at 0x30f940860>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-01-10T13:49:20.7683810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7683810Z 
2025-01-10T13:49:20.7683860Z     @wraps(func)
2025-01-10T13:49:20.7683920Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7683970Z         with self._recreate_cm():
2025-01-10T13:49:20.7684040Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7684090Z E           AssertionError: 
2025-01-10T13:49:20.7684180Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7684220Z E           
2025-01-10T13:49:20.7684300Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-01-10T13:49:20.7684380Z E           Max absolute difference among violations: 4005
2025-01-10T13:49:20.7684490Z E           Max relative difference among violations: 26.00649351
2025-01-10T13:49:20.7684590Z E            ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:20.7684690Z E            DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:20.7684690Z 
2025-01-10T13:49:20.7684840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7684960Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-01-10T13:49:20.7684970Z 
2025-01-10T13:49:20.7685140Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7685200Z attr = 'lines_upper_level_index'
2025-01-10T13:49:20.7685400Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x328659a00>
2025-01-10T13:49:20.7685450Z 
2025-01-10T13:49:20.7685570Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7685690Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7685780Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7685880Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7685970Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7686030Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7686090Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7686160Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7686170Z 
2025-01-10T13:49:20.7686240Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7686330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7686330Z 
2025-01-10T13:49:20.7686630Z args = (<function assert_allclose.<locals>.compare at 0x16f9ca8e0>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-01-10T13:49:20.7686840Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7686840Z 
2025-01-10T13:49:20.7686890Z     @wraps(func)
2025-01-10T13:49:20.7686950Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7687010Z         with self._recreate_cm():
2025-01-10T13:49:20.7687070Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7687120Z E           AssertionError: 
2025-01-10T13:49:20.7687210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7687250Z E           
2025-01-10T13:49:20.7687380Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-01-10T13:49:20.7687470Z E           Max absolute difference among violations: 4046
2025-01-10T13:49:20.7687570Z E           Max relative difference among violations: 24.82208589
2025-01-10T13:49:20.7687670Z E            ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:20.7687770Z E            DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:20.7687770Z 
2025-01-10T13:49:20.7687920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7688040Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-01-10T13:49:20.7688040Z 
2025-01-10T13:49:20.7688210Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7688260Z attr = 'beta_sobolev'
2025-01-10T13:49:20.7692160Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x11cdc14f0>
2025-01-10T13:49:20.7692190Z 
2025-01-10T13:49:20.7692330Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7692460Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7692550Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7692640Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7692740Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7692800Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7692870Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7692940Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7692940Z 
2025-01-10T13:49:20.7693020Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7693110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7693110Z 
2025-01-10T13:49:20.7693300Z args = (<function assert_allclose.<locals>.compare at 0x16f9cb2e0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7693360Z        [1., 1., 1.,.....,
2025-01-10T13:49:20.7693410Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7693470Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7693520Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-01-10T13:49:20.7693880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7693880Z 
2025-01-10T13:49:20.7693930Z     @wraps(func)
2025-01-10T13:49:20.7693990Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7694040Z         with self._recreate_cm():
2025-01-10T13:49:20.7694110Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7694160Z E           AssertionError: 
2025-01-10T13:49:20.7694240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7694290Z E           
2025-01-10T13:49:20.7694360Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:20.7694470Z E           Max absolute difference among violations: 0.99984222
2025-01-10T13:49:20.7694570Z E           Max relative difference among violations: 6337.12154973
2025-01-10T13:49:20.7694650Z E            ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7694720Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7694790Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.7694860Z E            DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7694920Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.7694980Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.7694990Z 
2025-01-10T13:49:20.7695140Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7695250Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-01-10T13:49:20.7695260Z 
2025-01-10T13:49:20.7695420Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7695510Z attr = 'lines'
2025-01-10T13:49:20.7695710Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x11bbc1040>
2025-01-10T13:49:20.7695720Z 
2025-01-10T13:49:20.7695830Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7695960Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7696050Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7696150Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7696240Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7696300Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7696360Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7696430Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7696440Z 
2025-01-10T13:49:20.7696510Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7696600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7696600Z 
2025-01-10T13:49:20.7696940Z args = (<function assert_allclose.<locals>.compare at 0x3124b4e00>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02, ....       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-01-10T13:49:20.7697030Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-01-10T13:49:20.7697230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7697230Z 
2025-01-10T13:49:20.7697280Z     @wraps(func)
2025-01-10T13:49:20.7697330Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7697390Z         with self._recreate_cm():
2025-01-10T13:49:20.7697450Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7697500Z E           AssertionError: 
2025-01-10T13:49:20.7697580Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7697620Z E           
2025-01-10T13:49:20.7697710Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-01-10T13:49:20.7697820Z E           Max absolute difference among violations: 4.25260542e+12
2025-01-10T13:49:20.7697920Z E           Max relative difference among violations: 18196.0085861
2025-01-10T13:49:20.7698330Z E            ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:20.7698410Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T13:49:20.7698530Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:20.7698660Z E            DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:20.7698720Z E                   4.043917e+10, 6.677200e-07],
2025-01-10T13:49:20.7698820Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:20.7698830Z 
2025-01-10T13:49:20.7698980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7699100Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-01-10T13:49:20.7699100Z 
2025-01-10T13:49:20.7699270Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7699320Z attr = 'f_lu'
2025-01-10T13:49:20.7699520Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x310736300>
2025-01-10T13:49:20.7699520Z 
2025-01-10T13:49:20.7699640Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7699760Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7699860Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7699950Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7700050Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7700100Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7700400Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7700480Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7700480Z 
2025-01-10T13:49:20.7700560Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7700650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7700660Z 
2025-01-10T13:49:20.7701010Z args = (<function assert_allclose.<locals>.compare at 0x31d44b6a0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, .....), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-01-10T13:49:20.7701090Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-01-10T13:49:20.7701290Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7701290Z 
2025-01-10T13:49:20.7701350Z     @wraps(func)
2025-01-10T13:49:20.7701400Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7701460Z         with self._recreate_cm():
2025-01-10T13:49:20.7701520Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7701580Z E           AssertionError: 
2025-01-10T13:49:20.7701660Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7701710Z E           
2025-01-10T13:49:20.7701780Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-01-10T13:49:20.7701880Z E           Max absolute difference among violations: 2.92713618
2025-01-10T13:49:20.7701980Z E           Max relative difference among violations: 18196.0085861
2025-01-10T13:49:20.7702110Z E            ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:20.7702180Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T13:49:20.7702310Z E            DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:20.7702370Z E                  1.126883e+00, 4.414472e-04])
2025-01-10T13:49:20.7702370Z 
2025-01-10T13:49:20.7702520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7702650Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-01-10T13:49:20.7702650Z 
2025-01-10T13:49:20.7702820Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x12b81aea0>
2025-01-10T13:49:20.7702910Z attr = 'tau_sobolevs'
2025-01-10T13:49:20.7703120Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x11ce99c70>
2025-01-10T13:49:20.7703120Z 
2025-01-10T13:49:20.7703230Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-01-10T13:49:20.7703360Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-01-10T13:49:20.7703450Z         if hasattr(simulation_verysimple.plasma, attr):
2025-01-10T13:49:20.7703550Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-01-10T13:49:20.7703630Z             expected = regression_data.sync_ndarray(actual)
2025-01-10T13:49:20.7703700Z             if hasattr(actual, "cgs"):
2025-01-10T13:49:20.7703760Z                 actual = actual.cgs.value
2025-01-10T13:49:20.7703830Z >           npt.assert_allclose(actual, expected)
2025-01-10T13:49:20.7703840Z 
2025-01-10T13:49:20.7703910Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-01-10T13:49:20.7704000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7704000Z 
2025-01-10T13:49:20.7704340Z args = (<function assert_allclose.<locals>.compare at 0x312097920>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ....       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-01-10T13:49:20.7704420Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-01-10T13:49:20.7704630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7704630Z 
2025-01-10T13:49:20.7704680Z     @wraps(func)
2025-01-10T13:49:20.7704730Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7704790Z         with self._recreate_cm():
2025-01-10T13:49:20.7704890Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7704950Z E           AssertionError: 
2025-01-10T13:49:20.7705030Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7705070Z E           
2025-01-10T13:49:20.7705150Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-01-10T13:49:20.7705260Z E           Max absolute difference among violations: 282815.33818472
2025-01-10T13:49:20.7705360Z E           Max relative difference among violations: 4.12352828e+47
2025-01-10T13:49:20.7705500Z E            ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:20.7705560Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T13:49:20.7705670Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:20.7705800Z E            DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:20.7705860Z E                   0.000000e+00, 0.000000e+00],
2025-01-10T13:49:20.7705970Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:20.7705980Z 
2025-01-10T13:49:20.7706130Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7706260Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-01-10T13:49:20.7706260Z 
2025-01-10T13:49:20.7706420Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7706480Z attr = 'iterations_w'
2025-01-10T13:49:20.7706680Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x130e6a840>
2025-01-10T13:49:20.7706680Z 
2025-01-10T13:49:20.7706750Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7706790Z         "attr",
2025-01-10T13:49:20.7706830Z         [
2025-01-10T13:49:20.7706890Z             "iterations_w",
2025-01-10T13:49:20.7706940Z             "iterations_t_rad",
2025-01-10T13:49:20.7707010Z             "iterations_electron_densities",
2025-01-10T13:49:20.7707070Z             "iterations_t_inner",
2025-01-10T13:49:20.7707120Z         ],
2025-01-10T13:49:20.7707160Z     )
2025-01-10T13:49:20.7707320Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7707440Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:49:20.7707510Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7707560Z             actual = actual.value
2025-01-10T13:49:20.7707630Z         actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7707720Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7707860Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7707860Z 
2025-01-10T13:49:20.7707950Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:49:20.7708030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7708150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7708200Z     ???
2025-01-10T13:49:20.7708290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7708290Z 
2025-01-10T13:49:20.7708330Z >   ???
2025-01-10T13:49:20.7708480Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.7708520Z E   
2025-01-10T13:49:20.7708640Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:20.7708690Z E   [index]: [0, 1]
2025-01-10T13:49:20.7708760Z E   [left]:  [0.40039163797855976, 0.4501364467195908]
2025-01-10T13:49:20.7708840Z E   [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T13:49:20.7708970Z E   At positional index 1, first diff: 0.4501364467195908 != 0.4500690173218345
2025-01-10T13:49:20.7708970Z 
2025-01-10T13:49:20.7709040Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7709160Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.7709610Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:20.7709940Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:20.7710070Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:49:20.7710070Z 
2025-01-10T13:49:20.7710070Z 
2025-01-10T13:49:20.7710250Z Packets:                                                                                   4031/? [04:00<00:00, 11.85it/s] [A
2025-01-10T13:49:20.7710250Z 
2025-01-10T13:49:20.7710420Z Packets:                                                                                   19143/? [04:00<00:00, 102.20it/s][A
2025-01-10T13:49:20.7710420Z 
2025-01-10T13:49:20.7710590Z Packets:                                                                                   34625/? [04:01<00:00, 234.23it/s][A
2025-01-10T13:49:20.7713200Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:01<00:00, 81.94s/it]
2025-01-10T13:49:20.7713240Z 
2025-01-10T13:49:20.7713440Z Packets:                                                                                   44030/? [04:01<00:00, 234.23it/s][A
2025-01-10T13:49:20.7713440Z 
2025-01-10T13:49:20.7713620Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-01-10T13:49:20.7713630Z 
2025-01-10T13:49:20.7713830Z Packets:   ███████████████████████▊                                                        11913/40000 [00:00<00:00, 51989.82it/s][A
2025-01-10T13:49:20.7713830Z 
2025-01-10T13:49:20.7714030Z Packets:   ██████████████████████████████████▏                                             17124/40000 [00:00<00:00, 49346.75it/s][A
2025-01-10T13:49:20.7714040Z 
2025-01-10T13:49:20.7714250Z Packets:   ████████████████████████████████████████████▋                                   22373/40000 [00:00<00:00, 50409.81it/s][A
2025-01-10T13:49:20.7714260Z 
2025-01-10T13:49:20.7714480Z Packets:   ███████████████████████████████████████████████████████▍                        27689/40000 [00:00<00:00, 51309.30it/s][A
2025-01-10T13:49:20.7714480Z 
2025-01-10T13:49:20.7714930Z Packets:   ██████████████████████████████████████████████████████████████████              33005/40000 [00:00<00:00, 51891.34it/s][A
2025-01-10T13:49:20.7714930Z 
2025-01-10T13:49:20.7715170Z Packets:   ████████████████████████████████████████████████████████████████████████████▍   38204/40000 [00:00<00:00, 50219.38it/s][A
2025-01-10T13:49:20.7715290Z Iterations:                                                                                6/? [04:02<00:00, 55.27s/it]
2025-01-10T13:49:20.7715290Z 
2025-01-10T13:49:20.7715530Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:00<00:00, 50219.38it/s][A
2025-01-10T13:49:20.7715650Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.7716120Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:20.7716270Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-01-10T13:49:20.7716270Z 
2025-01-10T13:49:20.7716430Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7716490Z attr = 'iterations_t_rad'
2025-01-10T13:49:20.7716690Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x131098320>
2025-01-10T13:49:20.7716700Z 
2025-01-10T13:49:20.7716760Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7716810Z         "attr",
2025-01-10T13:49:20.7716850Z         [
2025-01-10T13:49:20.7716900Z             "iterations_w",
2025-01-10T13:49:20.7716960Z             "iterations_t_rad",
2025-01-10T13:49:20.7717020Z             "iterations_electron_densities",
2025-01-10T13:49:20.7717080Z             "iterations_t_inner",
2025-01-10T13:49:20.7717120Z         ],
2025-01-10T13:49:20.7717170Z     )
2025-01-10T13:49:20.7717320Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7717410Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:49:20.7717470Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7717530Z             actual = actual.value
2025-01-10T13:49:20.7717590Z         actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7717680Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7717810Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7717820Z 
2025-01-10T13:49:20.7717900Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:49:20.7717990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7718100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7718140Z     ???
2025-01-10T13:49:20.7718230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7718230Z 
2025-01-10T13:49:20.7718280Z >   ???
2025-01-10T13:49:20.7718410Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.7718620Z E   
2025-01-10T13:49:20.7718750Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:20.7718800Z E   [index]: [0, 1]
2025-01-10T13:49:20.7718880Z E   [left]:  [9967.488442185557, 10090.925208074612]
2025-01-10T13:49:20.7718950Z E   [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T13:49:20.7719080Z E   At positional index 1, first diff: 10090.925208074612 != 10091.396322818851
2025-01-10T13:49:20.7719080Z 
2025-01-10T13:49:20.7719150Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7719290Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-01-10T13:49:20.7719300Z 
2025-01-10T13:49:20.7719450Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7719530Z attr = 'iterations_electron_densities'
2025-01-10T13:49:20.7719720Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13101aa80>
2025-01-10T13:49:20.7719730Z 
2025-01-10T13:49:20.7719800Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7719840Z         "attr",
2025-01-10T13:49:20.7719890Z         [
2025-01-10T13:49:20.7719940Z             "iterations_w",
2025-01-10T13:49:20.7720000Z             "iterations_t_rad",
2025-01-10T13:49:20.7720060Z             "iterations_electron_densities",
2025-01-10T13:49:20.7720120Z             "iterations_t_inner",
2025-01-10T13:49:20.7720160Z         ],
2025-01-10T13:49:20.7720210Z     )
2025-01-10T13:49:20.7720350Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7720430Z         actual = getattr(simulation_one_loop, attr)
2025-01-10T13:49:20.7720500Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7720760Z             actual = actual.value
2025-01-10T13:49:20.7720830Z         actual = pd.DataFrame(actual)
2025-01-10T13:49:20.7720920Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7721060Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7721060Z 
2025-01-10T13:49:20.7721140Z tardis/simulation/tests/test_simulation.py:46: 
2025-01-10T13:49:20.7721230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7721340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7721380Z     ???
2025-01-10T13:49:20.7721470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7721470Z 
2025-01-10T13:49:20.7721510Z >   ???
2025-01-10T13:49:20.7721650Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.7721690Z E   
2025-01-10T13:49:20.7721820Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:20.7721870Z E   [index]: [0, 1]
2025-01-10T13:49:20.7721940Z E   [left]:  [2869544645.3209715, 2880986026.9779415]
2025-01-10T13:49:20.7722020Z E   [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T13:49:20.7722150Z E   At positional index 1, first diff: 2880986026.9779415 != 2881024886.0882792
2025-01-10T13:49:20.7722160Z 
2025-01-10T13:49:20.7722210Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7722340Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-01-10T13:49:20.7722350Z 
2025-01-10T13:49:20.7722510Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7722560Z attr = 'nu_bar_estimator'
2025-01-10T13:49:20.7722880Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x130fffb60>
2025-01-10T13:49:20.7722890Z 
2025-01-10T13:49:20.7722950Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7723000Z         "attr",
2025-01-10T13:49:20.7723040Z         [
2025-01-10T13:49:20.7723100Z             "nu_bar_estimator",
2025-01-10T13:49:20.7723140Z             "j_estimator",
2025-01-10T13:49:20.7723190Z             "t_radiative",
2025-01-10T13:49:20.7723250Z             "dilution_factor",
2025-01-10T13:49:20.7723360Z             "output_nus",
2025-01-10T13:49:20.7723410Z             "output_energies",
2025-01-10T13:49:20.7723460Z         ],
2025-01-10T13:49:20.7723500Z     )
2025-01-10T13:49:20.7723650Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7723730Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:20.7723780Z             actual = getattr(
2025-01-10T13:49:20.7723930Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:20.7723980Z                 attr,
2025-01-10T13:49:20.7724020Z             )
2025-01-10T13:49:20.7724110Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:20.7724230Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:20.7724310Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:20.7724370Z             actual = getattr(
2025-01-10T13:49:20.7724510Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:20.7724550Z                 attr,
2025-01-10T13:49:20.7724590Z             )
2025-01-10T13:49:20.7724640Z         else:
2025-01-10T13:49:20.7724750Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:20.7724790Z     
2025-01-10T13:49:20.7724850Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7724910Z             actual = actual.value
2025-01-10T13:49:20.7724970Z         actual = pd.Series(actual)
2025-01-10T13:49:20.7725060Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7725200Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7725250Z 
2025-01-10T13:49:20.7725340Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:20.7725430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7725530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7725580Z     ???
2025-01-10T13:49:20.7725670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7725670Z 
2025-01-10T13:49:20.7725720Z >   ???
2025-01-10T13:49:20.7725790Z E   AssertionError: Series are different
2025-01-10T13:49:20.7725830Z E   
2025-01-10T13:49:20.7725890Z E   Series values are different (100.0 %)
2025-01-10T13:49:20.7725990Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.7726910Z E   [left]:  [1.0190851489144417e+29, 8.620293210130923e+28, 7.627182111494598e+28, 6.892948616165273e+28, 6.337927690943656e+28, 5.960020402587151e+28, 5.586558872212224e+28, 5.25635918178016e+28, 5.018051447190151e+28, 4.8014271709728364e+28, 4.635443103818658e+28, 4.427600822090263e+28, 4.266701646003397e+28, 4.095148200480331e+28, 3.973054136677621e+28, 3.8813484639248094e+28, 3.749648114483984e+28, 3.6669667839395227e+28, 3.5309131816469324e+28, 3.4364426470451254e+28]
2025-01-10T13:49:20.7727820Z E   [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T13:49:20.7727970Z E   At positional index 0, first diff: 1.0190851489144417e+29 != 1.0202042777991753e+29
2025-01-10T13:49:20.7727980Z 
2025-01-10T13:49:20.7728050Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7728170Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-01-10T13:49:20.7728170Z 
2025-01-10T13:49:20.7728340Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7728380Z attr = 'j_estimator'
2025-01-10T13:49:20.7728640Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1781bf680>
2025-01-10T13:49:20.7728640Z 
2025-01-10T13:49:20.7728710Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7728750Z         "attr",
2025-01-10T13:49:20.7728800Z         [
2025-01-10T13:49:20.7728850Z             "nu_bar_estimator",
2025-01-10T13:49:20.7728910Z             "j_estimator",
2025-01-10T13:49:20.7728960Z             "t_radiative",
2025-01-10T13:49:20.7729010Z             "dilution_factor",
2025-01-10T13:49:20.7729060Z             "output_nus",
2025-01-10T13:49:20.7729120Z             "output_energies",
2025-01-10T13:49:20.7729160Z         ],
2025-01-10T13:49:20.7729210Z     )
2025-01-10T13:49:20.7729350Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7729440Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:20.7729490Z             actual = getattr(
2025-01-10T13:49:20.7729650Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:20.7729690Z                 attr,
2025-01-10T13:49:20.7729740Z             )
2025-01-10T13:49:20.7729820Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:20.7729940Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:20.7730020Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:20.7730070Z             actual = getattr(
2025-01-10T13:49:20.7730210Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:20.7730250Z                 attr,
2025-01-10T13:49:20.7730300Z             )
2025-01-10T13:49:20.7730350Z         else:
2025-01-10T13:49:20.7730500Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:20.7730540Z     
2025-01-10T13:49:20.7730600Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7730660Z             actual = actual.value
2025-01-10T13:49:20.7730720Z         actual = pd.Series(actual)
2025-01-10T13:49:20.7730810Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7730950Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7730960Z 
2025-01-10T13:49:20.7731040Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:20.7731120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7731240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7731280Z     ???
2025-01-10T13:49:20.7731370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7731370Z 
2025-01-10T13:49:20.7731410Z >   ???
2025-01-10T13:49:20.7731490Z E   AssertionError: Series are different
2025-01-10T13:49:20.7731530Z E   
2025-01-10T13:49:20.7731600Z E   Series values are different (100.0 %)
2025-01-10T13:49:20.7731700Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.7732430Z E   [left]:  [116548101693133.95, 98287497352449.03, 86880176732435.22, 78272950854373.14, 72163814877095.69, 67694196332568.83, 63443304042094.945, 60039709300008.84, 57626147839330.99, 55320363334244.195, 53407234761435.54, 51398562237742.78, 49867122015465.32, 48237829093150.875, 46995101666576.04, 46046276744657.75, 44990423974886.99, 44175537951010.7, 43032079683987.4, 42141581527839.64]
2025-01-10T13:49:20.7733150Z E   [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T13:49:20.7733290Z E   At positional index 0, first diff: 116548101693133.95 != 116635492761989.08
2025-01-10T13:49:20.7733290Z 
2025-01-10T13:49:20.7733350Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7733510Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-01-10T13:49:20.7733520Z 
2025-01-10T13:49:20.7733670Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7733730Z attr = 't_radiative'
2025-01-10T13:49:20.7733930Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x178174080>
2025-01-10T13:49:20.7733930Z 
2025-01-10T13:49:20.7734000Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7734040Z         "attr",
2025-01-10T13:49:20.7734090Z         [
2025-01-10T13:49:20.7734140Z             "nu_bar_estimator",
2025-01-10T13:49:20.7734200Z             "j_estimator",
2025-01-10T13:49:20.7734250Z             "t_radiative",
2025-01-10T13:49:20.7734300Z             "dilution_factor",
2025-01-10T13:49:20.7734350Z             "output_nus",
2025-01-10T13:49:20.7734410Z             "output_energies",
2025-01-10T13:49:20.7734450Z         ],
2025-01-10T13:49:20.7734490Z     )
2025-01-10T13:49:20.7734630Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7734720Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:20.7734770Z             actual = getattr(
2025-01-10T13:49:20.7734920Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:20.7734970Z                 attr,
2025-01-10T13:49:20.7735010Z             )
2025-01-10T13:49:20.7735100Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:20.7735220Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:20.7735310Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:20.7735400Z             actual = getattr(
2025-01-10T13:49:20.7735540Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:20.7735580Z                 attr,
2025-01-10T13:49:20.7735630Z             )
2025-01-10T13:49:20.7735680Z         else:
2025-01-10T13:49:20.7735780Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:20.7735820Z     
2025-01-10T13:49:20.7735880Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7735940Z             actual = actual.value
2025-01-10T13:49:20.7736000Z         actual = pd.Series(actual)
2025-01-10T13:49:20.7736090Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7736220Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7736230Z 
2025-01-10T13:49:20.7736320Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:20.7736400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7736510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7736550Z     ???
2025-01-10T13:49:20.7736650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7736650Z 
2025-01-10T13:49:20.7736700Z >   ???
2025-01-10T13:49:20.7736760Z E   AssertionError: Series are different
2025-01-10T13:49:20.7736800Z E   
2025-01-10T13:49:20.7736860Z E   Series values are different (90.0 %)
2025-01-10T13:49:20.7736970Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.7737730Z E   [left]:  [10090.925208074612, 10114.284007169752, 10139.419400388757, 10142.763627360702, 10149.780795955077, 10123.098440726963, 10084.703897056657, 10058.012622231076, 10075.221831273808, 10032.602564737457, 10029.923783575228, 9982.400974610377, 9943.057719983482, 9914.605779635785, 9894.245392559056, 9854.91157888558, 9802.51106451295, 9775.252526407032, 9735.554945100961, 9699.29579392027]
2025-01-10T13:49:20.7738800Z E   [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T13:49:20.7738950Z E   At positional index 0, first diff: 10090.925208074612 != 10091.396322818851
2025-01-10T13:49:20.7738960Z 
2025-01-10T13:49:20.7739020Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7739150Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-01-10T13:49:20.7739150Z 
2025-01-10T13:49:20.7739300Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7739360Z attr = 'dilution_factor'
2025-01-10T13:49:20.7739560Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x178175640>
2025-01-10T13:49:20.7739560Z 
2025-01-10T13:49:20.7739620Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7739670Z         "attr",
2025-01-10T13:49:20.7739710Z         [
2025-01-10T13:49:20.7739770Z             "nu_bar_estimator",
2025-01-10T13:49:20.7739820Z             "j_estimator",
2025-01-10T13:49:20.7739870Z             "t_radiative",
2025-01-10T13:49:20.7739920Z             "dilution_factor",
2025-01-10T13:49:20.7739980Z             "output_nus",
2025-01-10T13:49:20.7740030Z             "output_energies",
2025-01-10T13:49:20.7740080Z         ],
2025-01-10T13:49:20.7740120Z     )
2025-01-10T13:49:20.7740270Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7740350Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:20.7740410Z             actual = getattr(
2025-01-10T13:49:20.7740550Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:20.7740880Z                 attr,
2025-01-10T13:49:20.7740930Z             )
2025-01-10T13:49:20.7741020Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:20.7741130Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:20.7741220Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:20.7741270Z             actual = getattr(
2025-01-10T13:49:20.7741400Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:20.7741450Z                 attr,
2025-01-10T13:49:20.7741490Z             )
2025-01-10T13:49:20.7741540Z         else:
2025-01-10T13:49:20.7741640Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:20.7741690Z     
2025-01-10T13:49:20.7741740Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7741800Z             actual = actual.value
2025-01-10T13:49:20.7741850Z         actual = pd.Series(actual)
2025-01-10T13:49:20.7741950Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7742090Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7742090Z 
2025-01-10T13:49:20.7742170Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:20.7742270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7742370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7742420Z     ???
2025-01-10T13:49:20.7742500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7742500Z 
2025-01-10T13:49:20.7742550Z >   ???
2025-01-10T13:49:20.7742610Z E   AssertionError: Series are different
2025-01-10T13:49:20.7742660Z E   
2025-01-10T13:49:20.7742720Z E   Series values are different (95.0 %)
2025-01-10T13:49:20.7742830Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.7743700Z E   [left]:  [0.4501364467195908, 0.35908765015367794, 0.2992286625932581, 0.25782483595854516, 0.22541895309871707, 0.20119984035942634, 0.18259528573790965, 0.16657898370897495, 0.15044998950385874, 0.13972884748944586, 0.1286244489704662, 0.12093391136570557, 0.11343684592362663, 0.10649361332296867, 0.10015211634287155, 0.09484336636678072, 0.09053724751966309, 0.08584829670214006, 0.08202005255449255, 0.07823319609488653]
2025-01-10T13:49:20.7744520Z E   [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T13:49:20.7744660Z E   At positional index 0, first diff: 0.4501364467195908 != 0.4500690173218345
2025-01-10T13:49:20.7744660Z 
2025-01-10T13:49:20.7744720Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7744840Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-01-10T13:49:20.7744850Z 
2025-01-10T13:49:20.7745010Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7745060Z attr = 'output_nus'
2025-01-10T13:49:20.7745260Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x178176750>
2025-01-10T13:49:20.7745270Z 
2025-01-10T13:49:20.7745320Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7745370Z         "attr",
2025-01-10T13:49:20.7745410Z         [
2025-01-10T13:49:20.7745470Z             "nu_bar_estimator",
2025-01-10T13:49:20.7745520Z             "j_estimator",
2025-01-10T13:49:20.7745570Z             "t_radiative",
2025-01-10T13:49:20.7745620Z             "dilution_factor",
2025-01-10T13:49:20.7745670Z             "output_nus",
2025-01-10T13:49:20.7745730Z             "output_energies",
2025-01-10T13:49:20.7745770Z         ],
2025-01-10T13:49:20.7745860Z     )
2025-01-10T13:49:20.7746000Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7746090Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:20.7746140Z             actual = getattr(
2025-01-10T13:49:20.7746290Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:20.7746340Z                 attr,
2025-01-10T13:49:20.7746380Z             )
2025-01-10T13:49:20.7746470Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:20.7746580Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:20.7746670Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:20.7746720Z             actual = getattr(
2025-01-10T13:49:20.7746860Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:20.7746900Z                 attr,
2025-01-10T13:49:20.7746940Z             )
2025-01-10T13:49:20.7746990Z         else:
2025-01-10T13:49:20.7747090Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:20.7747140Z     
2025-01-10T13:49:20.7747200Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7747250Z             actual = actual.value
2025-01-10T13:49:20.7747320Z         actual = pd.Series(actual)
2025-01-10T13:49:20.7747400Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7747540Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7747550Z 
2025-01-10T13:49:20.7747630Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:20.7747710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7751490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7751570Z     ???
2025-01-10T13:49:20.7751660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7751680Z 
2025-01-10T13:49:20.7751720Z >   ???
2025-01-10T13:49:20.7751790Z E   AssertionError: Series are different
2025-01-10T13:49:20.7751830Z E   
2025-01-10T13:49:20.7751900Z E   Series values are different (5.1125 %)
2025-01-10T13:49:20.7752370Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7756270Z E   [left]:  [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.6, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-10T13:49:20.7760260Z E   [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T13:49:20.7760400Z E   At positional index 56, first diff: 657025184715239.1 != 657003154645147.8
2025-01-10T13:49:20.7760410Z 
2025-01-10T13:49:20.7760470Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7760590Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-01-10T13:49:20.7760590Z 
2025-01-10T13:49:20.7760750Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x130f86120>
2025-01-10T13:49:20.7760810Z attr = 'output_energies'
2025-01-10T13:49:20.7761010Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x178177a10>
2025-01-10T13:49:20.7761020Z 
2025-01-10T13:49:20.7761080Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7761130Z         "attr",
2025-01-10T13:49:20.7761170Z         [
2025-01-10T13:49:20.7761230Z             "nu_bar_estimator",
2025-01-10T13:49:20.7761280Z             "j_estimator",
2025-01-10T13:49:20.7761330Z             "t_radiative",
2025-01-10T13:49:20.7761380Z             "dilution_factor",
2025-01-10T13:49:20.7761430Z             "output_nus",
2025-01-10T13:49:20.7761490Z             "output_energies",
2025-01-10T13:49:20.7761530Z         ],
2025-01-10T13:49:20.7761580Z     )
2025-01-10T13:49:20.7761720Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-01-10T13:49:20.7761810Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-01-10T13:49:20.7761860Z             actual = getattr(
2025-01-10T13:49:20.7762060Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-01-10T13:49:20.7762100Z                 attr,
2025-01-10T13:49:20.7762150Z             )
2025-01-10T13:49:20.7762230Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-01-10T13:49:20.7762350Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-01-10T13:49:20.7762440Z         elif attr in ["output_nus", "output_energies"]:
2025-01-10T13:49:20.7762490Z             actual = getattr(
2025-01-10T13:49:20.7762620Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-01-10T13:49:20.7762660Z                 attr,
2025-01-10T13:49:20.7762710Z             )
2025-01-10T13:49:20.7762880Z         else:
2025-01-10T13:49:20.7762990Z             actual = getattr(simulation_one_loop.transport, attr)
2025-01-10T13:49:20.7763030Z     
2025-01-10T13:49:20.7763090Z         if hasattr(actual, "value"):
2025-01-10T13:49:20.7763150Z             actual = actual.value
2025-01-10T13:49:20.7763210Z         actual = pd.Series(actual)
2025-01-10T13:49:20.7763300Z         expected = regression_data.sync_dataframe(actual)
2025-01-10T13:49:20.7763440Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-01-10T13:49:20.7763450Z 
2025-01-10T13:49:20.7763530Z tardis/simulation/tests/test_simulation.py:80: 
2025-01-10T13:49:20.7763620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7763730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-01-10T13:49:20.7763770Z     ???
2025-01-10T13:49:20.7763860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7763860Z 
2025-01-10T13:49:20.7763900Z >   ???
2025-01-10T13:49:20.7763970Z E   AssertionError: Series are different
2025-01-10T13:49:20.7764010Z E   
2025-01-10T13:49:20.7764080Z E   Series values are different (1.3025 %)
2025-01-10T13:49:20.7764640Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.7769430Z E   [left]:  [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.4233351068555537e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.558078209369483e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.483244249209606e-05, -2.4131561837088724e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:20.7774450Z E   [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:20.7774620Z E   At positional index 414, first diff: 2.5347525852067693e-05 != 2.5657552576608082e-05
2025-01-10T13:49:20.7774630Z 
2025-01-10T13:49:20.7774690Z testing.pyx:173: AssertionError
2025-01-10T13:49:20.7774830Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-01-10T13:49:20.7774840Z 
2025-01-10T13:49:20.7775030Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11bc542f0>
2025-01-10T13:49:20.7775170Z simulation = <tardis.simulation.base.Simulation object at 0x31182a3f0>
2025-01-10T13:49:20.7775180Z 
2025-01-10T13:49:20.7775270Z     def test_spectrum_real_packets(self, simulation):
2025-01-10T13:49:20.7775380Z         transport_state = simulation.transport.transport_state
2025-01-10T13:49:20.7775520Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:49:20.7775620Z     
2025-01-10T13:49:20.7775770Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:49:20.7775860Z         result = solver.spectrum_real_packets.luminosity
2025-01-10T13:49:20.7776000Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:49:20.7776070Z         expected = self.get_expected_data(key)
2025-01-10T13:49:20.7776110Z     
2025-01-10T13:49:20.7776190Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7776230Z     
2025-01-10T13:49:20.7776290Z >       assert_quantity_allclose(
2025-01-10T13:49:20.7776340Z             result,
2025-01-10T13:49:20.7776390Z             luminosity,
2025-01-10T13:49:20.7776430Z         )
2025-01-10T13:49:20.7776430Z 
2025-01-10T13:49:20.7776520Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-01-10T13:49:20.7776610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7776870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7776950Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7777030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7777030Z 
2025-01-10T13:49:20.7777390Z args = (<function assert_allclose.<locals>.compare at 0x11cd014e0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T13:49:20.7777470Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7777670Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7777680Z 
2025-01-10T13:49:20.7777720Z     @wraps(func)
2025-01-10T13:49:20.7777780Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7777840Z         with self._recreate_cm():
2025-01-10T13:49:20.7777900Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7777960Z E           AssertionError: 
2025-01-10T13:49:20.7778040Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7778080Z E           
2025-01-10T13:49:20.7778160Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:20.7778320Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:20.7778410Z E           Max relative difference among violations: 1.
2025-01-10T13:49:20.7778540Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.7778610Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7778740Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.7778800Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7778800Z 
2025-01-10T13:49:20.7778960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7779110Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-01-10T13:49:20.7779110Z 
2025-01-10T13:49:20.7779320Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11bc56b40>
2025-01-10T13:49:20.7779460Z simulation = <tardis.simulation.base.Simulation object at 0x31182a3f0>
2025-01-10T13:49:20.7779470Z 
2025-01-10T13:49:20.7779580Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-01-10T13:49:20.7779690Z         transport_state = simulation.transport.transport_state
2025-01-10T13:49:20.7779840Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:49:20.7779880Z     
2025-01-10T13:49:20.7780030Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:49:20.7780140Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-01-10T13:49:20.7780300Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-01-10T13:49:20.7780430Z         expected = self.get_expected_data(key)
2025-01-10T13:49:20.7780470Z     
2025-01-10T13:49:20.7780560Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7780600Z     
2025-01-10T13:49:20.7780660Z >       assert_quantity_allclose(
2025-01-10T13:49:20.7780710Z             result,
2025-01-10T13:49:20.7780760Z             luminosity,
2025-01-10T13:49:20.7780800Z         )
2025-01-10T13:49:20.7780800Z 
2025-01-10T13:49:20.7780900Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-01-10T13:49:20.7780990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7781250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7781300Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7781390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7781400Z 
2025-01-10T13:49:20.7781750Z args = (<function assert_allclose.<locals>.compare at 0x31d449e40>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, .....), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-01-10T13:49:20.7781820Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7782030Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7782030Z 
2025-01-10T13:49:20.7782080Z     @wraps(func)
2025-01-10T13:49:20.7782140Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7782200Z         with self._recreate_cm():
2025-01-10T13:49:20.7782340Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7782400Z E           AssertionError: 
2025-01-10T13:49:20.7782480Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7782520Z E           
2025-01-10T13:49:20.7782600Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-01-10T13:49:20.7782710Z E           Max absolute difference among violations: 4.15247374e+37
2025-01-10T13:49:20.7782810Z E           Max relative difference among violations: 1.03027212
2025-01-10T13:49:20.7782940Z E            ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.7783000Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7783190Z E            DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.7783250Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7783260Z 
2025-01-10T13:49:20.7783420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7783550Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-01-10T13:49:20.7783550Z 
2025-01-10T13:49:20.7783740Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11bc54e30>
2025-01-10T13:49:20.7783890Z simulation = <tardis.simulation.base.Simulation object at 0x31182a3f0>
2025-01-10T13:49:20.7783890Z 
2025-01-10T13:49:20.7783960Z     def test_solve(self, simulation):
2025-01-10T13:49:20.7784070Z         transport_state = simulation.transport.transport_state
2025-01-10T13:49:20.7784220Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-01-10T13:49:20.7784260Z     
2025-01-10T13:49:20.7784410Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-01-10T13:49:20.7784530Z         result_real, result_virtual, result_integrated = solver.solve(
2025-01-10T13:49:20.7784580Z             transport_state
2025-01-10T13:49:20.7784620Z         )
2025-01-10T13:49:20.7784760Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:49:20.7784850Z         expected_real = self.get_expected_data(key_real)
2025-01-10T13:49:20.7784900Z     
2025-01-10T13:49:20.7785000Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-01-10T13:49:20.7785040Z     
2025-01-10T13:49:20.7785100Z >       assert_quantity_allclose(
2025-01-10T13:49:20.7785210Z             result_real.luminosity,
2025-01-10T13:49:20.7785270Z             luminosity_real,
2025-01-10T13:49:20.7785310Z         )
2025-01-10T13:49:20.7785320Z 
2025-01-10T13:49:20.7785410Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-01-10T13:49:20.7785500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7785750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7785810Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7785900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7785910Z 
2025-01-10T13:49:20.7786260Z args = (<function assert_allclose.<locals>.compare at 0x31d4b3ce0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-01-10T13:49:20.7786340Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7786540Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7786550Z 
2025-01-10T13:49:20.7786600Z     @wraps(func)
2025-01-10T13:49:20.7786650Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7786710Z         with self._recreate_cm():
2025-01-10T13:49:20.7786770Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7786840Z E           AssertionError: 
2025-01-10T13:49:20.7786920Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7786960Z E           
2025-01-10T13:49:20.7787030Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:20.7787150Z E           Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:20.7787230Z E           Max relative difference among violations: 1.
2025-01-10T13:49:20.7787360Z E            ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.7787420Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7787550Z E            DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.7787620Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7787620Z 
2025-01-10T13:49:20.7788210Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7788460Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-01-10T13:49:20.7788470Z 
2025-01-10T13:49:20.7788620Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11bc55220>
2025-01-10T13:49:20.7788770Z simulation = <tardis.simulation.base.Simulation object at 0x301d5e7b0>
2025-01-10T13:49:20.7788770Z 
2025-01-10T13:49:20.7788850Z     def test_j_blue_estimators(self, simulation):
2025-01-10T13:49:20.7788970Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-01-10T13:49:20.7789040Z         expected = self.get_expected_data(key)
2025-01-10T13:49:20.7789090Z     
2025-01-10T13:49:20.7789150Z >       npt.assert_allclose(
2025-01-10T13:49:20.7789320Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-01-10T13:49:20.7789390Z             expected.values,
2025-01-10T13:49:20.7789430Z         )
2025-01-10T13:49:20.7789440Z 
2025-01-10T13:49:20.7789510Z tardis/tests/test_tardis_full.py:70: 
2025-01-10T13:49:20.7789590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7789600Z 
2025-01-10T13:49:20.7789790Z args = (<function assert_allclose.<locals>.compare at 0x311745580>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7789840Z        [0., 0., 0.,.....,
2025-01-10T13:49:20.7789890Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7789960Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7790010Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:20.7790210Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7790510Z 
2025-01-10T13:49:20.7790560Z     @wraps(func)
2025-01-10T13:49:20.7790620Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7790670Z         with self._recreate_cm():
2025-01-10T13:49:20.7790740Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7790790Z E           AssertionError: 
2025-01-10T13:49:20.7790870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7790920Z E           
2025-01-10T13:49:20.7791000Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-01-10T13:49:20.7791110Z E           Max absolute difference among violations: 5.32418652e-19
2025-01-10T13:49:20.7791210Z E           Max relative difference among violations: 8.78746214
2025-01-10T13:49:20.7791290Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7791350Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7791410Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7791490Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7791560Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7791620Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7791620Z 
2025-01-10T13:49:20.7791780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7791910Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.7792230Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7792280Z 	
2025-01-10T13:49:20.7792690Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-10T13:49:20.7792830Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7793150Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-10T13:49:20.7793280Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7793640Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-10T13:49:20.7793940Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:20.7794280Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:20.7794420Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7794580Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:20.7794700Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7794740Z 	
2025-01-10T13:49:20.7794850Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7794980Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7795020Z 	
2025-01-10T13:49:20.7795090Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T13:49:20.7795160Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T13:49:20.7795220Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7795290Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7795410Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7795460Z 	
2025-01-10T13:49:20.7795570Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:20.7795690Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7795730Z 	
2025-01-10T13:49:20.7795810Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T13:49:20.7795870Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T13:49:20.7795930Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T13:49:20.7795990Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T13:49:20.7796050Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T13:49:20.7796120Z  ([1mbase.py[0m:650)
2025-01-10T13:49:20.7796310Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7796350Z 	
2025-01-10T13:49:20.7796410Z 	Current t_inner = 9974.969 K
2025-01-10T13:49:20.7796490Z 	Expected t_inner for next iteration = 10736.783 K
2025-01-10T13:49:20.7796570Z  ([1mbase.py[0m:652)
2025-01-10T13:49:20.7796690Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7796730Z 	
2025-01-10T13:49:20.7796840Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7796960Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7797000Z 	
2025-01-10T13:49:20.7797070Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T13:49:20.7797140Z 	Luminosity absorbed  = 3.624e+42 erg / s
2025-01-10T13:49:20.7797200Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7797270Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7797390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7797430Z 	
2025-01-10T13:49:20.7797530Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:20.7797650Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7797690Z 	
2025-01-10T13:49:20.7797770Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:20.7797830Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-10T13:49:20.7797890Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T13:49:20.7797950Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-10T13:49:20.7798020Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T13:49:20.7798090Z  ([1mbase.py[0m:650)
2025-01-10T13:49:20.7798210Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7798250Z 	
2025-01-10T13:49:20.7798310Z 	Current t_inner = 10736.783 K
2025-01-10T13:49:20.7798390Z 	Expected t_inner for next iteration = 10718.619 K
2025-01-10T13:49:20.7798460Z  ([1mbase.py[0m:652)
2025-01-10T13:49:20.7798570Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7798620Z 	
2025-01-10T13:49:20.7798720Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7798840Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7798890Z 	
2025-01-10T13:49:20.7798950Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T13:49:20.7799070Z 	Luminosity absorbed  = 3.514e+42 erg / s
2025-01-10T13:49:20.7799130Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7799210Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7799330Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7799500Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T13:49:20.7799610Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7799650Z 	
2025-01-10T13:49:20.7799760Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:20.7799880Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7799920Z 	
2025-01-10T13:49:20.7799990Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:20.7800060Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-10T13:49:20.7800120Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T13:49:20.7800180Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-10T13:49:20.7800240Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0921
2025-01-10T13:49:20.7800320Z  ([1mbase.py[0m:650)
2025-01-10T13:49:20.7800440Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7800480Z 	
2025-01-10T13:49:20.7800540Z 	Current t_inner = 10718.619 K
2025-01-10T13:49:20.7800620Z 	Expected t_inner for next iteration = 10696.651 K
2025-01-10T13:49:20.7800690Z  ([1mbase.py[0m:652)
2025-01-10T13:49:20.7800810Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7800850Z 	
2025-01-10T13:49:20.7800960Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7801070Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7801120Z 	
2025-01-10T13:49:20.7801180Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T13:49:20.7801290Z 	Luminosity absorbed  = 3.437e+42 erg / s
2025-01-10T13:49:20.7801360Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7801430Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7801550Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7801720Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-01-10T13:49:20.7801840Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7801880Z 	
2025-01-10T13:49:20.7801990Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-10T13:49:20.7802110Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7802150Z 	
2025-01-10T13:49:20.7802220Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:20.7802280Z 	0         1.07e+04 K  1.09e+04 K  0.491    0.49
2025-01-10T13:49:20.7802350Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T13:49:20.7802400Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T13:49:20.7802470Z 	15        1.04e+04 K  1.05e+04 K 0.0921  0.0902
2025-01-10T13:49:20.7802540Z  ([1mbase.py[0m:650)
2025-01-10T13:49:20.7802660Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7802710Z 	
2025-01-10T13:49:20.7802760Z 	Current t_inner = 10696.651 K
2025-01-10T13:49:20.7802850Z 	Expected t_inner for next iteration = 10684.004 K
2025-01-10T13:49:20.7803040Z  ([1mbase.py[0m:652)
2025-01-10T13:49:20.7803160Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7803210Z 	
2025-01-10T13:49:20.7803270Z 	Simulation finished in 4 iterations 
2025-01-10T13:49:20.7803330Z 	Simulation took 9.09 s
2025-01-10T13:49:20.7803400Z  ([1mbase.py[0m:542)
2025-01-10T13:49:20.7803510Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7803560Z 	
2025-01-10T13:49:20.7803660Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7803780Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7803830Z 	
2025-01-10T13:49:20.7803890Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T13:49:20.7803950Z 	Luminosity absorbed  = 3.447e+42 erg / s
2025-01-10T13:49:20.7804020Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7804090Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7804290Z ---------------------------- Captured stderr setup -----------------------------
2025-01-10T13:49:20.7804300Z 
2025-01-10T13:49:20.7804300Z 
2025-01-10T13:49:20.7804490Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-01-10T13:49:20.7804500Z 
2025-01-10T13:49:20.7804670Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-01-10T13:49:20.7804670Z 
2025-01-10T13:49:20.7804870Z Packets:   █████▍                                                                          13662/200000 [00:00<00:01, 136617.20it/s][A
2025-01-10T13:49:20.7804870Z 
2025-01-10T13:49:20.7805060Z Packets:   ███████████▎                                                                    28244/200000 [00:00<00:01, 142029.65it/s][A
2025-01-10T13:49:20.7805070Z 
2025-01-10T13:49:20.7805270Z Packets:   █████████████████▏                                                              42885/200000 [00:00<00:01, 144028.44it/s][A
2025-01-10T13:49:20.7805270Z 
2025-01-10T13:49:20.7805470Z Packets:   ██████████████████████▉                                                         57288/200000 [00:00<00:01, 142423.27it/s][A
2025-01-10T13:49:20.7805470Z 
2025-01-10T13:49:20.7805670Z Packets:   ████████████████████████████▉                                                   72277/200000 [00:00<00:00, 145095.47it/s][A
2025-01-10T13:49:20.7805670Z 
2025-01-10T13:49:20.7805870Z Packets:   ███████████████████████████████████                                             87727/200000 [00:00<00:00, 148276.46it/s][A
2025-01-10T13:49:20.7805880Z 
2025-01-10T13:49:20.7806090Z Packets:   █████████████████████████████████████████                                       102559/200000 [00:00<00:00, 147465.08it/s][A
2025-01-10T13:49:20.7806150Z 
2025-01-10T13:49:20.7806370Z Packets:   ███████████████████████████████████████████████                                 117671/200000 [00:00<00:00, 148620.26it/s][A
2025-01-10T13:49:20.7806380Z 
2025-01-10T13:49:20.7806600Z Packets:   █████████████████████████████████████████████████████                           132754/200000 [00:00<00:00, 149306.48it/s][A
2025-01-10T13:49:20.7806610Z 
2025-01-10T13:49:20.7806830Z Packets:   ███████████████████████████████████████████████████████████▏                    148040/200000 [00:01<00:00, 150399.43it/s][A
2025-01-10T13:49:20.7806840Z 
2025-01-10T13:49:20.7807070Z Packets:   █████████████████████████████████████████████████████████████████▎              163187/200000 [00:01<00:00, 150724.06it/s][A
2025-01-10T13:49:20.7807070Z 
2025-01-10T13:49:20.7807300Z Packets:   ███████████████████████████████████████████████████████████████████████▎        178261/200000 [00:01<00:00, 150589.01it/s][A
2025-01-10T13:49:20.7807320Z 
2025-01-10T13:49:20.7807550Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193321/200000 [00:01<00:00, 150443.11it/s][A
2025-01-10T13:49:20.7807870Z Iterations:                                                                                13/? [04:47<00:00,  9.42s/it]
2025-01-10T13:49:20.7807880Z 
2025-01-10T13:49:20.7808160Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 150443.11it/s][A
2025-01-10T13:49:20.7808160Z 
2025-01-10T13:49:20.7808340Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:20.7808340Z 
2025-01-10T13:49:20.7808520Z Packets:   ██████▎                                                                         15748/200000 [00:00<00:01, 157474.14it/s][A
2025-01-10T13:49:20.7808520Z 
2025-01-10T13:49:20.7808710Z Packets:   ████████████▌                                                                   31523/200000 [00:00<00:01, 157634.51it/s][A
2025-01-10T13:49:20.7808720Z 
2025-01-10T13:49:20.7808920Z Packets:   ██████████████████▉                                                             47287/200000 [00:00<00:00, 155822.65it/s][A
2025-01-10T13:49:20.7808920Z 
2025-01-10T13:49:20.7809110Z Packets:   █████████████████████████▏                                                      62872/200000 [00:00<00:00, 154690.94it/s][A
2025-01-10T13:49:20.7809120Z 
2025-01-10T13:49:20.7809320Z Packets:   ███████████████████████████████▍                                                78478/200000 [00:00<00:00, 155177.37it/s][A
2025-01-10T13:49:20.7809320Z 
2025-01-10T13:49:20.7809530Z Packets:   █████████████████████████████████████▌                                          93998/200000 [00:00<00:00, 154571.73it/s][A
2025-01-10T13:49:20.7809530Z 
2025-01-10T13:49:20.7809740Z Packets:   ███████████████████████████████████████████▊                                    109457/200000 [00:00<00:00, 154258.73it/s][A
2025-01-10T13:49:20.7809900Z 
2025-01-10T13:49:20.7810140Z Packets:   █████████████████████████████████████████████████▉                              124884/200000 [00:00<00:00, 154241.28it/s][A
2025-01-10T13:49:20.7810150Z 
2025-01-10T13:49:20.7810380Z Packets:   ████████████████████████████████████████████████████████                        140309/200000 [00:00<00:00, 152859.30it/s][A
2025-01-10T13:49:20.7810380Z 
2025-01-10T13:49:20.7810600Z Packets:   ██████████████████████████████████████████████████████████████▏                 155598/200000 [00:01<00:00, 150191.23it/s][A
2025-01-10T13:49:20.7810610Z 
2025-01-10T13:49:20.7810840Z Packets:   ████████████████████████████████████████████████████████████████████▎           170627/200000 [00:01<00:00, 149292.58it/s][A
2025-01-10T13:49:20.7810840Z 
2025-01-10T13:49:20.7811070Z Packets:   ██████████████████████████████████████████████████████████████████████████▍     186056/200000 [00:01<00:00, 150785.27it/s][A
2025-01-10T13:49:20.7811210Z Iterations:                                                                                14/? [04:49<00:00,  7.26s/it]
2025-01-10T13:49:20.7811210Z 
2025-01-10T13:49:20.7811510Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 150785.27it/s][A
2025-01-10T13:49:20.7811520Z 
2025-01-10T13:49:20.7811690Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:20.7811700Z 
2025-01-10T13:49:20.7811880Z Packets:   ██████▏                                                                         15540/200000 [00:00<00:01, 155398.30it/s][A
2025-01-10T13:49:20.7811880Z 
2025-01-10T13:49:20.7812070Z Packets:   ████████████▍                                                                   31080/200000 [00:00<00:01, 152429.82it/s][A
2025-01-10T13:49:20.7812080Z 
2025-01-10T13:49:20.7812270Z Packets:   ██████████████████▌                                                             46538/200000 [00:00<00:01, 153398.61it/s][A
2025-01-10T13:49:20.7812270Z 
2025-01-10T13:49:20.7812470Z Packets:   ████████████████████████▊                                                       62052/200000 [00:00<00:00, 154077.58it/s][A
2025-01-10T13:49:20.7812470Z 
2025-01-10T13:49:20.7812670Z Packets:   ███████████████████████████████                                                 77697/200000 [00:00<00:00, 154927.91it/s][A
2025-01-10T13:49:20.7812670Z 
2025-01-10T13:49:20.7812880Z Packets:   █████████████████████████████████████▎                                          93260/200000 [00:00<00:00, 155164.39it/s][A
2025-01-10T13:49:20.7812880Z 
2025-01-10T13:49:20.7813100Z Packets:   ███████████████████████████████████████████▌                                    108778/200000 [00:00<00:00, 154769.52it/s][A
2025-01-10T13:49:20.7813110Z 
2025-01-10T13:49:20.7813320Z Packets:   █████████████████████████████████████████████████▊                              124460/200000 [00:00<00:00, 155419.32it/s][A
2025-01-10T13:49:20.7813380Z 
2025-01-10T13:49:20.7813610Z Packets:   ████████████████████████████████████████████████████████                        140003/200000 [00:00<00:00, 154813.68it/s][A
2025-01-10T13:49:20.7813620Z 
2025-01-10T13:49:20.7813840Z Packets:   ██████████████████████████████████████████████████████████████▏                 155486/200000 [00:01<00:00, 154258.14it/s][A
2025-01-10T13:49:20.7813850Z 
2025-01-10T13:49:20.7814080Z Packets:   ████████████████████████████████████████████████████████████████████▍           171175/200000 [00:01<00:00, 155056.06it/s][A
2025-01-10T13:49:20.7814080Z 
2025-01-10T13:49:20.7814320Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     186682/200000 [00:01<00:00, 154619.37it/s][A
2025-01-10T13:49:20.7814430Z Iterations:                                                                                15/? [04:51<00:00,  5.76s/it]
2025-01-10T13:49:20.7814450Z 
2025-01-10T13:49:20.7814690Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 154619.37it/s][A
2025-01-10T13:49:20.7814690Z 
2025-01-10T13:49:20.7814920Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:20.7814920Z 
2025-01-10T13:49:20.7815100Z Packets:   ██████▏                                                                         15463/200000 [00:00<00:01, 147436.71it/s][A
2025-01-10T13:49:20.7815110Z 
2025-01-10T13:49:20.7815290Z Packets:   ████████████▍                                                                   30952/200000 [00:00<00:01, 151729.31it/s][A
2025-01-10T13:49:20.7815300Z 
2025-01-10T13:49:20.7815480Z Packets:   ██████████████████▌                                                             46292/200000 [00:00<00:01, 152481.37it/s][A
2025-01-10T13:49:20.7815490Z 
2025-01-10T13:49:20.7815690Z Packets:   ████████████████████████▌                                                       61546/200000 [00:00<00:00, 151051.34it/s][A
2025-01-10T13:49:20.7815690Z 
2025-01-10T13:49:20.7815890Z Packets:   ██████████████████████████████▊                                                 77127/200000 [00:00<00:00, 152749.55it/s][A
2025-01-10T13:49:20.7815900Z 
2025-01-10T13:49:20.7816100Z Packets:   █████████████████████████████████████                                           92653/200000 [00:00<00:00, 153594.23it/s][A
2025-01-10T13:49:20.7816110Z 
2025-01-10T13:49:20.7816320Z Packets:   ███████████████████████████████████████████▎                                    108209/200000 [00:00<00:00, 154232.29it/s][A
2025-01-10T13:49:20.7816320Z 
2025-01-10T13:49:20.7816540Z Packets:   █████████████████████████████████████████████████▍                              123635/200000 [00:00<00:00, 154151.55it/s][A
2025-01-10T13:49:20.7816540Z 
2025-01-10T13:49:20.7816820Z Packets:   ███████████████████████████████████████████████████████▌                        139053/200000 [00:00<00:00, 154075.82it/s][A
2025-01-10T13:49:20.7816830Z 
2025-01-10T13:49:20.7817070Z Packets:   █████████████████████████████████████████████████████████████▊                  154573/200000 [00:01<00:00, 154421.27it/s][A
2025-01-10T13:49:20.7817070Z 
2025-01-10T13:49:20.7817300Z Packets:   ████████████████████████████████████████████████████████████████████            170040/200000 [00:01<00:00, 154496.87it/s][A
2025-01-10T13:49:20.7817300Z 
2025-01-10T13:49:20.7817540Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     185491/200000 [00:01<00:00, 154345.13it/s][A
2025-01-10T13:49:20.7817650Z Iterations:                                                                                16/? [04:54<00:00,  4.73s/it]
2025-01-10T13:49:20.7817650Z 
2025-01-10T13:49:20.7817890Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 154345.13it/s][A
2025-01-10T13:49:20.7817910Z 
2025-01-10T13:49:20.7818080Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-01-10T13:49:20.7818080Z 
2025-01-10T13:49:20.7818300Z Packets:   ██▍                                                                             15435/500000 [00:00<00:08, 55296.25it/s][A
2025-01-10T13:49:20.7818310Z 
2025-01-10T13:49:20.7818490Z Packets:   ███▎                                                                            20965/500000 [00:00<00:09, 51021.58it/s][A
2025-01-10T13:49:20.7818490Z 
2025-01-10T13:49:20.7818670Z Packets:   ████▏                                                                           26383/500000 [00:00<00:09, 51991.90it/s][A
2025-01-10T13:49:20.7818670Z 
2025-01-10T13:49:20.7818840Z Packets:   █████                                                                           31776/500000 [00:00<00:08, 52583.19it/s][A
2025-01-10T13:49:20.7818860Z 
2025-01-10T13:49:20.7819030Z Packets:   █████▉                                                                          37009/500000 [00:00<00:09, 50095.01it/s][A
2025-01-10T13:49:20.7819040Z 
2025-01-10T13:49:20.7819220Z Packets:   ██████▊                                                                         42421/500000 [00:00<00:08, 51272.22it/s][A
2025-01-10T13:49:20.7819220Z 
2025-01-10T13:49:20.7819390Z Packets:   ███████▋                                                                        47899/500000 [00:00<00:08, 52305.57it/s][A
2025-01-10T13:49:20.7819400Z 
2025-01-10T13:49:20.7819580Z Packets:   ████████▌                                                                       53361/500000 [00:01<00:08, 52991.10it/s][A
2025-01-10T13:49:20.7819580Z 
2025-01-10T13:49:20.7819760Z Packets:   █████████▍                                                                      58671/500000 [00:01<00:08, 50732.65it/s][A
2025-01-10T13:49:20.7819760Z 
2025-01-10T13:49:20.7819990Z Packets:   ██████████▎                                                                     64205/500000 [00:01<00:08, 52062.37it/s][A
2025-01-10T13:49:20.7819990Z 
2025-01-10T13:49:20.7820190Z Packets:   ███████████▏                                                                    69588/500000 [00:01<00:08, 52577.66it/s][A
2025-01-10T13:49:20.7820190Z 
2025-01-10T13:49:20.7820370Z Packets:   ████████████                                                                    75025/500000 [00:01<00:08, 53104.36it/s][A
2025-01-10T13:49:20.7820370Z 
2025-01-10T13:49:20.7820560Z Packets:   ████████████▊                                                                   80350/500000 [00:01<00:08, 50769.94it/s][A
2025-01-10T13:49:20.7820560Z 
2025-01-10T13:49:20.7820740Z Packets:   █████████████▋                                                                  85731/500000 [00:01<00:08, 51644.24it/s][A
2025-01-10T13:49:20.7820750Z 
2025-01-10T13:49:20.7820930Z Packets:   ██████████████▌                                                                 91171/500000 [00:01<00:07, 52443.25it/s][A
2025-01-10T13:49:20.7820940Z 
2025-01-10T13:49:20.7821120Z Packets:   ███████████████▍                                                                96465/500000 [00:01<00:07, 52587.12it/s][A
2025-01-10T13:49:20.7821120Z 
2025-01-10T13:49:20.7821320Z Packets:   ████████████████▎                                                               101758/500000 [00:01<00:07, 52682.87it/s][A
2025-01-10T13:49:20.7821320Z 
2025-01-10T13:49:20.7821510Z Packets:   █████████████████▏                                                              107209/500000 [00:02<00:07, 53223.08it/s][A
2025-01-10T13:49:20.7821510Z 
2025-01-10T13:49:20.7821700Z Packets:   ██████████████████                                                              112539/500000 [00:02<00:07, 51199.62it/s][A
2025-01-10T13:49:20.7821710Z 
2025-01-10T13:49:20.7821890Z Packets:   ██████████████████▊                                                             117911/500000 [00:02<00:07, 51930.67it/s][A
2025-01-10T13:49:20.7821900Z 
2025-01-10T13:49:20.7822090Z Packets:   ███████████████████▋                                                            123260/500000 [00:02<00:07, 52387.51it/s][A
2025-01-10T13:49:20.7822100Z 
2025-01-10T13:49:20.7822510Z Packets:   ████████████████████▌                                                           128512/500000 [00:02<00:07, 51510.04it/s][A
2025-01-10T13:49:20.7822530Z 
2025-01-10T13:49:20.7822730Z Packets:   █████████████████████▍                                                          133675/500000 [00:02<00:07, 49264.23it/s][A
2025-01-10T13:49:20.7822730Z 
2025-01-10T13:49:20.7822930Z Packets:   ██████████████████████▏                                                         138626/500000 [00:02<00:07, 46212.83it/s][A
2025-01-10T13:49:20.7822930Z 
2025-01-10T13:49:20.7823120Z Packets:   ██████████████████████▉                                                         143293/500000 [00:02<00:08, 44336.42it/s][A
2025-01-10T13:49:20.7823300Z 
2025-01-10T13:49:20.7823510Z Packets:   ███████████████████████▋                                                        147764/500000 [00:02<00:08, 42076.78it/s][A
2025-01-10T13:49:20.7823510Z 
2025-01-10T13:49:20.7823720Z Packets:   ████████████████████████▎                                                       152007/500000 [00:03<00:08, 40999.62it/s][A
2025-01-10T13:49:20.7823720Z 
2025-01-10T13:49:20.7823910Z Packets:   █████████████████████████▏                                                      157138/500000 [00:03<00:07, 43814.43it/s][A
2025-01-10T13:49:20.7823910Z 
2025-01-10T13:49:20.7824110Z Packets:   █████████████████████████▉                                                      162243/500000 [00:03<00:07, 45845.14it/s][A
2025-01-10T13:49:20.7824110Z 
2025-01-10T13:49:20.7824300Z Packets:   ██████████████████████████▋                                                     167137/500000 [00:03<00:07, 46729.65it/s][A
2025-01-10T13:49:20.7824300Z 
2025-01-10T13:49:20.7824500Z Packets:   ███████████████████████████▌                                                    172382/500000 [00:03<00:06, 48389.42it/s][A
2025-01-10T13:49:20.7824510Z 
2025-01-10T13:49:20.7824700Z Packets:   ████████████████████████████▎                                                   177251/500000 [00:03<00:06, 47343.05it/s][A
2025-01-10T13:49:20.7824720Z 
2025-01-10T13:49:20.7824910Z Packets:   █████████████████████████████▏                                                  182398/500000 [00:03<00:06, 48537.14it/s][A
2025-01-10T13:49:20.7824910Z 
2025-01-10T13:49:20.7825110Z Packets:   ██████████████████████████████                                                  187604/500000 [00:03<00:06, 49569.44it/s][A
2025-01-10T13:49:20.7825120Z 
2025-01-10T13:49:20.7825310Z Packets:   ██████████████████████████████▊                                                 192690/500000 [00:03<00:06, 49948.67it/s][A
2025-01-10T13:49:20.7825320Z 
2025-01-10T13:49:20.7825520Z Packets:   ███████████████████████████████▋                                                197871/500000 [00:03<00:05, 50499.18it/s][A
2025-01-10T13:49:20.7825530Z 
2025-01-10T13:49:20.7825740Z Packets:   ████████████████████████████████▍                                               202931/500000 [00:04<00:06, 48962.89it/s][A
2025-01-10T13:49:20.7825740Z 
2025-01-10T13:49:20.7825980Z Packets:   █████████████████████████████████▎                                              208184/500000 [00:04<00:05, 50001.70it/s][A
2025-01-10T13:49:20.7825990Z 
2025-01-10T13:49:20.7826200Z Packets:   ██████████████████████████████████▏                                             213388/500000 [00:04<00:05, 50601.14it/s][A
2025-01-10T13:49:20.7826200Z 
2025-01-10T13:49:20.7826400Z Packets:   ██████████████████████████████████▉                                             218638/500000 [00:04<00:05, 51161.32it/s][A
2025-01-10T13:49:20.7826410Z 
2025-01-10T13:49:20.7826610Z Packets:   ███████████████████████████████████▊                                            223793/500000 [00:04<00:05, 51273.44it/s][A
2025-01-10T13:49:20.7826660Z 
2025-01-10T13:49:20.7826870Z Packets:   ████████████████████████████████████▋                                           228927/500000 [00:04<00:05, 49365.27it/s][A
2025-01-10T13:49:20.7826870Z 
2025-01-10T13:49:20.7827080Z Packets:   █████████████████████████████████████▍                                          234125/500000 [00:04<00:05, 50124.51it/s][A
2025-01-10T13:49:20.7827090Z 
2025-01-10T13:49:20.7827290Z Packets:   ██████████████████████████████████████▎                                         239277/500000 [00:04<00:05, 50533.30it/s][A
2025-01-10T13:49:20.7827300Z 
2025-01-10T13:49:20.7827500Z Packets:   ███████████████████████████████████████                                         244343/500000 [00:04<00:05, 48584.25it/s][A
2025-01-10T13:49:20.7827510Z 
2025-01-10T13:49:20.7827710Z Packets:   ███████████████████████████████████████▉                                        249224/500000 [00:05<00:05, 48216.04it/s][A
2025-01-10T13:49:20.7827730Z 
2025-01-10T13:49:20.7827940Z Packets:   ████████████████████████████████████████▋                                       254388/500000 [00:05<00:04, 49207.23it/s][A
2025-01-10T13:49:20.7827940Z 
2025-01-10T13:49:20.7828160Z Packets:   █████████████████████████████████████████▍                                      259323/500000 [00:05<00:05, 47385.45it/s][A
2025-01-10T13:49:20.7828160Z 
2025-01-10T13:49:20.7828370Z Packets:   ██████████████████████████████████████████▎                                     264572/500000 [00:05<00:04, 48849.73it/s][A
2025-01-10T13:49:20.7828370Z 
2025-01-10T13:49:20.7828580Z Packets:   ███████████████████████████████████████████                                     269479/500000 [00:05<00:04, 46680.27it/s][A
2025-01-10T13:49:20.7828590Z 
2025-01-10T13:49:20.7828800Z Packets:   ███████████████████████████████████████████▉                                    274654/500000 [00:05<00:04, 48116.84it/s][A
2025-01-10T13:49:20.7828800Z 
2025-01-10T13:49:20.7829010Z Packets:   ████████████████████████████████████████████▊                                   279825/500000 [00:05<00:04, 49152.18it/s][A
2025-01-10T13:49:20.7829030Z 
2025-01-10T13:49:20.7829240Z Packets:   █████████████████████████████████████████████▌                                  284765/500000 [00:05<00:04, 47563.86it/s][A
2025-01-10T13:49:20.7829300Z 
2025-01-10T13:49:20.7829510Z Packets:   ██████████████████████████████████████████████▍                                 289954/500000 [00:05<00:04, 48801.78it/s][A
2025-01-10T13:49:20.7829520Z 
2025-01-10T13:49:20.7829730Z Packets:   ███████████████████████████████████████████████▏                                295091/500000 [00:05<00:04, 49542.39it/s][A
2025-01-10T13:49:20.7829730Z 
2025-01-10T13:49:20.7829950Z Packets:   ████████████████████████████████████████████████                                300064/500000 [00:06<00:04, 46971.51it/s][A
2025-01-10T13:49:20.7829950Z 
2025-01-10T13:49:20.7830160Z Packets:   ████████████████████████████████████████████████▊                               305416/500000 [00:06<00:03, 48831.27it/s][A
2025-01-10T13:49:20.7830220Z 
2025-01-10T13:49:20.7830440Z Packets:   █████████████████████████████████████████████████▋                              310336/500000 [00:06<00:04, 47199.67it/s][A
2025-01-10T13:49:20.7830440Z 
2025-01-10T13:49:20.7830660Z Packets:   ██████████████████████████████████████████████████▍                             315561/500000 [00:06<00:03, 48636.22it/s][A
2025-01-10T13:49:20.7830670Z 
2025-01-10T13:49:20.7830880Z Packets:   ███████████████████████████████████████████████████▎                            320829/500000 [00:06<00:03, 49802.88it/s][A
2025-01-10T13:49:20.7830880Z 
2025-01-10T13:49:20.7831100Z Packets:   ████████████████████████████████████████████████████▏                           325836/500000 [00:06<00:03, 48038.76it/s][A
2025-01-10T13:49:20.7831110Z 
2025-01-10T13:49:20.7831320Z Packets:   ████████████████████████████████████████████████████▉                           331034/500000 [00:06<00:03, 49165.09it/s][A
2025-01-10T13:49:20.7831330Z 
2025-01-10T13:49:20.7831560Z Packets:   █████████████████████████████████████████████████████▊                          336301/500000 [00:06<00:03, 50182.48it/s][A
2025-01-10T13:49:20.7831560Z 
2025-01-10T13:49:20.7831830Z Packets:   ██████████████████████████████████████████████████████▌                         341340/500000 [00:06<00:03, 48033.03it/s][A
2025-01-10T13:49:20.7831830Z 
2025-01-10T13:49:20.7832060Z Packets:   ███████████████████████████████████████████████████████▍                        346639/500000 [00:07<00:03, 49448.09it/s][A
2025-01-10T13:49:20.7832070Z 
2025-01-10T13:49:20.7832290Z Packets:   ████████████████████████████████████████████████████████▎                       351887/500000 [00:07<00:02, 50324.65it/s][A
2025-01-10T13:49:20.7832290Z 
2025-01-10T13:49:20.7832520Z Packets:   █████████████████████████████████████████████████████████                       356943/500000 [00:07<00:02, 48364.93it/s][A
2025-01-10T13:49:20.7832540Z 
2025-01-10T13:49:20.7832760Z Packets:   █████████████████████████████████████████████████████████▉                      361809/500000 [00:07<00:02, 48218.03it/s][A
2025-01-10T13:49:20.7832760Z 
2025-01-10T13:49:20.7833000Z Packets:   ██████████████████████████████████████████████████████████▋                     366651/500000 [00:07<00:02, 46703.69it/s][A
2025-01-10T13:49:20.7833000Z 
2025-01-10T13:49:20.7833230Z Packets:   ███████████████████████████████████████████████████████████▍                    371772/500000 [00:07<00:02, 47990.95it/s][A
2025-01-10T13:49:20.7833230Z 
2025-01-10T13:49:20.7837240Z Packets:   ████████████████████████████████████████████████████████████▎                   376592/500000 [00:07<00:02, 46803.09it/s][A
2025-01-10T13:49:20.7837250Z 
2025-01-10T13:49:20.7837560Z Packets:   █████████████████████████████████████████████████████████████                   381759/500000 [00:07<00:02, 48200.71it/s][A
2025-01-10T13:49:20.7837570Z 
2025-01-10T13:49:20.7837790Z Packets:   █████████████████████████████████████████████████████████████▊                  386598/500000 [00:07<00:02, 46632.53it/s][A
2025-01-10T13:49:20.7837960Z 
2025-01-10T13:49:20.7838190Z Packets:   ██████████████████████████████████████████████████████████████▋                 391726/500000 [00:07<00:02, 47963.07it/s][A
2025-01-10T13:49:20.7838210Z 
2025-01-10T13:49:20.7838430Z Packets:   ███████████████████████████████████████████████████████████████▌                396926/500000 [00:08<00:02, 49133.76it/s][A
2025-01-10T13:49:20.7838430Z 
2025-01-10T13:49:20.7838660Z Packets:   ████████████████████████████████████████████████████████████████▎               401858/500000 [00:08<00:02, 47310.81it/s][A
2025-01-10T13:49:20.7838660Z 
2025-01-10T13:49:20.7838890Z Packets:   █████████████████████████████████████████████████████████████████▏              407107/500000 [00:08<00:01, 48797.63it/s][A
2025-01-10T13:49:20.7838890Z 
2025-01-10T13:49:20.7839110Z Packets:   █████████████████████████████████████████████████████████████████▉              412011/500000 [00:08<00:01, 47157.77it/s][A
2025-01-10T13:49:20.7839130Z 
2025-01-10T13:49:20.7839360Z Packets:   ██████████████████████████████████████████████████████████████████▊             417206/500000 [00:08<00:01, 48529.36it/s][A
2025-01-10T13:49:20.7839360Z 
2025-01-10T13:49:20.7839770Z Packets:   ███████████████████████████████████████████████████████████████████▌            422384/500000 [00:08<00:01, 49472.59it/s][A
2025-01-10T13:49:20.7839770Z 
2025-01-10T13:49:20.7840010Z Packets:   ████████████████████████████████████████████████████████████████████▍           427352/500000 [00:08<00:01, 47571.48it/s][A
2025-01-10T13:49:20.7840010Z 
2025-01-10T13:49:20.7840240Z Packets:   █████████████████████████████████████████████████████████████████████▏          432136/500000 [00:08<00:01, 45904.17it/s][A
2025-01-10T13:49:20.7840250Z 
2025-01-10T13:49:20.7840480Z Packets:   █████████████████████████████████████████████████████████████████████▉          437164/500000 [00:08<00:01, 47141.80it/s][A
2025-01-10T13:49:20.7840840Z 
2025-01-10T13:49:20.7841170Z Packets:   ██████████████████████████████████████████████████████████████████████▋         441904/500000 [00:09<00:01, 45468.94it/s][A
2025-01-10T13:49:20.7841180Z 
2025-01-10T13:49:20.7841420Z Packets:   ███████████████████████████████████████████████████████████████████████▌        446999/500000 [00:09<00:01, 47021.97it/s][A
2025-01-10T13:49:20.7841430Z 
2025-01-10T13:49:20.7841650Z Packets:   ████████████████████████████████████████████████████████████████████████▎       452113/500000 [00:09<00:00, 48209.03it/s][A
2025-01-10T13:49:20.7841660Z 
2025-01-10T13:49:20.7841890Z Packets:   █████████████████████████████████████████████████████████████████████████       456958/500000 [00:09<00:00, 46801.91it/s][A
2025-01-10T13:49:20.7841890Z 
2025-01-10T13:49:20.7842130Z Packets:   █████████████████████████████████████████████████████████████████████████▉      462024/500000 [00:09<00:00, 47910.84it/s][A
2025-01-10T13:49:20.7842140Z 
2025-01-10T13:49:20.7842370Z Packets:   ██████████████████████████████████████████████████████████████████████████▋     466836/500000 [00:09<00:00, 47275.40it/s][A
2025-01-10T13:49:20.7842380Z 
2025-01-10T13:49:20.7842740Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471579/500000 [00:09<00:00, 47131.76it/s][A
2025-01-10T13:49:20.7842740Z 
2025-01-10T13:49:20.7843130Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   476719/500000 [00:09<00:00, 46727.26it/s][A
2025-01-10T13:49:20.7843140Z 
2025-01-10T13:49:20.7843370Z Packets:   █████████████████████████████████████████████████████████████████████████████   481880/500000 [00:09<00:00, 48130.00it/s][A
2025-01-10T13:49:20.7843380Z 
2025-01-10T13:49:20.7843610Z Packets:   █████████████████████████████████████████████████████████████████████████████▉  486872/500000 [00:09<00:00, 48649.24it/s][A
2025-01-10T13:49:20.7843610Z 
2025-01-10T13:49:20.7843850Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 491748/500000 [00:10<00:00, 45089.65it/s][A
2025-01-10T13:49:20.7843920Z 
2025-01-10T13:49:20.7844170Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496312/500000 [00:10<00:00, 42403.36it/s][A
2025-01-10T13:49:20.7844310Z Iterations:                                                                                17/? [05:07<00:00,  7.26s/it]
2025-01-10T13:49:20.7844310Z 
2025-01-10T13:49:20.7844550Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:11<00:00, 42403.36it/s][A
2025-01-10T13:49:20.7844680Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.7844800Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-10T13:49:20.7845070Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-10T13:49:20.7845380Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-10T13:49:20.7845720Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-10T13:49:20.7846110Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:20.7846290Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:20.7846370Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7846430Z 	Starting iteration 1 of 5
2025-01-10T13:49:20.7846510Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7846570Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-01-10T13:49:20.7846640Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-01-10T13:49:20.7846700Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7846700Z 
2025-01-10T13:49:20.7846780Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:20.7846840Z 	Plasma stratification:
2025-01-10T13:49:20.7846910Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:20.7847040Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-10T13:49:20.7847110Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-01-10T13:49:20.7847170Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-01-10T13:49:20.7847230Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-01-10T13:49:20.7847290Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-01-10T13:49:20.7847290Z 
2025-01-10T13:49:20.7847360Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:20.7847420Z 	Current t_inner = 9974.969 K
2025-01-10T13:49:20.7847500Z 	Expected t_inner for next iteration = 10736.783 K
2025-01-10T13:49:20.7847510Z 
2025-01-10T13:49:20.7847580Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7847640Z 	Starting iteration 2 of 5
2025-01-10T13:49:20.7847720Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7847790Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-01-10T13:49:20.7847850Z 	Luminosity absorbed  = 3.624e+42 erg / s
2025-01-10T13:49:20.7847910Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7847920Z 
2025-01-10T13:49:20.7847990Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:20.7848050Z 	Plasma stratification:
2025-01-10T13:49:20.7848120Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:20.7848200Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:20.7848260Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-01-10T13:49:20.7848330Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-01-10T13:49:20.7848390Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-01-10T13:49:20.7848450Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-01-10T13:49:20.7848450Z 
2025-01-10T13:49:20.7848570Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:20.7848640Z 	Current t_inner = 10736.783 K
2025-01-10T13:49:20.7848720Z 	Expected t_inner for next iteration = 10718.619 K
2025-01-10T13:49:20.7848730Z 
2025-01-10T13:49:20.7848800Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7848860Z 	Starting iteration 3 of 5
2025-01-10T13:49:20.7848930Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7849000Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-01-10T13:49:20.7849060Z 	Luminosity absorbed  = 3.514e+42 erg / s
2025-01-10T13:49:20.7849120Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7849130Z 
2025-01-10T13:49:20.7849290Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-01-10T13:49:20.7849370Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:20.7849420Z 	Plasma stratification:
2025-01-10T13:49:20.7849510Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:20.7849590Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:20.7849650Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-01-10T13:49:20.7849710Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-01-10T13:49:20.7849770Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-01-10T13:49:20.7849830Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0921
2025-01-10T13:49:20.7849830Z 
2025-01-10T13:49:20.7849900Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:20.7849960Z 	Current t_inner = 10718.619 K
2025-01-10T13:49:20.7850040Z 	Expected t_inner for next iteration = 10696.651 K
2025-01-10T13:49:20.7850040Z 
2025-01-10T13:49:20.7850120Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7850170Z 	Starting iteration 4 of 5
2025-01-10T13:49:20.7850250Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7850310Z 	Luminosity emitted   = 1.082e+43 erg / s
2025-01-10T13:49:20.7850370Z 	Luminosity absorbed  = 3.437e+42 erg / s
2025-01-10T13:49:20.7850440Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7850450Z 
2025-01-10T13:49:20.7850610Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-01-10T13:49:20.7850680Z INFO     tardis.simulation.base:base.py:649 
2025-01-10T13:49:20.7850740Z 	Plasma stratification:
2025-01-10T13:49:20.7850860Z INFO     tardis.simulation.base:base.py:650 
2025-01-10T13:49:20.7850940Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-10T13:49:20.7851010Z 	0         1.07e+04 K  1.09e+04 K  0.491    0.49
2025-01-10T13:49:20.7851060Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-01-10T13:49:20.7851120Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-01-10T13:49:20.7851190Z 	15        1.04e+04 K  1.05e+04 K 0.0921  0.0902
2025-01-10T13:49:20.7851190Z 
2025-01-10T13:49:20.7851260Z INFO     tardis.simulation.base:base.py:652 
2025-01-10T13:49:20.7851320Z 	Current t_inner = 10696.651 K
2025-01-10T13:49:20.7851400Z 	Expected t_inner for next iteration = 10684.004 K
2025-01-10T13:49:20.7851410Z 
2025-01-10T13:49:20.7851480Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:20.7851540Z 	Simulation finished in 4 iterations 
2025-01-10T13:49:20.7851600Z 	Simulation took 9.09 s
2025-01-10T13:49:20.7851600Z 
2025-01-10T13:49:20.7851670Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7851730Z 	Starting iteration 5 of 5
2025-01-10T13:49:20.7851800Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7851870Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-01-10T13:49:20.7851930Z 	Luminosity absorbed  = 3.447e+42 erg / s
2025-01-10T13:49:20.7852000Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7852140Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-01-10T13:49:20.7852140Z 
2025-01-10T13:49:20.7852300Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11bc556a0>
2025-01-10T13:49:20.7852440Z simulation = <tardis.simulation.base.Simulation object at 0x301d5e7b0>
2025-01-10T13:49:20.7852490Z 
2025-01-10T13:49:20.7852550Z     def test_spectrum(self, simulation):
2025-01-10T13:49:20.7852700Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-01-10T13:49:20.7852770Z         expected = self.get_expected_data(key)
2025-01-10T13:49:20.7852820Z     
2025-01-10T13:49:20.7852890Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7852940Z     
2025-01-10T13:49:20.7853000Z >       assert_quantity_allclose(
2025-01-10T13:49:20.7853130Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-01-10T13:49:20.7853180Z             luminosity,
2025-01-10T13:49:20.7853230Z         )
2025-01-10T13:49:20.7853230Z 
2025-01-10T13:49:20.7853300Z tardis/tests/test_tardis_full.py:81: 
2025-01-10T13:49:20.7853390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7853650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7853710Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7853800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7853800Z 
2025-01-10T13:49:20.7854170Z args = (<function assert_allclose.<locals>.compare at 0x12d1fe7a0>, array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, .....), array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, ...,
2025-01-10T13:49:20.7854250Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7854450Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7854450Z 
2025-01-10T13:49:20.7854500Z     @wraps(func)
2025-01-10T13:49:20.7854560Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7854610Z         with self._recreate_cm():
2025-01-10T13:49:20.7854680Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7854730Z E           AssertionError: 
2025-01-10T13:49:20.7854820Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7854870Z E           
2025-01-10T13:49:20.7854940Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-01-10T13:49:20.7855050Z E           Max absolute difference among violations: 1.38672909e+39
2025-01-10T13:49:20.7855390Z E           Max relative difference among violations: 5.17890748
2025-01-10T13:49:20.7855530Z E            ACTUAL: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7855600Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7855730Z E            DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7855790Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7855790Z 
2025-01-10T13:49:20.7855960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7856100Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-01-10T13:49:20.7856110Z 
2025-01-10T13:49:20.7856260Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11bc55910>
2025-01-10T13:49:20.7856400Z simulation = <tardis.simulation.base.Simulation object at 0x301d5e7b0>
2025-01-10T13:49:20.7856410Z 
2025-01-10T13:49:20.7856490Z     def test_virtual_spectrum(self, simulation):
2025-01-10T13:49:20.7856630Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-01-10T13:49:20.7856700Z         expected = self.get_expected_data(key)
2025-01-10T13:49:20.7856750Z     
2025-01-10T13:49:20.7856830Z         luminosity = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7856870Z     
2025-01-10T13:49:20.7856930Z >       assert_quantity_allclose(
2025-01-10T13:49:20.7857070Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-01-10T13:49:20.7857120Z             luminosity,
2025-01-10T13:49:20.7857170Z         )
2025-01-10T13:49:20.7857170Z 
2025-01-10T13:49:20.7857230Z tardis/tests/test_tardis_full.py:92: 
2025-01-10T13:49:20.7857550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7857810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7857870Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7857960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7857960Z 
2025-01-10T13:49:20.7858310Z args = (<function assert_allclose.<locals>.compare at 0x1318a6660>, array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, .....), array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, ...,
2025-01-10T13:49:20.7858390Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7858590Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7858590Z 
2025-01-10T13:49:20.7858640Z     @wraps(func)
2025-01-10T13:49:20.7858690Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7858760Z         with self._recreate_cm():
2025-01-10T13:49:20.7858810Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7858880Z E           AssertionError: 
2025-01-10T13:49:20.7858960Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7859000Z E           
2025-01-10T13:49:20.7859080Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-01-10T13:49:20.7859190Z E           Max absolute difference among violations: 5.26760031e+38
2025-01-10T13:49:20.7859290Z E           Max relative difference among violations: 23978.84555943
2025-01-10T13:49:20.7859420Z E            ACTUAL: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7859490Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7859620Z E            DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7859680Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7859680Z 
2025-01-10T13:49:20.7859840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7860060Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-01-10T13:49:20.7860060Z 
2025-01-10T13:49:20.7860350Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc56360>
2025-01-10T13:49:20.7860500Z simulation = <tardis.simulation.base.Simulation object at 0x1523119d0>
2025-01-10T13:49:20.7860660Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-01-10T13:49:20.7860660Z 
2025-01-10T13:49:20.7860750Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:20.7860840Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7860890Z         j_blue_estimator = (
2025-01-10T13:49:20.7861060Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:20.7861100Z         )
2025-01-10T13:49:20.7861220Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:20.7861310Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:20.7861310Z 
2025-01-10T13:49:20.7861410Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:20.7861500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7861500Z 
2025-01-10T13:49:20.7861700Z args = (<function assert_allclose.<locals>.compare at 0x3286976a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7861750Z        [0., 0., 0.,.....,
2025-01-10T13:49:20.7861800Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7861850Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7861900Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:20.7862110Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7862110Z 
2025-01-10T13:49:20.7862160Z     @wraps(func)
2025-01-10T13:49:20.7862270Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7862330Z         with self._recreate_cm():
2025-01-10T13:49:20.7862380Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7862440Z E           AssertionError: 
2025-01-10T13:49:20.7862520Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7862570Z E           
2025-01-10T13:49:20.7862650Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:20.7862760Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:20.7862860Z E           Max relative difference among violations: 8.35741234
2025-01-10T13:49:20.7862940Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7863000Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7863070Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7863150Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7863210Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7863270Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7863280Z 
2025-01-10T13:49:20.7863440Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7863610Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-01-10T13:49:20.7863610Z 
2025-01-10T13:49:20.7863850Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc569c0>
2025-01-10T13:49:20.7863990Z simulation = <tardis.simulation.base.Simulation object at 0x1523119d0>
2025-01-10T13:49:20.7864120Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-01-10T13:49:20.7864130Z 
2025-01-10T13:49:20.7864210Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:20.7864280Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7864430Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:20.7864560Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7864630Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7864720Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7864770Z 
2025-01-10T13:49:20.7864880Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:20.7864970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7865220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7865290Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7865370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7865370Z 
2025-01-10T13:49:20.7865730Z args = (<function assert_allclose.<locals>.compare at 0x30beca200>, array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, .....), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T13:49:20.7865810Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7866010Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7866010Z 
2025-01-10T13:49:20.7866060Z     @wraps(func)
2025-01-10T13:49:20.7866120Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7866180Z         with self._recreate_cm():
2025-01-10T13:49:20.7866240Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7866300Z E           AssertionError: 
2025-01-10T13:49:20.7866370Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7866420Z E           
2025-01-10T13:49:20.7866490Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:20.7866600Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:20.7866700Z E           Max relative difference among violations: 5.83764686
2025-01-10T13:49:20.7866870Z E            ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7866940Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7867070Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7867130Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7867130Z 
2025-01-10T13:49:20.7867290Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7867470Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-01-10T13:49:20.7867470Z 
2025-01-10T13:49:20.7867710Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc571d0>
2025-01-10T13:49:20.7867860Z simulation = <tardis.simulation.base.Simulation object at 0x1523119d0>
2025-01-10T13:49:20.7868020Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-01-10T13:49:20.7868030Z 
2025-01-10T13:49:20.7868130Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:20.7868210Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7868350Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:20.7868480Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7868550Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7868640Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7868640Z 
2025-01-10T13:49:20.7868740Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:20.7868830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7869080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7869140Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7869240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7869240Z 
2025-01-10T13:49:20.7869630Z args = (<function assert_allclose.<locals>.compare at 0x32daeac00>, array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, .....), array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, ...,
2025-01-10T13:49:20.7869710Z        2.25671263e+31, 2.27943572e+31, 2.24394350e+31]))
2025-01-10T13:49:20.7869920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7869920Z 
2025-01-10T13:49:20.7869970Z     @wraps(func)
2025-01-10T13:49:20.7870030Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7870080Z         with self._recreate_cm():
2025-01-10T13:49:20.7870150Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7870200Z E           AssertionError: 
2025-01-10T13:49:20.7870280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7870330Z E           
2025-01-10T13:49:20.7870410Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.7870510Z E           Max absolute difference among violations: 5.00661745e+37
2025-01-10T13:49:20.7870610Z E           Max relative difference among violations: 6.79985816
2025-01-10T13:49:20.7870740Z E            ACTUAL: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-10T13:49:20.7870810Z E                  2.292907e+31, 2.257206e+31])
2025-01-10T13:49:20.7870940Z E            DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T13:49:20.7871010Z E                  2.279436e+31, 2.243943e+31])
2025-01-10T13:49:20.7871010Z 
2025-01-10T13:49:20.7871160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7871280Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:20.7871280Z 
2025-01-10T13:49:20.7871280Z 
2025-01-10T13:49:20.7871590Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 159947.49it/s][A
2025-01-10T13:49:20.7871820Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-01-10T13:49:20.7871830Z 
2025-01-10T13:49:20.7872080Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc56c30>
2025-01-10T13:49:20.7872220Z simulation = <tardis.simulation.base.Simulation object at 0x1781c2db0>
2025-01-10T13:49:20.7872380Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-01-10T13:49:20.7872380Z 
2025-01-10T13:49:20.7872480Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:20.7872550Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7872610Z         j_blue_estimator = (
2025-01-10T13:49:20.7872780Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:20.7872820Z         )
2025-01-10T13:49:20.7872940Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:20.7873030Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:20.7873030Z 
2025-01-10T13:49:20.7873130Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:20.7873220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7873230Z 
2025-01-10T13:49:20.7873430Z args = (<function assert_allclose.<locals>.compare at 0x12bc2e520>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7873480Z        [0., 0., 0.,.....,
2025-01-10T13:49:20.7873540Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7873590Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7873650Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:20.7873850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7873850Z 
2025-01-10T13:49:20.7873900Z     @wraps(func)
2025-01-10T13:49:20.7873950Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7874010Z         with self._recreate_cm():
2025-01-10T13:49:20.7874070Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7874130Z E           AssertionError: 
2025-01-10T13:49:20.7874460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7874520Z E           
2025-01-10T13:49:20.7874610Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:20.7874710Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:20.7874810Z E           Max relative difference among violations: 4.08461732
2025-01-10T13:49:20.7874880Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7874950Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7875010Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7875100Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7875160Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7875230Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7875230Z 
2025-01-10T13:49:20.7875390Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7875560Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-01-10T13:49:20.7875560Z 
2025-01-10T13:49:20.7875810Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc57380>
2025-01-10T13:49:20.7875950Z simulation = <tardis.simulation.base.Simulation object at 0x1781c2db0>
2025-01-10T13:49:20.7876080Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-01-10T13:49:20.7876080Z 
2025-01-10T13:49:20.7876160Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:20.7876240Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7876390Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:20.7876650Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7876720Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7876810Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7876810Z 
2025-01-10T13:49:20.7876920Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:20.7877000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7877260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7877320Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7877410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7877410Z 
2025-01-10T13:49:20.7877760Z args = (<function assert_allclose.<locals>.compare at 0x11cd3e700>, array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, .....), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T13:49:20.7877840Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7878040Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7878040Z 
2025-01-10T13:49:20.7878090Z     @wraps(func)
2025-01-10T13:49:20.7878150Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7878210Z         with self._recreate_cm():
2025-01-10T13:49:20.7878270Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7878320Z E           AssertionError: 
2025-01-10T13:49:20.7878400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7878440Z E           
2025-01-10T13:49:20.7878520Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:20.7878610Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:20.7878710Z E           Max relative difference among violations: 3.08310014
2025-01-10T13:49:20.7878840Z E            ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7878900Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7879020Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7879110Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7879120Z 
2025-01-10T13:49:20.7879280Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7879440Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-01-10T13:49:20.7879450Z 
2025-01-10T13:49:20.7879680Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc579b0>
2025-01-10T13:49:20.7879810Z simulation = <tardis.simulation.base.Simulation object at 0x1781c2db0>
2025-01-10T13:49:20.7879970Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-01-10T13:49:20.7879970Z 
2025-01-10T13:49:20.7880080Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:20.7880150Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7880290Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:20.7880410Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7880480Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7880560Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7880570Z 
2025-01-10T13:49:20.7880660Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:20.7880740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7880990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7881050Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7881130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7881170Z 
2025-01-10T13:49:20.7881510Z args = (<function assert_allclose.<locals>.compare at 0x13391d300>, array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, .....), array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, ...,
2025-01-10T13:49:20.7881590Z        1.35260736e+31, 1.33049749e+31, 1.29446216e+31]))
2025-01-10T13:49:20.7881780Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7881780Z 
2025-01-10T13:49:20.7881830Z     @wraps(func)
2025-01-10T13:49:20.7881880Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7881940Z         with self._recreate_cm():
2025-01-10T13:49:20.7882000Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7882050Z E           AssertionError: 
2025-01-10T13:49:20.7882130Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7882170Z E           
2025-01-10T13:49:20.7882240Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.7882410Z E           Max absolute difference among violations: 2.90101642e+37
2025-01-10T13:49:20.7882500Z E           Max relative difference among violations: 96.4428449
2025-01-10T13:49:20.7882620Z E            ACTUAL: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-10T13:49:20.7882680Z E                  1.375141e+31, 1.337928e+31])
2025-01-10T13:49:20.7882810Z E            DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T13:49:20.7882870Z E                  1.330497e+31, 1.294462e+31])
2025-01-10T13:49:20.7882870Z 
2025-01-10T13:49:20.7883020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7883280Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-01-10T13:49:20.7883290Z 
2025-01-10T13:49:20.7883520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc56f30>
2025-01-10T13:49:20.7883660Z simulation = <tardis.simulation.base.Simulation object at 0x12cc48680>
2025-01-10T13:49:20.7883800Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-01-10T13:49:20.7883810Z 
2025-01-10T13:49:20.7883980Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:20.7884050Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7884110Z         j_blue_estimator = (
2025-01-10T13:49:20.7884260Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:20.7884310Z         )
2025-01-10T13:49:20.7884420Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:20.7884500Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:20.7884500Z 
2025-01-10T13:49:20.7884590Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:20.7884670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7884680Z 
2025-01-10T13:49:20.7884870Z args = (<function assert_allclose.<locals>.compare at 0x17b03d580>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7884920Z        [0., 0., 0.,.....,
2025-01-10T13:49:20.7884970Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7885020Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7885070Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:20.7885270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7885270Z 
2025-01-10T13:49:20.7885310Z     @wraps(func)
2025-01-10T13:49:20.7885360Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7885420Z         with self._recreate_cm():
2025-01-10T13:49:20.7885480Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7885530Z E           AssertionError: 
2025-01-10T13:49:20.7885610Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7885690Z E           
2025-01-10T13:49:20.7885770Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:20.7885870Z E           Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:20.7885970Z E           Max relative difference among violations: 4.08461732
2025-01-10T13:49:20.7886040Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7886100Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7886170Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7886240Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7886300Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7886360Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7886360Z 
2025-01-10T13:49:20.7886500Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7886660Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-01-10T13:49:20.7886670Z 
2025-01-10T13:49:20.7886900Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc575c0>
2025-01-10T13:49:20.7887030Z simulation = <tardis.simulation.base.Simulation object at 0x12cc48680>
2025-01-10T13:49:20.7887170Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-01-10T13:49:20.7887170Z 
2025-01-10T13:49:20.7887240Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:20.7887310Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7887460Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:20.7887570Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7887650Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7887730Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7887730Z 
2025-01-10T13:49:20.7887830Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:20.7887910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7888160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7888260Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7888340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7888340Z 
2025-01-10T13:49:20.7888680Z args = (<function assert_allclose.<locals>.compare at 0x1194653a0>, array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, .....), array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, ...,
2025-01-10T13:49:20.7888760Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7888950Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7888950Z 
2025-01-10T13:49:20.7889000Z     @wraps(func)
2025-01-10T13:49:20.7889050Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7889110Z         with self._recreate_cm():
2025-01-10T13:49:20.7889160Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7889220Z E           AssertionError: 
2025-01-10T13:49:20.7889290Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7889340Z E           
2025-01-10T13:49:20.7889410Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:20.7889510Z E           Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:20.7889600Z E           Max relative difference among violations: 3.08310014
2025-01-10T13:49:20.7889730Z E            ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7889790Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7889910Z E            DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7889970Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7890010Z 
2025-01-10T13:49:20.7890160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7890330Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-01-10T13:49:20.7890330Z 
2025-01-10T13:49:20.7890560Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc57bf0>
2025-01-10T13:49:20.7890700Z simulation = <tardis.simulation.base.Simulation object at 0x12cc48680>
2025-01-10T13:49:20.7890850Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-01-10T13:49:20.7890850Z 
2025-01-10T13:49:20.7890950Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:20.7891020Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7891170Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:20.7891280Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7891360Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7891440Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7891450Z 
2025-01-10T13:49:20.7891540Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:20.7891620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7891870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7891930Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7892010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7892010Z 
2025-01-10T13:49:20.7892340Z args = (<function assert_allclose.<locals>.compare at 0x30c999d00>, array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, .....), array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, ...,
2025-01-10T13:49:20.7892420Z        1.27325829e+31, 1.26097974e+31, 1.22258748e+31]))
2025-01-10T13:49:20.7892610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7892620Z 
2025-01-10T13:49:20.7892660Z     @wraps(func)
2025-01-10T13:49:20.7892900Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7892970Z         with self._recreate_cm():
2025-01-10T13:49:20.7893030Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7893080Z E           AssertionError: 
2025-01-10T13:49:20.7893150Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7893200Z E           
2025-01-10T13:49:20.7893270Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.7893370Z E           Max absolute difference among violations: 2.99183385e+37
2025-01-10T13:49:20.7893460Z E           Max relative difference among violations: 98.22574798
2025-01-10T13:49:20.7893590Z E            ACTUAL: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-10T13:49:20.7893650Z E                  1.193005e+31, 1.164854e+31])
2025-01-10T13:49:20.7893780Z E            DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T13:49:20.7893840Z E                  1.260980e+31, 1.222587e+31])
2025-01-10T13:49:20.7893840Z 
2025-01-10T13:49:20.7893990Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7897560Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:20.7897580Z 
2025-01-10T13:49:20.7897580Z 
2025-01-10T13:49:20.7897930Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 154474.32it/s][A
2025-01-10T13:49:20.7898090Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-01-10T13:49:20.7898100Z 
2025-01-10T13:49:20.7898330Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc56db0>
2025-01-10T13:49:20.7898840Z simulation = <tardis.simulation.base.Simulation object at 0x130ed17f0>
2025-01-10T13:49:20.7898990Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-01-10T13:49:20.7898990Z 
2025-01-10T13:49:20.7899090Z     def test_j_blue_estimators(self, simulation, request):
2025-01-10T13:49:20.7899170Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7899220Z         j_blue_estimator = (
2025-01-10T13:49:20.7899380Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-01-10T13:49:20.7899420Z         )
2025-01-10T13:49:20.7899520Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-01-10T13:49:20.7899610Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-01-10T13:49:20.7899610Z 
2025-01-10T13:49:20.7899700Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-01-10T13:49:20.7899780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7899790Z 
2025-01-10T13:49:20.7899980Z args = (<function assert_allclose.<locals>.compare at 0x130fd5120>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7900030Z        [0., 0., 0.,.....,
2025-01-10T13:49:20.7900070Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7900130Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7900190Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-01-10T13:49:20.7900380Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7900390Z 
2025-01-10T13:49:20.7900430Z     @wraps(func)
2025-01-10T13:49:20.7900480Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7900540Z         with self._recreate_cm():
2025-01-10T13:49:20.7900590Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7900650Z E           AssertionError: 
2025-01-10T13:49:20.7900720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7900770Z E           
2025-01-10T13:49:20.7900850Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:20.7900960Z E           Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:20.7901050Z E           Max relative difference among violations: 8.35741234
2025-01-10T13:49:20.7901200Z E            ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7901270Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7901330Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7901400Z E            DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7901460Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.7901520Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.7901530Z 
2025-01-10T13:49:20.7901670Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7901830Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-01-10T13:49:20.7901870Z 
2025-01-10T13:49:20.7902100Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc57500>
2025-01-10T13:49:20.7902240Z simulation = <tardis.simulation.base.Simulation object at 0x130ed17f0>
2025-01-10T13:49:20.7902370Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-01-10T13:49:20.7902370Z 
2025-01-10T13:49:20.7902450Z     def test_spectrum(self, simulation, request):
2025-01-10T13:49:20.7902520Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7902660Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-01-10T13:49:20.7902780Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7902850Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7902930Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7902940Z 
2025-01-10T13:49:20.7903030Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-01-10T13:49:20.7903110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7903360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7903420Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7903510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7903510Z 
2025-01-10T13:49:20.7903850Z args = (<function assert_allclose.<locals>.compare at 0x12d32ff60>, array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, .....), array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, ...,
2025-01-10T13:49:20.7903920Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.7904110Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7904110Z 
2025-01-10T13:49:20.7904160Z     @wraps(func)
2025-01-10T13:49:20.7904220Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7904270Z         with self._recreate_cm():
2025-01-10T13:49:20.7904330Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7904380Z E           AssertionError: 
2025-01-10T13:49:20.7904460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7904500Z E           
2025-01-10T13:49:20.7904570Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:20.7904670Z E           Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:20.7904770Z E           Max relative difference among violations: 5.83764686
2025-01-10T13:49:20.7904890Z E            ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7904950Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7905080Z E            DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.7905130Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.7905140Z 
2025-01-10T13:49:20.7905290Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7905450Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-01-10T13:49:20.7905460Z 
2025-01-10T13:49:20.7905730Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11bc57b00>
2025-01-10T13:49:20.7905870Z simulation = <tardis.simulation.base.Simulation object at 0x130ed17f0>
2025-01-10T13:49:20.7906030Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-01-10T13:49:20.7906030Z 
2025-01-10T13:49:20.7906130Z     def test_spectrum_integrated(self, simulation, request):
2025-01-10T13:49:20.7906200Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7906350Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-01-10T13:49:20.7906460Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-01-10T13:49:20.7906580Z         expected = u.Quantity(expected, "erg /s")
2025-01-10T13:49:20.7906660Z >       assert_quantity_allclose(luminosity, expected)
2025-01-10T13:49:20.7906670Z 
2025-01-10T13:49:20.7906760Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-01-10T13:49:20.7906850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7907090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-01-10T13:49:20.7907150Z     np.testing.assert_allclose(
2025-01-10T13:49:20.7907230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7907240Z 
2025-01-10T13:49:20.7907570Z args = (<function assert_allclose.<locals>.compare at 0x12d32f600>, array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, .....), array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, ...,
2025-01-10T13:49:20.7907640Z        2.08252810e+31, 2.08867593e+31, 2.06027793e+31]))
2025-01-10T13:49:20.7907840Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7907840Z 
2025-01-10T13:49:20.7907890Z     @wraps(func)
2025-01-10T13:49:20.7907940Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7908000Z         with self._recreate_cm():
2025-01-10T13:49:20.7908060Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7908110Z E           AssertionError: 
2025-01-10T13:49:20.7908190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7908230Z E           
2025-01-10T13:49:20.7908300Z E           Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.7908400Z E           Max absolute difference among violations: 5.0153284e+37
2025-01-10T13:49:20.7908500Z E           Max relative difference among violations: 5.96359613
2025-01-10T13:49:20.7908630Z E            ACTUAL: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-10T13:49:20.7908690Z E                  2.124305e+31, 2.101081e+31])
2025-01-10T13:49:20.7908810Z E            DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T13:49:20.7908870Z E                  2.088676e+31, 2.060278e+31])
2025-01-10T13:49:20.7908880Z 
2025-01-10T13:49:20.7909030Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7909140Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-10T13:49:20.7909140Z 
2025-01-10T13:49:20.7909650Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:49:20.7909840Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x177ee8da0>
2025-01-10T13:49:20.7910110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:49:20.7910110Z 
2025-01-10T13:49:20.7910170Z     def test_montecarlo_main_loop(
2025-01-10T13:49:20.7910230Z         montecarlo_main_loop_config,
2025-01-10T13:49:20.7910320Z         regression_data,
2025-01-10T13:49:20.7910370Z         atomic_dataset,
2025-01-10T13:49:20.7910410Z     ):
2025-01-10T13:49:20.7910480Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:49:20.7910600Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T13:49:20.7910660Z             montecarlo_main_loop_config,
2025-01-10T13:49:20.7910710Z             atom_data=atomic_dataset,
2025-01-10T13:49:20.7910780Z             virtual_packet_logging=False,
2025-01-10T13:49:20.7910830Z             legacy_mode_enabled=True,
2025-01-10T13:49:20.7910880Z         )
2025-01-10T13:49:20.7910960Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T13:49:20.7911080Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T13:49:20.7911120Z     
2025-01-10T13:49:20.7911220Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T13:49:20.7911280Z             montecarlo_main_loop_simulation
2025-01-10T13:49:20.7911330Z         )
2025-01-10T13:49:20.7911370Z     
2025-01-10T13:49:20.7911430Z         # Load compare data from refdata
2025-01-10T13:49:20.7911470Z     
2025-01-10T13:49:20.7911530Z         expected_nu = expected_hdf_store[
2025-01-10T13:49:20.7911620Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:49:20.7911660Z         ]
2025-01-10T13:49:20.7911730Z         expected_energy = expected_hdf_store[
2025-01-10T13:49:20.7911830Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:49:20.7911870Z         ]
2025-01-10T13:49:20.7911950Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:49:20.7912060Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:49:20.7912100Z         ]
2025-01-10T13:49:20.7912180Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:49:20.7912270Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:49:20.7912310Z         ]
2025-01-10T13:49:20.7912370Z         expected_hdf_store.close()
2025-01-10T13:49:20.7912520Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-01-10T13:49:20.7912650Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:49:20.7912750Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:49:20.7912810Z         actual_nu_bar_estimator = (
2025-01-10T13:49:20.7912910Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T13:49:20.7912960Z         )
2025-01-10T13:49:20.7913090Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T13:49:20.7913140Z     
2025-01-10T13:49:20.7913180Z         # Compare
2025-01-10T13:49:20.7913240Z >       npt.assert_allclose(
2025-01-10T13:49:20.7913360Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-01-10T13:49:20.7913400Z         )
2025-01-10T13:49:20.7913400Z 
2025-01-10T13:49:20.7913530Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-01-10T13:49:20.7913620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7913630Z 
2025-01-10T13:49:20.7913950Z args = (<function assert_allclose.<locals>.compare at 0x32ebcfe20>, array([9.40997647e+28, 8.06632443e+28, 7.20256533e+28, 6.....88449508e+28, 3.76156653e+28, 3.64401717e+28,
2025-01-10T13:49:20.7914050Z        3.53517538e+28, 3.45355503e+28, 3.34541304e+28, 3.26838651e+28]))
2025-01-10T13:49:20.7914240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7914250Z 
2025-01-10T13:49:20.7914290Z     @wraps(func)
2025-01-10T13:49:20.7914350Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7914400Z         with self._recreate_cm():
2025-01-10T13:49:20.7914460Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7914510Z E           AssertionError: 
2025-01-10T13:49:20.7914590Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T13:49:20.7914960Z E           
2025-01-10T13:49:20.7915060Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:20.7915160Z E           Max absolute difference among violations: 2.25821059e+25
2025-01-10T13:49:20.7915260Z E           Max relative difference among violations: 0.00054397
2025-01-10T13:49:20.7915380Z E            ACTUAL: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-10T13:49:20.7915470Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-10T13:49:20.7915560Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-10T13:49:20.7915680Z E            DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T13:49:20.7915930Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T13:49:20.7916020Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T13:49:20.7916020Z 
2025-01-10T13:49:20.7916170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7916290Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:49:20.7916500Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:20.7916810Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:20.7916950Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7917100Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:20.7917220Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7917270Z 	
2025-01-10T13:49:20.7917330Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:20.7917380Z 	Simulation took 0.00 s
2025-01-10T13:49:20.7917450Z  ([1mbase.py[0m:542)
2025-01-10T13:49:20.7917570Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7917610Z 	
2025-01-10T13:49:20.7917710Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7917830Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7917870Z 	
2025-01-10T13:49:20.7917930Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:20.7917990Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:20.7918050Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7918120Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7918240Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:20.7918240Z 
2025-01-10T13:49:20.7918240Z 
2025-01-10T13:49:20.7918400Z Packets:                                                                                   15772/? [00:06<00:00, 2457.00it/s][A
2025-01-10T13:49:20.7918410Z 
2025-01-10T13:49:20.7918570Z Packets:                                                                                   28653/? [00:06<00:00, 5207.72it/s][A
2025-01-10T13:49:20.7918570Z 
2025-01-10T13:49:20.7918730Z Packets:                                                                                   42172/? [00:06<00:00, 9128.25it/s][A
2025-01-10T13:49:20.7918740Z 
2025-01-10T13:49:20.7918890Z Packets:                                                                                   56621/? [00:06<00:00, 14719.85it/s][A
2025-01-10T13:49:20.7918890Z 
2025-01-10T13:49:20.7919050Z Packets:                                                                                   68586/? [00:06<00:00, 20491.08it/s][A
2025-01-10T13:49:20.7919050Z 
2025-01-10T13:49:20.7919210Z Packets:                                                                                   81382/? [00:06<00:00, 28388.17it/s][A
2025-01-10T13:49:20.7919210Z 
2025-01-10T13:49:20.7919370Z Packets:                                                                                   93452/? [00:07<00:00, 36701.15it/s][A
2025-01-10T13:49:20.7919530Z Iterations:                                                                                40/? [06:42<00:00,  5.28s/it]
2025-01-10T13:49:20.7919540Z 
2025-01-10T13:49:20.7919710Z Packets:                                                                                   104009/? [00:07<00:00, 36701.15it/s][A
2025-01-10T13:49:20.7919830Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:49:20.7920200Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:20.7920360Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:20.7920440Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:20.7920550Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:20.7920600Z 	Simulation took 0.00 s
2025-01-10T13:49:20.7920600Z 
2025-01-10T13:49:20.7920680Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7920740Z 	Starting iteration 1 of 1
2025-01-10T13:49:20.7920810Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7920870Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:20.7920930Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:20.7921000Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7921120Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-10T13:49:20.7921120Z 
2025-01-10T13:49:20.7921620Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:49:20.7921820Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x12d1a2fc0>
2025-01-10T13:49:20.7922080Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:49:20.7922080Z 
2025-01-10T13:49:20.7922160Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-10T13:49:20.7922220Z         montecarlo_main_loop_config,
2025-01-10T13:49:20.7922270Z         regression_data,
2025-01-10T13:49:20.7922310Z         atomic_dataset,
2025-01-10T13:49:20.7922360Z     ):
2025-01-10T13:49:20.7922430Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:49:20.7922560Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-10T13:49:20.7922600Z     
2025-01-10T13:49:20.7922700Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-10T13:49:20.7922760Z             montecarlo_main_loop_config,
2025-01-10T13:49:20.7922820Z             atom_data=atomic_dataset,
2025-01-10T13:49:20.7922880Z             virtual_packet_logging=True,
2025-01-10T13:49:20.7922940Z             legacy_mode_enabled=True,
2025-01-10T13:49:20.7922980Z         )
2025-01-10T13:49:20.7923070Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-10T13:49:20.7923150Z         montecarlo_main_loop_simulation.run_final()
2025-01-10T13:49:20.7923330Z     
2025-01-10T13:49:20.7923430Z         transport = montecarlo_main_loop_simulation.transport
2025-01-10T13:49:20.7923470Z     
2025-01-10T13:49:20.7923620Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-01-10T13:49:20.7923660Z     
2025-01-10T13:49:20.7923750Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-01-10T13:49:20.7923820Z             montecarlo_main_loop_simulation
2025-01-10T13:49:20.7923860Z         )
2025-01-10T13:49:20.7923900Z     
2025-01-10T13:49:20.7923960Z         expected_nu = expected_hdf_store[
2025-01-10T13:49:20.7924050Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:49:20.7924100Z         ]
2025-01-10T13:49:20.7924160Z         expected_energy = expected_hdf_store[
2025-01-10T13:49:20.7924260Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:49:20.7924300Z         ]
2025-01-10T13:49:20.7924430Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:49:20.7924540Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:49:20.7924580Z         ]
2025-01-10T13:49:20.7924660Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:49:20.7924740Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:49:20.7924790Z         ]
2025-01-10T13:49:20.7924870Z         expected_vpacket_log_nus = expected_hdf_store[
2025-01-10T13:49:20.7924970Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-01-10T13:49:20.7925010Z         ]
2025-01-10T13:49:20.7925100Z         expected_vpacket_log_energies = expected_hdf_store[
2025-01-10T13:49:20.7925250Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-01-10T13:49:20.7925300Z         ]
2025-01-10T13:49:20.7925350Z     
2025-01-10T13:49:20.7925420Z         transport_state = transport.transport_state
2025-01-10T13:49:20.7925460Z     
2025-01-10T13:49:20.7925590Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:49:20.7925690Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:49:20.7925800Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-01-10T13:49:20.7925880Z         actual_j_estimator = transport_state.j_estimator
2025-01-10T13:49:20.7925990Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-01-10T13:49:20.7926120Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-01-10T13:49:20.7926160Z     
2025-01-10T13:49:20.7926220Z         expected_hdf_store.close()
2025-01-10T13:49:20.7926270Z         # Compare
2025-01-10T13:49:20.7926320Z >       npt.assert_allclose(
2025-01-10T13:49:20.7926380Z             actual_nu_bar_estimator,
2025-01-10T13:49:20.7926440Z             expected_nu_bar_estimator,
2025-01-10T13:49:20.7926480Z             rtol=1e-12,
2025-01-10T13:49:20.7926530Z             atol=1e-15,
2025-01-10T13:49:20.7926580Z         )
2025-01-10T13:49:20.7926580Z 
2025-01-10T13:49:20.7926710Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-01-10T13:49:20.7926800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7926800Z 
2025-01-10T13:49:20.7927120Z args = (<function assert_allclose.<locals>.compare at 0x17820ba60>, array([9.39540882e+28, 8.06337668e+28, 7.18835599e+28, 6.....86491193e+28, 3.76603462e+28, 3.65184134e+28,
2025-01-10T13:49:20.7927220Z        3.55625311e+28, 3.45809153e+28, 3.35093337e+28, 3.25549805e+28]))
2025-01-10T13:49:20.7927420Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'strict': False, ...}
2025-01-10T13:49:20.7927430Z 
2025-01-10T13:49:20.7927470Z     @wraps(func)
2025-01-10T13:49:20.7927530Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7927580Z         with self._recreate_cm():
2025-01-10T13:49:20.7927640Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7927690Z E           AssertionError: 
2025-01-10T13:49:20.7927780Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T13:49:20.7927820Z E           
2025-01-10T13:49:20.7927890Z E           Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:20.7927990Z E           Max absolute difference among violations: 1.93283629e+25
2025-01-10T13:49:20.7928080Z E           Max relative difference among violations: 0.00029157
2025-01-10T13:49:20.7928200Z E            ACTUAL: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-10T13:49:20.7928290Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-10T13:49:20.7928380Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-10T13:49:20.7928500Z E            DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T13:49:20.7928590Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T13:49:20.7928720Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T13:49:20.7928720Z 
2025-01-10T13:49:20.7928880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7928990Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:49:20.7929180Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:20.7929490Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:20.7929630Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7929780Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:20.7929940Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7929980Z 	
2025-01-10T13:49:20.7930040Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:20.7930100Z 	Simulation took 0.00 s
2025-01-10T13:49:20.7930170Z  ([1mbase.py[0m:542)
2025-01-10T13:49:20.7930290Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7930330Z 	
2025-01-10T13:49:20.7930440Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7930550Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7930590Z 	
2025-01-10T13:49:20.7930650Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T13:49:20.7930710Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T13:49:20.7930770Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7930840Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7930960Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:20.7930970Z 
2025-01-10T13:49:20.7930970Z 
2025-01-10T13:49:20.7931130Z Packets:                                                                                   105065/? [00:09<00:00, 12985.07it/s][A
2025-01-10T13:49:20.7931140Z 
2025-01-10T13:49:20.7931300Z Packets:                                                                                   113145/? [00:09<00:00, 15488.45it/s][A
2025-01-10T13:49:20.7931310Z 
2025-01-10T13:49:20.7931470Z Packets:                                                                                   120088/? [00:09<00:00, 18237.71it/s][A
2025-01-10T13:49:20.7931470Z 
2025-01-10T13:49:20.7931630Z Packets:                                                                                   126422/? [00:09<00:00, 20930.47it/s][A
2025-01-10T13:49:20.7931630Z 
2025-01-10T13:49:20.7931790Z Packets:                                                                                   132145/? [00:09<00:00, 23939.22it/s][A
2025-01-10T13:49:20.7931790Z 
2025-01-10T13:49:20.7931950Z Packets:                                                                                   137588/? [00:09<00:00, 27109.74it/s][A
2025-01-10T13:49:20.7931950Z 
2025-01-10T13:49:20.7932110Z Packets:                                                                                   142843/? [00:10<00:00, 29405.64it/s][A
2025-01-10T13:49:20.7932110Z 
2025-01-10T13:49:20.7932270Z Packets:                                                                                   147844/? [00:10<00:00, 32752.06it/s][A
2025-01-10T13:49:20.7932270Z 
2025-01-10T13:49:20.7932430Z Packets:                                                                                   152757/? [00:10<00:00, 35822.49it/s][A
2025-01-10T13:49:20.7932430Z 
2025-01-10T13:49:20.7932590Z Packets:                                                                                   157730/? [00:10<00:00, 38769.65it/s][A
2025-01-10T13:49:20.7932600Z 
2025-01-10T13:49:20.7932750Z Packets:                                                                                   162659/? [00:10<00:00, 40322.02it/s][A
2025-01-10T13:49:20.7932750Z 
2025-01-10T13:49:20.7932910Z Packets:                                                                                   167877/? [00:10<00:00, 43228.44it/s][A
2025-01-10T13:49:20.7932920Z 
2025-01-10T13:49:20.7933240Z Packets:                                                                                   172803/? [00:10<00:00, 42842.93it/s][A
2025-01-10T13:49:20.7933240Z 
2025-01-10T13:49:20.7933410Z Packets:                                                                                   177918/? [00:10<00:00, 45013.65it/s][A
2025-01-10T13:49:20.7933420Z 
2025-01-10T13:49:20.7933580Z Packets:                                                                                   183087/? [00:10<00:00, 46828.16it/s][A
2025-01-10T13:49:20.7933580Z 
2025-01-10T13:49:20.7933740Z Packets:                                                                                   188325/? [00:11<00:00, 48381.18it/s][A
2025-01-10T13:49:20.7933990Z 
2025-01-10T13:49:20.7934160Z Packets:                                                                                   193601/? [00:11<00:00, 49629.25it/s][A
2025-01-10T13:49:20.7934160Z 
2025-01-10T13:49:20.7934320Z Packets:                                                                                   198699/? [00:11<00:00, 47861.42it/s][A
2025-01-10T13:49:20.7934330Z 
2025-01-10T13:49:20.7934480Z Packets:                                                                                   203597/? [00:11<00:00, 48178.64it/s][A
2025-01-10T13:49:20.7934600Z Iterations:                                                                                41/? [06:46<00:00,  5.01s/it]
2025-01-10T13:49:20.7934600Z 
2025-01-10T13:49:20.7934760Z Packets:                                                                                   204009/? [00:11<00:00, 48178.64it/s][A
2025-01-10T13:49:20.7934870Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:49:20.7935240Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:20.7935410Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:20.7935480Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:20.7935550Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:20.7935600Z 	Simulation took 0.00 s
2025-01-10T13:49:20.7935600Z 
2025-01-10T13:49:20.7935670Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7935730Z 	Starting iteration 1 of 1
2025-01-10T13:49:20.7935800Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7935860Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-01-10T13:49:20.7935920Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-01-10T13:49:20.7935980Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7936100Z __________________________ test_boundary_interactions __________________________
2025-01-10T13:49:20.7936110Z 
2025-01-10T13:49:20.7936690Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#1192758e0<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float64,...xing.RPacketTracker object at 0x134ff82e0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x301cb3c10>])
2025-01-10T13:49:20.7936880Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x127fdcc50>
2025-01-10T13:49:20.7936890Z 
2025-01-10T13:49:20.7937010Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-01-10T13:49:20.7937080Z         no_of_packets = len(rpacket_tracker)
2025-01-10T13:49:20.7937120Z     
2025-01-10T13:49:20.7937330Z         max_boundary_interaction_size = max([tracker.boundary_interaction.size for tracker in rpacket_tracker])
2025-01-10T13:49:20.7937400Z         obtained_boundary_interaction = np.full(
2025-01-10T13:49:20.7937480Z             (no_of_packets, max_boundary_interaction_size),
2025-01-10T13:49:20.7937530Z             [-1],
2025-01-10T13:49:20.7937630Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-01-10T13:49:20.7937670Z         )
2025-01-10T13:49:20.7937710Z     
2025-01-10T13:49:20.7937790Z         for i, tracker in enumerate(rpacket_tracker):
2025-01-10T13:49:20.7937900Z             obtained_boundary_interaction[
2025-01-10T13:49:20.7937990Z                 i, : tracker.boundary_interaction.size
2025-01-10T13:49:20.7938050Z             ] = tracker.boundary_interaction
2025-01-10T13:49:20.7938090Z     
2025-01-10T13:49:20.7938210Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-01-10T13:49:20.7938270Z             obtained_boundary_interaction
2025-01-10T13:49:20.7938310Z         )
2025-01-10T13:49:20.7938370Z >       npt.assert_array_equal(
2025-01-10T13:49:20.7938480Z             obtained_boundary_interaction, expected_boundary_interaction
2025-01-10T13:49:20.7938520Z         )
2025-01-10T13:49:20.7938520Z 
2025-01-10T13:49:20.7938690Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:153: 
2025-01-10T13:49:20.7938780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7938980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/numpy/_utils/__init__.py:85: in wrapper
2025-01-10T13:49:20.7939040Z     return fun(*args, **kwargs)
2025-01-10T13:49:20.7939120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7939130Z 
2025-01-10T13:49:20.7939310Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:20.7939380Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-01-10T13:49:20.7939510Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-01-10T13:49:20.7939650Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-01-10T13:49:20.7939660Z 
2025-01-10T13:49:20.7939710Z     @wraps(func)
2025-01-10T13:49:20.7939760Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7939820Z         with self._recreate_cm():
2025-01-10T13:49:20.7939870Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7939930Z E           AssertionError: 
2025-01-10T13:49:20.7939990Z E           Arrays are not equal
2025-01-10T13:49:20.7940040Z E           
2025-01-10T13:49:20.7940100Z E           (shapes (4000, 62), (4000, 64) mismatch)
2025-01-10T13:49:20.7940220Z E            ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:20.7940280Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:20.7940360Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:20.7940480Z E            DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:20.7940540Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:20.7940620Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:20.7940620Z 
2025-01-10T13:49:20.7940770Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7940900Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-10T13:49:20.7940900Z 
2025-01-10T13:49:20.7941400Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-10T13:49:20.7941600Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x12cc3b5c0>
2025-01-10T13:49:20.7941860Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-10T13:49:20.7942140Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x30d4ad160>
2025-01-10T13:49:20.7942150Z 
2025-01-10T13:49:20.7942220Z     def test_montecarlo_main_loop_weighted(
2025-01-10T13:49:20.7942270Z         montecarlo_main_loop_config,
2025-01-10T13:49:20.7942330Z         regression_data,
2025-01-10T13:49:20.7942420Z         atomic_dataset,
2025-01-10T13:49:20.7942480Z         simple_weighted_packet_source,
2025-01-10T13:49:20.7942520Z     ):
2025-01-10T13:49:20.7942600Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-10T13:49:20.7942730Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-10T13:49:20.7942780Z             montecarlo_main_loop_config,
2025-01-10T13:49:20.7942840Z             atom_data=atomic_dataset,
2025-01-10T13:49:20.7942900Z             virtual_packet_logging=False,
2025-01-10T13:49:20.7942960Z             legacy_mode_enabled=True,
2025-01-10T13:49:20.7943000Z         )
2025-01-10T13:49:20.7943110Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-10T13:49:20.7943210Z             simple_weighted_packet_source
2025-01-10T13:49:20.7943260Z         )
2025-01-10T13:49:20.7943370Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-10T13:49:20.7943470Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-01-10T13:49:20.7943510Z     
2025-01-10T13:49:20.7943590Z         # Get the montecarlo simple regression data
2025-01-10T13:49:20.7943640Z         regression_data_dir = (
2025-01-10T13:49:20.7943770Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-01-10T13:49:20.7943880Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-01-10T13:49:20.7943920Z         )
2025-01-10T13:49:20.7944040Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-01-10T13:49:20.7944080Z     
2025-01-10T13:49:20.7944140Z         # Load compare data from refdata
2025-01-10T13:49:20.7944180Z     
2025-01-10T13:49:20.7944250Z         expected_nu = expected_hdf_store[
2025-01-10T13:49:20.7944340Z             "/simulation/transport/transport_state/output_nu"
2025-01-10T13:49:20.7944380Z         ]
2025-01-10T13:49:20.7944450Z         expected_energy = expected_hdf_store[
2025-01-10T13:49:20.7944550Z             "/simulation/transport/transport_state/output_energy"
2025-01-10T13:49:20.7944590Z         ]
2025-01-10T13:49:20.7944680Z         expected_nu_bar_estimator = expected_hdf_store[
2025-01-10T13:49:20.7944780Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-01-10T13:49:20.7944820Z         ]
2025-01-10T13:49:20.7944900Z         expected_j_estimator = expected_hdf_store[
2025-01-10T13:49:20.7944990Z             "/simulation/transport/transport_state/j_estimator"
2025-01-10T13:49:20.7945030Z         ]
2025-01-10T13:49:20.7945090Z         expected_hdf_store.close()
2025-01-10T13:49:20.7945140Z         transport_state = (
2025-01-10T13:49:20.7945270Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-01-10T13:49:20.7945320Z         )
2025-01-10T13:49:20.7945440Z         actual_energy = transport_state.packet_collection.output_energies
2025-01-10T13:49:20.7945540Z         actual_nu = transport_state.packet_collection.output_nus
2025-01-10T13:49:20.7945600Z         actual_nu_bar_estimator = (
2025-01-10T13:49:20.7945710Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-01-10T13:49:20.7945750Z         )
2025-01-10T13:49:20.7945890Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-01-10T13:49:20.7945930Z     
2025-01-10T13:49:20.7945970Z         # Compare
2025-01-10T13:49:20.7946020Z         npt.assert_allclose(
2025-01-10T13:49:20.7946130Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-01-10T13:49:20.7946180Z         )
2025-01-10T13:49:20.7946310Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-01-10T13:49:20.7946430Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-01-10T13:49:20.7946430Z 
2025-01-10T13:49:20.7946600Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-01-10T13:49:20.7946680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7946690Z 
2025-01-10T13:49:20.7947060Z args = (<function assert_allclose.<locals>.compare at 0x30e36f240>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05,...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-01-10T13:49:20.7947150Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-01-10T13:49:20.7947340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7947350Z 
2025-01-10T13:49:20.7947390Z     @wraps(func)
2025-01-10T13:49:20.7947440Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7947500Z         with self._recreate_cm():
2025-01-10T13:49:20.7947560Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7947650Z E           AssertionError: 
2025-01-10T13:49:20.7947730Z E           Not equal to tolerance rtol=0.01, atol=0
2025-01-10T13:49:20.7947780Z E           
2025-01-10T13:49:20.7947850Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-01-10T13:49:20.7947950Z E           Max absolute difference among violations: 2.00640487e-05
2025-01-10T13:49:20.7948050Z E           Max relative difference among violations: 2.11614526
2025-01-10T13:49:20.7948180Z E            ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:20.7948240Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:20.7948380Z E            DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:20.7948440Z E                  -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:20.7948440Z 
2025-01-10T13:49:20.7948590Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7948700Z ----------------------------- Captured stdout call -----------------------------
2025-01-10T13:49:20.7948900Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-10T13:49:20.7949220Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-10T13:49:20.7949350Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7949500Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-10T13:49:20.7949610Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7953130Z 	
2025-01-10T13:49:20.7953220Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:20.7953270Z 	Simulation took 0.00 s
2025-01-10T13:49:20.7953380Z  ([1mbase.py[0m:542)
2025-01-10T13:49:20.7953500Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7953550Z 	
2025-01-10T13:49:20.7953650Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-10T13:49:20.7953770Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7953820Z 	
2025-01-10T13:49:20.7953870Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:20.7953940Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:20.7954010Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7954080Z  ([1mbase.py[0m:657)
2025-01-10T13:49:20.7954200Z ----------------------------- Captured stderr call -----------------------------
2025-01-10T13:49:20.7954200Z 
2025-01-10T13:49:20.7954200Z 
2025-01-10T13:49:20.7954370Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-01-10T13:49:20.7954370Z 
2025-01-10T13:49:20.7954530Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-01-10T13:49:20.7954530Z 
2025-01-10T13:49:20.7954710Z Packets:   ███████▉                                                                        9863/100000 [00:00<00:00, 98627.04it/s][A
2025-01-10T13:49:20.7954730Z 
2025-01-10T13:49:20.7954910Z Packets:   ██████████████████▍                                                             23112/100000 [00:00<00:00, 118543.42it/s][A
2025-01-10T13:49:20.7954920Z 
2025-01-10T13:49:20.7955510Z Packets:   ███████████████████████████▉                                                    34967/100000 [00:00<00:00, 117875.85it/s][A
2025-01-10T13:49:20.7955510Z 
2025-01-10T13:49:20.7955720Z Packets:   █████████████████████████████████████▍                                          46756/100000 [00:00<00:00, 116667.82it/s][A
2025-01-10T13:49:20.7955720Z 
2025-01-10T13:49:20.7955930Z Packets:   ████████████████████████████████████████████████                                60108/100000 [00:00<00:00, 122686.88it/s][A
2025-01-10T13:49:20.7955940Z 
2025-01-10T13:49:20.7956150Z Packets:   ██████████████████████████████████████████████████████████▊                     73522/100000 [00:00<00:00, 126555.55it/s][A
2025-01-10T13:49:20.7956410Z 
2025-01-10T13:49:20.7956640Z Packets:   ██████████████████████████████████████████████████████████████████████▌         88137/100000 [00:00<00:00, 132934.87it/s][A
2025-01-10T13:49:20.7956760Z Iterations:                                                                                45/? [07:04<00:00,  4.20s/it]
2025-01-10T13:49:20.7956770Z 
2025-01-10T13:49:20.7957000Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 132934.87it/s][A
2025-01-10T13:49:20.7957120Z ------------------------------ Captured log call -------------------------------
2025-01-10T13:49:20.7957500Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-10T13:49:20.7957660Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-10T13:49:20.7957730Z INFO     tardis.simulation.base:base.py:542 
2025-01-10T13:49:20.7957800Z 	Simulation finished in 0 iterations 
2025-01-10T13:49:20.7957860Z 	Simulation took 0.00 s
2025-01-10T13:49:20.7957860Z 
2025-01-10T13:49:20.7957930Z INFO     tardis.simulation.base:base.py:444 
2025-01-10T13:49:20.7957990Z 	Starting iteration 1 of 1
2025-01-10T13:49:20.7958070Z INFO     tardis.simulation.base:base.py:657 
2025-01-10T13:49:20.7958130Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-01-10T13:49:20.7958180Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-01-10T13:49:20.7958250Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-10T13:49:20.7958410Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-01-10T13:49:20.7958420Z 
2025-01-10T13:49:20.7958600Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdd7890>
2025-01-10T13:49:20.7958810Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7959010Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-01-10T13:49:20.7959060Z attribute = 'plot_data'
2025-01-10T13:49:20.7959070Z 
2025-01-10T13:49:20.7959120Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7959170Z         "attribute",
2025-01-10T13:49:20.7959210Z         [
2025-01-10T13:49:20.7959310Z             "plot_data",
2025-01-10T13:49:20.7959360Z             "plot_colors",
2025-01-10T13:49:20.7959420Z             "new_bin_edges",
2025-01-10T13:49:20.7959460Z         ],
2025-01-10T13:49:20.7959500Z     )
2025-01-10T13:49:20.7959570Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7959610Z         self,
2025-01-10T13:49:20.7959670Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7959710Z         request,
2025-01-10T13:49:20.7959760Z         attribute,
2025-01-10T13:49:20.7959800Z     ):
2025-01-10T13:49:20.7959850Z         """
2025-01-10T13:49:20.7959950Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7960000Z     
2025-01-10T13:49:20.7960040Z         Parameters:
2025-01-10T13:49:20.7960090Z         -----------
2025-01-10T13:49:20.7960220Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7960290Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7960410Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7960460Z         """
2025-01-10T13:49:20.7960530Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7960640Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7960750Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7960870Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7960990Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7961080Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7961160Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7961290Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7961290Z 
2025-01-10T13:49:20.7961400Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7961480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7961490Z 
2025-01-10T13:49:20.7961810Z args = (<function assert_allclose.<locals>.compare at 0x17aa6ab60>, array([11843.96225504, 11843.96225504, 11843.96225504, 12...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T13:49:20.7961910Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T13:49:20.7962110Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7962110Z 
2025-01-10T13:49:20.7962150Z     @wraps(func)
2025-01-10T13:49:20.7962210Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7962260Z         with self._recreate_cm():
2025-01-10T13:49:20.7962320Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7962380Z E           AssertionError: 
2025-01-10T13:49:20.7962460Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7962500Z E           
2025-01-10T13:49:20.7962560Z E           (shapes (515,), (508,) mismatch)
2025-01-10T13:49:20.7962680Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:20.7962780Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:20.7962870Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:20.7962990Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:20.7963070Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:20.7963160Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:20.7963170Z 
2025-01-10T13:49:20.7963510Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7963630Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.7963800Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7964040Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.7964170Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.7964390Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:20.7964550Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-01-10T13:49:20.7964550Z 
2025-01-10T13:49:20.7964740Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf45c0>
2025-01-10T13:49:20.7964950Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7965150Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-01-10T13:49:20.7965200Z attribute = 'plot_data'
2025-01-10T13:49:20.7965210Z 
2025-01-10T13:49:20.7965270Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7965320Z         "attribute",
2025-01-10T13:49:20.7965360Z         [
2025-01-10T13:49:20.7965410Z             "plot_data",
2025-01-10T13:49:20.7965460Z             "plot_colors",
2025-01-10T13:49:20.7965510Z             "new_bin_edges",
2025-01-10T13:49:20.7965550Z         ],
2025-01-10T13:49:20.7965590Z     )
2025-01-10T13:49:20.7965660Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7965700Z         self,
2025-01-10T13:49:20.7965760Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7965810Z         request,
2025-01-10T13:49:20.7965860Z         attribute,
2025-01-10T13:49:20.7965900Z     ):
2025-01-10T13:49:20.7965940Z         """
2025-01-10T13:49:20.7966080Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7966120Z     
2025-01-10T13:49:20.7966160Z         Parameters:
2025-01-10T13:49:20.7966210Z         -----------
2025-01-10T13:49:20.7966340Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7966410Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7966530Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7966570Z         """
2025-01-10T13:49:20.7966660Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7966760Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7966880Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7966990Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7967110Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7967200Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7967290Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7967380Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7967380Z 
2025-01-10T13:49:20.7967490Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7967580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7967580Z 
2025-01-10T13:49:20.7967830Z args = (<function assert_allclose.<locals>.compare at 0x131e6e340>, array([11843.96225504, 11843.96225504, 11843.96225504, 12...47464 ,
2025-01-10T13:49:20.7967930Z        12229.96880815, 12113.40540961, 12605.43283975, 12605.43283975,
2025-01-10T13:49:20.7967980Z        11152.96259546, 11172.04481521]))
2025-01-10T13:49:20.7968180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7968180Z 
2025-01-10T13:49:20.7968230Z     @wraps(func)
2025-01-10T13:49:20.7968290Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7968340Z         with self._recreate_cm():
2025-01-10T13:49:20.7968400Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7968450Z E           AssertionError: 
2025-01-10T13:49:20.7968570Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7968630Z E           
2025-01-10T13:49:20.7968700Z E           (shapes (560,), (558,) mismatch)
2025-01-10T13:49:20.7968820Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:20.7968910Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:20.7969010Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:20.7969130Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:20.7969220Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:20.7969310Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:20.7969320Z 
2025-01-10T13:49:20.7969460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7969620Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-01-10T13:49:20.7969620Z 
2025-01-10T13:49:20.7969810Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf4800>
2025-01-10T13:49:20.7970020Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7970220Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-01-10T13:49:20.7970270Z attribute = 'plot_data'
2025-01-10T13:49:20.7970270Z 
2025-01-10T13:49:20.7970330Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7970380Z         "attribute",
2025-01-10T13:49:20.7970420Z         [
2025-01-10T13:49:20.7970520Z             "plot_data",
2025-01-10T13:49:20.7970570Z             "plot_colors",
2025-01-10T13:49:20.7970620Z             "new_bin_edges",
2025-01-10T13:49:20.7970660Z         ],
2025-01-10T13:49:20.7970700Z     )
2025-01-10T13:49:20.7970760Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7970800Z         self,
2025-01-10T13:49:20.7970860Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7970910Z         request,
2025-01-10T13:49:20.7970950Z         attribute,
2025-01-10T13:49:20.7970990Z     ):
2025-01-10T13:49:20.7971030Z         """
2025-01-10T13:49:20.7971130Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7971170Z     
2025-01-10T13:49:20.7971220Z         Parameters:
2025-01-10T13:49:20.7971270Z         -----------
2025-01-10T13:49:20.7971400Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7971470Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7971590Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7971640Z         """
2025-01-10T13:49:20.7971720Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7971820Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7971930Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7972050Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7972160Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7972250Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7972340Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7972420Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7972420Z 
2025-01-10T13:49:20.7972530Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7972610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7972620Z 
2025-01-10T13:49:20.7972960Z args = (<function assert_allclose.<locals>.compare at 0x131df4540>, array([11202.14920452, 13552.38987987, 11630.95782059, 12...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T13:49:20.7973230Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T13:49:20.7973440Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7973440Z 
2025-01-10T13:49:20.7973500Z     @wraps(func)
2025-01-10T13:49:20.7973550Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7973610Z         with self._recreate_cm():
2025-01-10T13:49:20.7973660Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7973720Z E           AssertionError: 
2025-01-10T13:49:20.7973790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7973840Z E           
2025-01-10T13:49:20.7973900Z E           (shapes (136,), (147,) mismatch)
2025-01-10T13:49:20.7974030Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:20.7974110Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:20.7974210Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:20.7974320Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:20.7974400Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:20.7974490Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:20.7974500Z 
2025-01-10T13:49:20.7974640Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7974800Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-01-10T13:49:20.7974800Z 
2025-01-10T13:49:20.7974990Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf4a40>
2025-01-10T13:49:20.7975410Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7975610Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-01-10T13:49:20.7975660Z attribute = 'plot_data'
2025-01-10T13:49:20.7975670Z 
2025-01-10T13:49:20.7975730Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7975770Z         "attribute",
2025-01-10T13:49:20.7975820Z         [
2025-01-10T13:49:20.7975860Z             "plot_data",
2025-01-10T13:49:20.7975920Z             "plot_colors",
2025-01-10T13:49:20.7975970Z             "new_bin_edges",
2025-01-10T13:49:20.7976010Z         ],
2025-01-10T13:49:20.7976050Z     )
2025-01-10T13:49:20.7976110Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7976150Z         self,
2025-01-10T13:49:20.7976210Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7976250Z         request,
2025-01-10T13:49:20.7976300Z         attribute,
2025-01-10T13:49:20.7976340Z     ):
2025-01-10T13:49:20.7976390Z         """
2025-01-10T13:49:20.7976490Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7976530Z     
2025-01-10T13:49:20.7976580Z         Parameters:
2025-01-10T13:49:20.7976630Z         -----------
2025-01-10T13:49:20.7976760Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7976820Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7976940Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7976980Z         """
2025-01-10T13:49:20.7977060Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7977160Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7977270Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7977390Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7977510Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7977600Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7977680Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7977820Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7977820Z 
2025-01-10T13:49:20.7977920Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7978010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7978010Z 
2025-01-10T13:49:20.7978350Z args = (<function assert_allclose.<locals>.compare at 0x131df47c0>, array([11202.14920452, 13552.38987987, 11630.95782059, 12...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T13:49:20.7978420Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T13:49:20.7978620Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7978620Z 
2025-01-10T13:49:20.7978670Z     @wraps(func)
2025-01-10T13:49:20.7978730Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7978780Z         with self._recreate_cm():
2025-01-10T13:49:20.7978840Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7978890Z E           AssertionError: 
2025-01-10T13:49:20.7978970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7979020Z E           
2025-01-10T13:49:20.7979080Z E           (shapes (153,), (159,) mismatch)
2025-01-10T13:49:20.7979190Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:20.7979290Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:20.7979380Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:20.7979490Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:20.7979630Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:20.7979710Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:20.7979720Z 
2025-01-10T13:49:20.7979870Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7980020Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-01-10T13:49:20.7980030Z 
2025-01-10T13:49:20.7980220Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf4c80>
2025-01-10T13:49:20.7980420Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7980620Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-01-10T13:49:20.7980680Z attribute = 'plot_data'
2025-01-10T13:49:20.7980680Z 
2025-01-10T13:49:20.7980730Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7980790Z         "attribute",
2025-01-10T13:49:20.7980830Z         [
2025-01-10T13:49:20.7980880Z             "plot_data",
2025-01-10T13:49:20.7980930Z             "plot_colors",
2025-01-10T13:49:20.7980980Z             "new_bin_edges",
2025-01-10T13:49:20.7981020Z         ],
2025-01-10T13:49:20.7981060Z     )
2025-01-10T13:49:20.7981120Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7981160Z         self,
2025-01-10T13:49:20.7981220Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7981270Z         request,
2025-01-10T13:49:20.7981320Z         attribute,
2025-01-10T13:49:20.7981360Z     ):
2025-01-10T13:49:20.7981400Z         """
2025-01-10T13:49:20.7981500Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7981530Z     
2025-01-10T13:49:20.7981580Z         Parameters:
2025-01-10T13:49:20.7981630Z         -----------
2025-01-10T13:49:20.7981760Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7981820Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7981940Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7981990Z         """
2025-01-10T13:49:20.7982060Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7982210Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7982320Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7982530Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7982640Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7982730Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7982810Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7982900Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7982900Z 
2025-01-10T13:49:20.7983010Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7983090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7983100Z 
2025-01-10T13:49:20.7983420Z args = (<function assert_allclose.<locals>.compare at 0x131df6200>, array([11843.96225504, 11843.96225504, 11843.96225504, 12...1104.14894249, 11194.10880903, 12818.679236  ,
2025-01-10T13:49:20.7983520Z        12978.92050419, 12978.92050419, 12978.92050419, 11238.83568899]))
2025-01-10T13:49:20.7983720Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7983720Z 
2025-01-10T13:49:20.7983760Z     @wraps(func)
2025-01-10T13:49:20.7983820Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7983890Z         with self._recreate_cm():
2025-01-10T13:49:20.7983940Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7983990Z E           AssertionError: 
2025-01-10T13:49:20.7984070Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7984170Z E           
2025-01-10T13:49:20.7984230Z E           (shapes (515,), (508,) mismatch)
2025-01-10T13:49:20.7984350Z E            ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:20.7984440Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:20.7984530Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:20.7984640Z E            DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:20.7984730Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:20.7984820Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:20.7984830Z 
2025-01-10T13:49:20.7984970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7985090Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.7985310Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7985490Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.7985610Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.7985840Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:20.7986000Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-01-10T13:49:20.7986000Z 
2025-01-10T13:49:20.7986190Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf4ef0>
2025-01-10T13:49:20.7986390Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7986590Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-01-10T13:49:20.7986650Z attribute = 'plot_data'
2025-01-10T13:49:20.7986650Z 
2025-01-10T13:49:20.7986710Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7986760Z         "attribute",
2025-01-10T13:49:20.7986810Z         [
2025-01-10T13:49:20.7986860Z             "plot_data",
2025-01-10T13:49:20.7986900Z             "plot_colors",
2025-01-10T13:49:20.7987020Z             "new_bin_edges",
2025-01-10T13:49:20.7987060Z         ],
2025-01-10T13:49:20.7987110Z     )
2025-01-10T13:49:20.7987160Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7987210Z         self,
2025-01-10T13:49:20.7987260Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7987310Z         request,
2025-01-10T13:49:20.7987350Z         attribute,
2025-01-10T13:49:20.7987390Z     ):
2025-01-10T13:49:20.7987440Z         """
2025-01-10T13:49:20.7987540Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7987580Z     
2025-01-10T13:49:20.7987620Z         Parameters:
2025-01-10T13:49:20.7987670Z         -----------
2025-01-10T13:49:20.7987800Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7987870Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7987990Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7988040Z         """
2025-01-10T13:49:20.7988110Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7988210Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7988320Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7988440Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7988550Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7988640Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7988730Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7988810Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7988850Z 
2025-01-10T13:49:20.7988960Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7989050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7989050Z 
2025-01-10T13:49:20.7989400Z args = (<function assert_allclose.<locals>.compare at 0x131df6f20>, array([12467.89648692, 12467.89648692, 12357.74827994, .....), array([13692.75973672, 11362.93720064, 12466.53861691, ...,
2025-01-10T13:49:20.7989470Z        12605.43283975, 11152.96259546, 11172.04481521]))
2025-01-10T13:49:20.7989660Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7989660Z 
2025-01-10T13:49:20.7989710Z     @wraps(func)
2025-01-10T13:49:20.7989770Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7989820Z         with self._recreate_cm():
2025-01-10T13:49:20.7989880Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7989940Z E           AssertionError: 
2025-01-10T13:49:20.7990010Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7990060Z E           
2025-01-10T13:49:20.7990120Z E           (shapes (1481,), (1466,) mismatch)
2025-01-10T13:49:20.7990250Z E            ACTUAL: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-10T13:49:20.7990300Z E                  11398.237865, 11111.204868])
2025-01-10T13:49:20.7990430Z E            DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T13:49:20.7990480Z E                  11152.962595, 11172.044815])
2025-01-10T13:49:20.7990490Z 
2025-01-10T13:49:20.7990630Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7990750Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.7990910Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.7991160Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.7991280Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.7991840Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:49:20.7992020Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-01-10T13:49:20.7992030Z 
2025-01-10T13:49:20.7992220Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5130>
2025-01-10T13:49:20.7992420Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7992620Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-01-10T13:49:20.7992680Z attribute = 'plot_data'
2025-01-10T13:49:20.7992680Z 
2025-01-10T13:49:20.7992740Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7992790Z         "attribute",
2025-01-10T13:49:20.7992830Z         [
2025-01-10T13:49:20.7992880Z             "plot_data",
2025-01-10T13:49:20.7992930Z             "plot_colors",
2025-01-10T13:49:20.7992980Z             "new_bin_edges",
2025-01-10T13:49:20.7993020Z         ],
2025-01-10T13:49:20.7993060Z     )
2025-01-10T13:49:20.7993120Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7993160Z         self,
2025-01-10T13:49:20.7993220Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7993260Z         request,
2025-01-10T13:49:20.7993310Z         attribute,
2025-01-10T13:49:20.7993350Z     ):
2025-01-10T13:49:20.7993390Z         """
2025-01-10T13:49:20.7993490Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7993530Z     
2025-01-10T13:49:20.7993580Z         Parameters:
2025-01-10T13:49:20.7993630Z         -----------
2025-01-10T13:49:20.7993750Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7994040Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7994170Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7994210Z         """
2025-01-10T13:49:20.7994280Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7994390Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7994500Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7994620Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7994730Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7994820Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7994910Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7994990Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7994990Z 
2025-01-10T13:49:20.7995100Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.7995180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.7995180Z 
2025-01-10T13:49:20.7995530Z args = (<function assert_allclose.<locals>.compare at 0x131e7fc40>, array([11202.14920452, 13552.38987987, 11630.95782059, 12...1230.42147828, 11476.76563893, 11681.6907767 , 12060.43339088,
2025-01-10T13:49:20.7995600Z        15754.62784966, 13174.4766832 , 11238.83568899]))
2025-01-10T13:49:20.7995790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.7995800Z 
2025-01-10T13:49:20.7995840Z     @wraps(func)
2025-01-10T13:49:20.7995890Z     def inner(*args, **kwds):
2025-01-10T13:49:20.7995950Z         with self._recreate_cm():
2025-01-10T13:49:20.7996000Z >           return func(*args, **kwds)
2025-01-10T13:49:20.7996060Z E           AssertionError: 
2025-01-10T13:49:20.7996140Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.7996180Z E           
2025-01-10T13:49:20.7996240Z E           (shapes (136,), (147,) mismatch)
2025-01-10T13:49:20.7996410Z E            ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:20.7996510Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:20.7996600Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:20.7996720Z E            DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:20.7996800Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:20.7996890Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:20.7996890Z 
2025-01-10T13:49:20.7997040Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.7997200Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-01-10T13:49:20.7997200Z 
2025-01-10T13:49:20.7997390Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5310>
2025-01-10T13:49:20.7997600Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>
2025-01-10T13:49:20.7997800Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-01-10T13:49:20.7997850Z attribute = 'plot_data'
2025-01-10T13:49:20.7997850Z 
2025-01-10T13:49:20.7997910Z     @pytest.mark.parametrize(
2025-01-10T13:49:20.7997960Z         "attribute",
2025-01-10T13:49:20.7998000Z         [
2025-01-10T13:49:20.7998050Z             "plot_data",
2025-01-10T13:49:20.7998100Z             "plot_colors",
2025-01-10T13:49:20.7998140Z             "new_bin_edges",
2025-01-10T13:49:20.7998190Z         ],
2025-01-10T13:49:20.7998230Z     )
2025-01-10T13:49:20.7998280Z     def test_prepare_plot_data(
2025-01-10T13:49:20.7998370Z         self,
2025-01-10T13:49:20.7998430Z         plotter_prepare_plot_data,
2025-01-10T13:49:20.7998480Z         request,
2025-01-10T13:49:20.7998520Z         attribute,
2025-01-10T13:49:20.7998560Z     ):
2025-01-10T13:49:20.7998600Z         """
2025-01-10T13:49:20.7998710Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-01-10T13:49:20.7998750Z     
2025-01-10T13:49:20.7998790Z         Parameters:
2025-01-10T13:49:20.7998840Z         -----------
2025-01-10T13:49:20.7998970Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-01-10T13:49:20.7999030Z         request: Pytest's request fixture.
2025-01-10T13:49:20.7999150Z         attribute: The attribute to test after preparing the plot data.
2025-01-10T13:49:20.7999190Z         """
2025-01-10T13:49:20.7999270Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.7999370Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-01-10T13:49:20.7999480Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-01-10T13:49:20.7999600Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-01-10T13:49:20.7999710Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-01-10T13:49:20.7999800Z                 plot_object = [item.value for item in plot_object]
2025-01-10T13:49:20.7999890Z             data = regression_data.sync_ndarray(plot_object)
2025-01-10T13:49:20.7999970Z >           np.testing.assert_allclose(plot_object, data)
2025-01-10T13:49:20.7999980Z 
2025-01-10T13:49:20.8000080Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-01-10T13:49:20.8000170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8000170Z 
2025-01-10T13:49:20.8000510Z args = (<function assert_allclose.<locals>.compare at 0x131e7fce0>, array([12467.89648692, 12357.74827994, 11118.74739262, 11...2231.98601298, 11655.02975796, 11272.58254501, 12373.5847464 ,
2025-01-10T13:49:20.8000590Z        12229.96880815, 12113.40540961, 11152.96259546]))
2025-01-10T13:49:20.8000790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8000790Z 
2025-01-10T13:49:20.8000870Z     @wraps(func)
2025-01-10T13:49:20.8000930Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8000980Z         with self._recreate_cm():
2025-01-10T13:49:20.8001040Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8001090Z E           AssertionError: 
2025-01-10T13:49:20.8001170Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8001210Z E           
2025-01-10T13:49:20.8001280Z E           (shapes (381,), (379,) mismatch)
2025-01-10T13:49:20.8001390Z E            ACTUAL: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-10T13:49:20.8001480Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-10T13:49:20.8001580Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-10T13:49:20.8001700Z E            DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T13:49:20.8005100Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T13:49:20.8005230Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T13:49:20.8005230Z 
2025-01-10T13:49:20.8005380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8005500Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8005750Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8005940Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8006050Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8006280Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8006630Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-01-10T13:49:20.8006630Z 
2025-01-10T13:49:20.8006820Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5790>
2025-01-10T13:49:20.8007040Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x157cb7ec0>
2025-01-10T13:49:20.8007400Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8007580Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-01-10T13:49:20.8007580Z 
2025-01-10T13:49:20.8007640Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8007760Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:20.8007800Z     ):
2025-01-10T13:49:20.8007850Z         """
2025-01-10T13:49:20.8007950Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8007990Z     
2025-01-10T13:49:20.8008080Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8008120Z     
2025-01-10T13:49:20.8008170Z         Parameters:
2025-01-10T13:49:20.8008210Z         -----------
2025-01-10T13:49:20.8008330Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:20.8008450Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:20.8008510Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8008550Z         """
2025-01-10T13:49:20.8008620Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:20.8008690Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8008820Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:20.8008920Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8008990Z             expected_values = expected.get(
2025-01-10T13:49:20.8009050Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8009100Z             ).values.flatten()
2025-01-10T13:49:20.8009260Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:20.8009310Z     
2025-01-10T13:49:20.8009400Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8009470Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8009520Z                     expected_values,
2025-01-10T13:49:20.8009580Z                     actual_values,
2025-01-10T13:49:20.8009630Z                     rtol=0.3,
2025-01-10T13:49:20.8009680Z                     atol=3,
2025-01-10T13:49:20.8009720Z                 )
2025-01-10T13:49:20.8009720Z 
2025-01-10T13:49:20.8009820Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:20.8009910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8009910Z 
2025-01-10T13:49:20.8010210Z args = (<function assert_allclose.<locals>.compare at 0x301eedc60>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10, ...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8010270Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:20.8010460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8010460Z 
2025-01-10T13:49:20.8010510Z     @wraps(func)
2025-01-10T13:49:20.8010560Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8010610Z         with self._recreate_cm():
2025-01-10T13:49:20.8010680Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8010730Z E           AssertionError: 
2025-01-10T13:49:20.8010800Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8010840Z E           
2025-01-10T13:49:20.8010910Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8011030Z E           Max absolute difference among violations: 26
2025-01-10T13:49:20.8011130Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8011250Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8011320Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8011430Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8011500Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8011500Z 
2025-01-10T13:49:20.8011650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8011760Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8011930Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8012240Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-01-10T13:49:20.8012360Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8012680Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T13:49:20.8012830Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-01-10T13:49:20.8012830Z 
2025-01-10T13:49:20.8013020Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5850>
2025-01-10T13:49:20.8013240Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x1522bf0e0>
2025-01-10T13:49:20.8013590Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8013770Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-01-10T13:49:20.8013780Z 
2025-01-10T13:49:20.8013830Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8013950Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:20.8014000Z     ):
2025-01-10T13:49:20.8014200Z         """
2025-01-10T13:49:20.8014310Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8014350Z     
2025-01-10T13:49:20.8014440Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8014480Z     
2025-01-10T13:49:20.8014530Z         Parameters:
2025-01-10T13:49:20.8014580Z         -----------
2025-01-10T13:49:20.8014690Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:20.8014800Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:20.8014870Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8014910Z         """
2025-01-10T13:49:20.8014980Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:20.8015050Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8015170Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:20.8015280Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8015340Z             expected_values = expected.get(
2025-01-10T13:49:20.8015400Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8015460Z             ).values.flatten()
2025-01-10T13:49:20.8015550Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:20.8015590Z     
2025-01-10T13:49:20.8015690Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8015750Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8015810Z                     expected_values,
2025-01-10T13:49:20.8015860Z                     actual_values,
2025-01-10T13:49:20.8015910Z                     rtol=0.3,
2025-01-10T13:49:20.8016170Z                     atol=3,
2025-01-10T13:49:20.8016220Z                 )
2025-01-10T13:49:20.8016220Z 
2025-01-10T13:49:20.8016330Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:20.8016410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8016420Z 
2025-01-10T13:49:20.8016710Z args = (<function assert_allclose.<locals>.compare at 0x176d65260>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10, ...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8016770Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:20.8016950Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8016960Z 
2025-01-10T13:49:20.8017010Z     @wraps(func)
2025-01-10T13:49:20.8017060Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8017120Z         with self._recreate_cm():
2025-01-10T13:49:20.8017180Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8017230Z E           AssertionError: 
2025-01-10T13:49:20.8017300Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8017350Z E           
2025-01-10T13:49:20.8017410Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8017500Z E           Max absolute difference among violations: 26
2025-01-10T13:49:20.8017600Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8017720Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8017780Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8017900Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8017960Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8017960Z 
2025-01-10T13:49:20.8018110Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8018270Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-01-10T13:49:20.8018270Z 
2025-01-10T13:49:20.8018460Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5c40>
2025-01-10T13:49:20.8018720Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30c845490>
2025-01-10T13:49:20.8019090Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8019260Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-01-10T13:49:20.8019270Z 
2025-01-10T13:49:20.8019330Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8019440Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:20.8019480Z     ):
2025-01-10T13:49:20.8019520Z         """
2025-01-10T13:49:20.8019620Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8019660Z     
2025-01-10T13:49:20.8019750Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8019800Z     
2025-01-10T13:49:20.8019840Z         Parameters:
2025-01-10T13:49:20.8019890Z         -----------
2025-01-10T13:49:20.8020010Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:20.8020120Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:20.8020180Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8020220Z         """
2025-01-10T13:49:20.8020280Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:20.8020360Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8020470Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:20.8020590Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8020690Z             expected_values = expected.get(
2025-01-10T13:49:20.8020750Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8020800Z             ).values.flatten()
2025-01-10T13:49:20.8020900Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:20.8020950Z     
2025-01-10T13:49:20.8021040Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8021110Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8021160Z                     expected_values,
2025-01-10T13:49:20.8021220Z                     actual_values,
2025-01-10T13:49:20.8021260Z                     rtol=0.3,
2025-01-10T13:49:20.8021310Z                     atol=3,
2025-01-10T13:49:20.8021350Z                 )
2025-01-10T13:49:20.8021360Z 
2025-01-10T13:49:20.8021460Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:20.8021540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8021540Z 
2025-01-10T13:49:20.8021850Z args = (<function assert_allclose.<locals>.compare at 0x17992be20>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:20.8021900Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-10T13:49:20.8022090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8022090Z 
2025-01-10T13:49:20.8022140Z     @wraps(func)
2025-01-10T13:49:20.8022190Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8022250Z         with self._recreate_cm():
2025-01-10T13:49:20.8022310Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8022360Z E           AssertionError: 
2025-01-10T13:49:20.8022430Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8022470Z E           
2025-01-10T13:49:20.8022540Z E           Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:20.8022620Z E           Max absolute difference among violations: 24
2025-01-10T13:49:20.8022700Z E           Max relative difference among violations: 0.65
2025-01-10T13:49:20.8022830Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:20.8022930Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8023060Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:20.8023120Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8023120Z 
2025-01-10T13:49:20.8023270Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8023390Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8023580Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8023760Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8023880Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8024110Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8024260Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-01-10T13:49:20.8024270Z 
2025-01-10T13:49:20.8024450Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5d00>
2025-01-10T13:49:20.8024670Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x12cb8ffb0>
2025-01-10T13:49:20.8025020Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8025200Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-01-10T13:49:20.8025200Z 
2025-01-10T13:49:20.8025260Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8025440Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:20.8025480Z     ):
2025-01-10T13:49:20.8025520Z         """
2025-01-10T13:49:20.8025620Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8025670Z     
2025-01-10T13:49:20.8025760Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8025800Z     
2025-01-10T13:49:20.8025850Z         Parameters:
2025-01-10T13:49:20.8025890Z         -----------
2025-01-10T13:49:20.8026010Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:20.8026110Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:20.8026180Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8026230Z         """
2025-01-10T13:49:20.8026290Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:20.8026360Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8026490Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:20.8026590Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8026660Z             expected_values = expected.get(
2025-01-10T13:49:20.8026720Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8026770Z             ).values.flatten()
2025-01-10T13:49:20.8026870Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:20.8026910Z     
2025-01-10T13:49:20.8027010Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8027070Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8027120Z                     expected_values,
2025-01-10T13:49:20.8027180Z                     actual_values,
2025-01-10T13:49:20.8027230Z                     rtol=0.3,
2025-01-10T13:49:20.8027270Z                     atol=3,
2025-01-10T13:49:20.8027320Z                 )
2025-01-10T13:49:20.8027320Z 
2025-01-10T13:49:20.8027420Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-01-10T13:49:20.8027510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8027510Z 
2025-01-10T13:49:20.8027840Z args = (<function assert_allclose.<locals>.compare at 0x130d52340>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10, ...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8027900Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:20.8028090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8028100Z 
2025-01-10T13:49:20.8028140Z     @wraps(func)
2025-01-10T13:49:20.8028200Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8028250Z         with self._recreate_cm():
2025-01-10T13:49:20.8028310Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8028360Z E           AssertionError: 
2025-01-10T13:49:20.8028440Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8028480Z E           
2025-01-10T13:49:20.8028550Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8028640Z E           Max absolute difference among violations: 26
2025-01-10T13:49:20.8028740Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8028860Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8028920Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8029040Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8029100Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8029100Z 
2025-01-10T13:49:20.8029250Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8029360Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8029580Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8029820Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8029950Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8030210Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8030360Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _______
2025-01-10T13:49:20.8030370Z 
2025-01-10T13:49:20.8030550Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf5e80>
2025-01-10T13:49:20.8030770Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x152337170>
2025-01-10T13:49:20.8031120Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8031310Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl7]>>
2025-01-10T13:49:20.8031310Z 
2025-01-10T13:49:20.8031370Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8031480Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-01-10T13:49:20.8031520Z     ):
2025-01-10T13:49:20.8031570Z         """
2025-01-10T13:49:20.8031660Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8031700Z     
2025-01-10T13:49:20.8031790Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8031830Z     
2025-01-10T13:49:20.8031880Z         Parameters:
2025-01-10T13:49:20.8031930Z         -----------
2025-01-10T13:49:20.8032040Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-01-10T13:49:20.8032150Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-01-10T13:49:20.8032220Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8032260Z         """
2025-01-10T13:49:20.8032330Z         fig, _ = plotter_generate_plot_mpl
2025-01-10T13:49:20.8032400Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8032740Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-01-10T13:49:20.8032870Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8032940Z             expected_values = expected.get(
2025-01-10T13:49:20.8032990Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8033050Z             ).values.flatten()
2025-01-10T13:49:20.8033140Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-01-10T13:49:20.8033180Z     
2025-01-10T13:49:20.8033280Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8033340Z                 np.testing.assert_allclose(
2025-01-10T13:49:20.8033390Z                     expected_values,
2025-01-10T13:49:20.8033440Z                     actual_values,
2025-01-10T13:49:20.8033500Z                     rtol=0.3,
2025-01-10T13:49:20.8033540Z                     atol=3,
2025-01-10T13:49:20.8033590Z                 )
2025-01-10T13:49:20.8033630Z             else:
2025-01-10T13:49:20.8033730Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T13:49:20.8033770Z     
2025-01-10T13:49:20.8033850Z         labels = expected["plot_data_hdf/scalars"]
2025-01-10T13:49:20.8033930Z         for index1, data in enumerate(fig.get_children()):
2025-01-10T13:49:20.8034000Z             if isinstance(data.get_label(), str):
2025-01-10T13:49:20.8034050Z                 assert (
2025-01-10T13:49:20.8034140Z                     getattr(labels, "label" + str(index1)).decode()
2025-01-10T13:49:20.8034190Z                     == data.get_label()
2025-01-10T13:49:20.8034240Z                 )
2025-01-10T13:49:20.8034290Z             if isinstance(data, Line2D):
2025-01-10T13:49:20.8034750Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8034800Z                     data.get_xydata(),
2025-01-10T13:49:20.8034900Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-01-10T13:49:20.8034960Z                     rtol=0.3,
2025-01-10T13:49:20.8035010Z                     atol=3,
2025-01-10T13:49:20.8035050Z                 )
2025-01-10T13:49:20.8035050Z 
2025-01-10T13:49:20.8035160Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-01-10T13:49:20.8035240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8035250Z 
2025-01-10T13:49:20.8035420Z args = (<function assert_allclose.<locals>.compare at 0x130cd6700>, array([[1.10e+04, 9.00e+00],
2025-01-10T13:49:20.8035470Z        [1.19e+04, 9.00e+00],...,
2025-01-10T13:49:20.8035520Z        [1.82e+04, 0.00e+00],
2025-01-10T13:49:20.8035570Z        [1.91e+04, 0.00e+00],
2025-01-10T13:49:20.8035610Z        [1.91e+04, 0.00e+00],
2025-01-10T13:49:20.8035660Z        [2.00e+04, 0.00e+00]]))
2025-01-10T13:49:20.8035860Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8035860Z 
2025-01-10T13:49:20.8035900Z     @wraps(func)
2025-01-10T13:49:20.8035960Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8036020Z         with self._recreate_cm():
2025-01-10T13:49:20.8036080Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8036130Z E           AssertionError: 
2025-01-10T13:49:20.8036210Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8036250Z E           
2025-01-10T13:49:20.8036320Z E           Mismatched elements: 2 / 40 (5%)
2025-01-10T13:49:20.8036400Z E           Max absolute difference among violations: 4.
2025-01-10T13:49:20.8036500Z E           Max relative difference among violations: 1.33333333
2025-01-10T13:49:20.8036560Z E            ACTUAL: array([[1.10e+04, 9.00e+00],
2025-01-10T13:49:20.8036620Z E                  [1.19e+04, 9.00e+00],
2025-01-10T13:49:20.8036670Z E                  [1.19e+04, 5.00e+00],...
2025-01-10T13:49:20.8036740Z E            DESIRED: array([[1.10e+04, 1.10e+01],
2025-01-10T13:49:20.8036790Z E                  [1.19e+04, 1.10e+01],
2025-01-10T13:49:20.8036960Z E                  [1.19e+04, 5.00e+00],...
2025-01-10T13:49:20.8036970Z 
2025-01-10T13:49:20.8037120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8037240Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8037480Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8037660Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8037780Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8038010Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8038160Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-01-10T13:49:20.8038160Z 
2025-01-10T13:49:20.8038350Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf6b70>
2025-01-10T13:49:20.8038580Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x12d06b290>
2025-01-10T13:49:20.8038640Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8038750Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:20.8038850Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:20.8038990Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8039170Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-01-10T13:49:20.8039180Z 
2025-01-10T13:49:20.8039240Z     def test_generate_plot_ply(
2025-01-10T13:49:20.8039420Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8039460Z     ):
2025-01-10T13:49:20.8039500Z         """
2025-01-10T13:49:20.8039600Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8039640Z     
2025-01-10T13:49:20.8039740Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8039780Z     
2025-01-10T13:49:20.8039820Z         Parameters:
2025-01-10T13:49:20.8039870Z         ----------
2025-01-10T13:49:20.8039990Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:20.8040090Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:20.8040160Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8040200Z         """
2025-01-10T13:49:20.8040260Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8040330Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8040460Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8040500Z     
2025-01-10T13:49:20.8040620Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8040690Z             expected_values = expected.get(
2025-01-10T13:49:20.8040740Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8040800Z             ).values.flatten()
2025-01-10T13:49:20.8040900Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:20.8040940Z     
2025-01-10T13:49:20.8041040Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8041100Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8041160Z                     expected_values,
2025-01-10T13:49:20.8041210Z                     actual_values,
2025-01-10T13:49:20.8041250Z                     rtol=0.3,
2025-01-10T13:49:20.8041300Z                     atol=3,
2025-01-10T13:49:20.8041340Z                 )
2025-01-10T13:49:20.8041350Z 
2025-01-10T13:49:20.8041450Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:20.8041540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8041540Z 
2025-01-10T13:49:20.8041870Z args = (<function assert_allclose.<locals>.compare at 0x12dc627a0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10, ...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8041940Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:20.8042140Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8042140Z 
2025-01-10T13:49:20.8042190Z     @wraps(func)
2025-01-10T13:49:20.8042240Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8042300Z         with self._recreate_cm():
2025-01-10T13:49:20.8042360Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8042410Z E           AssertionError: 
2025-01-10T13:49:20.8042490Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8042540Z E           
2025-01-10T13:49:20.8042610Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8042690Z E           Max absolute difference among violations: 26
2025-01-10T13:49:20.8042780Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8042900Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8042970Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8043090Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8043150Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8043150Z 
2025-01-10T13:49:20.8043300Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8043420Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8043770Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8044080Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-01-10T13:49:20.8044200Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8044520Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-01-10T13:49:20.8044680Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-01-10T13:49:20.8044680Z 
2025-01-10T13:49:20.8044870Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf6c60>
2025-01-10T13:49:20.8045090Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x3116b6db0>
2025-01-10T13:49:20.8045160Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8045270Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:20.8045370Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:20.8045520Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8045710Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-01-10T13:49:20.8045710Z 
2025-01-10T13:49:20.8045760Z     def test_generate_plot_ply(
2025-01-10T13:49:20.8045890Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8045930Z     ):
2025-01-10T13:49:20.8045980Z         """
2025-01-10T13:49:20.8046070Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8046110Z     
2025-01-10T13:49:20.8046210Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8046240Z     
2025-01-10T13:49:20.8046300Z         Parameters:
2025-01-10T13:49:20.8046340Z         ----------
2025-01-10T13:49:20.8046460Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:20.8046560Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:20.8046630Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8046670Z         """
2025-01-10T13:49:20.8046830Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8046910Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8047040Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8047080Z     
2025-01-10T13:49:20.8047190Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8047260Z             expected_values = expected.get(
2025-01-10T13:49:20.8047310Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8047370Z             ).values.flatten()
2025-01-10T13:49:20.8047470Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:20.8047520Z     
2025-01-10T13:49:20.8047610Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8047680Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8047730Z                     expected_values,
2025-01-10T13:49:20.8047790Z                     actual_values,
2025-01-10T13:49:20.8047840Z                     rtol=0.3,
2025-01-10T13:49:20.8047880Z                     atol=3,
2025-01-10T13:49:20.8047930Z                 )
2025-01-10T13:49:20.8047930Z 
2025-01-10T13:49:20.8048040Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:20.8048130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8048130Z 
2025-01-10T13:49:20.8048420Z args = (<function assert_allclose.<locals>.compare at 0x12dc634c0>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10, ...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8048470Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:20.8048700Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8048710Z 
2025-01-10T13:49:20.8048760Z     @wraps(func)
2025-01-10T13:49:20.8048810Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8048860Z         with self._recreate_cm():
2025-01-10T13:49:20.8048920Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8048970Z E           AssertionError: 
2025-01-10T13:49:20.8049040Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8049090Z E           
2025-01-10T13:49:20.8049160Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8049240Z E           Max absolute difference among violations: 26
2025-01-10T13:49:20.8049330Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8049450Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8049510Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8049630Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8049700Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8049700Z 
2025-01-10T13:49:20.8049850Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8050010Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-01-10T13:49:20.8050010Z 
2025-01-10T13:49:20.8050200Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf7080>
2025-01-10T13:49:20.8050430Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x12cc5d490>
2025-01-10T13:49:20.8050500Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8050610Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:20.8050710Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:20.8050860Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8051040Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-01-10T13:49:20.8051040Z 
2025-01-10T13:49:20.8051290Z     def test_generate_plot_ply(
2025-01-10T13:49:20.8051430Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8051480Z     ):
2025-01-10T13:49:20.8051520Z         """
2025-01-10T13:49:20.8051610Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8051650Z     
2025-01-10T13:49:20.8051750Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8051790Z     
2025-01-10T13:49:20.8051830Z         Parameters:
2025-01-10T13:49:20.8051880Z         ----------
2025-01-10T13:49:20.8052000Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:20.8052090Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:20.8052170Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8052210Z         """
2025-01-10T13:49:20.8052280Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8052350Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8052480Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8052530Z     
2025-01-10T13:49:20.8052640Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8052700Z             expected_values = expected.get(
2025-01-10T13:49:20.8052750Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8052810Z             ).values.flatten()
2025-01-10T13:49:20.8052910Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:20.8052960Z     
2025-01-10T13:49:20.8053050Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8053120Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8053340Z                     expected_values,
2025-01-10T13:49:20.8053390Z                     actual_values,
2025-01-10T13:49:20.8053440Z                     rtol=0.3,
2025-01-10T13:49:20.8053490Z                     atol=3,
2025-01-10T13:49:20.8053530Z                 )
2025-01-10T13:49:20.8053530Z 
2025-01-10T13:49:20.8053640Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:20.8053730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8053740Z 
2025-01-10T13:49:20.8054030Z args = (<function assert_allclose.<locals>.compare at 0x176d651c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:20.8054080Z          2,   5,   5,   5,   5,   0,   0]))
2025-01-10T13:49:20.8054270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8054280Z 
2025-01-10T13:49:20.8054330Z     @wraps(func)
2025-01-10T13:49:20.8054380Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8058040Z         with self._recreate_cm():
2025-01-10T13:49:20.8058130Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8058190Z E           AssertionError: 
2025-01-10T13:49:20.8058260Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8058300Z E           
2025-01-10T13:49:20.8058370Z E           Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:20.8058450Z E           Max absolute difference among violations: 24
2025-01-10T13:49:20.8058540Z E           Max relative difference among violations: 0.65
2025-01-10T13:49:20.8058650Z E            ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:20.8058720Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8058840Z E            DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:20.8058910Z E                    2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8058910Z 
2025-01-10T13:49:20.8059060Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8059340Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8059600Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8059780Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8059890Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8060120Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8060270Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-01-10T13:49:20.8060270Z 
2025-01-10T13:49:20.8060460Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf7170>
2025-01-10T13:49:20.8060690Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x130d481a0>
2025-01-10T13:49:20.8060760Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8060870Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:20.8060970Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:20.8061110Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8061290Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-01-10T13:49:20.8061300Z 
2025-01-10T13:49:20.8061350Z     def test_generate_plot_ply(
2025-01-10T13:49:20.8061480Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8061510Z     ):
2025-01-10T13:49:20.8061560Z         """
2025-01-10T13:49:20.8061650Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8061750Z     
2025-01-10T13:49:20.8061840Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8061880Z     
2025-01-10T13:49:20.8061930Z         Parameters:
2025-01-10T13:49:20.8061970Z         ----------
2025-01-10T13:49:20.8062090Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:20.8062190Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:20.8062260Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8062300Z         """
2025-01-10T13:49:20.8062370Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8062440Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8062570Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8062610Z     
2025-01-10T13:49:20.8062720Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8062790Z             expected_values = expected.get(
2025-01-10T13:49:20.8062840Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8062900Z             ).values.flatten()
2025-01-10T13:49:20.8063000Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:20.8063040Z     
2025-01-10T13:49:20.8063130Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8063200Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8063250Z                     expected_values,
2025-01-10T13:49:20.8063310Z                     actual_values,
2025-01-10T13:49:20.8063360Z                     rtol=0.3,
2025-01-10T13:49:20.8063410Z                     atol=3,
2025-01-10T13:49:20.8063450Z                 )
2025-01-10T13:49:20.8063450Z 
2025-01-10T13:49:20.8063550Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-01-10T13:49:20.8063630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8063640Z 
2025-01-10T13:49:20.8063940Z args = (<function assert_allclose.<locals>.compare at 0x131deae80>, array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10, ...]), array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8063990Z          0,   1,   1,   0,   0,   0,   0]))
2025-01-10T13:49:20.8064230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8064230Z 
2025-01-10T13:49:20.8064290Z     @wraps(func)
2025-01-10T13:49:20.8064340Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8064400Z         with self._recreate_cm():
2025-01-10T13:49:20.8064450Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8064510Z E           AssertionError: 
2025-01-10T13:49:20.8064580Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8064630Z E           
2025-01-10T13:49:20.8064690Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8064770Z E           Max absolute difference among violations: 26
2025-01-10T13:49:20.8064870Z E           Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8064990Z E            ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8065060Z E                    1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8065180Z E            DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8065240Z E                    0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8065250Z 
2025-01-10T13:49:20.8065390Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8065510Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8065680Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8065920Z 	['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8066090Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8066360Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O I', 'O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8066510Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _______
2025-01-10T13:49:20.8066520Z 
2025-01-10T13:49:20.8066700Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11bdf72f0>
2025-01-10T13:49:20.8066940Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x12d00a960>
2025-01-10T13:49:20.8067000Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8067120Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-01-10T13:49:20.8067220Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-01-10T13:49:20.8067370Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x157d4f6e0>)
2025-01-10T13:49:20.8067550Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply7]>>
2025-01-10T13:49:20.8067560Z 
2025-01-10T13:49:20.8067610Z     def test_generate_plot_ply(
2025-01-10T13:49:20.8067740Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8067780Z     ):
2025-01-10T13:49:20.8067830Z         """
2025-01-10T13:49:20.8067920Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-01-10T13:49:20.8067970Z     
2025-01-10T13:49:20.8068060Z         Compares generated plot data with regression data.
2025-01-10T13:49:20.8068100Z     
2025-01-10T13:49:20.8068150Z         Parameters:
2025-01-10T13:49:20.8068200Z         ----------
2025-01-10T13:49:20.8068320Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-01-10T13:49:20.8068420Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-01-10T13:49:20.8068490Z         request: Pytest's request fixture.
2025-01-10T13:49:20.8068540Z         """
2025-01-10T13:49:20.8068600Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8068680Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8068860Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8068900Z     
2025-01-10T13:49:20.8069020Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-01-10T13:49:20.8069080Z             expected_values = expected.get(
2025-01-10T13:49:20.8069140Z                 "plot_data_hdf/" + item
2025-01-10T13:49:20.8069190Z             ).values.flatten()
2025-01-10T13:49:20.8069300Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-01-10T13:49:20.8069340Z     
2025-01-10T13:49:20.8069430Z             if np.issubdtype(expected_values.dtype, np.number):
2025-01-10T13:49:20.8069500Z                 np.testing.assert_allclose(
2025-01-10T13:49:20.8069550Z                     expected_values,
2025-01-10T13:49:20.8069610Z                     actual_values,
2025-01-10T13:49:20.8069660Z                     rtol=0.3,
2025-01-10T13:49:20.8069710Z                     atol=3,
2025-01-10T13:49:20.8069750Z                 )
2025-01-10T13:49:20.8069790Z             else:
2025-01-10T13:49:20.8069890Z                 assert np.array_equal(expected_values, actual_values)
2025-01-10T13:49:20.8069960Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8070040Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8070100Z             if data.stackgroup:
2025-01-10T13:49:20.8070140Z                 assert (
2025-01-10T13:49:20.8070200Z                     data.stackgroup
2025-01-10T13:49:20.8070240Z                     == getattr(
2025-01-10T13:49:20.8070320Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8070390Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8070440Z                     ).decode()
2025-01-10T13:49:20.8070540Z                 )
2025-01-10T13:49:20.8070590Z             if data.name:
2025-01-10T13:49:20.8070640Z                 assert (
2025-01-10T13:49:20.8070690Z                     data.name
2025-01-10T13:49:20.8070730Z                     == getattr(
2025-01-10T13:49:20.8070810Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8070880Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8070930Z                     ).decode()
2025-01-10T13:49:20.8070970Z                 )
2025-01-10T13:49:20.8071030Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8071070Z                 data.x,
2025-01-10T13:49:20.8071150Z                 expected.get(group + "x").values.flatten(),
2025-01-10T13:49:20.8071200Z                 rtol=0.3,
2025-01-10T13:49:20.8071240Z                 atol=3,
2025-01-10T13:49:20.8071280Z             )
2025-01-10T13:49:20.8071340Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8071390Z                 data.y,
2025-01-10T13:49:20.8071470Z                 expected.get(group + "y").values.flatten(),
2025-01-10T13:49:20.8071520Z                 rtol=0.3,
2025-01-10T13:49:20.8071570Z                 atol=3,
2025-01-10T13:49:20.8071610Z             )
2025-01-10T13:49:20.8071610Z 
2025-01-10T13:49:20.8071720Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-01-10T13:49:20.8071800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8071800Z 
2025-01-10T13:49:20.8072090Z args = (<function assert_allclose.<locals>.compare at 0x130d523e0>, array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]), array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8072130Z         0,  0,  0]))
2025-01-10T13:49:20.8072320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'strict': False, ...}
2025-01-10T13:49:20.8072330Z 
2025-01-10T13:49:20.8072380Z     @wraps(func)
2025-01-10T13:49:20.8072430Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8072490Z         with self._recreate_cm():
2025-01-10T13:49:20.8072550Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8072600Z E           AssertionError: 
2025-01-10T13:49:20.8072890Z E           Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8072950Z E           
2025-01-10T13:49:20.8073010Z E           Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8073100Z E           Max absolute difference among violations: 4
2025-01-10T13:49:20.8073190Z E           Max relative difference among violations: 1.33333333
2025-01-10T13:49:20.8073300Z E            ACTUAL: array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T13:49:20.8073420Z E            DESIRED: array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8073460Z E                   0,  0,  0])
2025-01-10T13:49:20.8073470Z 
2025-01-10T13:49:20.8073620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8073730Z ---------------------------- Captured stdout setup -----------------------------
2025-01-10T13:49:20.8073920Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-01-10T13:49:20.8074100Z 	['O III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-01-10T13:49:20.8074220Z ------------------------------ Captured log setup ------------------------------
2025-01-10T13:49:20.8074440Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III'] were not found in the provided wavelength range.
2025-01-10T13:49:20.8074610Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-10T13:49:20.8074620Z 
2025-01-10T13:49:20.8074810Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdfea50>
2025-01-10T13:49:20.8075030Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8075610Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12d295bb0>
2025-01-10T13:49:20.8075810Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-01-10T13:49:20.8075820Z 
2025-01-10T13:49:20.8075880Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8075920Z         self,
2025-01-10T13:49:20.8075990Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8076040Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8076080Z         request,
2025-01-10T13:49:20.8076120Z     ):
2025-01-10T13:49:20.8076200Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8076330Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8076390Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8076530Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8076580Z             plot_object = getattr(
2025-01-10T13:49:20.8076680Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8076720Z             )
2025-01-10T13:49:20.8076790Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8076910Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8076990Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8077050Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8077150Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8077190Z                 )
2025-01-10T13:49:20.8077190Z 
2025-01-10T13:49:20.8077300Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8077390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8077390Z 
2025-01-10T13:49:20.8077730Z args = (<function assert_allclose.<locals>.compare at 0x1769814e0>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, .....), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:20.8077810Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8078060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8078060Z 
2025-01-10T13:49:20.8078110Z     @wraps(func)
2025-01-10T13:49:20.8078170Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8078220Z         with self._recreate_cm():
2025-01-10T13:49:20.8078280Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8078340Z E           AssertionError: 
2025-01-10T13:49:20.8078420Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8078460Z E           
2025-01-10T13:49:20.8078530Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8078630Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8078730Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8078860Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8078920Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8079050Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8079110Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8079110Z 
2025-01-10T13:49:20.8079260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8079420Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-10T13:49:20.8079420Z 
2025-01-10T13:49:20.8079620Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdff1a0>
2025-01-10T13:49:20.8079840Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8080120Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12bc46db0>
2025-01-10T13:49:20.8080330Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-01-10T13:49:20.8080330Z 
2025-01-10T13:49:20.8080400Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8080440Z         self,
2025-01-10T13:49:20.8080500Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8080560Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8080600Z         request,
2025-01-10T13:49:20.8080650Z     ):
2025-01-10T13:49:20.8080720Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8080860Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8080910Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8081050Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8081100Z             plot_object = getattr(
2025-01-10T13:49:20.8081200Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8081240Z             )
2025-01-10T13:49:20.8081310Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8081430Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8081510Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8081570Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8081660Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8081710Z                 )
2025-01-10T13:49:20.8081710Z 
2025-01-10T13:49:20.8081810Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8081900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8081900Z 
2025-01-10T13:49:20.8082230Z args = (<function assert_allclose.<locals>.compare at 0x1769158a0>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, .....), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:20.8082310Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8082580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8082640Z 
2025-01-10T13:49:20.8082690Z     @wraps(func)
2025-01-10T13:49:20.8082750Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8082800Z         with self._recreate_cm():
2025-01-10T13:49:20.8082860Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8082910Z E           AssertionError: 
2025-01-10T13:49:20.8082990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8083030Z E           
2025-01-10T13:49:20.8083100Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8083200Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8083290Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8083420Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8083480Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8083610Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8083670Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8083680Z 
2025-01-10T13:49:20.8083970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8084130Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-10T13:49:20.8084130Z 
2025-01-10T13:49:20.8084320Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdff620>
2025-01-10T13:49:20.8084540Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8084780Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12bc47ef0>
2025-01-10T13:49:20.8085060Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-01-10T13:49:20.8085070Z 
2025-01-10T13:49:20.8085130Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8085180Z         self,
2025-01-10T13:49:20.8085240Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8085300Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8085340Z         request,
2025-01-10T13:49:20.8085380Z     ):
2025-01-10T13:49:20.8085450Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8085590Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8085640Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8085770Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8085830Z             plot_object = getattr(
2025-01-10T13:49:20.8085920Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8085960Z             )
2025-01-10T13:49:20.8086040Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8086160Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8086230Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8086300Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8086390Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8086440Z                 )
2025-01-10T13:49:20.8086440Z 
2025-01-10T13:49:20.8086550Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8086630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8086630Z 
2025-01-10T13:49:20.8086970Z args = (<function assert_allclose.<locals>.compare at 0x321e74d60>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, .....), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:20.8087050Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8087240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8087250Z 
2025-01-10T13:49:20.8087340Z     @wraps(func)
2025-01-10T13:49:20.8087400Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8087450Z         with self._recreate_cm():
2025-01-10T13:49:20.8087510Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8087560Z E           AssertionError: 
2025-01-10T13:49:20.8087640Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8087680Z E           
2025-01-10T13:49:20.8087750Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8087850Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8087950Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8088070Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8088130Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8088260Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8088320Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8088320Z 
2025-01-10T13:49:20.8088470Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8088640Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-10T13:49:20.8088640Z 
2025-01-10T13:49:20.8088830Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdff710>
2025-01-10T13:49:20.8089050Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8089290Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x32880ad20>
2025-01-10T13:49:20.8089530Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-01-10T13:49:20.8089540Z 
2025-01-10T13:49:20.8089600Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8089650Z         self,
2025-01-10T13:49:20.8089720Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8089780Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8089820Z         request,
2025-01-10T13:49:20.8089860Z     ):
2025-01-10T13:49:20.8089940Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8090070Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8090130Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8090260Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8090310Z             plot_object = getattr(
2025-01-10T13:49:20.8090410Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8090450Z             )
2025-01-10T13:49:20.8090520Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8090640Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8090710Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8090780Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8090880Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8090920Z                 )
2025-01-10T13:49:20.8090930Z 
2025-01-10T13:49:20.8091030Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8091120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8091120Z 
2025-01-10T13:49:20.8091450Z args = (<function assert_allclose.<locals>.compare at 0x321e76b60>, array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, .....), array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, ...,
2025-01-10T13:49:20.8091530Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8091730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8091730Z 
2025-01-10T13:49:20.8091770Z     @wraps(func)
2025-01-10T13:49:20.8092020Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8092090Z         with self._recreate_cm():
2025-01-10T13:49:20.8092160Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8092210Z E           AssertionError: 
2025-01-10T13:49:20.8092290Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8092330Z E           
2025-01-10T13:49:20.8092400Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8092500Z E           Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8092590Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8092720Z E            ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8092780Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8092910Z E            DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8092960Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8092960Z 
2025-01-10T13:49:20.8093120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8093280Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-10T13:49:20.8093280Z 
2025-01-10T13:49:20.8093470Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdff800>
2025-01-10T13:49:20.8093690Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8093930Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x127f88a10>
2025-01-10T13:49:20.8094140Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-01-10T13:49:20.8094430Z 
2025-01-10T13:49:20.8094500Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8094540Z         self,
2025-01-10T13:49:20.8094600Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8094670Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8094710Z         request,
2025-01-10T13:49:20.8094760Z     ):
2025-01-10T13:49:20.8094830Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8094970Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8095020Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8095150Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8095210Z             plot_object = getattr(
2025-01-10T13:49:20.8095300Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8095350Z             )
2025-01-10T13:49:20.8095420Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8095540Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8095610Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8095680Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8095780Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8095820Z                 )
2025-01-10T13:49:20.8095820Z 
2025-01-10T13:49:20.8095930Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8096010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8096010Z 
2025-01-10T13:49:20.8096350Z args = (<function assert_allclose.<locals>.compare at 0x321e74a40>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, .....), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:20.8096420Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8096620Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8096620Z 
2025-01-10T13:49:20.8096660Z     @wraps(func)
2025-01-10T13:49:20.8096720Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8096820Z         with self._recreate_cm():
2025-01-10T13:49:20.8096880Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8096940Z E           AssertionError: 
2025-01-10T13:49:20.8097020Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8097060Z E           
2025-01-10T13:49:20.8097130Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8097240Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8097340Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8097470Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8097520Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8097650Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8097710Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8097710Z 
2025-01-10T13:49:20.8097870Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8098030Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-10T13:49:20.8098040Z 
2025-01-10T13:49:20.8098230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdff8c0>
2025-01-10T13:49:20.8098450Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8098690Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x131099be0>
2025-01-10T13:49:20.8098890Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-01-10T13:49:20.8098930Z 
2025-01-10T13:49:20.8098990Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8099040Z         self,
2025-01-10T13:49:20.8099100Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8099160Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8099210Z         request,
2025-01-10T13:49:20.8099250Z     ):
2025-01-10T13:49:20.8099320Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8099460Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8099520Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8099650Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8099700Z             plot_object = getattr(
2025-01-10T13:49:20.8099790Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8099840Z             )
2025-01-10T13:49:20.8099900Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8100020Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8100100Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8100160Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8100260Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8100310Z                 )
2025-01-10T13:49:20.8100310Z 
2025-01-10T13:49:20.8100410Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8100500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8100500Z 
2025-01-10T13:49:20.8100830Z args = (<function assert_allclose.<locals>.compare at 0x321e749a0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, .....), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:20.8100900Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8101100Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8101110Z 
2025-01-10T13:49:20.8101150Z     @wraps(func)
2025-01-10T13:49:20.8101210Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8101260Z         with self._recreate_cm():
2025-01-10T13:49:20.8101370Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8101420Z E           AssertionError: 
2025-01-10T13:49:20.8101500Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8101540Z E           
2025-01-10T13:49:20.8101610Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8101720Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8101810Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8101940Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8102000Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8102130Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8102180Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8102190Z 
2025-01-10T13:49:20.8102340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8102500Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-10T13:49:20.8102510Z 
2025-01-10T13:49:20.8102700Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdff980>
2025-01-10T13:49:20.8102920Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8103150Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x13109afc0>
2025-01-10T13:49:20.8103360Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-01-10T13:49:20.8103410Z 
2025-01-10T13:49:20.8103470Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8103520Z         self,
2025-01-10T13:49:20.8103580Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8103640Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8103680Z         request,
2025-01-10T13:49:20.8103730Z     ):
2025-01-10T13:49:20.8103800Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8103930Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8103990Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8104130Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8104190Z             plot_object = getattr(
2025-01-10T13:49:20.8104270Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8104320Z             )
2025-01-10T13:49:20.8104380Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8104510Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8104590Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8104650Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8104740Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8104790Z                 )
2025-01-10T13:49:20.8104790Z 
2025-01-10T13:49:20.8104900Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8104980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8104980Z 
2025-01-10T13:49:20.8105330Z args = (<function assert_allclose.<locals>.compare at 0x1769d8fe0>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, .....), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:20.8105400Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8105590Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8105600Z 
2025-01-10T13:49:20.8105640Z     @wraps(func)
2025-01-10T13:49:20.8105700Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8105760Z         with self._recreate_cm():
2025-01-10T13:49:20.8105810Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8105910Z E           AssertionError: 
2025-01-10T13:49:20.8105990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8106030Z E           
2025-01-10T13:49:20.8106100Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8106210Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8106310Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8106430Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8106490Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8106620Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8106680Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8106690Z 
2025-01-10T13:49:20.8106830Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8107000Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-10T13:49:20.8107000Z 
2025-01-10T13:49:20.8107190Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdffa40>
2025-01-10T13:49:20.8107410Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8107650Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3288089b0>
2025-01-10T13:49:20.8107860Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-01-10T13:49:20.8107860Z 
2025-01-10T13:49:20.8107920Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8108010Z         self,
2025-01-10T13:49:20.8108070Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8108130Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8108180Z         request,
2025-01-10T13:49:20.8111520Z     ):
2025-01-10T13:49:20.8111650Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8111780Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8111840Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8111970Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8112030Z             plot_object = getattr(
2025-01-10T13:49:20.8112120Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8112160Z             )
2025-01-10T13:49:20.8112230Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8112350Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8112430Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8112490Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8112580Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8112620Z                 )
2025-01-10T13:49:20.8112630Z 
2025-01-10T13:49:20.8112740Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8112830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8112830Z 
2025-01-10T13:49:20.8113160Z args = (<function assert_allclose.<locals>.compare at 0x176916840>, array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, .....), array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, ...,
2025-01-10T13:49:20.8113240Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8113430Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8113430Z 
2025-01-10T13:49:20.8113480Z     @wraps(func)
2025-01-10T13:49:20.8113530Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8113590Z         with self._recreate_cm():
2025-01-10T13:49:20.8113640Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8114090Z E           AssertionError: 
2025-01-10T13:49:20.8114170Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8114220Z E           
2025-01-10T13:49:20.8114290Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8114390Z E           Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8114490Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8114610Z E            ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8114670Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8114800Z E            DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8114870Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8114870Z 
2025-01-10T13:49:20.8115020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8115180Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-10T13:49:20.8115190Z 
2025-01-10T13:49:20.8115380Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdffb00>
2025-01-10T13:49:20.8115600Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8115840Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x32880aae0>
2025-01-10T13:49:20.8116040Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-01-10T13:49:20.8116040Z 
2025-01-10T13:49:20.8116110Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8116340Z         self,
2025-01-10T13:49:20.8116410Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8116460Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8116510Z         request,
2025-01-10T13:49:20.8116550Z     ):
2025-01-10T13:49:20.8116630Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8116760Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8116820Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8116950Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8117010Z             plot_object = getattr(
2025-01-10T13:49:20.8117100Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8117140Z             )
2025-01-10T13:49:20.8117210Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8117330Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8117400Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8117470Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8117570Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8117610Z                 )
2025-01-10T13:49:20.8117610Z 
2025-01-10T13:49:20.8117730Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8117810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8117820Z 
2025-01-10T13:49:20.8118150Z args = (<function assert_allclose.<locals>.compare at 0x321e77ce0>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, .....), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:20.8118220Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8118420Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8118420Z 
2025-01-10T13:49:20.8118470Z     @wraps(func)
2025-01-10T13:49:20.8118520Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8118580Z         with self._recreate_cm():
2025-01-10T13:49:20.8118640Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8118700Z E           AssertionError: 
2025-01-10T13:49:20.8118820Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8118870Z E           
2025-01-10T13:49:20.8118940Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8119040Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8119140Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8119260Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8119320Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8119440Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8119500Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8119510Z 
2025-01-10T13:49:20.8119650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8119820Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-10T13:49:20.8119820Z 
2025-01-10T13:49:20.8120010Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdffbc0>
2025-01-10T13:49:20.8120230Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8120470Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30da620f0>
2025-01-10T13:49:20.8120670Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-01-10T13:49:20.8120670Z 
2025-01-10T13:49:20.8120740Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8120780Z         self,
2025-01-10T13:49:20.8120890Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8120950Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8120990Z         request,
2025-01-10T13:49:20.8121030Z     ):
2025-01-10T13:49:20.8121110Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8121250Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8121310Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8121440Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8121490Z             plot_object = getattr(
2025-01-10T13:49:20.8121580Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8121620Z             )
2025-01-10T13:49:20.8121700Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8121810Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8121890Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8121950Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8122050Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8122090Z                 )
2025-01-10T13:49:20.8122090Z 
2025-01-10T13:49:20.8122200Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8122280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8122290Z 
2025-01-10T13:49:20.8122620Z args = (<function assert_allclose.<locals>.compare at 0x321e8cae0>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, .....), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:20.8122700Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8122890Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8122890Z 
2025-01-10T13:49:20.8122940Z     @wraps(func)
2025-01-10T13:49:20.8122990Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8123050Z         with self._recreate_cm():
2025-01-10T13:49:20.8123110Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8123160Z E           AssertionError: 
2025-01-10T13:49:20.8123240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8123320Z E           
2025-01-10T13:49:20.8123400Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8123500Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8123590Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8123720Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8123780Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8124070Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8124130Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8124140Z 
2025-01-10T13:49:20.8124280Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8124460Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-10T13:49:20.8124460Z 
2025-01-10T13:49:20.8124660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdffc80>
2025-01-10T13:49:20.8124880Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8125120Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31e074d70>
2025-01-10T13:49:20.8125320Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-01-10T13:49:20.8125320Z 
2025-01-10T13:49:20.8125390Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8125430Z         self,
2025-01-10T13:49:20.8125490Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8125620Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8125670Z         request,
2025-01-10T13:49:20.8125710Z     ):
2025-01-10T13:49:20.8125780Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8125920Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8125970Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8126110Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8126160Z             plot_object = getattr(
2025-01-10T13:49:20.8126250Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8126290Z             )
2025-01-10T13:49:20.8126370Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8126480Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8126560Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8126620Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8126720Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8126770Z                 )
2025-01-10T13:49:20.8126770Z 
2025-01-10T13:49:20.8126870Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8126960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8126960Z 
2025-01-10T13:49:20.8127300Z args = (<function assert_allclose.<locals>.compare at 0x321e8d120>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, .....), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:20.8127380Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8127570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8127570Z 
2025-01-10T13:49:20.8127620Z     @wraps(func)
2025-01-10T13:49:20.8127670Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8127730Z         with self._recreate_cm():
2025-01-10T13:49:20.8127790Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8127840Z E           AssertionError: 
2025-01-10T13:49:20.8127920Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8127960Z E           
2025-01-10T13:49:20.8128090Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8128190Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8128290Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8128410Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8128470Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8128590Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8128650Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8128660Z 
2025-01-10T13:49:20.8128810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8128970Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-10T13:49:20.8128970Z 
2025-01-10T13:49:20.8129170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdffd40>
2025-01-10T13:49:20.8129400Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8129630Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x130de48f0>
2025-01-10T13:49:20.8129840Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-01-10T13:49:20.8129840Z 
2025-01-10T13:49:20.8129900Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8129950Z         self,
2025-01-10T13:49:20.8130010Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8130070Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8130150Z         request,
2025-01-10T13:49:20.8130200Z     ):
2025-01-10T13:49:20.8130270Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8130410Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8130470Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8130600Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8130660Z             plot_object = getattr(
2025-01-10T13:49:20.8130750Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8130800Z             )
2025-01-10T13:49:20.8130870Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8130980Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8131060Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8131120Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8131210Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8131260Z                 )
2025-01-10T13:49:20.8131260Z 
2025-01-10T13:49:20.8131360Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8131450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8131450Z 
2025-01-10T13:49:20.8131780Z args = (<function assert_allclose.<locals>.compare at 0x321e8c7c0>, array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, .....), array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, ...,
2025-01-10T13:49:20.8131860Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8132050Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8132050Z 
2025-01-10T13:49:20.8132100Z     @wraps(func)
2025-01-10T13:49:20.8132160Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8132210Z         with self._recreate_cm():
2025-01-10T13:49:20.8132270Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8132330Z E           AssertionError: 
2025-01-10T13:49:20.8132400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8132450Z E           
2025-01-10T13:49:20.8132780Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8132900Z E           Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8132990Z E           Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8133120Z E            ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8133180Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8133300Z E            DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8133360Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8133370Z 
2025-01-10T13:49:20.8133520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8133690Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-10T13:49:20.8133690Z 
2025-01-10T13:49:20.8133880Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdffe30>
2025-01-10T13:49:20.8134100Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8134340Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12d206120>
2025-01-10T13:49:20.8134560Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-01-10T13:49:20.8134560Z 
2025-01-10T13:49:20.8134630Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8134670Z         self,
2025-01-10T13:49:20.8134730Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8134800Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8134840Z         request,
2025-01-10T13:49:20.8135290Z     ):
2025-01-10T13:49:20.8135370Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8135520Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8135570Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8135710Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8135770Z             plot_object = getattr(
2025-01-10T13:49:20.8135860Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8135900Z             )
2025-01-10T13:49:20.8135970Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8136090Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8136160Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8136230Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8136320Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8136370Z                 )
2025-01-10T13:49:20.8136370Z 
2025-01-10T13:49:20.8136470Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8136560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8136560Z 
2025-01-10T13:49:20.8136900Z args = (<function assert_allclose.<locals>.compare at 0x17a98ac00>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, .....), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:20.8136970Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8137170Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8137170Z 
2025-01-10T13:49:20.8137210Z     @wraps(func)
2025-01-10T13:49:20.8137270Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8137320Z         with self._recreate_cm():
2025-01-10T13:49:20.8137380Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8137440Z E           AssertionError: 
2025-01-10T13:49:20.8137520Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8137560Z E           
2025-01-10T13:49:20.8137620Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8137840Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8137950Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8138070Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8138130Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8138260Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8138310Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8138310Z 
2025-01-10T13:49:20.8138460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8138620Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-10T13:49:20.8138630Z 
2025-01-10T13:49:20.8138820Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdfff80>
2025-01-10T13:49:20.8139040Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8139290Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3288089b0>
2025-01-10T13:49:20.8139500Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-01-10T13:49:20.8139500Z 
2025-01-10T13:49:20.8139560Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8139600Z         self,
2025-01-10T13:49:20.8139660Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8139730Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8139770Z         request,
2025-01-10T13:49:20.8139810Z     ):
2025-01-10T13:49:20.8139930Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8140070Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8140120Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8140260Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8140320Z             plot_object = getattr(
2025-01-10T13:49:20.8140410Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8140450Z             )
2025-01-10T13:49:20.8140520Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8140640Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8140710Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8140780Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8140870Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8140920Z                 )
2025-01-10T13:49:20.8140920Z 
2025-01-10T13:49:20.8141020Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8141110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8141110Z 
2025-01-10T13:49:20.8141440Z args = (<function assert_allclose.<locals>.compare at 0x321e74ae0>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, .....), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:20.8141520Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8141710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8141720Z 
2025-01-10T13:49:20.8141760Z     @wraps(func)
2025-01-10T13:49:20.8141820Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8141870Z         with self._recreate_cm():
2025-01-10T13:49:20.8141930Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8141980Z E           AssertionError: 
2025-01-10T13:49:20.8142060Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8142100Z E           
2025-01-10T13:49:20.8142170Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8142310Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8142420Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8142550Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8142600Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8142730Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8142790Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8142790Z 
2025-01-10T13:49:20.8142940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8143110Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-10T13:49:20.8143110Z 
2025-01-10T13:49:20.8143310Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2cfe0>
2025-01-10T13:49:20.8143530Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8143770Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30da629f0>
2025-01-10T13:49:20.8143980Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-01-10T13:49:20.8143980Z 
2025-01-10T13:49:20.8144040Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8144090Z         self,
2025-01-10T13:49:20.8144150Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8144210Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8144250Z         request,
2025-01-10T13:49:20.8144290Z     ):
2025-01-10T13:49:20.8144360Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8144550Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8144610Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8144740Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8144800Z             plot_object = getattr(
2025-01-10T13:49:20.8144890Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8144940Z             )
2025-01-10T13:49:20.8145000Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8145120Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8145190Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8145260Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8145350Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8145400Z                 )
2025-01-10T13:49:20.8145400Z 
2025-01-10T13:49:20.8145500Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8145590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8145600Z 
2025-01-10T13:49:20.8145940Z args = (<function assert_allclose.<locals>.compare at 0x321e8dc60>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, .....), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:20.8146010Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8146200Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8146210Z 
2025-01-10T13:49:20.8146250Z     @wraps(func)
2025-01-10T13:49:20.8146310Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8146360Z         with self._recreate_cm():
2025-01-10T13:49:20.8146420Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8146470Z E           AssertionError: 
2025-01-10T13:49:20.8146550Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8146590Z E           
2025-01-10T13:49:20.8146660Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8146760Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8146900Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8147040Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8147090Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8147220Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8147280Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8147280Z 
2025-01-10T13:49:20.8147430Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8147600Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-10T13:49:20.8147600Z 
2025-01-10T13:49:20.8147790Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2e150>
2025-01-10T13:49:20.8148020Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>
2025-01-10T13:49:20.8148260Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x177e8ea50>
2025-01-10T13:49:20.8148470Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-01-10T13:49:20.8148470Z 
2025-01-10T13:49:20.8148530Z     def test_calculate_plotting_data(
2025-01-10T13:49:20.8148580Z         self,
2025-01-10T13:49:20.8148640Z         plotter_calculate_plotting_data,
2025-01-10T13:49:20.8148700Z         calculate_plotting_data_hdf,
2025-01-10T13:49:20.8148740Z         request,
2025-01-10T13:49:20.8148780Z     ):
2025-01-10T13:49:20.8148850Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8149030Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-01-10T13:49:20.8149090Z         group = "plot_data_hdf/"
2025-01-10T13:49:20.8149220Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-01-10T13:49:20.8149280Z             plot_object = getattr(
2025-01-10T13:49:20.8149370Z                 plotter_calculate_plotting_data, attribute_name
2025-01-10T13:49:20.8149410Z             )
2025-01-10T13:49:20.8149480Z             if attribute_type == "attributes_np":
2025-01-10T13:49:20.8149600Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-01-10T13:49:20.8149680Z                     plot_object = plot_object.cgs.value
2025-01-10T13:49:20.8149740Z >               np.testing.assert_allclose(
2025-01-10T13:49:20.8149830Z                     plot_object, expected.get(group + attribute_name)
2025-01-10T13:49:20.8149880Z                 )
2025-01-10T13:49:20.8149890Z 
2025-01-10T13:49:20.8149990Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-01-10T13:49:20.8150070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8150080Z 
2025-01-10T13:49:20.8150420Z args = (<function assert_allclose.<locals>.compare at 0x321e8d800>, array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, .....), array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, ...,
2025-01-10T13:49:20.8150490Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8150690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8150690Z 
2025-01-10T13:49:20.8150740Z     @wraps(func)
2025-01-10T13:49:20.8150790Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8150840Z         with self._recreate_cm():
2025-01-10T13:49:20.8150900Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8150960Z E           AssertionError: 
2025-01-10T13:49:20.8151030Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8151080Z E           
2025-01-10T13:49:20.8151140Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8151250Z E           Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8151600Z E           Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8151750Z E            ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8151800Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8151930Z E            DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8151990Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8151990Z 
2025-01-10T13:49:20.8152140Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8152300Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-01-10T13:49:20.8152300Z 
2025-01-10T13:49:20.8152490Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c080>
2025-01-10T13:49:20.8152720Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30da601a0>
2025-01-10T13:49:20.8152790Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8152850Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8152920Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8153030Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8153180Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8153360Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-01-10T13:49:20.8153360Z 
2025-01-10T13:49:20.8153420Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8153550Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8153590Z     ):
2025-01-10T13:49:20.8153920Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8154000Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8154120Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8154170Z     
2025-01-10T13:49:20.8154240Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8154310Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8154410Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8154490Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8154540Z             )
2025-01-10T13:49:20.8154580Z     
2025-01-10T13:49:20.8154650Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8154720Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8154770Z             if data.stackgroup:
2025-01-10T13:49:20.8154820Z                 assert (
2025-01-10T13:49:20.8154880Z                     data.stackgroup
2025-01-10T13:49:20.8154920Z                     == getattr(
2025-01-10T13:49:20.8155000Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8155070Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8155120Z                     ).decode()
2025-01-10T13:49:20.8155170Z                 )
2025-01-10T13:49:20.8155220Z             if data.name:
2025-01-10T13:49:20.8155260Z                 assert (
2025-01-10T13:49:20.8155310Z                     data.name
2025-01-10T13:49:20.8155360Z                     == getattr(
2025-01-10T13:49:20.8155440Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8155500Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8155550Z                     ).decode()
2025-01-10T13:49:20.8155600Z                 )
2025-01-10T13:49:20.8155660Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8155750Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8155800Z             )
2025-01-10T13:49:20.8155860Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8155950Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8155990Z             )
2025-01-10T13:49:20.8155990Z 
2025-01-10T13:49:20.8156150Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8156250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8156250Z 
2025-01-10T13:49:20.8156580Z args = (<function assert_allclose.<locals>.compare at 0x321e59f80>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, .....), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:20.8156650Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8156850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8156850Z 
2025-01-10T13:49:20.8156890Z     @wraps(func)
2025-01-10T13:49:20.8156950Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8157000Z         with self._recreate_cm():
2025-01-10T13:49:20.8157060Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8157120Z E           AssertionError: 
2025-01-10T13:49:20.8157190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8157230Z E           
2025-01-10T13:49:20.8157300Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8157400Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8157500Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8157620Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8157680Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8157800Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8157860Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8157910Z 
2025-01-10T13:49:20.8158070Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8158220Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-01-10T13:49:20.8158220Z 
2025-01-10T13:49:20.8158410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c140>
2025-01-10T13:49:20.8158640Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12d23c8f0>
2025-01-10T13:49:20.8158710Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8158760Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8158830Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8158910Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8159060Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8159240Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-01-10T13:49:20.8159240Z 
2025-01-10T13:49:20.8159300Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8159420Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8159460Z     ):
2025-01-10T13:49:20.8159530Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8159600Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8159740Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8159780Z     
2025-01-10T13:49:20.8159850Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8159930Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8160030Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8160100Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8160140Z             )
2025-01-10T13:49:20.8160190Z     
2025-01-10T13:49:20.8160260Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8160330Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8160380Z             if data.stackgroup:
2025-01-10T13:49:20.8160440Z                 assert (
2025-01-10T13:49:20.8160530Z                     data.stackgroup
2025-01-10T13:49:20.8160590Z                     == getattr(
2025-01-10T13:49:20.8160670Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8160740Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8160790Z                     ).decode()
2025-01-10T13:49:20.8160830Z                 )
2025-01-10T13:49:20.8160890Z             if data.name:
2025-01-10T13:49:20.8160930Z                 assert (
2025-01-10T13:49:20.8160980Z                     data.name
2025-01-10T13:49:20.8161020Z                     == getattr(
2025-01-10T13:49:20.8161100Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8161170Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8161220Z                     ).decode()
2025-01-10T13:49:20.8161260Z                 )
2025-01-10T13:49:20.8161320Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8161420Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8161470Z             )
2025-01-10T13:49:20.8165250Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8165420Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8165470Z             )
2025-01-10T13:49:20.8165470Z 
2025-01-10T13:49:20.8165570Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8165660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8165660Z 
2025-01-10T13:49:20.8165990Z args = (<function assert_allclose.<locals>.compare at 0x321e5bba0>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, .....), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:20.8166310Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8166510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8166520Z 
2025-01-10T13:49:20.8166570Z     @wraps(func)
2025-01-10T13:49:20.8166620Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8166680Z         with self._recreate_cm():
2025-01-10T13:49:20.8166740Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8166790Z E           AssertionError: 
2025-01-10T13:49:20.8166870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8166910Z E           
2025-01-10T13:49:20.8166980Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8167080Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8167180Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8167300Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8167370Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8167500Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8167560Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8167570Z 
2025-01-10T13:49:20.8167720Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8167870Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-01-10T13:49:20.8167870Z 
2025-01-10T13:49:20.8168060Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c590>
2025-01-10T13:49:20.8168290Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31e1c7d10>
2025-01-10T13:49:20.8168360Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8168420Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8168490Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8168570Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8168710Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8168990Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-01-10T13:49:20.8168990Z 
2025-01-10T13:49:20.8169050Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8169180Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8169220Z     ):
2025-01-10T13:49:20.8169290Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8169360Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8169490Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8169530Z     
2025-01-10T13:49:20.8169620Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8169680Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8169800Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8169870Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8169910Z             )
2025-01-10T13:49:20.8169960Z     
2025-01-10T13:49:20.8170030Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8170110Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8170160Z             if data.stackgroup:
2025-01-10T13:49:20.8170210Z                 assert (
2025-01-10T13:49:20.8170260Z                     data.stackgroup
2025-01-10T13:49:20.8170310Z                     == getattr(
2025-01-10T13:49:20.8170390Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8170460Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8170500Z                     ).decode()
2025-01-10T13:49:20.8170550Z                 )
2025-01-10T13:49:20.8170630Z             if data.name:
2025-01-10T13:49:20.8170680Z                 assert (
2025-01-10T13:49:20.8170730Z                     data.name
2025-01-10T13:49:20.8170780Z                     == getattr(
2025-01-10T13:49:20.8170860Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8170920Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8170980Z                     ).decode()
2025-01-10T13:49:20.8171020Z                 )
2025-01-10T13:49:20.8171080Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8171170Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8171210Z             )
2025-01-10T13:49:20.8171270Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8171370Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8171410Z             )
2025-01-10T13:49:20.8171410Z 
2025-01-10T13:49:20.8171520Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8171610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8171610Z 
2025-01-10T13:49:20.8171960Z args = (<function assert_allclose.<locals>.compare at 0x321e5a980>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, .....), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:20.8172030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8172220Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8172230Z 
2025-01-10T13:49:20.8172270Z     @wraps(func)
2025-01-10T13:49:20.8172320Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8172380Z         with self._recreate_cm():
2025-01-10T13:49:20.8172440Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8172490Z E           AssertionError: 
2025-01-10T13:49:20.8172560Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8172610Z E           
2025-01-10T13:49:20.8172680Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8172780Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8172870Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8173240Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8173310Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8173440Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8173500Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8173500Z 
2025-01-10T13:49:20.8173650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8173800Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-01-10T13:49:20.8173810Z 
2025-01-10T13:49:20.8174000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c650>
2025-01-10T13:49:20.8174230Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12cd66ae0>
2025-01-10T13:49:20.8174290Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8174350Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8174430Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8174510Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8174650Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8174830Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-01-10T13:49:20.8174830Z 
2025-01-10T13:49:20.8174890Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8175020Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8175060Z     ):
2025-01-10T13:49:20.8175130Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8175370Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8175500Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8175540Z     
2025-01-10T13:49:20.8175620Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8175690Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8175790Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8175870Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8175910Z             )
2025-01-10T13:49:20.8175950Z     
2025-01-10T13:49:20.8176020Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8176090Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8176150Z             if data.stackgroup:
2025-01-10T13:49:20.8176200Z                 assert (
2025-01-10T13:49:20.8176250Z                     data.stackgroup
2025-01-10T13:49:20.8176300Z                     == getattr(
2025-01-10T13:49:20.8176380Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8176450Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8176500Z                     ).decode()
2025-01-10T13:49:20.8176540Z                 )
2025-01-10T13:49:20.8176590Z             if data.name:
2025-01-10T13:49:20.8176650Z                 assert (
2025-01-10T13:49:20.8176690Z                     data.name
2025-01-10T13:49:20.8176740Z                     == getattr(
2025-01-10T13:49:20.8176810Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8176880Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8176920Z                     ).decode()
2025-01-10T13:49:20.8176970Z                 )
2025-01-10T13:49:20.8177030Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8177120Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8177170Z             )
2025-01-10T13:49:20.8177230Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8177320Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8177360Z             )
2025-01-10T13:49:20.8177360Z 
2025-01-10T13:49:20.8177470Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8177610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8177610Z 
2025-01-10T13:49:20.8177950Z args = (<function assert_allclose.<locals>.compare at 0x13140cfe0>, array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, .....), array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, ...,
2025-01-10T13:49:20.8178030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8178230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8178230Z 
2025-01-10T13:49:20.8178280Z     @wraps(func)
2025-01-10T13:49:20.8178330Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8178390Z         with self._recreate_cm():
2025-01-10T13:49:20.8178440Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8178500Z E           AssertionError: 
2025-01-10T13:49:20.8178570Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8178620Z E           
2025-01-10T13:49:20.8178690Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8178790Z E           Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8178880Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8179010Z E            ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8179070Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8179190Z E            DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8179250Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8179300Z 
2025-01-10T13:49:20.8179440Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8179600Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-01-10T13:49:20.8179600Z 
2025-01-10T13:49:20.8179790Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdfee70>
2025-01-10T13:49:20.8180030Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1275496d0>
2025-01-10T13:49:20.8180090Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8180140Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8180220Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8180290Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8180440Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8180610Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-01-10T13:49:20.8180620Z 
2025-01-10T13:49:20.8180670Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8180800Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8180840Z     ):
2025-01-10T13:49:20.8180900Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8180980Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8181100Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8181150Z     
2025-01-10T13:49:20.8181220Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8181290Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8181400Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8181470Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8181520Z             )
2025-01-10T13:49:20.8181560Z     
2025-01-10T13:49:20.8181630Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8181700Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8181760Z             if data.stackgroup:
2025-01-10T13:49:20.8181810Z                 assert (
2025-01-10T13:49:20.8181870Z                     data.stackgroup
2025-01-10T13:49:20.8181950Z                     == getattr(
2025-01-10T13:49:20.8182030Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8182110Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8182160Z                     ).decode()
2025-01-10T13:49:20.8182200Z                 )
2025-01-10T13:49:20.8182260Z             if data.name:
2025-01-10T13:49:20.8182300Z                 assert (
2025-01-10T13:49:20.8182350Z                     data.name
2025-01-10T13:49:20.8182400Z                     == getattr(
2025-01-10T13:49:20.8182470Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8182540Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8182630Z                     ).decode()
2025-01-10T13:49:20.8182670Z                 )
2025-01-10T13:49:20.8182730Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8182820Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8182860Z             )
2025-01-10T13:49:20.8182930Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8183020Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8183060Z             )
2025-01-10T13:49:20.8183060Z 
2025-01-10T13:49:20.8183160Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8183250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8183260Z 
2025-01-10T13:49:20.8183600Z args = (<function assert_allclose.<locals>.compare at 0x321e5b560>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, .....), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:20.8183720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8183920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8183920Z 
2025-01-10T13:49:20.8183970Z     @wraps(func)
2025-01-10T13:49:20.8184030Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8184090Z         with self._recreate_cm():
2025-01-10T13:49:20.8184150Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8184200Z E           AssertionError: 
2025-01-10T13:49:20.8184280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8184330Z E           
2025-01-10T13:49:20.8184400Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8184500Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8184600Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8184720Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8184790Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8184910Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8184970Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8184970Z 
2025-01-10T13:49:20.8185120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8185270Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-01-10T13:49:20.8185270Z 
2025-01-10T13:49:20.8185470Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bdfcfb0>
2025-01-10T13:49:20.8185700Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16a2d3530>
2025-01-10T13:49:20.8185760Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8185820Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8185890Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8185960Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8186110Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8186330Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-01-10T13:49:20.8186330Z 
2025-01-10T13:49:20.8186390Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8186520Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8186560Z     ):
2025-01-10T13:49:20.8186620Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8186700Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8186820Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8186860Z     
2025-01-10T13:49:20.8186940Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8187010Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8187110Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8187190Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8187230Z             )
2025-01-10T13:49:20.8187270Z     
2025-01-10T13:49:20.8187340Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8187420Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8187470Z             if data.stackgroup:
2025-01-10T13:49:20.8187520Z                 assert (
2025-01-10T13:49:20.8187570Z                     data.stackgroup
2025-01-10T13:49:20.8187620Z                     == getattr(
2025-01-10T13:49:20.8187700Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8187760Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8187820Z                     ).decode()
2025-01-10T13:49:20.8187860Z                 )
2025-01-10T13:49:20.8187910Z             if data.name:
2025-01-10T13:49:20.8187990Z                 assert (
2025-01-10T13:49:20.8188040Z                     data.name
2025-01-10T13:49:20.8188090Z                     == getattr(
2025-01-10T13:49:20.8188160Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8188230Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8188280Z                     ).decode()
2025-01-10T13:49:20.8188320Z                 )
2025-01-10T13:49:20.8188390Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8188480Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8188520Z             )
2025-01-10T13:49:20.8188580Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8188680Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8188720Z             )
2025-01-10T13:49:20.8188720Z 
2025-01-10T13:49:20.8188820Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8188910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8188910Z 
2025-01-10T13:49:20.8189250Z args = (<function assert_allclose.<locals>.compare at 0x321e759e0>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, .....), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:20.8189320Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8189510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8189520Z 
2025-01-10T13:49:20.8189570Z     @wraps(func)
2025-01-10T13:49:20.8189620Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8189680Z         with self._recreate_cm():
2025-01-10T13:49:20.8189730Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8189780Z E           AssertionError: 
2025-01-10T13:49:20.8189860Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8189900Z E           
2025-01-10T13:49:20.8189980Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8190080Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8190180Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8190520Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8190600Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8190720Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8190780Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8190790Z 
2025-01-10T13:49:20.8190930Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8191080Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-01-10T13:49:20.8191080Z 
2025-01-10T13:49:20.8191270Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c800>
2025-01-10T13:49:20.8191500Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x177f79d30>
2025-01-10T13:49:20.8191570Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8191630Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8191700Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8191770Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8191920Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8192100Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-01-10T13:49:20.8192110Z 
2025-01-10T13:49:20.8192160Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8192290Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8192330Z     ):
2025-01-10T13:49:20.8192390Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8195060Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8195200Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8195240Z     
2025-01-10T13:49:20.8195330Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8195400Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8195510Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8195590Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8195630Z             )
2025-01-10T13:49:20.8195670Z     
2025-01-10T13:49:20.8195740Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8195820Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8195870Z             if data.stackgroup:
2025-01-10T13:49:20.8195920Z                 assert (
2025-01-10T13:49:20.8195980Z                     data.stackgroup
2025-01-10T13:49:20.8196030Z                     == getattr(
2025-01-10T13:49:20.8196110Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8196180Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8196230Z                     ).decode()
2025-01-10T13:49:20.8196270Z                 )
2025-01-10T13:49:20.8196330Z             if data.name:
2025-01-10T13:49:20.8196380Z                 assert (
2025-01-10T13:49:20.8196420Z                     data.name
2025-01-10T13:49:20.8196470Z                     == getattr(
2025-01-10T13:49:20.8196550Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8196610Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8196660Z                     ).decode()
2025-01-10T13:49:20.8196700Z                 )
2025-01-10T13:49:20.8196760Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8196860Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8196900Z             )
2025-01-10T13:49:20.8196960Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8197060Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8197100Z             )
2025-01-10T13:49:20.8197100Z 
2025-01-10T13:49:20.8197210Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8197390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8197400Z 
2025-01-10T13:49:20.8197750Z args = (<function assert_allclose.<locals>.compare at 0x13140e020>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, .....), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:20.8197820Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8198020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8198020Z 
2025-01-10T13:49:20.8198070Z     @wraps(func)
2025-01-10T13:49:20.8198120Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8198190Z         with self._recreate_cm():
2025-01-10T13:49:20.8198240Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8198300Z E           AssertionError: 
2025-01-10T13:49:20.8198370Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8198420Z E           
2025-01-10T13:49:20.8198490Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8198600Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8198700Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8198830Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8198890Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8199020Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8199080Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8199080Z 
2025-01-10T13:49:20.8199280Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8199430Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-01-10T13:49:20.8199440Z 
2025-01-10T13:49:20.8199640Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c8c0>
2025-01-10T13:49:20.8199870Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16f9b5940>
2025-01-10T13:49:20.8199930Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8199990Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8200070Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8200140Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-01-10T13:49:20.8200290Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8200470Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-01-10T13:49:20.8200470Z 
2025-01-10T13:49:20.8200530Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8200660Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8200700Z     ):
2025-01-10T13:49:20.8200770Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8200840Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8200970Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8201010Z     
2025-01-10T13:49:20.8201090Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8201150Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8201260Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8201340Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8201380Z             )
2025-01-10T13:49:20.8201420Z     
2025-01-10T13:49:20.8201490Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8201560Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8201620Z             if data.stackgroup:
2025-01-10T13:49:20.8201670Z                 assert (
2025-01-10T13:49:20.8201720Z                     data.stackgroup
2025-01-10T13:49:20.8201770Z                     == getattr(
2025-01-10T13:49:20.8201890Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8201970Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8202020Z                     ).decode()
2025-01-10T13:49:20.8202070Z                 )
2025-01-10T13:49:20.8202110Z             if data.name:
2025-01-10T13:49:20.8202160Z                 assert (
2025-01-10T13:49:20.8202210Z                     data.name
2025-01-10T13:49:20.8202250Z                     == getattr(
2025-01-10T13:49:20.8202320Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8202390Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8202440Z                     ).decode()
2025-01-10T13:49:20.8202490Z                 )
2025-01-10T13:49:20.8202550Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8202640Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8202680Z             )
2025-01-10T13:49:20.8202740Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8202840Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8202880Z             )
2025-01-10T13:49:20.8202890Z 
2025-01-10T13:49:20.8202990Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8203070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8203070Z 
2025-01-10T13:49:20.8203420Z args = (<function assert_allclose.<locals>.compare at 0x13140f740>, array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, .....), array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, ...,
2025-01-10T13:49:20.8203480Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8203740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8203740Z 
2025-01-10T13:49:20.8203790Z     @wraps(func)
2025-01-10T13:49:20.8203840Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8203900Z         with self._recreate_cm():
2025-01-10T13:49:20.8203960Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8204010Z E           AssertionError: 
2025-01-10T13:49:20.8204090Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8204260Z E           
2025-01-10T13:49:20.8204330Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8204430Z E           Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8204530Z E           Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8204650Z E            ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8204710Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8204840Z E            DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8204900Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8204900Z 
2025-01-10T13:49:20.8205050Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8205200Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-01-10T13:49:20.8205210Z 
2025-01-10T13:49:20.8205390Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2c980>
2025-01-10T13:49:20.8205630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x307ff0470>
2025-01-10T13:49:20.8205690Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8205750Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8205820Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8205900Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8206060Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8206280Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-01-10T13:49:20.8206280Z 
2025-01-10T13:49:20.8206350Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8206470Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8206510Z     ):
2025-01-10T13:49:20.8206570Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8206650Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8206770Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8206820Z     
2025-01-10T13:49:20.8206900Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8206960Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8207070Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8207150Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8207190Z             )
2025-01-10T13:49:20.8207230Z     
2025-01-10T13:49:20.8207300Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8207380Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8207430Z             if data.stackgroup:
2025-01-10T13:49:20.8207480Z                 assert (
2025-01-10T13:49:20.8207540Z                     data.stackgroup
2025-01-10T13:49:20.8207580Z                     == getattr(
2025-01-10T13:49:20.8207660Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8207730Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8207780Z                     ).decode()
2025-01-10T13:49:20.8207820Z                 )
2025-01-10T13:49:20.8207870Z             if data.name:
2025-01-10T13:49:20.8207910Z                 assert (
2025-01-10T13:49:20.8208000Z                     data.name
2025-01-10T13:49:20.8208050Z                     == getattr(
2025-01-10T13:49:20.8208120Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8208190Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8208240Z                     ).decode()
2025-01-10T13:49:20.8208290Z                 )
2025-01-10T13:49:20.8208340Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8208440Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8208480Z             )
2025-01-10T13:49:20.8208540Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8208620Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8208670Z             )
2025-01-10T13:49:20.8208670Z 
2025-01-10T13:49:20.8208770Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8208860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8208860Z 
2025-01-10T13:49:20.8209210Z args = (<function assert_allclose.<locals>.compare at 0x13140fb00>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, .....), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:20.8209280Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8209480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8209480Z 
2025-01-10T13:49:20.8209530Z     @wraps(func)
2025-01-10T13:49:20.8209590Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8209640Z         with self._recreate_cm():
2025-01-10T13:49:20.8209700Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8209750Z E           AssertionError: 
2025-01-10T13:49:20.8209830Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8209870Z E           
2025-01-10T13:49:20.8209930Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8210040Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8210140Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8210540Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8210610Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8210740Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8210790Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8210800Z 
2025-01-10T13:49:20.8210950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8211100Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-01-10T13:49:20.8211110Z 
2025-01-10T13:49:20.8211300Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2ca40>
2025-01-10T13:49:20.8211530Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12cc32510>
2025-01-10T13:49:20.8211600Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8211650Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8211730Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8211800Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8211950Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8212130Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-01-10T13:49:20.8212130Z 
2025-01-10T13:49:20.8212190Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8212320Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8216450Z     ):
2025-01-10T13:49:20.8216530Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8216610Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8216980Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8217030Z     
2025-01-10T13:49:20.8217110Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8217170Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8217280Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8217360Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8217400Z             )
2025-01-10T13:49:20.8217440Z     
2025-01-10T13:49:20.8217510Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8217590Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8217640Z             if data.stackgroup:
2025-01-10T13:49:20.8217690Z                 assert (
2025-01-10T13:49:20.8217740Z                     data.stackgroup
2025-01-10T13:49:20.8217790Z                     == getattr(
2025-01-10T13:49:20.8217870Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8217930Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8217990Z                     ).decode()
2025-01-10T13:49:20.8218030Z                 )
2025-01-10T13:49:20.8218090Z             if data.name:
2025-01-10T13:49:20.8218130Z                 assert (
2025-01-10T13:49:20.8218180Z                     data.name
2025-01-10T13:49:20.8218230Z                     == getattr(
2025-01-10T13:49:20.8218310Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8218370Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8218420Z                     ).decode()
2025-01-10T13:49:20.8218460Z                 )
2025-01-10T13:49:20.8218520Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8218620Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8218660Z             )
2025-01-10T13:49:20.8218710Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8218810Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8218850Z             )
2025-01-10T13:49:20.8218850Z 
2025-01-10T13:49:20.8218950Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8219090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8219090Z 
2025-01-10T13:49:20.8219430Z args = (<function assert_allclose.<locals>.compare at 0x321e759e0>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, .....), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:20.8219500Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8219700Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8219700Z 
2025-01-10T13:49:20.8219750Z     @wraps(func)
2025-01-10T13:49:20.8219800Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8219860Z         with self._recreate_cm():
2025-01-10T13:49:20.8219920Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8219970Z E           AssertionError: 
2025-01-10T13:49:20.8220040Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8220080Z E           
2025-01-10T13:49:20.8220160Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8220250Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8220350Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8220470Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8220530Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8220660Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8220720Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8220720Z 
2025-01-10T13:49:20.8220870Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8221060Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-01-10T13:49:20.8221070Z 
2025-01-10T13:49:20.8221260Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2ccb0>
2025-01-10T13:49:20.8221500Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31e2283e0>
2025-01-10T13:49:20.8221560Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8221630Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8221700Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8221770Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8221920Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8222100Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-01-10T13:49:20.8222100Z 
2025-01-10T13:49:20.8222160Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8222280Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8222320Z     ):
2025-01-10T13:49:20.8222390Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8222470Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8222590Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8222630Z     
2025-01-10T13:49:20.8222710Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8222780Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8222880Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8222960Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8223000Z             )
2025-01-10T13:49:20.8223040Z     
2025-01-10T13:49:20.8223110Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8223180Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8223240Z             if data.stackgroup:
2025-01-10T13:49:20.8223290Z                 assert (
2025-01-10T13:49:20.8223340Z                     data.stackgroup
2025-01-10T13:49:20.8223400Z                     == getattr(
2025-01-10T13:49:20.8223520Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8223590Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8223640Z                     ).decode()
2025-01-10T13:49:20.8223680Z                 )
2025-01-10T13:49:20.8223740Z             if data.name:
2025-01-10T13:49:20.8223780Z                 assert (
2025-01-10T13:49:20.8223830Z                     data.name
2025-01-10T13:49:20.8223870Z                     == getattr(
2025-01-10T13:49:20.8223950Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8224010Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8224060Z                     ).decode()
2025-01-10T13:49:20.8224100Z                 )
2025-01-10T13:49:20.8224170Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8224260Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8224300Z             )
2025-01-10T13:49:20.8224360Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8224450Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8224500Z             )
2025-01-10T13:49:20.8224500Z 
2025-01-10T13:49:20.8224600Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8224690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8224690Z 
2025-01-10T13:49:20.8225030Z args = (<function assert_allclose.<locals>.compare at 0x13140f380>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, .....), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:20.8225110Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8225350Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8225350Z 
2025-01-10T13:49:20.8225400Z     @wraps(func)
2025-01-10T13:49:20.8225450Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8225510Z         with self._recreate_cm():
2025-01-10T13:49:20.8225570Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8225620Z E           AssertionError: 
2025-01-10T13:49:20.8225700Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8225740Z E           
2025-01-10T13:49:20.8225810Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8225910Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8226000Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8226120Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8226180Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8226310Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8226380Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8226380Z 
2025-01-10T13:49:20.8226530Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8226680Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-01-10T13:49:20.8226690Z 
2025-01-10T13:49:20.8226880Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2cd70>
2025-01-10T13:49:20.8227110Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x130f31ac0>
2025-01-10T13:49:20.8227170Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8227230Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8227300Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8227370Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8227520Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8227700Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-01-10T13:49:20.8227700Z 
2025-01-10T13:49:20.8227800Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8227930Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8227980Z     ):
2025-01-10T13:49:20.8228040Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8228110Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8228240Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8228280Z     
2025-01-10T13:49:20.8228360Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8228420Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8228530Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8228610Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8228650Z             )
2025-01-10T13:49:20.8228690Z     
2025-01-10T13:49:20.8228760Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8228840Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8228890Z             if data.stackgroup:
2025-01-10T13:49:20.8228940Z                 assert (
2025-01-10T13:49:20.8228990Z                     data.stackgroup
2025-01-10T13:49:20.8229040Z                     == getattr(
2025-01-10T13:49:20.8229120Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8229190Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8229240Z                     ).decode()
2025-01-10T13:49:20.8229280Z                 )
2025-01-10T13:49:20.8229330Z             if data.name:
2025-01-10T13:49:20.8229370Z                 assert (
2025-01-10T13:49:20.8229460Z                     data.name
2025-01-10T13:49:20.8229510Z                     == getattr(
2025-01-10T13:49:20.8229590Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8229650Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8229700Z                     ).decode()
2025-01-10T13:49:20.8229740Z                 )
2025-01-10T13:49:20.8229800Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8229900Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8229940Z             )
2025-01-10T13:49:20.8229990Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8230090Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8230130Z             )
2025-01-10T13:49:20.8230130Z 
2025-01-10T13:49:20.8230240Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8230320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8230330Z 
2025-01-10T13:49:20.8230660Z args = (<function assert_allclose.<locals>.compare at 0x321e5ab60>, array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, .....), array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, ...,
2025-01-10T13:49:20.8230730Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8230930Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8230930Z 
2025-01-10T13:49:20.8230980Z     @wraps(func)
2025-01-10T13:49:20.8231030Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8231090Z         with self._recreate_cm():
2025-01-10T13:49:20.8231140Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8231200Z E           AssertionError: 
2025-01-10T13:49:20.8231280Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8231320Z E           
2025-01-10T13:49:20.8231390Z E           Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8231500Z E           Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8231590Z E           Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8231720Z E            ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8232020Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8232160Z E            DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8232220Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8232230Z 
2025-01-10T13:49:20.8232370Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8232520Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-01-10T13:49:20.8232520Z 
2025-01-10T13:49:20.8232710Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2ce30>
2025-01-10T13:49:20.8232940Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31165cd70>
2025-01-10T13:49:20.8233020Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8233070Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8233140Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8233220Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8233370Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8233540Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-01-10T13:49:20.8233550Z 
2025-01-10T13:49:20.8233610Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8233730Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8233770Z     ):
2025-01-10T13:49:20.8233830Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8233910Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8234320Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8234360Z     
2025-01-10T13:49:20.8234450Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8234510Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8234620Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8234690Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8234740Z             )
2025-01-10T13:49:20.8234780Z     
2025-01-10T13:49:20.8234840Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8234920Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8234970Z             if data.stackgroup:
2025-01-10T13:49:20.8235020Z                 assert (
2025-01-10T13:49:20.8235070Z                     data.stackgroup
2025-01-10T13:49:20.8235120Z                     == getattr(
2025-01-10T13:49:20.8235190Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8235260Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8235310Z                     ).decode()
2025-01-10T13:49:20.8235350Z                 )
2025-01-10T13:49:20.8235400Z             if data.name:
2025-01-10T13:49:20.8235450Z                 assert (
2025-01-10T13:49:20.8235500Z                     data.name
2025-01-10T13:49:20.8235550Z                     == getattr(
2025-01-10T13:49:20.8235620Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8235690Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8235730Z                     ).decode()
2025-01-10T13:49:20.8235780Z                 )
2025-01-10T13:49:20.8235840Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8235930Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8235970Z             )
2025-01-10T13:49:20.8236030Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8236120Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8236170Z             )
2025-01-10T13:49:20.8236170Z 
2025-01-10T13:49:20.8236280Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8236360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8236410Z 
2025-01-10T13:49:20.8236750Z args = (<function assert_allclose.<locals>.compare at 0x321e5a7a0>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, .....), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:20.8236820Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8237020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8237020Z 
2025-01-10T13:49:20.8237070Z     @wraps(func)
2025-01-10T13:49:20.8237120Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8237180Z         with self._recreate_cm():
2025-01-10T13:49:20.8237250Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8237300Z E           AssertionError: 
2025-01-10T13:49:20.8237370Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8237420Z E           
2025-01-10T13:49:20.8237490Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8237590Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8237690Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8237810Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8237870Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8238000Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8238060Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8238060Z 
2025-01-10T13:49:20.8238210Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8238400Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-01-10T13:49:20.8238400Z 
2025-01-10T13:49:20.8238600Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2cef0>
2025-01-10T13:49:20.8238830Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x179f3ddf0>
2025-01-10T13:49:20.8238890Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8238950Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8239020Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8239100Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8239240Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8239420Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-01-10T13:49:20.8239420Z 
2025-01-10T13:49:20.8239490Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8239610Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8239650Z     ):
2025-01-10T13:49:20.8239710Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8239790Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8239920Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8239960Z     
2025-01-10T13:49:20.8240040Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8240100Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8240210Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8240290Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8240330Z             )
2025-01-10T13:49:20.8240370Z     
2025-01-10T13:49:20.8240440Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8240510Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8240570Z             if data.stackgroup:
2025-01-10T13:49:20.8240610Z                 assert (
2025-01-10T13:49:20.8240670Z                     data.stackgroup
2025-01-10T13:49:20.8240710Z                     == getattr(
2025-01-10T13:49:20.8240830Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8240900Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8240950Z                     ).decode()
2025-01-10T13:49:20.8241000Z                 )
2025-01-10T13:49:20.8241040Z             if data.name:
2025-01-10T13:49:20.8241090Z                 assert (
2025-01-10T13:49:20.8241140Z                     data.name
2025-01-10T13:49:20.8241180Z                     == getattr(
2025-01-10T13:49:20.8241260Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8241320Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8241370Z                     ).decode()
2025-01-10T13:49:20.8241420Z                 )
2025-01-10T13:49:20.8241480Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8241570Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8241610Z             )
2025-01-10T13:49:20.8241670Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8241760Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8241810Z             )
2025-01-10T13:49:20.8241810Z 
2025-01-10T13:49:20.8241910Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8242000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8242000Z 
2025-01-10T13:49:20.8242340Z args = (<function assert_allclose.<locals>.compare at 0x13140fec0>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, .....), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:20.8242400Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8242600Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8242650Z 
2025-01-10T13:49:20.8242700Z     @wraps(func)
2025-01-10T13:49:20.8242760Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8242810Z         with self._recreate_cm():
2025-01-10T13:49:20.8242870Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8242920Z E           AssertionError: 
2025-01-10T13:49:20.8243000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8243040Z E           
2025-01-10T13:49:20.8243110Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8243210Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8243310Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8243440Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8243500Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8243630Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8243690Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8243690Z 
2025-01-10T13:49:20.8243840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8243990Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-01-10T13:49:20.8243990Z 
2025-01-10T13:49:20.8244190Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2d010>
2025-01-10T13:49:20.8244620Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x307ee89e0>
2025-01-10T13:49:20.8244680Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8244740Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8244810Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8244890Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8245040Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8245220Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-01-10T13:49:20.8245220Z 
2025-01-10T13:49:20.8245340Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8245470Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8245510Z     ):
2025-01-10T13:49:20.8245580Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8245650Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8245780Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8245820Z     
2025-01-10T13:49:20.8245890Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8245960Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8246070Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8246140Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8246180Z             )
2025-01-10T13:49:20.8246230Z     
2025-01-10T13:49:20.8246290Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8246370Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8246420Z             if data.stackgroup:
2025-01-10T13:49:20.8246470Z                 assert (
2025-01-10T13:49:20.8246520Z                     data.stackgroup
2025-01-10T13:49:20.8246570Z                     == getattr(
2025-01-10T13:49:20.8246650Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8246720Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8246770Z                     ).decode()
2025-01-10T13:49:20.8246810Z                 )
2025-01-10T13:49:20.8246860Z             if data.name:
2025-01-10T13:49:20.8246900Z                 assert (
2025-01-10T13:49:20.8246950Z                     data.name
2025-01-10T13:49:20.8247040Z                     == getattr(
2025-01-10T13:49:20.8247120Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8247180Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8247230Z                     ).decode()
2025-01-10T13:49:20.8247270Z                 )
2025-01-10T13:49:20.8247330Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8247430Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8247470Z             )
2025-01-10T13:49:20.8247520Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8247610Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8247660Z             )
2025-01-10T13:49:20.8247660Z 
2025-01-10T13:49:20.8247760Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8247850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8247850Z 
2025-01-10T13:49:20.8248190Z args = (<function assert_allclose.<locals>.compare at 0x13140e2a0>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, .....), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:20.8248260Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8248450Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8248450Z 
2025-01-10T13:49:20.8248500Z     @wraps(func)
2025-01-10T13:49:20.8248550Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8248610Z         with self._recreate_cm():
2025-01-10T13:49:20.8248670Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8248720Z E           AssertionError: 
2025-01-10T13:49:20.8248800Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8248840Z E           
2025-01-10T13:49:20.8248910Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8249010Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8249110Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8249240Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8249500Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8249650Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8249710Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8249710Z 
2025-01-10T13:49:20.8249860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8250010Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-01-10T13:49:20.8250010Z 
2025-01-10T13:49:20.8250210Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11bf2d0d0>
2025-01-10T13:49:20.8250430Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x134f10e00>
2025-01-10T13:49:20.8250500Z plotter_generate_plot_ply = (Figure({
2025-01-10T13:49:20.8250560Z     'data': [{'fillcolor': '#4C4C4C',
2025-01-10T13:49:20.8250640Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-01-10T13:49:20.8250710Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-01-10T13:49:20.8250860Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x177e80890>)
2025-01-10T13:49:20.8251040Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-01-10T13:49:20.8251040Z 
2025-01-10T13:49:20.8251100Z     def test_generate_plot_mpl(
2025-01-10T13:49:20.8251220Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-01-10T13:49:20.8251270Z     ):
2025-01-10T13:49:20.8251340Z         fig, _ = plotter_generate_plot_ply
2025-01-10T13:49:20.8251410Z         regression_data = RegressionData(request)
2025-01-10T13:49:20.8251540Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-01-10T13:49:20.8251750Z     
2025-01-10T13:49:20.8251840Z         for item in ["_species_name", "_color_list"]:
2025-01-10T13:49:20.8251900Z             np.testing.assert_array_equal(
2025-01-10T13:49:20.8252010Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-01-10T13:49:20.8252090Z                 getattr(generate_plot_plotly_hdf, item),
2025-01-10T13:49:20.8252130Z             )
2025-01-10T13:49:20.8252180Z     
2025-01-10T13:49:20.8252240Z         for index, data in enumerate(fig.data):
2025-01-10T13:49:20.8252320Z             group = "plot_data_hdf/" + "_" + str(index)
2025-01-10T13:49:20.8252370Z             if data.stackgroup:
2025-01-10T13:49:20.8252420Z                 assert (
2025-01-10T13:49:20.8252470Z                     data.stackgroup
2025-01-10T13:49:20.8252520Z                     == getattr(
2025-01-10T13:49:20.8252590Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8252660Z                         "_" + str(index) + "stackgroup",
2025-01-10T13:49:20.8252710Z                     ).decode()
2025-01-10T13:49:20.8252750Z                 )
2025-01-10T13:49:20.8252800Z             if data.name:
2025-01-10T13:49:20.8252850Z                 assert (
2025-01-10T13:49:20.8252900Z                     data.name
2025-01-10T13:49:20.8252940Z                     == getattr(
2025-01-10T13:49:20.8253020Z                         expected["/plot_data_hdf/scalars"],
2025-01-10T13:49:20.8253080Z                         "_" + str(index) + "name",
2025-01-10T13:49:20.8253130Z                     ).decode()
2025-01-10T13:49:20.8253170Z                 )
2025-01-10T13:49:20.8253230Z             np.testing.assert_allclose(
2025-01-10T13:49:20.8253320Z                 data.x, expected.get(group + "x").values.flatten()
2025-01-10T13:49:20.8253370Z             )
2025-01-10T13:49:20.8253420Z >           np.testing.assert_allclose(
2025-01-10T13:49:20.8253510Z                 data.y, expected.get(group + "y").values.flatten()
2025-01-10T13:49:20.8253550Z             )
2025-01-10T13:49:20.8253560Z 
2025-01-10T13:49:20.8253660Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-01-10T13:49:20.8253740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-10T13:49:20.8253750Z 
2025-01-10T13:49:20.8254120Z args = (<function assert_allclose.<locals>.compare at 0x13140e020>, array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, .....), array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, ...,
2025-01-10T13:49:20.8254200Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-01-10T13:49:20.8254390Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}
2025-01-10T13:49:20.8254400Z 
2025-01-10T13:49:20.8254450Z     @wraps(func)
2025-01-10T13:49:20.8254500Z     def inner(*args, **kwds):
2025-01-10T13:49:20.8254550Z         with self._recreate_cm():
2025-01-10T13:49:20.8254610Z >           return func(*args, **kwds)
2025-01-10T13:49:20.8254670Z E           AssertionError: 
2025-01-10T13:49:20.8254740Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8254790Z E           
2025-01-10T13:49:20.8254860Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8254970Z E           Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8255060Z E           Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8255190Z E            ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8255250Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8255370Z E            DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8255430Z E                  0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8255430Z 
2025-01-10T13:49:20.8255580Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-01-10T13:49:20.8255720Z =============================== warnings summary ===============================
2025-01-10T13:49:20.8255790Z tardis/io/configuration/config_validator.py:6
2025-01-10T13:49:20.8255870Z tardis/io/configuration/config_validator.py:6
2025-01-10T13:49:20.8256110Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-10T13:49:20.8256160Z   
2025-01-10T13:49:20.8257150Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-10T13:49:20.8257170Z 
2025-01-10T13:49:20.8257350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-10T13:49:20.8257620Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-10T13:49:20.8257670Z   
2025-01-10T13:49:20.8257780Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-10T13:49:20.8257890Z   given by the platformdirs library.  To remove this warning and
2025-01-10T13:49:20.8258020Z   see the appropriate new directories, set the environment variable
2025-01-10T13:49:20.8258120Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-10T13:49:20.8258230Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-10T13:49:20.8258240Z 
2025-01-10T13:49:20.8258300Z tardis/plasma/properties/__init__.py:17
2025-01-10T13:49:20.8258510Z   /Users/runner/work/tardis/tardis/tardis/plasma/properties/__init__.py:17: DeprecationWarning:
2025-01-10T13:49:20.8258560Z   
2025-01-10T13:49:20.8258970Z   The numpy.linalg.linalg has been made private and renamed to numpy.linalg._linalg. All public functions exported by it are available from numpy.linalg. Please use numpy.linalg.LinAlgError instead.
2025-01-10T13:49:20.8258970Z 
2025-01-10T13:49:20.8264140Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-10T13:49:20.8264360Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:20.8264830Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-10T13:49:20.8264880Z   
2025-01-10T13:49:20.8264920Z   
2025-01-10T13:49:20.8265070Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:49:20.8265260Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T13:49:20.8265260Z 
2025-01-10T13:49:20.8265410Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-10T13:49:20.8265570Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-10T13:49:20.8265740Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-10T13:49:20.8265880Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-10T13:49:20.8266120Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-10T13:49:20.8266160Z   
2025-01-10T13:49:20.8266240Z   The current CMFGEN model parser is deprecated
2025-01-10T13:49:20.8266240Z 
2025-01-10T13:49:20.8266320Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-10T13:49:20.8266440Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-10T13:49:20.8266680Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-10T13:49:20.8266720Z   
2025-01-10T13:49:20.8266790Z   The current CMFGEN model parser is deprecated
2025-01-10T13:49:20.8266790Z 
2025-01-10T13:49:20.8266940Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-10T13:49:20.8267220Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-10T13:49:20.8267340Z   
2025-01-10T13:49:20.8267680Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-10T13:49:20.8267680Z 
2025-01-10T13:49:20.8267750Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T13:49:20.8267840Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T13:49:20.8267970Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T13:49:20.8268160Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-10T13:49:20.8271730Z   
2025-01-10T13:49:20.8271820Z   v_inner_boundary < 0, assuming default value
2025-01-10T13:49:20.8271820Z 
2025-01-10T13:49:20.8271890Z tardis/model/tests/test_base.py: 6 warnings
2025-01-10T13:49:20.8271980Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-10T13:49:20.8272100Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-10T13:49:20.8272300Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-10T13:49:20.8272340Z   
2025-01-10T13:49:20.8272420Z   v_outer_boundary < 0, assuming default value
2025-01-10T13:49:20.8272420Z 
2025-01-10T13:49:20.8272660Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:20.8272900Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:20.8273130Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:20.8273360Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py::test_legacy_chianti_collisional_strengths
2025-01-10T13:49:20.8273760Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_simple[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8274150Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_empty[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8274630Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_calculate_level_population_zeros[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8274960Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8275230Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8275420Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/pickle.py:323: DeprecationWarning:
2025-01-10T13:49:20.8275460Z   
2025-01-10T13:49:20.8276510Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T13:49:20.8276510Z 
2025-01-10T13:49:20.8276840Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8277070Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-10T13:49:20.8277110Z   
2025-01-10T13:49:20.8277320Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-10T13:49:20.8277640Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-10T13:49:20.8277730Z   
2025-01-10T13:49:20.8278130Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-10T13:49:20.8278130Z 
2025-01-10T13:49:20.8278410Z tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0]
2025-01-10T13:49:20.8278650Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1374: DeprecationWarning:
2025-01-10T13:49:20.8278690Z   
2025-01-10T13:49:20.8279720Z   numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
2025-01-10T13:49:20.8279720Z 
2025-01-10T13:49:20.8279830Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-10T13:49:20.8280050Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:20.8280090Z   
2025-01-10T13:49:20.8280150Z   Property "atomic_mass" not found
2025-01-10T13:49:20.8280160Z 
2025-01-10T13:49:20.8280470Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-10T13:49:20.8280750Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-10T13:49:20.8280960Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:20.8281010Z   
2025-01-10T13:49:20.8281070Z   Property "j_blues_norm_factor" not found
2025-01-10T13:49:20.8281080Z 
2025-01-10T13:49:20.8281380Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-10T13:49:20.8281930Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-10T13:49:20.8282150Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:20.8282200Z   
2025-01-10T13:49:20.8282260Z   Property "j_blue_estimator" not found
2025-01-10T13:49:20.8282260Z 
2025-01-10T13:49:20.8282540Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-10T13:49:20.8282790Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-10T13:49:20.8283010Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:20.8283050Z   
2025-01-10T13:49:20.8283100Z   Property "volume" not found
2025-01-10T13:49:20.8283110Z 
2025-01-10T13:49:20.8283390Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-10T13:49:20.8283640Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-10T13:49:20.8283850Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-10T13:49:20.8283890Z   
2025-01-10T13:49:20.8283950Z   Property "r_inner" not found
2025-01-10T13:49:20.8283950Z 
2025-01-10T13:49:20.8284110Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-10T13:49:20.8284260Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-10T13:49:20.8284770Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-10T13:49:20.8284950Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-10T13:49:20.8285000Z   
2025-01-10T13:49:20.8285140Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-10T13:49:20.8285150Z 
2025-01-10T13:49:20.8285320Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100.0]
2025-01-10T13:49:20.8285500Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[1000.0]
2025-01-10T13:49:20.8285680Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[10000.0]
2025-01-10T13:49:20.8285850Z tardis/spectrum/tests/test_numba_formal_integral.py::test_trapezoid_integration[100000.0]
2025-01-10T13:49:20.8286110Z   /Users/runner/work/tardis/tardis/tardis/spectrum/tests/test_numba_formal_integral.py:35: DeprecationWarning:
2025-01-10T13:49:20.8286150Z   
2025-01-10T13:49:20.8286380Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T13:49:20.8286380Z 
2025-01-10T13:49:20.8286540Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T13:49:20.8286690Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-10T13:49:20.8286730Z   
2025-01-10T13:49:20.8286970Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-10T13:49:20.8286970Z 
2025-01-10T13:49:20.8287130Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-10T13:49:20.8287280Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-10T13:49:20.8287320Z   
2025-01-10T13:49:20.8287580Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-10T13:49:20.8287590Z 
2025-01-10T13:49:20.8287730Z tardis/tests/test_util.py::test_calculate_luminosity[string_io0-100 km-result0]
2025-01-10T13:49:20.8287880Z tardis/tests/test_util.py::test_calculate_luminosity[string_io1-500 km-result1]
2025-01-10T13:49:20.8288100Z   /Users/runner/work/tardis/tardis/tardis/util/base.py:188: DeprecationWarning:
2025-01-10T13:49:20.8288140Z   
2025-01-10T13:49:20.8288360Z   `trapz` is deprecated. Use `trapezoid` instead, or one of the numerical integration functions in `scipy.integrate`.
2025-01-10T13:49:20.8288360Z 
2025-01-10T13:49:20.8288490Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:49:20.8288700Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:736: DeprecationWarning:
2025-01-10T13:49:20.8288750Z   
2025-01-10T13:49:20.8288820Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:49:20.8288820Z 
2025-01-10T13:49:20.8288940Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:49:20.8289160Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:758: DeprecationWarning:
2025-01-10T13:49:20.8289200Z   
2025-01-10T13:49:20.8289280Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:49:20.8289280Z 
2025-01-10T13:49:20.8289400Z tardis/visualization/tools/tests/test_sdec_plot.py: 48 warnings
2025-01-10T13:49:20.8289620Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:779: DeprecationWarning:
2025-01-10T13:49:20.8289660Z   
2025-01-10T13:49:20.8289730Z   `in1d` is deprecated. Use `np.isin` instead.
2025-01-10T13:49:20.8289730Z 
2025-01-10T13:49:20.8289970Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-01-10T13:49:20.8290180Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-01-10T13:49:20.8290230Z   
2025-01-10T13:49:20.8290850Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-01-10T13:49:20.8290890Z 
2025-01-10T13:49:20.8291170Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8291430Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8291680Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8291930Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8292190Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8292440Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8292710Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:49:20.8292750Z   
2025-01-10T13:49:20.8292890Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-10T13:49:20.8293030Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:49:20.8293210Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:49:20.8293210Z 
2025-01-10T13:49:20.8293470Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8293720Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8293980Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:49:20.8294030Z   
2025-01-10T13:49:20.8294150Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-10T13:49:20.8294290Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:49:20.8294590Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:49:20.8294600Z 
2025-01-10T13:49:20.8294860Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-10T13:49:20.8295120Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-10T13:49:20.8295160Z   
2025-01-10T13:49:20.8295300Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-10T13:49:20.8295420Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-10T13:49:20.8295600Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-10T13:49:20.8295600Z 
2025-01-10T13:49:20.8295920Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-10T13:49:20.8296170Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-01-10T13:49:20.8296210Z   
2025-01-10T13:49:20.8296390Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-10T13:49:20.8296390Z 
2025-01-10T13:49:20.8296580Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:20.8296730Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-10T13:49:20.8296780Z   
2025-01-10T13:49:20.8296820Z   
2025-01-10T13:49:20.8296960Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:49:20.8297200Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-10T13:49:20.8297200Z 
2025-01-10T13:49:20.8297390Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:20.8297550Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-10T13:49:20.8297600Z   
2025-01-10T13:49:20.8297640Z   
2025-01-10T13:49:20.8297780Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-10T13:49:20.8297910Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-10T13:49:20.8297920Z 
2025-01-10T13:49:20.8298100Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-10T13:49:20.8298290Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-10T13:49:20.8298330Z   
2025-01-10T13:49:20.8298470Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-10T13:49:20.8298480Z 
2025-01-10T13:49:20.8298620Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-10T13:49:20.8298630Z 
2025-01-10T13:49:20.8298760Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-01-10T13:49:20.8298840Z Coverage HTML written to dir coverage_html_report
2025-01-10T13:49:20.8298910Z Coverage XML written to file coverage.xml
2025-01-10T13:49:20.8298910Z 
2025-01-10T13:49:20.8299010Z =========================== short test summary info ============================
2025-01-10T13:49:20.8299310Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-01-10T13:49:20.8299310Z 
2025-01-10T13:49:20.8299410Z MultiIndex level [0] values are different (0.09581 %)
2025-01-10T13:49:20.8299490Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:20.8299530Z        ...
2025-01-10T13:49:20.8299590Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:20.8299680Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:20.8299760Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-01-10T13:49:20.8299800Z        ...
2025-01-10T13:49:20.8299900Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-01-10T13:49:20.8299990Z       dtype='int64', name='atomic_number', length=29224)
2025-01-10T13:49:20.8300060Z At positional index 54, first diff: 12 != 14
2025-01-10T13:49:20.8300260Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-01-10T13:49:20.8300330Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8300340Z 
2025-01-10T13:49:20.8300400Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:20.8300490Z Max absolute difference among violations: 0.99984222
2025-01-10T13:49:20.8300580Z Max relative difference among violations: 6337.12154973
2025-01-10T13:49:20.8300650Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8300700Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8300750Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.8300820Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8300870Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8300920Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.8301290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8301290Z 
2025-01-10T13:49:20.8301380Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8301460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8301500Z        ...
2025-01-10T13:49:20.8301560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8301650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8301720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8301820Z        ...
2025-01-10T13:49:20.8301870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8301970Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8302030Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8302410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8302420Z 
2025-01-10T13:49:20.8302480Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8302760Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8303030Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8303280Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8303660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8303660Z 
2025-01-10T13:49:20.8303730Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8304290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8304590Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8304880Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8305240Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8305240Z 
2025-01-10T13:49:20.8305330Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8305410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8305450Z        ...
2025-01-10T13:49:20.8305510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8305600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8305680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8305890Z        ...
2025-01-10T13:49:20.8305940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8306030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8306100Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8306490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8306490Z 
2025-01-10T13:49:20.8306580Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8306660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8306700Z        ...
2025-01-10T13:49:20.8306760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8306840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8306920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8306960Z        ...
2025-01-10T13:49:20.8307020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8307110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8307180Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8307530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8307540Z 
2025-01-10T13:49:20.8307620Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8307700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8307740Z        ...
2025-01-10T13:49:20.8307800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8307880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8307970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8308010Z        ...
2025-01-10T13:49:20.8308060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8308150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8308220Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8308640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8308650Z 
2025-01-10T13:49:20.8308740Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8308820Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8308860Z        ...
2025-01-10T13:49:20.8308920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8309000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8309080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8309130Z        ...
2025-01-10T13:49:20.8309180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8309270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8309340Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8309720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8309720Z 
2025-01-10T13:49:20.8309810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8309880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8309920Z        ...
2025-01-10T13:49:20.8309980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8310060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8310150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8310190Z        ...
2025-01-10T13:49:20.8310250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8310330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8310440Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8310800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8310810Z 
2025-01-10T13:49:20.8310900Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8310970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8311010Z        ...
2025-01-10T13:49:20.8311070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8311160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8311240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8311280Z        ...
2025-01-10T13:49:20.8311340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8311420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8311490Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8311830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8311840Z 
2025-01-10T13:49:20.8311930Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8312010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8312050Z        ...
2025-01-10T13:49:20.8312110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8312190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8312270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8312310Z        ...
2025-01-10T13:49:20.8312370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8312450Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8312520Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8312870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8312880Z 
2025-01-10T13:49:20.8312950Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8313280Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8313530Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8313800Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8314160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8314160Z 
2025-01-10T13:49:20.8314220Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8314500Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8314840Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8315120Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8315460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8315470Z 
2025-01-10T13:49:20.8315560Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8315630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8315680Z        ...
2025-01-10T13:49:20.8315730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8315830Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8315900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8315950Z        ...
2025-01-10T13:49:20.8316000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8316090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8316160Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8316520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8316530Z 
2025-01-10T13:49:20.8316620Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8316730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8316790Z        ...
2025-01-10T13:49:20.8316840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8316930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8317010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8317050Z        ...
2025-01-10T13:49:20.8317100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8317190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8317260Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8317600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8317610Z 
2025-01-10T13:49:20.8317700Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8317770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8317820Z        ...
2025-01-10T13:49:20.8317870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8317960Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8318030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8318080Z        ...
2025-01-10T13:49:20.8318130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8318220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8318280Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8318650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8318690Z 
2025-01-10T13:49:20.8318780Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8318860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8318900Z        ...
2025-01-10T13:49:20.8318960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8319050Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8319130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8319180Z        ...
2025-01-10T13:49:20.8319230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8319320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8319380Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8319750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8319750Z 
2025-01-10T13:49:20.8319840Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8319920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8319960Z        ...
2025-01-10T13:49:20.8320010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8320110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8320180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8320230Z        ...
2025-01-10T13:49:20.8320280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8320370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8320430Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8320780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8320790Z 
2025-01-10T13:49:20.8320880Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8320960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8321000Z        ...
2025-01-10T13:49:20.8321060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8321150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8321400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8321460Z        ...
2025-01-10T13:49:20.8321520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8321600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8321670Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8322030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8322030Z 
2025-01-10T13:49:20.8322120Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8322190Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8322240Z        ...
2025-01-10T13:49:20.8322300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8322380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8322460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8322510Z        ...
2025-01-10T13:49:20.8322560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8322650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8322720Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8323080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8323080Z 
2025-01-10T13:49:20.8323140Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8323430Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8323980Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8324240Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8324740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8324740Z 
2025-01-10T13:49:20.8324820Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8325100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8325380Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8325760Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8326110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8326110Z 
2025-01-10T13:49:20.8326200Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8326280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8326330Z        ...
2025-01-10T13:49:20.8326390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8326470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8326550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8326600Z        ...
2025-01-10T13:49:20.8326660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8326740Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8326810Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8327170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8327180Z 
2025-01-10T13:49:20.8327270Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8327340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8327420Z        ...
2025-01-10T13:49:20.8327480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8327570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8327650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8327690Z        ...
2025-01-10T13:49:20.8327750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8327840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8327900Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8328250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8328250Z 
2025-01-10T13:49:20.8328340Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8328420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8328460Z        ...
2025-01-10T13:49:20.8328520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8328600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8328680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8328720Z        ...
2025-01-10T13:49:20.8328780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8328860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8328930Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8329290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8329300Z 
2025-01-10T13:49:20.8329390Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8329470Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8329510Z        ...
2025-01-10T13:49:20.8329560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8329640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8329730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8329770Z        ...
2025-01-10T13:49:20.8329820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8329950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8330020Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8330380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8330380Z 
2025-01-10T13:49:20.8330470Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8330540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8330580Z        ...
2025-01-10T13:49:20.8330640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8330730Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8330810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8330850Z        ...
2025-01-10T13:49:20.8330910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8330990Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8331060Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8331410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8331420Z 
2025-01-10T13:49:20.8331500Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8331590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8331630Z        ...
2025-01-10T13:49:20.8331690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8331770Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8331850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8331940Z        ...
2025-01-10T13:49:20.8332000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8332080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8332150Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8332510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8332520Z 
2025-01-10T13:49:20.8332610Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8332680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8332720Z        ...
2025-01-10T13:49:20.8332780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8332860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8332940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8332980Z        ...
2025-01-10T13:49:20.8333040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8333120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8333190Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8333570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8333580Z 
2025-01-10T13:49:20.8333640Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8333920Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8334220Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8334480Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8334870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8334870Z 
2025-01-10T13:49:20.8334930Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8335220Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8335500Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8335790Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8336200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8336200Z 
2025-01-10T13:49:20.8336290Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8336370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8336410Z        ...
2025-01-10T13:49:20.8336470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8336560Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8336630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8336680Z        ...
2025-01-10T13:49:20.8336730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8336820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8336890Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8337280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8337280Z 
2025-01-10T13:49:20.8337370Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8337450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8337500Z        ...
2025-01-10T13:49:20.8337550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8337640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8337710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8337760Z        ...
2025-01-10T13:49:20.8337810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8337900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8337970Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8338500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8338510Z 
2025-01-10T13:49:20.8338610Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8338690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8338730Z        ...
2025-01-10T13:49:20.8338780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8338870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8338950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8338990Z        ...
2025-01-10T13:49:20.8339040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8339130Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8339200Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8339590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8339590Z 
2025-01-10T13:49:20.8339680Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8339750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8339800Z        ...
2025-01-10T13:49:20.8339860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8339940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8340020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8343430Z        ...
2025-01-10T13:49:20.8343520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8343610Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8344100Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8344490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8344490Z 
2025-01-10T13:49:20.8344590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8344660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8344710Z        ...
2025-01-10T13:49:20.8344760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8344850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8344920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8344970Z        ...
2025-01-10T13:49:20.8345020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8345100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8345180Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8345550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8345550Z 
2025-01-10T13:49:20.8345640Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8345720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8345760Z        ...
2025-01-10T13:49:20.8345810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8345900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8345980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8346020Z        ...
2025-01-10T13:49:20.8346070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8346170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8346230Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8346650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8346660Z 
2025-01-10T13:49:20.8346750Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8347210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8347260Z        ...
2025-01-10T13:49:20.8347320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8347400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8347480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8347520Z        ...
2025-01-10T13:49:20.8347580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8347670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8347740Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8348160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8348170Z 
2025-01-10T13:49:20.8348230Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8348510Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8348770Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8349070Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8349510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8349510Z 
2025-01-10T13:49:20.8349570Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8349850Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8350140Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8350430Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8350840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8350840Z 
2025-01-10T13:49:20.8350970Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8351060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8351100Z        ...
2025-01-10T13:49:20.8351160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8351240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8351320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8351360Z        ...
2025-01-10T13:49:20.8351420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8351500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8351570Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8352010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8352010Z 
2025-01-10T13:49:20.8352100Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8352180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8352220Z        ...
2025-01-10T13:49:20.8352280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8352370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8352450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8352490Z        ...
2025-01-10T13:49:20.8352550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8352630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8352700Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8353160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8353160Z 
2025-01-10T13:49:20.8353260Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8353340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8353370Z        ...
2025-01-10T13:49:20.8353430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8353520Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8353600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8353640Z        ...
2025-01-10T13:49:20.8353700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8353780Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8353840Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8354280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8354280Z 
2025-01-10T13:49:20.8354370Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8354450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8354490Z        ...
2025-01-10T13:49:20.8354550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8354630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8355710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8355780Z        ...
2025-01-10T13:49:20.8355840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8355930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8355990Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8356440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8356450Z 
2025-01-10T13:49:20.8356540Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8356700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8356750Z        ...
2025-01-10T13:49:20.8356810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8356900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8356980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8357030Z        ...
2025-01-10T13:49:20.8357080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8357170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8357240Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8357670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8357680Z 
2025-01-10T13:49:20.8357770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8357860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8357900Z        ...
2025-01-10T13:49:20.8358020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8358110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8358190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8358230Z        ...
2025-01-10T13:49:20.8358280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8358380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8358450Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8358920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8359040Z 
2025-01-10T13:49:20.8359160Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8359250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8359290Z        ...
2025-01-10T13:49:20.8359370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8359470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8359580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8359630Z        ...
2025-01-10T13:49:20.8359700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8359800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8359870Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8360280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8360280Z 
2025-01-10T13:49:20.8360340Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8360630Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8360880Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8361440Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8361860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8361860Z 
2025-01-10T13:49:20.8361930Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8362210Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8362490Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8362780Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8363160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8363380Z 
2025-01-10T13:49:20.8363480Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8363550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8363600Z        ...
2025-01-10T13:49:20.8363670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8363760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8363840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8363880Z        ...
2025-01-10T13:49:20.8363930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8364020Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8364090Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8364490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8364490Z 
2025-01-10T13:49:20.8364590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8364660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8364710Z        ...
2025-01-10T13:49:20.8364770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8364850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8364930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8364980Z        ...
2025-01-10T13:49:20.8365030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8365120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8365190Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8365570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8365570Z 
2025-01-10T13:49:20.8365660Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8365730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8365780Z        ...
2025-01-10T13:49:20.8365880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8365970Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8366050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8366090Z        ...
2025-01-10T13:49:20.8366150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8366230Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8366300Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8366700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8366710Z 
2025-01-10T13:49:20.8366800Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8366870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8366910Z        ...
2025-01-10T13:49:20.8366970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8367060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8367140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8367180Z        ...
2025-01-10T13:49:20.8367240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8367320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8367390Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8367790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8367790Z 
2025-01-10T13:49:20.8367930Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8368010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8368060Z        ...
2025-01-10T13:49:20.8368110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8368200Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8368270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8368320Z        ...
2025-01-10T13:49:20.8368370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8368460Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8368530Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8368910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8368910Z 
2025-01-10T13:49:20.8369000Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8369080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8369130Z        ...
2025-01-10T13:49:20.8369180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8369260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8369340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8369380Z        ...
2025-01-10T13:49:20.8369440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8369530Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8369600Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8369980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8369980Z 
2025-01-10T13:49:20.8370070Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8370150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8370190Z        ...
2025-01-10T13:49:20.8370250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8370340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8370460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8370500Z        ...
2025-01-10T13:49:20.8370560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8370640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8370710Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8371110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8371110Z 
2025-01-10T13:49:20.8371180Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8371460Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8371720Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8371970Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8372410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8372420Z 
2025-01-10T13:49:20.8372490Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8372770Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8373050Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8373350Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8373720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8373730Z 
2025-01-10T13:49:20.8373810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8373900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8373940Z        ...
2025-01-10T13:49:20.8373990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8374080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8374190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8374240Z        ...
2025-01-10T13:49:20.8374300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8374390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8374450Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8374860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8374870Z 
2025-01-10T13:49:20.8374950Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8375030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8375070Z        ...
2025-01-10T13:49:20.8375130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8375220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8375300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8375340Z        ...
2025-01-10T13:49:20.8375400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8375480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8375550Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8375930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8375940Z 
2025-01-10T13:49:20.8376020Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8376100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8376180Z        ...
2025-01-10T13:49:20.8376240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8376330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8376410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8376460Z        ...
2025-01-10T13:49:20.8376510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8376600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8376660Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8377060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8377060Z 
2025-01-10T13:49:20.8377150Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8377230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8377270Z        ...
2025-01-10T13:49:20.8377330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8377420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8377490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8377530Z        ...
2025-01-10T13:49:20.8377590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8377680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8377740Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8378140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8378140Z 
2025-01-10T13:49:20.8378230Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8378310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8378350Z        ...
2025-01-10T13:49:20.8378400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8378490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8378570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8378620Z        ...
2025-01-10T13:49:20.8378670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8379040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8379120Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8379520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8379520Z 
2025-01-10T13:49:20.8379610Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8379690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8379730Z        ...
2025-01-10T13:49:20.8379780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8379870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8379950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8379990Z        ...
2025-01-10T13:49:20.8380050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8380140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8380200Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8380610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8380610Z 
2025-01-10T13:49:20.8380700Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8380770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8380810Z        ...
2025-01-10T13:49:20.8380870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8380960Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8381320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8381370Z        ...
2025-01-10T13:49:20.8381420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8381500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8381570Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8381990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8381990Z 
2025-01-10T13:49:20.8382050Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8382340Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8382600Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8382850Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8383270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8383280Z 
2025-01-10T13:49:20.8383340Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8383660Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8383960Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8384250Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8384650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8384650Z 
2025-01-10T13:49:20.8384740Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8384820Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8384860Z        ...
2025-01-10T13:49:20.8384920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8385060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8385140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8385180Z        ...
2025-01-10T13:49:20.8385230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8385320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8385390Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8385820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8385820Z 
2025-01-10T13:49:20.8385910Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8385990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8386030Z        ...
2025-01-10T13:49:20.8386090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8386170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8386250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8386290Z        ...
2025-01-10T13:49:20.8386350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8386430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8386500Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8386900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8386900Z 
2025-01-10T13:49:20.8386990Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8387070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8387110Z        ...
2025-01-10T13:49:20.8387170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8387250Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8387330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8387370Z        ...
2025-01-10T13:49:20.8387430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8387510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8387620Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8388040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8388040Z 
2025-01-10T13:49:20.8388140Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8388210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8388250Z        ...
2025-01-10T13:49:20.8388310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8388400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8388470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8388520Z        ...
2025-01-10T13:49:20.8388570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8388660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8388730Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8389150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8389150Z 
2025-01-10T13:49:20.8389240Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8389320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8389360Z        ...
2025-01-10T13:49:20.8389410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8389500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8389580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8389660Z        ...
2025-01-10T13:49:20.8389720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8389800Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8389880Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8390280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8390290Z 
2025-01-10T13:49:20.8390380Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8390450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8390500Z        ...
2025-01-10T13:49:20.8390550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8390640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8390720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8390760Z        ...
2025-01-10T13:49:20.8390820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8390900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8390970Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8391350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8391350Z 
2025-01-10T13:49:20.8391450Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8391520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8391570Z        ...
2025-01-10T13:49:20.8391620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8391700Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8391780Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8391820Z        ...
2025-01-10T13:49:20.8391880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8391960Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8392030Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8392460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8392460Z 
2025-01-10T13:49:20.8392530Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8392810Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8393070Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8393330Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8393720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8393720Z 
2025-01-10T13:49:20.8393790Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8394110Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8394480Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8394770Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8395150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8395150Z 
2025-01-10T13:49:20.8395240Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8395320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8395360Z        ...
2025-01-10T13:49:20.8395410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8395500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8395580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8395630Z        ...
2025-01-10T13:49:20.8395680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8395920Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8395990Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8396710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8396720Z 
2025-01-10T13:49:20.8396820Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8396900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8396940Z        ...
2025-01-10T13:49:20.8396990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8397080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8397160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8397200Z        ...
2025-01-10T13:49:20.8397250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8397340Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8397410Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8397790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8397790Z 
2025-01-10T13:49:20.8397880Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8397960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8398000Z        ...
2025-01-10T13:49:20.8398060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8398150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8398220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8398270Z        ...
2025-01-10T13:49:20.8398320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8398780Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8398840Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8399250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8399260Z 
2025-01-10T13:49:20.8399350Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8399420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8399460Z        ...
2025-01-10T13:49:20.8399520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8399600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8399680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8399720Z        ...
2025-01-10T13:49:20.8399780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8399860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8399930Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8400320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8400320Z 
2025-01-10T13:49:20.8400420Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8400490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8400540Z        ...
2025-01-10T13:49:20.8400590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8400680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8400750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8400800Z        ...
2025-01-10T13:49:20.8400850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8400930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8401000Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8401390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8401390Z 
2025-01-10T13:49:20.8401590Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8401670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8401720Z        ...
2025-01-10T13:49:20.8401770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8401860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8401930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8401970Z        ...
2025-01-10T13:49:20.8402030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8402120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8402180Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8402580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8402590Z 
2025-01-10T13:49:20.8402650Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8402930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8403190Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8403490Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8403890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8403900Z 
2025-01-10T13:49:20.8403960Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8404230Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8404530Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8404810Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8405190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8405240Z 
2025-01-10T13:49:20.8405340Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8405420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8405460Z        ...
2025-01-10T13:49:20.8405520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8405610Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8405690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8405730Z        ...
2025-01-10T13:49:20.8405790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8405870Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8405940Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8406350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8406350Z 
2025-01-10T13:49:20.8406440Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8406520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8406570Z        ...
2025-01-10T13:49:20.8406620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8406710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8406790Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8406830Z        ...
2025-01-10T13:49:20.8406890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8410600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8410710Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8411270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8411270Z 
2025-01-10T13:49:20.8411360Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8411440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8411480Z        ...
2025-01-10T13:49:20.8411540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8411620Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8411710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8411750Z        ...
2025-01-10T13:49:20.8411800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8411890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8411960Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8412360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8412370Z 
2025-01-10T13:49:20.8412450Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8412540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8412580Z        ...
2025-01-10T13:49:20.8412630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8412720Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8412800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8412840Z        ...
2025-01-10T13:49:20.8412900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8412980Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8413050Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8413450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8413450Z 
2025-01-10T13:49:20.8413540Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8413670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8413710Z        ...
2025-01-10T13:49:20.8413770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8413850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8413930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8413970Z        ...
2025-01-10T13:49:20.8414030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8414110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8414180Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8414570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8414570Z 
2025-01-10T13:49:20.8414660Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8414740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8414780Z        ...
2025-01-10T13:49:20.8414840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8414920Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8415000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8415040Z        ...
2025-01-10T13:49:20.8415100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8415180Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8415250Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8415640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8415690Z 
2025-01-10T13:49:20.8415780Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8415850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8415890Z        ...
2025-01-10T13:49:20.8415950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8416040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8416110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8416150Z        ...
2025-01-10T13:49:20.8416210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8416300Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8416370Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8416770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8416770Z 
2025-01-10T13:49:20.8416830Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8417120Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8417370Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8417630Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8418200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8418210Z 
2025-01-10T13:49:20.8418280Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8418560Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8418850Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8419130Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8419520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8419650Z 
2025-01-10T13:49:20.8419750Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8419830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8419870Z        ...
2025-01-10T13:49:20.8419930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8420020Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8420100Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8420140Z        ...
2025-01-10T13:49:20.8420200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8420280Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8420350Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8420760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8420770Z 
2025-01-10T13:49:20.8420860Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8420940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8420980Z        ...
2025-01-10T13:49:20.8421040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8421120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8421200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8421240Z        ...
2025-01-10T13:49:20.8421300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8421380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8421450Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8421830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8421840Z 
2025-01-10T13:49:20.8421930Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8422000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8422050Z        ...
2025-01-10T13:49:20.8422100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8422230Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8422310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8422350Z        ...
2025-01-10T13:49:20.8422410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8422500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8422570Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8422970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8422970Z 
2025-01-10T13:49:20.8423070Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8423140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8423180Z        ...
2025-01-10T13:49:20.8423230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8423330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8423400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8423450Z        ...
2025-01-10T13:49:20.8423500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8423580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8423650Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8424050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8424050Z 
2025-01-10T13:49:20.8424140Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8424260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8424310Z        ...
2025-01-10T13:49:20.8424360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8424450Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8424530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8424570Z        ...
2025-01-10T13:49:20.8424630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8424710Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8424780Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8425170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8425170Z 
2025-01-10T13:49:20.8425260Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8425340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8425380Z        ...
2025-01-10T13:49:20.8425440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8425520Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8425600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8425640Z        ...
2025-01-10T13:49:20.8425700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8425790Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8425860Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8426240Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8426250Z 
2025-01-10T13:49:20.8426340Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8426410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8426460Z        ...
2025-01-10T13:49:20.8426510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8426600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8426670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8426760Z        ...
2025-01-10T13:49:20.8426820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8426910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8426980Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8427370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8427380Z 
2025-01-10T13:49:20.8427440Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8427710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8427980Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8428230Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8428670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8428680Z 
2025-01-10T13:49:20.8428740Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8429020Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8429310Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8429600Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8429980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8429980Z 
2025-01-10T13:49:20.8430070Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8430150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8430190Z        ...
2025-01-10T13:49:20.8430250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8430330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8430450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8430500Z        ...
2025-01-10T13:49:20.8430560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8430640Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8430710Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8431120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8431120Z 
2025-01-10T13:49:20.8431210Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8431280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8431330Z        ...
2025-01-10T13:49:20.8431380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8431470Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8431550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8431590Z        ...
2025-01-10T13:49:20.8431640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8431730Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8431800Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8432180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8432190Z 
2025-01-10T13:49:20.8432270Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8432350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8432440Z        ...
2025-01-10T13:49:20.8432500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8432580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8432660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8432700Z        ...
2025-01-10T13:49:20.8432760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8432850Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8432910Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8433310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8433320Z 
2025-01-10T13:49:20.8433400Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8433480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8433520Z        ...
2025-01-10T13:49:20.8433580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8433670Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8433750Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8433790Z        ...
2025-01-10T13:49:20.8433840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8433930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8433990Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8434400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8434400Z 
2025-01-10T13:49:20.8434480Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8434560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8434610Z        ...
2025-01-10T13:49:20.8434660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8434750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8434830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8434870Z        ...
2025-01-10T13:49:20.8434920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8435290Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8435360Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8435760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8435770Z 
2025-01-10T13:49:20.8435850Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8436140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8436190Z        ...
2025-01-10T13:49:20.8436240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8436330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8436420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8436460Z        ...
2025-01-10T13:49:20.8436510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8436600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8436670Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8437060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8437070Z 
2025-01-10T13:49:20.8437150Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8437230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8437270Z        ...
2025-01-10T13:49:20.8437330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8437410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8437720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8437760Z        ...
2025-01-10T13:49:20.8437810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8437900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8437970Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8438370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8438380Z 
2025-01-10T13:49:20.8438440Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8438720Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8438980Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8439230Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8439640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8439640Z 
2025-01-10T13:49:20.8439700Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8440030Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8440320Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8440620Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8441000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8441000Z 
2025-01-10T13:49:20.8441090Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8441160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8441210Z        ...
2025-01-10T13:49:20.8441260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8441350Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8441470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8441520Z        ...
2025-01-10T13:49:20.8441570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8441660Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8441730Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8442140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8442140Z 
2025-01-10T13:49:20.8442230Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8442310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8442350Z        ...
2025-01-10T13:49:20.8442400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8442490Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8442570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8442610Z        ...
2025-01-10T13:49:20.8442670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8442750Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8442820Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8443210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8443210Z 
2025-01-10T13:49:20.8443300Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8443370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8443410Z        ...
2025-01-10T13:49:20.8443470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8443560Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8443630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8443680Z        ...
2025-01-10T13:49:20.8443730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8443820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8443930Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8444340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8444340Z 
2025-01-10T13:49:20.8444430Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8444500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8444550Z        ...
2025-01-10T13:49:20.8444600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8444690Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8444760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8444810Z        ...
2025-01-10T13:49:20.8444870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8444950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8445010Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8445420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8445420Z 
2025-01-10T13:49:20.8445510Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8445590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8445640Z        ...
2025-01-10T13:49:20.8445690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8445780Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8445850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8445950Z        ...
2025-01-10T13:49:20.8446000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8446090Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8446150Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8446550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8446550Z 
2025-01-10T13:49:20.8446640Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8446710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8446760Z        ...
2025-01-10T13:49:20.8446810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8446900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8446970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8447020Z        ...
2025-01-10T13:49:20.8447080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8447160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8447230Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8447650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8447650Z 
2025-01-10T13:49:20.8447740Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8447810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8447860Z        ...
2025-01-10T13:49:20.8447910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8448000Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8448080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8448120Z        ...
2025-01-10T13:49:20.8448180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8448270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8448330Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8448800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8448810Z 
2025-01-10T13:49:20.8448880Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8449160Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8449410Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8449670Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8450100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8450100Z 
2025-01-10T13:49:20.8450200Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8450490Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8450770Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8451060Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8451480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8451480Z 
2025-01-10T13:49:20.8451570Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8451650Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8451690Z        ...
2025-01-10T13:49:20.8451750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8451840Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8451910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8451960Z        ...
2025-01-10T13:49:20.8452010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8452100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8452170Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8452880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8452890Z 
2025-01-10T13:49:20.8452990Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8453070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8453110Z        ...
2025-01-10T13:49:20.8453170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8453260Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8453330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8453380Z        ...
2025-01-10T13:49:20.8453430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8453520Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8453580Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8454000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8454000Z 
2025-01-10T13:49:20.8454090Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8454170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8454210Z        ...
2025-01-10T13:49:20.8454270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8454360Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8454430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8454740Z        ...
2025-01-10T13:49:20.8454800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8454890Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8454950Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8455470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.8455470Z 
2025-01-10T13:49:20.8455590Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-01-10T13:49:20.8455880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8459260Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-01-10T13:49:20.8462600Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812795, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235604, ...]
2025-01-10T13:49:20.8462780Z At positional index 124, first diff: 0.9928779361771577 != 0.9929028359129612
2025-01-10T13:49:20.8463240Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8463250Z 
2025-01-10T13:49:20.8463340Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8463410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8463460Z        ...
2025-01-10T13:49:20.8463520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8463610Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8463690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8463740Z        ...
2025-01-10T13:49:20.8463790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8463880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8463950Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8464380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8464380Z 
2025-01-10T13:49:20.8464480Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8464550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8464590Z        ...
2025-01-10T13:49:20.8464650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8464780Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8464860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8464910Z        ...
2025-01-10T13:49:20.8464960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8465050Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8465120Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8465550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8465550Z 
2025-01-10T13:49:20.8465640Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8465720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8465770Z        ...
2025-01-10T13:49:20.8465820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8465910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8465980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8466030Z        ...
2025-01-10T13:49:20.8466080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8466170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8466240Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8466650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8466660Z 
2025-01-10T13:49:20.8466750Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8466860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8466910Z        ...
2025-01-10T13:49:20.8466960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8467060Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8467130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8467180Z        ...
2025-01-10T13:49:20.8467230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8467310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8467380Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8467780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8467790Z 
2025-01-10T13:49:20.8467880Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8467960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8468000Z        ...
2025-01-10T13:49:20.8468050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8468140Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8468220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8468260Z        ...
2025-01-10T13:49:20.8468320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8468400Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8468470Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8468880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8468880Z 
2025-01-10T13:49:20.8468950Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8469270Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8469530Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8469790Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8470210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8470210Z 
2025-01-10T13:49:20.8470270Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8470560Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8470840Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8471170Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8471560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8471570Z 
2025-01-10T13:49:20.8471660Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8471740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8471780Z        ...
2025-01-10T13:49:20.8471840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8471930Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8472000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8472050Z        ...
2025-01-10T13:49:20.8472100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8472190Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8472260Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8472680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8472690Z 
2025-01-10T13:49:20.8472770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8472850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8472900Z        ...
2025-01-10T13:49:20.8472950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8473320Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8473410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8473460Z        ...
2025-01-10T13:49:20.8473510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8473600Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8473670Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8474070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8474070Z 
2025-01-10T13:49:20.8474160Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8474240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8474280Z        ...
2025-01-10T13:49:20.8474330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8474420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8474490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8474540Z        ...
2025-01-10T13:49:20.8474600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8474680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8474750Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8475250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.8475520Z 
2025-01-10T13:49:20.8475650Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:20.8475930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8479700Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.8483290Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.8483470Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:20.8483920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8483920Z 
2025-01-10T13:49:20.8484010Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8484090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8484140Z        ...
2025-01-10T13:49:20.8484190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8484280Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8484360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8484410Z        ...
2025-01-10T13:49:20.8484460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8484550Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8484620Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8485040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8485040Z 
2025-01-10T13:49:20.8485130Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8485210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8485250Z        ...
2025-01-10T13:49:20.8485300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8485390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8489610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8489730Z        ...
2025-01-10T13:49:20.8489810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8489910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8490280Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8490740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8490740Z 
2025-01-10T13:49:20.8490840Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8490920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8490960Z        ...
2025-01-10T13:49:20.8491020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8491120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8491200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8491250Z        ...
2025-01-10T13:49:20.8491310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8491390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8491460Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8491880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8491880Z 
2025-01-10T13:49:20.8491970Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8492050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8492090Z        ...
2025-01-10T13:49:20.8492150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8492240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8492320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8492440Z        ...
2025-01-10T13:49:20.8492500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8492580Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8492660Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8493010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8493010Z 
2025-01-10T13:49:20.8493110Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8493180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8493230Z        ...
2025-01-10T13:49:20.8493280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8493370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8493450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8493490Z        ...
2025-01-10T13:49:20.8493550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8493630Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8493700Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8494070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8494070Z 
2025-01-10T13:49:20.8494140Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8494430Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8494720Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8494990Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8495350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8495360Z 
2025-01-10T13:49:20.8495420Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8495700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8495990Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8496280Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8496680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8496680Z 
2025-01-10T13:49:20.8496770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8496850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8496900Z        ...
2025-01-10T13:49:20.8496950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8497040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8497120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8497170Z        ...
2025-01-10T13:49:20.8497220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8497310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8497380Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8497750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8497760Z 
2025-01-10T13:49:20.8497840Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8497920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8497970Z        ...
2025-01-10T13:49:20.8498020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8498110Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8498180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8498230Z        ...
2025-01-10T13:49:20.8498290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8498380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8498440Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8499060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8499070Z 
2025-01-10T13:49:20.8499170Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8499240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8499280Z        ...
2025-01-10T13:49:20.8499340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8499430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8499500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8499550Z        ...
2025-01-10T13:49:20.8499600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8499690Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8499760Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8500200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.8500210Z 
2025-01-10T13:49:20.8500330Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-01-10T13:49:20.8500610Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8504170Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.8508030Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817572, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-01-10T13:49:20.8508170Z At positional index 55, first diff: 0.988842577117688 != 0.988854404408907
2025-01-10T13:49:20.8508560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8508600Z 
2025-01-10T13:49:20.8508700Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8508780Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8508830Z        ...
2025-01-10T13:49:20.8508880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8508970Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8509050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8509090Z        ...
2025-01-10T13:49:20.8509150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8509230Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8509310Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8509670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8509670Z 
2025-01-10T13:49:20.8509770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8509840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8509890Z        ...
2025-01-10T13:49:20.8509940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8510030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8510100Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8510150Z        ...
2025-01-10T13:49:20.8510200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8510290Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8510350Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8510720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8510720Z 
2025-01-10T13:49:20.8510810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8510890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8510930Z        ...
2025-01-10T13:49:20.8510980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8511070Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8511190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8511240Z        ...
2025-01-10T13:49:20.8511290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8511380Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8511450Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8511800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8511800Z 
2025-01-10T13:49:20.8511890Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8511970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8512010Z        ...
2025-01-10T13:49:20.8512060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8512150Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8512230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8512270Z        ...
2025-01-10T13:49:20.8512330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8512420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8512480Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8512840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8512850Z 
2025-01-10T13:49:20.8512940Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8513010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8513100Z        ...
2025-01-10T13:49:20.8513160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8513240Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8513320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8513370Z        ...
2025-01-10T13:49:20.8513420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8513510Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8513580Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8513950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8513950Z 
2025-01-10T13:49:20.8514010Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8514290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8514550Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8514810Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8515180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8515190Z 
2025-01-10T13:49:20.8515290Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8515570Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8515860Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8516150Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8516510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8516510Z 
2025-01-10T13:49:20.8516610Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8516680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8516760Z        ...
2025-01-10T13:49:20.8516830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8516910Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8516990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8517030Z        ...
2025-01-10T13:49:20.8517090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8517170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8517240Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8517630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8517630Z 
2025-01-10T13:49:20.8517720Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8517790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8517830Z        ...
2025-01-10T13:49:20.8517900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8517980Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8518060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8518100Z        ...
2025-01-10T13:49:20.8518160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8518250Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8518320Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8518670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8518680Z 
2025-01-10T13:49:20.8518770Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8518840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8518880Z        ...
2025-01-10T13:49:20.8518940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8519030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8519110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8519150Z        ...
2025-01-10T13:49:20.8519210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8519590Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8519680Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8520060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8520060Z 
2025-01-10T13:49:20.8520150Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8520230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8520270Z        ...
2025-01-10T13:49:20.8520330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8520420Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8520500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8520540Z        ...
2025-01-10T13:49:20.8520600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8520680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8520750Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8521120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8521130Z 
2025-01-10T13:49:20.8521210Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8521290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8521330Z        ...
2025-01-10T13:49:20.8521390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8521480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8521840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8521880Z        ...
2025-01-10T13:49:20.8521940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8522020Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8522100Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8522460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8522460Z 
2025-01-10T13:49:20.8522550Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8522630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8522670Z        ...
2025-01-10T13:49:20.8522730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8522820Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8522900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8522940Z        ...
2025-01-10T13:49:20.8523000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8523080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8523150Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8523510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8523510Z 
2025-01-10T13:49:20.8523610Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8523680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8523720Z        ...
2025-01-10T13:49:20.8523780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8523860Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8523940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8523980Z        ...
2025-01-10T13:49:20.8524040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8524120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8524190Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8524610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8524620Z 
2025-01-10T13:49:20.8524680Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8524970Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8525220Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8525480Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8525850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8525850Z 
2025-01-10T13:49:20.8525960Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8526240Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8526870Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8527180Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8527540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8527540Z 
2025-01-10T13:49:20.8527640Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8527710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8527760Z        ...
2025-01-10T13:49:20.8527810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8527900Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8527980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8528020Z        ...
2025-01-10T13:49:20.8528080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8528160Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8528230Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8528720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8528720Z 
2025-01-10T13:49:20.8528820Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8528900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8528940Z        ...
2025-01-10T13:49:20.8528990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8529080Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8529160Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8529210Z        ...
2025-01-10T13:49:20.8529260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8529350Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8529420Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8529760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8529760Z 
2025-01-10T13:49:20.8529860Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8529930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8529980Z        ...
2025-01-10T13:49:20.8530030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8530120Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8530200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8530240Z        ...
2025-01-10T13:49:20.8530290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8530430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8530500Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8530870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8530870Z 
2025-01-10T13:49:20.8530960Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8531040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8531080Z        ...
2025-01-10T13:49:20.8531130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8531220Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8531290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8531340Z        ...
2025-01-10T13:49:20.8531390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8531480Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8531550Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8531910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8531920Z 
2025-01-10T13:49:20.8532010Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8532080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8532120Z        ...
2025-01-10T13:49:20.8532180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8532270Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8532340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8532390Z        ...
2025-01-10T13:49:20.8532440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8532530Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8532600Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8532960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8532960Z 
2025-01-10T13:49:20.8533090Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8533160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8533210Z        ...
2025-01-10T13:49:20.8533260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8533350Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8533430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8533470Z        ...
2025-01-10T13:49:20.8533520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8533610Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8533680Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8534060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8534060Z 
2025-01-10T13:49:20.8534160Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8534230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8534280Z        ...
2025-01-10T13:49:20.8534330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8534410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8534490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8534540Z        ...
2025-01-10T13:49:20.8534590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8534680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8534750Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8535140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8535180Z 
2025-01-10T13:49:20.8535250Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8535540Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8535800Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8536060Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8536460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8536460Z 
2025-01-10T13:49:20.8536520Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8536800Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8537630Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8538020Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8538410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8538410Z 
2025-01-10T13:49:20.8538500Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8538580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8538620Z        ...
2025-01-10T13:49:20.8538680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8538760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8538840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8538880Z        ...
2025-01-10T13:49:20.8538940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8539030Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8539090Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8539720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8539720Z 
2025-01-10T13:49:20.8539820Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8539900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8539940Z        ...
2025-01-10T13:49:20.8540010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8540100Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8540180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8540220Z        ...
2025-01-10T13:49:20.8540280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8540370Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8540440Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8540810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8540820Z 
2025-01-10T13:49:20.8540910Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8540990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8541030Z        ...
2025-01-10T13:49:20.8541090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8541170Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8541250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8541290Z        ...
2025-01-10T13:49:20.8541350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8541430Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8541500Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8541890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8541900Z 
2025-01-10T13:49:20.8541990Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8542070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8542160Z        ...
2025-01-10T13:49:20.8542220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8542310Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8542390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8542430Z        ...
2025-01-10T13:49:20.8542490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8542570Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8542630Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8543030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8543040Z 
2025-01-10T13:49:20.8543120Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8543200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8543250Z        ...
2025-01-10T13:49:20.8543300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8543390Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8543470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8543510Z        ...
2025-01-10T13:49:20.8543570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8543650Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8543720Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8544100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8544140Z 
2025-01-10T13:49:20.8544240Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8544320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8544360Z        ...
2025-01-10T13:49:20.8544420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8544500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8544580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8544620Z        ...
2025-01-10T13:49:20.8544670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8544760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8544820Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8545250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8545260Z 
2025-01-10T13:49:20.8545350Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8545430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8545470Z        ...
2025-01-10T13:49:20.8545530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8545610Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8545700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8545740Z        ...
2025-01-10T13:49:20.8545800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8545880Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8545950Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8546390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8546390Z 
2025-01-10T13:49:20.8546460Z Series values are different (4.04858 %)
2025-01-10T13:49:20.8546790Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8547050Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8547300Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-01-10T13:49:20.8547750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-01-10T13:49:20.8547750Z 
2025-01-10T13:49:20.8547820Z Series values are different (6.47773 %)
2025-01-10T13:49:20.8548100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8548430Z [left]:  [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8548720Z [right]: [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-01-10T13:49:20.8549130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8549140Z 
2025-01-10T13:49:20.8549230Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8549300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8549350Z        ...
2025-01-10T13:49:20.8549410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8549500Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8549580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8549620Z        ...
2025-01-10T13:49:20.8549680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8549760Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8549830Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8550270Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8550280Z 
2025-01-10T13:49:20.8550370Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8550440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8550490Z        ...
2025-01-10T13:49:20.8550580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8550680Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8550760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8550790Z        ...
2025-01-10T13:49:20.8550850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8550940Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8551000Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8551420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8551420Z 
2025-01-10T13:49:20.8551520Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8551590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8551640Z        ...
2025-01-10T13:49:20.8551690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8551780Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8551860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8551900Z        ...
2025-01-10T13:49:20.8551960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8552040Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8552110Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8552550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8552590Z 
2025-01-10T13:49:20.8552680Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8552760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8552810Z        ...
2025-01-10T13:49:20.8552860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8552950Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8553030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8553070Z        ...
2025-01-10T13:49:20.8553130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8553210Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8553270Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8553710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8553720Z 
2025-01-10T13:49:20.8553810Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8553880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8553930Z        ...
2025-01-10T13:49:20.8553980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8554070Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8554150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8554190Z        ...
2025-01-10T13:49:20.8554250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8554330Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8554400Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8554830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-01-10T13:49:20.8554830Z 
2025-01-10T13:49:20.8554930Z MultiIndex level [2] values are different (4.04858 %)
2025-01-10T13:49:20.8555000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8555040Z        ...
2025-01-10T13:49:20.8555100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8555410Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8555520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8555560Z        ...
2025-01-10T13:49:20.8555620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-01-10T13:49:20.8555700Z       dtype='int64', name='level_number_lower', length=247)
2025-01-10T13:49:20.8555770Z At positional index 75, first diff: 7 != 6
2025-01-10T13:49:20.8556000Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-01-10T13:49:20.8556070Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8556070Z 
2025-01-10T13:49:20.8556130Z Mismatched elements: 120 / 584480 (0.0205%)
2025-01-10T13:49:20.8556210Z Max absolute difference among violations: 1.
2025-01-10T13:49:20.8556280Z Max relative difference among violations: 1.
2025-01-10T13:49:20.8556390Z  ACTUAL: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.8556470Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.8556550Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:20.8556660Z  DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.8556730Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-01-10T13:49:20.8556810Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-01-10T13:49:20.8557030Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-01-10T13:49:20.8560910Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8561270Z 
2025-01-10T13:49:20.8561350Z Mismatched elements: 748 / 29224 (2.56%)
2025-01-10T13:49:20.8561420Z Max absolute difference among violations: 4005
2025-01-10T13:49:20.8561510Z Max relative difference among violations: 26.00649351
2025-01-10T13:49:20.8561600Z  ACTUAL: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:20.8561690Z  DESIRED: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-01-10T13:49:20.8561910Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-01-10T13:49:20.8561980Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8561980Z 
2025-01-10T13:49:20.8562040Z Mismatched elements: 1847 / 29224 (6.32%)
2025-01-10T13:49:20.8562120Z Max absolute difference among violations: 4046
2025-01-10T13:49:20.8562200Z Max relative difference among violations: 24.82208589
2025-01-10T13:49:20.8562290Z  ACTUAL: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:20.8562380Z  DESIRED: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-01-10T13:49:20.8562570Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-01-10T13:49:20.8562640Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8562640Z 
2025-01-10T13:49:20.8562710Z Mismatched elements: 13536 / 584480 (2.32%)
2025-01-10T13:49:20.8562800Z Max absolute difference among violations: 0.99984222
2025-01-10T13:49:20.8562890Z Max relative difference among violations: 6337.12154973
2025-01-10T13:49:20.8562960Z  ACTUAL: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8563000Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8563060Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.8563130Z  DESIRED: array([[1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8563180Z        [1., 1., 1., ..., 1., 1., 1.],
2025-01-10T13:49:20.8563230Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-01-10T13:49:20.8563400Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-01-10T13:49:20.8563470Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8563470Z 
2025-01-10T13:49:20.8563530Z Mismatched elements: 13335 / 263016 (5.07%)
2025-01-10T13:49:20.8563630Z Max absolute difference among violations: 4.25260542e+12
2025-01-10T13:49:20.8563770Z Max relative difference among violations: 18196.0085861
2025-01-10T13:49:20.8563900Z  ACTUAL: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:20.8563950Z         4.043917e+10, 6.677200e-07],
2025-01-10T13:49:20.8564050Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:20.8564170Z  DESIRED: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-01-10T13:49:20.8564230Z         4.043917e+10, 6.677200e-07],
2025-01-10T13:49:20.8564330Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-01-10T13:49:20.8564500Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-01-10T13:49:20.8564570Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8564570Z 
2025-01-10T13:49:20.8564630Z Mismatched elements: 2221 / 29224 (7.6%)
2025-01-10T13:49:20.8564720Z Max absolute difference among violations: 2.92713618
2025-01-10T13:49:20.8564810Z Max relative difference among violations: 18196.0085861
2025-01-10T13:49:20.8564930Z  ACTUAL: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:20.8564980Z        1.126883e+00, 4.414472e-04])
2025-01-10T13:49:20.8565110Z  DESIRED: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-01-10T13:49:20.8565160Z        1.126883e+00, 4.414472e-04])
2025-01-10T13:49:20.8565350Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-01-10T13:49:20.8565420Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8565430Z 
2025-01-10T13:49:20.8565490Z Mismatched elements: 39620 / 584480 (6.78%)
2025-01-10T13:49:20.8565580Z Max absolute difference among violations: 282815.33818472
2025-01-10T13:49:20.8565720Z Max relative difference among violations: 4.12352828e+47
2025-01-10T13:49:20.8565840Z  ACTUAL: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:20.8565890Z         0.000000e+00, 0.000000e+00],
2025-01-10T13:49:20.8566000Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:20.8566120Z  DESIRED: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-01-10T13:49:20.8566170Z         0.000000e+00, 0.000000e+00],
2025-01-10T13:49:20.8566270Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-01-10T13:49:20.8566850Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.8566850Z 
2025-01-10T13:49:20.8566980Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:20.8567020Z [index]: [0, 1]
2025-01-10T13:49:20.8567090Z [left]:  [0.40039163797855976, 0.4501364467195908]
2025-01-10T13:49:20.8567160Z [right]: [0.40039163797855976, 0.4500690173218345]
2025-01-10T13:49:20.8567290Z At positional index 1, first diff: 0.4501364467195908 != 0.4500690173218345
2025-01-10T13:49:20.8567650Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.8567650Z 
2025-01-10T13:49:20.8567770Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:20.8567820Z [index]: [0, 1]
2025-01-10T13:49:20.8567890Z [left]:  [9967.488442185557, 10090.925208074612]
2025-01-10T13:49:20.8567950Z [right]: [9967.488442185557, 10091.396322818851]
2025-01-10T13:49:20.8568070Z At positional index 1, first diff: 10090.925208074612 != 10091.396322818851
2025-01-10T13:49:20.8568470Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-01-10T13:49:20.8568470Z 
2025-01-10T13:49:20.8568590Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-01-10T13:49:20.8568640Z [index]: [0, 1]
2025-01-10T13:49:20.8568760Z [left]:  [2869544645.3209715, 2880986026.9779415]
2025-01-10T13:49:20.8568830Z [right]: [2869544645.3209715, 2881024886.0882792]
2025-01-10T13:49:20.8568960Z At positional index 1, first diff: 2880986026.9779415 != 2881024886.0882792
2025-01-10T13:49:20.8569240Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-01-10T13:49:20.8569240Z 
2025-01-10T13:49:20.8569300Z Series values are different (100.0 %)
2025-01-10T13:49:20.8569390Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.8570270Z [left]:  [1.0190851489144417e+29, 8.620293210130923e+28, 7.627182111494598e+28, 6.892948616165273e+28, 6.337927690943656e+28, 5.960020402587151e+28, 5.586558872212224e+28, 5.25635918178016e+28, 5.018051447190151e+28, 4.8014271709728364e+28, 4.635443103818658e+28, 4.427600822090263e+28, 4.266701646003397e+28, 4.095148200480331e+28, 3.973054136677621e+28, 3.8813484639248094e+28, 3.749648114483984e+28, 3.6669667839395227e+28, 3.5309131816469324e+28, 3.4364426470451254e+28]
2025-01-10T13:49:20.8571140Z [right]: [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-01-10T13:49:20.8571280Z At positional index 0, first diff: 1.0190851489144417e+29 != 1.0202042777991753e+29
2025-01-10T13:49:20.8571600Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-01-10T13:49:20.8571610Z 
2025-01-10T13:49:20.8571670Z Series values are different (100.0 %)
2025-01-10T13:49:20.8571760Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.8572460Z [left]:  [116548101693133.95, 98287497352449.03, 86880176732435.22, 78272950854373.14, 72163814877095.69, 67694196332568.83, 63443304042094.945, 60039709300008.84, 57626147839330.99, 55320363334244.195, 53407234761435.54, 51398562237742.78, 49867122015465.32, 48237829093150.875, 46995101666576.04, 46046276744657.75, 44990423974886.99, 44175537951010.7, 43032079683987.4, 42141581527839.64]
2025-01-10T13:49:20.8573150Z [right]: [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-01-10T13:49:20.8573280Z At positional index 0, first diff: 116548101693133.95 != 116635492761989.08
2025-01-10T13:49:20.8573550Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-01-10T13:49:20.8573550Z 
2025-01-10T13:49:20.8573610Z Series values are different (90.0 %)
2025-01-10T13:49:20.8573700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.8574430Z [left]:  [10090.925208074612, 10114.284007169752, 10139.419400388757, 10142.763627360702, 10149.780795955077, 10123.098440726963, 10084.703897056657, 10058.012622231076, 10075.221831273808, 10032.602564737457, 10029.923783575228, 9982.400974610377, 9943.057719983482, 9914.605779635785, 9894.245392559056, 9854.91157888558, 9802.51106451295, 9775.252526407032, 9735.554945100961, 9699.29579392027]
2025-01-10T13:49:20.8575200Z [right]: [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-01-10T13:49:20.8575340Z At positional index 0, first diff: 10090.925208074612 != 10091.396322818851
2025-01-10T13:49:20.8575610Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-01-10T13:49:20.8575610Z 
2025-01-10T13:49:20.8575670Z Series values are different (95.0 %)
2025-01-10T13:49:20.8575760Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-01-10T13:49:20.8576550Z [left]:  [0.4501364467195908, 0.35908765015367794, 0.2992286625932581, 0.25782483595854516, 0.22541895309871707, 0.20119984035942634, 0.18259528573790965, 0.16657898370897495, 0.15044998950385874, 0.13972884748944586, 0.1286244489704662, 0.12093391136570557, 0.11343684592362663, 0.10649361332296867, 0.10015211634287155, 0.09484336636678072, 0.09053724751966309, 0.08584829670214006, 0.08202005255449255, 0.07823319609488653]
2025-01-10T13:49:20.8577340Z [right]: [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-01-10T13:49:20.8577460Z At positional index 0, first diff: 0.4501364467195908 != 0.4500690173218345
2025-01-10T13:49:20.8577730Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-01-10T13:49:20.8577780Z 
2025-01-10T13:49:20.8577840Z Series values are different (5.1125 %)
2025-01-10T13:49:20.8578130Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8582170Z [left]:  [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.6, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-01-10T13:49:20.8586030Z [right]: [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-01-10T13:49:20.8586480Z At positional index 56, first diff: 657025184715239.1 != 657003154645147.8
2025-01-10T13:49:20.8586750Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-01-10T13:49:20.8586760Z 
2025-01-10T13:49:20.8586820Z Series values are different (1.3025 %)
2025-01-10T13:49:20.8587090Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-01-10T13:49:20.8591690Z [left]:  [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.4233351068555537e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.558078209369483e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.483244249209606e-05, -2.4131561837088724e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:20.8596230Z [right]: [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-01-10T13:49:20.8596430Z At positional index 414, first diff: 2.5347525852067693e-05 != 2.5657552576608082e-05
2025-01-10T13:49:20.8596710Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-01-10T13:49:20.8596820Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8596820Z 
2025-01-10T13:49:20.8596890Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:20.8596980Z Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:20.8597050Z Max relative difference among violations: 1.
2025-01-10T13:49:20.8597180Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8597230Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8597360Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8597400Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8597690Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-01-10T13:49:20.8597750Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8597760Z 
2025-01-10T13:49:20.8597820Z Mismatched elements: 252 / 10000 (2.52%)
2025-01-10T13:49:20.8597920Z Max absolute difference among violations: 4.15247374e+37
2025-01-10T13:49:20.8598000Z Max relative difference among violations: 1.03027212
2025-01-10T13:49:20.8598120Z  ACTUAL: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8598170Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8598300Z  DESIRED: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8598340Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8598560Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-01-10T13:49:20.8598620Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8598630Z 
2025-01-10T13:49:20.8598690Z Mismatched elements: 309 / 10000 (3.09%)
2025-01-10T13:49:20.8598840Z Max absolute difference among violations: 4.30543741e+37
2025-01-10T13:49:20.8598910Z Max relative difference among violations: 1.
2025-01-10T13:49:20.8599030Z  ACTUAL: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8599080Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8599200Z  DESIRED: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8599240Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8599470Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-01-10T13:49:20.8599530Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8599530Z 
2025-01-10T13:49:20.8599600Z Mismatched elements: 491895 / 584480 (84.2%)
2025-01-10T13:49:20.8599690Z Max absolute difference among violations: 5.32418652e-19
2025-01-10T13:49:20.8599780Z Max relative difference among violations: 8.78746214
2025-01-10T13:49:20.8599850Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8599900Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8599950Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8600020Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8600070Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8600130Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8600320Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-01-10T13:49:20.8600390Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8600390Z 
2025-01-10T13:49:20.8600450Z Mismatched elements: 4832 / 10000 (48.3%)
2025-01-10T13:49:20.8600550Z Max absolute difference among violations: 1.38672909e+39
2025-01-10T13:49:20.8600640Z Max relative difference among violations: 5.17890748
2025-01-10T13:49:20.8600750Z  ACTUAL: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8600800Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8600920Z  DESIRED: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8600970Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8601180Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-01-10T13:49:20.8601290Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8601300Z 
2025-01-10T13:49:20.8601360Z Mismatched elements: 5933 / 10000 (59.3%)
2025-01-10T13:49:20.8601460Z Max absolute difference among violations: 5.26760031e+38
2025-01-10T13:49:20.8601550Z Max relative difference among violations: 23978.84555943
2025-01-10T13:49:20.8601660Z  ACTUAL: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8601710Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8601830Z  DESIRED: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8601880Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8602210Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-01-10T13:49:20.8602280Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8602280Z 
2025-01-10T13:49:20.8602350Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:20.8602440Z Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:20.8602530Z Max relative difference among violations: 8.35741234
2025-01-10T13:49:20.8602590Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8602650Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8602690Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8602770Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8602820Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8602870Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8603180Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-01-10T13:49:20.8603290Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8603290Z 
2025-01-10T13:49:20.8603350Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:20.8603440Z Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:20.8603530Z Max relative difference among violations: 5.83764686
2025-01-10T13:49:20.8603650Z  ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8603700Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8603820Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8603870Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8604200Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-01-10T13:49:20.8604270Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8604270Z 
2025-01-10T13:49:20.8604330Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.8604430Z Max absolute difference among violations: 5.00661745e+37
2025-01-10T13:49:20.8604510Z Max relative difference among violations: 6.79985816
2025-01-10T13:49:20.8604630Z  ACTUAL: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-01-10T13:49:20.8604680Z        2.292907e+31, 2.257206e+31])
2025-01-10T13:49:20.8604800Z  DESIRED: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-01-10T13:49:20.8604850Z        2.279436e+31, 2.243943e+31])
2025-01-10T13:49:20.8605170Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-01-10T13:49:20.8605240Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8605240Z 
2025-01-10T13:49:20.8605300Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:20.8605400Z Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:20.8605490Z Max relative difference among violations: 4.08461732
2025-01-10T13:49:20.8605550Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8605610Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8605650Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8605980Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8606040Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8606100Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8606410Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-01-10T13:49:20.8606470Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8606480Z 
2025-01-10T13:49:20.8606530Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:20.8606780Z Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:20.8606870Z Max relative difference among violations: 3.08310014
2025-01-10T13:49:20.8607000Z  ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8607040Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8607160Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8607220Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8607540Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-01-10T13:49:20.8607610Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8607610Z 
2025-01-10T13:49:20.8607670Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.8607760Z Max absolute difference among violations: 2.90101642e+37
2025-01-10T13:49:20.8607850Z Max relative difference among violations: 96.4428449
2025-01-10T13:49:20.8607970Z  ACTUAL: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-01-10T13:49:20.8608010Z        1.375141e+31, 1.337928e+31])
2025-01-10T13:49:20.8608460Z  DESIRED: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-01-10T13:49:20.8608510Z        1.330497e+31, 1.294462e+31])
2025-01-10T13:49:20.8608830Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-01-10T13:49:20.8608890Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8608890Z 
2025-01-10T13:49:20.8608960Z Mismatched elements: 441248 / 584480 (75.5%)
2025-01-10T13:49:20.8609050Z Max absolute difference among violations: 4.67863561e-19
2025-01-10T13:49:20.8609140Z Max relative difference among violations: 4.08461732
2025-01-10T13:49:20.8609200Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8609250Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8609300Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8609370Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8609420Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8609470Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8609780Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-01-10T13:49:20.8609840Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8609840Z 
2025-01-10T13:49:20.8609900Z Mismatched elements: 3913 / 10000 (39.1%)
2025-01-10T13:49:20.8610000Z Max absolute difference among violations: 8.5486318e+38
2025-01-10T13:49:20.8610080Z Max relative difference among violations: 3.08310014
2025-01-10T13:49:20.8610200Z  ACTUAL: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8610250Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8610370Z  DESIRED: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8610420Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8610750Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-01-10T13:49:20.8610810Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8610820Z 
2025-01-10T13:49:20.8610870Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.8611010Z Max absolute difference among violations: 2.99183385e+37
2025-01-10T13:49:20.8611100Z Max relative difference among violations: 98.22574798
2025-01-10T13:49:20.8611220Z  ACTUAL: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-01-10T13:49:20.8611270Z        1.193005e+31, 1.164854e+31])
2025-01-10T13:49:20.8611390Z  DESIRED: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-01-10T13:49:20.8611430Z        1.260980e+31, 1.222587e+31])
2025-01-10T13:49:20.8611760Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-01-10T13:49:20.8611820Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8611830Z 
2025-01-10T13:49:20.8611890Z Mismatched elements: 441164 / 584480 (75.5%)
2025-01-10T13:49:20.8611990Z Max absolute difference among violations: 7.03072887e-19
2025-01-10T13:49:20.8612070Z Max relative difference among violations: 8.35741234
2025-01-10T13:49:20.8612140Z  ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8612190Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8612250Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8612310Z  DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8612370Z        [0., 0., 0., ..., 0., 0., 0.],
2025-01-10T13:49:20.8612410Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-01-10T13:49:20.8612720Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-01-10T13:49:20.8612780Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8612790Z 
2025-01-10T13:49:20.8612850Z Mismatched elements: 3719 / 10000 (37.2%)
2025-01-10T13:49:20.8612990Z Max absolute difference among violations: 2.09719426e+39
2025-01-10T13:49:20.8613070Z Max relative difference among violations: 5.83764686
2025-01-10T13:49:20.8613190Z  ACTUAL: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8613240Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8613360Z  DESIRED: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-01-10T13:49:20.8613410Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8613740Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-01-10T13:49:20.8613800Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8613800Z 
2025-01-10T13:49:20.8613860Z Mismatched elements: 10000 / 10000 (100%)
2025-01-10T13:49:20.8613950Z Max absolute difference among violations: 5.0153284e+37
2025-01-10T13:49:20.8614030Z Max relative difference among violations: 5.96359613
2025-01-10T13:49:20.8614160Z  ACTUAL: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-01-10T13:49:20.8614210Z        2.124305e+31, 2.101081e+31])
2025-01-10T13:49:20.8614330Z  DESIRED: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-01-10T13:49:20.8614380Z        2.088676e+31, 2.060278e+31])
2025-01-10T13:49:20.8614630Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-01-10T13:49:20.8614690Z Not equal to tolerance rtol=1e-13, atol=0
2025-01-10T13:49:20.8614690Z 
2025-01-10T13:49:20.8614750Z Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:20.8614840Z Max absolute difference among violations: 2.25821059e+25
2025-01-10T13:49:20.8614930Z Max relative difference among violations: 0.00054397
2025-01-10T13:49:20.8615050Z  ACTUAL: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-01-10T13:49:20.8615130Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-01-10T13:49:20.8615230Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-01-10T13:49:20.8615340Z  DESIRED: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-01-10T13:49:20.8615470Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-01-10T13:49:20.8615560Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-01-10T13:49:20.8615840Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-01-10T13:49:20.8615910Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-01-10T13:49:20.8615910Z 
2025-01-10T13:49:20.8615980Z Mismatched elements: 20 / 20 (100%)
2025-01-10T13:49:20.8616060Z Max absolute difference among violations: 1.93283629e+25
2025-01-10T13:49:20.8616150Z Max relative difference among violations: 0.00029157
2025-01-10T13:49:20.8616260Z  ACTUAL: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-01-10T13:49:20.8616350Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-01-10T13:49:20.8616440Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-01-10T13:49:20.8616550Z  DESIRED: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-01-10T13:49:20.8616630Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-01-10T13:49:20.8616720Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-01-10T13:49:20.8616970Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-01-10T13:49:20.8617020Z Arrays are not equal
2025-01-10T13:49:20.8617020Z 
2025-01-10T13:49:20.8617080Z (shapes (4000, 62), (4000, 64) mismatch)
2025-01-10T13:49:20.8617190Z  ACTUAL: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:20.8617250Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:20.8617330Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:20.8617480Z  DESIRED: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-01-10T13:49:20.8617540Z         (-1, -1, -1), (-1, -1, -1)],
2025-01-10T13:49:20.8617610Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-01-10T13:49:20.8617930Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-01-10T13:49:20.8617990Z Not equal to tolerance rtol=0.01, atol=0
2025-01-10T13:49:20.8617990Z 
2025-01-10T13:49:20.8618050Z Mismatched elements: 33 / 100000 (0.033%)
2025-01-10T13:49:20.8618140Z Max absolute difference among violations: 2.00640487e-05
2025-01-10T13:49:20.8618230Z Max relative difference among violations: 2.11614526
2025-01-10T13:49:20.8618360Z  ACTUAL: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:20.8618420Z        -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:20.8618540Z  DESIRED: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-01-10T13:49:20.8618600Z        -9.757136e-06,  1.019764e-05])
2025-01-10T13:49:20.8618940Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-01-10T13:49:20.8619000Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8619000Z 
2025-01-10T13:49:20.8619060Z (shapes (515,), (508,) mismatch)
2025-01-10T13:49:20.8619170Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:20.8619250Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:20.8619340Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:20.8619450Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:20.8619530Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:20.8619610Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:20.8619960Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-01-10T13:49:20.8620020Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8620020Z 
2025-01-10T13:49:20.8620120Z (shapes (560,), (558,) mismatch)
2025-01-10T13:49:20.8620230Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:20.8620320Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:20.8620400Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:20.8620510Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:20.8620590Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:20.8620670Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:20.8621010Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-01-10T13:49:20.8621080Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8621080Z 
2025-01-10T13:49:20.8621140Z (shapes (136,), (147,) mismatch)
2025-01-10T13:49:20.8621250Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:20.8621340Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:20.8621420Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:20.8621530Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:20.8621610Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:20.8621700Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:20.8622030Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-01-10T13:49:20.8622140Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8622140Z 
2025-01-10T13:49:20.8622200Z (shapes (153,), (159,) mismatch)
2025-01-10T13:49:20.8622310Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:20.8622390Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:20.8622470Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:20.8622590Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:20.8622670Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:20.8622750Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:20.8623080Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-01-10T13:49:20.8623150Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8623150Z 
2025-01-10T13:49:20.8623210Z (shapes (515,), (508,) mismatch)
2025-01-10T13:49:20.8623310Z  ACTUAL: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-01-10T13:49:20.8623390Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-01-10T13:49:20.8623480Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-01-10T13:49:20.8623590Z  DESIRED: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-01-10T13:49:20.8623670Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-01-10T13:49:20.8623760Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-01-10T13:49:20.8624090Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-01-10T13:49:20.8624150Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8624150Z 
2025-01-10T13:49:20.8624210Z (shapes (1481,), (1466,) mismatch)
2025-01-10T13:49:20.8624320Z  ACTUAL: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-01-10T13:49:20.8624380Z        11398.237865, 11111.204868])
2025-01-10T13:49:20.8624500Z  DESIRED: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-01-10T13:49:20.8624550Z        11152.962595, 11172.044815])
2025-01-10T13:49:20.8625110Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-01-10T13:49:20.8625200Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8625200Z 
2025-01-10T13:49:20.8625250Z (shapes (136,), (147,) mismatch)
2025-01-10T13:49:20.8625360Z  ACTUAL: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-01-10T13:49:20.8625440Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-01-10T13:49:20.8625530Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-01-10T13:49:20.8625640Z  DESIRED: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-01-10T13:49:20.8625720Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-01-10T13:49:20.8625810Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-01-10T13:49:20.8626150Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-01-10T13:49:20.8626220Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8626220Z 
2025-01-10T13:49:20.8626270Z (shapes (381,), (379,) mismatch)
2025-01-10T13:49:20.8626380Z  ACTUAL: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-01-10T13:49:20.8626460Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-01-10T13:49:20.8626550Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-01-10T13:49:20.8626660Z  DESIRED: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-01-10T13:49:20.8626730Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-01-10T13:49:20.8626970Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-01-10T13:49:20.8627290Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-01-10T13:49:20.8627360Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8627360Z 
2025-01-10T13:49:20.8627420Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8627490Z Max absolute difference among violations: 26
2025-01-10T13:49:20.8627580Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8627700Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8627750Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8627860Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8627920Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8628230Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-01-10T13:49:20.8628290Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8628300Z 
2025-01-10T13:49:20.8628350Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8628430Z Max absolute difference among violations: 26
2025-01-10T13:49:20.8628510Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8628620Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8628670Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8628780Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8628840Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8629150Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-01-10T13:49:20.8629210Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8629220Z 
2025-01-10T13:49:20.8629270Z Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:20.8629340Z Max absolute difference among violations: 24
2025-01-10T13:49:20.8629410Z Max relative difference among violations: 0.65
2025-01-10T13:49:20.8629570Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:20.8629630Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8629740Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:20.8629800Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8630100Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-01-10T13:49:20.8630170Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8630170Z 
2025-01-10T13:49:20.8630220Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8630300Z Max absolute difference among violations: 26
2025-01-10T13:49:20.8630390Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8630500Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8630550Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8630660Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8630710Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8631010Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - AssertionError: 
2025-01-10T13:49:20.8631080Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8631090Z 
2025-01-10T13:49:20.8631140Z Mismatched elements: 2 / 40 (5%)
2025-01-10T13:49:20.8631210Z Max absolute difference among violations: 4.
2025-01-10T13:49:20.8631300Z Max relative difference among violations: 1.33333333
2025-01-10T13:49:20.8631350Z  ACTUAL: array([[1.10e+04, 9.00e+00],
2025-01-10T13:49:20.8631440Z        [1.19e+04, 9.00e+00],
2025-01-10T13:49:20.8631500Z        [1.19e+04, 5.00e+00],...
2025-01-10T13:49:20.8631550Z  DESIRED: array([[1.10e+04, 1.10e+01],
2025-01-10T13:49:20.8631600Z        [1.19e+04, 1.10e+01],
2025-01-10T13:49:20.8631650Z        [1.19e+04, 5.00e+00],...
2025-01-10T13:49:20.8631960Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T13:49:20.8632020Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8632030Z 
2025-01-10T13:49:20.8632080Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8632160Z Max absolute difference among violations: 26
2025-01-10T13:49:20.8632240Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8632350Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8632400Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8632510Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8632570Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8632880Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T13:49:20.8632940Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8632950Z 
2025-01-10T13:49:20.8633000Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8633070Z Max absolute difference among violations: 26
2025-01-10T13:49:20.8633160Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8633270Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8633320Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8633430Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8633480Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8633790Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T13:49:20.8633850Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8633850Z 
2025-01-10T13:49:20.8633910Z Mismatched elements: 4 / 20 (20%)
2025-01-10T13:49:20.8634020Z Max absolute difference among violations: 24
2025-01-10T13:49:20.8634090Z Max relative difference among violations: 0.65
2025-01-10T13:49:20.8634210Z  ACTUAL: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-01-10T13:49:20.8634250Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8634370Z  DESIRED: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-01-10T13:49:20.8634420Z          2,   5,   5,   5,   5,   0,   0])
2025-01-10T13:49:20.8634730Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T13:49:20.8634790Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8634800Z 
2025-01-10T13:49:20.8634860Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8634930Z Max absolute difference among violations: 26
2025-01-10T13:49:20.8635010Z Max relative difference among violations: 0.44067797
2025-01-10T13:49:20.8635120Z  ACTUAL: array([112, 112,  85,  85,  34,  34,  13,  13,  10,  10,   0,   0,   1,
2025-01-10T13:49:20.8635180Z          1,   2,   2,   0,   0,   0,   0])
2025-01-10T13:49:20.8635290Z  DESIRED: array([132, 132,  59,  59,  32,  32,  14,  14,   8,   8,   0,   0,   0,
2025-01-10T13:49:20.8635340Z          0,   1,   1,   0,   0,   0,   0])
2025-01-10T13:49:20.8635650Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T13:49:20.8635710Z Not equal to tolerance rtol=0.3, atol=3
2025-01-10T13:49:20.8635720Z 
2025-01-10T13:49:20.8635770Z Mismatched elements: 2 / 20 (10%)
2025-01-10T13:49:20.8635840Z Max absolute difference among violations: 4
2025-01-10T13:49:20.8635980Z Max relative difference among violations: 1.33333333
2025-01-10T13:49:20.8636080Z  ACTUAL: array([9, 9, 5, 5, 7, 7, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0])
2025-01-10T13:49:20.8636190Z  DESIRED: array([11, 11,  5,  5,  3,  3,  2,  2,  1,  1,  0,  0,  0,  0,  0,  0,  0,
2025-01-10T13:49:20.8636240Z         0,  0,  0])
2025-01-10T13:49:20.8636590Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-01-10T13:49:20.8636650Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8636650Z 
2025-01-10T13:49:20.8636710Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8636800Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8636890Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8637010Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8637070Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8637180Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8640700Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8641100Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-01-10T13:49:20.8641160Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8641170Z 
2025-01-10T13:49:20.8641220Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8641320Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8641400Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8641520Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8641580Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8641690Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8641740Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8642090Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-01-10T13:49:20.8642150Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8642330Z 
2025-01-10T13:49:20.8642390Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8642490Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8642570Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8642690Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8642740Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8642860Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8642910Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8643250Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-01-10T13:49:20.8643320Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8643320Z 
2025-01-10T13:49:20.8643380Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8643470Z Max absolute difference among violations: 4.3299331e-05
2025-01-10T13:49:20.8643560Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8643680Z  ACTUAL: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8643730Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8643850Z  DESIRED: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8643900Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8644240Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-01-10T13:49:20.8644310Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8644350Z 
2025-01-10T13:49:20.8644410Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8644510Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8644590Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8644720Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8644770Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8644890Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8644930Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8645280Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-01-10T13:49:20.8645350Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8645350Z 
2025-01-10T13:49:20.8645400Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8645500Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8645590Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8645710Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8645760Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8645880Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8645930Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8646270Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-01-10T13:49:20.8646340Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8646340Z 
2025-01-10T13:49:20.8646400Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8646490Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8646570Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8646690Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8646950Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8647070Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8647120Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8647750Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-01-10T13:49:20.8647820Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8647820Z 
2025-01-10T13:49:20.8647880Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8647970Z Max absolute difference among violations: 3.16368526e-05
2025-01-10T13:49:20.8648060Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8648180Z  ACTUAL: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8648220Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8648340Z  DESIRED: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-01-10T13:49:20.8648390Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8648740Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-01-10T13:49:20.8648810Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8648810Z 
2025-01-10T13:49:20.8648870Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8648970Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8649050Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8649170Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8649220Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8649340Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8649390Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8649890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-01-10T13:49:20.8649950Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8649960Z 
2025-01-10T13:49:20.8650020Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8650110Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8650200Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8650320Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8650370Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8650490Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8650540Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8650880Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-01-10T13:49:20.8650950Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8650950Z 
2025-01-10T13:49:20.8651010Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8651100Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8651190Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8651310Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8651360Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8651480Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8651530Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8651880Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-01-10T13:49:20.8651940Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8651940Z 
2025-01-10T13:49:20.8652010Z Mismatched elements: 604 / 1938 (31.2%)
2025-01-10T13:49:20.8652100Z Max absolute difference among violations: 5.1807441e+47
2025-01-10T13:49:20.8652190Z Max relative difference among violations: 4.03140103
2025-01-10T13:49:20.8652300Z  ACTUAL: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8652400Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8652520Z  DESIRED: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8652570Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8652920Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-01-10T13:49:20.8652980Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8652980Z 
2025-01-10T13:49:20.8653050Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8653140Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8653230Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8653350Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8653400Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8653520Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8653570Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8653920Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-01-10T13:49:20.8653980Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8653980Z 
2025-01-10T13:49:20.8654040Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8654130Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8654220Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8654340Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8654440Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8654550Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8654600Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8654950Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-01-10T13:49:20.8655010Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8655010Z 
2025-01-10T13:49:20.8655080Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8655170Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8655260Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8655370Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8655420Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8655540Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8655600Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8655940Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-01-10T13:49:20.8656000Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8656010Z 
2025-01-10T13:49:20.8656070Z Mismatched elements: 692 / 1938 (35.7%)
2025-01-10T13:49:20.8656160Z Max absolute difference among violations: 3.78533417e+47
2025-01-10T13:49:20.8656250Z Max relative difference among violations: 53038.42648305
2025-01-10T13:49:20.8656360Z  ACTUAL: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8656410Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8656530Z  DESIRED: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-01-10T13:49:20.8656590Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8656900Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-01-10T13:49:20.8656970Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8656970Z 
2025-01-10T13:49:20.8657040Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8657170Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8657260Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8657380Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8657430Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8657550Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8657600Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8657910Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-01-10T13:49:20.8657980Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8657980Z 
2025-01-10T13:49:20.8658040Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8658130Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8658220Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8658350Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8658400Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8658520Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8658570Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8658890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-01-10T13:49:20.8658950Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8658960Z 
2025-01-10T13:49:20.8659010Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8659100Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8659240Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8659360Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8659410Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8659530Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8659580Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8659890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-01-10T13:49:20.8659960Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8659960Z 
2025-01-10T13:49:20.8660020Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8660110Z Max absolute difference among violations: 2.08771842e-13
2025-01-10T13:49:20.8660190Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8660310Z  ACTUAL: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8660370Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8660480Z  DESIRED: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8660530Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8660840Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-01-10T13:49:20.8660910Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8660910Z 
2025-01-10T13:49:20.8660970Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8661060Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8661150Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8661270Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8661320Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8661440Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8661490Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8661810Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-01-10T13:49:20.8661910Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8661920Z 
2025-01-10T13:49:20.8661980Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8662070Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8662160Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8662280Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8662320Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8662440Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8662490Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8662810Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-01-10T13:49:20.8662880Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8662880Z 
2025-01-10T13:49:20.8662940Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8663030Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8663110Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8663230Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8663280Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8663400Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8663450Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8663760Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-01-10T13:49:20.8663860Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8663870Z 
2025-01-10T13:49:20.8663930Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8664020Z Max absolute difference among violations: 3.02728422e-13
2025-01-10T13:49:20.8664110Z Max relative difference among violations: 21416.68434824
2025-01-10T13:49:20.8664230Z  ACTUAL: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8664280Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8664400Z  DESIRED: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-01-10T13:49:20.8664440Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8664760Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-01-10T13:49:20.8664820Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8664830Z 
2025-01-10T13:49:20.8664890Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8664990Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8665070Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8665180Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8665230Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8665350Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8665400Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8665720Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-01-10T13:49:20.8665780Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8665780Z 
2025-01-10T13:49:20.8665850Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8665940Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8666020Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8666140Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8666200Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8666320Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8666680Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8667020Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-01-10T13:49:20.8667090Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8667090Z 
2025-01-10T13:49:20.8667150Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8667240Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8667330Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8667450Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8667500Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8667620Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8667670Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8667990Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-01-10T13:49:20.8668050Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8668050Z 
2025-01-10T13:49:20.8668120Z Mismatched elements: 446 / 1938 (23%)
2025-01-10T13:49:20.8668200Z Max absolute difference among violations: 2.49794504e+39
2025-01-10T13:49:20.8668290Z Max relative difference among violations: 3.03053629
2025-01-10T13:49:20.8668410Z  ACTUAL: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8668460Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8668580Z  DESIRED: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8668630Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8669220Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-01-10T13:49:20.8669290Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8669290Z 
2025-01-10T13:49:20.8669350Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8669440Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8669530Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8669650Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8669700Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8669810Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8669870Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8670190Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-01-10T13:49:20.8670250Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8670260Z 
2025-01-10T13:49:20.8670320Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8670410Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8670500Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8670610Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8670660Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8670780Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8670830Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8671140Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-01-10T13:49:20.8671210Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8671220Z 
2025-01-10T13:49:20.8671280Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8671370Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8671460Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8671570Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8671680Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8671800Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8671850Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8672160Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-01-10T13:49:20.8672230Z Not equal to tolerance rtol=1e-07, atol=0
2025-01-10T13:49:20.8672230Z 
2025-01-10T13:49:20.8672290Z Mismatched elements: 533 / 1938 (27.5%)
2025-01-10T13:49:20.8672380Z Max absolute difference among violations: 3.62213099e+39
2025-01-10T13:49:20.8672470Z Max relative difference among violations: 21416.6843355
2025-01-10T13:49:20.8672590Z  ACTUAL: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8672640Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8672760Z  DESIRED: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-01-10T13:49:20.8672810Z        0.000000e+00, 0.000000e+00])
2025-01-10T13:49:20.8673010Z = 275 failed, 1163 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 251 warnings in 722.33s (0:12:02) =
2025-01-10T13:49:22.3060960Z ##[error]Process completed with exit code 1.
2025-01-10T13:49:22.3203280Z Post job cleanup.
2025-01-10T13:49:22.3448110Z Post job cleanup.
2025-01-10T13:49:22.6636280Z Will use pre-installed micromamba at /Users/runner/micromamba-bin/micromamba
2025-01-10T13:49:22.6639730Z Removing micromamba run shell ...
2025-01-10T13:49:22.6642470Z ##[group]Deinitialize micromamba for bash
2025-01-10T13:49:22.6655310Z [command]/Users/runner/micromamba-bin/micromamba shell deinit -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-10T13:49:22.7462890Z Resetting RC file "/Users/runner/.bash_profile"
2025-01-10T13:49:22.7463280Z Deleting config for root prefix 
2025-01-10T13:49:22.7463650Z Clearing mamba executable environment variable
2025-01-10T13:49:22.7471690Z Removing the following in your "/Users/runner/.bash_profile" file
2025-01-10T13:49:22.7472170Z # >>> mamba initialize >>>
2025-01-10T13:49:22.7474120Z ...
2025-01-10T13:49:22.7474290Z # <<< mamba initialize <<<
2025-01-10T13:49:22.7528040Z Removing environment tardis from auto-activate bash ...
2025-01-10T13:49:22.7627590Z Post job cleanup.
2025-01-10T13:49:22.7690650Z Post job cleanup.
2025-01-10T13:49:22.9572360Z [command]/opt/homebrew/bin/git version
2025-01-10T13:49:22.9814470Z git version 2.47.1
2025-01-10T13:49:22.9841490Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/1d8b36b1-a670-4402-bfc9-9de5222d047f/.gitconfig'
2025-01-10T13:49:22.9857720Z Temporarily overriding HOME='/Users/runner/work/_temp/1d8b36b1-a670-4402-bfc9-9de5222d047f' before making global git config changes
2025-01-10T13:49:22.9858450Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:49:22.9861890Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-10T13:49:22.9954470Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:49:23.0031180Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:49:23.1103560Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:49:23.1150200Z http.https://github.com/.extraheader
2025-01-10T13:49:23.1160070Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T13:49:23.1230500Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:49:23.2010890Z Post job cleanup.
2025-01-10T13:49:23.4196520Z [command]/opt/homebrew/bin/git version
2025-01-10T13:49:23.4263190Z git version 2.47.1
2025-01-10T13:49:23.4388100Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/7ce88e36-c385-42ef-a0c1-5e5fa22be265/.gitconfig'
2025-01-10T13:49:23.4398510Z Temporarily overriding HOME='/Users/runner/work/_temp/7ce88e36-c385-42ef-a0c1-5e5fa22be265' before making global git config changes
2025-01-10T13:49:23.4399260Z Adding repository directory to the temporary git global config as a safe directory
2025-01-10T13:49:23.4399910Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-10T13:49:23.4401150Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-10T13:49:23.4402940Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-10T13:49:23.4819550Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-10T13:49:23.4905490Z http.https://github.com/.extraheader
2025-01-10T13:49:23.4915240Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-10T13:49:23.4916800Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-10T13:49:23.5450320Z Cleaning up orphan processes
