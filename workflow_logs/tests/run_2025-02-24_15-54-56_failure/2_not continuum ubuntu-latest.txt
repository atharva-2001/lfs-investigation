2025-02-24T15:55:32.0184574Z Requested labels: ubuntu-latest
2025-02-24T15:55:32.0184877Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2993/merge
2025-02-24T15:55:32.0184979Z Waiting for a runner to pick up this job...
2025-02-24T15:55:32.2630143Z Job is waiting for a hosted runner to come online.
2025-02-24T15:55:36.1285507Z Job is about to start running on the hosted runner: GitHub Actions 52 (hosted)
2025-02-24T15:55:37.8705069Z Current runner version: '2.322.0'
2025-02-24T15:55:37.8729779Z ##[group]Operating System
2025-02-24T15:55:37.8730624Z Ubuntu
2025-02-24T15:55:37.8731158Z 24.04.1
2025-02-24T15:55:37.8731690Z LTS
2025-02-24T15:55:37.8732230Z ##[endgroup]
2025-02-24T15:55:37.8732762Z ##[group]Runner Image
2025-02-24T15:55:37.8733318Z Image: ubuntu-24.04
2025-02-24T15:55:37.8733924Z Version: 20250209.1.0
2025-02-24T15:55:37.8734945Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250209.1/images/ubuntu/Ubuntu2404-Readme.md
2025-02-24T15:55:37.8736521Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250209.1
2025-02-24T15:55:37.8737562Z ##[endgroup]
2025-02-24T15:55:37.8738092Z ##[group]Runner Image Provisioner
2025-02-24T15:55:37.8738740Z 2.0.422.1
2025-02-24T15:55:37.8739268Z ##[endgroup]
2025-02-24T15:55:37.8741505Z ##[group]GITHUB_TOKEN Permissions
2025-02-24T15:55:37.8743513Z Actions: write
2025-02-24T15:55:37.8744211Z Attestations: write
2025-02-24T15:55:37.8744968Z Checks: write
2025-02-24T15:55:37.8745443Z Contents: write
2025-02-24T15:55:37.8746069Z Deployments: write
2025-02-24T15:55:37.8746764Z Discussions: write
2025-02-24T15:55:37.8747278Z Issues: write
2025-02-24T15:55:37.8747861Z Metadata: read
2025-02-24T15:55:37.8748378Z Packages: write
2025-02-24T15:55:37.8748964Z Pages: write
2025-02-24T15:55:37.8749492Z PullRequests: write
2025-02-24T15:55:37.8750044Z RepositoryProjects: write
2025-02-24T15:55:37.8750649Z SecurityEvents: write
2025-02-24T15:55:37.8751215Z Statuses: write
2025-02-24T15:55:37.8751742Z ##[endgroup]
2025-02-24T15:55:37.8754604Z Secret source: Actions
2025-02-24T15:55:37.8755317Z Prepare workflow directory
2025-02-24T15:55:37.9396146Z Prepare all required actions
2025-02-24T15:55:37.9433294Z Getting action download info
2025-02-24T15:55:38.2047626Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-02-24T15:55:38.2048540Z Version: 4.2.2
2025-02-24T15:55:38.2049388Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-02-24T15:55:38.2050460Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-02-24T15:55:38.2051078Z ##[endgroup]
2025-02-24T15:55:38.2922512Z ##[group]Download immutable action package 'actions/upload-artifact@v4'
2025-02-24T15:55:38.2923258Z Version: 4.6.1
2025-02-24T15:55:38.2923912Z Digest: sha256:3f6a28e7a1e0b5c8e2249e28da121a049fa5b91863b04390a46a82e4f8e2da98
2025-02-24T15:55:38.2924802Z Source commit SHA: 4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
2025-02-24T15:55:38.2925428Z ##[endgroup]
2025-02-24T15:55:38.6276476Z Complete job name: not continuum ubuntu-latest 
2025-02-24T15:55:38.6914098Z ##[group]Run actions/checkout@v4
2025-02-24T15:55:38.6914934Z with:
2025-02-24T15:55:38.6915346Z   repository: tardis-sn/tardis
2025-02-24T15:55:38.6915985Z   token: ***
2025-02-24T15:55:38.6916609Z   ssh-strict: true
2025-02-24T15:55:38.6917043Z   ssh-user: git
2025-02-24T15:55:38.6917472Z   persist-credentials: true
2025-02-24T15:55:38.6917940Z   clean: true
2025-02-24T15:55:38.6918377Z   sparse-checkout-cone-mode: true
2025-02-24T15:55:38.6918887Z   fetch-depth: 1
2025-02-24T15:55:38.6919295Z   fetch-tags: false
2025-02-24T15:55:38.6919722Z   show-progress: true
2025-02-24T15:55:38.6920160Z   lfs: false
2025-02-24T15:55:38.6920562Z   submodules: false
2025-02-24T15:55:38.6920996Z   set-safe-directory: true
2025-02-24T15:55:38.6921696Z env:
2025-02-24T15:55:38.6922074Z   CACHE_NUMBER: 0
2025-02-24T15:55:38.6923238Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:55:38.6924612Z   CODECOV_TOKEN: ***
2025-02-24T15:55:38.6925039Z ##[endgroup]
2025-02-24T15:55:38.9868642Z Syncing repository: tardis-sn/tardis
2025-02-24T15:55:38.9871393Z ##[group]Getting Git version info
2025-02-24T15:55:38.9872423Z Working directory is '/home/runner/work/tardis/tardis'
2025-02-24T15:55:38.9873453Z [command]/usr/bin/git version
2025-02-24T15:55:39.0004270Z git version 2.48.1
2025-02-24T15:55:39.0035003Z ##[endgroup]
2025-02-24T15:55:39.0050779Z Temporarily overriding HOME='/home/runner/work/_temp/da9bc4e5-98dc-4f2f-91a7-c7d01a5062a8' before making global git config changes
2025-02-24T15:55:39.0053202Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:55:39.0057489Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-24T15:55:39.0095061Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-02-24T15:55:39.0099346Z ##[group]Initializing the repository
2025-02-24T15:55:39.0103933Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-02-24T15:55:39.0205020Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T15:55:39.0206046Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T15:55:39.0207205Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T15:55:39.0207887Z hint:
2025-02-24T15:55:39.0208471Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T15:55:39.0209354Z hint:
2025-02-24T15:55:39.0209933Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T15:55:39.0210831Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T15:55:39.0211533Z hint:
2025-02-24T15:55:39.0211917Z hint: 	git branch -m <name>
2025-02-24T15:55:39.0217116Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-02-24T15:55:39.0227500Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-02-24T15:55:39.0264829Z ##[endgroup]
2025-02-24T15:55:39.0265723Z ##[group]Disabling automatic garbage collection
2025-02-24T15:55:39.0270365Z [command]/usr/bin/git config --local gc.auto 0
2025-02-24T15:55:39.0373822Z ##[endgroup]
2025-02-24T15:55:39.0377467Z ##[group]Setting up auth
2025-02-24T15:55:39.0378510Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:55:39.0380679Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:55:39.0760941Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:55:39.0793678Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:55:39.1039996Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T15:55:39.1079184Z ##[endgroup]
2025-02-24T15:55:39.1080478Z ##[group]Fetching the repository
2025-02-24T15:55:39.1089505Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +c745ff0f96bdd17efa39f053edc3a4bee1f4c6e2:refs/remotes/pull/2993/merge
2025-02-24T15:55:40.3400864Z From https://github.com/tardis-sn/tardis
2025-02-24T15:55:40.3401740Z  * [new ref]         c745ff0f96bdd17efa39f053edc3a4bee1f4c6e2 -> pull/2993/merge
2025-02-24T15:55:40.3428188Z ##[endgroup]
2025-02-24T15:55:40.3428821Z ##[group]Determining the checkout info
2025-02-24T15:55:40.3430329Z ##[endgroup]
2025-02-24T15:55:40.3435288Z [command]/usr/bin/git sparse-checkout disable
2025-02-24T15:55:40.3475809Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T15:55:40.3502465Z ##[group]Checking out the ref
2025-02-24T15:55:40.3506004Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2993/merge
2025-02-24T15:55:40.5525781Z Note: switching to 'refs/remotes/pull/2993/merge'.
2025-02-24T15:55:40.5526640Z 
2025-02-24T15:55:40.5527043Z You are in 'detached HEAD' state. You can look around, make experimental
2025-02-24T15:55:40.5528021Z changes and commit them, and you can discard any commits you make in this
2025-02-24T15:55:40.5529458Z state without impacting any branches by switching back to a branch.
2025-02-24T15:55:40.5530038Z 
2025-02-24T15:55:40.5530414Z If you want to create a new branch to retain commits you create, you may
2025-02-24T15:55:40.5531275Z do so (now or later) by using -c with the switch command. Example:
2025-02-24T15:55:40.5531823Z 
2025-02-24T15:55:40.5532050Z   git switch -c <new-branch-name>
2025-02-24T15:55:40.5532454Z 
2025-02-24T15:55:40.5532667Z Or undo this operation with:
2025-02-24T15:55:40.5532994Z 
2025-02-24T15:55:40.5533200Z   git switch -
2025-02-24T15:55:40.5533401Z 
2025-02-24T15:55:40.5533692Z Turn off this advice by setting config variable advice.detachedHead to false
2025-02-24T15:55:40.5534061Z 
2025-02-24T15:55:40.5534481Z HEAD is now at c745ff0 Merge a21a41705327962fe7bbade8282837587ee2e802 into 6e790c66049717c1a7df370212bf7063c85b7fdd
2025-02-24T15:55:40.5549540Z ##[endgroup]
2025-02-24T15:55:40.5591608Z [command]/usr/bin/git log -1 --format=%H
2025-02-24T15:55:40.5614640Z c745ff0f96bdd17efa39f053edc3a4bee1f4c6e2
2025-02-24T15:55:40.5886831Z Prepare all required actions
2025-02-24T15:55:40.5887374Z Getting action download info
2025-02-24T15:55:40.7900601Z ##[group]Download immutable action package 'actions/cache@v4'
2025-02-24T15:55:40.7901113Z Version: 4.2.1
2025-02-24T15:55:40.7901581Z Digest: sha256:b0404c9628d43aa6855629075b28f32cadf8efc5c26198438149f78500112940
2025-02-24T15:55:40.7902211Z Source commit SHA: 0c907a75c2c80ebcb7f088228285e798b750cf8f
2025-02-24T15:55:40.7902651Z ##[endgroup]
2025-02-24T15:55:41.0660166Z ##[group]Run ./.github/actions/setup_lfs
2025-02-24T15:55:41.0660518Z with:
2025-02-24T15:55:41.0660823Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-02-24T15:55:41.0661195Z   atom-data-sparse: false
2025-02-24T15:55:41.0661453Z env:
2025-02-24T15:55:41.0661666Z   CACHE_NUMBER: 0
2025-02-24T15:55:41.0662326Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:55:41.0663266Z   CODECOV_TOKEN: ***
2025-02-24T15:55:41.0663518Z ##[endgroup]
2025-02-24T15:55:41.0814230Z ##[group]Run actions/checkout@v4
2025-02-24T15:55:41.0814525Z with:
2025-02-24T15:55:41.0814804Z   repository: tardis-sn/tardis-regression-data
2025-02-24T15:55:41.0815155Z   path: tardis-regression-data
2025-02-24T15:55:41.0815437Z   lfs: false
2025-02-24T15:55:41.0815809Z   token: ***
2025-02-24T15:55:41.0816067Z   ssh-strict: true
2025-02-24T15:55:41.0816444Z   ssh-user: git
2025-02-24T15:55:41.0816701Z   persist-credentials: true
2025-02-24T15:55:41.0816972Z   clean: true
2025-02-24T15:55:41.0817224Z   sparse-checkout-cone-mode: true
2025-02-24T15:55:41.0817511Z   fetch-depth: 1
2025-02-24T15:55:41.0817747Z   fetch-tags: false
2025-02-24T15:55:41.0817987Z   show-progress: true
2025-02-24T15:55:41.0818234Z   submodules: false
2025-02-24T15:55:41.0818482Z   set-safe-directory: true
2025-02-24T15:55:41.0818747Z env:
2025-02-24T15:55:41.0818957Z   CACHE_NUMBER: 0
2025-02-24T15:55:41.0819646Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:55:41.0820400Z   CODECOV_TOKEN: ***
2025-02-24T15:55:41.0820665Z ##[endgroup]
2025-02-24T15:55:41.1746926Z Syncing repository: tardis-sn/tardis-regression-data
2025-02-24T15:55:41.1753318Z ##[group]Getting Git version info
2025-02-24T15:55:41.1754132Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-02-24T15:55:41.1797152Z [command]/usr/bin/git version
2025-02-24T15:55:41.1839513Z git version 2.48.1
2025-02-24T15:55:41.1864988Z ##[endgroup]
2025-02-24T15:55:41.1879068Z Temporarily overriding HOME='/home/runner/work/_temp/59c84472-91f3-499f-bc63-3e5f74626a5f' before making global git config changes
2025-02-24T15:55:41.1880532Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:55:41.1885421Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:55:41.1915548Z ##[group]Initializing the repository
2025-02-24T15:55:41.1921248Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:55:41.1986631Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T15:55:41.1987697Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T15:55:41.1988600Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T15:55:41.1989221Z hint:
2025-02-24T15:55:41.1989556Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T15:55:41.1989912Z hint:
2025-02-24T15:55:41.1990268Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T15:55:41.1990833Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T15:55:41.1991228Z hint:
2025-02-24T15:55:41.1991488Z hint: 	git branch -m <name>
2025-02-24T15:55:41.1992278Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-02-24T15:55:41.2000780Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-02-24T15:55:41.2029719Z ##[endgroup]
2025-02-24T15:55:41.2030530Z ##[group]Disabling automatic garbage collection
2025-02-24T15:55:41.2035181Z [command]/usr/bin/git config --local gc.auto 0
2025-02-24T15:55:41.2064971Z ##[endgroup]
2025-02-24T15:55:41.2065849Z ##[group]Setting up auth
2025-02-24T15:55:41.2072492Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:55:41.2101812Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:55:41.2322457Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:55:41.2350355Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:55:41.2574613Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T15:55:41.2610166Z ##[endgroup]
2025-02-24T15:55:41.2611054Z ##[group]Determining the default branch
2025-02-24T15:55:41.2614331Z Retrieving the default branch name
2025-02-24T15:55:41.4878674Z Default branch 'main'
2025-02-24T15:55:41.4879599Z ##[endgroup]
2025-02-24T15:55:41.4880273Z ##[group]Fetching the repository
2025-02-24T15:55:41.4886456Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-02-24T15:55:41.8965681Z From https://github.com/tardis-sn/tardis-regression-data
2025-02-24T15:55:41.8966748Z  * [new branch]      main       -> origin/main
2025-02-24T15:55:41.8994502Z ##[endgroup]
2025-02-24T15:55:41.8995200Z ##[group]Determining the checkout info
2025-02-24T15:55:41.8996082Z ##[endgroup]
2025-02-24T15:55:41.9001979Z [command]/usr/bin/git sparse-checkout disable
2025-02-24T15:55:41.9039645Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T15:55:41.9068076Z ##[group]Checking out the ref
2025-02-24T15:55:41.9073184Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-02-24T15:55:43.0317078Z Updating files:   3% (8/238)
2025-02-24T15:55:43.0319769Z Updating files:   4% (10/238)
2025-02-24T15:55:43.0616413Z Updating files:   5% (12/238)
2025-02-24T15:55:43.0620132Z Updating files:   6% (15/238)
2025-02-24T15:55:43.0627513Z Updating files:   7% (17/238)
2025-02-24T15:55:43.0634404Z Updating files:   8% (20/238)
2025-02-24T15:55:43.0640759Z Updating files:   9% (22/238)
2025-02-24T15:55:43.0647236Z Updating files:  10% (24/238)
2025-02-24T15:55:43.0651286Z Updating files:  11% (27/238)
2025-02-24T15:55:43.0655340Z Updating files:  12% (29/238)
2025-02-24T15:55:43.0661585Z Updating files:  13% (31/238)
2025-02-24T15:55:43.0665507Z Updating files:  14% (34/238)
2025-02-24T15:55:43.0755808Z Updating files:  15% (36/238)
2025-02-24T15:55:43.0760218Z Updating files:  16% (39/238)
2025-02-24T15:55:43.0764350Z Updating files:  17% (41/238)
2025-02-24T15:55:43.0769108Z Updating files:  18% (43/238)
2025-02-24T15:55:43.0771630Z Updating files:  19% (46/238)
2025-02-24T15:55:43.0775822Z Updating files:  20% (48/238)
2025-02-24T15:55:43.0782511Z Updating files:  21% (50/238)
2025-02-24T15:55:43.0786819Z Updating files:  22% (53/238)
2025-02-24T15:55:43.0793916Z Updating files:  23% (55/238)
2025-02-24T15:55:43.0799422Z Updating files:  24% (58/238)
2025-02-24T15:55:43.0855312Z Updating files:  25% (60/238)
2025-02-24T15:55:43.0861517Z Updating files:  26% (62/238)
2025-02-24T15:55:43.0865523Z Updating files:  27% (65/238)
2025-02-24T15:55:43.0871417Z Updating files:  28% (67/238)
2025-02-24T15:55:43.0875235Z Updating files:  29% (70/238)
2025-02-24T15:55:43.0879525Z Updating files:  30% (72/238)
2025-02-24T15:55:43.0884348Z Updating files:  31% (74/238)
2025-02-24T15:55:43.0888820Z Updating files:  32% (77/238)
2025-02-24T15:55:43.0893150Z Updating files:  33% (79/238)
2025-02-24T15:55:43.0902240Z Updating files:  34% (81/238)
2025-02-24T15:55:43.0906801Z Updating files:  35% (84/238)
2025-02-24T15:55:43.0915438Z Updating files:  36% (86/238)
2025-02-24T15:55:43.0920823Z Updating files:  37% (89/238)
2025-02-24T15:55:43.0926618Z Updating files:  38% (91/238)
2025-02-24T15:55:43.0933419Z Updating files:  39% (93/238)
2025-02-24T15:55:43.0937870Z Updating files:  40% (96/238)
2025-02-24T15:55:43.0942260Z Updating files:  41% (98/238)
2025-02-24T15:55:43.0953452Z Updating files:  42% (100/238)
2025-02-24T15:55:43.0960823Z Updating files:  43% (103/238)
2025-02-24T15:55:43.0965587Z Updating files:  44% (105/238)
2025-02-24T15:55:43.0969962Z Updating files:  45% (108/238)
2025-02-24T15:55:43.0975042Z Updating files:  46% (110/238)
2025-02-24T15:55:43.0981896Z Updating files:  47% (112/238)
2025-02-24T15:55:43.0986128Z Updating files:  48% (115/238)
2025-02-24T15:55:43.0990835Z Updating files:  49% (117/238)
2025-02-24T15:55:43.1198266Z Updating files:  50% (119/238)
2025-02-24T15:55:43.1203421Z Updating files:  51% (122/238)
2025-02-24T15:55:43.1208775Z Updating files:  52% (124/238)
2025-02-24T15:55:43.1213503Z Updating files:  53% (127/238)
2025-02-24T15:55:43.1216470Z Updating files:  54% (129/238)
2025-02-24T15:55:43.1223294Z Updating files:  55% (131/238)
2025-02-24T15:55:43.1227550Z Updating files:  56% (134/238)
2025-02-24T15:55:43.1234699Z Updating files:  57% (136/238)
2025-02-24T15:55:43.1240988Z Updating files:  58% (139/238)
2025-02-24T15:55:43.1244487Z Updating files:  59% (141/238)
2025-02-24T15:55:43.1250689Z Updating files:  60% (143/238)
2025-02-24T15:55:43.1254249Z Updating files:  61% (146/238)
2025-02-24T15:55:43.1258633Z Updating files:  62% (148/238)
2025-02-24T15:55:43.1265715Z Updating files:  63% (150/238)
2025-02-24T15:55:43.1270870Z Updating files:  64% (153/238)
2025-02-24T15:55:43.1276487Z Updating files:  65% (155/238)
2025-02-24T15:55:43.1281325Z Updating files:  66% (158/238)
2025-02-24T15:55:43.1285461Z Updating files:  67% (160/238)
2025-02-24T15:55:43.1291825Z Updating files:  68% (162/238)
2025-02-24T15:55:43.1297084Z Updating files:  69% (165/238)
2025-02-24T15:55:43.1301454Z Updating files:  70% (167/238)
2025-02-24T15:55:43.1306076Z Updating files:  71% (169/238)
2025-02-24T15:55:43.1308902Z Updating files:  72% (172/238)
2025-02-24T15:55:43.1313203Z Updating files:  73% (174/238)
2025-02-24T15:55:43.1315730Z Updating files:  74% (177/238)
2025-02-24T15:55:43.1319385Z Updating files:  75% (179/238)
2025-02-24T15:55:43.1322968Z Updating files:  76% (181/238)
2025-02-24T15:55:43.1327279Z Updating files:  77% (184/238)
2025-02-24T15:55:43.1334642Z Updating files:  78% (186/238)
2025-02-24T15:55:43.1338003Z Updating files:  79% (189/238)
2025-02-24T15:55:43.1341123Z Updating files:  80% (191/238)
2025-02-24T15:55:43.1345478Z Updating files:  81% (193/238)
2025-02-24T15:55:43.1350017Z Updating files:  82% (196/238)
2025-02-24T15:55:43.1352799Z Updating files:  83% (198/238)
2025-02-24T15:55:43.1357157Z Updating files:  84% (200/238)
2025-02-24T15:55:43.1362828Z Updating files:  85% (203/238)
2025-02-24T15:55:43.1369565Z Updating files:  86% (205/238)
2025-02-24T15:55:43.1372342Z Updating files:  87% (208/238)
2025-02-24T15:55:43.1375923Z Updating files:  88% (210/238)
2025-02-24T15:55:43.1380751Z Updating files:  89% (212/238)
2025-02-24T15:55:43.1383588Z Updating files:  90% (215/238)
2025-02-24T15:55:43.1387909Z Updating files:  91% (217/238)
2025-02-24T15:55:43.1394190Z Updating files:  92% (219/238)
2025-02-24T15:55:43.1398820Z Updating files:  93% (222/238)
2025-02-24T15:55:43.1404299Z Updating files:  94% (224/238)
2025-02-24T15:55:43.1407492Z Updating files:  95% (227/238)
2025-02-24T15:55:43.1410614Z Updating files:  96% (229/238)
2025-02-24T15:55:43.1415806Z Updating files:  97% (231/238)
2025-02-24T15:55:43.1420023Z Updating files:  98% (234/238)
2025-02-24T15:55:43.1423387Z Updating files:  99% (236/238)
2025-02-24T15:55:43.1423949Z Updating files: 100% (238/238)
2025-02-24T15:55:43.1424336Z Updating files: 100% (238/238), done.
2025-02-24T15:55:43.1438782Z Switched to a new branch 'main'
2025-02-24T15:55:43.1442047Z branch 'main' set up to track 'origin/main'.
2025-02-24T15:55:43.1702306Z ##[endgroup]
2025-02-24T15:55:43.1742341Z [command]/usr/bin/git log -1 --format=%H
2025-02-24T15:55:43.1765508Z b2fdf418ac1a3631f8c3d2a5f392b6ebfa09ba0b
2025-02-24T15:55:43.1926796Z ##[group]Run if [ "false" == "true" ]; then
2025-02-24T15:55:43.1927166Z [36;1mif [ "false" == "true" ]; then[0m
2025-02-24T15:55:43.1927474Z [36;1m  echo "Using atom data sparse checkout"[0m
2025-02-24T15:55:43.1927850Z [36;1m  echo "atom_data/kurucz_cd23_chianti_H_He.h5" > .lfs-files-list[0m
2025-02-24T15:55:43.1928178Z [36;1melse[0m
2025-02-24T15:55:43.1928393Z [36;1m  echo "Using full repository checkout"[0m
2025-02-24T15:55:43.1928785Z [36;1m  git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-files-list[0m
2025-02-24T15:55:43.1929101Z [36;1mfi[0m
2025-02-24T15:55:43.2082352Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:55:43.2082723Z env:
2025-02-24T15:55:43.2082902Z   CACHE_NUMBER: 0
2025-02-24T15:55:43.2083534Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:55:43.2084351Z   CODECOV_TOKEN: ***
2025-02-24T15:55:43.2084557Z ##[endgroup]
2025-02-24T15:55:43.2178657Z Using full repository checkout
2025-02-24T15:55:43.3546745Z ##[group]Run actions/cache/restore@v4
2025-02-24T15:55:43.3547081Z with:
2025-02-24T15:55:43.3547341Z   path: tardis-regression-data/.git/lfs
2025-02-24T15:55:43.3548215Z   key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:55:43.3549082Z   fail-on-cache-miss: true
2025-02-24T15:55:43.3549415Z   enableCrossOsArchive: false
2025-02-24T15:55:43.3549716Z   lookup-only: false
2025-02-24T15:55:43.3549966Z env:
2025-02-24T15:55:43.3550187Z   CACHE_NUMBER: 0
2025-02-24T15:55:43.3550980Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:55:43.3552054Z   CODECOV_TOKEN: ***
2025-02-24T15:55:43.3552284Z ##[endgroup]
2025-02-24T15:55:43.5921657Z Cache hit for: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:55:44.7223092Z Received 163577856 of 2160718086 (7.6%), 156.0 MBs/sec
2025-02-24T15:55:45.7254280Z Received 402653184 of 2160718086 (18.6%), 191.8 MBs/sec
2025-02-24T15:55:46.7255083Z Received 637534208 of 2160718086 (29.5%), 202.4 MBs/sec
2025-02-24T15:55:47.7267627Z Received 838860800 of 2160718086 (38.8%), 199.8 MBs/sec
2025-02-24T15:55:48.7260778Z Received 1061158912 of 2160718086 (49.1%), 202.2 MBs/sec
2025-02-24T15:55:49.7281296Z Received 1212153856 of 2160718086 (56.1%), 192.5 MBs/sec
2025-02-24T15:55:50.7287613Z Received 1421869056 of 2160718086 (65.8%), 193.5 MBs/sec
2025-02-24T15:55:51.7464881Z Received 1610612736 of 2160718086 (74.5%), 191.4 MBs/sec
2025-02-24T15:55:52.7455743Z Received 1828716544 of 2160718086 (84.6%), 193.3 MBs/sec
2025-02-24T15:55:53.7502925Z Received 2034237440 of 2160718086 (94.1%), 193.4 MBs/sec
2025-02-24T15:55:54.3884624Z Received 2160718086 of 2160718086 (100.0%), 193.2 MBs/sec
2025-02-24T15:55:54.3887516Z Cache Size: ~2061 MB (2160718086 B)
2025-02-24T15:55:54.4002320Z [command]/usr/bin/tar -xf /home/runner/work/_temp/1592c9e2-621e-406b-b321-bb01d2ce3075/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T15:56:05.6649840Z Cache restored successfully
2025-02-24T15:56:06.0507429Z Cache restored from key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:56:06.0642398Z ##[group]Run git lfs checkout
2025-02-24T15:56:06.0642677Z [36;1mgit lfs checkout[0m
2025-02-24T15:56:06.0698333Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:56:06.0698670Z env:
2025-02-24T15:56:06.0698842Z   CACHE_NUMBER: 0
2025-02-24T15:56:06.0699466Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:06.0700281Z   CODECOV_TOKEN: ***
2025-02-24T15:56:06.0700486Z ##[endgroup]
2025-02-24T15:56:26.2736692Z Checking out LFS objects: 100% (204/204), 5.7 GB | 250 MB/s, done.
2025-02-24T15:56:29.9321722Z Prepare all required actions
2025-02-24T15:56:29.9322089Z Getting action download info
2025-02-24T15:56:30.0458428Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-02-24T15:56:30.3922897Z ##[group]Run ./.github/actions/setup_env
2025-02-24T15:56:30.3923183Z with:
2025-02-24T15:56:30.3923384Z   os-label: linux-64
2025-02-24T15:56:30.3923577Z env:
2025-02-24T15:56:30.3923746Z   CACHE_NUMBER: 0
2025-02-24T15:56:30.3924364Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:30.3925139Z   CODECOV_TOKEN: ***
2025-02-24T15:56:30.3925330Z ##[endgroup]
2025-02-24T15:56:30.3947201Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-02-24T15:56:30.3947706Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-02-24T15:56:30.3948291Z [36;1mecho "file_hash=tardis-conda-env-linux-64-${file_hash}-v1" >> "${GITHUB_OUTPUT}"[0m
2025-02-24T15:56:30.4006935Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:56:30.4007264Z env:
2025-02-24T15:56:30.4007441Z   CACHE_NUMBER: 0
2025-02-24T15:56:30.4008069Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:30.4008849Z   CODECOV_TOKEN: ***
2025-02-24T15:56:30.4009053Z ##[endgroup]
2025-02-24T15:56:30.4453413Z ##[group]Run mamba-org/setup-micromamba@v1
2025-02-24T15:56:30.4453685Z with:
2025-02-24T15:56:30.4453885Z   environment-file: conda-linux-64.lock
2025-02-24T15:56:30.4454460Z   cache-environment-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-24T15:56:30.4455306Z   cache-downloads-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-24T15:56:30.4455869Z   environment-name: tardis
2025-02-24T15:56:30.4456110Z   cache-environment: true
2025-02-24T15:56:30.4456524Z   cache-downloads: true
2025-02-24T15:56:30.4456743Z env:
2025-02-24T15:56:30.4456914Z   CACHE_NUMBER: 0
2025-02-24T15:56:30.4457526Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:30.4458478Z   CODECOV_TOKEN: ***
2025-02-24T15:56:30.4458683Z ##[endgroup]
2025-02-24T15:56:30.5956994Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-02-24T15:56:30.5969220Z ##[group]Install micromamba
2025-02-24T15:56:30.8955958Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-02-24T15:56:30.8957035Z ##[endgroup]
2025-02-24T15:56:30.8958161Z Adding conda-forge to condarc channels ...
2025-02-24T15:56:30.8971589Z ##[group]Initialize micromamba for bash.
2025-02-24T15:56:30.8995855Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:56:30.9173847Z Modifying RC file "/home/runner/.bashrc"
2025-02-24T15:56:30.9175501Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-02-24T15:56:30.9176807Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-02-24T15:56:30.9177534Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-02-24T15:56:30.9177884Z 
2025-02-24T15:56:30.9177989Z # >>> mamba initialize >>>
2025-02-24T15:56:30.9178351Z # !! Contents within this block are managed by 'mamba init' !!
2025-02-24T15:56:30.9178828Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-02-24T15:56:30.9179271Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-02-24T15:56:30.9179894Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-02-24T15:56:30.9180448Z if [ $? -eq 0 ]; then
2025-02-24T15:56:30.9180965Z     eval "$__mamba_setup"
2025-02-24T15:56:30.9181228Z else
2025-02-24T15:56:30.9181571Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-02-24T15:56:30.9181998Z fi
2025-02-24T15:56:30.9182207Z unset __mamba_setup
2025-02-24T15:56:30.9182458Z # <<< mamba initialize <<<
2025-02-24T15:56:30.9182638Z 
2025-02-24T15:56:30.9194681Z Moving mamba initialize block to .bash_profile
2025-02-24T15:56:30.9208060Z ##[endgroup]
2025-02-24T15:56:30.9209247Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-02-24T15:56:32.1762497Z Received 205520896 of 356815776 (57.6%), 196.0 MBs/sec
2025-02-24T15:56:32.7470672Z Cache Size: ~340 MB (356815776 B)
2025-02-24T15:56:32.7536773Z [command]/usr/bin/tar -xf /home/runner/work/_temp/d9a8dbb8-9df8-40e7-9076-157ee73f5032/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T15:56:33.1765235Z Received 356815776 of 356815776 (100.0%), 170.1 MBs/sec
2025-02-24T15:56:33.2444120Z Cache restored successfully
2025-02-24T15:56:33.3185943Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64`
2025-02-24T15:56:33.3187246Z ##[endgroup]
2025-02-24T15:56:33.3198125Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-02-24T15:56:34.4540467Z Received 192937984 of 444032293 (43.5%), 183.8 MBs/sec
2025-02-24T15:56:35.4550948Z Received 439837989 of 444032293 (99.1%), 209.5 MBs/sec
2025-02-24T15:56:35.4693857Z Cache Size: ~423 MB (444032293 B)
2025-02-24T15:56:35.4731430Z [command]/usr/bin/tar -xf /home/runner/work/_temp/49d13a71-47d9-46a1-8bcc-067e0118cfac/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T15:56:36.4560937Z Received 444032293 of 444032293 (100.0%), 141.0 MBs/sec
2025-02-24T15:56:40.6630308Z Cache restored successfully
2025-02-24T15:56:40.7520746Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-02-24T15:56:40.7523571Z ##[endgroup]
2025-02-24T15:56:40.7524065Z Adding environment tardis to auto-activate bash ...
2025-02-24T15:56:40.7534517Z Generating micromamba run shell.
2025-02-24T15:56:40.7546198Z ##[endgroup]
2025-02-24T15:56:40.7551819Z Set environment variables.
2025-02-24T15:56:40.7555513Z ##[group]micromamba info
2025-02-24T15:56:40.7559179Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-02-24T15:56:40.7800693Z 
2025-02-24T15:56:40.7801022Z        libmamba version : 1.5.10
2025-02-24T15:56:40.7801475Z      micromamba version : 1.5.10
2025-02-24T15:56:40.7802073Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-02-24T15:56:40.7802639Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-02-24T15:56:40.7803099Z        envs directories : /home/runner/micromamba/envs
2025-02-24T15:56:40.7803470Z           package cache : /home/runner/micromamba/pkgs
2025-02-24T15:56:40.7803792Z                           /home/runner/.mamba/pkgs
2025-02-24T15:56:40.7804093Z             environment : tardis
2025-02-24T15:56:40.7804437Z            env location : /home/runner/micromamba/envs/tardis
2025-02-24T15:56:40.7804792Z       user config files : /home/runner/.mambarc
2025-02-24T15:56:40.7805228Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:56:40.7805659Z        virtual packages : __unix=0=0
2025-02-24T15:56:40.7805955Z                           __linux=6.8.0=0
2025-02-24T15:56:40.7806238Z                           __glibc=2.39=0
2025-02-24T15:56:40.7806735Z                           __archspec=1=x86_64_v3
2025-02-24T15:56:40.7807142Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-02-24T15:56:40.7807920Z                           https://conda.anaconda.org/conda-forge/noarch
2025-02-24T15:56:40.7808307Z        base environment : /home/runner/micromamba
2025-02-24T15:56:40.7808711Z                platform : linux-64
2025-02-24T15:56:40.7818711Z ##[endgroup]
2025-02-24T15:56:40.7819376Z ##[group]micromamba list
2025-02-24T15:56:40.7820841Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-02-24T15:56:41.1765998Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-02-24T15:56:41.1767144Z 
2025-02-24T15:56:41.1767539Z   Name                           Version              Build                    Channel    
2025-02-24T15:56:41.1769152Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-02-24T15:56:41.1769805Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-02-24T15:56:41.1770466Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-02-24T15:56:41.1771138Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1771746Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1772224Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1772814Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-02-24T15:56:41.1773330Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1773784Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-02-24T15:56:41.1774324Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1774910Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1775448Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1775934Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1776657Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-02-24T15:56:41.1777470Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-02-24T15:56:41.1777947Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1778597Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-02-24T15:56:41.1779103Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1779558Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-02-24T15:56:41.1779999Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-02-24T15:56:41.1780465Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-02-24T15:56:41.1780963Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-02-24T15:56:41.1781448Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-02-24T15:56:41.1781893Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-02-24T15:56:41.1782343Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-02-24T15:56:41.1782758Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-02-24T15:56:41.1783192Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-02-24T15:56:41.1783610Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-02-24T15:56:41.1784125Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-02-24T15:56:41.1784494Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1784846Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-02-24T15:56:41.1785223Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1785611Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-02-24T15:56:41.1785967Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1786523Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1786893Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1787247Z   commonmark                     0.9.1                py_0                     conda-forge
2025-02-24T15:56:41.1787623Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-02-24T15:56:41.1787988Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-02-24T15:56:41.1788340Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1788707Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-02-24T15:56:41.1789073Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-02-24T15:56:41.1789437Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1789809Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1790176Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-02-24T15:56:41.1790543Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1790913Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1791306Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-02-24T15:56:41.1791694Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1792186Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-02-24T15:56:41.1792581Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-02-24T15:56:41.1793032Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-02-24T15:56:41.1793479Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-02-24T15:56:41.1793910Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-02-24T15:56:41.1794304Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-02-24T15:56:41.1794715Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-02-24T15:56:41.1795125Z   fonts-conda-forge              1                    0                        conda-forge
2025-02-24T15:56:41.1795521Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-02-24T15:56:41.1795878Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1796231Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-02-24T15:56:41.1796759Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-02-24T15:56:41.1797111Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1797683Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-02-24T15:56:41.1798057Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-02-24T15:56:41.1798402Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-02-24T15:56:41.1798732Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-02-24T15:56:41.1799067Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-02-24T15:56:41.1799422Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-02-24T15:56:41.1799784Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-02-24T15:56:41.1800314Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-02-24T15:56:41.1800855Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-02-24T15:56:41.1801414Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1802011Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1802615Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-02-24T15:56:41.1803236Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-02-24T15:56:41.1803848Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-02-24T15:56:41.1804414Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-02-24T15:56:41.1804995Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1805608Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1806499Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1807158Z   icu                            73.2                 h59595ed_0               conda-forge
2025-02-24T15:56:41.1807764Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1808329Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1809491Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-02-24T15:56:41.1810136Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-02-24T15:56:41.1810884Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1811581Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1812206Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-02-24T15:56:41.1812783Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-02-24T15:56:41.1813272Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1813968Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1814663Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1815254Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1815792Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1816501Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1817095Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-02-24T15:56:41.1817944Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1818652Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1819497Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1820165Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1820799Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1821437Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-02-24T15:56:41.1822031Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1822640Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1823306Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1823920Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1824318Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1824732Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1825149Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1825527Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-02-24T15:56:41.1825884Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-02-24T15:56:41.1826238Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-02-24T15:56:41.1826792Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-02-24T15:56:41.1827144Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-02-24T15:56:41.1827494Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-02-24T15:56:41.1827847Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-02-24T15:56:41.1828176Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-02-24T15:56:41.1828682Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-02-24T15:56:41.1829059Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-02-24T15:56:41.1829446Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-02-24T15:56:41.1829818Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-02-24T15:56:41.1830190Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-02-24T15:56:41.1830544Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-02-24T15:56:41.1830898Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-02-24T15:56:41.1831268Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-02-24T15:56:41.1831632Z   libev                          4.33                 hd590300_2               conda-forge
2025-02-24T15:56:41.1831971Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-02-24T15:56:41.1832410Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-02-24T15:56:41.1832758Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-02-24T15:56:41.1833097Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-02-24T15:56:41.1833480Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-02-24T15:56:41.1834051Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-02-24T15:56:41.1834444Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-02-24T15:56:41.1834805Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-02-24T15:56:41.1835174Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-02-24T15:56:41.1835540Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-02-24T15:56:41.1835940Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-02-24T15:56:41.1836568Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-02-24T15:56:41.1836988Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-02-24T15:56:41.1837380Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-02-24T15:56:41.1837769Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-02-24T15:56:41.1838157Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-02-24T15:56:41.1838527Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-02-24T15:56:41.1838899Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-02-24T15:56:41.1839304Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-02-24T15:56:41.1839661Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-02-24T15:56:41.1840028Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-02-24T15:56:41.1840600Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-02-24T15:56:41.1840957Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-02-24T15:56:41.1841307Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-02-24T15:56:41.1841669Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-02-24T15:56:41.1842180Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-02-24T15:56:41.1842535Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-02-24T15:56:41.1842896Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-02-24T15:56:41.1843254Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-02-24T15:56:41.1843602Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-02-24T15:56:41.1843964Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-02-24T15:56:41.1844315Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-02-24T15:56:41.1844648Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-02-24T15:56:41.1844968Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-02-24T15:56:41.1845332Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-02-24T15:56:41.1845726Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-02-24T15:56:41.1846140Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1846739Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1847085Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-02-24T15:56:41.1847587Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-02-24T15:56:41.1848012Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1848373Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-02-24T15:56:41.1848760Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-02-24T15:56:41.1849148Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1849520Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1849889Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T15:56:41.1850277Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1850694Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T15:56:41.1851100Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1851470Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1851831Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-02-24T15:56:41.1852204Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1852582Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1852936Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-02-24T15:56:41.1853298Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1853673Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1854050Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-02-24T15:56:41.1854409Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-02-24T15:56:41.1854760Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-02-24T15:56:41.1855277Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1855635Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-02-24T15:56:41.1855995Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-02-24T15:56:41.1856534Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1856905Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1857266Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-02-24T15:56:41.1857614Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-02-24T15:56:41.1857981Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1858355Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-02-24T15:56:41.1858702Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1859058Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1859410Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1859759Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-02-24T15:56:41.1860125Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1860613Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-02-24T15:56:41.1860992Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-02-24T15:56:41.1861329Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1861675Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-02-24T15:56:41.1862070Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1862486Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1862860Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1863208Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1863602Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1864011Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-02-24T15:56:41.1864388Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-02-24T15:56:41.1864757Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-02-24T15:56:41.1865140Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-02-24T15:56:41.1865512Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1865882Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1866243Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-02-24T15:56:41.1866804Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-02-24T15:56:41.1867198Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1867559Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-02-24T15:56:41.1867914Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1868434Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-02-24T15:56:41.1868817Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1869180Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-02-24T15:56:41.1869542Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-02-24T15:56:41.1869899Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1870263Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1870669Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1871083Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1871476Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1871866Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-02-24T15:56:41.1872243Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1872674Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1873110Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1873521Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1874020Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-02-24T15:56:41.1874379Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1874723Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-02-24T15:56:41.1875073Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-02-24T15:56:41.1875419Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-02-24T15:56:41.1875807Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1876192Z   readline                       8.2                  h8228510_1               conda-forge
2025-02-24T15:56:41.1876784Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1877176Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1877557Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1877951Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1878373Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-02-24T15:56:41.1878759Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-02-24T15:56:41.1879106Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-02-24T15:56:41.1879446Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-02-24T15:56:41.1879810Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-02-24T15:56:41.1880188Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1880584Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1880977Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-02-24T15:56:41.1881340Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-02-24T15:56:41.1881823Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1882185Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-02-24T15:56:41.1882539Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1882922Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1883313Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1883677Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1884065Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1884487Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-02-24T15:56:41.1884905Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1885329Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1885753Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1886168Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-02-24T15:56:41.1886751Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-02-24T15:56:41.1887219Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1887796Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1888244Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1888692Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1889141Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1889580Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1890016Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1890499Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1890941Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1891298Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-02-24T15:56:41.1891663Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1892037Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1892405Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-02-24T15:56:41.1892782Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1893125Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-02-24T15:56:41.1893451Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1893790Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1894143Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-02-24T15:56:41.1894495Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1894851Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1895232Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-02-24T15:56:41.1895652Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1896220Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-02-24T15:56:41.1896803Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-02-24T15:56:41.1897219Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1897592Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-02-24T15:56:41.1897978Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1898365Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1898726Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1899106Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1899494Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-02-24T15:56:41.1899897Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1900426Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-02-24T15:56:41.1900823Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1901231Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-02-24T15:56:41.1901739Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-02-24T15:56:41.1902110Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-02-24T15:56:41.1902480Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-02-24T15:56:41.1902851Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-02-24T15:56:41.1903238Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-02-24T15:56:41.1903627Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-02-24T15:56:41.1904019Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-02-24T15:56:41.1904429Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-02-24T15:56:41.1904826Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-02-24T15:56:41.1905212Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-02-24T15:56:41.1905556Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-02-24T15:56:41.1905884Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-02-24T15:56:41.1906220Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-02-24T15:56:41.1906742Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:56:41.1907078Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-02-24T15:56:41.1907411Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-02-24T15:56:41.1907745Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-02-24T15:56:41.1908293Z ##[endgroup]
2025-02-24T15:56:41.1971433Z ##[group]Run pip install -e . --user
2025-02-24T15:56:41.1971754Z [36;1mpip install -e . --user[0m
2025-02-24T15:56:41.2029513Z shell: /usr/bin/bash -l {0}
2025-02-24T15:56:41.2029770Z env:
2025-02-24T15:56:41.2029959Z   CACHE_NUMBER: 0
2025-02-24T15:56:41.2030596Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:41.2031597Z   CODECOV_TOKEN: ***
2025-02-24T15:56:41.2031838Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:56:41.2032151Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:56:41.2032513Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:56:41.2032826Z ##[endgroup]
2025-02-24T15:56:41.8424096Z Obtaining file:///home/runner/work/tardis/tardis
2025-02-24T15:56:41.8458563Z   Installing build dependencies: started
2025-02-24T15:56:44.5867014Z   Installing build dependencies: finished with status 'done'
2025-02-24T15:56:44.5871657Z   Checking if build backend supports build_editable: started
2025-02-24T15:56:44.7060285Z   Checking if build backend supports build_editable: finished with status 'done'
2025-02-24T15:56:44.7066925Z   Getting requirements to build editable: started
2025-02-24T15:56:45.1935841Z   Getting requirements to build editable: finished with status 'done'
2025-02-24T15:56:45.1944546Z   Preparing editable metadata (pyproject.toml): started
2025-02-24T15:56:45.6468420Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-02-24T15:56:45.7051031Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-02-24T15:56:45.7446940Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-02-24T15:56:45.7455619Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-02-24T15:56:45.7465684Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-02-24T15:56:45.7473808Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-02-24T15:56:45.7483392Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-02-24T15:56:45.7570695Z Building wheels for collected packages: tardis
2025-02-24T15:56:45.7579645Z   Building editable for tardis (pyproject.toml): started
2025-02-24T15:56:46.4930716Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-02-24T15:56:46.4937284Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8879 sha256=97694b4aeda04a8ce5f23a24ec97aacaa311de536faab647b2e325240bdb6110
2025-02-24T15:56:46.4938864Z   Stored in directory: /tmp/pip-ephem-wheel-cache-4lu1l4zs/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-02-24T15:56:46.4964354Z Successfully built tardis
2025-02-24T15:56:47.2643925Z Installing collected packages: tardis
2025-02-24T15:56:47.2732966Z Successfully installed tardis-0.0.0
2025-02-24T15:56:47.4751179Z ##[group]Run pip install qgridnext
2025-02-24T15:56:47.4751504Z [36;1mpip install qgridnext[0m
2025-02-24T15:56:47.4805758Z shell: /usr/bin/bash -l {0}
2025-02-24T15:56:47.4805997Z env:
2025-02-24T15:56:47.4806179Z   CACHE_NUMBER: 0
2025-02-24T15:56:47.4806950Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:47.4807792Z   CODECOV_TOKEN: ***
2025-02-24T15:56:47.4808035Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:56:47.4808353Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:56:47.4808715Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:56:47.4809030Z ##[endgroup]
2025-02-24T15:56:48.0810463Z Collecting qgridnext
2025-02-24T15:56:48.0996218Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-02-24T15:56:48.1085879Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-02-24T15:56:48.1095317Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-02-24T15:56:48.1105186Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-02-24T15:56:48.1115822Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-02-24T15:56:48.1200713Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T15:56:48.1209805Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-02-24T15:56:48.1223195Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-02-24T15:56:48.1241430Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-02-24T15:56:48.1256554Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-02-24T15:56:48.1699468Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-02-24T15:56:48.1713278Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T15:56:48.1721689Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T15:56:48.2037792Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-02-24T15:56:48.2051854Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-02-24T15:56:48.2060151Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-02-24T15:56:48.2070920Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-02-24T15:56:48.2079891Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-02-24T15:56:48.2089375Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-02-24T15:56:48.2107782Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-02-24T15:56:48.2154595Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-02-24T15:56:48.2211101Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-02-24T15:56:48.2396800Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-02-24T15:56:48.2539182Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-02-24T15:56:48.2551947Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-02-24T15:56:48.2566950Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T15:56:48.2577040Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-02-24T15:56:48.2584528Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-02-24T15:56:48.2613571Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-02-24T15:56:48.2641780Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-02-24T15:56:48.2775847Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-02-24T15:56:48.2785276Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-02-24T15:56:48.2792858Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T15:56:48.3123730Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-02-24T15:56:48.3133464Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-02-24T15:56:48.3142210Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-02-24T15:56:48.3153138Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-02-24T15:56:48.3164485Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-02-24T15:56:48.3175437Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T15:56:48.3186500Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-02-24T15:56:48.3199645Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-02-24T15:56:48.3209688Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-02-24T15:56:48.3218597Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-02-24T15:56:48.3228399Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-02-24T15:56:48.3236841Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-02-24T15:56:48.3247245Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-02-24T15:56:48.3255735Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-02-24T15:56:48.3267148Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T15:56:48.3283686Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-02-24T15:56:48.3563557Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-02-24T15:56:48.3575116Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-02-24T15:56:48.3586882Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-02-24T15:56:48.3601196Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-02-24T15:56:48.3626790Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-02-24T15:56:48.3814310Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-02-24T15:56:48.3841958Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-02-24T15:56:48.3855450Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-02-24T15:56:48.3873505Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-02-24T15:56:48.4220624Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-02-24T15:56:48.4229143Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-02-24T15:56:48.4319952Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-02-24T15:56:48.4488543Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-02-24T15:56:48.4502893Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-02-24T15:56:48.4578881Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-02-24T15:56:48.4758808Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-02-24T15:56:48.4778951Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-02-24T15:56:48.4793144Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-02-24T15:56:48.4854487Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-02-24T15:56:48.5047574Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-02-24T15:56:48.5057343Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-02-24T15:56:48.5065473Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-02-24T15:56:48.5074191Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T15:56:48.5332071Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T15:56:48.5478404Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-02-24T15:56:48.5486070Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-02-24T15:56:48.5495949Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-02-24T15:56:48.5504231Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-02-24T15:56:48.5922801Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-02-24T15:56:48.5941287Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-02-24T15:56:48.5954610Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-02-24T15:56:48.5968722Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-02-24T15:56:48.5979745Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-02-24T15:56:48.5991668Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T15:56:48.6007523Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-02-24T15:56:48.6016769Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:56:48.6129024Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-02-24T15:56:48.6426573Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-02-24T15:56:48.6439820Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-02-24T15:56:48.7199448Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-02-24T15:56:48.7754345Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-02-24T15:56:48.7771123Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-02-24T15:56:48.7784117Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-02-24T15:56:48.7800634Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:56:48.7814110Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-02-24T15:56:48.8809629Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-02-24T15:56:48.8902872Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-02-24T15:56:48.9419488Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-02-24T15:56:48.9901660Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:56:49.0192917Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-02-24T15:56:49.0442561Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-02-24T15:56:49.0644865Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 70.0 MB/s eta 0:00:00
2025-02-24T15:56:49.8503210Z Installing collected packages: qgridnext
2025-02-24T15:56:49.9249249Z Successfully installed qgridnext-2.0.4
2025-02-24T15:56:50.1131987Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T15:56:50.1133293Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T15:56:50.1188932Z shell: /usr/bin/bash -l {0}
2025-02-24T15:56:50.1189215Z env:
2025-02-24T15:56:50.1189395Z   CACHE_NUMBER: 0
2025-02-24T15:56:50.1190030Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:50.1190873Z   CODECOV_TOKEN: ***
2025-02-24T15:56:50.1191130Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:56:50.1191439Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:56:50.1191831Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:56:50.1192158Z ##[endgroup]
2025-02-24T15:57:00.2245290Z ============================= test session starts ==============================
2025-02-24T15:57:00.2246044Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T15:57:00.2246965Z rootdir: /home/runner/work/tardis/tardis
2025-02-24T15:57:00.2247536Z configfile: pyproject.toml
2025-02-24T15:57:00.2248182Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-24T15:57:00.2248946Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T15:57:00.2249322Z 
2025-02-24T15:57:05.5120222Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T15:57:08.4455921Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T15:57:10.1661938Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T15:57:11.8918985Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T15:57:11.9009286Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T15:57:13.1593621Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T15:57:13.4998726Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T15:57:13.5013712Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T15:57:16.9159070Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T15:57:16.9287931Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T15:57:16.9556587Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T15:57:54.6666202Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T15:57:54.6810593Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T15:57:54.6917014Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T15:57:54.7226440Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T15:57:54.7431347Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T15:57:55.0426166Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T15:57:55.3645415Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T15:57:55.3838258Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T15:57:55.5801124Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T15:57:55.5867326Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T15:58:53.0217445Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T15:58:54.0189990Z ............                                                             [ 10%]
2025-02-24T15:58:57.0911771Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T15:58:57.1378573Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T15:58:58.4480499Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T15:58:59.7723441Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T15:59:01.9531277Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T15:59:04.6813685Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T15:59:51.2185129Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T16:00:03.2523681Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T16:00:04.9712517Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T16:00:08.3714825Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T16:00:10.6606773Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T16:00:14.0820190Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T16:00:17.4708420Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T16:00:18.7101067Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T16:00:22.7491317Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T16:00:26.1106689Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T16:00:29.7448494Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T16:00:32.2375018Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T16:00:35.5667794Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T16:00:39.2482315Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T16:00:39.8537332Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T16:00:40.0797019Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T16:00:40.0910769Z ......                                                                   [ 62%]
2025-02-24T16:00:40.2338427Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T16:02:57.6278647Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T16:02:57.6305229Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T16:03:20.9676787Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T16:03:34.1197601Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T16:03:34.8834717Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T16:03:43.5965803Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T16:03:43.6170189Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T16:03:44.1067855Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T16:03:44.1139369Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T16:03:46.3177400Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T16:03:46.3369092Z ..........                                                               [ 69%]
2025-02-24T16:03:46.5073562Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T16:03:46.5400612Z .........                                                                [ 72%]
2025-02-24T16:04:05.2228943Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T16:05:07.8281903Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T16:06:32.3061895Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T16:06:32.3774430Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T16:06:35.5894277Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T16:06:42.7508687Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T16:06:42.9731587Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T16:06:42.9907923Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T16:06:43.0330885Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T16:06:51.9489436Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T16:06:51.9554516Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T16:06:58.2208261Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T16:06:58.7100941Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T16:06:59.7427489Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T16:06:59.8768649Z XX.........                                                              [ 84%]
2025-02-24T16:06:59.9050410Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T16:07:00.2152367Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T16:07:00.6364568Z .....                                                                    [ 85%]
2025-02-24T16:07:35.4605747Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T16:07:35.4895041Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T16:07:35.4927545Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T16:07:37.9596112Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T16:07:37.9771139Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T16:07:41.3942402Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T16:07:41.3943299Z                                                                          [ 86%]
2025-02-24T16:07:42.1240849Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T16:07:43.4735102Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T16:07:45.7222844Z ......                                                                   [ 88%]
2025-02-24T16:07:51.1795446Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T16:07:54.3166699Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T16:07:57.1654352Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T16:08:04.2123084Z ....                                                                     [ 92%]
2025-02-24T16:08:10.3725950Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T16:08:19.3589921Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T16:08:19.7972324Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T16:08:19.8702650Z ....                                                                     [ 96%]
2025-02-24T16:08:20.9207430Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T16:08:21.5802435Z ..................                                                       [ 98%]
2025-02-24T16:09:25.0041136Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T16:09:32.2128457Z ......                                                                   [100%]
2025-02-24T16:09:32.2128920Z 
2025-02-24T16:09:32.2129152Z =================================== FAILURES ===================================
2025-02-24T16:09:32.2130011Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T16:09:32.2130622Z 
2025-02-24T16:09:32.2130896Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T16:09:32.2131634Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T16:09:32.2132144Z 
2025-02-24T16:09:32.2132444Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2132969Z         if err_msg is None:
2025-02-24T16:09:32.2133387Z             if left.shape != right.shape:
2025-02-24T16:09:32.2133864Z                 raise_assert_detail(
2025-02-24T16:09:32.2134297Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2134657Z                 )
2025-02-24T16:09:32.2134866Z     
2025-02-24T16:09:32.2135055Z             diff = 0
2025-02-24T16:09:32.2135317Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2135640Z                 # count up differences
2025-02-24T16:09:32.2136026Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2136619Z                     diff += 1
2025-02-24T16:09:32.2137025Z     
2025-02-24T16:09:32.2137229Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2137580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2138023Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2138451Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2138752Z E           
2025-02-24T16:09:32.2138999Z E           numpy array values are different (0.09581 %)
2025-02-24T16:09:32.2139719Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:09:32.2140721Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:09:32.2141262Z 
2025-02-24T16:09:32.2141625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2142076Z 
2025-02-24T16:09:32.2142271Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2142567Z 
2025-02-24T16:09:32.2142850Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05f85d6cc0>
2025-02-24T16:09:32.2143921Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f85da330>
2025-02-24T16:09:32.2144916Z 
2025-02-24T16:09:32.2145114Z     def test_calculate_sobolev_line_opacity(
2025-02-24T16:09:32.2145644Z         nb_simulation_verysimple, regression_data
2025-02-24T16:09:32.2146104Z     ):
2025-02-24T16:09:32.2146668Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:09:32.2147141Z     
2025-02-24T16:09:32.2147472Z         actual = calculate_sobolev_line_opacity(
2025-02-24T16:09:32.2147977Z             legacy_plasma.lines,
2025-02-24T16:09:32.2148603Z             legacy_plasma.level_number_density,
2025-02-24T16:09:32.2148910Z             legacy_plasma.time_explosion,
2025-02-24T16:09:32.2149214Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:09:32.2149494Z         )
2025-02-24T16:09:32.2149726Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.2150054Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2150255Z 
2025-02-24T16:09:32.2150381Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T16:09:32.2150697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2151057Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2151361Z     ???
2025-02-24T16:09:32.2151567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2151774Z 
2025-02-24T16:09:32.2151848Z >   ???
2025-02-24T16:09:32.2152075Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T16:09:32.2152352Z E   
2025-02-24T16:09:32.2152572Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:09:32.2152893Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.2153158Z E          ...
2025-02-24T16:09:32.2153355Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.2153652Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.2153980Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.2154257Z E          ...
2025-02-24T16:09:32.2154450Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.2154736Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.2155047Z E   At positional index 54, first diff: 14 != 12
2025-02-24T16:09:32.2155239Z 
2025-02-24T16:09:32.2155331Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2155645Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.2156538Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.2157298Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.2157907Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:09:32.2158149Z 
2025-02-24T16:09:32.2158478Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.83s/it]
2025-02-24T16:09:32.2158761Z 
2025-02-24T16:09:32.2158997Z Packets:                                                                                   4030/? [00:12<00:00, 33978.25it/s][A
2025-02-24T16:09:32.2159378Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.2160147Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.2161192Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T16:09:32.2161620Z 
2025-02-24T16:09:32.2162039Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05f85d6cc0>
2025-02-24T16:09:32.2162651Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05ff43b9e0>
2025-02-24T16:09:32.2163022Z 
2025-02-24T16:09:32.2163386Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T16:09:32.2163807Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:09:32.2164083Z     
2025-02-24T16:09:32.2164295Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T16:09:32.2164589Z             legacy_plasma.lines,
2025-02-24T16:09:32.2164845Z             legacy_plasma.level_number_density,
2025-02-24T16:09:32.2165128Z             legacy_plasma.time_explosion,
2025-02-24T16:09:32.2165523Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:09:32.2165797Z         )
2025-02-24T16:09:32.2166003Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T16:09:32.2166512Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.2166888Z >       npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.2167077Z 
2025-02-24T16:09:32.2167197Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T16:09:32.2167513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2167724Z 
2025-02-24T16:09:32.2168003Z args = (<function assert_allclose.<locals>.compare at 0x7f05d576c720>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2168436Z        [1., 1., .....,
2025-02-24T16:09:32.2168637Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2168871Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2169097Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:09:32.2169514Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.2169849Z 
2025-02-24T16:09:32.2169930Z     @wraps(func)
2025-02-24T16:09:32.2170131Z     def inner(*args, **kwds):
2025-02-24T16:09:32.2170367Z         with self._recreate_cm():
2025-02-24T16:09:32.2170611Z >           return func(*args, **kwds)
2025-02-24T16:09:32.2170861Z E           AssertionError: 
2025-02-24T16:09:32.2171113Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.2171384Z E           
2025-02-24T16:09:32.2171592Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.2171883Z E           Max absolute difference: 0.99984222
2025-02-24T16:09:32.2172172Z E           Max relative difference: 6337.12154973
2025-02-24T16:09:32.2172448Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2172708Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2172966Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.2173228Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2173482Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2173733Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.2173908Z 
2025-02-24T16:09:32.2174121Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.2174624Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T16:09:32.2174921Z 
2025-02-24T16:09:32.2175149Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T16:09:32.2176440Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7f05fa379c70>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7f05c5a0de50>, 'electron')]
2025-02-24T16:09:32.2177655Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7f05d5b18590>
2025-02-24T16:09:32.2178277Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f887fc50>
2025-02-24T16:09:32.2178652Z 
2025-02-24T16:09:32.2178745Z     def test_rate_matrix_solver(
2025-02-24T16:09:32.2178992Z         new_chianti_atomic_dataset_si,
2025-02-24T16:09:32.2179272Z         rate_solver_list,
2025-02-24T16:09:32.2179678Z         collisional_simulation_state,
2025-02-24T16:09:32.2180110Z         regression_data,
2025-02-24T16:09:32.2180630Z     ):
2025-02-24T16:09:32.2180899Z         rate_matrix_solver = RateMatrix(
2025-02-24T16:09:32.2181217Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T16:09:32.2181514Z         )
2025-02-24T16:09:32.2181681Z     
2025-02-24T16:09:32.2181900Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T16:09:32.2182226Z             collisional_simulation_state.t_radiative,
2025-02-24T16:09:32.2182624Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T16:09:32.2183094Z         )
2025-02-24T16:09:32.2183341Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T16:09:32.2183733Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T16:09:32.2184056Z         )
2025-02-24T16:09:32.2184228Z     
2025-02-24T16:09:32.2184469Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T16:09:32.2184775Z     
2025-02-24T16:09:32.2185000Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.2185210Z 
2025-02-24T16:09:32.2185431Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T16:09:32.2185779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2186151Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T16:09:32.2186670Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T16:09:32.2187139Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T16:09:32.2187584Z     return store.select(
2025-02-24T16:09:32.2188225Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T16:09:32.2188950Z     return it.get_result()
2025-02-24T16:09:32.2189551Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T16:09:32.2190050Z     results = self.func(self.start, self.stop, where)
2025-02-24T16:09:32.2190513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T16:09:32.2191037Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T16:09:32.2191550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T16:09:32.2192088Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T16:09:32.2192647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T16:09:32.2193106Z     ret = node[0][start:stop]
2025-02-24T16:09:32.2193525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T16:09:32.2193976Z     return self.read(start, stop, step)[0]
2025-02-24T16:09:32.2194392Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T16:09:32.2194856Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T16:09:32.2195193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2195406Z 
2025-02-24T16:09:32.2195487Z self = ObjectAtom()
2025-02-24T16:09:32.2195745Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T16:09:32.2195969Z 
2025-02-24T16:09:32.2196060Z     def fromarray(self, array):
2025-02-24T16:09:32.2196490Z         # We have to check for an empty array because of a possible
2025-02-24T16:09:32.2196863Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T16:09:32.2197195Z         # record when in fact it is empty.
2025-02-24T16:09:32.2197451Z         if array.size == 0:
2025-02-24T16:09:32.2197672Z             return None
2025-02-24T16:09:32.2197902Z >       return pickle.loads(array.tobytes())
2025-02-24T16:09:32.2198251Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:09:32.2198499Z 
2025-02-24T16:09:32.2198784Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T16:09:32.2199772Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.2200703Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.2201682Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.2202459Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.2203230Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.2204031Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T16:09:32.2204322Z 
2025-02-24T16:09:32.2204457Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2204821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2205146Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2205469Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2205823Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2206137Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2206553Z err_msg = None
2025-02-24T16:09:32.2206674Z 
2025-02-24T16:09:32.2206792Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2207071Z         if err_msg is None:
2025-02-24T16:09:32.2207318Z             if left.shape != right.shape:
2025-02-24T16:09:32.2207582Z                 raise_assert_detail(
2025-02-24T16:09:32.2207896Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2208209Z                 )
2025-02-24T16:09:32.2208391Z     
2025-02-24T16:09:32.2208558Z             diff = 0
2025-02-24T16:09:32.2208796Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2209081Z                 # count up differences
2025-02-24T16:09:32.2209423Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2209775Z                     diff += 1
2025-02-24T16:09:32.2209984Z     
2025-02-24T16:09:32.2210165Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2210480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2210881Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2211259Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2211528Z E           
2025-02-24T16:09:32.2211748Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2212220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2212857Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2213216Z 
2025-02-24T16:09:32.2213534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2213940Z 
2025-02-24T16:09:32.2214112Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2214375Z 
2025-02-24T16:09:32.2214730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed520>
2025-02-24T16:09:32.2215217Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2215550Z attr = 'lines'
2025-02-24T16:09:32.2215658Z 
2025-02-24T16:09:32.2215806Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2216148Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2216531Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2216753Z         try:
2025-02-24T16:09:32.2217111Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2217430Z         except KeyError:
2025-02-24T16:09:32.2217703Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2217999Z     
2025-02-24T16:09:32.2218180Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2218427Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2218779Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2219339Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2219886Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2220321Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2220612Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2220881Z             else:
2025-02-24T16:09:32.2221095Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2221382Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2221578Z 
2025-02-24T16:09:32.2221714Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2222042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2222408Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2222726Z     ???
2025-02-24T16:09:32.2222940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2223143Z 
2025-02-24T16:09:32.2223223Z >   ???
2025-02-24T16:09:32.2223447Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2223728Z E   
2025-02-24T16:09:32.2223957Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2224288Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2224558Z E          ...
2025-02-24T16:09:32.2224758Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2225072Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2225408Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2225683Z E          ...
2025-02-24T16:09:32.2225881Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2226183Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2226626Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2226820Z 
2025-02-24T16:09:32.2226912Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2227297Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T16:09:32.2227609Z 
2025-02-24T16:09:32.2227840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed010>
2025-02-24T16:09:32.2228326Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2228675Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2228836Z 
2025-02-24T16:09:32.2228978Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2229320Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2229606Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2229824Z         try:
2025-02-24T16:09:32.2230081Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2230392Z         except KeyError:
2025-02-24T16:09:32.2230663Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2230959Z     
2025-02-24T16:09:32.2231141Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2231529Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2231790Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2232095Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2232404Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2232653Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2232939Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2233134Z 
2025-02-24T16:09:32.2233367Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2233693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2233901Z 
2025-02-24T16:09:32.2234039Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2234356Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2234635Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2234926Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2235223Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2235541Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2235811Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2236085Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2236511Z err_msg = None
2025-02-24T16:09:32.2236718Z 
2025-02-24T16:09:32.2236917Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2237396Z         if err_msg is None:
2025-02-24T16:09:32.2237802Z             if left.shape != right.shape:
2025-02-24T16:09:32.2238136Z                 raise_assert_detail(
2025-02-24T16:09:32.2238453Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2238766Z                 )
2025-02-24T16:09:32.2238947Z     
2025-02-24T16:09:32.2239110Z             diff = 0
2025-02-24T16:09:32.2239348Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2239638Z                 # count up differences
2025-02-24T16:09:32.2239978Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2240355Z                     diff += 1
2025-02-24T16:09:32.2240566Z     
2025-02-24T16:09:32.2240746Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2241055Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2241459Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2241834Z E           AssertionError: Series are different
2025-02-24T16:09:32.2242092Z E           
2025-02-24T16:09:32.2242298Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2242872Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2243673Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2244422Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2244992Z 
2025-02-24T16:09:32.2245314Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2245937Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T16:09:32.2246246Z 
2025-02-24T16:09:32.2246617Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aefad0>
2025-02-24T16:09:32.2247215Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2247566Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2247762Z 
2025-02-24T16:09:32.2247904Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2248252Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2248536Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2248754Z         try:
2025-02-24T16:09:32.2249003Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2249318Z         except KeyError:
2025-02-24T16:09:32.2249591Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2249890Z     
2025-02-24T16:09:32.2250072Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2250324Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2250602Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2250912Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2251230Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2251487Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2251775Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2251978Z 
2025-02-24T16:09:32.2252104Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2252431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2252642Z 
2025-02-24T16:09:32.2252784Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2253110Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2253387Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2253680Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2253986Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2254414Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2254912Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2255262Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2255515Z err_msg = None
2025-02-24T16:09:32.2255623Z 
2025-02-24T16:09:32.2255745Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2256021Z         if err_msg is None:
2025-02-24T16:09:32.2256363Z             if left.shape != right.shape:
2025-02-24T16:09:32.2267438Z                 raise_assert_detail(
2025-02-24T16:09:32.2267966Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2268445Z                 )
2025-02-24T16:09:32.2268726Z     
2025-02-24T16:09:32.2268991Z             diff = 0
2025-02-24T16:09:32.2269351Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2269797Z                 # count up differences
2025-02-24T16:09:32.2270330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2270868Z                     diff += 1
2025-02-24T16:09:32.2271208Z     
2025-02-24T16:09:32.2271487Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2271969Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2272574Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2273166Z E           AssertionError: Series are different
2025-02-24T16:09:32.2273594Z E           
2025-02-24T16:09:32.2274188Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2275104Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2276783Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2278189Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2278986Z 
2025-02-24T16:09:32.2279498Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2280460Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T16:09:32.2280924Z 
2025-02-24T16:09:32.2281139Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2281696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2282190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2282709Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2283259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2283738Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2284135Z err_msg = None
2025-02-24T16:09:32.2284313Z 
2025-02-24T16:09:32.2284499Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2284939Z         if err_msg is None:
2025-02-24T16:09:32.2285307Z             if left.shape != right.shape:
2025-02-24T16:09:32.2285593Z                 raise_assert_detail(
2025-02-24T16:09:32.2285923Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2286232Z                 )
2025-02-24T16:09:32.2286550Z     
2025-02-24T16:09:32.2286844Z             diff = 0
2025-02-24T16:09:32.2287240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2287732Z                 # count up differences
2025-02-24T16:09:32.2288133Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2288482Z                     diff += 1
2025-02-24T16:09:32.2288702Z     
2025-02-24T16:09:32.2288883Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2289199Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2289596Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2289980Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2290249Z E           
2025-02-24T16:09:32.2290475Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2290943Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2292252Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2292617Z 
2025-02-24T16:09:32.2293064Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2293476Z 
2025-02-24T16:09:32.2293661Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2293921Z 
2025-02-24T16:09:32.2294153Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aef0b0>
2025-02-24T16:09:32.2294690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>, attr = 'nu'
2025-02-24T16:09:32.2294996Z 
2025-02-24T16:09:32.2295141Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2295490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2295778Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2296001Z         try:
2025-02-24T16:09:32.2296258Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2296721Z         except KeyError:
2025-02-24T16:09:32.2297001Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2297299Z     
2025-02-24T16:09:32.2297486Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2297739Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2298006Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2298314Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2298616Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2298869Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2299161Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2299356Z 
2025-02-24T16:09:32.2299490Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2299855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2300216Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2300517Z     ???
2025-02-24T16:09:32.2300726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2300935Z 
2025-02-24T16:09:32.2301012Z >   ???
2025-02-24T16:09:32.2301244Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2301531Z E   
2025-02-24T16:09:32.2301761Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2302085Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2302366Z E          ...
2025-02-24T16:09:32.2302566Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2302876Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2303213Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2303492Z E          ...
2025-02-24T16:09:32.2303689Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2303987Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2304303Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2304497Z 
2025-02-24T16:09:32.2304589Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2304955Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T16:09:32.2305257Z 
2025-02-24T16:09:32.2305389Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2305753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2306072Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2306636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2306994Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2307307Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2307562Z err_msg = None
2025-02-24T16:09:32.2307680Z 
2025-02-24T16:09:32.2307797Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2308076Z         if err_msg is None:
2025-02-24T16:09:32.2308424Z             if left.shape != right.shape:
2025-02-24T16:09:32.2308693Z                 raise_assert_detail(
2025-02-24T16:09:32.2309003Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2309312Z                 )
2025-02-24T16:09:32.2309492Z     
2025-02-24T16:09:32.2309655Z             diff = 0
2025-02-24T16:09:32.2309893Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2310183Z                 # count up differences
2025-02-24T16:09:32.2310525Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2310871Z                     diff += 1
2025-02-24T16:09:32.2311082Z     
2025-02-24T16:09:32.2311265Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2311571Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2311971Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2312357Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2312627Z E           
2025-02-24T16:09:32.2312851Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2313317Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2313936Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2314290Z 
2025-02-24T16:09:32.2314614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2315019Z 
2025-02-24T16:09:32.2315196Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2315454Z 
2025-02-24T16:09:32.2315810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aeeed0>
2025-02-24T16:09:32.2316785Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2317359Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2317588Z 
2025-02-24T16:09:32.2317825Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2318402Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2318897Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2319135Z         try:
2025-02-24T16:09:32.2319393Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2319706Z         except KeyError:
2025-02-24T16:09:32.2319981Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2320282Z     
2025-02-24T16:09:32.2320465Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2320718Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2320988Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2321298Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2321601Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2321847Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2322268Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2322469Z 
2025-02-24T16:09:32.2322600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2322924Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2323287Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2323590Z     ???
2025-02-24T16:09:32.2323799Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2324128Z 
2025-02-24T16:09:32.2324206Z >   ???
2025-02-24T16:09:32.2324433Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2324709Z E   
2025-02-24T16:09:32.2324929Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2325255Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2325523Z E          ...
2025-02-24T16:09:32.2325730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2326045Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2326512Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2326781Z E          ...
2025-02-24T16:09:32.2326976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2327275Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2327593Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2327786Z 
2025-02-24T16:09:32.2327884Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2328234Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T16:09:32.2328515Z 
2025-02-24T16:09:32.2328653Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2329003Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2329324Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2329647Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2329998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2330312Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2330571Z err_msg = None
2025-02-24T16:09:32.2330679Z 
2025-02-24T16:09:32.2330800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2331075Z         if err_msg is None:
2025-02-24T16:09:32.2331313Z             if left.shape != right.shape:
2025-02-24T16:09:32.2331577Z                 raise_assert_detail(
2025-02-24T16:09:32.2331888Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2332194Z                 )
2025-02-24T16:09:32.2332373Z     
2025-02-24T16:09:32.2332546Z             diff = 0
2025-02-24T16:09:32.2332780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2333067Z                 # count up differences
2025-02-24T16:09:32.2333470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2334061Z                     diff += 1
2025-02-24T16:09:32.2334413Z     
2025-02-24T16:09:32.2334662Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2334978Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2335381Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2335774Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2336042Z E           
2025-02-24T16:09:32.2336384Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2336853Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2337602Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2337959Z 
2025-02-24T16:09:32.2338381Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2338780Z 
2025-02-24T16:09:32.2338960Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2339217Z 
2025-02-24T16:09:32.2339452Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aeee10>
2025-02-24T16:09:32.2340123Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>, attr = 'f_lu'
2025-02-24T16:09:32.2340429Z 
2025-02-24T16:09:32.2340574Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2340924Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2341213Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2341437Z         try:
2025-02-24T16:09:32.2341689Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2342001Z         except KeyError:
2025-02-24T16:09:32.2342277Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2342577Z     
2025-02-24T16:09:32.2342761Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2343018Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2343293Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2343606Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2343913Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2344161Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2344454Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2344656Z 
2025-02-24T16:09:32.2344785Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2345112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2345464Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2345772Z     ???
2025-02-24T16:09:32.2345982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2346180Z 
2025-02-24T16:09:32.2346258Z >   ???
2025-02-24T16:09:32.2346603Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2346877Z E   
2025-02-24T16:09:32.2347097Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2347421Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2347715Z E          ...
2025-02-24T16:09:32.2347914Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2348230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2348564Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2348829Z E          ...
2025-02-24T16:09:32.2349023Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2349320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2349637Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2349827Z 
2025-02-24T16:09:32.2349915Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2350275Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T16:09:32.2350569Z 
2025-02-24T16:09:32.2350707Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2351057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2351375Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2352100Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2352695Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2353139Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2353404Z err_msg = None
2025-02-24T16:09:32.2353513Z 
2025-02-24T16:09:32.2353633Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2353910Z         if err_msg is None:
2025-02-24T16:09:32.2354269Z             if left.shape != right.shape:
2025-02-24T16:09:32.2354538Z                 raise_assert_detail(
2025-02-24T16:09:32.2354848Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2355152Z                 )
2025-02-24T16:09:32.2355330Z     
2025-02-24T16:09:32.2355494Z             diff = 0
2025-02-24T16:09:32.2355734Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2356028Z                 # count up differences
2025-02-24T16:09:32.2356505Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2356849Z                     diff += 1
2025-02-24T16:09:32.2357062Z     
2025-02-24T16:09:32.2357241Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2357551Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2357948Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2358332Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2358603Z E           
2025-02-24T16:09:32.2358825Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2359284Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2359904Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2360257Z 
2025-02-24T16:09:32.2360586Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2360981Z 
2025-02-24T16:09:32.2361157Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2361413Z 
2025-02-24T16:09:32.2361643Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed7c0>
2025-02-24T16:09:32.2362128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2362462Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2362594Z 
2025-02-24T16:09:32.2362735Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2363080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2363368Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2363587Z         try:
2025-02-24T16:09:32.2363835Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2364144Z         except KeyError:
2025-02-24T16:09:32.2364416Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2364712Z     
2025-02-24T16:09:32.2364892Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2365144Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2365417Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2365725Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2366033Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2366396Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2366820Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2367087Z             else:
2025-02-24T16:09:32.2367296Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2367590Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2367784Z 
2025-02-24T16:09:32.2367914Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2368236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2368702Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2369009Z     ???
2025-02-24T16:09:32.2369219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2369426Z 
2025-02-24T16:09:32.2369496Z >   ???
2025-02-24T16:09:32.2369744Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2370251Z E   
2025-02-24T16:09:32.2370644Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2371214Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2371672Z E          ...
2025-02-24T16:09:32.2372000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2372515Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2373072Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2373519Z E          ...
2025-02-24T16:09:32.2373724Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2374036Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2374364Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2374562Z 
2025-02-24T16:09:32.2374660Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2375026Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T16:09:32.2375328Z 
2025-02-24T16:09:32.2375466Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2375834Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2376158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2376622Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2376976Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2377298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2377555Z err_msg = None
2025-02-24T16:09:32.2377665Z 
2025-02-24T16:09:32.2377785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2378065Z         if err_msg is None:
2025-02-24T16:09:32.2378295Z             if left.shape != right.shape:
2025-02-24T16:09:32.2378561Z                 raise_assert_detail(
2025-02-24T16:09:32.2378873Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2379183Z                 )
2025-02-24T16:09:32.2379369Z     
2025-02-24T16:09:32.2379532Z             diff = 0
2025-02-24T16:09:32.2379770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2380053Z                 # count up differences
2025-02-24T16:09:32.2380389Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2380730Z                     diff += 1
2025-02-24T16:09:32.2380941Z     
2025-02-24T16:09:32.2381125Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2381443Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2381859Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2382527Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2382970Z E           
2025-02-24T16:09:32.2383188Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2383896Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2384642Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2385136Z 
2025-02-24T16:09:32.2385465Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2385860Z 
2025-02-24T16:09:32.2386039Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2386425Z 
2025-02-24T16:09:32.2386664Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aedd00>
2025-02-24T16:09:32.2387162Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2387496Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2387627Z 
2025-02-24T16:09:32.2387775Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2388136Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2388641Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2389003Z         try:
2025-02-24T16:09:32.2389422Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2389738Z         except KeyError:
2025-02-24T16:09:32.2390014Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2390303Z     
2025-02-24T16:09:32.2390485Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2390746Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2391011Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2391320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2391629Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2391872Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2392154Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2392420Z             else:
2025-02-24T16:09:32.2392629Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2392918Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2393112Z 
2025-02-24T16:09:32.2393247Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2393573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2393928Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2394230Z     ???
2025-02-24T16:09:32.2394439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2394651Z 
2025-02-24T16:09:32.2394720Z >   ???
2025-02-24T16:09:32.2394940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2395218Z E   
2025-02-24T16:09:32.2395444Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2395772Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2396042Z E          ...
2025-02-24T16:09:32.2396240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2396689Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2397022Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2397292Z E          ...
2025-02-24T16:09:32.2397488Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2397791Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2398112Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2398303Z 
2025-02-24T16:09:32.2398400Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2398898Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T16:09:32.2399191Z 
2025-02-24T16:09:32.2399324Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2399676Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2399995Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2400417Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2400776Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2401087Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2401340Z err_msg = None
2025-02-24T16:09:32.2401458Z 
2025-02-24T16:09:32.2401572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2401844Z         if err_msg is None:
2025-02-24T16:09:32.2402085Z             if left.shape != right.shape:
2025-02-24T16:09:32.2402355Z                 raise_assert_detail(
2025-02-24T16:09:32.2402669Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2402974Z                 )
2025-02-24T16:09:32.2403155Z     
2025-02-24T16:09:32.2403323Z             diff = 0
2025-02-24T16:09:32.2403556Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2403840Z                 # count up differences
2025-02-24T16:09:32.2404186Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2404528Z                     diff += 1
2025-02-24T16:09:32.2404745Z     
2025-02-24T16:09:32.2404926Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2405237Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2405818Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2406590Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2406934Z E           
2025-02-24T16:09:32.2407152Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2407613Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2408234Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2408593Z 
2025-02-24T16:09:32.2408908Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2409311Z 
2025-02-24T16:09:32.2409481Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2409743Z 
2025-02-24T16:09:32.2409972Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aef350>
2025-02-24T16:09:32.2410464Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2410796Z attr = 'j_blues'
2025-02-24T16:09:32.2410910Z 
2025-02-24T16:09:32.2411061Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2411403Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2411687Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2411909Z         try:
2025-02-24T16:09:32.2412153Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2412465Z         except KeyError:
2025-02-24T16:09:32.2412746Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2413178Z     
2025-02-24T16:09:32.2413358Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2413602Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2413858Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2414160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2414467Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2414715Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2414999Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2415386Z             else:
2025-02-24T16:09:32.2415597Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2415882Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2416072Z 
2025-02-24T16:09:32.2416205Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2416658Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2417014Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2417315Z     ???
2025-02-24T16:09:32.2417526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2417735Z 
2025-02-24T16:09:32.2417807Z >   ???
2025-02-24T16:09:32.2418031Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2418307Z E   
2025-02-24T16:09:32.2418531Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2418854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2419129Z E          ...
2025-02-24T16:09:32.2419328Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2419633Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2419971Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2420243Z E          ...
2025-02-24T16:09:32.2420439Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2420747Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2421068Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2421261Z 
2025-02-24T16:09:32.2421351Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2421692Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T16:09:32.2421973Z 
2025-02-24T16:09:32.2422110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2422466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2422782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2423097Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2423448Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2423902Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2424342Z err_msg = None
2025-02-24T16:09:32.2424530Z 
2025-02-24T16:09:32.2424721Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2425179Z         if err_msg is None:
2025-02-24T16:09:32.2425566Z             if left.shape != right.shape:
2025-02-24T16:09:32.2426002Z                 raise_assert_detail(
2025-02-24T16:09:32.2426645Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2427059Z                 )
2025-02-24T16:09:32.2427243Z     
2025-02-24T16:09:32.2427409Z             diff = 0
2025-02-24T16:09:32.2427647Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2427934Z                 # count up differences
2025-02-24T16:09:32.2428275Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2428615Z                     diff += 1
2025-02-24T16:09:32.2428832Z     
2025-02-24T16:09:32.2429013Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2429474Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2429877Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2430252Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2430519Z E           
2025-02-24T16:09:32.2430745Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2431321Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2431937Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2432299Z 
2025-02-24T16:09:32.2432614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2433022Z 
2025-02-24T16:09:32.2433198Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2433457Z 
2025-02-24T16:09:32.2433693Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aef9e0>
2025-02-24T16:09:32.2434189Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2434518Z attr = 'lines'
2025-02-24T16:09:32.2434630Z 
2025-02-24T16:09:32.2434772Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2435112Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2435398Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2435620Z         try:
2025-02-24T16:09:32.2435872Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2436178Z         except KeyError:
2025-02-24T16:09:32.2436572Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2436862Z     
2025-02-24T16:09:32.2437036Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2437287Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2437551Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2437858Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2438181Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2438431Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2438718Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2438987Z             else:
2025-02-24T16:09:32.2439196Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2439481Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2439683Z 
2025-02-24T16:09:32.2439811Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2440138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2440499Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2440801Z     ???
2025-02-24T16:09:32.2441010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2441213Z 
2025-02-24T16:09:32.2441287Z >   ???
2025-02-24T16:09:32.2441516Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2441886Z E   
2025-02-24T16:09:32.2442263Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2442817Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2443217Z E          ...
2025-02-24T16:09:32.2443417Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2443723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2444213Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2444483Z E          ...
2025-02-24T16:09:32.2444675Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2444970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2445285Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2445476Z 
2025-02-24T16:09:32.2445572Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2446049Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T16:09:32.2446499Z 
2025-02-24T16:09:32.2446732Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aec350>
2025-02-24T16:09:32.2447224Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2447575Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2447760Z 
2025-02-24T16:09:32.2447900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2448245Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2448527Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2448752Z         try:
2025-02-24T16:09:32.2448999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2449312Z         except KeyError:
2025-02-24T16:09:32.2449586Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2449874Z     
2025-02-24T16:09:32.2450048Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2450295Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2450564Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2450874Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2451186Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2451434Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2451714Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2451908Z 
2025-02-24T16:09:32.2452039Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2452367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2452573Z 
2025-02-24T16:09:32.2452712Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2453026Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2453310Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2453590Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2453897Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2454218Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2454489Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2454767Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2455004Z err_msg = None
2025-02-24T16:09:32.2455120Z 
2025-02-24T16:09:32.2455239Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2455515Z         if err_msg is None:
2025-02-24T16:09:32.2455750Z             if left.shape != right.shape:
2025-02-24T16:09:32.2456013Z                 raise_assert_detail(
2025-02-24T16:09:32.2456437Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2456745Z                 )
2025-02-24T16:09:32.2456924Z     
2025-02-24T16:09:32.2457090Z             diff = 0
2025-02-24T16:09:32.2457322Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2457618Z                 # count up differences
2025-02-24T16:09:32.2457959Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2458300Z                     diff += 1
2025-02-24T16:09:32.2458510Z     
2025-02-24T16:09:32.2458691Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2458996Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2459518Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2459887Z E           AssertionError: Series are different
2025-02-24T16:09:32.2460263Z E           
2025-02-24T16:09:32.2460623Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2461789Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2463221Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2464277Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2464699Z 
2025-02-24T16:09:32.2465024Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2465635Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T16:09:32.2465936Z 
2025-02-24T16:09:32.2466164Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aec230>
2025-02-24T16:09:32.2466763Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2467114Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2467280Z 
2025-02-24T16:09:32.2467428Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2467766Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2468049Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2468266Z         try:
2025-02-24T16:09:32.2468515Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2468830Z         except KeyError:
2025-02-24T16:09:32.2469113Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2469406Z     
2025-02-24T16:09:32.2469593Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2469848Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2470111Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2470420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2470727Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2470978Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2471263Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2471463Z 
2025-02-24T16:09:32.2471591Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2471920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2472123Z 
2025-02-24T16:09:32.2472264Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2472639Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2472936Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2473225Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2473524Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2473844Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2474122Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2474529Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2474765Z err_msg = None
2025-02-24T16:09:32.2474875Z 
2025-02-24T16:09:32.2474993Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2475264Z         if err_msg is None:
2025-02-24T16:09:32.2475498Z             if left.shape != right.shape:
2025-02-24T16:09:32.2475753Z                 raise_assert_detail(
2025-02-24T16:09:32.2476163Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2476607Z                 )
2025-02-24T16:09:32.2476788Z     
2025-02-24T16:09:32.2476954Z             diff = 0
2025-02-24T16:09:32.2477186Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2477470Z                 # count up differences
2025-02-24T16:09:32.2477805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2478144Z                     diff += 1
2025-02-24T16:09:32.2478461Z     
2025-02-24T16:09:32.2478763Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2479287Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2479959Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2480582Z E           AssertionError: Series are different
2025-02-24T16:09:32.2481017Z E           
2025-02-24T16:09:32.2481362Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2482143Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2482982Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2483831Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2484299Z 
2025-02-24T16:09:32.2484614Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2485215Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T16:09:32.2485489Z 
2025-02-24T16:09:32.2485628Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2485985Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2486406Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2486728Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2487083Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2487396Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2487659Z err_msg = None
2025-02-24T16:09:32.2487772Z 
2025-02-24T16:09:32.2487892Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2488167Z         if err_msg is None:
2025-02-24T16:09:32.2488547Z             if left.shape != right.shape:
2025-02-24T16:09:32.2488813Z                 raise_assert_detail(
2025-02-24T16:09:32.2489127Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2489433Z                 )
2025-02-24T16:09:32.2489613Z     
2025-02-24T16:09:32.2489783Z             diff = 0
2025-02-24T16:09:32.2490025Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2490318Z                 # count up differences
2025-02-24T16:09:32.2490761Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2491178Z                     diff += 1
2025-02-24T16:09:32.2501821Z     
2025-02-24T16:09:32.2502147Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2502708Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2503350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2503779Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2504064Z E           
2025-02-24T16:09:32.2504305Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2504790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2505410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2505773Z 
2025-02-24T16:09:32.2506107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2506664Z 
2025-02-24T16:09:32.2506852Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2507117Z 
2025-02-24T16:09:32.2507357Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed040>
2025-02-24T16:09:32.2507900Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>, attr = 'nu'
2025-02-24T16:09:32.2508196Z 
2025-02-24T16:09:32.2508352Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2508700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2508994Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2509222Z         try:
2025-02-24T16:09:32.2509481Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2509795Z         except KeyError:
2025-02-24T16:09:32.2510072Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2510374Z     
2025-02-24T16:09:32.2510563Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2510819Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2511087Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2511394Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2511701Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2511950Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2512232Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2512429Z 
2025-02-24T16:09:32.2512569Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2512897Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2513254Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2513570Z     ???
2025-02-24T16:09:32.2513946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2514511Z 
2025-02-24T16:09:32.2514626Z >   ???
2025-02-24T16:09:32.2514948Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2515233Z E   
2025-02-24T16:09:32.2515457Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2515784Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2516055Z E          ...
2025-02-24T16:09:32.2516255Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2516714Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2517172Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2517461Z E          ...
2025-02-24T16:09:32.2517655Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2517951Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2518269Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2518456Z 
2025-02-24T16:09:32.2518554Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2518914Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T16:09:32.2519205Z 
2025-02-24T16:09:32.2519335Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2519696Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2520021Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2520341Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2520702Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2521017Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2521274Z err_msg = None
2025-02-24T16:09:32.2521389Z 
2025-02-24T16:09:32.2521506Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2521788Z         if err_msg is None:
2025-02-24T16:09:32.2522038Z             if left.shape != right.shape:
2025-02-24T16:09:32.2522309Z                 raise_assert_detail(
2025-02-24T16:09:32.2522622Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2522943Z                 )
2025-02-24T16:09:32.2523123Z     
2025-02-24T16:09:32.2523288Z             diff = 0
2025-02-24T16:09:32.2523524Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2523811Z                 # count up differences
2025-02-24T16:09:32.2524155Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2524504Z                     diff += 1
2025-02-24T16:09:32.2524715Z     
2025-02-24T16:09:32.2524895Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2525204Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2525601Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2525993Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2526385Z E           
2025-02-24T16:09:32.2526606Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2527077Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2527696Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2528052Z 
2025-02-24T16:09:32.2528368Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2528892Z 
2025-02-24T16:09:32.2529065Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2529331Z 
2025-02-24T16:09:32.2529561Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aecaa0>
2025-02-24T16:09:32.2530051Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2530386Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2530516Z 
2025-02-24T16:09:32.2530766Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2531111Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2531399Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2531626Z         try:
2025-02-24T16:09:32.2532073Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2532608Z         except KeyError:
2025-02-24T16:09:32.2532998Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2533303Z     
2025-02-24T16:09:32.2533487Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2533735Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2533998Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2534300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2534608Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2534852Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2535130Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2535330Z 
2025-02-24T16:09:32.2535464Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2535792Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2536146Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2536681Z     ???
2025-02-24T16:09:32.2536892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2537105Z 
2025-02-24T16:09:32.2537173Z >   ???
2025-02-24T16:09:32.2537398Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2537676Z E   
2025-02-24T16:09:32.2537895Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2538220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2538489Z E          ...
2025-02-24T16:09:32.2538690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2539003Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2539336Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2539607Z E          ...
2025-02-24T16:09:32.2539803Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2540123Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2540445Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2540632Z 
2025-02-24T16:09:32.2540728Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2541071Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T16:09:32.2541354Z 
2025-02-24T16:09:32.2541485Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2541837Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2542155Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2542469Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2542822Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2543135Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2543389Z err_msg = None
2025-02-24T16:09:32.2543507Z 
2025-02-24T16:09:32.2543621Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2544069Z         if err_msg is None:
2025-02-24T16:09:32.2544312Z             if left.shape != right.shape:
2025-02-24T16:09:32.2544578Z                 raise_assert_detail(
2025-02-24T16:09:32.2544890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2545197Z                 )
2025-02-24T16:09:32.2545375Z     
2025-02-24T16:09:32.2545540Z             diff = 0
2025-02-24T16:09:32.2545774Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2546057Z                 # count up differences
2025-02-24T16:09:32.2546654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2547005Z                     diff += 1
2025-02-24T16:09:32.2547215Z     
2025-02-24T16:09:32.2547397Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2547736Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2548136Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2548521Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2548783Z E           
2025-02-24T16:09:32.2548999Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2549470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2550380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2551006Z 
2025-02-24T16:09:32.2551336Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2551740Z 
2025-02-24T16:09:32.2551915Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2552176Z 
2025-02-24T16:09:32.2552406Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aeccb0>
2025-02-24T16:09:32.2552937Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>, attr = 'f_lu'
2025-02-24T16:09:32.2553236Z 
2025-02-24T16:09:32.2553380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2553726Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2554014Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2554232Z         try:
2025-02-24T16:09:32.2554483Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2554794Z         except KeyError:
2025-02-24T16:09:32.2555065Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2555362Z     
2025-02-24T16:09:32.2555544Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2555797Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2556060Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2556505Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2556807Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2557046Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2557323Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2557524Z 
2025-02-24T16:09:32.2557656Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2557982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2558339Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2558641Z     ???
2025-02-24T16:09:32.2558853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2559194Z 
2025-02-24T16:09:32.2559265Z >   ???
2025-02-24T16:09:32.2559490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2559770Z E   
2025-02-24T16:09:32.2559991Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2560311Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2560579Z E          ...
2025-02-24T16:09:32.2560774Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2561079Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2561513Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2562019Z E          ...
2025-02-24T16:09:32.2562320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2562765Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2563087Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2563278Z 
2025-02-24T16:09:32.2563370Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2563732Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T16:09:32.2564022Z 
2025-02-24T16:09:32.2564157Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2564658Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2565197Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2565712Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2566243Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2566764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2567020Z err_msg = None
2025-02-24T16:09:32.2567135Z 
2025-02-24T16:09:32.2567255Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2567528Z         if err_msg is None:
2025-02-24T16:09:32.2567767Z             if left.shape != right.shape:
2025-02-24T16:09:32.2568027Z                 raise_assert_detail(
2025-02-24T16:09:32.2568535Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2569045Z                 )
2025-02-24T16:09:32.2569327Z     
2025-02-24T16:09:32.2569492Z             diff = 0
2025-02-24T16:09:32.2569729Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2570017Z                 # count up differences
2025-02-24T16:09:32.2570356Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2570695Z                     diff += 1
2025-02-24T16:09:32.2570904Z     
2025-02-24T16:09:32.2571083Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2571397Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2571577Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2571696Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2571776Z E           
2025-02-24T16:09:32.2571889Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2572164Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2572436Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2572441Z 
2025-02-24T16:09:32.2572755Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2572926Z 
2025-02-24T16:09:32.2573106Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2573110Z 
2025-02-24T16:09:32.2573342Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7fb0>
2025-02-24T16:09:32.2573516Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2573598Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2573602Z 
2025-02-24T16:09:32.2573847Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2573974Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2574064Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2574133Z         try:
2025-02-24T16:09:32.2574284Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2574363Z         except KeyError:
2025-02-24T16:09:32.2574509Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2574583Z     
2025-02-24T16:09:32.2574668Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2574768Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2574855Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2574994Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2575080Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2575175Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2575299Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2575371Z             else:
2025-02-24T16:09:32.2575473Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2575587Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2575591Z 
2025-02-24T16:09:32.2575725Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2575842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2576000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2576074Z     ???
2025-02-24T16:09:32.2576187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2576191Z 
2025-02-24T16:09:32.2576422Z >   ???
2025-02-24T16:09:32.2576587Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2576660Z E   
2025-02-24T16:09:32.2576798Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2576915Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2576991Z E          ...
2025-02-24T16:09:32.2577081Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2577218Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2577330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2577406Z E          ...
2025-02-24T16:09:32.2577496Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2577626Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2577741Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2577745Z 
2025-02-24T16:09:32.2577834Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2578035Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T16:09:32.2578040Z 
2025-02-24T16:09:32.2578175Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2578311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2578417Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2578552Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2578680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2578781Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2578980Z err_msg = None
2025-02-24T16:09:32.2578984Z 
2025-02-24T16:09:32.2579102Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2579183Z         if err_msg is None:
2025-02-24T16:09:32.2579284Z             if left.shape != right.shape:
2025-02-24T16:09:32.2579369Z                 raise_assert_detail(
2025-02-24T16:09:32.2579522Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2579599Z                 )
2025-02-24T16:09:32.2579768Z     
2025-02-24T16:09:32.2579848Z             diff = 0
2025-02-24T16:09:32.2579961Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2580053Z                 # count up differences
2025-02-24T16:09:32.2580223Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2580306Z                     diff += 1
2025-02-24T16:09:32.2580379Z     
2025-02-24T16:09:32.2580468Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2580619Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2580789Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2580910Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2580980Z E           
2025-02-24T16:09:32.2581101Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2581375Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2581640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2581649Z 
2025-02-24T16:09:32.2581969Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2581973Z 
2025-02-24T16:09:32.2582151Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2582155Z 
2025-02-24T16:09:32.2582385Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7fe0>
2025-02-24T16:09:32.2582562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2582645Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2582649Z 
2025-02-24T16:09:32.2582788Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2582907Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2582992Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2583070Z         try:
2025-02-24T16:09:32.2583208Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2583294Z         except KeyError:
2025-02-24T16:09:32.2583438Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2583505Z     
2025-02-24T16:09:32.2583596Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2583692Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2583784Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2583919Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2584009Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2584101Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2584210Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2584284Z             else:
2025-02-24T16:09:32.2584378Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2584488Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2584602Z 
2025-02-24T16:09:32.2584731Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2584852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2585003Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2585071Z     ???
2025-02-24T16:09:32.2585184Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2585187Z 
2025-02-24T16:09:32.2585254Z >   ???
2025-02-24T16:09:32.2585462Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2585535Z E   
2025-02-24T16:09:32.2585666Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2585782Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2585859Z E          ...
2025-02-24T16:09:32.2585945Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2586079Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2586395Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2586520Z E          ...
2025-02-24T16:09:32.2586671Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2586885Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2587066Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2587072Z 
2025-02-24T16:09:32.2587222Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2587566Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T16:09:32.2587572Z 
2025-02-24T16:09:32.2587797Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2588017Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2588182Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2588408Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2588634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2588796Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2588923Z err_msg = None
2025-02-24T16:09:32.2588929Z 
2025-02-24T16:09:32.2589117Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2589251Z         if err_msg is None:
2025-02-24T16:09:32.2589413Z             if left.shape != right.shape:
2025-02-24T16:09:32.2589551Z                 raise_assert_detail(
2025-02-24T16:09:32.2589703Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2589779Z                 )
2025-02-24T16:09:32.2589847Z     
2025-02-24T16:09:32.2589923Z             diff = 0
2025-02-24T16:09:32.2590035Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2590129Z                 # count up differences
2025-02-24T16:09:32.2590312Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2590389Z                     diff += 1
2025-02-24T16:09:32.2590462Z     
2025-02-24T16:09:32.2590548Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2590695Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2590865Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2590984Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2591063Z E           
2025-02-24T16:09:32.2591174Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2591445Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2591854Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2591859Z 
2025-02-24T16:09:32.2592171Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2592273Z 
2025-02-24T16:09:32.2592454Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2592458Z 
2025-02-24T16:09:32.2592692Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af79b0>
2025-02-24T16:09:32.2592865Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2592949Z attr = 'j_blues'
2025-02-24T16:09:32.2592953Z 
2025-02-24T16:09:32.2593096Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2593215Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2593301Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2593376Z         try:
2025-02-24T16:09:32.2593519Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2593607Z         except KeyError:
2025-02-24T16:09:32.2593750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2593822Z     
2025-02-24T16:09:32.2593922Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2594017Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2594112Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2594250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2594340Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2594430Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2594550Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2594634Z             else:
2025-02-24T16:09:32.2594732Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2594847Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2594851Z 
2025-02-24T16:09:32.2594980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2595103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2595257Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2595333Z     ???
2025-02-24T16:09:32.2595447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2595451Z 
2025-02-24T16:09:32.2595519Z >   ???
2025-02-24T16:09:32.2595655Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2595722Z E   
2025-02-24T16:09:32.2595858Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2595973Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2596047Z E          ...
2025-02-24T16:09:32.2596146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2596440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2596570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2596642Z E          ...
2025-02-24T16:09:32.2596732Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2596863Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2596975Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2596979Z 
2025-02-24T16:09:32.2597074Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2597267Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T16:09:32.2597270Z 
2025-02-24T16:09:32.2597407Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2597546Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2597775Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2597918Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2598044Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2598143Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2598217Z err_msg = None
2025-02-24T16:09:32.2598332Z 
2025-02-24T16:09:32.2598451Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2598538Z         if err_msg is None:
2025-02-24T16:09:32.2598635Z             if left.shape != right.shape:
2025-02-24T16:09:32.2598722Z                 raise_assert_detail(
2025-02-24T16:09:32.2598870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2598942Z                 )
2025-02-24T16:09:32.2599020Z     
2025-02-24T16:09:32.2599091Z             diff = 0
2025-02-24T16:09:32.2599208Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2599296Z                 # count up differences
2025-02-24T16:09:32.2599472Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2599549Z                     diff += 1
2025-02-24T16:09:32.2599623Z     
2025-02-24T16:09:32.2599718Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2599862Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2600040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2600155Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2600229Z E           
2025-02-24T16:09:32.2600340Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2600611Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2600886Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2600891Z 
2025-02-24T16:09:32.2601199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2601209Z 
2025-02-24T16:09:32.2601384Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2601388Z 
2025-02-24T16:09:32.2601621Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6810>
2025-02-24T16:09:32.2601801Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2601878Z attr = 'lines'
2025-02-24T16:09:32.2601882Z 
2025-02-24T16:09:32.2602026Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2602144Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2602235Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2602305Z         try:
2025-02-24T16:09:32.2602453Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2602537Z         except KeyError:
2025-02-24T16:09:32.2602681Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2602754Z     
2025-02-24T16:09:32.2602840Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2602942Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2603032Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2603167Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2603339Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2603432Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2603545Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2603616Z             else:
2025-02-24T16:09:32.2603710Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2603818Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2603821Z 
2025-02-24T16:09:32.2603956Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2604159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2604314Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2604387Z     ???
2025-02-24T16:09:32.2604496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2604500Z 
2025-02-24T16:09:32.2604571Z >   ???
2025-02-24T16:09:32.2604730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2604864Z E   
2025-02-24T16:09:32.2605094Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2605280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2605405Z E          ...
2025-02-24T16:09:32.2605550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2605772Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2605961Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2606093Z E          ...
2025-02-24T16:09:32.2606245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2606605Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2606792Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2606798Z 
2025-02-24T16:09:32.2606950Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2607315Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T16:09:32.2607327Z 
2025-02-24T16:09:32.2607723Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5fd0>
2025-02-24T16:09:32.2607956Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2608052Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2608056Z 
2025-02-24T16:09:32.2608195Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2608315Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2608402Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2608478Z         try:
2025-02-24T16:09:32.2608623Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2608703Z         except KeyError:
2025-02-24T16:09:32.2608845Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2608912Z     
2025-02-24T16:09:32.2609003Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2609096Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2609194Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2609333Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2609418Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2609512Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2609621Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2609625Z 
2025-02-24T16:09:32.2609759Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2609873Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2609878Z 
2025-02-24T16:09:32.2610015Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2610104Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2610214Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2610297Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2610585Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2610668Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2610778Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2610855Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2610938Z err_msg = None
2025-02-24T16:09:32.2610942Z 
2025-02-24T16:09:32.2611054Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2611241Z         if err_msg is None:
2025-02-24T16:09:32.2611346Z             if left.shape != right.shape:
2025-02-24T16:09:32.2611432Z                 raise_assert_detail(
2025-02-24T16:09:32.2611581Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2611650Z                 )
2025-02-24T16:09:32.2611722Z     
2025-02-24T16:09:32.2611793Z             diff = 0
2025-02-24T16:09:32.2611908Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2612006Z                 # count up differences
2025-02-24T16:09:32.2612182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2612264Z                     diff += 1
2025-02-24T16:09:32.2612333Z     
2025-02-24T16:09:32.2612424Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2612561Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2612742Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2612852Z E           AssertionError: Series are different
2025-02-24T16:09:32.2612922Z E           
2025-02-24T16:09:32.2613028Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2613405Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2613752Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2614093Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2614101Z 
2025-02-24T16:09:32.2614421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2614632Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T16:09:32.2614635Z 
2025-02-24T16:09:32.2614866Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6870>
2025-02-24T16:09:32.2615038Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2615132Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2615140Z 
2025-02-24T16:09:32.2615288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2615405Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2615493Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2615564Z         try:
2025-02-24T16:09:32.2615708Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2615788Z         except KeyError:
2025-02-24T16:09:32.2616021Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2616094Z     
2025-02-24T16:09:32.2616181Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2616434Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2616545Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2616685Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2616770Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2616867Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2617097Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2617102Z 
2025-02-24T16:09:32.2617235Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2617350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2617354Z 
2025-02-24T16:09:32.2617490Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2617586Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2617698Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2617778Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2617922Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2618005Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2618114Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2618200Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2618276Z err_msg = None
2025-02-24T16:09:32.2618280Z 
2025-02-24T16:09:32.2618395Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2618478Z         if err_msg is None:
2025-02-24T16:09:32.2618578Z             if left.shape != right.shape:
2025-02-24T16:09:32.2618663Z                 raise_assert_detail(
2025-02-24T16:09:32.2618815Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2618895Z                 )
2025-02-24T16:09:32.2618963Z     
2025-02-24T16:09:32.2619041Z             diff = 0
2025-02-24T16:09:32.2619155Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2619245Z                 # count up differences
2025-02-24T16:09:32.2619413Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2619499Z                     diff += 1
2025-02-24T16:09:32.2619568Z     
2025-02-24T16:09:32.2619657Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2619798Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2619969Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2620078Z E           AssertionError: Series are different
2025-02-24T16:09:32.2620149Z E           
2025-02-24T16:09:32.2620257Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2620642Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2621026Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2621411Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2621530Z 
2025-02-24T16:09:32.2621851Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2622110Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T16:09:32.2622115Z 
2025-02-24T16:09:32.2622245Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2622377Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2622475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2622611Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2622744Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2622839Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2622918Z err_msg = None
2025-02-24T16:09:32.2622922Z 
2025-02-24T16:09:32.2623030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2623114Z         if err_msg is None:
2025-02-24T16:09:32.2623210Z             if left.shape != right.shape:
2025-02-24T16:09:32.2623302Z                 raise_assert_detail(
2025-02-24T16:09:32.2623448Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2623520Z                 )
2025-02-24T16:09:32.2623590Z     
2025-02-24T16:09:32.2623660Z             diff = 0
2025-02-24T16:09:32.2623775Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2623862Z                 # count up differences
2025-02-24T16:09:32.2624038Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2624119Z                     diff += 1
2025-02-24T16:09:32.2624186Z     
2025-02-24T16:09:32.2624277Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2624412Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2624588Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2624707Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2624782Z E           
2025-02-24T16:09:32.2624898Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2625161Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2625432Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2625436Z 
2025-02-24T16:09:32.2625746Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2625754Z 
2025-02-24T16:09:32.2625925Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2625929Z 
2025-02-24T16:09:32.2626158Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5040>
2025-02-24T16:09:32.2626529Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>, attr = 'nu'
2025-02-24T16:09:32.2626535Z 
2025-02-24T16:09:32.2626676Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2626922Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2627006Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2627081Z         try:
2025-02-24T16:09:32.2627223Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2627309Z         except KeyError:
2025-02-24T16:09:32.2627451Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2627518Z     
2025-02-24T16:09:32.2627608Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2627822Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2627919Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2628052Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2628141Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2628234Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2628343Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2628353Z 
2025-02-24T16:09:32.2628486Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2628599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2628754Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2628827Z     ???
2025-02-24T16:09:32.2628937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2628941Z 
2025-02-24T16:09:32.2629012Z >   ???
2025-02-24T16:09:32.2629143Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2629217Z E   
2025-02-24T16:09:32.2629346Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2629466Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2629541Z E          ...
2025-02-24T16:09:32.2629627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2629815Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2630020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2630148Z E          ...
2025-02-24T16:09:32.2630296Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2630513Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2630694Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2630700Z 
2025-02-24T16:09:32.2630851Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2631207Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T16:09:32.2631213Z 
2025-02-24T16:09:32.2631430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2631652Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2631816Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2632482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2632709Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2632874Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2632999Z err_msg = None
2025-02-24T16:09:32.2633004Z 
2025-02-24T16:09:32.2633123Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2633205Z         if err_msg is None:
2025-02-24T16:09:32.2633304Z             if left.shape != right.shape:
2025-02-24T16:09:32.2633391Z                 raise_assert_detail(
2025-02-24T16:09:32.2633539Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2633611Z                 )
2025-02-24T16:09:32.2633683Z     
2025-02-24T16:09:32.2633757Z             diff = 0
2025-02-24T16:09:32.2633868Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2633959Z                 # count up differences
2025-02-24T16:09:32.2634255Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2634335Z                     diff += 1
2025-02-24T16:09:32.2634407Z     
2025-02-24T16:09:32.2634494Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2634634Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2634804Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2634926Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2635071Z E           
2025-02-24T16:09:32.2635191Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2635465Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2635731Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2635735Z 
2025-02-24T16:09:32.2636046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2636051Z 
2025-02-24T16:09:32.2636231Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2636235Z 
2025-02-24T16:09:32.2636637Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5100>
2025-02-24T16:09:32.2636816Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2636901Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2636905Z 
2025-02-24T16:09:32.2637049Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2637167Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2637253Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2637330Z         try:
2025-02-24T16:09:32.2637474Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2637558Z         except KeyError:
2025-02-24T16:09:32.2637703Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2637772Z     
2025-02-24T16:09:32.2637869Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2637963Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2638056Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2638186Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2638275Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2638370Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2638479Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2638486Z 
2025-02-24T16:09:32.2638620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2638733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2638884Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2638957Z     ???
2025-02-24T16:09:32.2639065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2639069Z 
2025-02-24T16:09:32.2639141Z >   ???
2025-02-24T16:09:32.2639271Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2639344Z E   
2025-02-24T16:09:32.2639475Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2639593Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2639668Z E          ...
2025-02-24T16:09:32.2639754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2639885Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2640129Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2640203Z E          ...
2025-02-24T16:09:32.2640287Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2640417Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2640526Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2640530Z 
2025-02-24T16:09:32.2640623Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2640915Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T16:09:32.2640920Z 
2025-02-24T16:09:32.2641053Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2641182Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2641282Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2641414Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2641547Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2641640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2641721Z err_msg = None
2025-02-24T16:09:32.2641725Z 
2025-02-24T16:09:32.2641841Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2641922Z         if err_msg is None:
2025-02-24T16:09:32.2642022Z             if left.shape != right.shape:
2025-02-24T16:09:32.2642115Z                 raise_assert_detail(
2025-02-24T16:09:32.2642268Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2642338Z                 )
2025-02-24T16:09:32.2642412Z     
2025-02-24T16:09:32.2642490Z             diff = 0
2025-02-24T16:09:32.2642603Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2642694Z                 # count up differences
2025-02-24T16:09:32.2642869Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2642953Z                     diff += 1
2025-02-24T16:09:32.2643029Z     
2025-02-24T16:09:32.2643124Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2643267Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2643439Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2643560Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2643631Z E           
2025-02-24T16:09:32.2643749Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2644024Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2644290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2644294Z 
2025-02-24T16:09:32.2644604Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2644612Z 
2025-02-24T16:09:32.2644786Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2644790Z 
2025-02-24T16:09:32.2645015Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5460>
2025-02-24T16:09:32.2645225Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>, attr = 'f_lu'
2025-02-24T16:09:32.2645229Z 
2025-02-24T16:09:32.2645369Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2645580Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2645666Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2645735Z         try:
2025-02-24T16:09:32.2645877Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2645956Z         except KeyError:
2025-02-24T16:09:32.2646100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2646166Z     
2025-02-24T16:09:32.2646258Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2646635Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2646729Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2646868Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2646955Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2647049Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2647159Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2647169Z 
2025-02-24T16:09:32.2647352Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2647555Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2647847Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2647963Z     ???
2025-02-24T16:09:32.2648143Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2648148Z 
2025-02-24T16:09:32.2648262Z >   ???
2025-02-24T16:09:32.2648476Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2648588Z E   
2025-02-24T16:09:32.2648811Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2648986Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2649108Z E          ...
2025-02-24T16:09:32.2649245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2649470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2649690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2649813Z E          ...
2025-02-24T16:09:32.2649976Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2650209Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2650408Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2650417Z 
2025-02-24T16:09:32.2650586Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2650947Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T16:09:32.2650954Z 
2025-02-24T16:09:32.2651195Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2651426Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2651611Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2651841Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2652073Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2652245Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2652375Z err_msg = None
2025-02-24T16:09:32.2652382Z 
2025-02-24T16:09:32.2652579Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2652717Z         if err_msg is None:
2025-02-24T16:09:32.2652885Z             if left.shape != right.shape:
2025-02-24T16:09:32.2653040Z                 raise_assert_detail(
2025-02-24T16:09:32.2653293Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2653417Z                 )
2025-02-24T16:09:32.2653538Z     
2025-02-24T16:09:32.2653665Z             diff = 0
2025-02-24T16:09:32.2653861Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2654019Z                 # count up differences
2025-02-24T16:09:32.2654565Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2654699Z                     diff += 1
2025-02-24T16:09:32.2654820Z     
2025-02-24T16:09:32.2654970Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2655211Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2655510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2655707Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2655942Z E           
2025-02-24T16:09:32.2656140Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2656813Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2657320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2657328Z 
2025-02-24T16:09:32.2657866Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2657882Z 
2025-02-24T16:09:32.2658184Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2658190Z 
2025-02-24T16:09:32.2658592Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6e70>
2025-02-24T16:09:32.2658884Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2659024Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2659031Z 
2025-02-24T16:09:32.2659277Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2659488Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2659595Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2659670Z         try:
2025-02-24T16:09:32.2659821Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2659902Z         except KeyError:
2025-02-24T16:09:32.2660047Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2660116Z     
2025-02-24T16:09:32.2660214Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2660311Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2660406Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2660548Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2660636Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2660731Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2660843Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2660925Z             else:
2025-02-24T16:09:32.2661021Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2661135Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2661140Z 
2025-02-24T16:09:32.2661272Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2661389Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2661541Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2661615Z     ???
2025-02-24T16:09:32.2661732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2661737Z 
2025-02-24T16:09:32.2661811Z >   ???
2025-02-24T16:09:32.2661942Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2662015Z E   
2025-02-24T16:09:32.2662144Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2662261Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2662479Z E          ...
2025-02-24T16:09:32.2662573Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2662710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2662824Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2662899Z E          ...
2025-02-24T16:09:32.2662985Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2663118Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2663325Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2663336Z 
2025-02-24T16:09:32.2663432Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2663640Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T16:09:32.2663644Z 
2025-02-24T16:09:32.2663776Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2663916Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2664029Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2664168Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2664300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2664393Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2664472Z err_msg = None
2025-02-24T16:09:32.2664480Z 
2025-02-24T16:09:32.2664594Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2664679Z         if err_msg is None:
2025-02-24T16:09:32.2664783Z             if left.shape != right.shape:
2025-02-24T16:09:32.2664869Z                 raise_assert_detail(
2025-02-24T16:09:32.2665027Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2665097Z                 )
2025-02-24T16:09:32.2665173Z     
2025-02-24T16:09:32.2665245Z             diff = 0
2025-02-24T16:09:32.2665367Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2665460Z                 # count up differences
2025-02-24T16:09:32.2665636Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2665720Z                     diff += 1
2025-02-24T16:09:32.2665788Z     
2025-02-24T16:09:32.2665884Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2666029Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2666210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2666527Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2666602Z E           
2025-02-24T16:09:32.2666723Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2666987Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2667266Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2667271Z 
2025-02-24T16:09:32.2667615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2667623Z 
2025-02-24T16:09:32.2667913Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2667930Z 
2025-02-24T16:09:32.2668319Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6c00>
2025-02-24T16:09:32.2668784Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2668904Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2668908Z 
2025-02-24T16:09:32.2669055Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2669172Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2669263Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2669339Z         try:
2025-02-24T16:09:32.2669589Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2669678Z         except KeyError:
2025-02-24T16:09:32.2669819Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2669892Z     
2025-02-24T16:09:32.2669980Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2670077Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2670171Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2670307Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2670401Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2670491Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2670606Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2670676Z             else:
2025-02-24T16:09:32.2670775Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2670888Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2670892Z 
2025-02-24T16:09:32.2671022Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2671140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2671289Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2671362Z     ???
2025-02-24T16:09:32.2671475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2671480Z 
2025-02-24T16:09:32.2671546Z >   ???
2025-02-24T16:09:32.2671685Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2671752Z E   
2025-02-24T16:09:32.2671887Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2671999Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2672075Z E          ...
2025-02-24T16:09:32.2672170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2672303Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2672425Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2672495Z E          ...
2025-02-24T16:09:32.2672585Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2672710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2672820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2672824Z 
2025-02-24T16:09:32.2672919Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2673116Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T16:09:32.2673123Z 
2025-02-24T16:09:32.2673257Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2673390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2673490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2673627Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2673755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2673853Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2673928Z err_msg = None
2025-02-24T16:09:32.2673932Z 
2025-02-24T16:09:32.2674050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2674134Z         if err_msg is None:
2025-02-24T16:09:32.2674229Z             if left.shape != right.shape:
2025-02-24T16:09:32.2674409Z                 raise_assert_detail(
2025-02-24T16:09:32.2674556Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2674632Z                 )
2025-02-24T16:09:32.2674699Z     
2025-02-24T16:09:32.2674776Z             diff = 0
2025-02-24T16:09:32.2674893Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2674981Z                 # count up differences
2025-02-24T16:09:32.2675236Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2675319Z                     diff += 1
2025-02-24T16:09:32.2675390Z     
2025-02-24T16:09:32.2675481Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2675624Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2675800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2675915Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2675995Z E           
2025-02-24T16:09:32.2676108Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2676556Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2676835Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2676840Z 
2025-02-24T16:09:32.2677152Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2677160Z 
2025-02-24T16:09:32.2677340Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2677344Z 
2025-02-24T16:09:32.2677576Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6990>
2025-02-24T16:09:32.2677748Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2677827Z attr = 'j_blues'
2025-02-24T16:09:32.2677831Z 
2025-02-24T16:09:32.2677972Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2678095Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2678184Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2678254Z         try:
2025-02-24T16:09:32.2678396Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2678476Z         except KeyError:
2025-02-24T16:09:32.2678617Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2678684Z     
2025-02-24T16:09:32.2678777Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2678872Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2678960Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2679096Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2679180Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2679275Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2679389Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2679465Z             else:
2025-02-24T16:09:32.2679570Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2679679Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2679684Z 
2025-02-24T16:09:32.2679813Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2679925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2680077Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2680295Z     ???
2025-02-24T16:09:32.2680405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2680409Z 
2025-02-24T16:09:32.2680481Z >   ???
2025-02-24T16:09:32.2680610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2680681Z E   
2025-02-24T16:09:32.2680810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2680923Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2680998Z E          ...
2025-02-24T16:09:32.2681189Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2681326Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2681439Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2681516Z E          ...
2025-02-24T16:09:32.2681602Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2681731Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2681846Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2681850Z 
2025-02-24T16:09:32.2681937Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2682145Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T16:09:32.2682149Z 
2025-02-24T16:09:32.2682287Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2682421Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2682528Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2682664Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2682793Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2682888Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2682966Z err_msg = None
2025-02-24T16:09:32.2682974Z 
2025-02-24T16:09:32.2683089Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2683169Z         if err_msg is None:
2025-02-24T16:09:32.2683271Z             if left.shape != right.shape:
2025-02-24T16:09:32.2683358Z                 raise_assert_detail(
2025-02-24T16:09:32.2683514Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2683586Z                 )
2025-02-24T16:09:32.2683660Z     
2025-02-24T16:09:32.2683738Z             diff = 0
2025-02-24T16:09:32.2683857Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2683956Z                 # count up differences
2025-02-24T16:09:32.2684133Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2684219Z                     diff += 1
2025-02-24T16:09:32.2684287Z     
2025-02-24T16:09:32.2684383Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2684524Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2684702Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2684823Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2684893Z E           
2025-02-24T16:09:32.2685014Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2685286Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2685551Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2685650Z 
2025-02-24T16:09:32.2686073Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2686080Z 
2025-02-24T16:09:32.2686532Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2686542Z 
2025-02-24T16:09:32.2686933Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af4080>
2025-02-24T16:09:32.2687403Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2687533Z attr = 'lines'
2025-02-24T16:09:32.2687539Z 
2025-02-24T16:09:32.2687783Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2687985Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2688128Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2688251Z         try:
2025-02-24T16:09:32.2688489Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2688640Z         except KeyError:
2025-02-24T16:09:32.2688924Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2689137Z     
2025-02-24T16:09:32.2689375Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2689506Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2689758Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2689945Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2690101Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2690246Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2690427Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2690518Z             else:
2025-02-24T16:09:32.2690754Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2690949Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2690954Z 
2025-02-24T16:09:32.2691115Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2691306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2691474Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2691673Z     ???
2025-02-24T16:09:32.2691871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2691875Z 
2025-02-24T16:09:32.2691975Z >   ???
2025-02-24T16:09:32.2692171Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2692259Z E   
2025-02-24T16:09:32.2692525Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2692723Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2692827Z E          ...
2025-02-24T16:09:32.2692982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2693132Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2693358Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2704105Z E          ...
2025-02-24T16:09:32.2704229Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2704388Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2704512Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2704518Z 
2025-02-24T16:09:32.2704686Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2705113Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T16:09:32.2705121Z 
2025-02-24T16:09:32.2705521Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5ac0>
2025-02-24T16:09:32.2705825Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2705944Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2705949Z 
2025-02-24T16:09:32.2706096Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2706225Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2706683Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2706762Z         try:
2025-02-24T16:09:32.2706913Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2707003Z         except KeyError:
2025-02-24T16:09:32.2707152Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2707220Z     
2025-02-24T16:09:32.2707315Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2707414Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2707509Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2707760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2707854Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2707949Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2708066Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2708071Z 
2025-02-24T16:09:32.2708207Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2708332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2708336Z 
2025-02-24T16:09:32.2708481Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2708572Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2708682Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2708769Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2708917Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2709007Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2709119Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2709199Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2709280Z err_msg = None
2025-02-24T16:09:32.2709284Z 
2025-02-24T16:09:32.2709400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2709491Z         if err_msg is None:
2025-02-24T16:09:32.2709587Z             if left.shape != right.shape:
2025-02-24T16:09:32.2709678Z                 raise_assert_detail(
2025-02-24T16:09:32.2709834Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2709906Z                 )
2025-02-24T16:09:32.2709978Z     
2025-02-24T16:09:32.2710049Z             diff = 0
2025-02-24T16:09:32.2710168Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2710255Z                 # count up differences
2025-02-24T16:09:32.2710444Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2710526Z                     diff += 1
2025-02-24T16:09:32.2710593Z     
2025-02-24T16:09:32.2710686Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2710825Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2711002Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2711112Z E           AssertionError: Series are different
2025-02-24T16:09:32.2711186Z E           
2025-02-24T16:09:32.2711294Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2711674Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2712018Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2712466Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2712471Z 
2025-02-24T16:09:32.2712867Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2713114Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T16:09:32.2713119Z 
2025-02-24T16:09:32.2713354Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af58b0>
2025-02-24T16:09:32.2713527Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2713623Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2713627Z 
2025-02-24T16:09:32.2713771Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2713888Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2713971Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2714039Z         try:
2025-02-24T16:09:32.2714190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2714269Z         except KeyError:
2025-02-24T16:09:32.2714415Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2714486Z     
2025-02-24T16:09:32.2714570Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2714671Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2714760Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2714897Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2714981Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2715074Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2715195Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2715199Z 
2025-02-24T16:09:32.2715327Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2715448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2715453Z 
2025-02-24T16:09:32.2715590Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2715679Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2715795Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2715874Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2716021Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2716103Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2716215Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2716433Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2716517Z err_msg = None
2025-02-24T16:09:32.2716521Z 
2025-02-24T16:09:32.2716639Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2716722Z         if err_msg is None:
2025-02-24T16:09:32.2716820Z             if left.shape != right.shape:
2025-02-24T16:09:32.2716903Z                 raise_assert_detail(
2025-02-24T16:09:32.2717055Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2717129Z                 )
2025-02-24T16:09:32.2717201Z     
2025-02-24T16:09:32.2717273Z             diff = 0
2025-02-24T16:09:32.2717383Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2717473Z                 # count up differences
2025-02-24T16:09:32.2717645Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2717727Z                     diff += 1
2025-02-24T16:09:32.2717793Z     
2025-02-24T16:09:32.2718006Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2718149Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2718320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2718431Z E           AssertionError: Series are different
2025-02-24T16:09:32.2718499Z E           
2025-02-24T16:09:32.2718607Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2719114Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2719497Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2719891Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2719896Z 
2025-02-24T16:09:32.2720231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2720431Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T16:09:32.2720439Z 
2025-02-24T16:09:32.2720578Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2720715Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2720815Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2720956Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2721079Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2721178Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2721257Z err_msg = None
2025-02-24T16:09:32.2721261Z 
2025-02-24T16:09:32.2721373Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2721458Z         if err_msg is None:
2025-02-24T16:09:32.2721553Z             if left.shape != right.shape:
2025-02-24T16:09:32.2721645Z                 raise_assert_detail(
2025-02-24T16:09:32.2721799Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2721868Z                 )
2025-02-24T16:09:32.2721941Z     
2025-02-24T16:09:32.2722011Z             diff = 0
2025-02-24T16:09:32.2722127Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2722215Z                 # count up differences
2025-02-24T16:09:32.2722396Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2722480Z                     diff += 1
2025-02-24T16:09:32.2722547Z     
2025-02-24T16:09:32.2722637Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2722877Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2723184Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2723375Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2723629Z E           
2025-02-24T16:09:32.2723825Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2724307Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2724897Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2724905Z 
2025-02-24T16:09:32.2725443Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2725456Z 
2025-02-24T16:09:32.2725750Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2725756Z 
2025-02-24T16:09:32.2726163Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7b30>
2025-02-24T16:09:32.2726523Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>, attr = 'nu'
2025-02-24T16:09:32.2726534Z 
2025-02-24T16:09:32.2726678Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2726804Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2726888Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2726961Z         try:
2025-02-24T16:09:32.2727105Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2727190Z         except KeyError:
2025-02-24T16:09:32.2727337Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2727402Z     
2025-02-24T16:09:32.2727493Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2727593Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2727686Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2727821Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2727911Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2728004Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2728115Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2728119Z 
2025-02-24T16:09:32.2728255Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2728369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2728523Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2728593Z     ???
2025-02-24T16:09:32.2728707Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2728712Z 
2025-02-24T16:09:32.2728784Z >   ???
2025-02-24T16:09:32.2728917Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2728986Z E   
2025-02-24T16:09:32.2729112Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2729226Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2729298Z E          ...
2025-02-24T16:09:32.2729385Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2729523Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2729638Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2729716Z E          ...
2025-02-24T16:09:32.2729800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2729933Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2730044Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2730049Z 
2025-02-24T16:09:32.2730139Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2730357Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T16:09:32.2730523Z 
2025-02-24T16:09:32.2730659Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2730796Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2730899Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2731029Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2731261Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2731359Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2731438Z err_msg = None
2025-02-24T16:09:32.2731442Z 
2025-02-24T16:09:32.2731562Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2731644Z         if err_msg is None:
2025-02-24T16:09:32.2731748Z             if left.shape != right.shape:
2025-02-24T16:09:32.2731839Z                 raise_assert_detail(
2025-02-24T16:09:32.2731989Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2732058Z                 )
2025-02-24T16:09:32.2732129Z     
2025-02-24T16:09:32.2732207Z             diff = 0
2025-02-24T16:09:32.2732317Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2732409Z                 # count up differences
2025-02-24T16:09:32.2732586Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2732667Z                     diff += 1
2025-02-24T16:09:32.2732733Z     
2025-02-24T16:09:32.2732826Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2732970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2733142Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2733260Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2733334Z E           
2025-02-24T16:09:32.2733450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2733715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2733988Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2733993Z 
2025-02-24T16:09:32.2734313Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2734321Z 
2025-02-24T16:09:32.2734496Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2734500Z 
2025-02-24T16:09:32.2734727Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6f30>
2025-02-24T16:09:32.2734905Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2734984Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2734989Z 
2025-02-24T16:09:32.2735138Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2735268Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2735350Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2735425Z         try:
2025-02-24T16:09:32.2735568Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2735652Z         except KeyError:
2025-02-24T16:09:32.2735793Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2735866Z     
2025-02-24T16:09:32.2736049Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2736145Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2736241Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2736489Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2736580Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2736670Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2736785Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2736790Z 
2025-02-24T16:09:32.2737040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2737162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2737315Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2737384Z     ???
2025-02-24T16:09:32.2737496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2737500Z 
2025-02-24T16:09:32.2737572Z >   ???
2025-02-24T16:09:32.2737706Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2737776Z E   
2025-02-24T16:09:32.2737904Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2738020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2738089Z E          ...
2025-02-24T16:09:32.2738183Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2738321Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2738439Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2738514Z E          ...
2025-02-24T16:09:32.2738599Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2738728Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2738832Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2738837Z 
2025-02-24T16:09:32.2738932Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2739138Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T16:09:32.2739147Z 
2025-02-24T16:09:32.2739282Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2739420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2739520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2739661Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2739795Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2739890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2739975Z err_msg = None
2025-02-24T16:09:32.2739979Z 
2025-02-24T16:09:32.2740164Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2740315Z         if err_msg is None:
2025-02-24T16:09:32.2740481Z             if left.shape != right.shape:
2025-02-24T16:09:32.2740629Z                 raise_assert_detail(
2025-02-24T16:09:32.2740882Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2741006Z                 )
2025-02-24T16:09:32.2741129Z     
2025-02-24T16:09:32.2741266Z             diff = 0
2025-02-24T16:09:32.2741391Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2741480Z                 # count up differences
2025-02-24T16:09:32.2741660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2741741Z                     diff += 1
2025-02-24T16:09:32.2741812Z     
2025-02-24T16:09:32.2741902Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2742045Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2742223Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2742342Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2742546Z E           
2025-02-24T16:09:32.2742666Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2742934Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2743271Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2743280Z 
2025-02-24T16:09:32.2743607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2743616Z 
2025-02-24T16:09:32.2743795Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2743800Z 
2025-02-24T16:09:32.2744030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7350>
2025-02-24T16:09:32.2744244Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>, attr = 'f_lu'
2025-02-24T16:09:32.2744247Z 
2025-02-24T16:09:32.2744389Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2744511Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2744599Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2744667Z         try:
2025-02-24T16:09:32.2744813Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2744891Z         except KeyError:
2025-02-24T16:09:32.2745033Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2745100Z     
2025-02-24T16:09:32.2745189Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2745283Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2745369Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2745503Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2745587Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2745679Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2745792Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2745796Z 
2025-02-24T16:09:32.2745926Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2746041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2746187Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2746258Z     ???
2025-02-24T16:09:32.2746560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2746565Z 
2025-02-24T16:09:32.2746629Z >   ???
2025-02-24T16:09:32.2746765Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2746839Z E   
2025-02-24T16:09:32.2746972Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2747080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2747152Z E          ...
2025-02-24T16:09:32.2747241Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2747374Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2747495Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2747562Z E          ...
2025-02-24T16:09:32.2747651Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2747808Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2747916Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2747920Z 
2025-02-24T16:09:32.2748010Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2748216Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T16:09:32.2748339Z 
2025-02-24T16:09:32.2748478Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2748609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2748708Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2748844Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2749086Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2749185Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2749257Z err_msg = None
2025-02-24T16:09:32.2749261Z 
2025-02-24T16:09:32.2749374Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2749454Z         if err_msg is None:
2025-02-24T16:09:32.2749547Z             if left.shape != right.shape:
2025-02-24T16:09:32.2749637Z                 raise_assert_detail(
2025-02-24T16:09:32.2749780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2749850Z                 )
2025-02-24T16:09:32.2749916Z     
2025-02-24T16:09:32.2749993Z             diff = 0
2025-02-24T16:09:32.2750110Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2750197Z                 # count up differences
2025-02-24T16:09:32.2750381Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2750460Z                     diff += 1
2025-02-24T16:09:32.2750534Z     
2025-02-24T16:09:32.2750624Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2750768Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2750945Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2751057Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2751134Z E           
2025-02-24T16:09:32.2751246Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2751514Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2751786Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2751791Z 
2025-02-24T16:09:32.2752099Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2752107Z 
2025-02-24T16:09:32.2752284Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2752288Z 
2025-02-24T16:09:32.2752523Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37da0>
2025-02-24T16:09:32.2752695Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2752777Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2752781Z 
2025-02-24T16:09:32.2752919Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2753039Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2753127Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2753196Z         try:
2025-02-24T16:09:32.2753340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2753421Z         except KeyError:
2025-02-24T16:09:32.2753565Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2753633Z     
2025-02-24T16:09:32.2753816Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2753916Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2754006Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2754141Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2754226Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2754322Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2754431Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2754507Z             else:
2025-02-24T16:09:32.2754683Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2754795Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2754799Z 
2025-02-24T16:09:32.2754931Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2755044Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2755195Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2755272Z     ???
2025-02-24T16:09:32.2755382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2755386Z 
2025-02-24T16:09:32.2755457Z >   ???
2025-02-24T16:09:32.2755585Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2755655Z E   
2025-02-24T16:09:32.2755785Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2755898Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2755974Z E          ...
2025-02-24T16:09:32.2756066Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2756202Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2756475Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2756552Z E          ...
2025-02-24T16:09:32.2756641Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2756772Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2756888Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2756892Z 
2025-02-24T16:09:32.2756980Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2757194Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T16:09:32.2757198Z 
2025-02-24T16:09:32.2757329Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2757466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2757567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2757700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2757828Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2757923Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2758005Z err_msg = None
2025-02-24T16:09:32.2758009Z 
2025-02-24T16:09:32.2758124Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2758204Z         if err_msg is None:
2025-02-24T16:09:32.2758304Z             if left.shape != right.shape:
2025-02-24T16:09:32.2758389Z                 raise_assert_detail(
2025-02-24T16:09:32.2758539Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2758618Z                 )
2025-02-24T16:09:32.2758753Z     
2025-02-24T16:09:32.2758891Z             diff = 0
2025-02-24T16:09:32.2759084Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2759237Z                 # count up differences
2025-02-24T16:09:32.2759529Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2759663Z                     diff += 1
2025-02-24T16:09:32.2759780Z     
2025-02-24T16:09:32.2759930Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2760212Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2760390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2760507Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2760577Z E           
2025-02-24T16:09:32.2760697Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2761070Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2761338Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2761348Z 
2025-02-24T16:09:32.2761663Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2761667Z 
2025-02-24T16:09:32.2761846Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2761850Z 
2025-02-24T16:09:32.2762079Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b36f90>
2025-02-24T16:09:32.2762259Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2762341Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2762345Z 
2025-02-24T16:09:32.2762491Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2762614Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2762697Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2762770Z         try:
2025-02-24T16:09:32.2762911Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2763000Z         except KeyError:
2025-02-24T16:09:32.2763140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2763219Z     
2025-02-24T16:09:32.2763314Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2763409Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2763504Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2763635Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2763732Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2763824Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2763939Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2764015Z             else:
2025-02-24T16:09:32.2764112Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2764226Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2764230Z 
2025-02-24T16:09:32.2764359Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2764477Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2764629Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2764697Z     ???
2025-02-24T16:09:32.2764810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2764814Z 
2025-02-24T16:09:32.2764882Z >   ???
2025-02-24T16:09:32.2765014Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2765085Z E   
2025-02-24T16:09:32.2765222Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2765337Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2765408Z E          ...
2025-02-24T16:09:32.2765498Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2765628Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2765745Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2765907Z E          ...
2025-02-24T16:09:32.2765998Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2766131Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2766234Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2766238Z 
2025-02-24T16:09:32.2766448Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2766652Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T16:09:32.2766655Z 
2025-02-24T16:09:32.2766900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2767037Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2767135Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2767274Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2767403Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2767504Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2767581Z err_msg = None
2025-02-24T16:09:32.2767585Z 
2025-02-24T16:09:32.2767698Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2767783Z         if err_msg is None:
2025-02-24T16:09:32.2767877Z             if left.shape != right.shape:
2025-02-24T16:09:32.2767970Z                 raise_assert_detail(
2025-02-24T16:09:32.2768118Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2768192Z                 )
2025-02-24T16:09:32.2768264Z     
2025-02-24T16:09:32.2768335Z             diff = 0
2025-02-24T16:09:32.2768450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2768537Z                 # count up differences
2025-02-24T16:09:32.2768715Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2768794Z                     diff += 1
2025-02-24T16:09:32.2768866Z     
2025-02-24T16:09:32.2768958Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2769094Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2769274Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2769388Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2769463Z E           
2025-02-24T16:09:32.2769582Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2769845Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2770115Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2770123Z 
2025-02-24T16:09:32.2770433Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2770438Z 
2025-02-24T16:09:32.2770610Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2770614Z 
2025-02-24T16:09:32.2770846Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b35310>
2025-02-24T16:09:32.2771016Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2771099Z attr = 'j_blues'
2025-02-24T16:09:32.2771103Z 
2025-02-24T16:09:32.2771247Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2771481Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2771568Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2771637Z         try:
2025-02-24T16:09:32.2771779Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2771859Z         except KeyError:
2025-02-24T16:09:32.2772000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2772072Z     
2025-02-24T16:09:32.2772159Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2772356Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2772448Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2772585Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2772668Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2772763Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2772875Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2772945Z             else:
2025-02-24T16:09:32.2773049Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2773154Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2773159Z 
2025-02-24T16:09:32.2773291Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2773408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2773555Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2773627Z     ???
2025-02-24T16:09:32.2773741Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2773745Z 
2025-02-24T16:09:32.2773817Z >   ???
2025-02-24T16:09:32.2773945Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2774017Z E   
2025-02-24T16:09:32.2774150Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2774261Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2774337Z E          ...
2025-02-24T16:09:32.2774426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2774561Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2774673Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2774749Z E          ...
2025-02-24T16:09:32.2774838Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2774963Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2775073Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2775085Z 
2025-02-24T16:09:32.2775173Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2775428Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T16:09:32.2775432Z 
2025-02-24T16:09:32.2775570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2775697Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2775801Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2775933Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2776062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2776160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2776234Z err_msg = None
2025-02-24T16:09:32.2776238Z 
2025-02-24T16:09:32.2776582Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2776735Z         if err_msg is None:
2025-02-24T16:09:32.2776908Z             if left.shape != right.shape:
2025-02-24T16:09:32.2777053Z                 raise_assert_detail(
2025-02-24T16:09:32.2777305Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2777430Z                 )
2025-02-24T16:09:32.2777549Z     
2025-02-24T16:09:32.2777680Z             diff = 0
2025-02-24T16:09:32.2778041Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2778195Z                 # count up differences
2025-02-24T16:09:32.2778497Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2778626Z                     diff += 1
2025-02-24T16:09:32.2778746Z     
2025-02-24T16:09:32.2778896Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2779131Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2779600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2779812Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2779892Z E           
2025-02-24T16:09:32.2780007Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2780278Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2780549Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2780564Z 
2025-02-24T16:09:32.2780879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2780883Z 
2025-02-24T16:09:32.2781061Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2781065Z 
2025-02-24T16:09:32.2781297Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37e60>
2025-02-24T16:09:32.2781476Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2781552Z attr = 'lines'
2025-02-24T16:09:32.2781556Z 
2025-02-24T16:09:32.2781697Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2781817Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2781900Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2781975Z         try:
2025-02-24T16:09:32.2782113Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2782200Z         except KeyError:
2025-02-24T16:09:32.2782347Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2782415Z     
2025-02-24T16:09:32.2782506Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2782598Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2782690Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2782822Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2782920Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2783014Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2783124Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2783199Z             else:
2025-02-24T16:09:32.2783295Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2783408Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2783412Z 
2025-02-24T16:09:32.2783544Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2783662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2783815Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2783882Z     ???
2025-02-24T16:09:32.2783995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2784000Z 
2025-02-24T16:09:32.2784072Z >   ???
2025-02-24T16:09:32.2784201Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2784363Z E   
2025-02-24T16:09:32.2784490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2784606Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2784677Z E          ...
2025-02-24T16:09:32.2784771Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2784906Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2785017Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2785095Z E          ...
2025-02-24T16:09:32.2785255Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2785388Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2785495Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2785504Z 
2025-02-24T16:09:32.2785593Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2785907Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T16:09:32.2785917Z 
2025-02-24T16:09:32.2786145Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b358e0>
2025-02-24T16:09:32.2786474Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2786567Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2786576Z 
2025-02-24T16:09:32.2786712Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2786828Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2786910Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2786988Z         try:
2025-02-24T16:09:32.2787128Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2787212Z         except KeyError:
2025-02-24T16:09:32.2787354Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2787425Z     
2025-02-24T16:09:32.2787518Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2787612Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2787709Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2787839Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2787930Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2788024Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2788134Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2788138Z 
2025-02-24T16:09:32.2788264Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2788378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2788382Z 
2025-02-24T16:09:32.2788529Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2788618Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2788727Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2788811Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2788954Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2789041Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2789147Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2789231Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2789310Z err_msg = None
2025-02-24T16:09:32.2789315Z 
2025-02-24T16:09:32.2789426Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2789510Z         if err_msg is None:
2025-02-24T16:09:32.2789607Z             if left.shape != right.shape:
2025-02-24T16:09:32.2789708Z                 raise_assert_detail(
2025-02-24T16:09:32.2789857Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2789931Z                 )
2025-02-24T16:09:32.2789998Z     
2025-02-24T16:09:32.2790077Z             diff = 0
2025-02-24T16:09:32.2790192Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2790406Z                 # count up differences
2025-02-24T16:09:32.2790584Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2790659Z                     diff += 1
2025-02-24T16:09:32.2790730Z     
2025-02-24T16:09:32.2790816Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2790959Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2791131Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2791343Z E           AssertionError: Series are different
2025-02-24T16:09:32.2791420Z E           
2025-02-24T16:09:32.2791521Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2791902Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2792252Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2792588Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2792596Z 
2025-02-24T16:09:32.2792916Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2793221Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T16:09:32.2793225Z 
2025-02-24T16:09:32.2793453Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b365d0>
2025-02-24T16:09:32.2793629Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2793722Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2793731Z 
2025-02-24T16:09:32.2793869Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2793987Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2794069Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2794143Z         try:
2025-02-24T16:09:32.2794280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2794366Z         except KeyError:
2025-02-24T16:09:32.2794513Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2794580Z     
2025-02-24T16:09:32.2794671Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2794763Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2794870Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2795115Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2795271Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2795428Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2795621Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2795627Z 
2025-02-24T16:09:32.2795840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2796032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2796039Z 
2025-02-24T16:09:32.2796226Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2796589Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2796701Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2796785Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2796930Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2797017Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2797123Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2797310Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2797392Z err_msg = None
2025-02-24T16:09:32.2797397Z 
2025-02-24T16:09:32.2797511Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2797595Z         if err_msg is None:
2025-02-24T16:09:32.2797691Z             if left.shape != right.shape:
2025-02-24T16:09:32.2797779Z                 raise_assert_detail(
2025-02-24T16:09:32.2797925Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2798005Z                 )
2025-02-24T16:09:32.2798077Z     
2025-02-24T16:09:32.2798148Z             diff = 0
2025-02-24T16:09:32.2798264Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2798351Z                 # count up differences
2025-02-24T16:09:32.2798529Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2798605Z                     diff += 1
2025-02-24T16:09:32.2798679Z     
2025-02-24T16:09:32.2798774Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2798909Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2799088Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2799192Z E           AssertionError: Series are different
2025-02-24T16:09:32.2799266Z E           
2025-02-24T16:09:32.2799374Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2799756Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2800142Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2800528Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2800536Z 
2025-02-24T16:09:32.2800850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2801099Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T16:09:32.2801103Z 
2025-02-24T16:09:32.2801243Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2801374Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2801475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2801611Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2801843Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2801936Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2802007Z err_msg = None
2025-02-24T16:09:32.2802011Z 
2025-02-24T16:09:32.2802124Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2802203Z         if err_msg is None:
2025-02-24T16:09:32.2802303Z             if left.shape != right.shape:
2025-02-24T16:09:32.2802495Z                 raise_assert_detail(
2025-02-24T16:09:32.2802643Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2802716Z                 )
2025-02-24T16:09:32.2802782Z     
2025-02-24T16:09:32.2802855Z             diff = 0
2025-02-24T16:09:32.2802967Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2803058Z                 # count up differences
2025-02-24T16:09:32.2803236Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2803312Z                     diff += 1
2025-02-24T16:09:32.2803383Z     
2025-02-24T16:09:32.2803472Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2803614Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2803783Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2803907Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2803981Z E           
2025-02-24T16:09:32.2804096Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2804363Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2804631Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2804641Z 
2025-02-24T16:09:32.2804948Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2804956Z 
2025-02-24T16:09:32.2805133Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2805137Z 
2025-02-24T16:09:32.2805364Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37ec0>
2025-02-24T16:09:32.2805577Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>, attr = 'nu'
2025-02-24T16:09:32.2805581Z 
2025-02-24T16:09:32.2805727Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2805845Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2805933Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2806002Z         try:
2025-02-24T16:09:32.2806146Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2806230Z         except KeyError:
2025-02-24T16:09:32.2806471Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2806542Z     
2025-02-24T16:09:32.2806629Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2806729Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2806816Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2806952Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2807041Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2807131Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2807248Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2807370Z 
2025-02-24T16:09:32.2807499Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2807617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2807766Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2807841Z     ???
2025-02-24T16:09:32.2807955Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2807960Z 
2025-02-24T16:09:32.2808026Z >   ???
2025-02-24T16:09:32.2808258Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2808327Z E   
2025-02-24T16:09:32.2808463Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2808578Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2808647Z E          ...
2025-02-24T16:09:32.2808737Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2808867Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2808994Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2809063Z E          ...
2025-02-24T16:09:32.2809153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2809282Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2809384Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2809389Z 
2025-02-24T16:09:32.2809483Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2809774Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T16:09:32.2809779Z 
2025-02-24T16:09:32.2809918Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2810053Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2810150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2810288Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2810414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2810511Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2810588Z err_msg = None
2025-02-24T16:09:32.2810592Z 
2025-02-24T16:09:32.2810703Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2810786Z         if err_msg is None:
2025-02-24T16:09:32.2810886Z             if left.shape != right.shape:
2025-02-24T16:09:32.2810975Z                 raise_assert_detail(
2025-02-24T16:09:32.2811125Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2811199Z                 )
2025-02-24T16:09:32.2811271Z     
2025-02-24T16:09:32.2811341Z             diff = 0
2025-02-24T16:09:32.2811457Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2811544Z                 # count up differences
2025-02-24T16:09:32.2811728Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2811804Z                     diff += 1
2025-02-24T16:09:32.2811876Z     
2025-02-24T16:09:32.2812023Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2812256Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2812555Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2812747Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2812870Z E           
2025-02-24T16:09:32.2813061Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2813371Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2813737Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2813742Z 
2025-02-24T16:09:32.2814056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2814138Z 
2025-02-24T16:09:32.2814313Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2814317Z 
2025-02-24T16:09:32.2814550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b378f0>
2025-02-24T16:09:32.2814722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2814805Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2814809Z 
2025-02-24T16:09:32.2814956Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2815072Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2815161Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2815232Z         try:
2025-02-24T16:09:32.2815376Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2815454Z         except KeyError:
2025-02-24T16:09:32.2815594Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2815664Z     
2025-02-24T16:09:32.2815753Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2815849Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2815937Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2816077Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2816161Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2816255Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2816484Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2816493Z 
2025-02-24T16:09:32.2816620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2816737Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2816884Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2816956Z     ???
2025-02-24T16:09:32.2817063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2817073Z 
2025-02-24T16:09:32.2817140Z >   ???
2025-02-24T16:09:32.2817277Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2817342Z E   
2025-02-24T16:09:32.2817474Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2817583Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2817657Z E          ...
2025-02-24T16:09:32.2817749Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2817880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2818000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2818068Z E          ...
2025-02-24T16:09:32.2818156Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2818282Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2818391Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2818394Z 
2025-02-24T16:09:32.2818485Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2818733Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T16:09:32.2818737Z 
2025-02-24T16:09:32.2818872Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2818998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2819099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2819381Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2819502Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2819598Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2819670Z err_msg = None
2025-02-24T16:09:32.2819675Z 
2025-02-24T16:09:32.2819791Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2819873Z         if err_msg is None:
2025-02-24T16:09:32.2820066Z             if left.shape != right.shape:
2025-02-24T16:09:32.2820157Z                 raise_assert_detail(
2025-02-24T16:09:32.2820303Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2820375Z                 )
2025-02-24T16:09:32.2820440Z     
2025-02-24T16:09:32.2820514Z             diff = 0
2025-02-24T16:09:32.2820629Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2820719Z                 # count up differences
2025-02-24T16:09:32.2820893Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2820968Z                     diff += 1
2025-02-24T16:09:32.2821038Z     
2025-02-24T16:09:32.2821126Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2821266Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2821441Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2821556Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2821629Z E           
2025-02-24T16:09:32.2821741Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2822005Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2822280Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2822285Z 
2025-02-24T16:09:32.2822598Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2822602Z 
2025-02-24T16:09:32.2822777Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2822781Z 
2025-02-24T16:09:32.2823013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b368a0>
2025-02-24T16:09:32.2823222Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>, attr = 'f_lu'
2025-02-24T16:09:32.2823226Z 
2025-02-24T16:09:32.2823370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2823486Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2823574Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2823650Z         try:
2025-02-24T16:09:32.2823790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2823874Z         except KeyError:
2025-02-24T16:09:32.2824011Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2824081Z     
2025-02-24T16:09:32.2824169Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2824264Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2824357Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2824487Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2824574Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2824661Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2824772Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2824932Z 
2025-02-24T16:09:32.2825060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2825177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2825328Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2825396Z     ???
2025-02-24T16:09:32.2825507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2825511Z 
2025-02-24T16:09:32.2825577Z >   ???
2025-02-24T16:09:32.2825784Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2825858Z E   
2025-02-24T16:09:32.2825988Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2826101Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2826170Z E          ...
2025-02-24T16:09:32.2826381Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2826516Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2826638Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2826714Z E          ...
2025-02-24T16:09:32.2826797Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2826926Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2827032Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2827037Z 
2025-02-24T16:09:32.2827130Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2827417Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T16:09:32.2827421Z 
2025-02-24T16:09:32.2827549Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2827679Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2827772Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2827911Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2828039Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2828130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2828207Z err_msg = None
2025-02-24T16:09:32.2828211Z 
2025-02-24T16:09:32.2828321Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2828406Z         if err_msg is None:
2025-02-24T16:09:32.2828502Z             if left.shape != right.shape:
2025-02-24T16:09:32.2828590Z                 raise_assert_detail(
2025-02-24T16:09:32.2828738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2828805Z                 )
2025-02-24T16:09:32.2828875Z     
2025-02-24T16:09:32.2828946Z             diff = 0
2025-02-24T16:09:32.2829059Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2829148Z                 # count up differences
2025-02-24T16:09:32.2829323Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2829403Z                     diff += 1
2025-02-24T16:09:32.2829471Z     
2025-02-24T16:09:32.2829563Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2829699Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2829874Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2829990Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2830063Z E           
2025-02-24T16:09:32.2830186Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2830672Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2831316Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2831324Z 
2025-02-24T16:09:32.2831804Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2831810Z 
2025-02-24T16:09:32.2831983Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2831987Z 
2025-02-24T16:09:32.2832216Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b375c0>
2025-02-24T16:09:32.2832394Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2832471Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2832480Z 
2025-02-24T16:09:32.2832622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2832737Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2832823Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2832892Z         try:
2025-02-24T16:09:32.2833035Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2833124Z         except KeyError:
2025-02-24T16:09:32.2833262Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2833338Z     
2025-02-24T16:09:32.2833425Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2833522Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2833611Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2833747Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2833835Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2833924Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2834041Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2834110Z             else:
2025-02-24T16:09:32.2834214Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2834321Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2834330Z 
2025-02-24T16:09:32.2834456Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2834576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2834724Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2834795Z     ???
2025-02-24T16:09:32.2834904Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2834909Z 
2025-02-24T16:09:32.2834979Z >   ???
2025-02-24T16:09:32.2835114Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2835181Z E   
2025-02-24T16:09:32.2835313Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2835424Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2835498Z E          ...
2025-02-24T16:09:32.2835586Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2835723Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2835841Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2835909Z E          ...
2025-02-24T16:09:32.2835999Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2836129Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2836243Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2836247Z 
2025-02-24T16:09:32.2836479Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2836752Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T16:09:32.2836756Z 
2025-02-24T16:09:32.2836891Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2837157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2837257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2837394Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2837520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2837733Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2837811Z err_msg = None
2025-02-24T16:09:32.2837815Z 
2025-02-24T16:09:32.2837929Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2838008Z         if err_msg is None:
2025-02-24T16:09:32.2838104Z             if left.shape != right.shape:
2025-02-24T16:09:32.2838192Z                 raise_assert_detail(
2025-02-24T16:09:32.2838336Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2838414Z                 )
2025-02-24T16:09:32.2838480Z     
2025-02-24T16:09:32.2838554Z             diff = 0
2025-02-24T16:09:32.2838663Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2838755Z                 # count up differences
2025-02-24T16:09:32.2838930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2839005Z                     diff += 1
2025-02-24T16:09:32.2839075Z     
2025-02-24T16:09:32.2839170Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2839309Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2839480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2839596Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2839670Z E           
2025-02-24T16:09:32.2839781Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2840054Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2840328Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2840333Z 
2025-02-24T16:09:32.2840641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2840646Z 
2025-02-24T16:09:32.2840820Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2840828Z 
2025-02-24T16:09:32.2841059Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37830>
2025-02-24T16:09:32.2841230Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2841313Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2841317Z 
2025-02-24T16:09:32.2841454Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2841573Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2841656Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2841729Z         try:
2025-02-24T16:09:32.2841878Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2841958Z         except KeyError:
2025-02-24T16:09:32.2842100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2842167Z     
2025-02-24T16:09:32.2842258Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2842351Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2842441Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2842665Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2842747Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2842838Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2842945Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2843019Z             else:
2025-02-24T16:09:32.2843113Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2843222Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2843301Z 
2025-02-24T16:09:32.2843435Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2843551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2843702Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2843771Z     ???
2025-02-24T16:09:32.2843886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2843895Z 
2025-02-24T16:09:32.2843965Z >   ???
2025-02-24T16:09:32.2844092Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2844163Z E   
2025-02-24T16:09:32.2844288Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2844402Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2844473Z E          ...
2025-02-24T16:09:32.2844565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2844699Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2844815Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2844888Z E          ...
2025-02-24T16:09:32.2844972Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2845104Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2845210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2845219Z 
2025-02-24T16:09:32.2845308Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2845575Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T16:09:32.2845579Z 
2025-02-24T16:09:32.2845712Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2845846Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2845951Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2846091Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2846220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2846411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2846491Z err_msg = None
2025-02-24T16:09:32.2846495Z 
2025-02-24T16:09:32.2846606Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2846691Z         if err_msg is None:
2025-02-24T16:09:32.2846793Z             if left.shape != right.shape:
2025-02-24T16:09:32.2846876Z                 raise_assert_detail(
2025-02-24T16:09:32.2847026Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2847095Z                 )
2025-02-24T16:09:32.2847165Z     
2025-02-24T16:09:32.2847236Z             diff = 0
2025-02-24T16:09:32.2847351Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2847441Z                 # count up differences
2025-02-24T16:09:32.2847614Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2847695Z                     diff += 1
2025-02-24T16:09:32.2847789Z     
2025-02-24T16:09:32.2847884Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2848022Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2848196Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2848560Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2848681Z E           
2025-02-24T16:09:32.2848877Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2849514Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2849805Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2849810Z 
2025-02-24T16:09:32.2850127Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2850137Z 
2025-02-24T16:09:32.2850309Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2850317Z 
2025-02-24T16:09:32.2850545Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37350>
2025-02-24T16:09:32.2850724Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2850801Z attr = 'j_blues'
2025-02-24T16:09:32.2850805Z 
2025-02-24T16:09:32.2850954Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2851070Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2851158Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2851233Z         try:
2025-02-24T16:09:32.2851372Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2851457Z         except KeyError:
2025-02-24T16:09:32.2851594Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2851670Z     
2025-02-24T16:09:32.2851757Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2851855Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2851948Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2852080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2852169Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2852257Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2852376Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2852446Z             else:
2025-02-24T16:09:32.2852546Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2852657Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2852661Z 
2025-02-24T16:09:32.2852784Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2852900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2853050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2853123Z     ???
2025-02-24T16:09:32.2853236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2853239Z 
2025-02-24T16:09:32.2853305Z >   ???
2025-02-24T16:09:32.2853441Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2853507Z E   
2025-02-24T16:09:32.2853642Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2853756Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2853832Z E          ...
2025-02-24T16:09:32.2853924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2854055Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2854170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2854242Z E          ...
2025-02-24T16:09:32.2854333Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2854549Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2854658Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2854662Z 
2025-02-24T16:09:32.2854754Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2854964Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T16:09:32.2854967Z 
2025-02-24T16:09:32.2855102Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2855313Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2855413Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2855549Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2855671Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2855768Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2855845Z err_msg = None
2025-02-24T16:09:32.2855850Z 
2025-02-24T16:09:32.2855965Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2856052Z         if err_msg is None:
2025-02-24T16:09:32.2856143Z             if left.shape != right.shape:
2025-02-24T16:09:32.2856231Z                 raise_assert_detail(
2025-02-24T16:09:32.2856518Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2856593Z                 )
2025-02-24T16:09:32.2856665Z     
2025-02-24T16:09:32.2856741Z             diff = 0
2025-02-24T16:09:32.2856858Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2856945Z                 # count up differences
2025-02-24T16:09:32.2857120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2857195Z                     diff += 1
2025-02-24T16:09:32.2857266Z     
2025-02-24T16:09:32.2857354Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2857500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2857674Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2857786Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2857860Z E           
2025-02-24T16:09:32.2857972Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2858246Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2858513Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2858522Z 
2025-02-24T16:09:32.2858828Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2858837Z 
2025-02-24T16:09:32.2859006Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2859010Z 
2025-02-24T16:09:32.2859248Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b36450>
2025-02-24T16:09:32.2859425Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2859503Z attr = 'lines'
2025-02-24T16:09:32.2859507Z 
2025-02-24T16:09:32.2859649Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2859771Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2859858Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2859928Z         try:
2025-02-24T16:09:32.2860198Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2860278Z         except KeyError:
2025-02-24T16:09:32.2860419Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2860486Z     
2025-02-24T16:09:32.2860579Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2860675Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2860763Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2861018Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2861106Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2861199Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2861312Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2861389Z             else:
2025-02-24T16:09:32.2861486Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2861595Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2861604Z 
2025-02-24T16:09:32.2861735Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2861851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2862007Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2862079Z     ???
2025-02-24T16:09:32.2862188Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2862192Z 
2025-02-24T16:09:32.2862264Z >   ???
2025-02-24T16:09:32.2862395Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2862470Z E   
2025-02-24T16:09:32.2862600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2862716Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2862790Z E          ...
2025-02-24T16:09:32.2862878Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2863016Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2863132Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2863205Z E          ...
2025-02-24T16:09:32.2863291Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2863419Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2863525Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2863529Z 
2025-02-24T16:09:32.2863620Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2863890Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T16:09:32.2863894Z 
2025-02-24T16:09:32.2864120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b35790>
2025-02-24T16:09:32.2864298Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2864395Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2864399Z 
2025-02-24T16:09:32.2864537Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2864659Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2864742Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2864816Z         try:
2025-02-24T16:09:32.2864961Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2865040Z         except KeyError:
2025-02-24T16:09:32.2865181Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2865248Z     
2025-02-24T16:09:32.2865342Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2865444Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2865537Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2865673Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2865758Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2865850Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2865956Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2865960Z 
2025-02-24T16:09:32.2866179Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2866407Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2866418Z 
2025-02-24T16:09:32.2866560Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2866648Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2866758Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2866955Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2867097Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2867183Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2867292Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2867371Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2867449Z err_msg = None
2025-02-24T16:09:32.2867454Z 
2025-02-24T16:09:32.2867566Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2867652Z         if err_msg is None:
2025-02-24T16:09:32.2867750Z             if left.shape != right.shape:
2025-02-24T16:09:32.2867833Z                 raise_assert_detail(
2025-02-24T16:09:32.2867982Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2868050Z                 )
2025-02-24T16:09:32.2868120Z     
2025-02-24T16:09:32.2868191Z             diff = 0
2025-02-24T16:09:32.2868311Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2868400Z                 # count up differences
2025-02-24T16:09:32.2868568Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2868647Z                     diff += 1
2025-02-24T16:09:32.2868713Z     
2025-02-24T16:09:32.2868803Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2868940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2869122Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2869230Z E           AssertionError: Series are different
2025-02-24T16:09:32.2869301Z E           
2025-02-24T16:09:32.2869408Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2869788Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2870129Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2870475Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2870483Z 
2025-02-24T16:09:32.2870800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2871054Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T16:09:32.2871059Z 
2025-02-24T16:09:32.2871290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b35610>
2025-02-24T16:09:32.2871583Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2871677Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2871681Z 
2025-02-24T16:09:32.2871823Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2871939Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2872025Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2872094Z         try:
2025-02-24T16:09:32.2872238Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2872393Z         except KeyError:
2025-02-24T16:09:32.2872539Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2872610Z     
2025-02-24T16:09:32.2872696Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2872790Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2872926Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2873171Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2873328Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2873483Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2873679Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2873686Z 
2025-02-24T16:09:32.2881372Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2881613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2881621Z 
2025-02-24T16:09:32.2881876Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2882032Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2882197Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2882279Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2882437Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2882523Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2882648Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2882733Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2882820Z err_msg = None
2025-02-24T16:09:32.2882825Z 
2025-02-24T16:09:32.2882955Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2883038Z         if err_msg is None:
2025-02-24T16:09:32.2883144Z             if left.shape != right.shape:
2025-02-24T16:09:32.2883231Z                 raise_assert_detail(
2025-02-24T16:09:32.2883406Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2883483Z                 )
2025-02-24T16:09:32.2883551Z     
2025-02-24T16:09:32.2883628Z             diff = 0
2025-02-24T16:09:32.2883751Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2883848Z                 # count up differences
2025-02-24T16:09:32.2884027Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2884116Z                     diff += 1
2025-02-24T16:09:32.2884189Z     
2025-02-24T16:09:32.2884279Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2884426Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2884603Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2884717Z E           AssertionError: Series are different
2025-02-24T16:09:32.2884788Z E           
2025-02-24T16:09:32.2884902Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2885292Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2885852Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2886469Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2886477Z 
2025-02-24T16:09:32.2886817Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2887036Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T16:09:32.2887046Z 
2025-02-24T16:09:32.2887181Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2887319Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2887423Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2887566Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2887687Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2887785Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2887867Z err_msg = None
2025-02-24T16:09:32.2887871Z 
2025-02-24T16:09:32.2887984Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2888081Z         if err_msg is None:
2025-02-24T16:09:32.2888177Z             if left.shape != right.shape:
2025-02-24T16:09:32.2888269Z                 raise_assert_detail(
2025-02-24T16:09:32.2888425Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2888495Z                 )
2025-02-24T16:09:32.2888567Z     
2025-02-24T16:09:32.2888639Z             diff = 0
2025-02-24T16:09:32.2888758Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2888848Z                 # count up differences
2025-02-24T16:09:32.2889026Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2889107Z                     diff += 1
2025-02-24T16:09:32.2889176Z     
2025-02-24T16:09:32.2889270Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2889406Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2889581Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2889702Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2889777Z E           
2025-02-24T16:09:32.2889897Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2890168Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2890437Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2890442Z 
2025-02-24T16:09:32.2890904Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2890909Z 
2025-02-24T16:09:32.2891190Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2891198Z 
2025-02-24T16:09:32.2891597Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b346b0>
2025-02-24T16:09:32.2891957Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>, attr = 'nu'
2025-02-24T16:09:32.2891963Z 
2025-02-24T16:09:32.2892345Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2892555Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2892695Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2892819Z         try:
2025-02-24T16:09:32.2893061Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2893205Z         except KeyError:
2025-02-24T16:09:32.2893456Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2893579Z     
2025-02-24T16:09:32.2893735Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2893894Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2894048Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2894278Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2894429Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2894588Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2894784Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2894791Z 
2025-02-24T16:09:32.2895022Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2895182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2895345Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2895422Z     ???
2025-02-24T16:09:32.2895533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2895542Z 
2025-02-24T16:09:32.2895616Z >   ???
2025-02-24T16:09:32.2895747Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2895820Z E   
2025-02-24T16:09:32.2895952Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2896068Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2896145Z E          ...
2025-02-24T16:09:32.2896234Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2896500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2896613Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2896690Z E          ...
2025-02-24T16:09:32.2896777Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2896909Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2897021Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2897025Z 
2025-02-24T16:09:32.2897122Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2897359Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T16:09:32.2897363Z 
2025-02-24T16:09:32.2897496Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2897632Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2897739Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2897877Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2898007Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2898101Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2898181Z err_msg = None
2025-02-24T16:09:32.2898185Z 
2025-02-24T16:09:32.2898307Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2898517Z         if err_msg is None:
2025-02-24T16:09:32.2898621Z             if left.shape != right.shape:
2025-02-24T16:09:32.2898707Z                 raise_assert_detail(
2025-02-24T16:09:32.2898863Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2898936Z                 )
2025-02-24T16:09:32.2899008Z     
2025-02-24T16:09:32.2899085Z             diff = 0
2025-02-24T16:09:32.2899200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2899295Z                 # count up differences
2025-02-24T16:09:32.2899572Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2899659Z                     diff += 1
2025-02-24T16:09:32.2899728Z     
2025-02-24T16:09:32.2899823Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2899972Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2900146Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2900271Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2900342Z E           
2025-02-24T16:09:32.2900460Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2900737Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2900998Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2901002Z 
2025-02-24T16:09:32.2901324Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2901332Z 
2025-02-24T16:09:32.2901508Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2901512Z 
2025-02-24T16:09:32.2901740Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b340e0>
2025-02-24T16:09:32.2901920Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2901998Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2902002Z 
2025-02-24T16:09:32.2902151Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2902278Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2902366Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2902442Z         try:
2025-02-24T16:09:32.2902585Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2902670Z         except KeyError:
2025-02-24T16:09:32.2902811Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2902887Z     
2025-02-24T16:09:32.2902980Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2903090Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2903190Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2903327Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2903417Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2903507Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2903628Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2903632Z 
2025-02-24T16:09:32.2903762Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2903879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2904033Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2904103Z     ???
2025-02-24T16:09:32.2904219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2904329Z 
2025-02-24T16:09:32.2904406Z >   ???
2025-02-24T16:09:32.2904538Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2904615Z E   
2025-02-24T16:09:32.2904744Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2904861Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2904933Z E          ...
2025-02-24T16:09:32.2905028Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2905239Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2905357Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2905433Z E          ...
2025-02-24T16:09:32.2905518Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2905648Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2905755Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2905768Z 
2025-02-24T16:09:32.2905857Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2906072Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T16:09:32.2906076Z 
2025-02-24T16:09:32.2906207Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2906468Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2906568Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2906711Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2906841Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2906934Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2907012Z err_msg = None
2025-02-24T16:09:32.2907016Z 
2025-02-24T16:09:32.2907129Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2907221Z         if err_msg is None:
2025-02-24T16:09:32.2907320Z             if left.shape != right.shape:
2025-02-24T16:09:32.2907404Z                 raise_assert_detail(
2025-02-24T16:09:32.2907560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2907629Z                 )
2025-02-24T16:09:32.2907705Z     
2025-02-24T16:09:32.2907778Z             diff = 0
2025-02-24T16:09:32.2907899Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2907998Z                 # count up differences
2025-02-24T16:09:32.2908170Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2908255Z                     diff += 1
2025-02-24T16:09:32.2908325Z     
2025-02-24T16:09:32.2908420Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2908563Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2908741Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2908865Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2908936Z E           
2025-02-24T16:09:32.2909055Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2909324Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2909594Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2909598Z 
2025-02-24T16:09:32.2910315Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2910323Z 
2025-02-24T16:09:32.2910618Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2910631Z 
2025-02-24T16:09:32.2911023Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6de80>
2025-02-24T16:09:32.2911387Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>, attr = 'f_lu'
2025-02-24T16:09:32.2911393Z 
2025-02-24T16:09:32.2911777Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2911986Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2912128Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2912255Z         try:
2025-02-24T16:09:32.2912507Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2912642Z         except KeyError:
2025-02-24T16:09:32.2912889Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2913020Z     
2025-02-24T16:09:32.2913117Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2913214Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2913307Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2913448Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2913533Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2913629Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2913745Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2913749Z 
2025-02-24T16:09:32.2913883Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2914002Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2914150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2914227Z     ???
2025-02-24T16:09:32.2914337Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2914344Z 
2025-02-24T16:09:32.2914420Z >   ???
2025-02-24T16:09:32.2914546Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2914620Z E   
2025-02-24T16:09:32.2914755Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2914869Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2914944Z E          ...
2025-02-24T16:09:32.2915031Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2915173Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2915286Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2915362Z E          ...
2025-02-24T16:09:32.2915451Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2915577Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2915687Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2915691Z 
2025-02-24T16:09:32.2915785Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2916011Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T16:09:32.2916015Z 
2025-02-24T16:09:32.2916151Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2916393Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2916502Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2916638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2916768Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2916869Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2916943Z err_msg = None
2025-02-24T16:09:32.2916947Z 
2025-02-24T16:09:32.2917067Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2917293Z         if err_msg is None:
2025-02-24T16:09:32.2917396Z             if left.shape != right.shape:
2025-02-24T16:09:32.2917482Z                 raise_assert_detail(
2025-02-24T16:09:32.2917632Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2917706Z                 )
2025-02-24T16:09:32.2917776Z     
2025-02-24T16:09:32.2917851Z             diff = 0
2025-02-24T16:09:32.2917962Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2918155Z                 # count up differences
2025-02-24T16:09:32.2918332Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2918415Z                     diff += 1
2025-02-24T16:09:32.2918490Z     
2025-02-24T16:09:32.2918579Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2918720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2918901Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2919016Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2919092Z E           
2025-02-24T16:09:32.2919203Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2919473Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2919740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2919744Z 
2025-02-24T16:09:32.2920054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2920063Z 
2025-02-24T16:09:32.2920232Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2920236Z 
2025-02-24T16:09:32.2920468Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6f800>
2025-02-24T16:09:32.2920635Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2920715Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2920719Z 
2025-02-24T16:09:32.2920861Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2920982Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2921066Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2921140Z         try:
2025-02-24T16:09:32.2921284Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2921364Z         except KeyError:
2025-02-24T16:09:32.2921508Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2921575Z     
2025-02-24T16:09:32.2921669Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2921766Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2921856Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2921992Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2922078Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2922178Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2922303Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2922378Z             else:
2025-02-24T16:09:32.2922479Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2922591Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2922596Z 
2025-02-24T16:09:32.2922726Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2922845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2923089Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2923163Z     ???
2025-02-24T16:09:32.2923275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2923278Z 
2025-02-24T16:09:32.2923348Z >   ???
2025-02-24T16:09:32.2923478Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2923549Z E   
2025-02-24T16:09:32.2923679Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2923866Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2923941Z E          ...
2025-02-24T16:09:32.2924030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2924165Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2924275Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2924349Z E          ...
2025-02-24T16:09:32.2924434Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2924564Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2924674Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2924678Z 
2025-02-24T16:09:32.2924769Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2924993Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T16:09:32.2924997Z 
2025-02-24T16:09:32.2925125Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2925263Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2925367Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2925502Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2925637Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2925735Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2925815Z err_msg = None
2025-02-24T16:09:32.2925819Z 
2025-02-24T16:09:32.2925940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2926023Z         if err_msg is None:
2025-02-24T16:09:32.2926126Z             if left.shape != right.shape:
2025-02-24T16:09:32.2926212Z                 raise_assert_detail(
2025-02-24T16:09:32.2926464Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2926546Z                 )
2025-02-24T16:09:32.2926614Z     
2025-02-24T16:09:32.2926691Z             diff = 0
2025-02-24T16:09:32.2926804Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2926897Z                 # count up differences
2025-02-24T16:09:32.2927070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2927156Z                     diff += 1
2025-02-24T16:09:32.2927226Z     
2025-02-24T16:09:32.2927320Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2927463Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2927634Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2927780Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2927910Z E           
2025-02-24T16:09:32.2928118Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2928606Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2929091Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2929258Z 
2025-02-24T16:09:32.2929801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2929807Z 
2025-02-24T16:09:32.2930106Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2930113Z 
2025-02-24T16:09:32.2930639Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6f8c0>
2025-02-24T16:09:32.2930944Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2931078Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2931090Z 
2025-02-24T16:09:32.2931329Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2931530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2931674Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2931805Z         try:
2025-02-24T16:09:32.2932046Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2932189Z         except KeyError:
2025-02-24T16:09:32.2932431Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2932548Z     
2025-02-24T16:09:32.2932705Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2932868Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2933019Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2933161Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2933255Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2933350Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2933462Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2933537Z             else:
2025-02-24T16:09:32.2933635Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2933748Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2933756Z 
2025-02-24T16:09:32.2933884Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2934004Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2934155Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2934224Z     ???
2025-02-24T16:09:32.2934341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2934346Z 
2025-02-24T16:09:32.2934413Z >   ???
2025-02-24T16:09:32.2934548Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2934617Z E   
2025-02-24T16:09:32.2934752Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2934869Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2934940Z E          ...
2025-02-24T16:09:32.2935032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2935163Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2935283Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2935359Z E          ...
2025-02-24T16:09:32.2935445Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2935576Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2935681Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2935685Z 
2025-02-24T16:09:32.2935778Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2935991Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T16:09:32.2935997Z 
2025-02-24T16:09:32.2936127Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2936259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2936503Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2936772Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2936901Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2937000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2937078Z err_msg = None
2025-02-24T16:09:32.2937082Z 
2025-02-24T16:09:32.2937194Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2937279Z         if err_msg is None:
2025-02-24T16:09:32.2937492Z             if left.shape != right.shape:
2025-02-24T16:09:32.2937586Z                 raise_assert_detail(
2025-02-24T16:09:32.2937737Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2937808Z                 )
2025-02-24T16:09:32.2937879Z     
2025-02-24T16:09:32.2937951Z             diff = 0
2025-02-24T16:09:32.2938065Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2938153Z                 # count up differences
2025-02-24T16:09:32.2938334Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2938414Z                     diff += 1
2025-02-24T16:09:32.2938482Z     
2025-02-24T16:09:32.2938575Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2938712Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2938889Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2939006Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2939082Z E           
2025-02-24T16:09:32.2939198Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2939459Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2939729Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2939733Z 
2025-02-24T16:09:32.2940051Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2940055Z 
2025-02-24T16:09:32.2940227Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2940232Z 
2025-02-24T16:09:32.2940462Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6e390>
2025-02-24T16:09:32.2940630Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2940710Z attr = 'j_blues'
2025-02-24T16:09:32.2940717Z 
2025-02-24T16:09:32.2940861Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2940976Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2941066Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2941136Z         try:
2025-02-24T16:09:32.2941283Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2941371Z         except KeyError:
2025-02-24T16:09:32.2941511Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2941584Z     
2025-02-24T16:09:32.2941676Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2941777Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2941867Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2942003Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2942095Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2942185Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2942389Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2942460Z             else:
2025-02-24T16:09:32.2942562Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2942668Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2942672Z 
2025-02-24T16:09:32.2942801Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2942915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2943131Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2943206Z     ???
2025-02-24T16:09:32.2943318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2943322Z 
2025-02-24T16:09:32.2943394Z >   ???
2025-02-24T16:09:32.2943525Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2943593Z E   
2025-02-24T16:09:32.2943727Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2943841Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2943920Z E          ...
2025-02-24T16:09:32.2944007Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2944144Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2944260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2944330Z E          ...
2025-02-24T16:09:32.2944420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2944549Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2944659Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2944663Z 
2025-02-24T16:09:32.2944753Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2944968Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T16:09:32.2944972Z 
2025-02-24T16:09:32.2945107Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2945236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2945339Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2945473Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2945602Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2945701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2945777Z err_msg = None
2025-02-24T16:09:32.2945781Z 
2025-02-24T16:09:32.2945898Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2945977Z         if err_msg is None:
2025-02-24T16:09:32.2946077Z             if left.shape != right.shape:
2025-02-24T16:09:32.2946219Z                 raise_assert_detail(
2025-02-24T16:09:32.2946827Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2946962Z                 )
2025-02-24T16:09:32.2947080Z     
2025-02-24T16:09:32.2947210Z             diff = 0
2025-02-24T16:09:32.2947401Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2947555Z                 # count up differences
2025-02-24T16:09:32.2947900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2948031Z                     diff += 1
2025-02-24T16:09:32.2948153Z     
2025-02-24T16:09:32.2948302Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2948545Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2948842Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2949040Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2949169Z E           
2025-02-24T16:09:32.2949358Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2949735Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2950244Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2950256Z 
2025-02-24T16:09:32.2950581Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2950586Z 
2025-02-24T16:09:32.2950766Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2950770Z 
2025-02-24T16:09:32.2951005Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6e780>
2025-02-24T16:09:32.2951182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2951261Z attr = 'lines'
2025-02-24T16:09:32.2951265Z 
2025-02-24T16:09:32.2951407Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2951530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2951619Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2951695Z         try:
2025-02-24T16:09:32.2951850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2951932Z         except KeyError:
2025-02-24T16:09:32.2952079Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2952148Z     
2025-02-24T16:09:32.2952242Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2952338Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2952434Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2952575Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2952661Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2952757Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2952867Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2952943Z             else:
2025-02-24T16:09:32.2953041Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2953152Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2953157Z 
2025-02-24T16:09:32.2953294Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2953412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2953568Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2953646Z     ???
2025-02-24T16:09:32.2953762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2953766Z 
2025-02-24T16:09:32.2953838Z >   ???
2025-02-24T16:09:32.2953971Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2954045Z E   
2025-02-24T16:09:32.2954175Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2954292Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2954363Z E          ...
2025-02-24T16:09:32.2954455Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2954591Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2954707Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2954777Z E          ...
2025-02-24T16:09:32.2954862Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2954991Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2955094Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2955098Z 
2025-02-24T16:09:32.2955195Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2955758Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T16:09:32.2955848Z 
2025-02-24T16:09:32.2956079Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6ec30>
2025-02-24T16:09:32.2956253Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2956484Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2956490Z 
2025-02-24T16:09:32.2956635Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2956865Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2956953Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2957026Z         try:
2025-02-24T16:09:32.2957169Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2957254Z         except KeyError:
2025-02-24T16:09:32.2957397Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2957466Z     
2025-02-24T16:09:32.2957557Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2957656Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2957749Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2957881Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2957970Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2958062Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2958173Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2958177Z 
2025-02-24T16:09:32.2958310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2958421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2958426Z 
2025-02-24T16:09:32.2958568Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2958661Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2958770Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2958859Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2958998Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2959084Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2959188Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2959272Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2959352Z err_msg = None
2025-02-24T16:09:32.2959356Z 
2025-02-24T16:09:32.2959473Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2959559Z         if err_msg is None:
2025-02-24T16:09:32.2959653Z             if left.shape != right.shape:
2025-02-24T16:09:32.2959744Z                 raise_assert_detail(
2025-02-24T16:09:32.2959895Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2959971Z                 )
2025-02-24T16:09:32.2960045Z     
2025-02-24T16:09:32.2960119Z             diff = 0
2025-02-24T16:09:32.2960241Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2960329Z                 # count up differences
2025-02-24T16:09:32.2960503Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2960585Z                     diff += 1
2025-02-24T16:09:32.2960653Z     
2025-02-24T16:09:32.2960745Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2960883Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2961065Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2961171Z E           AssertionError: Series are different
2025-02-24T16:09:32.2961246Z E           
2025-02-24T16:09:32.2961353Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2961730Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2962296Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2962639Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2962647Z 
2025-02-24T16:09:32.2962962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2963225Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T16:09:32.2963230Z 
2025-02-24T16:09:32.2963459Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6e630>
2025-02-24T16:09:32.2963629Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2963731Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2963737Z 
2025-02-24T16:09:32.2963997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2964199Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2964349Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2964469Z         try:
2025-02-24T16:09:32.2964712Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2964852Z         except KeyError:
2025-02-24T16:09:32.2965093Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2965215Z     
2025-02-24T16:09:32.2965363Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2965526Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2965677Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2965911Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2966057Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2966219Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2966542Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2966549Z 
2025-02-24T16:09:32.2966764Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2966965Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2966971Z 
2025-02-24T16:09:32.2967203Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2967356Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2967543Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2967677Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2967921Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2968061Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2968255Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2968386Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2968519Z err_msg = None
2025-02-24T16:09:32.2968525Z 
2025-02-24T16:09:32.2968715Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2968853Z         if err_msg is None:
2025-02-24T16:09:32.2969024Z             if left.shape != right.shape:
2025-02-24T16:09:32.2969187Z                 raise_assert_detail(
2025-02-24T16:09:32.2969482Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2969553Z                 )
2025-02-24T16:09:32.2969626Z     
2025-02-24T16:09:32.2969698Z             diff = 0
2025-02-24T16:09:32.2969814Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2969902Z                 # count up differences
2025-02-24T16:09:32.2970077Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2970159Z                     diff += 1
2025-02-24T16:09:32.2970333Z     
2025-02-24T16:09:32.2970428Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2970566Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2970743Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2970848Z E           AssertionError: Series are different
2025-02-24T16:09:32.2970922Z E           
2025-02-24T16:09:32.2971030Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2971401Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2971785Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2972169Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2972176Z 
2025-02-24T16:09:32.2972495Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2972702Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T16:09:32.2972706Z 
2025-02-24T16:09:32.2972841Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2972969Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2973071Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2973211Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2973332Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2973430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2973504Z err_msg = None
2025-02-24T16:09:32.2973508Z 
2025-02-24T16:09:32.2973625Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2973729Z         if err_msg is None:
2025-02-24T16:09:32.2973848Z             if left.shape != right.shape:
2025-02-24T16:09:32.2973937Z                 raise_assert_detail(
2025-02-24T16:09:32.2974083Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2974158Z                 )
2025-02-24T16:09:32.2974225Z     
2025-02-24T16:09:32.2974302Z             diff = 0
2025-02-24T16:09:32.2974413Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2974592Z                 # count up differences
2025-02-24T16:09:32.2974765Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2974842Z                     diff += 1
2025-02-24T16:09:32.2974914Z     
2025-02-24T16:09:32.2975000Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2975140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2975313Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2975508Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2975585Z E           
2025-02-24T16:09:32.2975697Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2975964Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2976235Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2976239Z 
2025-02-24T16:09:32.2976684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2976689Z 
2025-02-24T16:09:32.2976869Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2976873Z 
2025-02-24T16:09:32.2977107Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6eae0>
2025-02-24T16:09:32.2977311Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>, attr = 'nu'
2025-02-24T16:09:32.2977318Z 
2025-02-24T16:09:32.2977464Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2977582Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2977670Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2977739Z         try:
2025-02-24T16:09:32.2977886Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2977970Z         except KeyError:
2025-02-24T16:09:32.2978110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2978182Z     
2025-02-24T16:09:32.2978273Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2978371Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2978462Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2978603Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2978694Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2978786Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2978905Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2978909Z 
2025-02-24T16:09:32.2979038Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2979159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2979311Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2979382Z     ???
2025-02-24T16:09:32.2979495Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2979500Z 
2025-02-24T16:09:32.2979571Z >   ???
2025-02-24T16:09:32.2979705Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2979774Z E   
2025-02-24T16:09:32.2979909Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2980024Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2980096Z E          ...
2025-02-24T16:09:32.2980189Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2980437Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2980552Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2980622Z E          ...
2025-02-24T16:09:32.2980712Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2980841Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2980947Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2980951Z 
2025-02-24T16:09:32.2981044Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2981376Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T16:09:32.2981381Z 
2025-02-24T16:09:32.2981519Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2981650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2981748Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2981887Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2982010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2982111Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2982189Z err_msg = None
2025-02-24T16:09:32.2982193Z 
2025-02-24T16:09:32.2982361Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2982509Z         if err_msg is None:
2025-02-24T16:09:32.2982676Z             if left.shape != right.shape:
2025-02-24T16:09:32.2982824Z                 raise_assert_detail(
2025-02-24T16:09:32.2983077Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2983196Z                 )
2025-02-24T16:09:32.2983317Z     
2025-02-24T16:09:32.2983439Z             diff = 0
2025-02-24T16:09:32.2983639Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2983799Z                 # count up differences
2025-02-24T16:09:32.2984098Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2984236Z                     diff += 1
2025-02-24T16:09:32.2984352Z     
2025-02-24T16:09:32.2984503Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2984733Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2985032Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2985226Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2985354Z E           
2025-02-24T16:09:32.2985558Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2985838Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2986108Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2986113Z 
2025-02-24T16:09:32.2986540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2986545Z 
2025-02-24T16:09:32.2986716Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2986721Z 
2025-02-24T16:09:32.2986953Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6fb60>
2025-02-24T16:09:32.2987126Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2987209Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2987362Z 
2025-02-24T16:09:32.2987509Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2987625Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2987710Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2987781Z         try:
2025-02-24T16:09:32.2987923Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2988001Z         except KeyError:
2025-02-24T16:09:32.2988142Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2988314Z     
2025-02-24T16:09:32.2988407Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2988504Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2988592Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2988728Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2988818Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2988906Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2989023Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2989028Z 
2025-02-24T16:09:32.2989156Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2989270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2989417Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2989490Z     ???
2025-02-24T16:09:32.2989602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2989609Z 
2025-02-24T16:09:32.2989677Z >   ???
2025-02-24T16:09:32.2989809Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2989877Z E   
2025-02-24T16:09:32.2990011Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2990122Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2990196Z E          ...
2025-02-24T16:09:32.2990286Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2990420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2990538Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2990608Z E          ...
2025-02-24T16:09:32.2990698Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2990827Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2990934Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2990938Z 
2025-02-24T16:09:32.2991034Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2991241Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T16:09:32.2991245Z 
2025-02-24T16:09:32.2991377Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2991509Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2991606Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2991746Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2991869Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2991966Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2992039Z err_msg = None
2025-02-24T16:09:32.2992047Z 
2025-02-24T16:09:32.2992159Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2992242Z         if err_msg is None:
2025-02-24T16:09:32.2992341Z             if left.shape != right.shape:
2025-02-24T16:09:32.2992431Z                 raise_assert_detail(
2025-02-24T16:09:32.2992576Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2992651Z                 )
2025-02-24T16:09:32.2992719Z     
2025-02-24T16:09:32.2992795Z             diff = 0
2025-02-24T16:09:32.2992908Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2993082Z                 # count up differences
2025-02-24T16:09:32.2993262Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2993339Z                     diff += 1
2025-02-24T16:09:32.2993411Z     
2025-02-24T16:09:32.2993501Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2993642Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2993819Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2994011Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2994087Z E           
2025-02-24T16:09:32.2994199Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2994464Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2994735Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2994740Z 
2025-02-24T16:09:32.2995053Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2995061Z 
2025-02-24T16:09:32.2995230Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2995235Z 
2025-02-24T16:09:32.2995467Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6f0e0>
2025-02-24T16:09:32.2995673Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>, attr = 'f_lu'
2025-02-24T16:09:32.2995681Z 
2025-02-24T16:09:32.2995825Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2995945Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2996028Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2996102Z         try:
2025-02-24T16:09:32.2996241Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2996448Z         except KeyError:
2025-02-24T16:09:32.2996590Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2996667Z     
2025-02-24T16:09:32.2996758Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2996852Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2996943Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2997074Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2997162Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2997251Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2997370Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2997374Z 
2025-02-24T16:09:32.2997504Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2997616Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2997766Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2997835Z     ???
2025-02-24T16:09:32.2997947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2997952Z 
2025-02-24T16:09:32.2998027Z >   ???
2025-02-24T16:09:32.2998155Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2998226Z E   
2025-02-24T16:09:32.2998353Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2998466Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2998536Z E          ...
2025-02-24T16:09:32.2998626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2998882Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2998995Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2999067Z E          ...
2025-02-24T16:09:32.2999151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2999281Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2999387Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2999391Z 
2025-02-24T16:09:32.2999482Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2999808Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T16:09:32.2999814Z 
2025-02-24T16:09:32.2999947Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3000083Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3000182Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3000435Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3000661Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3000817Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3000949Z err_msg = None
2025-02-24T16:09:32.3000955Z 
2025-02-24T16:09:32.3001141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3001282Z         if err_msg is None:
2025-02-24T16:09:32.3001453Z             if left.shape != right.shape:
2025-02-24T16:09:32.3001597Z                 raise_assert_detail(
2025-02-24T16:09:32.3001851Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3001972Z                 )
2025-02-24T16:09:32.3002096Z     
2025-02-24T16:09:32.3002221Z             diff = 0
2025-02-24T16:09:32.3002413Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3002571Z                 # count up differences
2025-02-24T16:09:32.3002867Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3003005Z                     diff += 1
2025-02-24T16:09:32.3003121Z     
2025-02-24T16:09:32.3003276Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3003513Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3003710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3003836Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3003906Z E           
2025-02-24T16:09:32.3004023Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3004284Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3004558Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3004562Z 
2025-02-24T16:09:32.3004884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3004889Z 
2025-02-24T16:09:32.3005058Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3005062Z 
2025-02-24T16:09:32.3005299Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4eae0>
2025-02-24T16:09:32.3005477Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.3005652Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3005656Z 
2025-02-24T16:09:32.3005800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3005916Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3006004Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3006077Z         try:
2025-02-24T16:09:32.3006218Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3006411Z         except KeyError:
2025-02-24T16:09:32.3006554Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3006738Z     
2025-02-24T16:09:32.3006831Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3006928Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3007022Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3007154Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3007241Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3007331Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3007450Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3007522Z             else:
2025-02-24T16:09:32.3007624Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3007732Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3007736Z 
2025-02-24T16:09:32.3007867Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3007985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3008138Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3008211Z     ???
2025-02-24T16:09:32.3008319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3008327Z 
2025-02-24T16:09:32.3008394Z >   ???
2025-02-24T16:09:32.3008526Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3008593Z E   
2025-02-24T16:09:32.3008726Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3008840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3008916Z E          ...
2025-02-24T16:09:32.3009010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3009140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3009257Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3009327Z E          ...
2025-02-24T16:09:32.3009417Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3009546Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3009657Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3009661Z 
2025-02-24T16:09:32.3009754Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3009980Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T16:09:32.3009984Z 
2025-02-24T16:09:32.3010118Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3010250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3010349Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3010482Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3010606Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3010706Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3010779Z err_msg = None
2025-02-24T16:09:32.3010783Z 
2025-02-24T16:09:32.3010898Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3010981Z         if err_msg is None:
2025-02-24T16:09:32.3011077Z             if left.shape != right.shape:
2025-02-24T16:09:32.3011165Z                 raise_assert_detail(
2025-02-24T16:09:32.3011311Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3011519Z                 )
2025-02-24T16:09:32.3011586Z     
2025-02-24T16:09:32.3011661Z             diff = 0
2025-02-24T16:09:32.3011773Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3011860Z                 # count up differences
2025-02-24T16:09:32.3012033Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3012109Z                     diff += 1
2025-02-24T16:09:32.3012180Z     
2025-02-24T16:09:32.3012338Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3012486Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3012672Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3012792Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3012869Z E           
2025-02-24T16:09:32.3012981Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3013252Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3013523Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3013528Z 
2025-02-24T16:09:32.3013844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3013848Z 
2025-02-24T16:09:32.3014023Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3014030Z 
2025-02-24T16:09:32.3014262Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4eba0>
2025-02-24T16:09:32.3014434Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.3014520Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3014523Z 
2025-02-24T16:09:32.3014662Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3014784Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3014873Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3014943Z         try:
2025-02-24T16:09:32.3015096Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3015178Z         except KeyError:
2025-02-24T16:09:32.3015325Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3015393Z     
2025-02-24T16:09:32.3015487Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3015589Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3015679Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3015820Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3015904Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3016002Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3016115Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3016192Z             else:
2025-02-24T16:09:32.3016419Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3016531Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3016538Z 
2025-02-24T16:09:32.3016670Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3016784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3016937Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3017009Z     ???
2025-02-24T16:09:32.3017125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3017244Z 
2025-02-24T16:09:32.3017318Z >   ???
2025-02-24T16:09:32.3017446Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3017517Z E   
2025-02-24T16:09:32.3017646Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3017762Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3017839Z E          ...
2025-02-24T16:09:32.3017927Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3018066Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3018287Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3018433Z E          ...
2025-02-24T16:09:32.3018588Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3018815Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3019000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3019007Z 
2025-02-24T16:09:32.3019161Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3019539Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T16:09:32.3019545Z 
2025-02-24T16:09:32.3019768Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3019996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3020164Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3020398Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3020619Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3020778Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3020911Z err_msg = None
2025-02-24T16:09:32.3020917Z 
2025-02-24T16:09:32.3021109Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3021244Z         if err_msg is None:
2025-02-24T16:09:32.3021414Z             if left.shape != right.shape:
2025-02-24T16:09:32.3021557Z                 raise_assert_detail(
2025-02-24T16:09:32.3021809Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3021928Z                 )
2025-02-24T16:09:32.3022050Z     
2025-02-24T16:09:32.3022178Z             diff = 0
2025-02-24T16:09:32.3022364Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3022517Z                 # count up differences
2025-02-24T16:09:32.3022820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3022958Z                     diff += 1
2025-02-24T16:09:32.3023077Z     
2025-02-24T16:09:32.3023235Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3023476Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3023653Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3023775Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3023848Z E           
2025-02-24T16:09:32.3023967Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3024233Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3024501Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3024506Z 
2025-02-24T16:09:32.3024827Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3024924Z 
2025-02-24T16:09:32.3025101Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3025105Z 
2025-02-24T16:09:32.3025336Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4ed50>
2025-02-24T16:09:32.3025510Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.3025587Z attr = 'j_blues'
2025-02-24T16:09:32.3025591Z 
2025-02-24T16:09:32.3025824Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3025951Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3026038Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3026113Z         try:
2025-02-24T16:09:32.3026255Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3026453Z         except KeyError:
2025-02-24T16:09:32.3026595Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3026671Z     
2025-02-24T16:09:32.3026765Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3026860Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3026954Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3027086Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3027177Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3027268Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3027387Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3027465Z             else:
2025-02-24T16:09:32.3027560Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3027672Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3027676Z 
2025-02-24T16:09:32.3027806Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3027925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3028076Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3028150Z     ???
2025-02-24T16:09:32.3028265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3028269Z 
2025-02-24T16:09:32.3028340Z >   ???
2025-02-24T16:09:32.3028471Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3028539Z E   
2025-02-24T16:09:32.3028670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3028789Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3028861Z E          ...
2025-02-24T16:09:32.3028952Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3029084Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3029203Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3029274Z E          ...
2025-02-24T16:09:32.3029364Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3029498Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3029606Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3029610Z 
2025-02-24T16:09:32.3029703Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3029931Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T16:09:32.3029935Z 
2025-02-24T16:09:32.3030069Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3030206Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3030303Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3030440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3030563Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3030663Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3030869Z err_msg = None
2025-02-24T16:09:32.3030873Z 
2025-02-24T16:09:32.3030986Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3031072Z         if err_msg is None:
2025-02-24T16:09:32.3031167Z             if left.shape != right.shape:
2025-02-24T16:09:32.3031259Z                 raise_assert_detail(
2025-02-24T16:09:32.3031407Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3031482Z                 )
2025-02-24T16:09:32.3031556Z     
2025-02-24T16:09:32.3031748Z             diff = 0
2025-02-24T16:09:32.3031867Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3031954Z                 # count up differences
2025-02-24T16:09:32.3032129Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3032206Z                     diff += 1
2025-02-24T16:09:32.3032279Z     
2025-02-24T16:09:32.3032370Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3032510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3032689Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3032802Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3032877Z E           
2025-02-24T16:09:32.3032990Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3033259Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3033526Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3033533Z 
2025-02-24T16:09:32.3033844Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3033852Z 
2025-02-24T16:09:32.3034022Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3034027Z 
2025-02-24T16:09:32.3034264Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4fb60>
2025-02-24T16:09:32.3034434Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3034513Z attr = 'lines'
2025-02-24T16:09:32.3034517Z 
2025-02-24T16:09:32.3034658Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3034771Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3034860Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3034931Z         try:
2025-02-24T16:09:32.3035081Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3035162Z         except KeyError:
2025-02-24T16:09:32.3035306Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3035380Z     
2025-02-24T16:09:32.3035469Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3035567Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3035655Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3035796Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3035885Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3035980Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3036173Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3036421Z             else:
2025-02-24T16:09:32.3036595Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3036778Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3036946Z 
2025-02-24T16:09:32.3037178Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3037375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3037634Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3037759Z     ???
2025-02-24T16:09:32.3037950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3037956Z 
2025-02-24T16:09:32.3038079Z >   ???
2025-02-24T16:09:32.3038432Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3038556Z E   
2025-02-24T16:09:32.3038783Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3038971Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3039099Z E          ...
2025-02-24T16:09:32.3039242Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3039382Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3039498Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3039574Z E          ...
2025-02-24T16:09:32.3039665Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3039791Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3039901Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3039906Z 
2025-02-24T16:09:32.3039998Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3040295Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T16:09:32.3040301Z 
2025-02-24T16:09:32.3040534Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4fc50>
2025-02-24T16:09:32.3040709Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3040805Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3040809Z 
2025-02-24T16:09:32.3040953Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3041080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3041166Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3041243Z         try:
2025-02-24T16:09:32.3041393Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3041476Z         except KeyError:
2025-02-24T16:09:32.3041621Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3041689Z     
2025-02-24T16:09:32.3041783Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3041880Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3041976Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3042117Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3042207Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3042303Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3042415Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3042420Z 
2025-02-24T16:09:32.3042555Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3042677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3042681Z 
2025-02-24T16:09:32.3042822Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3042914Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3043024Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3043112Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3043260Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3043343Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3043450Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3043530Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3043610Z err_msg = None
2025-02-24T16:09:32.3043614Z 
2025-02-24T16:09:32.3043820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3043907Z         if err_msg is None:
2025-02-24T16:09:32.3044006Z             if left.shape != right.shape:
2025-02-24T16:09:32.3044093Z                 raise_assert_detail(
2025-02-24T16:09:32.3044247Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3044319Z                 )
2025-02-24T16:09:32.3044392Z     
2025-02-24T16:09:32.3044464Z             diff = 0
2025-02-24T16:09:32.3044654Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3044750Z                 # count up differences
2025-02-24T16:09:32.3044924Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3045006Z                     diff += 1
2025-02-24T16:09:32.3045074Z     
2025-02-24T16:09:32.3045166Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3045303Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3045485Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3045595Z E           AssertionError: Series are different
2025-02-24T16:09:32.3045666Z E           
2025-02-24T16:09:32.3045773Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3046154Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3046636Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3046985Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3046992Z 
2025-02-24T16:09:32.3047511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3047827Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T16:09:32.3047832Z 
2025-02-24T16:09:32.3048070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4fd10>
2025-02-24T16:09:32.3048246Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3048343Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3048347Z 
2025-02-24T16:09:32.3048493Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3048609Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3048700Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3048770Z         try:
2025-02-24T16:09:32.3048918Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3049006Z         except KeyError:
2025-02-24T16:09:32.3049146Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3049218Z     
2025-02-24T16:09:32.3049304Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3049404Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3049493Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3049632Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3049874Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3049965Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3050079Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3050083Z 
2025-02-24T16:09:32.3050212Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3050330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3050334Z 
2025-02-24T16:09:32.3050577Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3050667Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3050777Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3050858Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3051003Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3051085Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3051201Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3051283Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3051358Z err_msg = None
2025-02-24T16:09:32.3051362Z 
2025-02-24T16:09:32.3051478Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3051560Z         if err_msg is None:
2025-02-24T16:09:32.3051659Z             if left.shape != right.shape:
2025-02-24T16:09:32.3051744Z                 raise_assert_detail(
2025-02-24T16:09:32.3051898Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3051973Z                 )
2025-02-24T16:09:32.3052041Z     
2025-02-24T16:09:32.3052118Z             diff = 0
2025-02-24T16:09:32.3052234Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3052328Z                 # count up differences
2025-02-24T16:09:32.3052500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3052585Z                     diff += 1
2025-02-24T16:09:32.3052657Z     
2025-02-24T16:09:32.3052744Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3052888Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3053060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3053171Z E           AssertionError: Series are different
2025-02-24T16:09:32.3053246Z E           
2025-02-24T16:09:32.3053387Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3054095Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3054797Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3055494Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3055501Z 
2025-02-24T16:09:32.3056040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3056678Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T16:09:32.3056686Z 
2025-02-24T16:09:32.3056853Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3056985Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3057084Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3057359Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3057491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3057587Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3057667Z err_msg = None
2025-02-24T16:09:32.3057671Z 
2025-02-24T16:09:32.3057785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3057874Z         if err_msg is None:
2025-02-24T16:09:32.3057975Z             if left.shape != right.shape:
2025-02-24T16:09:32.3058061Z                 raise_assert_detail(
2025-02-24T16:09:32.3058212Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3058283Z                 )
2025-02-24T16:09:32.3058353Z     
2025-02-24T16:09:32.3058426Z             diff = 0
2025-02-24T16:09:32.3058541Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3058642Z                 # count up differences
2025-02-24T16:09:32.3058817Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3058903Z                     diff += 1
2025-02-24T16:09:32.3058974Z     
2025-02-24T16:09:32.3059068Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3059205Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3059402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3059528Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3059601Z E           
2025-02-24T16:09:32.3059758Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3060027Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3060302Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3060307Z 
2025-02-24T16:09:32.3060634Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3060638Z 
2025-02-24T16:09:32.3060816Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3060821Z 
2025-02-24T16:09:32.3061056Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4ff80>
2025-02-24T16:09:32.3061268Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>, attr = 'nu'
2025-02-24T16:09:32.3061272Z 
2025-02-24T16:09:32.3067830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3068001Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3068095Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3068172Z         try:
2025-02-24T16:09:32.3068329Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3068415Z         except KeyError:
2025-02-24T16:09:32.3068567Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3068801Z     
2025-02-24T16:09:32.3068898Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3068996Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3069089Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3069234Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3069327Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3069421Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3069640Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3069647Z 
2025-02-24T16:09:32.3069788Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3069910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3070073Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3070144Z     ???
2025-02-24T16:09:32.3070261Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3070270Z 
2025-02-24T16:09:32.3070342Z >   ???
2025-02-24T16:09:32.3070474Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3070547Z E   
2025-02-24T16:09:32.3070679Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3070797Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3070871Z E          ...
2025-02-24T16:09:32.3070961Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3071100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3071213Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3071288Z E          ...
2025-02-24T16:09:32.3071373Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3071504Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3071618Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3071622Z 
2025-02-24T16:09:32.3071771Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3072244Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T16:09:32.3072251Z 
2025-02-24T16:09:32.3072477Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3072703Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3072870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3073103Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3073323Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3073479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3073616Z err_msg = None
2025-02-24T16:09:32.3073621Z 
2025-02-24T16:09:32.3073816Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3073958Z         if err_msg is None:
2025-02-24T16:09:32.3074124Z             if left.shape != right.shape:
2025-02-24T16:09:32.3074267Z                 raise_assert_detail(
2025-02-24T16:09:32.3074522Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3074642Z                 )
2025-02-24T16:09:32.3074766Z     
2025-02-24T16:09:32.3074892Z             diff = 0
2025-02-24T16:09:32.3075088Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3075213Z                 # count up differences
2025-02-24T16:09:32.3075391Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3075477Z                     diff += 1
2025-02-24T16:09:32.3075544Z     
2025-02-24T16:09:32.3075640Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3075784Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3075960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3076178Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3076251Z E           
2025-02-24T16:09:32.3076488Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3076871Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3077143Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3077148Z 
2025-02-24T16:09:32.3077475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3077479Z 
2025-02-24T16:09:32.3077655Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3077660Z 
2025-02-24T16:09:32.3077886Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934080>
2025-02-24T16:09:32.3078060Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3078138Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3078142Z 
2025-02-24T16:09:32.3078288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3078409Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3078492Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3078565Z         try:
2025-02-24T16:09:32.3078708Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3078793Z         except KeyError:
2025-02-24T16:09:32.3078940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3079012Z     
2025-02-24T16:09:32.3079104Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3079198Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3079293Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3079427Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3079519Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3079610Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3079730Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3079735Z 
2025-02-24T16:09:32.3079868Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3079986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3080140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3080209Z     ???
2025-02-24T16:09:32.3080324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3080331Z 
2025-02-24T16:09:32.3080402Z >   ???
2025-02-24T16:09:32.3080533Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3080607Z E   
2025-02-24T16:09:32.3080736Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3080854Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3080926Z E          ...
2025-02-24T16:09:32.3081022Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3081163Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3081275Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3081351Z E          ...
2025-02-24T16:09:32.3081437Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3081570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3081675Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3081799Z 
2025-02-24T16:09:32.3081903Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3082135Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T16:09:32.3082140Z 
2025-02-24T16:09:32.3082268Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3082403Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3082501Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3082719Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3082851Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3082944Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3083023Z err_msg = None
2025-02-24T16:09:32.3083027Z 
2025-02-24T16:09:32.3083139Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3083230Z         if err_msg is None:
2025-02-24T16:09:32.3083330Z             if left.shape != right.shape:
2025-02-24T16:09:32.3083414Z                 raise_assert_detail(
2025-02-24T16:09:32.3083567Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3083637Z                 )
2025-02-24T16:09:32.3083710Z     
2025-02-24T16:09:32.3083782Z             diff = 0
2025-02-24T16:09:32.3083901Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3083995Z                 # count up differences
2025-02-24T16:09:32.3084164Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3084247Z                     diff += 1
2025-02-24T16:09:32.3084314Z     
2025-02-24T16:09:32.3084408Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3084545Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3084723Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3084844Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3084915Z E           
2025-02-24T16:09:32.3085033Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3085303Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3085573Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3085581Z 
2025-02-24T16:09:32.3085895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3085900Z 
2025-02-24T16:09:32.3086072Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3086076Z 
2025-02-24T16:09:32.3086439Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934140>
2025-02-24T16:09:32.3086646Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>, attr = 'f_lu'
2025-02-24T16:09:32.3086651Z 
2025-02-24T16:09:32.3086791Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3086907Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3086992Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3087066Z         try:
2025-02-24T16:09:32.3087211Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3087290Z         except KeyError:
2025-02-24T16:09:32.3087433Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3087642Z     
2025-02-24T16:09:32.3087733Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3087827Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3087925Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3088060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3088144Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3088236Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3088444Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3088449Z 
2025-02-24T16:09:32.3088581Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3088692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3088846Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3088921Z     ???
2025-02-24T16:09:32.3089030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3089037Z 
2025-02-24T16:09:32.3089108Z >   ???
2025-02-24T16:09:32.3089235Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3089306Z E   
2025-02-24T16:09:32.3089440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3089550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3089625Z E          ...
2025-02-24T16:09:32.3089713Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3089851Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3089962Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3090037Z E          ...
2025-02-24T16:09:32.3090124Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3090250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3090360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3090368Z 
2025-02-24T16:09:32.3090519Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3090959Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T16:09:32.3090967Z 
2025-02-24T16:09:32.3091194Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3091407Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3091568Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3091764Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3091894Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3091992Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3092069Z err_msg = None
2025-02-24T16:09:32.3092073Z 
2025-02-24T16:09:32.3092189Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3092274Z         if err_msg is None:
2025-02-24T16:09:32.3092374Z             if left.shape != right.shape:
2025-02-24T16:09:32.3092459Z                 raise_assert_detail(
2025-02-24T16:09:32.3092610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3092684Z                 )
2025-02-24T16:09:32.3092750Z     
2025-02-24T16:09:32.3092825Z             diff = 0
2025-02-24T16:09:32.3092939Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3093033Z                 # count up differences
2025-02-24T16:09:32.3093205Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3093288Z                     diff += 1
2025-02-24T16:09:32.3093360Z     
2025-02-24T16:09:32.3093448Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3093591Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3093879Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3093996Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3094067Z E           
2025-02-24T16:09:32.3094185Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3094524Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3094790Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3094801Z 
2025-02-24T16:09:32.3095109Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3095113Z 
2025-02-24T16:09:32.3095286Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3095290Z 
2025-02-24T16:09:32.3095513Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009348c0>
2025-02-24T16:09:32.3095678Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3095758Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3095765Z 
2025-02-24T16:09:32.3095903Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3096024Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3096107Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3096180Z         try:
2025-02-24T16:09:32.3096434Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3096521Z         except KeyError:
2025-02-24T16:09:32.3096668Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3096736Z     
2025-02-24T16:09:32.3096826Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3096922Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3097014Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3097146Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3097234Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3097326Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3097439Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3097512Z             else:
2025-02-24T16:09:32.3097606Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3097716Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3097720Z 
2025-02-24T16:09:32.3097845Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3097963Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3098118Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3098188Z     ???
2025-02-24T16:09:32.3098301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3098305Z 
2025-02-24T16:09:32.3098373Z >   ???
2025-02-24T16:09:32.3098506Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3098576Z E   
2025-02-24T16:09:32.3098704Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3098824Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3098895Z E          ...
2025-02-24T16:09:32.3098985Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3099117Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3099233Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3099305Z E          ...
2025-02-24T16:09:32.3099516Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3099643Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3099745Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3099749Z 
2025-02-24T16:09:32.3099841Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3100090Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T16:09:32.3100098Z 
2025-02-24T16:09:32.3100324Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3100459Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3100556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3100691Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3100814Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3100912Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3100990Z err_msg = None
2025-02-24T16:09:32.3100994Z 
2025-02-24T16:09:32.3101105Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3101189Z         if err_msg is None:
2025-02-24T16:09:32.3101282Z             if left.shape != right.shape:
2025-02-24T16:09:32.3101372Z                 raise_assert_detail(
2025-02-24T16:09:32.3101526Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3101598Z                 )
2025-02-24T16:09:32.3101671Z     
2025-02-24T16:09:32.3101741Z             diff = 0
2025-02-24T16:09:32.3101853Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3101940Z                 # count up differences
2025-02-24T16:09:32.3102114Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3102194Z                     diff += 1
2025-02-24T16:09:32.3102264Z     
2025-02-24T16:09:32.3102357Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3102497Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3102668Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3102787Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3102857Z E           
2025-02-24T16:09:32.3102971Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3103246Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3103512Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3103519Z 
2025-02-24T16:09:32.3103834Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3103839Z 
2025-02-24T16:09:32.3104009Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3104013Z 
2025-02-24T16:09:32.3104239Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934980>
2025-02-24T16:09:32.3104408Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3104486Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3104490Z 
2025-02-24T16:09:32.3104632Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3104753Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3104923Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3104994Z         try:
2025-02-24T16:09:32.3105130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3105212Z         except KeyError:
2025-02-24T16:09:32.3105346Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3105415Z     
2025-02-24T16:09:32.3105502Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3105592Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3105684Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3105896Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3105989Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3106083Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3106197Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3106368Z             else:
2025-02-24T16:09:32.3106465Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3106584Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3106588Z 
2025-02-24T16:09:32.3106716Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3106838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3106990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3107060Z     ???
2025-02-24T16:09:32.3107174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3107178Z 
2025-02-24T16:09:32.3107248Z >   ???
2025-02-24T16:09:32.3107383Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3107453Z E   
2025-02-24T16:09:32.3107591Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3107704Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3107776Z E          ...
2025-02-24T16:09:32.3107870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3108002Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3108118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3108194Z E          ...
2025-02-24T16:09:32.3108279Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3108406Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3108510Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3108515Z 
2025-02-24T16:09:32.3108648Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3109068Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T16:09:32.3109075Z 
2025-02-24T16:09:32.3109299Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3109521Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3109680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3109886Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3110012Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3110107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3110184Z err_msg = None
2025-02-24T16:09:32.3110188Z 
2025-02-24T16:09:32.3110303Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3110391Z         if err_msg is None:
2025-02-24T16:09:32.3110490Z             if left.shape != right.shape:
2025-02-24T16:09:32.3110579Z                 raise_assert_detail(
2025-02-24T16:09:32.3110730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3110802Z                 )
2025-02-24T16:09:32.3110873Z     
2025-02-24T16:09:32.3110946Z             diff = 0
2025-02-24T16:09:32.3111064Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3111305Z                 # count up differences
2025-02-24T16:09:32.3111482Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3111563Z                     diff += 1
2025-02-24T16:09:32.3111631Z     
2025-02-24T16:09:32.3111724Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3111861Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3112038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3112253Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3112332Z E           
2025-02-24T16:09:32.3112450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3112718Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3112989Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3112993Z 
2025-02-24T16:09:32.3113312Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3113316Z 
2025-02-24T16:09:32.3113490Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3113494Z 
2025-02-24T16:09:32.3113722Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934b00>
2025-02-24T16:09:32.3113892Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3113976Z attr = 'j_blues'
2025-02-24T16:09:32.3113980Z 
2025-02-24T16:09:32.3114121Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3114235Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3114324Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3114393Z         try:
2025-02-24T16:09:32.3114539Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3114620Z         except KeyError:
2025-02-24T16:09:32.3114762Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3114837Z     
2025-02-24T16:09:32.3114926Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3115022Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3115110Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3115245Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3115334Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3115424Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3115539Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3115609Z             else:
2025-02-24T16:09:32.3115707Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3115816Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3115821Z 
2025-02-24T16:09:32.3115948Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3116065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3116215Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3116398Z     ???
2025-02-24T16:09:32.3116510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3116514Z 
2025-02-24T16:09:32.3116585Z >   ???
2025-02-24T16:09:32.3116712Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3116785Z E   
2025-02-24T16:09:32.3116915Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3117147Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3117221Z E          ...
2025-02-24T16:09:32.3117309Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3117444Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3117559Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3117628Z E          ...
2025-02-24T16:09:32.3117716Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3117943Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3118052Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3118056Z 
2025-02-24T16:09:32.3118145Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3118359Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T16:09:32.3118363Z 
2025-02-24T16:09:32.3118495Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3118628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3118729Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3118862Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3118987Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3119089Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3119162Z err_msg = None
2025-02-24T16:09:32.3119167Z 
2025-02-24T16:09:32.3119283Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3119364Z         if err_msg is None:
2025-02-24T16:09:32.3119463Z             if left.shape != right.shape:
2025-02-24T16:09:32.3119552Z                 raise_assert_detail(
2025-02-24T16:09:32.3119696Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3119773Z                 )
2025-02-24T16:09:32.3119840Z     
2025-02-24T16:09:32.3119916Z             diff = 0
2025-02-24T16:09:32.3120028Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3120121Z                 # count up differences
2025-02-24T16:09:32.3120294Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3120372Z                     diff += 1
2025-02-24T16:09:32.3120445Z     
2025-02-24T16:09:32.3120537Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3120680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3120849Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3120966Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3121040Z E           
2025-02-24T16:09:32.3121152Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3121421Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3121685Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3121694Z 
2025-02-24T16:09:32.3122002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3122006Z 
2025-02-24T16:09:32.3122177Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3122181Z 
2025-02-24T16:09:32.3122494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935880>
2025-02-24T16:09:32.3122661Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3122736Z attr = 'lines'
2025-02-24T16:09:32.3122740Z 
2025-02-24T16:09:32.3122877Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3122999Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3123082Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3123155Z         try:
2025-02-24T16:09:32.3123367Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3123453Z         except KeyError:
2025-02-24T16:09:32.3123595Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3123662Z     
2025-02-24T16:09:32.3123753Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3123847Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3123937Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3124074Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3124158Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3124252Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3124361Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3124436Z             else:
2025-02-24T16:09:32.3124530Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3124639Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3124643Z 
2025-02-24T16:09:32.3124776Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3124891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3125040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3125107Z     ???
2025-02-24T16:09:32.3125219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3125227Z 
2025-02-24T16:09:32.3125294Z >   ???
2025-02-24T16:09:32.3125425Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3125541Z E   
2025-02-24T16:09:32.3125767Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3125953Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3126071Z E          ...
2025-02-24T16:09:32.3126222Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3126577Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3126785Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3126870Z E          ...
2025-02-24T16:09:32.3126956Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3127087Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3127354Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3127362Z 
2025-02-24T16:09:32.3127489Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3127758Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T16:09:32.3127763Z 
2025-02-24T16:09:32.3127987Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935940>
2025-02-24T16:09:32.3128160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3128248Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3128253Z 
2025-02-24T16:09:32.3128393Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3128515Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3128600Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3128673Z         try:
2025-02-24T16:09:32.3128814Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3128896Z         except KeyError:
2025-02-24T16:09:32.3129035Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3129106Z     
2025-02-24T16:09:32.3129335Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3129427Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3129518Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3129649Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3129737Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3129824Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3129935Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3129940Z 
2025-02-24T16:09:32.3130188Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3130306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3130310Z 
2025-02-24T16:09:32.3130450Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3130536Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3130649Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3130735Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3130874Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3130959Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3131061Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3131143Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3131223Z err_msg = None
2025-02-24T16:09:32.3131226Z 
2025-02-24T16:09:32.3131341Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3131426Z         if err_msg is None:
2025-02-24T16:09:32.3131519Z             if left.shape != right.shape:
2025-02-24T16:09:32.3131608Z                 raise_assert_detail(
2025-02-24T16:09:32.3131752Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3131826Z                 )
2025-02-24T16:09:32.3131897Z     
2025-02-24T16:09:32.3131971Z             diff = 0
2025-02-24T16:09:32.3132088Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3132180Z                 # count up differences
2025-02-24T16:09:32.3132354Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3132432Z                     diff += 1
2025-02-24T16:09:32.3132503Z     
2025-02-24T16:09:32.3132593Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3132728Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3132910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3133012Z E           AssertionError: Series are different
2025-02-24T16:09:32.3133085Z E           
2025-02-24T16:09:32.3133186Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3133568Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3133912Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3134253Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3134343Z 
2025-02-24T16:09:32.3134659Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3134912Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T16:09:32.3134916Z 
2025-02-24T16:09:32.3135142Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935a00>
2025-02-24T16:09:32.3135381Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3135481Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3135485Z 
2025-02-24T16:09:32.3135622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3135741Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3135823Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3135896Z         try:
2025-02-24T16:09:32.3136037Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3136120Z         except KeyError:
2025-02-24T16:09:32.3136398Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3136470Z     
2025-02-24T16:09:32.3136563Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3136655Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3136747Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3136882Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3136970Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3137063Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3137173Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3137177Z 
2025-02-24T16:09:32.3137306Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3137423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3137428Z 
2025-02-24T16:09:32.3137568Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3137653Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3137759Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3137842Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3137984Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3138064Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3138174Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3138252Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3138329Z err_msg = None
2025-02-24T16:09:32.3138333Z 
2025-02-24T16:09:32.3138443Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3138526Z         if err_msg is None:
2025-02-24T16:09:32.3138621Z             if left.shape != right.shape:
2025-02-24T16:09:32.3138708Z                 raise_assert_detail(
2025-02-24T16:09:32.3138855Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3138925Z                 )
2025-02-24T16:09:32.3138998Z     
2025-02-24T16:09:32.3139070Z             diff = 0
2025-02-24T16:09:32.3139187Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3139280Z                 # count up differences
2025-02-24T16:09:32.3139451Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3139536Z                     diff += 1
2025-02-24T16:09:32.3139604Z     
2025-02-24T16:09:32.3139693Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3139828Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3140003Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3140112Z E           AssertionError: Series are different
2025-02-24T16:09:32.3140303Z E           
2025-02-24T16:09:32.3140409Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3140783Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3141259Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3141648Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3141653Z 
2025-02-24T16:09:32.3141967Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3142172Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T16:09:32.3142176Z 
2025-02-24T16:09:32.3142307Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3142436Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3142533Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3142670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3142791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3142887Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3142961Z err_msg = None
2025-02-24T16:09:32.3142967Z 
2025-02-24T16:09:32.3143074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3143159Z         if err_msg is None:
2025-02-24T16:09:32.3143255Z             if left.shape != right.shape:
2025-02-24T16:09:32.3143345Z                 raise_assert_detail(
2025-02-24T16:09:32.3143489Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3143564Z                 )
2025-02-24T16:09:32.3143638Z     
2025-02-24T16:09:32.3143711Z             diff = 0
2025-02-24T16:09:32.3143827Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3143920Z                 # count up differences
2025-02-24T16:09:32.3144096Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3144174Z                     diff += 1
2025-02-24T16:09:32.3144282Z     
2025-02-24T16:09:32.3144449Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3144688Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3144991Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3145179Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3145308Z E           
2025-02-24T16:09:32.3145444Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3145715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3146074Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3146079Z 
2025-02-24T16:09:32.3146612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3146623Z 
2025-02-24T16:09:32.3146802Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3146806Z 
2025-02-24T16:09:32.3147038Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935c40>
2025-02-24T16:09:32.3147241Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>, attr = 'nu'
2025-02-24T16:09:32.3147249Z 
2025-02-24T16:09:32.3147403Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3147522Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3147613Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3147684Z         try:
2025-02-24T16:09:32.3147861Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3147942Z         except KeyError:
2025-02-24T16:09:32.3148083Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3148158Z     
2025-02-24T16:09:32.3148246Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3148343Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3148433Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3148574Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3148660Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3148753Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3148869Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3148873Z 
2025-02-24T16:09:32.3149002Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3149119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3149268Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3149341Z     ???
2025-02-24T16:09:32.3149454Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3149461Z 
2025-02-24T16:09:32.3149529Z >   ???
2025-02-24T16:09:32.3149661Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3149728Z E   
2025-02-24T16:09:32.3149859Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3149970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3150044Z E          ...
2025-02-24T16:09:32.3150134Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3150269Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3150383Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3150452Z E          ...
2025-02-24T16:09:32.3150539Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3150666Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3150772Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3150777Z 
2025-02-24T16:09:32.3150873Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3151100Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T16:09:32.3151103Z 
2025-02-24T16:09:32.3151235Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3151365Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3151462Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3151733Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3151854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3151948Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3152023Z err_msg = None
2025-02-24T16:09:32.3152027Z 
2025-02-24T16:09:32.3152143Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3152319Z         if err_msg is None:
2025-02-24T16:09:32.3152418Z             if left.shape != right.shape:
2025-02-24T16:09:32.3152505Z                 raise_assert_detail(
2025-02-24T16:09:32.3152653Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3152723Z                 )
2025-02-24T16:09:32.3152792Z     
2025-02-24T16:09:32.3152869Z             diff = 0
2025-02-24T16:09:32.3152982Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3153073Z                 # count up differences
2025-02-24T16:09:32.3153247Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3153322Z                     diff += 1
2025-02-24T16:09:32.3153398Z     
2025-02-24T16:09:32.3153485Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3153625Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3153800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3153912Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3153987Z E           
2025-02-24T16:09:32.3154098Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3154364Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3154637Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3154642Z 
2025-02-24T16:09:32.3154950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3154959Z 
2025-02-24T16:09:32.3155129Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3155134Z 
2025-02-24T16:09:32.3155362Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935d00>
2025-02-24T16:09:32.3155528Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3155613Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3155616Z 
2025-02-24T16:09:32.3155753Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3155870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3155957Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3156027Z         try:
2025-02-24T16:09:32.3156175Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3156253Z         except KeyError:
2025-02-24T16:09:32.3156496Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3156565Z     
2025-02-24T16:09:32.3156655Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3156753Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3156841Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3156977Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3157061Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3157153Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3157387Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3157391Z 
2025-02-24T16:09:32.3157516Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3157635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3157780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3157852Z     ???
2025-02-24T16:09:32.3158058Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3158067Z 
2025-02-24T16:09:32.3158136Z >   ???
2025-02-24T16:09:32.3158266Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3158332Z E   
2025-02-24T16:09:32.3158462Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3158571Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3158645Z E          ...
2025-02-24T16:09:32.3158732Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3158867Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3158982Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3159054Z E          ...
2025-02-24T16:09:32.3159142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3159266Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3159374Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3159378Z 
2025-02-24T16:09:32.3159473Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3159680Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T16:09:32.3159684Z 
2025-02-24T16:09:32.3159822Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3159948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3160052Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3160188Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3160309Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3160411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3160485Z err_msg = None
2025-02-24T16:09:32.3160489Z 
2025-02-24T16:09:32.3160606Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3160690Z         if err_msg is None:
2025-02-24T16:09:32.3160790Z             if left.shape != right.shape:
2025-02-24T16:09:32.3160877Z                 raise_assert_detail(
2025-02-24T16:09:32.3161021Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3161094Z                 )
2025-02-24T16:09:32.3161161Z     
2025-02-24T16:09:32.3161235Z             diff = 0
2025-02-24T16:09:32.3161346Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3161440Z                 # count up differences
2025-02-24T16:09:32.3161613Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3161690Z                     diff += 1
2025-02-24T16:09:32.3161760Z     
2025-02-24T16:09:32.3161848Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3162021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3162341Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3162528Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3162653Z E           
2025-02-24T16:09:32.3162840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3163319Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3163919Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3163927Z 
2025-02-24T16:09:32.3164545Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3164553Z 
2025-02-24T16:09:32.3164847Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3164853Z 
2025-02-24T16:09:32.3165245Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935dc0>
2025-02-24T16:09:32.3165556Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>, attr = 'f_lu'
2025-02-24T16:09:32.3165564Z 
2025-02-24T16:09:32.3165710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3165825Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3165913Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3165985Z         try:
2025-02-24T16:09:32.3166127Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3166208Z         except KeyError:
2025-02-24T16:09:32.3166478Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3166551Z     
2025-02-24T16:09:32.3166640Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3166735Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3166826Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3166958Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3167046Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3167136Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3167251Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3167255Z 
2025-02-24T16:09:32.3167379Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3167492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3167640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3167707Z     ???
2025-02-24T16:09:32.3167817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3167824Z 
2025-02-24T16:09:32.3167892Z >   ???
2025-02-24T16:09:32.3168021Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3168090Z E   
2025-02-24T16:09:32.3168217Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3168329Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3168400Z E          ...
2025-02-24T16:09:32.3168489Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3168621Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3168736Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3168807Z E          ...
2025-02-24T16:09:32.3168893Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3169020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3169127Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3169131Z 
2025-02-24T16:09:32.3169223Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3169440Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T16:09:32.3169447Z 
2025-02-24T16:09:32.3169571Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3169699Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3169925Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3170058Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3170179Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3170273Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3170350Z err_msg = None
2025-02-24T16:09:32.3170355Z 
2025-02-24T16:09:32.3170464Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3170653Z         if err_msg is None:
2025-02-24T16:09:32.3170749Z             if left.shape != right.shape:
2025-02-24T16:09:32.3170838Z                 raise_assert_detail(
2025-02-24T16:09:32.3170983Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3171053Z                 )
2025-02-24T16:09:32.3171122Z     
2025-02-24T16:09:32.3171194Z             diff = 0
2025-02-24T16:09:32.3171307Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3171398Z                 # count up differences
2025-02-24T16:09:32.3171570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3171650Z                     diff += 1
2025-02-24T16:09:32.3171718Z     
2025-02-24T16:09:32.3171810Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3171943Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3172120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3172233Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3172306Z E           
2025-02-24T16:09:32.3172419Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3172680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3172946Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3172951Z 
2025-02-24T16:09:32.3173265Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3173270Z 
2025-02-24T16:09:32.3173436Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3173440Z 
2025-02-24T16:09:32.3173666Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600936540>
2025-02-24T16:09:32.3173835Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3173921Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3173925Z 
2025-02-24T16:09:32.3174065Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3174179Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3174265Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3174334Z         try:
2025-02-24T16:09:32.3174478Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3174562Z         except KeyError:
2025-02-24T16:09:32.3174703Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3174773Z     
2025-02-24T16:09:32.3174860Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3174955Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3175043Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3175179Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3175267Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3175461Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3175573Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3175642Z             else:
2025-02-24T16:09:32.3175741Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3175845Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3175849Z 
2025-02-24T16:09:32.3175976Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3176090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3176455Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3176533Z     ???
2025-02-24T16:09:32.3176645Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3176649Z 
2025-02-24T16:09:32.3176719Z >   ???
2025-02-24T16:09:32.3176850Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3176916Z E   
2025-02-24T16:09:32.3177056Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3177173Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3177246Z E          ...
2025-02-24T16:09:32.3177334Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3177471Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3177589Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3177657Z E          ...
2025-02-24T16:09:32.3177752Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3177876Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3177984Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3177988Z 
2025-02-24T16:09:32.3178077Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3178295Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T16:09:32.3178299Z 
2025-02-24T16:09:32.3178433Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3178568Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3178669Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3178804Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3178933Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3179031Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3179107Z err_msg = None
2025-02-24T16:09:32.3179111Z 
2025-02-24T16:09:32.3179229Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3179311Z         if err_msg is None:
2025-02-24T16:09:32.3179410Z             if left.shape != right.shape:
2025-02-24T16:09:32.3179496Z                 raise_assert_detail(
2025-02-24T16:09:32.3179641Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3179721Z                 )
2025-02-24T16:09:32.3179789Z     
2025-02-24T16:09:32.3179865Z             diff = 0
2025-02-24T16:09:32.3179978Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3180069Z                 # count up differences
2025-02-24T16:09:32.3180389Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3180524Z                     diff += 1
2025-02-24T16:09:32.3180644Z     
2025-02-24T16:09:32.3180797Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3181030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3181325Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3181519Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3181642Z E           
2025-02-24T16:09:32.3181830Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3182474Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3183067Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3183081Z 
2025-02-24T16:09:32.3183547Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3183552Z 
2025-02-24T16:09:32.3183726Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3183734Z 
2025-02-24T16:09:32.3183962Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600936780>
2025-02-24T16:09:32.3184132Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3184209Z attr = 'j_blues'
2025-02-24T16:09:32.3184213Z 
2025-02-24T16:09:32.3184355Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3184472Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3184556Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3184632Z         try:
2025-02-24T16:09:32.3184775Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3184854Z         except KeyError:
2025-02-24T16:09:32.3184997Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3185063Z     
2025-02-24T16:09:32.3185155Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3185248Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3185344Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3185479Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3185565Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3185659Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3185768Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3185843Z             else:
2025-02-24T16:09:32.3185938Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3186051Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3186055Z 
2025-02-24T16:09:32.3186186Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3186411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3186566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3186634Z     ???
2025-02-24T16:09:32.3186749Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3186757Z 
2025-02-24T16:09:32.3186829Z >   ???
2025-02-24T16:09:32.3186959Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3187029Z E   
2025-02-24T16:09:32.3187156Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3187270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3187340Z E          ...
2025-02-24T16:09:32.3187428Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3187565Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3187678Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3187751Z E          ...
2025-02-24T16:09:32.3187834Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3187962Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3188067Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3188072Z 
2025-02-24T16:09:32.3188291Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3188503Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T16:09:32.3188508Z 
2025-02-24T16:09:32.3188639Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3188771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3188865Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3189104Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3189236Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3189331Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3189407Z err_msg = None
2025-02-24T16:09:32.3189412Z 
2025-02-24T16:09:32.3189523Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3189614Z         if err_msg is None:
2025-02-24T16:09:32.3189712Z             if left.shape != right.shape:
2025-02-24T16:09:32.3189798Z                 raise_assert_detail(
2025-02-24T16:09:32.3189945Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3190014Z                 )
2025-02-24T16:09:32.3190085Z     
2025-02-24T16:09:32.3190156Z             diff = 0
2025-02-24T16:09:32.3190274Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3190367Z                 # count up differences
2025-02-24T16:09:32.3190540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3190621Z                     diff += 1
2025-02-24T16:09:32.3190688Z     
2025-02-24T16:09:32.3190781Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3190918Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3191091Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3191210Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3191280Z E           
2025-02-24T16:09:32.3191397Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3191661Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3191930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3191934Z 
2025-02-24T16:09:32.3192247Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3192255Z 
2025-02-24T16:09:32.3192422Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3192426Z 
2025-02-24T16:09:32.3192653Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937500>
2025-02-24T16:09:32.3192825Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3192897Z attr = 'lines'
2025-02-24T16:09:32.3192902Z 
2025-02-24T16:09:32.3193047Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3193163Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3193251Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3193325Z         try:
2025-02-24T16:09:32.3193465Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3193551Z         except KeyError:
2025-02-24T16:09:32.3193689Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3193846Z     
2025-02-24T16:09:32.3193936Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3194042Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3194134Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3194265Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3194352Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3194442Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3194624Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3194698Z             else:
2025-02-24T16:09:32.3194798Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3194909Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3194913Z 
2025-02-24T16:09:32.3195041Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3195159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3195318Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3195396Z     ???
2025-02-24T16:09:32.3195506Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3195514Z 
2025-02-24T16:09:32.3195581Z >   ???
2025-02-24T16:09:32.3195711Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3195779Z E   
2025-02-24T16:09:32.3195913Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3196028Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3196102Z E          ...
2025-02-24T16:09:32.3196194Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3196418Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3196536Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3196605Z E          ...
2025-02-24T16:09:32.3196692Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3196819Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3196927Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3196931Z 
2025-02-24T16:09:32.3197025Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3197291Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T16:09:32.3197295Z 
2025-02-24T16:09:32.3197526Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009375c0>
2025-02-24T16:09:32.3197698Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3197793Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3197797Z 
2025-02-24T16:09:32.3197939Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3198057Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3198143Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3198211Z         try:
2025-02-24T16:09:32.3198362Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3198441Z         except KeyError:
2025-02-24T16:09:32.3198582Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3198654Z     
2025-02-24T16:09:32.3198740Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3198839Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3198925Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3199062Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3199149Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3199241Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3199353Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3199357Z 
2025-02-24T16:09:32.3199484Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3199600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3199739Z 
2025-02-24T16:09:32.3199881Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3199968Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3200082Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3200162Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3200307Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3200388Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3200594Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3200680Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3200756Z err_msg = None
2025-02-24T16:09:32.3200761Z 
2025-02-24T16:09:32.3200877Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3200956Z         if err_msg is None:
2025-02-24T16:09:32.3201052Z             if left.shape != right.shape:
2025-02-24T16:09:32.3201139Z                 raise_assert_detail(
2025-02-24T16:09:32.3201287Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3201357Z                 )
2025-02-24T16:09:32.3201425Z     
2025-02-24T16:09:32.3201503Z             diff = 0
2025-02-24T16:09:32.3201614Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3201707Z                 # count up differences
2025-02-24T16:09:32.3201887Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3201971Z                     diff += 1
2025-02-24T16:09:32.3202044Z     
2025-02-24T16:09:32.3202129Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3202273Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3202443Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3202555Z E           AssertionError: Series are different
2025-02-24T16:09:32.3202628Z E           
2025-02-24T16:09:32.3202734Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3203113Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3203461Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3203801Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3203808Z 
2025-02-24T16:09:32.3204188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3204667Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T16:09:32.3204675Z 
2025-02-24T16:09:32.3205061Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937680>
2025-02-24T16:09:32.3205354Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3205506Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3205512Z 
2025-02-24T16:09:32.3205751Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3206066Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3206205Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3206452Z         try:
2025-02-24T16:09:32.3206693Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3206832Z         except KeyError:
2025-02-24T16:09:32.3207065Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3207186Z     
2025-02-24T16:09:32.3207337Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3207673Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3207789Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3207933Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3208027Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3208118Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3208234Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3208242Z 
2025-02-24T16:09:32.3208378Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3208492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3208496Z 
2025-02-24T16:09:32.3208635Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3208720Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3208831Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3208922Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3209062Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3209148Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3209252Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3209334Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3209409Z err_msg = None
2025-02-24T16:09:32.3209416Z 
2025-02-24T16:09:32.3209536Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3209619Z         if err_msg is None:
2025-02-24T16:09:32.3209711Z             if left.shape != right.shape:
2025-02-24T16:09:32.3209800Z                 raise_assert_detail(
2025-02-24T16:09:32.3209948Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3210026Z                 )
2025-02-24T16:09:32.3210093Z     
2025-02-24T16:09:32.3210166Z             diff = 0
2025-02-24T16:09:32.3210285Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3210371Z                 # count up differences
2025-02-24T16:09:32.3210548Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3210625Z                     diff += 1
2025-02-24T16:09:32.3210697Z     
2025-02-24T16:09:32.3210784Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3210924Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3211105Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3211209Z E           AssertionError: Series are different
2025-02-24T16:09:32.3211282Z E           
2025-02-24T16:09:32.3211386Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3211768Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3212151Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3212725Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3212731Z 
2025-02-24T16:09:32.3213046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3213255Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T16:09:32.3213259Z 
2025-02-24T16:09:32.3213392Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3213522Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3213624Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3213759Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3213883Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3213977Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3214056Z err_msg = None
2025-02-24T16:09:32.3214061Z 
2025-02-24T16:09:32.3214179Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3214258Z         if err_msg is None:
2025-02-24T16:09:32.3214356Z             if left.shape != right.shape:
2025-02-24T16:09:32.3214440Z                 raise_assert_detail(
2025-02-24T16:09:32.3214589Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3214660Z                 )
2025-02-24T16:09:32.3214727Z     
2025-02-24T16:09:32.3214801Z             diff = 0
2025-02-24T16:09:32.3214911Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3215005Z                 # count up differences
2025-02-24T16:09:32.3215175Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3215259Z                     diff += 1
2025-02-24T16:09:32.3215368Z     
2025-02-24T16:09:32.3215476Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3215623Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3215793Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3215909Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3215981Z E           
2025-02-24T16:09:32.3216098Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3216480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3216747Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3216751Z 
2025-02-24T16:09:32.3217059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3217064Z 
2025-02-24T16:09:32.3217242Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3217359Z 
2025-02-24T16:09:32.3217591Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009378c0>
2025-02-24T16:09:32.3217799Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>, attr = 'nu'
2025-02-24T16:09:32.3217803Z 
2025-02-24T16:09:32.3217948Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3218063Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3218153Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3218340Z         try:
2025-02-24T16:09:32.3218488Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3218569Z         except KeyError:
2025-02-24T16:09:32.3218709Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3218782Z     
2025-02-24T16:09:32.3218870Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3218966Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3219058Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3219194Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3219281Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3219375Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3219488Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3219493Z 
2025-02-24T16:09:32.3219619Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3219738Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3219889Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3219961Z     ???
2025-02-24T16:09:32.3220071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3220078Z 
2025-02-24T16:09:32.3220146Z >   ???
2025-02-24T16:09:32.3220276Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3220344Z E   
2025-02-24T16:09:32.3220479Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3220590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3220662Z E          ...
2025-02-24T16:09:32.3220752Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3220885Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3221002Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3221070Z E          ...
2025-02-24T16:09:32.3221161Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3221288Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3221398Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3221402Z 
2025-02-24T16:09:32.3221495Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3221726Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T16:09:32.3221730Z 
2025-02-24T16:09:32.3221867Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3221998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3222102Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3222269Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3222493Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3222665Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3222791Z err_msg = None
2025-02-24T16:09:32.3222796Z 
2025-02-24T16:09:32.3222986Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3223125Z         if err_msg is None:
2025-02-24T16:09:32.3223284Z             if left.shape != right.shape:
2025-02-24T16:09:32.3223431Z                 raise_assert_detail(
2025-02-24T16:09:32.3223795Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3223917Z                 )
2025-02-24T16:09:32.3224033Z     
2025-02-24T16:09:32.3224163Z             diff = 0
2025-02-24T16:09:32.3224354Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3224509Z                 # count up differences
2025-02-24T16:09:32.3224808Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3224937Z                     diff += 1
2025-02-24T16:09:32.3225060Z     
2025-02-24T16:09:32.3225308Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3225550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3225785Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3225900Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3225974Z E           
2025-02-24T16:09:32.3226084Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3226457Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3226729Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3226734Z 
2025-02-24T16:09:32.3227042Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3227046Z 
2025-02-24T16:09:32.3227223Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3227229Z 
2025-02-24T16:09:32.3227458Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937980>
2025-02-24T16:09:32.3227626Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3227709Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3227714Z 
2025-02-24T16:09:32.3227853Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3227974Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3228063Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3228132Z         try:
2025-02-24T16:09:32.3228277Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3228359Z         except KeyError:
2025-02-24T16:09:32.3228503Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3228570Z     
2025-02-24T16:09:32.3228663Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3228759Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3228850Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3228987Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3229072Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3229167Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3229277Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3229281Z 
2025-02-24T16:09:32.3229408Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3229528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3229674Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3229748Z     ???
2025-02-24T16:09:32.3229857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3229861Z 
2025-02-24T16:09:32.3229933Z >   ???
2025-02-24T16:09:32.3230065Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3230261Z E   
2025-02-24T16:09:32.3230392Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3230501Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3230574Z E          ...
2025-02-24T16:09:32.3230660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3230793Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3230912Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3230982Z E          ...
2025-02-24T16:09:32.3231173Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3231302Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3231410Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3231414Z 
2025-02-24T16:09:32.3231504Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3231717Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T16:09:32.3231725Z 
2025-02-24T16:09:32.3231855Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3231982Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3232080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3232210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3232339Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3232485Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3232615Z err_msg = None
2025-02-24T16:09:32.3232621Z 
2025-02-24T16:09:32.3232818Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3232961Z         if err_msg is None:
2025-02-24T16:09:32.3233123Z             if left.shape != right.shape:
2025-02-24T16:09:32.3233270Z                 raise_assert_detail(
2025-02-24T16:09:32.3233520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3233644Z                 )
2025-02-24T16:09:32.3233759Z     
2025-02-24T16:09:32.3233888Z             diff = 0
2025-02-24T16:09:32.3234077Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3234231Z                 # count up differences
2025-02-24T16:09:32.3234536Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3234667Z                     diff += 1
2025-02-24T16:09:32.3234794Z     
2025-02-24T16:09:32.3234943Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3235176Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3235468Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3235663Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3235800Z E           
2025-02-24T16:09:32.3235966Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3236239Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3236619Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3236624Z 
2025-02-24T16:09:32.3236938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3236943Z 
2025-02-24T16:09:32.3237121Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3237253Z 
2025-02-24T16:09:32.3237486Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937a40>
2025-02-24T16:09:32.3237697Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>, attr = 'f_lu'
2025-02-24T16:09:32.3237701Z 
2025-02-24T16:09:32.3237851Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3237969Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3238059Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3238232Z         try:
2025-02-24T16:09:32.3238386Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3238471Z         except KeyError:
2025-02-24T16:09:32.3238611Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3238689Z     
2025-02-24T16:09:32.3238778Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3238878Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3238971Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3239110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3239200Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3239291Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3246025Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3246036Z 
2025-02-24T16:09:32.3246203Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3246483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3246649Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3246726Z     ???
2025-02-24T16:09:32.3246844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3246849Z 
2025-02-24T16:09:32.3246918Z >   ???
2025-02-24T16:09:32.3247055Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3247127Z E   
2025-02-24T16:09:32.3247271Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3247386Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3247465Z E          ...
2025-02-24T16:09:32.3247566Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3247700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3247817Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3247917Z E          ...
2025-02-24T16:09:32.3248010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3248136Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3248250Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3248254Z 
2025-02-24T16:09:32.3248352Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3248583Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T16:09:32.3248587Z 
2025-02-24T16:09:32.3248730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3248872Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3248974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3249113Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3249240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3249357Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3249504Z err_msg = None
2025-02-24T16:09:32.3249520Z 
2025-02-24T16:09:32.3249716Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3249869Z         if err_msg is None:
2025-02-24T16:09:32.3250029Z             if left.shape != right.shape:
2025-02-24T16:09:32.3250183Z                 raise_assert_detail(
2025-02-24T16:09:32.3250634Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3250757Z                 )
2025-02-24T16:09:32.3250879Z     
2025-02-24T16:09:32.3251002Z             diff = 0
2025-02-24T16:09:32.3251197Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3251344Z                 # count up differences
2025-02-24T16:09:32.3251646Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3251777Z                     diff += 1
2025-02-24T16:09:32.3252065Z     
2025-02-24T16:09:32.3252218Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3252457Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3252763Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3252963Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3253075Z E           
2025-02-24T16:09:32.3253199Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3253474Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3253744Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3253749Z 
2025-02-24T16:09:32.3254072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3254081Z 
2025-02-24T16:09:32.3254257Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3254264Z 
2025-02-24T16:09:32.3254496Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600960200>
2025-02-24T16:09:32.3254671Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3254754Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3254758Z 
2025-02-24T16:09:32.3254907Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3255025Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3255118Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3255187Z         try:
2025-02-24T16:09:32.3255338Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3255420Z         except KeyError:
2025-02-24T16:09:32.3255562Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3255631Z     
2025-02-24T16:09:32.3255718Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3255814Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3255906Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3256041Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3256127Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3256218Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3256479Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3256553Z             else:
2025-02-24T16:09:32.3256651Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3256769Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3256773Z 
2025-02-24T16:09:32.3256910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3257028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3257181Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3257254Z     ???
2025-02-24T16:09:32.3257363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3257492Z 
2025-02-24T16:09:32.3257566Z >   ???
2025-02-24T16:09:32.3257695Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3257768Z E   
2025-02-24T16:09:32.3257896Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3258012Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3258088Z E          ...
2025-02-24T16:09:32.3258247Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3258607Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3258737Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3258814Z E          ...
2025-02-24T16:09:32.3258908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3259042Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3259156Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3259165Z 
2025-02-24T16:09:32.3259258Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3259496Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T16:09:32.3259500Z 
2025-02-24T16:09:32.3259638Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3259773Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3259879Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3260015Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3260144Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3260234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3260313Z err_msg = None
2025-02-24T16:09:32.3260317Z 
2025-02-24T16:09:32.3260437Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3260522Z         if err_msg is None:
2025-02-24T16:09:32.3260629Z             if left.shape != right.shape:
2025-02-24T16:09:32.3260715Z                 raise_assert_detail(
2025-02-24T16:09:32.3260873Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3260948Z                 )
2025-02-24T16:09:32.3261015Z     
2025-02-24T16:09:32.3261095Z             diff = 0
2025-02-24T16:09:32.3261208Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3261303Z                 # count up differences
2025-02-24T16:09:32.3261480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3261562Z                     diff += 1
2025-02-24T16:09:32.3261636Z     
2025-02-24T16:09:32.3261724Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3261869Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3262043Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3262161Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3262232Z E           
2025-02-24T16:09:32.3262349Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3262622Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3262884Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3262974Z 
2025-02-24T16:09:32.3263295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3263299Z 
2025-02-24T16:09:32.3263481Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3263485Z 
2025-02-24T16:09:32.3263715Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009602c0>
2025-02-24T16:09:32.3263886Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3264035Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3264045Z 
2025-02-24T16:09:32.3264186Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3264307Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3264391Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3264464Z         try:
2025-02-24T16:09:32.3264605Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3264688Z         except KeyError:
2025-02-24T16:09:32.3264835Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3264904Z     
2025-02-24T16:09:32.3264994Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3265086Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3265178Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3265307Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3265395Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3265487Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3265599Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3265673Z             else:
2025-02-24T16:09:32.3265768Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3265880Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3265884Z 
2025-02-24T16:09:32.3266011Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3266128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3266398Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3266471Z     ???
2025-02-24T16:09:32.3266583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3266587Z 
2025-02-24T16:09:32.3266653Z >   ???
2025-02-24T16:09:32.3266782Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3266847Z E   
2025-02-24T16:09:32.3266979Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3267096Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3267171Z E          ...
2025-02-24T16:09:32.3267260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3267391Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3267504Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3267645Z E          ...
2025-02-24T16:09:32.3267812Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3268039Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3268214Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3268220Z 
2025-02-24T16:09:32.3268377Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3268749Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T16:09:32.3268764Z 
2025-02-24T16:09:32.3268917Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3269057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3269158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3269297Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3269422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3269649Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3269731Z err_msg = None
2025-02-24T16:09:32.3269735Z 
2025-02-24T16:09:32.3269851Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3269939Z         if err_msg is None:
2025-02-24T16:09:32.3270036Z             if left.shape != right.shape:
2025-02-24T16:09:32.3270125Z                 raise_assert_detail(
2025-02-24T16:09:32.3270279Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3270452Z                 )
2025-02-24T16:09:32.3270527Z     
2025-02-24T16:09:32.3270602Z             diff = 0
2025-02-24T16:09:32.3270723Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3270813Z                 # count up differences
2025-02-24T16:09:32.3270991Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3271074Z                     diff += 1
2025-02-24T16:09:32.3271145Z     
2025-02-24T16:09:32.3271236Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3271378Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3271553Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3271669Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3271746Z E           
2025-02-24T16:09:32.3271864Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3272134Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3272402Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3272409Z 
2025-02-24T16:09:32.3272730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3272735Z 
2025-02-24T16:09:32.3272907Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3272911Z 
2025-02-24T16:09:32.3273143Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600960440>
2025-02-24T16:09:32.3273312Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3273391Z attr = 'j_blues'
2025-02-24T16:09:32.3273395Z 
2025-02-24T16:09:32.3273540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3273660Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3273753Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3273822Z         try:
2025-02-24T16:09:32.3273969Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3274054Z         except KeyError:
2025-02-24T16:09:32.3274192Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3274263Z     
2025-02-24T16:09:32.3274351Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3274450Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3274540Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3274683Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3274771Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3274859Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3274973Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3275043Z             else:
2025-02-24T16:09:32.3275141Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3275361Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3275365Z 
2025-02-24T16:09:32.3275496Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3275613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3275760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3275832Z     ???
2025-02-24T16:09:32.3275941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3275945Z 
2025-02-24T16:09:32.3276109Z >   ???
2025-02-24T16:09:32.3276245Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3276425Z E   
2025-02-24T16:09:32.3276559Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3276669Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3276745Z E          ...
2025-02-24T16:09:32.3276832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3276971Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3277085Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3277155Z E          ...
2025-02-24T16:09:32.3277244Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3277367Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3277477Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3277482Z 
2025-02-24T16:09:32.3277572Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3277794Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T16:09:32.3277798Z 
2025-02-24T16:09:32.3277934Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3278065Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3278164Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3278301Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3278431Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3278529Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3278603Z err_msg = None
2025-02-24T16:09:32.3278607Z 
2025-02-24T16:09:32.3278722Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3278805Z         if err_msg is None:
2025-02-24T16:09:32.3278908Z             if left.shape != right.shape:
2025-02-24T16:09:32.3278996Z                 raise_assert_detail(
2025-02-24T16:09:32.3279145Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3279219Z                 )
2025-02-24T16:09:32.3279288Z     
2025-02-24T16:09:32.3279365Z             diff = 0
2025-02-24T16:09:32.3279477Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3279573Z                 # count up differences
2025-02-24T16:09:32.3279750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3279828Z                     diff += 1
2025-02-24T16:09:32.3279901Z     
2025-02-24T16:09:32.3279990Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3280131Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3280302Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3280424Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3280498Z E           
2025-02-24T16:09:32.3280610Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3280878Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3281262Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3281271Z 
2025-02-24T16:09:32.3281679Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3281684Z 
2025-02-24T16:09:32.3281860Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3281864Z 
2025-02-24T16:09:32.3282100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009611c0>
2025-02-24T16:09:32.3282270Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3282346Z attr = 'lines'
2025-02-24T16:09:32.3282354Z 
2025-02-24T16:09:32.3282494Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3282609Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3282696Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3282765Z         try:
2025-02-24T16:09:32.3282908Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3282986Z         except KeyError:
2025-02-24T16:09:32.3283128Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3283202Z     
2025-02-24T16:09:32.3283289Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3283384Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3283472Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3283605Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3283690Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3283783Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3283900Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3283970Z             else:
2025-02-24T16:09:32.3284069Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3284177Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3284181Z 
2025-02-24T16:09:32.3284311Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3284432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3284580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3284654Z     ???
2025-02-24T16:09:32.3284762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3284767Z 
2025-02-24T16:09:32.3284838Z >   ???
2025-02-24T16:09:32.3284966Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3285039Z E   
2025-02-24T16:09:32.3285172Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3285286Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3285361Z E          ...
2025-02-24T16:09:32.3285445Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3285575Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3285684Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3285756Z E          ...
2025-02-24T16:09:32.3285845Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3286031Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3286228Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3286234Z 
2025-02-24T16:09:32.3286510Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3286981Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T16:09:32.3286988Z 
2025-02-24T16:09:32.3287375Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961280>
2025-02-24T16:09:32.3287713Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3287809Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3287813Z 
2025-02-24T16:09:32.3287954Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3288073Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3288163Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3288233Z         try:
2025-02-24T16:09:32.3288485Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3288569Z         except KeyError:
2025-02-24T16:09:32.3288713Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3288781Z     
2025-02-24T16:09:32.3288874Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3288973Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3289063Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3289203Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3289579Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3289674Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3289781Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3289785Z 
2025-02-24T16:09:32.3289918Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3290034Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3290038Z 
2025-02-24T16:09:32.3290180Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3290268Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3290377Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3290462Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3290608Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3290694Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3290803Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3290881Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3290959Z err_msg = None
2025-02-24T16:09:32.3290962Z 
2025-02-24T16:09:32.3291079Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3291159Z         if err_msg is None:
2025-02-24T16:09:32.3291256Z             if left.shape != right.shape:
2025-02-24T16:09:32.3291340Z                 raise_assert_detail(
2025-02-24T16:09:32.3291493Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3291565Z                 )
2025-02-24T16:09:32.3291640Z     
2025-02-24T16:09:32.3291714Z             diff = 0
2025-02-24T16:09:32.3291826Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3291919Z                 # count up differences
2025-02-24T16:09:32.3292088Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3292171Z                     diff += 1
2025-02-24T16:09:32.3292242Z     
2025-02-24T16:09:32.3292333Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3292472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3292645Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3292752Z E           AssertionError: Series are different
2025-02-24T16:09:32.3292823Z E           
2025-02-24T16:09:32.3292933Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3293314Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3293738Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3294147Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3294157Z 
2025-02-24T16:09:32.3294475Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3294743Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T16:09:32.3294747Z 
2025-02-24T16:09:32.3294974Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961340>
2025-02-24T16:09:32.3295147Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3295237Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3295241Z 
2025-02-24T16:09:32.3295385Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3295501Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3295587Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3295657Z         try:
2025-02-24T16:09:32.3295804Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3295888Z         except KeyError:
2025-02-24T16:09:32.3296026Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3296103Z     
2025-02-24T16:09:32.3296192Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3296437Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3296535Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3296681Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3296772Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3296864Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3296983Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3296987Z 
2025-02-24T16:09:32.3297119Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3297241Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3297245Z 
2025-02-24T16:09:32.3297387Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3297474Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3297589Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3297674Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3297819Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3297905Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3298009Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3298092Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3298167Z err_msg = None
2025-02-24T16:09:32.3298171Z 
2025-02-24T16:09:32.3298288Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3298372Z         if err_msg is None:
2025-02-24T16:09:32.3298472Z             if left.shape != right.shape:
2025-02-24T16:09:32.3298560Z                 raise_assert_detail(
2025-02-24T16:09:32.3298706Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3298780Z                 )
2025-02-24T16:09:32.3298850Z     
2025-02-24T16:09:32.3299063Z             diff = 0
2025-02-24T16:09:32.3299179Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3299276Z                 # count up differences
2025-02-24T16:09:32.3299454Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3299531Z                     diff += 1
2025-02-24T16:09:32.3299602Z     
2025-02-24T16:09:32.3299687Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3299925Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3300104Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3300216Z E           AssertionError: Series are different
2025-02-24T16:09:32.3300290Z E           
2025-02-24T16:09:32.3300395Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3300775Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3301163Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3301541Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3301548Z 
2025-02-24T16:09:32.3301865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3302080Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T16:09:32.3302084Z 
2025-02-24T16:09:32.3302217Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3302350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3302452Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3302591Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3302716Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3302814Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3302892Z err_msg = None
2025-02-24T16:09:32.3302896Z 
2025-02-24T16:09:32.3303007Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3303167Z         if err_msg is None:
2025-02-24T16:09:32.3303337Z             if left.shape != right.shape:
2025-02-24T16:09:32.3303478Z                 raise_assert_detail(
2025-02-24T16:09:32.3303738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3303857Z                 )
2025-02-24T16:09:32.3303976Z     
2025-02-24T16:09:32.3304099Z             diff = 0
2025-02-24T16:09:32.3304294Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3304447Z                 # count up differences
2025-02-24T16:09:32.3304741Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3304989Z                     diff += 1
2025-02-24T16:09:32.3305105Z     
2025-02-24T16:09:32.3305258Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3305488Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3305789Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3305987Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3306108Z E           
2025-02-24T16:09:32.3306430Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3306997Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3307278Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3307287Z 
2025-02-24T16:09:32.3307599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3307603Z 
2025-02-24T16:09:32.3307778Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3307789Z 
2025-02-24T16:09:32.3308019Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961580>
2025-02-24T16:09:32.3308227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>, attr = 'nu'
2025-02-24T16:09:32.3308231Z 
2025-02-24T16:09:32.3308374Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3308496Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3308586Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3308662Z         try:
2025-02-24T16:09:32.3308808Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3308889Z         except KeyError:
2025-02-24T16:09:32.3309033Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3309100Z     
2025-02-24T16:09:32.3309193Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3309288Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3309383Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3309523Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3309608Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3309702Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3309815Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3309819Z 
2025-02-24T16:09:32.3309952Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3310075Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3310223Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3310301Z     ???
2025-02-24T16:09:32.3310413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3310418Z 
2025-02-24T16:09:32.3310490Z >   ???
2025-02-24T16:09:32.3310617Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3310690Z E   
2025-02-24T16:09:32.3310827Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3310938Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3311014Z E          ...
2025-02-24T16:09:32.3311102Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3311241Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3311353Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3311429Z E          ...
2025-02-24T16:09:32.3311636Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3311763Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3311873Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3311878Z 
2025-02-24T16:09:32.3311968Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3312211Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T16:09:32.3312215Z 
2025-02-24T16:09:32.3312421Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3312552Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3312651Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3312785Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3312912Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3313013Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3313088Z err_msg = None
2025-02-24T16:09:32.3313092Z 
2025-02-24T16:09:32.3313205Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3313287Z         if err_msg is None:
2025-02-24T16:09:32.3313382Z             if left.shape != right.shape:
2025-02-24T16:09:32.3313466Z                 raise_assert_detail(
2025-02-24T16:09:32.3313620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3313696Z                 )
2025-02-24T16:09:32.3313764Z     
2025-02-24T16:09:32.3313838Z             diff = 0
2025-02-24T16:09:32.3313950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3314042Z                 # count up differences
2025-02-24T16:09:32.3314212Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3314299Z                     diff += 1
2025-02-24T16:09:32.3314370Z     
2025-02-24T16:09:32.3314457Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3314601Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3314770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3314886Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3314959Z E           
2025-02-24T16:09:32.3315071Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3315338Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3315600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3315612Z 
2025-02-24T16:09:32.3315922Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3315927Z 
2025-02-24T16:09:32.3316101Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3316108Z 
2025-02-24T16:09:32.3316447Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961640>
2025-02-24T16:09:32.3316621Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3316705Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3316709Z 
2025-02-24T16:09:32.3316850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3316970Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3317170Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3317242Z         try:
2025-02-24T16:09:32.3317384Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3317467Z         except KeyError:
2025-02-24T16:09:32.3317606Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3317674Z     
2025-02-24T16:09:32.3317766Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3317860Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3318071Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3318210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3318301Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3318391Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3318510Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3318514Z 
2025-02-24T16:09:32.3318644Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3318761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3318911Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3318982Z     ???
2025-02-24T16:09:32.3319095Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3319099Z 
2025-02-24T16:09:32.3319166Z >   ???
2025-02-24T16:09:32.3319300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3319370Z E   
2025-02-24T16:09:32.3319502Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3319615Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3319685Z E          ...
2025-02-24T16:09:32.3319776Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3319906Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3320021Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3320096Z E          ...
2025-02-24T16:09:32.3320181Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3320310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3320414Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3320418Z 
2025-02-24T16:09:32.3320514Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3320734Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T16:09:32.3320739Z 
2025-02-24T16:09:32.3320873Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3321006Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3321101Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3321236Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3321470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3321637Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3321770Z err_msg = None
2025-02-24T16:09:32.3321776Z 
2025-02-24T16:09:32.3321963Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3322103Z         if err_msg is None:
2025-02-24T16:09:32.3322270Z             if left.shape != right.shape:
2025-02-24T16:09:32.3322409Z                 raise_assert_detail(
2025-02-24T16:09:32.3322664Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3322782Z                 )
2025-02-24T16:09:32.3322903Z     
2025-02-24T16:09:32.3323026Z             diff = 0
2025-02-24T16:09:32.3323216Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3323363Z                 # count up differences
2025-02-24T16:09:32.3323662Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3323915Z                     diff += 1
2025-02-24T16:09:32.3324029Z     
2025-02-24T16:09:32.3324182Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3324409Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3324700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3324819Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3324889Z E           
2025-02-24T16:09:32.3325085Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3325350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3325618Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3325627Z 
2025-02-24T16:09:32.3325951Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3325955Z 
2025-02-24T16:09:32.3326131Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3326139Z 
2025-02-24T16:09:32.3326570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961700>
2025-02-24T16:09:32.3326786Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>, attr = 'f_lu'
2025-02-24T16:09:32.3326790Z 
2025-02-24T16:09:32.3326935Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3327052Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3327142Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3327214Z         try:
2025-02-24T16:09:32.3327352Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3327435Z         except KeyError:
2025-02-24T16:09:32.3327573Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3327648Z     
2025-02-24T16:09:32.3327735Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3327832Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3327928Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3328062Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3328150Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3328237Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3328350Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3328354Z 
2025-02-24T16:09:32.3328484Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3328598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3328750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3328819Z     ???
2025-02-24T16:09:32.3328932Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3328937Z 
2025-02-24T16:09:32.3329004Z >   ???
2025-02-24T16:09:32.3329133Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3329204Z E   
2025-02-24T16:09:32.3329335Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3329450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3329523Z E          ...
2025-02-24T16:09:32.3329616Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3329745Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3329862Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3330065Z E          ...
2025-02-24T16:09:32.3330151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3330279Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3330386Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3330391Z 
2025-02-24T16:09:32.3330486Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3330718Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T16:09:32.3330723Z 
2025-02-24T16:09:32.3330951Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3331087Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3331184Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3331319Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3331446Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3331542Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3331620Z err_msg = None
2025-02-24T16:09:32.3331624Z 
2025-02-24T16:09:32.3331737Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3331825Z         if err_msg is None:
2025-02-24T16:09:32.3331920Z             if left.shape != right.shape:
2025-02-24T16:09:32.3332009Z                 raise_assert_detail(
2025-02-24T16:09:32.3332162Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3332232Z                 )
2025-02-24T16:09:32.3332303Z     
2025-02-24T16:09:32.3332375Z             diff = 0
2025-02-24T16:09:32.3332488Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3332578Z                 # count up differences
2025-02-24T16:09:32.3332750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3332832Z                     diff += 1
2025-02-24T16:09:32.3332899Z     
2025-02-24T16:09:32.3332989Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3333125Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3333298Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3333414Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3333485Z E           
2025-02-24T16:09:32.3333600Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3333860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3334129Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3334136Z 
2025-02-24T16:09:32.3334453Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3334458Z 
2025-02-24T16:09:32.3334628Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3334635Z 
2025-02-24T16:09:32.3334866Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961e80>
2025-02-24T16:09:32.3335049Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3335127Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3335131Z 
2025-02-24T16:09:32.3335277Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3335396Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3335590Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3335659Z         try:
2025-02-24T16:09:32.3335805Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3335888Z         except KeyError:
2025-02-24T16:09:32.3336029Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3336103Z     
2025-02-24T16:09:32.3336190Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3336453Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3336726Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3336871Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3336961Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3337050Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3337164Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3337234Z             else:
2025-02-24T16:09:32.3337333Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3337450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3337455Z 
2025-02-24T16:09:32.3337582Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3337699Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3337848Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3337918Z     ???
2025-02-24T16:09:32.3338032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3338037Z 
2025-02-24T16:09:32.3338109Z >   ???
2025-02-24T16:09:32.3338238Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3338307Z E   
2025-02-24T16:09:32.3338438Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3338547Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3338622Z E          ...
2025-02-24T16:09:32.3338710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3338850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3338967Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3339037Z E          ...
2025-02-24T16:09:32.3339126Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3339252Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3339364Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3339368Z 
2025-02-24T16:09:32.3339464Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3339693Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T16:09:32.3339697Z 
2025-02-24T16:09:32.3339832Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3339960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3340065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3340204Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3340326Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3340423Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3340498Z err_msg = None
2025-02-24T16:09:32.3340502Z 
2025-02-24T16:09:32.3340621Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3340703Z         if err_msg is None:
2025-02-24T16:09:32.3340801Z             if left.shape != right.shape:
2025-02-24T16:09:32.3340891Z                 raise_assert_detail(
2025-02-24T16:09:32.3341038Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3341111Z                 )
2025-02-24T16:09:32.3341180Z     
2025-02-24T16:09:32.3341257Z             diff = 0
2025-02-24T16:09:32.3341368Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3341578Z                 # count up differences
2025-02-24T16:09:32.3341754Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3341830Z                     diff += 1
2025-02-24T16:09:32.3341900Z     
2025-02-24T16:09:32.3341987Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3342126Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3342394Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3342512Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3342586Z E           
2025-02-24T16:09:32.3342697Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3342962Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3343233Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3343237Z 
2025-02-24T16:09:32.3343555Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3343559Z 
2025-02-24T16:09:32.3343734Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3343738Z 
2025-02-24T16:09:32.3343966Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961f40>
2025-02-24T16:09:32.3344138Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3344222Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3344226Z 
2025-02-24T16:09:32.3344365Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3344486Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3344571Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3344653Z         try:
2025-02-24T16:09:32.3344797Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3344877Z         except KeyError:
2025-02-24T16:09:32.3345021Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3345092Z     
2025-02-24T16:09:32.3345182Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3345276Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3345370Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3345506Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3345591Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3345687Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3345800Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3345875Z             else:
2025-02-24T16:09:32.3345973Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3346079Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3346083Z 
2025-02-24T16:09:32.3346213Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3346432Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3346663Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3346779Z     ???
2025-02-24T16:09:32.3346987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3346994Z 
2025-02-24T16:09:32.3347120Z >   ???
2025-02-24T16:09:32.3347339Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3347458Z E   
2025-02-24T16:09:32.3347891Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3348087Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3348207Z E          ...
2025-02-24T16:09:32.3348364Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3348587Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3348777Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3348901Z E          ...
2025-02-24T16:09:32.3349193Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3349418Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3349599Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3349606Z 
2025-02-24T16:09:32.3349758Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3350133Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T16:09:32.3350139Z 
2025-02-24T16:09:32.3350350Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3350489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3350592Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3350728Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3350857Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3350954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3351032Z err_msg = None
2025-02-24T16:09:32.3351036Z 
2025-02-24T16:09:32.3351150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3351238Z         if err_msg is None:
2025-02-24T16:09:32.3351341Z             if left.shape != right.shape:
2025-02-24T16:09:32.3351425Z                 raise_assert_detail(
2025-02-24T16:09:32.3351577Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3351651Z                 )
2025-02-24T16:09:32.3351723Z     
2025-02-24T16:09:32.3351797Z             diff = 0
2025-02-24T16:09:32.3351910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3352002Z                 # count up differences
2025-02-24T16:09:32.3352174Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3352253Z                     diff += 1
2025-02-24T16:09:32.3352321Z     
2025-02-24T16:09:32.3352416Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3352554Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3352730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3352850Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3352920Z E           
2025-02-24T16:09:32.3353034Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3353302Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3353573Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3353578Z 
2025-02-24T16:09:32.3353898Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3353901Z 
2025-02-24T16:09:32.3354077Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3354168Z 
2025-02-24T16:09:32.3354399Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009620c0>
2025-02-24T16:09:32.3354571Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3354646Z attr = 'j_blues'
2025-02-24T16:09:32.3354650Z 
2025-02-24T16:09:32.3354795Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3354909Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3354995Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3355139Z         try:
2025-02-24T16:09:32.3355279Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3355361Z         except KeyError:
2025-02-24T16:09:32.3355499Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3355571Z     
2025-02-24T16:09:32.3355658Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3355755Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3355850Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3355980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3356070Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3356159Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3356414Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3356493Z             else:
2025-02-24T16:09:32.3356589Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3356702Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3356706Z 
2025-02-24T16:09:32.3356831Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3356944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3357091Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3357163Z     ???
2025-02-24T16:09:32.3357279Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3357287Z 
2025-02-24T16:09:32.3357354Z >   ???
2025-02-24T16:09:32.3357486Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3357554Z E   
2025-02-24T16:09:32.3357687Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3357797Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3357870Z E          ...
2025-02-24T16:09:32.3357959Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3358092Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3358206Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3358277Z E          ...
2025-02-24T16:09:32.3358370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3358505Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3358612Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3358616Z 
2025-02-24T16:09:32.3358713Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3358930Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T16:09:32.3358935Z 
2025-02-24T16:09:32.3359071Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3359207Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3359308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3359450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3359576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3359675Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3359751Z err_msg = None
2025-02-24T16:09:32.3359759Z 
2025-02-24T16:09:32.3359873Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3360080Z         if err_msg is None:
2025-02-24T16:09:32.3360178Z             if left.shape != right.shape:
2025-02-24T16:09:32.3360267Z                 raise_assert_detail(
2025-02-24T16:09:32.3360417Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3360491Z                 )
2025-02-24T16:09:32.3360560Z     
2025-02-24T16:09:32.3360636Z             diff = 0
2025-02-24T16:09:32.3360751Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3360940Z                 # count up differences
2025-02-24T16:09:32.3361124Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3361201Z                     diff += 1
2025-02-24T16:09:32.3361273Z     
2025-02-24T16:09:32.3361361Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3361504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3361682Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3361801Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3361875Z E           
2025-02-24T16:09:32.3361988Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3362258Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3362751Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3362760Z 
2025-02-24T16:09:32.3363295Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3363306Z 
2025-02-24T16:09:32.3363575Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3363580Z 
2025-02-24T16:09:32.3363814Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600962e40>
2025-02-24T16:09:32.3363985Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3364062Z attr = 'lines'
2025-02-24T16:09:32.3364066Z 
2025-02-24T16:09:32.3364210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3364332Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3364419Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3364488Z         try:
2025-02-24T16:09:32.3364632Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3364714Z         except KeyError:
2025-02-24T16:09:32.3364856Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3364928Z     
2025-02-24T16:09:32.3365017Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3365115Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3365205Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3365342Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3365427Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3365523Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3365641Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3365713Z             else:
2025-02-24T16:09:32.3365812Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3365920Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3365924Z 
2025-02-24T16:09:32.3366055Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3366169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3366587Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3366658Z     ???
2025-02-24T16:09:32.3366768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3366773Z 
2025-02-24T16:09:32.3366842Z >   ???
2025-02-24T16:09:32.3366973Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3367043Z E   
2025-02-24T16:09:32.3367174Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3367403Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3367480Z E          ...
2025-02-24T16:09:32.3367567Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3367703Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3367827Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3367899Z E          ...
2025-02-24T16:09:32.3367989Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3368123Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3368233Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3368238Z 
2025-02-24T16:09:32.3368328Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3368603Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T16:09:32.3368607Z 
2025-02-24T16:09:32.3368838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600962f00>
2025-02-24T16:09:32.3369013Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3369107Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3369112Z 
2025-02-24T16:09:32.3369249Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3369368Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3369457Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3369527Z         try:
2025-02-24T16:09:32.3369677Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3369757Z         except KeyError:
2025-02-24T16:09:32.3369903Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3369971Z     
2025-02-24T16:09:32.3370065Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3370164Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3370255Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3370395Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3370484Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3370581Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3370690Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3370697Z 
2025-02-24T16:09:32.3370823Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3370940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3370948Z 
2025-02-24T16:09:32.3371087Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3371177Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3371284Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3371370Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3371514Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3371596Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3371732Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3371828Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3371909Z err_msg = None
2025-02-24T16:09:32.3371912Z 
2025-02-24T16:09:32.3372029Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3372110Z         if err_msg is None:
2025-02-24T16:09:32.3372210Z             if left.shape != right.shape:
2025-02-24T16:09:32.3372414Z                 raise_assert_detail(
2025-02-24T16:09:32.3372562Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3372632Z                 )
2025-02-24T16:09:32.3372703Z     
2025-02-24T16:09:32.3372782Z             diff = 0
2025-02-24T16:09:32.3372894Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3373007Z                 # count up differences
2025-02-24T16:09:32.3373257Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3373341Z                     diff += 1
2025-02-24T16:09:32.3373411Z     
2025-02-24T16:09:32.3373503Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3373644Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3373817Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3373928Z E           AssertionError: Series are different
2025-02-24T16:09:32.3374003Z E           
2025-02-24T16:09:32.3374110Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3374493Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3374829Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3375168Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3375176Z 
2025-02-24T16:09:32.3375496Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3375766Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T16:09:32.3375771Z 
2025-02-24T16:09:32.3376003Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600962fc0>
2025-02-24T16:09:32.3376190Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3376400Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3376405Z 
2025-02-24T16:09:32.3376556Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3376670Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3376759Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3376828Z         try:
2025-02-24T16:09:32.3376973Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3377057Z         except KeyError:
2025-02-24T16:09:32.3377195Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3377267Z     
2025-02-24T16:09:32.3377358Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3377456Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3377545Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3377684Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3377771Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3377861Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3377975Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3378095Z 
2025-02-24T16:09:32.3378224Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3378342Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3378346Z 
2025-02-24T16:09:32.3378489Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3378573Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3378684Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3378860Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3379012Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3379099Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3379206Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3379286Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3379363Z err_msg = None
2025-02-24T16:09:32.3379368Z 
2025-02-24T16:09:32.3379481Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3379560Z         if err_msg is None:
2025-02-24T16:09:32.3379658Z             if left.shape != right.shape:
2025-02-24T16:09:32.3379746Z                 raise_assert_detail(
2025-02-24T16:09:32.3379891Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3379964Z                 )
2025-02-24T16:09:32.3380033Z     
2025-02-24T16:09:32.3380110Z             diff = 0
2025-02-24T16:09:32.3380225Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3380317Z                 # count up differences
2025-02-24T16:09:32.3380491Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3380569Z                     diff += 1
2025-02-24T16:09:32.3380643Z     
2025-02-24T16:09:32.3380731Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3380957Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3381260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3381443Z E           AssertionError: Series are different
2025-02-24T16:09:32.3381568Z E           
2025-02-24T16:09:32.3381736Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3382266Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3382649Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3383032Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3383042Z 
2025-02-24T16:09:32.3383355Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3383568Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T16:09:32.3383572Z 
2025-02-24T16:09:32.3383798Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3383930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3384032Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3384166Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3384367Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3384463Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3384543Z err_msg = None
2025-02-24T16:09:32.3384547Z 
2025-02-24T16:09:32.3384663Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3384744Z         if err_msg is None:
2025-02-24T16:09:32.3384840Z             if left.shape != right.shape:
2025-02-24T16:09:32.3384924Z                 raise_assert_detail(
2025-02-24T16:09:32.3385081Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3385151Z                 )
2025-02-24T16:09:32.3385223Z     
2025-02-24T16:09:32.3385295Z             diff = 0
2025-02-24T16:09:32.3385410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3385504Z                 # count up differences
2025-02-24T16:09:32.3385676Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3385756Z                     diff += 1
2025-02-24T16:09:32.3385828Z     
2025-02-24T16:09:32.3385919Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3386057Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3386228Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3386497Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3386570Z E           
2025-02-24T16:09:32.3386692Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3386953Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3387224Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3387229Z 
2025-02-24T16:09:32.3387535Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3387540Z 
2025-02-24T16:09:32.3387716Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3387722Z 
2025-02-24T16:09:32.3387949Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963200>
2025-02-24T16:09:32.3388158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>, attr = 'nu'
2025-02-24T16:09:32.3388162Z 
2025-02-24T16:09:32.3388305Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3388425Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3388512Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3388585Z         try:
2025-02-24T16:09:32.3388731Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3388812Z         except KeyError:
2025-02-24T16:09:32.3388955Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3389024Z     
2025-02-24T16:09:32.3389115Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3389213Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3389445Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3389580Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3389666Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3389761Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3389871Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3389876Z 
2025-02-24T16:09:32.3390009Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3390228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3390380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3390453Z     ???
2025-02-24T16:09:32.3390566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3390570Z 
2025-02-24T16:09:32.3390642Z >   ???
2025-02-24T16:09:32.3390777Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3390845Z E   
2025-02-24T16:09:32.3390984Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3391096Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3391171Z E          ...
2025-02-24T16:09:32.3391260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3391398Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3391513Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3391584Z E          ...
2025-02-24T16:09:32.3391679Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3391805Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3391915Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3391919Z 
2025-02-24T16:09:32.3392010Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3392252Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T16:09:32.3392257Z 
2025-02-24T16:09:32.3392393Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3392518Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3392620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3392752Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3392882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3392981Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3393056Z err_msg = None
2025-02-24T16:09:32.3393060Z 
2025-02-24T16:09:32.3393177Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3393258Z         if err_msg is None:
2025-02-24T16:09:32.3393358Z             if left.shape != right.shape:
2025-02-24T16:09:32.3393448Z                 raise_assert_detail(
2025-02-24T16:09:32.3393595Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3393670Z                 )
2025-02-24T16:09:32.3393739Z     
2025-02-24T16:09:32.3393817Z             diff = 0
2025-02-24T16:09:32.3393929Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3394021Z                 # count up differences
2025-02-24T16:09:32.3394196Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3394272Z                     diff += 1
2025-02-24T16:09:32.3394349Z     
2025-02-24T16:09:32.3394437Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3394579Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3394758Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3394876Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3394954Z E           
2025-02-24T16:09:32.3395171Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3395434Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3395767Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3395777Z 
2025-02-24T16:09:32.3396087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3396092Z 
2025-02-24T16:09:32.3396371Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3396379Z 
2025-02-24T16:09:32.3396606Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009632c0>
2025-02-24T16:09:32.3396781Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3396870Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3396874Z 
2025-02-24T16:09:32.3397012Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3397130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3397218Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3397294Z         try:
2025-02-24T16:09:32.3397437Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3397517Z         except KeyError:
2025-02-24T16:09:32.3397660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3397727Z     
2025-02-24T16:09:32.3397818Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3397912Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3398010Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3398147Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3398233Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3398327Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3398434Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3398438Z 
2025-02-24T16:09:32.3398568Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3398682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3398833Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3398971Z     ???
2025-02-24T16:09:32.3399167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3399173Z 
2025-02-24T16:09:32.3399294Z >   ???
2025-02-24T16:09:32.3399510Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3399635Z E   
2025-02-24T16:09:32.3399858Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3400046Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3400153Z E          ...
2025-02-24T16:09:32.3400241Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3400377Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3400490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3400566Z E          ...
2025-02-24T16:09:32.3400658Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3400785Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3400895Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3400899Z 
2025-02-24T16:09:32.3400988Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3401199Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T16:09:32.3401330Z 
2025-02-24T16:09:32.3401468Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3401595Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3401699Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3401829Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3402056Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3402154Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3402232Z err_msg = None
2025-02-24T16:09:32.3402236Z 
2025-02-24T16:09:32.3402349Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3402429Z         if err_msg is None:
2025-02-24T16:09:32.3402525Z             if left.shape != right.shape:
2025-02-24T16:09:32.3402610Z                 raise_assert_detail(
2025-02-24T16:09:32.3402760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3402833Z                 )
2025-02-24T16:09:32.3402902Z     
2025-02-24T16:09:32.3402978Z             diff = 0
2025-02-24T16:09:32.3403087Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3403179Z                 # count up differences
2025-02-24T16:09:32.3403349Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3403435Z                     diff += 1
2025-02-24T16:09:32.3403508Z     
2025-02-24T16:09:32.3403595Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3403735Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3403909Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3404025Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3404097Z E           
2025-02-24T16:09:32.3404217Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3404484Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3404751Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3404755Z 
2025-02-24T16:09:32.3405065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3405069Z 
2025-02-24T16:09:32.3405248Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3405253Z 
2025-02-24T16:09:32.3405478Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963380>
2025-02-24T16:09:32.3405692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>, attr = 'f_lu'
2025-02-24T16:09:32.3405695Z 
2025-02-24T16:09:32.3405840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3405955Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3406047Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3406118Z         try:
2025-02-24T16:09:32.3406400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3406488Z         except KeyError:
2025-02-24T16:09:32.3406631Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3406703Z     
2025-02-24T16:09:32.3406792Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3406890Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3407096Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3407232Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3407317Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3407412Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3407524Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3407528Z 
2025-02-24T16:09:32.3407656Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3407885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3408036Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3408111Z     ???
2025-02-24T16:09:32.3408221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3408229Z 
2025-02-24T16:09:32.3408298Z >   ???
2025-02-24T16:09:32.3408430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3408500Z E   
2025-02-24T16:09:32.3408635Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3408745Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3408820Z E          ...
2025-02-24T16:09:32.3408910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3409041Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3409158Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3409229Z E          ...
2025-02-24T16:09:32.3409322Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3409447Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3409556Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3409560Z 
2025-02-24T16:09:32.3409652Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3409880Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T16:09:32.3409887Z 
2025-02-24T16:09:32.3410022Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3410146Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3410253Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3410395Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3410523Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3410623Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3410698Z err_msg = None
2025-02-24T16:09:32.3410702Z 
2025-02-24T16:09:32.3410819Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3410907Z         if err_msg is None:
2025-02-24T16:09:32.3411001Z             if left.shape != right.shape:
2025-02-24T16:09:32.3411092Z                 raise_assert_detail(
2025-02-24T16:09:32.3411244Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3411321Z                 )
2025-02-24T16:09:32.3411392Z     
2025-02-24T16:09:32.3411469Z             diff = 0
2025-02-24T16:09:32.3411582Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3411671Z                 # count up differences
2025-02-24T16:09:32.3411851Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3411929Z                     diff += 1
2025-02-24T16:09:32.3412009Z     
2025-02-24T16:09:32.3412098Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3412243Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3412417Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3412530Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3412608Z E           
2025-02-24T16:09:32.3412808Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3413075Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3413415Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3413420Z 
2025-02-24T16:09:32.3413730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3413734Z 
2025-02-24T16:09:32.3413908Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3413915Z 
2025-02-24T16:09:32.3414148Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963b00>
2025-02-24T16:09:32.3414319Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3414403Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3414407Z 
2025-02-24T16:09:32.3414548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3414671Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3414767Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3414838Z         try:
2025-02-24T16:09:32.3414982Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3415064Z         except KeyError:
2025-02-24T16:09:32.3415207Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3415275Z     
2025-02-24T16:09:32.3415373Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3415478Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3415567Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3415709Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3415795Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3415891Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3416001Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3416079Z             else:
2025-02-24T16:09:32.3416181Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3416453Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3416463Z 
2025-02-24T16:09:32.3416611Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3423809Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3424042Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3424179Z     ???
2025-02-24T16:09:32.3424374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3424388Z 
2025-02-24T16:09:32.3424464Z >   ???
2025-02-24T16:09:32.3424604Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3424676Z E   
2025-02-24T16:09:32.3424819Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3424936Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3425013Z E          ...
2025-02-24T16:09:32.3425103Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3425245Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3425362Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3425442Z E          ...
2025-02-24T16:09:32.3425532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3425656Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3425769Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3425940Z 
2025-02-24T16:09:32.3426037Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3426419Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T16:09:32.3426424Z 
2025-02-24T16:09:32.3426570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3426706Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3426920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3427063Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3427190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3427288Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3427361Z err_msg = None
2025-02-24T16:09:32.3427365Z 
2025-02-24T16:09:32.3427490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3427569Z         if err_msg is None:
2025-02-24T16:09:32.3427671Z             if left.shape != right.shape:
2025-02-24T16:09:32.3427756Z                 raise_assert_detail(
2025-02-24T16:09:32.3427914Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3427989Z                 )
2025-02-24T16:09:32.3428056Z     
2025-02-24T16:09:32.3428132Z             diff = 0
2025-02-24T16:09:32.3428247Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3428344Z                 # count up differences
2025-02-24T16:09:32.3428521Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3428604Z                     diff += 1
2025-02-24T16:09:32.3428674Z     
2025-02-24T16:09:32.3428763Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3428906Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3429082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3429202Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3429272Z E           
2025-02-24T16:09:32.3429394Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3429668Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3429936Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3429950Z 
2025-02-24T16:09:32.3430276Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3430280Z 
2025-02-24T16:09:32.3430463Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3430468Z 
2025-02-24T16:09:32.3430697Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963bc0>
2025-02-24T16:09:32.3430872Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3430958Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3430962Z 
2025-02-24T16:09:32.3431103Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3431225Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3431312Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3431387Z         try:
2025-02-24T16:09:32.3431529Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3431616Z         except KeyError:
2025-02-24T16:09:32.3431883Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3431950Z     
2025-02-24T16:09:32.3432041Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3432135Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3432229Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3432362Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3432450Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3432616Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3432729Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3432803Z             else:
2025-02-24T16:09:32.3432900Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3433010Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3433015Z 
2025-02-24T16:09:32.3433147Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3433266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3433419Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3433487Z     ???
2025-02-24T16:09:32.3433601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3433606Z 
2025-02-24T16:09:32.3433673Z >   ???
2025-02-24T16:09:32.3433806Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3433875Z E   
2025-02-24T16:09:32.3434007Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3434121Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3434191Z E          ...
2025-02-24T16:09:32.3434287Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3434418Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3434534Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3434608Z E          ...
2025-02-24T16:09:32.3434697Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3434823Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3434932Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3434936Z 
2025-02-24T16:09:32.3435033Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3435253Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T16:09:32.3435257Z 
2025-02-24T16:09:32.3435426Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3435668Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3435832Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3436061Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3436400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3436567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3436702Z err_msg = None
2025-02-24T16:09:32.3436708Z 
2025-02-24T16:09:32.3436833Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3436920Z         if err_msg is None:
2025-02-24T16:09:32.3437018Z             if left.shape != right.shape:
2025-02-24T16:09:32.3437107Z                 raise_assert_detail(
2025-02-24T16:09:32.3437263Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3437333Z                 )
2025-02-24T16:09:32.3437407Z     
2025-02-24T16:09:32.3437479Z             diff = 0
2025-02-24T16:09:32.3437592Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3437681Z                 # count up differences
2025-02-24T16:09:32.3437858Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3437941Z                     diff += 1
2025-02-24T16:09:32.3438143Z     
2025-02-24T16:09:32.3438236Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3438373Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3438548Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3438666Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3438736Z E           
2025-02-24T16:09:32.3438854Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3439242Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3439515Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3439524Z 
2025-02-24T16:09:32.3439841Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3439846Z 
2025-02-24T16:09:32.3440018Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3440022Z 
2025-02-24T16:09:32.3440257Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963d40>
2025-02-24T16:09:32.3440430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3440503Z attr = 'j_blues'
2025-02-24T16:09:32.3440507Z 
2025-02-24T16:09:32.3440650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3440765Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3440856Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3440926Z         try:
2025-02-24T16:09:32.3441069Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3441155Z         except KeyError:
2025-02-24T16:09:32.3441293Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3441364Z     
2025-02-24T16:09:32.3441452Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3441554Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3441646Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3441779Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3441870Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3441958Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3442073Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3442144Z             else:
2025-02-24T16:09:32.3442245Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3442351Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3442360Z 
2025-02-24T16:09:32.3442485Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3442605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3442756Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3442828Z     ???
2025-02-24T16:09:32.3442939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3442944Z 
2025-02-24T16:09:32.3443018Z >   ???
2025-02-24T16:09:32.3443151Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3443218Z E   
2025-02-24T16:09:32.3443355Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3443467Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3443545Z E          ...
2025-02-24T16:09:32.3443635Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3443859Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3443974Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3444041Z E          ...
2025-02-24T16:09:32.3444129Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3444253Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3444360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3444364Z 
2025-02-24T16:09:32.3444456Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3444743Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T16:09:32.3444748Z 
2025-02-24T16:09:32.3444884Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3445019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3445123Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3445265Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3445392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3445488Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3445563Z err_msg = None
2025-02-24T16:09:32.3445567Z 
2025-02-24T16:09:32.3445686Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3445767Z         if err_msg is None:
2025-02-24T16:09:32.3445871Z             if left.shape != right.shape:
2025-02-24T16:09:32.3445960Z                 raise_assert_detail(
2025-02-24T16:09:32.3446110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3446183Z                 )
2025-02-24T16:09:32.3446248Z     
2025-02-24T16:09:32.3446452Z             diff = 0
2025-02-24T16:09:32.3446568Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3446665Z                 # count up differences
2025-02-24T16:09:32.3446841Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3446919Z                     diff += 1
2025-02-24T16:09:32.3446991Z     
2025-02-24T16:09:32.3447079Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3447222Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3447398Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3447519Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3447597Z E           
2025-02-24T16:09:32.3447709Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3448007Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3448281Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3448286Z 
2025-02-24T16:09:32.3448599Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3448603Z 
2025-02-24T16:09:32.3448781Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3448785Z 
2025-02-24T16:09:32.3449015Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990b00>
2025-02-24T16:09:32.3449183Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3449378Z attr = 'lines'
2025-02-24T16:09:32.3449382Z 
2025-02-24T16:09:32.3449523Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3449641Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3449723Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3449797Z         try:
2025-02-24T16:09:32.3449947Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3450028Z         except KeyError:
2025-02-24T16:09:32.3450169Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3450340Z     
2025-02-24T16:09:32.3450438Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3450530Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3450623Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3450763Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3450847Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3450942Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3451057Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3451132Z             else:
2025-02-24T16:09:32.3451227Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3451337Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3451342Z 
2025-02-24T16:09:32.3451471Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3451586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3451740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3451809Z     ???
2025-02-24T16:09:32.3451921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3451926Z 
2025-02-24T16:09:32.3452051Z >   ???
2025-02-24T16:09:32.3452270Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3452387Z E   
2025-02-24T16:09:32.3452602Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3452796Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3452922Z E          ...
2025-02-24T16:09:32.3453032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3453167Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3453280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3453353Z E          ...
2025-02-24T16:09:32.3453438Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3453570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3453676Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3453684Z 
2025-02-24T16:09:32.3453774Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3454052Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T16:09:32.3454056Z 
2025-02-24T16:09:32.3454281Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990bc0>
2025-02-24T16:09:32.3454457Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3454546Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3454554Z 
2025-02-24T16:09:32.3454691Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3454808Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3454887Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3454960Z         try:
2025-02-24T16:09:32.3455102Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3455185Z         except KeyError:
2025-02-24T16:09:32.3455326Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3455392Z     
2025-02-24T16:09:32.3455483Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3455575Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3455667Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3455797Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3455997Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3456093Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3456200Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3456204Z 
2025-02-24T16:09:32.3456468Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3456582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3456587Z 
2025-02-24T16:09:32.3456876Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3456969Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3457078Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3457163Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3457301Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3457390Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3457493Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3457575Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3457657Z err_msg = None
2025-02-24T16:09:32.3457661Z 
2025-02-24T16:09:32.3457772Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3457859Z         if err_msg is None:
2025-02-24T16:09:32.3457954Z             if left.shape != right.shape:
2025-02-24T16:09:32.3458045Z                 raise_assert_detail(
2025-02-24T16:09:32.3458195Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3458264Z                 )
2025-02-24T16:09:32.3458332Z     
2025-02-24T16:09:32.3458403Z             diff = 0
2025-02-24T16:09:32.3458513Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3458603Z                 # count up differences
2025-02-24T16:09:32.3458773Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3458856Z                     diff += 1
2025-02-24T16:09:32.3458923Z     
2025-02-24T16:09:32.3459014Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3459154Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3459326Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3459433Z E           AssertionError: Series are different
2025-02-24T16:09:32.3459502Z E           
2025-02-24T16:09:32.3459608Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3459991Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3460329Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3460670Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3460675Z 
2025-02-24T16:09:32.3460999Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3461409Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T16:09:32.3461413Z 
2025-02-24T16:09:32.3461651Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990c80>
2025-02-24T16:09:32.3461829Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3461920Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3461924Z 
2025-02-24T16:09:32.3462139Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3462259Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3462346Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3462417Z         try:
2025-02-24T16:09:32.3462562Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3462646Z         except KeyError:
2025-02-24T16:09:32.3462784Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3462857Z     
2025-02-24T16:09:32.3462942Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3463038Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3463126Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3463265Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3463352Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3463441Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3463554Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3463562Z 
2025-02-24T16:09:32.3463689Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3463810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3463814Z 
2025-02-24T16:09:32.3463957Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3464042Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3464151Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3464234Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3464376Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3464458Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3464560Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3464640Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3464716Z err_msg = None
2025-02-24T16:09:32.3464720Z 
2025-02-24T16:09:32.3464839Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3464921Z         if err_msg is None:
2025-02-24T16:09:32.3465021Z             if left.shape != right.shape:
2025-02-24T16:09:32.3465108Z                 raise_assert_detail(
2025-02-24T16:09:32.3465255Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3465329Z                 )
2025-02-24T16:09:32.3465400Z     
2025-02-24T16:09:32.3465478Z             diff = 0
2025-02-24T16:09:32.3465591Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3465686Z                 # count up differences
2025-02-24T16:09:32.3465863Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3465939Z                     diff += 1
2025-02-24T16:09:32.3466009Z     
2025-02-24T16:09:32.3466096Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3466239Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3466514Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3466624Z E           AssertionError: Series are different
2025-02-24T16:09:32.3466694Z E           
2025-02-24T16:09:32.3466796Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3467172Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3467767Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3468150Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3468163Z 
2025-02-24T16:09:32.3468479Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3468694Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T16:09:32.3468698Z 
2025-02-24T16:09:32.3468832Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3468962Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3469068Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3469201Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3469326Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3469423Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3469503Z err_msg = None
2025-02-24T16:09:32.3469507Z 
2025-02-24T16:09:32.3469616Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3469700Z         if err_msg is None:
2025-02-24T16:09:32.3469797Z             if left.shape != right.shape:
2025-02-24T16:09:32.3469882Z                 raise_assert_detail(
2025-02-24T16:09:32.3470035Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3470105Z                 )
2025-02-24T16:09:32.3470176Z     
2025-02-24T16:09:32.3470247Z             diff = 0
2025-02-24T16:09:32.3470366Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3470458Z                 # count up differences
2025-02-24T16:09:32.3470689Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3470837Z                     diff += 1
2025-02-24T16:09:32.3470951Z     
2025-02-24T16:09:32.3471100Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3471328Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3471622Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3471766Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3471836Z E           
2025-02-24T16:09:32.3471957Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3472222Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3472494Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3472591Z 
2025-02-24T16:09:32.3472903Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3472907Z 
2025-02-24T16:09:32.3473084Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3473160Z 
2025-02-24T16:09:32.3473390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990ec0>
2025-02-24T16:09:32.3473603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>, attr = 'nu'
2025-02-24T16:09:32.3473607Z 
2025-02-24T16:09:32.3473748Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3473869Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3473959Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3474028Z         try:
2025-02-24T16:09:32.3474170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3474250Z         except KeyError:
2025-02-24T16:09:32.3474396Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3474464Z     
2025-02-24T16:09:32.3474557Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3474656Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3474748Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3474882Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3474966Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3475060Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3475169Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3475174Z 
2025-02-24T16:09:32.3475303Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3475424Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3475573Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3475651Z     ???
2025-02-24T16:09:32.3475759Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3475763Z 
2025-02-24T16:09:32.3475834Z >   ???
2025-02-24T16:09:32.3475967Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3476035Z E   
2025-02-24T16:09:32.3476172Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3476397Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3476473Z E          ...
2025-02-24T16:09:32.3476560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3476693Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3476809Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3476883Z E          ...
2025-02-24T16:09:32.3476970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3477094Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3477203Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3477208Z 
2025-02-24T16:09:32.3477296Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3477534Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T16:09:32.3477538Z 
2025-02-24T16:09:32.3477675Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3477803Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3477903Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3478036Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3478162Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3478381Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3478455Z err_msg = None
2025-02-24T16:09:32.3478459Z 
2025-02-24T16:09:32.3478571Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3478651Z         if err_msg is None:
2025-02-24T16:09:32.3478750Z             if left.shape != right.shape:
2025-02-24T16:09:32.3478836Z                 raise_assert_detail(
2025-02-24T16:09:32.3479080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3479156Z                 )
2025-02-24T16:09:32.3479223Z     
2025-02-24T16:09:32.3479297Z             diff = 0
2025-02-24T16:09:32.3479408Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3479503Z                 # count up differences
2025-02-24T16:09:32.3479676Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3479755Z                     diff += 1
2025-02-24T16:09:32.3479828Z     
2025-02-24T16:09:32.3479915Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3480053Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3480224Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3480341Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3480413Z E           
2025-02-24T16:09:32.3480527Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3480793Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3481055Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3481066Z 
2025-02-24T16:09:32.3481373Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3481377Z 
2025-02-24T16:09:32.3481555Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3481562Z 
2025-02-24T16:09:32.3481785Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990f80>
2025-02-24T16:09:32.3481959Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3482041Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3482044Z 
2025-02-24T16:09:32.3482182Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3482300Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3482386Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3482460Z         try:
2025-02-24T16:09:32.3482604Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3482682Z         except KeyError:
2025-02-24T16:09:32.3482824Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3482894Z     
2025-02-24T16:09:32.3482983Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3483076Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3483172Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3483305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3483390Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3483481Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3483592Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3483596Z 
2025-02-24T16:09:32.3483728Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3483944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3484093Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3484165Z     ???
2025-02-24T16:09:32.3484272Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3484277Z 
2025-02-24T16:09:32.3484346Z >   ???
2025-02-24T16:09:32.3484471Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3484541Z E   
2025-02-24T16:09:32.3484749Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3484865Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3484936Z E          ...
2025-02-24T16:09:32.3485021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3485152Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3485263Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3485340Z E          ...
2025-02-24T16:09:32.3485427Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3485551Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3485658Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3485661Z 
2025-02-24T16:09:32.3485750Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3485959Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T16:09:32.3485963Z 
2025-02-24T16:09:32.3486098Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3486226Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3486446Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3486580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3486707Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3486805Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3486882Z err_msg = None
2025-02-24T16:09:32.3486886Z 
2025-02-24T16:09:32.3486998Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3487077Z         if err_msg is None:
2025-02-24T16:09:32.3487172Z             if left.shape != right.shape:
2025-02-24T16:09:32.3487255Z                 raise_assert_detail(
2025-02-24T16:09:32.3487405Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3487478Z                 )
2025-02-24T16:09:32.3487544Z     
2025-02-24T16:09:32.3487620Z             diff = 0
2025-02-24T16:09:32.3487730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3487824Z                 # count up differences
2025-02-24T16:09:32.3487995Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3488079Z                     diff += 1
2025-02-24T16:09:32.3488150Z     
2025-02-24T16:09:32.3488236Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3488377Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3488547Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3488664Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3488734Z E           
2025-02-24T16:09:32.3488851Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3489127Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3489621Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3489779Z 
2025-02-24T16:09:32.3490274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3490279Z 
2025-02-24T16:09:32.3490564Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3490568Z 
2025-02-24T16:09:32.3490793Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600991040>
2025-02-24T16:09:32.3491006Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>, attr = 'f_lu'
2025-02-24T16:09:32.3491010Z 
2025-02-24T16:09:32.3491151Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3491268Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3491358Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3491432Z         try:
2025-02-24T16:09:32.3491576Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3491655Z         except KeyError:
2025-02-24T16:09:32.3491797Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3491867Z     
2025-02-24T16:09:32.3491953Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3492049Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3492140Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3492280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3492363Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3492456Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3492569Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3492574Z 
2025-02-24T16:09:32.3492699Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3492818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3492965Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3493038Z     ???
2025-02-24T16:09:32.3493147Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3493151Z 
2025-02-24T16:09:32.3493217Z >   ???
2025-02-24T16:09:32.3493347Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3493415Z E   
2025-02-24T16:09:32.3493548Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3493655Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3493732Z E          ...
2025-02-24T16:09:32.3493820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3493946Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3494064Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3494142Z E          ...
2025-02-24T16:09:32.3494225Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3494353Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3494459Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3494463Z 
2025-02-24T16:09:32.3494557Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3494790Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T16:09:32.3494794Z 
2025-02-24T16:09:32.3494926Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3495057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3495152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3495288Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3495413Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3495594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3495674Z err_msg = None
2025-02-24T16:09:32.3495678Z 
2025-02-24T16:09:32.3495788Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3495875Z         if err_msg is None:
2025-02-24T16:09:32.3495974Z             if left.shape != right.shape:
2025-02-24T16:09:32.3496057Z                 raise_assert_detail(
2025-02-24T16:09:32.3496410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3496489Z                 )
2025-02-24T16:09:32.3496559Z     
2025-02-24T16:09:32.3496632Z             diff = 0
2025-02-24T16:09:32.3496749Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3496842Z                 # count up differences
2025-02-24T16:09:32.3497012Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3497098Z                     diff += 1
2025-02-24T16:09:32.3497165Z     
2025-02-24T16:09:32.3497255Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3497391Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3497564Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3497679Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3497750Z E           
2025-02-24T16:09:32.3497874Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3498137Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3498405Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3498413Z 
2025-02-24T16:09:32.3498728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3498732Z 
2025-02-24T16:09:32.3498904Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3498912Z 
2025-02-24T16:09:32.3499133Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009917c0>
2025-02-24T16:09:32.3499308Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3499386Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3499390Z 
2025-02-24T16:09:32.3499531Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3499650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3499737Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3499810Z         try:
2025-02-24T16:09:32.3499948Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3500031Z         except KeyError:
2025-02-24T16:09:32.3500168Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3500237Z     
2025-02-24T16:09:32.3500324Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3500420Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3500516Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3500645Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3500729Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3500829Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3500945Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3501017Z             else:
2025-02-24T16:09:32.3501239Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3501354Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3501359Z 
2025-02-24T16:09:32.3501491Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3501607Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3501761Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3501836Z     ???
2025-02-24T16:09:32.3502061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3502066Z 
2025-02-24T16:09:32.3502140Z >   ???
2025-02-24T16:09:32.3502269Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3502341Z E   
2025-02-24T16:09:32.3502476Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3502587Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3502661Z E          ...
2025-02-24T16:09:32.3502753Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3502888Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3502998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3503074Z E          ...
2025-02-24T16:09:32.3503165Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3503292Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3503403Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3503408Z 
2025-02-24T16:09:32.3503501Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3503741Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T16:09:32.3503745Z 
2025-02-24T16:09:32.3503878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3504009Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3504116Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3504251Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3504380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3504477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3504552Z err_msg = None
2025-02-24T16:09:32.3504557Z 
2025-02-24T16:09:32.3504671Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3504754Z         if err_msg is None:
2025-02-24T16:09:32.3504856Z             if left.shape != right.shape:
2025-02-24T16:09:32.3504941Z                 raise_assert_detail(
2025-02-24T16:09:32.3505095Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3505169Z                 )
2025-02-24T16:09:32.3505237Z     
2025-02-24T16:09:32.3505311Z             diff = 0
2025-02-24T16:09:32.3505426Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3505519Z                 # count up differences
2025-02-24T16:09:32.3505690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3505772Z                     diff += 1
2025-02-24T16:09:32.3505843Z     
2025-02-24T16:09:32.3505931Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3506073Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3506246Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3506466Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3506539Z E           
2025-02-24T16:09:32.3506659Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3507042Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3507686Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3507694Z 
2025-02-24T16:09:32.3508184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3508189Z 
2025-02-24T16:09:32.3508367Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3508371Z 
2025-02-24T16:09:32.3508597Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600991880>
2025-02-24T16:09:32.3508772Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3508856Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3508860Z 
2025-02-24T16:09:32.3509002Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3509123Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3509208Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3509280Z         try:
2025-02-24T16:09:32.3509423Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3509506Z         except KeyError:
2025-02-24T16:09:32.3509652Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3509720Z     
2025-02-24T16:09:32.3509811Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3509905Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3510001Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3510135Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3510226Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3510405Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3510589Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3510703Z             else:
2025-02-24T16:09:32.3510873Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3511061Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3511067Z 
2025-02-24T16:09:32.3511277Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3511479Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3511726Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3511797Z     ???
2025-02-24T16:09:32.3511910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3511914Z 
2025-02-24T16:09:32.3511986Z >   ???
2025-02-24T16:09:32.3512118Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3512191Z E   
2025-02-24T16:09:32.3512323Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3512435Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3512505Z E          ...
2025-02-24T16:09:32.3512595Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3512726Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3512843Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3512915Z E          ...
2025-02-24T16:09:32.3513002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3513134Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3513237Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3513241Z 
2025-02-24T16:09:32.3513333Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3513547Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T16:09:32.3513555Z 
2025-02-24T16:09:32.3513785Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3513917Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3514017Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3514156Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3514278Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3514461Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3514540Z err_msg = None
2025-02-24T16:09:32.3514544Z 
2025-02-24T16:09:32.3514656Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3514744Z         if err_msg is None:
2025-02-24T16:09:32.3514839Z             if left.shape != right.shape:
2025-02-24T16:09:32.3514926Z                 raise_assert_detail(
2025-02-24T16:09:32.3515078Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3515147Z                 )
2025-02-24T16:09:32.3515217Z     
2025-02-24T16:09:32.3515287Z             diff = 0
2025-02-24T16:09:32.3515405Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3515493Z                 # count up differences
2025-02-24T16:09:32.3515667Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3515750Z                     diff += 1
2025-02-24T16:09:32.3515820Z     
2025-02-24T16:09:32.3515913Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3516051Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3516225Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3516485Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3516561Z E           
2025-02-24T16:09:32.3516675Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3516939Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3517208Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3517213Z 
2025-02-24T16:09:32.3517525Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3517530Z 
2025-02-24T16:09:32.3517703Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3517710Z 
2025-02-24T16:09:32.3517939Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600991a00>
2025-02-24T16:09:32.3518111Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3518184Z attr = 'j_blues'
2025-02-24T16:09:32.3518188Z 
2025-02-24T16:09:32.3518331Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3518448Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3518538Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3518608Z         try:
2025-02-24T16:09:32.3518751Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3518836Z         except KeyError:
2025-02-24T16:09:32.3518974Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3519044Z     
2025-02-24T16:09:32.3519131Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3519232Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3519447Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3519582Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3519672Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3519760Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3519874Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3519944Z             else:
2025-02-24T16:09:32.3520043Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3520248Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3520253Z 
2025-02-24T16:09:32.3520385Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3520502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3520649Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3520718Z     ???
2025-02-24T16:09:32.3520827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3520834Z 
2025-02-24T16:09:32.3520907Z >   ???
2025-02-24T16:09:32.3521037Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3521105Z E   
2025-02-24T16:09:32.3521233Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3521340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3521414Z E          ...
2025-02-24T16:09:32.3521500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3521637Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3521753Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3521822Z E          ...
2025-02-24T16:09:32.3521909Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3522034Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3522143Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3522150Z 
2025-02-24T16:09:32.3522237Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3522512Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T16:09:32.3522517Z 
2025-02-24T16:09:32.3522648Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3522774Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3522875Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3523011Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3523138Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3523236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3523309Z err_msg = None
2025-02-24T16:09:32.3523313Z 
2025-02-24T16:09:32.3523425Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3523507Z         if err_msg is None:
2025-02-24T16:09:32.3523606Z             if left.shape != right.shape:
2025-02-24T16:09:32.3523692Z                 raise_assert_detail(
2025-02-24T16:09:32.3523838Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3523915Z                 )
2025-02-24T16:09:32.3523982Z     
2025-02-24T16:09:32.3524057Z             diff = 0
2025-02-24T16:09:32.3524166Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3524264Z                 # count up differences
2025-02-24T16:09:32.3524436Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3524511Z                     diff += 1
2025-02-24T16:09:32.3524582Z     
2025-02-24T16:09:32.3524670Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3524816Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3525082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3525198Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3525274Z E           
2025-02-24T16:09:32.3525385Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3525921Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3526536Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3526550Z 
2025-02-24T16:09:32.3526936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3526941Z 
2025-02-24T16:09:32.3527116Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3527121Z 
2025-02-24T16:09:32.3527350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992780>
2025-02-24T16:09:32.3527520Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3527597Z attr = 'lines'
2025-02-24T16:09:32.3527605Z 
2025-02-24T16:09:32.3527744Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3527862Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3527945Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3528018Z         try:
2025-02-24T16:09:32.3528173Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3528256Z         except KeyError:
2025-02-24T16:09:32.3528400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3528468Z     
2025-02-24T16:09:32.3528557Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3528650Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3528743Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3528880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3528965Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3529055Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3529167Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3529240Z             else:
2025-02-24T16:09:32.3529332Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3529441Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3529444Z 
2025-02-24T16:09:32.3529570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3529682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3529836Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3529906Z     ???
2025-02-24T16:09:32.3530020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3530024Z 
2025-02-24T16:09:32.3530094Z >   ???
2025-02-24T16:09:32.3530223Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3530292Z E   
2025-02-24T16:09:32.3530420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3530538Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3530608Z E          ...
2025-02-24T16:09:32.3530698Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3530831Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3530942Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3531012Z E          ...
2025-02-24T16:09:32.3531226Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3531352Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3531455Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3531462Z 
2025-02-24T16:09:32.3531550Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3531872Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T16:09:32.3531876Z 
2025-02-24T16:09:32.3532200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992840>
2025-02-24T16:09:32.3532380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3532469Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3532477Z 
2025-02-24T16:09:32.3532613Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3532727Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3532809Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3532885Z         try:
2025-02-24T16:09:32.3533026Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3533108Z         except KeyError:
2025-02-24T16:09:32.3533249Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3533315Z     
2025-02-24T16:09:32.3533404Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3533496Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3533589Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3533723Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3533813Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3533906Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3534012Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3534016Z 
2025-02-24T16:09:32.3534142Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3534251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3534258Z 
2025-02-24T16:09:32.3534398Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3534486Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3534595Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3534681Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3534822Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3534921Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3535026Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3535107Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3535183Z err_msg = None
2025-02-24T16:09:32.3535188Z 
2025-02-24T16:09:32.3535296Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3535378Z         if err_msg is None:
2025-02-24T16:09:32.3535475Z             if left.shape != right.shape:
2025-02-24T16:09:32.3535560Z                 raise_assert_detail(
2025-02-24T16:09:32.3535705Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3535779Z                 )
2025-02-24T16:09:32.3535850Z     
2025-02-24T16:09:32.3535921Z             diff = 0
2025-02-24T16:09:32.3536035Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3536122Z                 # count up differences
2025-02-24T16:09:32.3536428Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3536509Z                     diff += 1
2025-02-24T16:09:32.3536580Z     
2025-02-24T16:09:32.3536671Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3536812Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3536986Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3537210Z E           AssertionError: Series are different
2025-02-24T16:09:32.3537283Z E           
2025-02-24T16:09:32.3537387Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3537864Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3538213Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3538553Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3538558Z 
2025-02-24T16:09:32.3538873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3539188Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T16:09:32.3539192Z 
2025-02-24T16:09:32.3539422Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992900>
2025-02-24T16:09:32.3539594Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3539690Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3539695Z 
2025-02-24T16:09:32.3539832Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3539951Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3540039Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3540110Z         try:
2025-02-24T16:09:32.3540254Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3540336Z         except KeyError:
2025-02-24T16:09:32.3540481Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3540548Z     
2025-02-24T16:09:32.3540638Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3540735Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3540826Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3540962Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3541045Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3541136Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3541249Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3541253Z 
2025-02-24T16:09:32.3541379Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3541494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3541499Z 
2025-02-24T16:09:32.3541634Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3541720Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3541829Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3541910Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3542050Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3542131Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3542247Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3542412Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3542489Z err_msg = None
2025-02-24T16:09:32.3542493Z 
2025-02-24T16:09:32.3542606Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3542687Z         if err_msg is None:
2025-02-24T16:09:32.3542783Z             if left.shape != right.shape:
2025-02-24T16:09:32.3542866Z                 raise_assert_detail(
2025-02-24T16:09:32.3543018Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3543087Z                 )
2025-02-24T16:09:32.3543232Z     
2025-02-24T16:09:32.3543312Z             diff = 0
2025-02-24T16:09:32.3543426Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3543519Z                 # count up differences
2025-02-24T16:09:32.3543690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3543771Z                     diff += 1
2025-02-24T16:09:32.3543838Z     
2025-02-24T16:09:32.3543933Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3544073Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3544318Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3544501Z E           AssertionError: Series are different
2025-02-24T16:09:32.3544619Z E           
2025-02-24T16:09:32.3544792Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3545404Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3545784Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3546173Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3546178Z 
2025-02-24T16:09:32.3546593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3546853Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T16:09:32.3546861Z 
2025-02-24T16:09:32.3546994Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3547124Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3547220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3547354Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3547479Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3547577Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3547656Z err_msg = None
2025-02-24T16:09:32.3547660Z 
2025-02-24T16:09:32.3547770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3547855Z         if err_msg is None:
2025-02-24T16:09:32.3547974Z             if left.shape != right.shape:
2025-02-24T16:09:32.3548213Z                 raise_assert_detail(
2025-02-24T16:09:32.3548362Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3548434Z                 )
2025-02-24T16:09:32.3548510Z     
2025-02-24T16:09:32.3548580Z             diff = 0
2025-02-24T16:09:32.3548695Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3548783Z                 # count up differences
2025-02-24T16:09:32.3549060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3549140Z                     diff += 1
2025-02-24T16:09:32.3549210Z     
2025-02-24T16:09:32.3549299Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3549433Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3549608Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3549722Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3549800Z E           
2025-02-24T16:09:32.3549912Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3550181Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3550449Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3550454Z 
2025-02-24T16:09:32.3550770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3550777Z 
2025-02-24T16:09:32.3550949Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3550954Z 
2025-02-24T16:09:32.3551179Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992b40>
2025-02-24T16:09:32.3551384Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>, attr = 'nu'
2025-02-24T16:09:32.3551388Z 
2025-02-24T16:09:32.3551530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3551655Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3551737Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3551811Z         try:
2025-02-24T16:09:32.3551952Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3552036Z         except KeyError:
2025-02-24T16:09:32.3552176Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3552247Z     
2025-02-24T16:09:32.3552342Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3552434Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3552528Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3552661Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3552750Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3552838Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3552954Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3552958Z 
2025-02-24T16:09:32.3553091Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3553205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3553361Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3553430Z     ???
2025-02-24T16:09:32.3553544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3553548Z 
2025-02-24T16:09:32.3553619Z >   ???
2025-02-24T16:09:32.3553837Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3553910Z E   
2025-02-24T16:09:32.3554037Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3554151Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3554221Z E          ...
2025-02-24T16:09:32.3554312Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3554448Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3554637Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3554714Z E          ...
2025-02-24T16:09:32.3554797Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3554926Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3555034Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3555042Z 
2025-02-24T16:09:32.3555132Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3555422Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T16:09:32.3555430Z 
2025-02-24T16:09:32.3555560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3555687Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3555783Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3555918Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3556046Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3556140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3556216Z err_msg = None
2025-02-24T16:09:32.3556221Z 
2025-02-24T16:09:32.3556431Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3556518Z         if err_msg is None:
2025-02-24T16:09:32.3556620Z             if left.shape != right.shape:
2025-02-24T16:09:32.3556705Z                 raise_assert_detail(
2025-02-24T16:09:32.3556854Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3556923Z                 )
2025-02-24T16:09:32.3556994Z     
2025-02-24T16:09:32.3557065Z             diff = 0
2025-02-24T16:09:32.3557181Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3557270Z                 # count up differences
2025-02-24T16:09:32.3557442Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3557523Z                     diff += 1
2025-02-24T16:09:32.3557591Z     
2025-02-24T16:09:32.3557683Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3557818Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3557997Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3558118Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3558188Z E           
2025-02-24T16:09:32.3558308Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3558569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3558839Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3558844Z 
2025-02-24T16:09:32.3559153Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3559273Z 
2025-02-24T16:09:32.3559447Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3559455Z 
2025-02-24T16:09:32.3559682Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992c00>
2025-02-24T16:09:32.3559859Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3559938Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3559942Z 
2025-02-24T16:09:32.3560186Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3560306Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3560392Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3560465Z         try:
2025-02-24T16:09:32.3560605Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3560689Z         except KeyError:
2025-02-24T16:09:32.3560827Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3560902Z     
2025-02-24T16:09:32.3560990Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3561087Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3561182Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3561314Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3561401Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3561490Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3561603Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3561611Z 
2025-02-24T16:09:32.3561741Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3561853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3562003Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3562073Z     ???
2025-02-24T16:09:32.3562184Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3562192Z 
2025-02-24T16:09:32.3562269Z >   ???
2025-02-24T16:09:32.3562401Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3562472Z E   
2025-02-24T16:09:32.3562650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3562847Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3562967Z E          ...
2025-02-24T16:09:32.3563114Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3563330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3563530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3563661Z E          ...
2025-02-24T16:09:32.3563747Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3563874Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3563979Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3563983Z 
2025-02-24T16:09:32.3564076Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3564352Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T16:09:32.3564357Z 
2025-02-24T16:09:32.3564485Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3564614Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3564710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3564854Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3564981Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3565075Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3565154Z err_msg = None
2025-02-24T16:09:32.3565159Z 
2025-02-24T16:09:32.3565270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3565449Z         if err_msg is None:
2025-02-24T16:09:32.3565550Z             if left.shape != right.shape:
2025-02-24T16:09:32.3565638Z                 raise_assert_detail(
2025-02-24T16:09:32.3565790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3565860Z                 )
2025-02-24T16:09:32.3565934Z     
2025-02-24T16:09:32.3566005Z             diff = 0
2025-02-24T16:09:32.3566123Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3566212Z                 # count up differences
2025-02-24T16:09:32.3566642Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3566728Z                     diff += 1
2025-02-24T16:09:32.3566795Z     
2025-02-24T16:09:32.3566887Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3567028Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3567208Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3567333Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3567404Z E           
2025-02-24T16:09:32.3567524Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3567790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3568061Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3568066Z 
2025-02-24T16:09:32.3568382Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3568389Z 
2025-02-24T16:09:32.3568564Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3568568Z 
2025-02-24T16:09:32.3568805Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992cc0>
2025-02-24T16:09:32.3569023Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>, attr = 'f_lu'
2025-02-24T16:09:32.3569027Z 
2025-02-24T16:09:32.3569171Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3569295Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3569379Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3569456Z         try:
2025-02-24T16:09:32.3569599Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3569685Z         except KeyError:
2025-02-24T16:09:32.3569831Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3569904Z     
2025-02-24T16:09:32.3569999Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3570100Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3570194Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3570329Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3570417Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3570510Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3570624Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3570630Z 
2025-02-24T16:09:32.3570761Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3570874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3571024Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3571098Z     ???
2025-02-24T16:09:32.3571208Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3571367Z 
2025-02-24T16:09:32.3571443Z >   ???
2025-02-24T16:09:32.3571573Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3571643Z E   
2025-02-24T16:09:32.3571771Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3571887Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3571960Z E          ...
2025-02-24T16:09:32.3572046Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3572259Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3572374Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3572448Z E          ...
2025-02-24T16:09:32.3572537Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3572662Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3572773Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3572777Z 
2025-02-24T16:09:32.3572868Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3573198Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T16:09:32.3573203Z 
2025-02-24T16:09:32.3573429Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009932c0>
2025-02-24T16:09:32.3573601Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3573697Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.3573701Z 
2025-02-24T16:09:32.3573842Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3573959Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3574041Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3574117Z         try:
2025-02-24T16:09:32.3574261Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3574340Z         except KeyError:
2025-02-24T16:09:32.3574485Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3574554Z     
2025-02-24T16:09:32.3574645Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3574738Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3574831Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3574966Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3575052Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3575143Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3575251Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3575331Z             else:
2025-02-24T16:09:32.3575427Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3575541Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3575545Z 
2025-02-24T16:09:32.3575675Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3575786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3575939Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3576007Z     ???
2025-02-24T16:09:32.3576121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3576125Z 
2025-02-24T16:09:32.3576197Z >   ???
2025-02-24T16:09:32.3576505Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.3576579Z E   
2025-02-24T16:09:32.3576749Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:09:32.3577130Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3582449Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.3587300Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.3587497Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:09:32.3587506Z 
2025-02-24T16:09:32.3587598Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3587911Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T16:09:32.3587915Z 
2025-02-24T16:09:32.3588044Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3588180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3588396Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3588530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3588657Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3588752Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3588833Z err_msg = None
2025-02-24T16:09:32.3588938Z 
2025-02-24T16:09:32.3589057Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3589138Z         if err_msg is None:
2025-02-24T16:09:32.3589237Z             if left.shape != right.shape:
2025-02-24T16:09:32.3589322Z                 raise_assert_detail(
2025-02-24T16:09:32.3589475Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3589544Z                 )
2025-02-24T16:09:32.3589619Z     
2025-02-24T16:09:32.3589691Z             diff = 0
2025-02-24T16:09:32.3589809Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3589900Z                 # count up differences
2025-02-24T16:09:32.3590072Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3590156Z                     diff += 1
2025-02-24T16:09:32.3590224Z     
2025-02-24T16:09:32.3590316Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3590464Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3590635Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3590754Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3590826Z E           
2025-02-24T16:09:32.3590945Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3591210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3591483Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3591487Z 
2025-02-24T16:09:32.3591803Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3591807Z 
2025-02-24T16:09:32.3591984Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3591988Z 
2025-02-24T16:09:32.3592215Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993380>
2025-02-24T16:09:32.3592395Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3592482Z attr = 'previous_beta_sobolev'
2025-02-24T16:09:32.3592486Z 
2025-02-24T16:09:32.3592631Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3592751Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3592834Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3592908Z         try:
2025-02-24T16:09:32.3593053Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3593140Z         except KeyError:
2025-02-24T16:09:32.3593277Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3593351Z     
2025-02-24T16:09:32.3593438Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3593540Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3593631Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3593764Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3593941Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3594033Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3594151Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3594232Z             else:
2025-02-24T16:09:32.3594330Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3594441Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3594445Z 
2025-02-24T16:09:32.3594662Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3594784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3594933Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3595011Z     ???
2025-02-24T16:09:32.3595125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3595130Z 
2025-02-24T16:09:32.3595200Z >   ???
2025-02-24T16:09:32.3595338Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3595406Z E   
2025-02-24T16:09:32.3595543Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3595653Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3595729Z E          ...
2025-02-24T16:09:32.3595823Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3595954Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3596076Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3596149Z E          ...
2025-02-24T16:09:32.3596239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3596470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3596580Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3596584Z 
2025-02-24T16:09:32.3596694Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3596981Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T16:09:32.3596988Z 
2025-02-24T16:09:32.3597126Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3597259Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3597360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3597500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3597628Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3597726Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3597801Z err_msg = None
2025-02-24T16:09:32.3597809Z 
2025-02-24T16:09:32.3597924Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3598012Z         if err_msg is None:
2025-02-24T16:09:32.3598113Z             if left.shape != right.shape:
2025-02-24T16:09:32.3598204Z                 raise_assert_detail(
2025-02-24T16:09:32.3598351Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3598425Z                 )
2025-02-24T16:09:32.3598512Z     
2025-02-24T16:09:32.3598649Z             diff = 0
2025-02-24T16:09:32.3598857Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3599008Z                 # count up differences
2025-02-24T16:09:32.3599310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3599438Z                     diff += 1
2025-02-24T16:09:32.3599561Z     
2025-02-24T16:09:32.3599716Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3599908Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3600088Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3607527Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3607625Z E           
2025-02-24T16:09:32.3607763Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3608044Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3608472Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3608479Z 
2025-02-24T16:09:32.3608825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3608834Z 
2025-02-24T16:09:32.3609019Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3609023Z 
2025-02-24T16:09:32.3609256Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993440>
2025-02-24T16:09:32.3609431Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3609514Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3609518Z 
2025-02-24T16:09:32.3609675Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3609800Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3609887Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3609963Z         try:
2025-02-24T16:09:32.3610111Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3610198Z         except KeyError:
2025-02-24T16:09:32.3610342Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3610419Z     
2025-02-24T16:09:32.3610512Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3610609Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3610705Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3610843Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3610932Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3611026Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3611143Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3611220Z             else:
2025-02-24T16:09:32.3611316Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3611429Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3611433Z 
2025-02-24T16:09:32.3611563Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3611686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3611843Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3611917Z     ???
2025-02-24T16:09:32.3612031Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3612036Z 
2025-02-24T16:09:32.3612105Z >   ???
2025-02-24T16:09:32.3612241Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3612309Z E   
2025-02-24T16:09:32.3612447Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3612562Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3612636Z E          ...
2025-02-24T16:09:32.3612726Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3612856Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3612973Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3613048Z E          ...
2025-02-24T16:09:32.3613133Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3613261Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3613488Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3613492Z 
2025-02-24T16:09:32.3613589Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3613878Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T16:09:32.3613888Z 
2025-02-24T16:09:32.3614025Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3614246Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3614349Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3614492Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3614613Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3614711Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3614794Z err_msg = None
2025-02-24T16:09:32.3614798Z 
2025-02-24T16:09:32.3614911Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3615003Z         if err_msg is None:
2025-02-24T16:09:32.3615099Z             if left.shape != right.shape:
2025-02-24T16:09:32.3615190Z                 raise_assert_detail(
2025-02-24T16:09:32.3615345Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3615414Z                 )
2025-02-24T16:09:32.3615485Z     
2025-02-24T16:09:32.3615559Z             diff = 0
2025-02-24T16:09:32.3615674Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3615761Z                 # count up differences
2025-02-24T16:09:32.3615941Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3616035Z                     diff += 1
2025-02-24T16:09:32.3616116Z     
2025-02-24T16:09:32.3616214Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3616472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3616648Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3616761Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3616834Z E           
2025-02-24T16:09:32.3616951Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3617337Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3617824Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3617836Z 
2025-02-24T16:09:32.3618375Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3618382Z 
2025-02-24T16:09:32.3618565Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3618570Z 
2025-02-24T16:09:32.3618804Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993500>
2025-02-24T16:09:32.3618975Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3619060Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3619064Z 
2025-02-24T16:09:32.3619209Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3619325Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3619414Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3619484Z         try:
2025-02-24T16:09:32.3619762Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3619843Z         except KeyError:
2025-02-24T16:09:32.3619982Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3620054Z     
2025-02-24T16:09:32.3620142Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3620242Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3620331Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3620566Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3620661Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3620750Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3620865Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3620936Z             else:
2025-02-24T16:09:32.3621036Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3621145Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3621153Z 
2025-02-24T16:09:32.3621284Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3621405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3621552Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3621625Z     ???
2025-02-24T16:09:32.3621736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3621741Z 
2025-02-24T16:09:32.3621812Z >   ???
2025-02-24T16:09:32.3621949Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3622016Z E   
2025-02-24T16:09:32.3622151Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3622262Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3622336Z E          ...
2025-02-24T16:09:32.3622423Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3622554Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3622672Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3622743Z E          ...
2025-02-24T16:09:32.3622832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3622957Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3623066Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3623070Z 
2025-02-24T16:09:32.3623159Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3623441Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T16:09:32.3623446Z 
2025-02-24T16:09:32.3623579Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3623715Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3623824Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3623965Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3624102Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3624202Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3624280Z err_msg = None
2025-02-24T16:09:32.3624284Z 
2025-02-24T16:09:32.3624402Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3624485Z         if err_msg is None:
2025-02-24T16:09:32.3624586Z             if left.shape != right.shape:
2025-02-24T16:09:32.3624677Z                 raise_assert_detail(
2025-02-24T16:09:32.3624827Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3624903Z                 )
2025-02-24T16:09:32.3624969Z     
2025-02-24T16:09:32.3625045Z             diff = 0
2025-02-24T16:09:32.3625168Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3625261Z                 # count up differences
2025-02-24T16:09:32.3625527Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3625608Z                     diff += 1
2025-02-24T16:09:32.3625681Z     
2025-02-24T16:09:32.3625772Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3625919Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3626095Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3626443Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3626528Z E           
2025-02-24T16:09:32.3626648Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3626918Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3627186Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3627195Z 
2025-02-24T16:09:32.3627509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3627516Z 
2025-02-24T16:09:32.3627693Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3627697Z 
2025-02-24T16:09:32.3627927Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993680>
2025-02-24T16:09:32.3628099Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3628177Z attr = 'j_blues'
2025-02-24T16:09:32.3628182Z 
2025-02-24T16:09:32.3628325Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3628446Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3628531Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3628605Z         try:
2025-02-24T16:09:32.3628750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3628832Z         except KeyError:
2025-02-24T16:09:32.3628976Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3629045Z     
2025-02-24T16:09:32.3629139Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3629237Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3629332Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3629470Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3629555Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3629653Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3629765Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3629844Z             else:
2025-02-24T16:09:32.3629941Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3630056Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3630062Z 
2025-02-24T16:09:32.3630193Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3630311Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3630463Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3630535Z     ???
2025-02-24T16:09:32.3630649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3630653Z 
2025-02-24T16:09:32.3630737Z >   ???
2025-02-24T16:09:32.3630877Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3630948Z E   
2025-02-24T16:09:32.3631081Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3631218Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3631437Z E          ...
2025-02-24T16:09:32.3631531Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3631666Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3631782Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3631855Z E          ...
2025-02-24T16:09:32.3631941Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3632073Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3632266Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3632271Z 
2025-02-24T16:09:32.3632369Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3632635Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T16:09:32.3632639Z 
2025-02-24T16:09:32.3632772Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3632913Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3633012Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3633151Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3633282Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3633373Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3633454Z err_msg = None
2025-02-24T16:09:32.3633459Z 
2025-02-24T16:09:32.3633572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3633663Z         if err_msg is None:
2025-02-24T16:09:32.3633762Z             if left.shape != right.shape:
2025-02-24T16:09:32.3633849Z                 raise_assert_detail(
2025-02-24T16:09:32.3634002Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3634077Z                 )
2025-02-24T16:09:32.3634149Z     
2025-02-24T16:09:32.3634221Z             diff = 0
2025-02-24T16:09:32.3634340Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3634434Z                 # count up differences
2025-02-24T16:09:32.3634607Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3634691Z                     diff += 1
2025-02-24T16:09:32.3634758Z     
2025-02-24T16:09:32.3634852Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3634993Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3635172Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3635289Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3635357Z E           
2025-02-24T16:09:32.3635476Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3635963Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3636583Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3636591Z 
2025-02-24T16:09:32.3637028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3637032Z 
2025-02-24T16:09:32.3637207Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3637212Z 
2025-02-24T16:09:32.3637446Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0440>
2025-02-24T16:09:32.3637822Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3637896Z attr = 'lines'
2025-02-24T16:09:32.3637900Z 
2025-02-24T16:09:32.3638046Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3638163Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3638253Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3638325Z         try:
2025-02-24T16:09:32.3638570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3638659Z         except KeyError:
2025-02-24T16:09:32.3638801Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3638875Z     
2025-02-24T16:09:32.3638964Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3639060Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3639151Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3639282Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3639376Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3639467Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3639581Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3639651Z             else:
2025-02-24T16:09:32.3639751Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3639861Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3639865Z 
2025-02-24T16:09:32.3639997Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3640116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3640264Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3640337Z     ???
2025-02-24T16:09:32.3640452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3640456Z 
2025-02-24T16:09:32.3640524Z >   ???
2025-02-24T16:09:32.3640660Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3640727Z E   
2025-02-24T16:09:32.3640861Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3640972Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3641049Z E          ...
2025-02-24T16:09:32.3641144Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3641276Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3641398Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3641468Z E          ...
2025-02-24T16:09:32.3641560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3641686Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3641796Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3641800Z 
2025-02-24T16:09:32.3641896Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3642197Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T16:09:32.3642205Z 
2025-02-24T16:09:32.3642437Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0500>
2025-02-24T16:09:32.3642605Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3642697Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3642701Z 
2025-02-24T16:09:32.3642847Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3642968Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3643049Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3643121Z         try:
2025-02-24T16:09:32.3643261Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3643347Z         except KeyError:
2025-02-24T16:09:32.3643484Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3643555Z     
2025-02-24T16:09:32.3643644Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3643846Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3643938Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3644072Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3644160Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3644248Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3644360Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3644364Z 
2025-02-24T16:09:32.3644567Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3644682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3644685Z 
2025-02-24T16:09:32.3644823Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3644906Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3645020Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3645109Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3645248Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3645333Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3645436Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3645518Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3645592Z err_msg = None
2025-02-24T16:09:32.3645603Z 
2025-02-24T16:09:32.3645718Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3645802Z         if err_msg is None:
2025-02-24T16:09:32.3645896Z             if left.shape != right.shape:
2025-02-24T16:09:32.3645981Z                 raise_assert_detail(
2025-02-24T16:09:32.3646126Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3646199Z                 )
2025-02-24T16:09:32.3646386Z     
2025-02-24T16:09:32.3646461Z             diff = 0
2025-02-24T16:09:32.3646582Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3646669Z                 # count up differences
2025-02-24T16:09:32.3646842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3646920Z                     diff += 1
2025-02-24T16:09:32.3646991Z     
2025-02-24T16:09:32.3647081Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3647498Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3647676Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3647780Z E           AssertionError: Series are different
2025-02-24T16:09:32.3647855Z E           
2025-02-24T16:09:32.3647985Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3648363Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3648709Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3649046Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3649186Z 
2025-02-24T16:09:32.3649506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3649803Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T16:09:32.3649808Z 
2025-02-24T16:09:32.3650038Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b05c0>
2025-02-24T16:09:32.3650306Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3650404Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3650408Z 
2025-02-24T16:09:32.3650545Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3650664Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3650750Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3650820Z         try:
2025-02-24T16:09:32.3650965Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3651049Z         except KeyError:
2025-02-24T16:09:32.3651189Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3651256Z     
2025-02-24T16:09:32.3651345Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3651436Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3651526Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3651664Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3651752Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3651845Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3651953Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3651958Z 
2025-02-24T16:09:32.3652084Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3652199Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3652203Z 
2025-02-24T16:09:32.3652341Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3652426Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3652534Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3652621Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3652765Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3652847Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3652959Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3653037Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3653116Z err_msg = None
2025-02-24T16:09:32.3653120Z 
2025-02-24T16:09:32.3653230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3653316Z         if err_msg is None:
2025-02-24T16:09:32.3653413Z             if left.shape != right.shape:
2025-02-24T16:09:32.3653502Z                 raise_assert_detail(
2025-02-24T16:09:32.3653650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3653746Z                 )
2025-02-24T16:09:32.3653877Z     
2025-02-24T16:09:32.3654002Z             diff = 0
2025-02-24T16:09:32.3654200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3654361Z                 # count up differences
2025-02-24T16:09:32.3654657Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3654795Z                     diff += 1
2025-02-24T16:09:32.3654910Z     
2025-02-24T16:09:32.3655060Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3655273Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3655455Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3655566Z E           AssertionError: Series are different
2025-02-24T16:09:32.3655734Z E           
2025-02-24T16:09:32.3655840Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3656216Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3656892Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3657292Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3657297Z 
2025-02-24T16:09:32.3657630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3657888Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T16:09:32.3657892Z 
2025-02-24T16:09:32.3658028Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3658161Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3658263Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3658400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3658522Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3658620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3658694Z err_msg = None
2025-02-24T16:09:32.3658702Z 
2025-02-24T16:09:32.3658817Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3658904Z         if err_msg is None:
2025-02-24T16:09:32.3659001Z             if left.shape != right.shape:
2025-02-24T16:09:32.3659090Z                 raise_assert_detail(
2025-02-24T16:09:32.3659239Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3659314Z                 )
2025-02-24T16:09:32.3659384Z     
2025-02-24T16:09:32.3659456Z             diff = 0
2025-02-24T16:09:32.3659572Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3659663Z                 # count up differences
2025-02-24T16:09:32.3659836Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3659913Z                     diff += 1
2025-02-24T16:09:32.3659984Z     
2025-02-24T16:09:32.3660077Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3660213Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3660392Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3660505Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3660579Z E           
2025-02-24T16:09:32.3660691Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3660963Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3661355Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3661360Z 
2025-02-24T16:09:32.3661741Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3661750Z 
2025-02-24T16:09:32.3661922Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3661926Z 
2025-02-24T16:09:32.3662154Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0800>
2025-02-24T16:09:32.3662357Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>, attr = 'nu'
2025-02-24T16:09:32.3662364Z 
2025-02-24T16:09:32.3662510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3662630Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3662715Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3662790Z         try:
2025-02-24T16:09:32.3662934Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3663021Z         except KeyError:
2025-02-24T16:09:32.3663166Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3663238Z     
2025-02-24T16:09:32.3663330Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3663425Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3663520Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3663654Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3663744Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3663832Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3663949Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3663953Z 
2025-02-24T16:09:32.3664081Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3664194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3664345Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3664414Z     ???
2025-02-24T16:09:32.3664526Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3664534Z 
2025-02-24T16:09:32.3664606Z >   ???
2025-02-24T16:09:32.3664735Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3664808Z E   
2025-02-24T16:09:32.3664936Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3665049Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3665121Z E          ...
2025-02-24T16:09:32.3665213Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3665354Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3665467Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3665541Z E          ...
2025-02-24T16:09:32.3665626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3665759Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3665866Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3665870Z 
2025-02-24T16:09:32.3665968Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3666254Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T16:09:32.3666259Z 
2025-02-24T16:09:32.3666490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3666623Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3666836Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3666973Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3667103Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3667197Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3667274Z err_msg = None
2025-02-24T16:09:32.3667278Z 
2025-02-24T16:09:32.3667391Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3667574Z         if err_msg is None:
2025-02-24T16:09:32.3667676Z             if left.shape != right.shape:
2025-02-24T16:09:32.3667760Z                 raise_assert_detail(
2025-02-24T16:09:32.3667909Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3667979Z                 )
2025-02-24T16:09:32.3668049Z     
2025-02-24T16:09:32.3668121Z             diff = 0
2025-02-24T16:09:32.3668239Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3668331Z                 # count up differences
2025-02-24T16:09:32.3668502Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3668583Z                     diff += 1
2025-02-24T16:09:32.3668651Z     
2025-02-24T16:09:32.3668747Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3668884Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3669063Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3669182Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3669255Z E           
2025-02-24T16:09:32.3669370Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3669635Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3669906Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3669911Z 
2025-02-24T16:09:32.3670227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3670231Z 
2025-02-24T16:09:32.3670402Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3670407Z 
2025-02-24T16:09:32.3670637Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b08c0>
2025-02-24T16:09:32.3670808Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3670910Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3670920Z 
2025-02-24T16:09:32.3671169Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3671364Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3671508Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3671632Z         try:
2025-02-24T16:09:32.3671866Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3672013Z         except KeyError:
2025-02-24T16:09:32.3672169Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3672242Z     
2025-02-24T16:09:32.3672328Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3672425Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3672515Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3672645Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3672733Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3672938Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3673052Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3673057Z 
2025-02-24T16:09:32.3673184Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3673301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3673452Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3673522Z     ???
2025-02-24T16:09:32.3673705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3673709Z 
2025-02-24T16:09:32.3673780Z >   ???
2025-02-24T16:09:32.3673912Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3673984Z E   
2025-02-24T16:09:32.3674112Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3674227Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3674297Z E          ...
2025-02-24T16:09:32.3674392Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3674521Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3674638Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3674712Z E          ...
2025-02-24T16:09:32.3674800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3674929Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3675038Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3675045Z 
2025-02-24T16:09:32.3675136Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3675394Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T16:09:32.3675403Z 
2025-02-24T16:09:32.3675534Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3675670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3675770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3675906Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3676035Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3676129Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3676206Z err_msg = None
2025-02-24T16:09:32.3676210Z 
2025-02-24T16:09:32.3676438Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3676525Z         if err_msg is None:
2025-02-24T16:09:32.3676620Z             if left.shape != right.shape:
2025-02-24T16:09:32.3676709Z                 raise_assert_detail(
2025-02-24T16:09:32.3676862Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3676930Z                 )
2025-02-24T16:09:32.3677002Z     
2025-02-24T16:09:32.3677079Z             diff = 0
2025-02-24T16:09:32.3677195Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3677284Z                 # count up differences
2025-02-24T16:09:32.3677458Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3677541Z                     diff += 1
2025-02-24T16:09:32.3677609Z     
2025-02-24T16:09:32.3677701Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3677839Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3678018Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3678132Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3678208Z E           
2025-02-24T16:09:32.3678322Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3678583Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3678973Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3679075Z 
2025-02-24T16:09:32.3679389Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3679394Z 
2025-02-24T16:09:32.3679566Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3679570Z 
2025-02-24T16:09:32.3679803Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0980>
2025-02-24T16:09:32.3680013Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>, attr = 'f_lu'
2025-02-24T16:09:32.3680017Z 
2025-02-24T16:09:32.3680157Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3680276Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3680364Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3680437Z         try:
2025-02-24T16:09:32.3680578Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3680666Z         except KeyError:
2025-02-24T16:09:32.3680809Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3680876Z     
2025-02-24T16:09:32.3680967Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3681061Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3681153Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3681285Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3681374Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3681472Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3681585Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3681589Z 
2025-02-24T16:09:32.3681716Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3681829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3681980Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3682053Z     ???
2025-02-24T16:09:32.3682165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3682169Z 
2025-02-24T16:09:32.3682241Z >   ???
2025-02-24T16:09:32.3682369Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3682440Z E   
2025-02-24T16:09:32.3682567Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3682681Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3682759Z E          ...
2025-02-24T16:09:32.3682846Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3682978Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3683087Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3683161Z E          ...
2025-02-24T16:09:32.3683245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3683381Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3683487Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3683494Z 
2025-02-24T16:09:32.3683588Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3683909Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T16:09:32.3683914Z 
2025-02-24T16:09:32.3684147Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0f80>
2025-02-24T16:09:32.3684323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3684502Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.3684506Z 
2025-02-24T16:09:32.3684648Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3684766Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3684851Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3684928Z         try:
2025-02-24T16:09:32.3685072Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3685157Z         except KeyError:
2025-02-24T16:09:32.3685372Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3685447Z     
2025-02-24T16:09:32.3685540Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3685631Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3685722Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3685855Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3685942Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3686034Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3686148Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3686222Z             else:
2025-02-24T16:09:32.3686413Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3686526Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3686530Z 
2025-02-24T16:09:32.3686657Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3686774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3686922Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3686996Z     ???
2025-02-24T16:09:32.3687108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3687112Z 
2025-02-24T16:09:32.3687180Z >   ???
2025-02-24T16:09:32.3687367Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.3687439Z E   
2025-02-24T16:09:32.3687612Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.3687994Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3693596Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3698999Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3699198Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.3699202Z 
2025-02-24T16:09:32.3699299Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3699600Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T16:09:32.3699612Z 
2025-02-24T16:09:32.3699745Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3699880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3699980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3700123Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3700249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3700346Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3700427Z err_msg = None
2025-02-24T16:09:32.3700431Z 
2025-02-24T16:09:32.3700547Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3700632Z         if err_msg is None:
2025-02-24T16:09:32.3700731Z             if left.shape != right.shape:
2025-02-24T16:09:32.3700823Z                 raise_assert_detail(
2025-02-24T16:09:32.3700976Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3701046Z                 )
2025-02-24T16:09:32.3701117Z     
2025-02-24T16:09:32.3701189Z             diff = 0
2025-02-24T16:09:32.3701306Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3701509Z                 # count up differences
2025-02-24T16:09:32.3701686Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3701767Z                     diff += 1
2025-02-24T16:09:32.3701835Z     
2025-02-24T16:09:32.3701929Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3702067Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3702243Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3702452Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3702531Z E           
2025-02-24T16:09:32.3702648Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3702909Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3703180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3703184Z 
2025-02-24T16:09:32.3703513Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3703518Z 
2025-02-24T16:09:32.3703694Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3703698Z 
2025-02-24T16:09:32.3703932Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b1040>
2025-02-24T16:09:32.3704100Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3704194Z attr = 'previous_beta_sobolev'
2025-02-24T16:09:32.3704201Z 
2025-02-24T16:09:32.3704351Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3704468Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3704553Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3704623Z         try:
2025-02-24T16:09:32.3704767Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3704852Z         except KeyError:
2025-02-24T16:09:32.3704990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3705067Z     
2025-02-24T16:09:32.3705157Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3705254Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3705345Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3705479Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3705569Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3705661Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3705778Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3705850Z             else:
2025-02-24T16:09:32.3705950Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3706058Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3706062Z 
2025-02-24T16:09:32.3706195Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3706418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3706573Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3706645Z     ???
2025-02-24T16:09:32.3706754Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3706759Z 
2025-02-24T16:09:32.3706828Z >   ???
2025-02-24T16:09:32.3706960Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3707028Z E   
2025-02-24T16:09:32.3707160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3707389Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3707465Z E          ...
2025-02-24T16:09:32.3707583Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3707815Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3708013Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3708130Z E          ...
2025-02-24T16:09:32.3708276Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3708639Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3708835Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3708842Z 
2025-02-24T16:09:32.3708948Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3709226Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T16:09:32.3709231Z 
2025-02-24T16:09:32.3709366Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3709497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3709597Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3709731Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3709858Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3709958Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3710031Z err_msg = None
2025-02-24T16:09:32.3710035Z 
2025-02-24T16:09:32.3710150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3710229Z         if err_msg is None:
2025-02-24T16:09:32.3710331Z             if left.shape != right.shape:
2025-02-24T16:09:32.3710420Z                 raise_assert_detail(
2025-02-24T16:09:32.3710567Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3710641Z                 )
2025-02-24T16:09:32.3710708Z     
2025-02-24T16:09:32.3710784Z             diff = 0
2025-02-24T16:09:32.3710896Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3710986Z                 # count up differences
2025-02-24T16:09:32.3711165Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3711242Z                     diff += 1
2025-02-24T16:09:32.3711317Z     
2025-02-24T16:09:32.3711409Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3711551Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3711724Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3711843Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3711916Z E           
2025-02-24T16:09:32.3712030Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3712297Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3712564Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3712568Z 
2025-02-24T16:09:32.3712879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3712884Z 
2025-02-24T16:09:32.3713058Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3713062Z 
2025-02-24T16:09:32.3713375Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b1100>
2025-02-24T16:09:32.3713549Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3713631Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3713635Z 
2025-02-24T16:09:32.3713769Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3713889Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3713972Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3714045Z         try:
2025-02-24T16:09:32.3714264Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3714347Z         except KeyError:
2025-02-24T16:09:32.3714488Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3714554Z     
2025-02-24T16:09:32.3714644Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3714737Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3714828Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3714971Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3715056Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3715154Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3715267Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3715341Z             else:
2025-02-24T16:09:32.3715435Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3715545Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3715552Z 
2025-02-24T16:09:32.3715678Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3715792Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3715944Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3716013Z     ???
2025-02-24T16:09:32.3716127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3716134Z 
2025-02-24T16:09:32.3716205Z >   ???
2025-02-24T16:09:32.3716452Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3716527Z E   
2025-02-24T16:09:32.3716655Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3716770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3716839Z E          ...
2025-02-24T16:09:32.3716930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3717064Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3717180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3717254Z E          ...
2025-02-24T16:09:32.3717338Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3717466Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3717569Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3717573Z 
2025-02-24T16:09:32.3717670Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3717952Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T16:09:32.3717956Z 
2025-02-24T16:09:32.3718085Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3718216Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3718313Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3718453Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3718580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3718676Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3718754Z err_msg = None
2025-02-24T16:09:32.3718758Z 
2025-02-24T16:09:32.3718870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3719079Z         if err_msg is None:
2025-02-24T16:09:32.3719176Z             if left.shape != right.shape:
2025-02-24T16:09:32.3719261Z                 raise_assert_detail(
2025-02-24T16:09:32.3719411Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3719479Z                 )
2025-02-24T16:09:32.3719555Z     
2025-02-24T16:09:32.3719626Z             diff = 0
2025-02-24T16:09:32.3719740Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3719832Z                 # count up differences
2025-02-24T16:09:32.3720123Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3720209Z                     diff += 1
2025-02-24T16:09:32.3720277Z     
2025-02-24T16:09:32.3720373Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3720511Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3720688Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3720807Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3720877Z E           
2025-02-24T16:09:32.3720997Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3721262Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3721529Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3721534Z 
2025-02-24T16:09:32.3721847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3721854Z 
2025-02-24T16:09:32.3722023Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3722027Z 
2025-02-24T16:09:32.3722259Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b11c0>
2025-02-24T16:09:32.3722432Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3722509Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3722513Z 
2025-02-24T16:09:32.3722655Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3722769Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3722858Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3722929Z         try:
2025-02-24T16:09:32.3723068Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3723149Z         except KeyError:
2025-02-24T16:09:32.3723287Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3723362Z     
2025-02-24T16:09:32.3723450Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3723547Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3723639Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3723770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3723860Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3723950Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3724065Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3724135Z             else:
2025-02-24T16:09:32.3724234Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3724346Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3724350Z 
2025-02-24T16:09:32.3724476Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3724589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3724827Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3724900Z     ???
2025-02-24T16:09:32.3725011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3725015Z 
2025-02-24T16:09:32.3725083Z >   ???
2025-02-24T16:09:32.3725214Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3725285Z E   
2025-02-24T16:09:32.3725424Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3725722Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3725853Z E          ...
2025-02-24T16:09:32.3726002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3726216Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3726535Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3726655Z E          ...
2025-02-24T16:09:32.3726784Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3726917Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3727026Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3727030Z 
2025-02-24T16:09:32.3727126Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3727389Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T16:09:32.3727393Z 
2025-02-24T16:09:32.3727525Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3727654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3727754Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3727890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3728011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3728111Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3728183Z err_msg = None
2025-02-24T16:09:32.3728187Z 
2025-02-24T16:09:32.3728300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3728385Z         if err_msg is None:
2025-02-24T16:09:32.3728480Z             if left.shape != right.shape:
2025-02-24T16:09:32.3728568Z                 raise_assert_detail(
2025-02-24T16:09:32.3728715Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3728792Z                 )
2025-02-24T16:09:32.3728859Z     
2025-02-24T16:09:32.3728935Z             diff = 0
2025-02-24T16:09:32.3729050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3729137Z                 # count up differences
2025-02-24T16:09:32.3729312Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3729387Z                     diff += 1
2025-02-24T16:09:32.3729458Z     
2025-02-24T16:09:32.3729549Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3729689Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3729858Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3729973Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3730046Z E           
2025-02-24T16:09:32.3730158Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3730428Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3730693Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3730822Z 
2025-02-24T16:09:32.3731131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3731135Z 
2025-02-24T16:09:32.3731309Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3731314Z 
2025-02-24T16:09:32.3731640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b1340>
2025-02-24T16:09:32.3731808Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3731885Z attr = 'j_blues'
2025-02-24T16:09:32.3731889Z 
2025-02-24T16:09:32.3732025Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3732143Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3732230Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3732302Z         try:
2025-02-24T16:09:32.3732445Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3732524Z         except KeyError:
2025-02-24T16:09:32.3732665Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3732732Z     
2025-02-24T16:09:32.3732822Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3732917Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3733005Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3733144Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3733228Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3733321Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3733429Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3733502Z             else:
2025-02-24T16:09:32.3733602Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3733707Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3733714Z 
2025-02-24T16:09:32.3733843Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3733954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3734105Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3734176Z     ???
2025-02-24T16:09:32.3734284Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3734289Z 
2025-02-24T16:09:32.3734357Z >   ???
2025-02-24T16:09:32.3734487Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3734558Z E   
2025-02-24T16:09:32.3734690Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3734813Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3734894Z E          ...
2025-02-24T16:09:32.3734982Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3735118Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3735239Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3735314Z E          ...
2025-02-24T16:09:32.3735402Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3735536Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3735648Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3735652Z 
2025-02-24T16:09:32.3735744Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3735959Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T16:09:32.3735963Z 
2025-02-24T16:09:32.3736096Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3736233Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3736475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3736731Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3736861Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3736956Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3737035Z err_msg = None
2025-02-24T16:09:32.3737039Z 
2025-02-24T16:09:32.3737159Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3737239Z         if err_msg is None:
2025-02-24T16:09:32.3737441Z             if left.shape != right.shape:
2025-02-24T16:09:32.3737531Z                 raise_assert_detail(
2025-02-24T16:09:32.3737684Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3737755Z                 )
2025-02-24T16:09:32.3737828Z     
2025-02-24T16:09:32.3737903Z             diff = 0
2025-02-24T16:09:32.3738016Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3738108Z                 # count up differences
2025-02-24T16:09:32.3738285Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3738367Z                     diff += 1
2025-02-24T16:09:32.3738437Z     
2025-02-24T16:09:32.3738529Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3738674Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3738849Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3738973Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3739044Z E           
2025-02-24T16:09:32.3739161Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3739433Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3739699Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3739703Z 
2025-02-24T16:09:32.3740028Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3740033Z 
2025-02-24T16:09:32.3740214Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3740218Z 
2025-02-24T16:09:32.3740446Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b20c0>
2025-02-24T16:09:32.3740619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3740693Z attr = 'lines'
2025-02-24T16:09:32.3740700Z 
2025-02-24T16:09:32.3740845Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3740968Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3741054Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3741129Z         try:
2025-02-24T16:09:32.3741271Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3741355Z         except KeyError:
2025-02-24T16:09:32.3741495Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3741569Z     
2025-02-24T16:09:32.3741665Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3741760Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3741853Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3741992Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3742081Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3742172Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3742287Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3742469Z             else:
2025-02-24T16:09:32.3742563Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3742674Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3742679Z 
2025-02-24T16:09:32.3742805Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3742922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3743071Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3743213Z     ???
2025-02-24T16:09:32.3743328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3743332Z 
2025-02-24T16:09:32.3743399Z >   ???
2025-02-24T16:09:32.3743534Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3743602Z E   
2025-02-24T16:09:32.3743736Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3743852Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3743927Z E          ...
2025-02-24T16:09:32.3744021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3744154Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3744269Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3744337Z E          ...
2025-02-24T16:09:32.3744428Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3744561Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3744666Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3744671Z 
2025-02-24T16:09:32.3744763Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3745001Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T16:09:32.3745005Z 
2025-02-24T16:09:32.3745236Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2180>
2025-02-24T16:09:32.3745412Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3745503Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3745507Z 
2025-02-24T16:09:32.3745649Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3745763Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3745852Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3745926Z         try:
2025-02-24T16:09:32.3746066Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3746151Z         except KeyError:
2025-02-24T16:09:32.3746385Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3746460Z     
2025-02-24T16:09:32.3746548Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3746646Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3746739Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3746872Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3746966Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3747054Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3747164Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3747168Z 
2025-02-24T16:09:32.3747294Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3747408Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3747412Z 
2025-02-24T16:09:32.3747557Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3747643Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3747755Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3747837Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3748011Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3748098Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3748320Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3748403Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3748478Z err_msg = None
2025-02-24T16:09:32.3748482Z 
2025-02-24T16:09:32.3748598Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3748678Z         if err_msg is None:
2025-02-24T16:09:32.3748775Z             if left.shape != right.shape:
2025-02-24T16:09:32.3748865Z                 raise_assert_detail(
2025-02-24T16:09:32.3749112Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3749190Z                 )
2025-02-24T16:09:32.3749257Z     
2025-02-24T16:09:32.3749336Z             diff = 0
2025-02-24T16:09:32.3749448Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3749539Z                 # count up differences
2025-02-24T16:09:32.3749842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3749979Z                     diff += 1
2025-02-24T16:09:32.3750101Z     
2025-02-24T16:09:32.3750246Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3750480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3750758Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3750865Z E           AssertionError: Series are different
2025-02-24T16:09:32.3750938Z E           
2025-02-24T16:09:32.3751042Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3751422Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3751764Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3752103Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3752111Z 
2025-02-24T16:09:32.3752424Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3752663Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T16:09:32.3752667Z 
2025-02-24T16:09:32.3752892Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2240>
2025-02-24T16:09:32.3753063Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3753153Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3753161Z 
2025-02-24T16:09:32.3753301Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3753423Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3753509Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3753583Z         try:
2025-02-24T16:09:32.3753725Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3753810Z         except KeyError:
2025-02-24T16:09:32.3753951Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3754020Z     
2025-02-24T16:09:32.3754112Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3754299Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3754391Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3754524Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3754612Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3754706Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3754817Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3754822Z 
2025-02-24T16:09:32.3755025Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3755140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3755144Z 
2025-02-24T16:09:32.3755284Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3755371Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3755478Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3755565Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3755705Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3755791Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3755895Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3755979Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3756058Z err_msg = None
2025-02-24T16:09:32.3756062Z 
2025-02-24T16:09:32.3756176Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3756368Z         if err_msg is None:
2025-02-24T16:09:32.3756465Z             if left.shape != right.shape:
2025-02-24T16:09:32.3756557Z                 raise_assert_detail(
2025-02-24T16:09:32.3756708Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3756779Z                 )
2025-02-24T16:09:32.3756851Z     
2025-02-24T16:09:32.3756923Z             diff = 0
2025-02-24T16:09:32.3757044Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3757132Z                 # count up differences
2025-02-24T16:09:32.3757307Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3757387Z                     diff += 1
2025-02-24T16:09:32.3757455Z     
2025-02-24T16:09:32.3757546Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3757680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3757859Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3757963Z E           AssertionError: Series are different
2025-02-24T16:09:32.3758039Z E           
2025-02-24T16:09:32.3758144Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3758515Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3758905Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3759292Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3759415Z 
2025-02-24T16:09:32.3759729Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3759931Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T16:09:32.3759935Z 
2025-02-24T16:09:32.3760069Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3760313Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3760419Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3760555Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3760681Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3760783Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3760858Z err_msg = None
2025-02-24T16:09:32.3760862Z 
2025-02-24T16:09:32.3760975Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3761057Z         if err_msg is None:
2025-02-24T16:09:32.3761154Z             if left.shape != right.shape:
2025-02-24T16:09:32.3761242Z                 raise_assert_detail(
2025-02-24T16:09:32.3761384Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3761461Z                 )
2025-02-24T16:09:32.3761529Z     
2025-02-24T16:09:32.3761607Z             diff = 0
2025-02-24T16:09:32.3761718Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3761810Z                 # count up differences
2025-02-24T16:09:32.3761983Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3762060Z                     diff += 1
2025-02-24T16:09:32.3762137Z     
2025-02-24T16:09:32.3762223Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3762363Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3762534Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3762651Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3762727Z E           
2025-02-24T16:09:32.3762839Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3763110Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3763377Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3763384Z 
2025-02-24T16:09:32.3763687Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3763691Z 
2025-02-24T16:09:32.3763866Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3763870Z 
2025-02-24T16:09:32.3764096Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2480>
2025-02-24T16:09:32.3764307Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>, attr = 'nu'
2025-02-24T16:09:32.3764311Z 
2025-02-24T16:09:32.3764452Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3764566Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3764653Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3764826Z         try:
2025-02-24T16:09:32.3764970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3765052Z         except KeyError:
2025-02-24T16:09:32.3765191Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3765263Z     
2025-02-24T16:09:32.3765351Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3765447Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3765533Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3765741Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3765834Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3765924Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3766036Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3766040Z 
2025-02-24T16:09:32.3766164Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3766377Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3766535Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3766604Z     ???
2025-02-24T16:09:32.3766717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3766721Z 
2025-02-24T16:09:32.3766788Z >   ???
2025-02-24T16:09:32.3766919Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3766988Z E   
2025-02-24T16:09:32.3767120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3767240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3767311Z E          ...
2025-02-24T16:09:32.3767403Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3767601Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3767805Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3767923Z E          ...
2025-02-24T16:09:32.3768074Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3768298Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3768472Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3768479Z 
2025-02-24T16:09:32.3768643Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3768858Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T16:09:32.3768862Z 
2025-02-24T16:09:32.3768998Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3769133Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3769231Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3769367Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3769492Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3769594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3769672Z err_msg = None
2025-02-24T16:09:32.3769676Z 
2025-02-24T16:09:32.3769785Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3769870Z         if err_msg is None:
2025-02-24T16:09:32.3769964Z             if left.shape != right.shape:
2025-02-24T16:09:32.3770052Z                 raise_assert_detail(
2025-02-24T16:09:32.3770193Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3770271Z                 )
2025-02-24T16:09:32.3770342Z     
2025-02-24T16:09:32.3770414Z             diff = 0
2025-02-24T16:09:32.3770531Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3770619Z                 # count up differences
2025-02-24T16:09:32.3770792Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3770869Z                     diff += 1
2025-02-24T16:09:32.3771072Z     
2025-02-24T16:09:32.3771164Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3771300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3771471Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3771584Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3771657Z E           
2025-02-24T16:09:32.3771768Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3772134Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3772405Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3772413Z 
2025-02-24T16:09:32.3772728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3772732Z 
2025-02-24T16:09:32.3772901Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3772905Z 
2025-02-24T16:09:32.3773136Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2540>
2025-02-24T16:09:32.3773302Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3773387Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3773391Z 
2025-02-24T16:09:32.3773531Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3773644Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3773732Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3773805Z         try:
2025-02-24T16:09:32.3773973Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3774052Z         except KeyError:
2025-02-24T16:09:32.3774196Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3774269Z     
2025-02-24T16:09:32.3774358Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3774456Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3774545Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3774683Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3774769Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3774861Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3774979Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3774982Z 
2025-02-24T16:09:32.3775109Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3775225Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3775373Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3775447Z     ???
2025-02-24T16:09:32.3775559Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3775563Z 
2025-02-24T16:09:32.3775633Z >   ???
2025-02-24T16:09:32.3775767Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3775835Z E   
2025-02-24T16:09:32.3775968Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3776082Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3776156Z E          ...
2025-02-24T16:09:32.3776245Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3776524Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3776641Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3776718Z E          ...
2025-02-24T16:09:32.3776926Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3777054Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3777164Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3777168Z 
2025-02-24T16:09:32.3777261Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3777459Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T16:09:32.3777462Z 
2025-02-24T16:09:32.3777698Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3777828Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3777930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3778071Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3778194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3778296Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3778373Z err_msg = None
2025-02-24T16:09:32.3778377Z 
2025-02-24T16:09:32.3778489Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3778574Z         if err_msg is None:
2025-02-24T16:09:32.3778669Z             if left.shape != right.shape:
2025-02-24T16:09:32.3778758Z                 raise_assert_detail(
2025-02-24T16:09:32.3778902Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3778981Z                 )
2025-02-24T16:09:32.3779050Z     
2025-02-24T16:09:32.3779126Z             diff = 0
2025-02-24T16:09:32.3779242Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3779332Z                 # count up differences
2025-02-24T16:09:32.3779507Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3779587Z                     diff += 1
2025-02-24T16:09:32.3779663Z     
2025-02-24T16:09:32.3779753Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3779897Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3780073Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3780186Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3780261Z E           
2025-02-24T16:09:32.3780376Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3780646Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3780916Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3780923Z 
2025-02-24T16:09:32.3781229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3781232Z 
2025-02-24T16:09:32.3781408Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3781412Z 
2025-02-24T16:09:32.3781649Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2600>
2025-02-24T16:09:32.3781851Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>, attr = 'f_lu'
2025-02-24T16:09:32.3781855Z 
2025-02-24T16:09:32.3781998Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3782113Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3782203Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3782365Z         try:
2025-02-24T16:09:32.3782506Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3782591Z         except KeyError:
2025-02-24T16:09:32.3782730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3782802Z     
2025-02-24T16:09:32.3782891Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3782990Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3783083Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3783308Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3783405Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3783495Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3783607Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3783611Z 
2025-02-24T16:09:32.3783743Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3783853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3784009Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3784082Z     ???
2025-02-24T16:09:32.3784197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3784201Z 
2025-02-24T16:09:32.3784270Z >   ???
2025-02-24T16:09:32.3784405Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3784479Z E   
2025-02-24T16:09:32.3784610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3791833Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3791939Z E          ...
2025-02-24T16:09:32.3792083Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3792327Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3792533Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3792660Z E          ...
2025-02-24T16:09:32.3792812Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3793028Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3793213Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3793222Z 
2025-02-24T16:09:32.3793354Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3793621Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T16:09:32.3793630Z 
2025-02-24T16:09:32.3793869Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2c00>
2025-02-24T16:09:32.3794044Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3794138Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.3794142Z 
2025-02-24T16:09:32.3794290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3794412Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3794505Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3794585Z         try:
2025-02-24T16:09:32.3794739Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3794826Z         except KeyError:
2025-02-24T16:09:32.3794969Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3795044Z     
2025-02-24T16:09:32.3795133Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3795235Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3795329Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3795468Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3795559Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3795648Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3795766Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3795839Z             else:
2025-02-24T16:09:32.3795942Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3796059Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3796234Z 
2025-02-24T16:09:32.3796503Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3796629Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3796783Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3796857Z     ???
2025-02-24T16:09:32.3796973Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3796977Z 
2025-02-24T16:09:32.3797047Z >   ???
2025-02-24T16:09:32.3797366Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.3797440Z E   
2025-02-24T16:09:32.3797619Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.3798000Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3802987Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3808732Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3809021Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.3809029Z 
2025-02-24T16:09:32.3809127Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3809362Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T16:09:32.3809367Z 
2025-02-24T16:09:32.3809505Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3809645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3809749Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3809888Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3810011Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3810107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3810190Z err_msg = None
2025-02-24T16:09:32.3810194Z 
2025-02-24T16:09:32.3810314Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3810401Z         if err_msg is None:
2025-02-24T16:09:32.3810497Z             if left.shape != right.shape:
2025-02-24T16:09:32.3810586Z                 raise_assert_detail(
2025-02-24T16:09:32.3810738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3810812Z                 )
2025-02-24T16:09:32.3810883Z     
2025-02-24T16:09:32.3810954Z             diff = 0
2025-02-24T16:09:32.3811075Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3811164Z                 # count up differences
2025-02-24T16:09:32.3811340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3811418Z                     diff += 1
2025-02-24T16:09:32.3811489Z     
2025-02-24T16:09:32.3811581Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3811721Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3811898Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3812017Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3812088Z E           
2025-02-24T16:09:32.3812200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3812473Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3812744Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3812929Z 
2025-02-24T16:09:32.3813259Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3813263Z 
2025-02-24T16:09:32.3813434Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3813439Z 
2025-02-24T16:09:32.3813671Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2cc0>
2025-02-24T16:09:32.3813842Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3814007Z attr = 'previous_beta_sobolev'
2025-02-24T16:09:32.3814012Z 
2025-02-24T16:09:32.3814160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3814278Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3814363Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3814432Z         try:
2025-02-24T16:09:32.3814578Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3814662Z         except KeyError:
2025-02-24T16:09:32.3814804Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3814876Z     
2025-02-24T16:09:32.3814964Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3815063Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3815153Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3815291Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3815377Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3815471Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3815585Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3815657Z             else:
2025-02-24T16:09:32.3815758Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3815866Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3815871Z 
2025-02-24T16:09:32.3816004Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3816127Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3816398Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3816476Z     ???
2025-02-24T16:09:32.3816588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3816592Z 
2025-02-24T16:09:32.3816667Z >   ???
2025-02-24T16:09:32.3816796Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3816869Z E   
2025-02-24T16:09:32.3817007Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3817119Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3817195Z E          ...
2025-02-24T16:09:32.3817283Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3817424Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3817534Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3817611Z E          ...
2025-02-24T16:09:32.3817698Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3817822Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3817930Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3817934Z 
2025-02-24T16:09:32.3818024Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3818235Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T16:09:32.3818239Z 
2025-02-24T16:09:32.3818378Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3818505Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3818608Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3818743Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3818869Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3819083Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3819158Z err_msg = None
2025-02-24T16:09:32.3819162Z 
2025-02-24T16:09:32.3819279Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3819359Z         if err_msg is None:
2025-02-24T16:09:32.3819460Z             if left.shape != right.shape:
2025-02-24T16:09:32.3819545Z                 raise_assert_detail(
2025-02-24T16:09:32.3819815Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3819890Z                 )
2025-02-24T16:09:32.3819956Z     
2025-02-24T16:09:32.3820029Z             diff = 0
2025-02-24T16:09:32.3820140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3820232Z                 # count up differences
2025-02-24T16:09:32.3820407Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3820493Z                     diff += 1
2025-02-24T16:09:32.3820564Z     
2025-02-24T16:09:32.3820653Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3820802Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3820974Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3821092Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3821162Z E           
2025-02-24T16:09:32.3821282Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3821547Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3821811Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3821823Z 
2025-02-24T16:09:32.3822134Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3822139Z 
2025-02-24T16:09:32.3822310Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3822318Z 
2025-02-24T16:09:32.3822544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2d80>
2025-02-24T16:09:32.3822718Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3822800Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3822804Z 
2025-02-24T16:09:32.3822943Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3823060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3823145Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3823218Z         try:
2025-02-24T16:09:32.3823358Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3823446Z         except KeyError:
2025-02-24T16:09:32.3823590Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3823659Z     
2025-02-24T16:09:32.3823750Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3823844Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3823941Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3824072Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3824163Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3824255Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3824365Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3824440Z             else:
2025-02-24T16:09:32.3824536Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3824736Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3824741Z 
2025-02-24T16:09:32.3824871Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3824983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3825135Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3825204Z     ???
2025-02-24T16:09:32.3825388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3825392Z 
2025-02-24T16:09:32.3825462Z >   ???
2025-02-24T16:09:32.3825593Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3825666Z E   
2025-02-24T16:09:32.3825795Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3825908Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3825978Z E          ...
2025-02-24T16:09:32.3826069Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3826199Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3826411Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3826487Z E          ...
2025-02-24T16:09:32.3826572Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3826700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3826806Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3826811Z 
2025-02-24T16:09:32.3826909Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3827117Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T16:09:32.3827121Z 
2025-02-24T16:09:32.3827248Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3827379Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3827477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3827619Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3827749Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3827844Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3827922Z err_msg = None
2025-02-24T16:09:32.3827926Z 
2025-02-24T16:09:32.3828040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3828126Z         if err_msg is None:
2025-02-24T16:09:32.3828223Z             if left.shape != right.shape:
2025-02-24T16:09:32.3828315Z                 raise_assert_detail(
2025-02-24T16:09:32.3828468Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3828536Z                 )
2025-02-24T16:09:32.3828607Z     
2025-02-24T16:09:32.3828680Z             diff = 0
2025-02-24T16:09:32.3828796Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3828886Z                 # count up differences
2025-02-24T16:09:32.3829068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3829149Z                     diff += 1
2025-02-24T16:09:32.3829214Z     
2025-02-24T16:09:32.3829310Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3829449Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3829630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3829745Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3829817Z E           
2025-02-24T16:09:32.3829933Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3830198Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3830605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3830609Z 
2025-02-24T16:09:32.3831029Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3831034Z 
2025-02-24T16:09:32.3831214Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3831219Z 
2025-02-24T16:09:32.3831450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2e40>
2025-02-24T16:09:32.3831619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3831702Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3831707Z 
2025-02-24T16:09:32.3831852Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3831971Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3832060Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3832130Z         try:
2025-02-24T16:09:32.3832275Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3832361Z         except KeyError:
2025-02-24T16:09:32.3832504Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3832575Z     
2025-02-24T16:09:32.3832666Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3832763Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3832853Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3832989Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3833077Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3833169Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3833285Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3833355Z             else:
2025-02-24T16:09:32.3833455Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3833563Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3833572Z 
2025-02-24T16:09:32.3833699Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3833822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3833973Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3834045Z     ???
2025-02-24T16:09:32.3834157Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3834161Z 
2025-02-24T16:09:32.3834233Z >   ???
2025-02-24T16:09:32.3834365Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3834431Z E   
2025-02-24T16:09:32.3834567Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3834676Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3834751Z E          ...
2025-02-24T16:09:32.3834841Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3834980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3835095Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3835163Z E          ...
2025-02-24T16:09:32.3835255Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3835380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3835487Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3835491Z 
2025-02-24T16:09:32.3835586Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3835791Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T16:09:32.3835796Z 
2025-02-24T16:09:32.3836027Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3836493Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3836663Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3836887Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3837108Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3837336Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3837414Z err_msg = None
2025-02-24T16:09:32.3837418Z 
2025-02-24T16:09:32.3837534Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3837613Z         if err_msg is None:
2025-02-24T16:09:32.3837711Z             if left.shape != right.shape:
2025-02-24T16:09:32.3837796Z                 raise_assert_detail(
2025-02-24T16:09:32.3837941Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3838015Z                 )
2025-02-24T16:09:32.3838081Z     
2025-02-24T16:09:32.3838153Z             diff = 0
2025-02-24T16:09:32.3838261Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3838352Z                 # count up differences
2025-02-24T16:09:32.3838527Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3838603Z                     diff += 1
2025-02-24T16:09:32.3838673Z     
2025-02-24T16:09:32.3838764Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3838907Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3839078Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3839197Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3839269Z E           
2025-02-24T16:09:32.3839380Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3839651Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3839922Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3839927Z 
2025-02-24T16:09:32.3840238Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3840243Z 
2025-02-24T16:09:32.3840421Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3840428Z 
2025-02-24T16:09:32.3840655Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2fc0>
2025-02-24T16:09:32.3840827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3840904Z attr = 'j_blues'
2025-02-24T16:09:32.3840908Z 
2025-02-24T16:09:32.3841046Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3841164Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3841248Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3841324Z         try:
2025-02-24T16:09:32.3841468Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3841548Z         except KeyError:
2025-02-24T16:09:32.3841693Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3841759Z     
2025-02-24T16:09:32.3841850Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3841943Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3842170Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3842307Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3842391Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3842483Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3842591Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3842666Z             else:
2025-02-24T16:09:32.3842764Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3842947Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3842952Z 
2025-02-24T16:09:32.3843084Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3843196Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3843346Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3843414Z     ???
2025-02-24T16:09:32.3843528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3843535Z 
2025-02-24T16:09:32.3843606Z >   ???
2025-02-24T16:09:32.3843734Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3843802Z E   
2025-02-24T16:09:32.3843928Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3844041Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3844111Z E          ...
2025-02-24T16:09:32.3844202Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3844338Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3844448Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3844520Z E          ...
2025-02-24T16:09:32.3844603Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3844731Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3844835Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3844840Z 
2025-02-24T16:09:32.3844939Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3845166Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T16:09:32.3845171Z 
2025-02-24T16:09:32.3845298Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3845429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3845525Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3845664Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3845789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3845884Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3845962Z err_msg = None
2025-02-24T16:09:32.3845966Z 
2025-02-24T16:09:32.3846077Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3846164Z         if err_msg is None:
2025-02-24T16:09:32.3846386Z             if left.shape != right.shape:
2025-02-24T16:09:32.3846473Z                 raise_assert_detail(
2025-02-24T16:09:32.3846622Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3846692Z                 )
2025-02-24T16:09:32.3846765Z     
2025-02-24T16:09:32.3846834Z             diff = 0
2025-02-24T16:09:32.3846948Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3847043Z                 # count up differences
2025-02-24T16:09:32.3847211Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3847288Z                     diff += 1
2025-02-24T16:09:32.3847356Z     
2025-02-24T16:09:32.3847448Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3847583Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3847759Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3848021Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3848092Z E           
2025-02-24T16:09:32.3848208Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3848569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3848839Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3848844Z 
2025-02-24T16:09:32.3849161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3849165Z 
2025-02-24T16:09:32.3849335Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3849339Z 
2025-02-24T16:09:32.3849567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b3d40>
2025-02-24T16:09:32.3849738Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3849811Z attr = 'lines'
2025-02-24T16:09:32.3849815Z 
2025-02-24T16:09:32.3849960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3850073Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3850161Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3850235Z         try:
2025-02-24T16:09:32.3850376Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3850456Z         except KeyError:
2025-02-24T16:09:32.3850592Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3850665Z     
2025-02-24T16:09:32.3850751Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3850848Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3850939Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3851071Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3851160Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3851251Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3851368Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3851438Z             else:
2025-02-24T16:09:32.3851536Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3851643Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3851647Z 
2025-02-24T16:09:32.3851771Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3851888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3852036Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3852110Z     ???
2025-02-24T16:09:32.3852222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3852226Z 
2025-02-24T16:09:32.3852294Z >   ???
2025-02-24T16:09:32.3852425Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3852492Z E   
2025-02-24T16:09:32.3852624Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3852736Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3852813Z E          ...
2025-02-24T16:09:32.3852903Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3853031Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3853149Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3853217Z E          ...
2025-02-24T16:09:32.3853307Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3853518Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3853632Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3853636Z 
2025-02-24T16:09:32.3853735Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3853966Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T16:09:32.3853970Z 
2025-02-24T16:09:32.3854198Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b3e00>
2025-02-24T16:09:32.3854437Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3854531Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3854535Z 
2025-02-24T16:09:32.3854680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3854798Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3854885Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3854954Z         try:
2025-02-24T16:09:32.3855103Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3855181Z         except KeyError:
2025-02-24T16:09:32.3855321Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3855393Z     
2025-02-24T16:09:32.3855479Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3855574Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3855661Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3855796Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3855883Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3855976Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3856087Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3856091Z 
2025-02-24T16:09:32.3856219Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3856458Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3856467Z 
2025-02-24T16:09:32.3856605Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3856695Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3856808Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3856887Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3857033Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3857114Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3857240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3857347Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3857422Z err_msg = None
2025-02-24T16:09:32.3857426Z 
2025-02-24T16:09:32.3857540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3857620Z         if err_msg is None:
2025-02-24T16:09:32.3857716Z             if left.shape != right.shape:
2025-02-24T16:09:32.3857803Z                 raise_assert_detail(
2025-02-24T16:09:32.3857951Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3858026Z                 )
2025-02-24T16:09:32.3858092Z     
2025-02-24T16:09:32.3858166Z             diff = 0
2025-02-24T16:09:32.3858276Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3858365Z                 # count up differences
2025-02-24T16:09:32.3858535Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3858617Z                     diff += 1
2025-02-24T16:09:32.3858688Z     
2025-02-24T16:09:32.3858772Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3858913Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3859084Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3859193Z E           AssertionError: Series are different
2025-02-24T16:09:32.3859404Z E           
2025-02-24T16:09:32.3859510Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3859889Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3860322Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3860664Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3860671Z 
2025-02-24T16:09:32.3861130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3861532Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T16:09:32.3861539Z 
2025-02-24T16:09:32.3861922Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b3ec0>
2025-02-24T16:09:32.3862129Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3862219Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3862223Z 
2025-02-24T16:09:32.3862363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3862486Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3862567Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3862641Z         try:
2025-02-24T16:09:32.3862780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3862863Z         except KeyError:
2025-02-24T16:09:32.3863001Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3863072Z     
2025-02-24T16:09:32.3863165Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3863260Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3863353Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3863485Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3863574Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3863667Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3863780Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3863787Z 
2025-02-24T16:09:32.3863917Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3864030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3864035Z 
2025-02-24T16:09:32.3864174Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3864257Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3864370Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3864457Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3864594Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3864678Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3864785Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3864866Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3864940Z err_msg = None
2025-02-24T16:09:32.3865054Z 
2025-02-24T16:09:32.3865171Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3865253Z         if err_msg is None:
2025-02-24T16:09:32.3865346Z             if left.shape != right.shape:
2025-02-24T16:09:32.3865431Z                 raise_assert_detail(
2025-02-24T16:09:32.3865572Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3865645Z                 )
2025-02-24T16:09:32.3865710Z     
2025-02-24T16:09:32.3865785Z             diff = 0
2025-02-24T16:09:32.3865975Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3866065Z                 # count up differences
2025-02-24T16:09:32.3866242Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3866437Z                     diff += 1
2025-02-24T16:09:32.3866509Z     
2025-02-24T16:09:32.3866594Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3866737Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3866913Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3867021Z E           AssertionError: Series are different
2025-02-24T16:09:32.3867095Z E           
2025-02-24T16:09:32.3867195Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3867577Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3867965Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3868353Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3868358Z 
2025-02-24T16:09:32.3868669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3868866Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T16:09:32.3868870Z 
2025-02-24T16:09:32.3869004Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3869131Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3869234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3869369Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3869493Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3869588Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3869667Z err_msg = None
2025-02-24T16:09:32.3869671Z 
2025-02-24T16:09:32.3869780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3869860Z         if err_msg is None:
2025-02-24T16:09:32.3869955Z             if left.shape != right.shape:
2025-02-24T16:09:32.3870038Z                 raise_assert_detail(
2025-02-24T16:09:32.3870406Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3870479Z                 )
2025-02-24T16:09:32.3870548Z     
2025-02-24T16:09:32.3870623Z             diff = 0
2025-02-24T16:09:32.3870732Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3870821Z                 # count up differences
2025-02-24T16:09:32.3870988Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3871071Z                     diff += 1
2025-02-24T16:09:32.3871142Z     
2025-02-24T16:09:32.3871332Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3871475Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3871645Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3871762Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3871832Z E           
2025-02-24T16:09:32.3871949Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3872216Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3872485Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3872490Z 
2025-02-24T16:09:32.3872799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3872803Z 
2025-02-24T16:09:32.3872974Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3872981Z 
2025-02-24T16:09:32.3873211Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dc140>
2025-02-24T16:09:32.3873409Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>, attr = 'nu'
2025-02-24T16:09:32.3873417Z 
2025-02-24T16:09:32.3873555Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3873673Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3873757Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3873833Z         try:
2025-02-24T16:09:32.3873979Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3874063Z         except KeyError:
2025-02-24T16:09:32.3874207Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3874277Z     
2025-02-24T16:09:32.3874369Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3874462Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3874558Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3874691Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3874778Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3874872Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3874985Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3874990Z 
2025-02-24T16:09:32.3875118Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3875233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3875384Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3875454Z     ???
2025-02-24T16:09:32.3875567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3875571Z 
2025-02-24T16:09:32.3875641Z >   ???
2025-02-24T16:09:32.3875771Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3875842Z E   
2025-02-24T16:09:32.3876059Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3876172Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3876250Z E          ...
2025-02-24T16:09:32.3876432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3876569Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3876680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3876752Z E          ...
2025-02-24T16:09:32.3876942Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3877073Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3877181Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3877185Z 
2025-02-24T16:09:32.3877274Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3877491Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T16:09:32.3877495Z 
2025-02-24T16:09:32.3877623Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3877755Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3877856Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3877987Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3878110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3878205Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3878281Z err_msg = None
2025-02-24T16:09:32.3878285Z 
2025-02-24T16:09:32.3878401Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3878483Z         if err_msg is None:
2025-02-24T16:09:32.3878578Z             if left.shape != right.shape:
2025-02-24T16:09:32.3878668Z                 raise_assert_detail(
2025-02-24T16:09:32.3878814Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3878889Z                 )
2025-02-24T16:09:32.3878960Z     
2025-02-24T16:09:32.3879032Z             diff = 0
2025-02-24T16:09:32.3879147Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3879233Z                 # count up differences
2025-02-24T16:09:32.3879411Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3879491Z                     diff += 1
2025-02-24T16:09:32.3879559Z     
2025-02-24T16:09:32.3879653Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3879789Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3879964Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3880077Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3880150Z E           
2025-02-24T16:09:32.3880265Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3880530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3880800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3880805Z 
2025-02-24T16:09:32.3881116Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3881120Z 
2025-02-24T16:09:32.3881290Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3881409Z 
2025-02-24T16:09:32.3881639Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dc200>
2025-02-24T16:09:32.3881805Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3881892Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3881896Z 
2025-02-24T16:09:32.3882035Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3882147Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3882231Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3882388Z         try:
2025-02-24T16:09:32.3882536Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3882614Z         except KeyError:
2025-02-24T16:09:32.3882755Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3882826Z     
2025-02-24T16:09:32.3882912Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3883010Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3883100Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3883239Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3883325Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3883418Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3883530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3883534Z 
2025-02-24T16:09:32.3883661Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3883779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3883925Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3883997Z     ???
2025-02-24T16:09:32.3884109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3884113Z 
2025-02-24T16:09:32.3884184Z >   ???
2025-02-24T16:09:32.3884315Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3884385Z E   
2025-02-24T16:09:32.3884518Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3884628Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3884703Z E          ...
2025-02-24T16:09:32.3884793Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3884982Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3885186Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3885315Z E          ...
2025-02-24T16:09:32.3885468Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3885684Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3885858Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3885864Z 
2025-02-24T16:09:32.3886024Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3886229Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T16:09:32.3886232Z 
2025-02-24T16:09:32.3886462Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3886590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3886685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3886819Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3886944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3887039Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3887112Z err_msg = None
2025-02-24T16:09:32.3887119Z 
2025-02-24T16:09:32.3887231Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3887312Z         if err_msg is None:
2025-02-24T16:09:32.3887404Z             if left.shape != right.shape:
2025-02-24T16:09:32.3887493Z                 raise_assert_detail(
2025-02-24T16:09:32.3887784Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3887858Z                 )
2025-02-24T16:09:32.3887925Z     
2025-02-24T16:09:32.3888000Z             diff = 0
2025-02-24T16:09:32.3888117Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3888203Z                 # count up differences
2025-02-24T16:09:32.3888376Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3888451Z                     diff += 1
2025-02-24T16:09:32.3888621Z     
2025-02-24T16:09:32.3888711Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3888850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3889022Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3889134Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3889209Z E           
2025-02-24T16:09:32.3889325Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3889588Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3889859Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3889864Z 
2025-02-24T16:09:32.3890172Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3890180Z 
2025-02-24T16:09:32.3890349Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3890356Z 
2025-02-24T16:09:32.3890582Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dc2c0>
2025-02-24T16:09:32.3890781Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>, attr = 'f_lu'
2025-02-24T16:09:32.3890785Z 
2025-02-24T16:09:32.3890926Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3891044Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3891127Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3891201Z         try:
2025-02-24T16:09:32.3891340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3891421Z         except KeyError:
2025-02-24T16:09:32.3891561Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3891631Z     
2025-02-24T16:09:32.3891721Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3891813Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3891910Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3892041Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3892129Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3892217Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3892329Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3892333Z 
2025-02-24T16:09:32.3892465Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3892578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3892725Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3892793Z     ???
2025-02-24T16:09:32.3892904Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3892908Z 
2025-02-24T16:09:32.3892979Z >   ???
2025-02-24T16:09:32.3893109Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3893181Z E   
2025-02-24T16:09:32.3893396Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3893507Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3893577Z E          ...
2025-02-24T16:09:32.3893665Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3893796Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3893907Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3893978Z E          ...
2025-02-24T16:09:32.3894153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3894283Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3894384Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3894388Z 
2025-02-24T16:09:32.3894480Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3894687Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T16:09:32.3894692Z 
2025-02-24T16:09:32.3894823Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3894950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3895044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3895176Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3895298Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3895394Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3895471Z err_msg = None
2025-02-24T16:09:32.3895475Z 
2025-02-24T16:09:32.3895585Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3895669Z         if err_msg is None:
2025-02-24T16:09:32.3895765Z             if left.shape != right.shape:
2025-02-24T16:09:32.3895849Z                 raise_assert_detail(
2025-02-24T16:09:32.3896001Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3896069Z                 )
2025-02-24T16:09:32.3896140Z     
2025-02-24T16:09:32.3896209Z             diff = 0
2025-02-24T16:09:32.3896448Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3896541Z                 # count up differences
2025-02-24T16:09:32.3896711Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3896790Z                     diff += 1
2025-02-24T16:09:32.3896860Z     
2025-02-24T16:09:32.3896951Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3897087Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3897257Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3897372Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3897439Z E           
2025-02-24T16:09:32.3897551Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3897818Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3898087Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3898091Z 
2025-02-24T16:09:32.3898399Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3898403Z 
2025-02-24T16:09:32.3898570Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3898690Z 
2025-02-24T16:09:32.3898921Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dca40>
2025-02-24T16:09:32.3899087Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3899165Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3899169Z 
2025-02-24T16:09:32.3899317Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3899431Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3899618Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3899698Z         try:
2025-02-24T16:09:32.3899840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3899924Z         except KeyError:
2025-02-24T16:09:32.3900062Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3900133Z     
2025-02-24T16:09:32.3900222Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3900317Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3900412Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3900543Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3900634Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3900723Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3900841Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3900911Z             else:
2025-02-24T16:09:32.3901011Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3901123Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3901128Z 
2025-02-24T16:09:32.3901258Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3901374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3901521Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3901593Z     ???
2025-02-24T16:09:32.3901703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3901714Z 
2025-02-24T16:09:32.3901782Z >   ???
2025-02-24T16:09:32.3901909Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3901975Z E   
2025-02-24T16:09:32.3902108Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3902217Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3902291Z E          ...
2025-02-24T16:09:32.3902380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3902513Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3902630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3902699Z E          ...
2025-02-24T16:09:32.3902785Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3902908Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3903015Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3903022Z 
2025-02-24T16:09:32.3903113Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3903316Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T16:09:32.3903320Z 
2025-02-24T16:09:32.3903452Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3903578Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3903680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3903819Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3903939Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3904040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3904113Z err_msg = None
2025-02-24T16:09:32.3904117Z 
2025-02-24T16:09:32.3904231Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3904401Z         if err_msg is None:
2025-02-24T16:09:32.3904495Z             if left.shape != right.shape:
2025-02-24T16:09:32.3904582Z                 raise_assert_detail(
2025-02-24T16:09:32.3904724Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3904796Z                 )
2025-02-24T16:09:32.3904862Z     
2025-02-24T16:09:32.3904942Z             diff = 0
2025-02-24T16:09:32.3905054Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3905233Z                 # count up differences
2025-02-24T16:09:32.3905409Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3905485Z                     diff += 1
2025-02-24T16:09:32.3905556Z     
2025-02-24T16:09:32.3905641Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3905779Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3905952Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3906065Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3906138Z E           
2025-02-24T16:09:32.3906248Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3906616Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3906884Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3906891Z 
2025-02-24T16:09:32.3907196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3907201Z 
2025-02-24T16:09:32.3907371Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3907376Z 
2025-02-24T16:09:32.3907601Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dcb00>
2025-02-24T16:09:32.3907767Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3907847Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3907854Z 
2025-02-24T16:09:32.3907992Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3908108Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3908193Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3908262Z         try:
2025-02-24T16:09:32.3908404Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3908481Z         except KeyError:
2025-02-24T16:09:32.3908621Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3908688Z     
2025-02-24T16:09:32.3908778Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3908875Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3908963Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3909099Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3909182Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3909273Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3909386Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3909460Z             else:
2025-02-24T16:09:32.3909558Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3909664Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3909668Z 
2025-02-24T16:09:32.3909806Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3910010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3910431Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3910549Z     ???
2025-02-24T16:09:32.3910742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3910748Z 
2025-02-24T16:09:32.3910868Z >   ???
2025-02-24T16:09:32.3911049Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3911120Z E   
2025-02-24T16:09:32.3911249Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3911470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3911547Z E          ...
2025-02-24T16:09:32.3911634Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3911768Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3911879Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3911951Z E          ...
2025-02-24T16:09:32.3912034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3912166Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3912275Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3912279Z 
2025-02-24T16:09:32.3912370Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3912570Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T16:09:32.3912574Z 
2025-02-24T16:09:32.3912703Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3912835Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3912935Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3913065Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3913191Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3913285Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3913363Z err_msg = None
2025-02-24T16:09:32.3913367Z 
2025-02-24T16:09:32.3913482Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3913561Z         if err_msg is None:
2025-02-24T16:09:32.3913658Z             if left.shape != right.shape:
2025-02-24T16:09:32.3913740Z                 raise_assert_detail(
2025-02-24T16:09:32.3913886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3913958Z                 )
2025-02-24T16:09:32.3914030Z     
2025-02-24T16:09:32.3914104Z             diff = 0
2025-02-24T16:09:32.3914214Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3914305Z                 # count up differences
2025-02-24T16:09:32.3914474Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3914551Z                     diff += 1
2025-02-24T16:09:32.3914621Z     
2025-02-24T16:09:32.3914712Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3914853Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3915024Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3915140Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3915208Z E           
2025-02-24T16:09:32.3915331Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3915595Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3915862Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3915951Z 
2025-02-24T16:09:32.3916372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3916377Z 
2025-02-24T16:09:32.3916555Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3916560Z 
2025-02-24T16:09:32.3916891Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dcc80>
2025-02-24T16:09:32.3917067Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3917141Z attr = 'j_blues'
2025-02-24T16:09:32.3917145Z 
2025-02-24T16:09:32.3917286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3917403Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3917486Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3917566Z         try:
2025-02-24T16:09:32.3917705Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3917788Z         except KeyError:
2025-02-24T16:09:32.3917922Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3917989Z     
2025-02-24T16:09:32.3918079Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3918173Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3918264Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3918399Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3918487Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3918575Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3918683Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3918756Z             else:
2025-02-24T16:09:32.3918849Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3918962Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3918969Z 
2025-02-24T16:09:32.3919095Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3919229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3919488Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3919611Z     ???
2025-02-24T16:09:32.3919804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3919810Z 
2025-02-24T16:09:32.3919928Z >   ???
2025-02-24T16:09:32.3920143Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3920265Z E   
2025-02-24T16:09:32.3920414Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3920531Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3920601Z E          ...
2025-02-24T16:09:32.3920690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3920823Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3920939Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3921009Z E          ...
2025-02-24T16:09:32.3921096Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3921222Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3921324Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3921328Z 
2025-02-24T16:09:32.3921420Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3921616Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T16:09:32.3921621Z 
2025-02-24T16:09:32.3921753Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3921883Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3921978Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3922234Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3922357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3922453Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3922526Z err_msg = None
2025-02-24T16:09:32.3922534Z 
2025-02-24T16:09:32.3922645Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3922729Z         if err_msg is None:
2025-02-24T16:09:32.3922895Z             if left.shape != right.shape:
2025-02-24T16:09:32.3922986Z                 raise_assert_detail(
2025-02-24T16:09:32.3923130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3923201Z                 )
2025-02-24T16:09:32.3923268Z     
2025-02-24T16:09:32.3923336Z             diff = 0
2025-02-24T16:09:32.3923449Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3923538Z                 # count up differences
2025-02-24T16:09:32.3923709Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3923786Z                     diff += 1
2025-02-24T16:09:32.3923857Z     
2025-02-24T16:09:32.3923949Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3924086Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3924262Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3924377Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3924451Z E           
2025-02-24T16:09:32.3924563Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3924830Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3925104Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3925109Z 
2025-02-24T16:09:32.3925420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3925428Z 
2025-02-24T16:09:32.3925600Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3925604Z 
2025-02-24T16:09:32.3925836Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dda00>
2025-02-24T16:09:32.3926005Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3926081Z attr = 'lines'
2025-02-24T16:09:32.3926088Z 
2025-02-24T16:09:32.3926229Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3926455Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3926543Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3926613Z         try:
2025-02-24T16:09:32.3926754Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3926832Z         except KeyError:
2025-02-24T16:09:32.3926970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3927037Z     
2025-02-24T16:09:32.3927128Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3927221Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3927308Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3927442Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3927527Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3927620Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3927950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3928073Z             else:
2025-02-24T16:09:32.3928239Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3928417Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3928423Z 
2025-02-24T16:09:32.3928637Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3928829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3929121Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3929197Z     ???
2025-02-24T16:09:32.3929304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3929308Z 
2025-02-24T16:09:32.3929377Z >   ???
2025-02-24T16:09:32.3929503Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3929573Z E   
2025-02-24T16:09:32.3929704Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3929817Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3929894Z E          ...
2025-02-24T16:09:32.3929980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3930112Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3930224Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3930297Z E          ...
2025-02-24T16:09:32.3930384Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3930512Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3930620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3930624Z 
2025-02-24T16:09:32.3930713Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3930942Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T16:09:32.3930947Z 
2025-02-24T16:09:32.3931175Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009ddac0>
2025-02-24T16:09:32.3931346Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3931438Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3931442Z 
2025-02-24T16:09:32.3931578Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3931693Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3931774Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3931847Z         try:
2025-02-24T16:09:32.3931990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3932072Z         except KeyError:
2025-02-24T16:09:32.3932213Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3932280Z     
2025-02-24T16:09:32.3932369Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3932461Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3932549Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3932684Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3932771Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3932867Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3932972Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3932976Z 
2025-02-24T16:09:32.3933110Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3933223Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3933228Z 
2025-02-24T16:09:32.3933363Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3933450Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3933558Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3933641Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3933782Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3933863Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3934058Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3934135Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3934212Z err_msg = None
2025-02-24T16:09:32.3934217Z 
2025-02-24T16:09:32.3934327Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3934415Z         if err_msg is None:
2025-02-24T16:09:32.3934510Z             if left.shape != right.shape:
2025-02-24T16:09:32.3934592Z                 raise_assert_detail(
2025-02-24T16:09:32.3934814Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3934884Z                 )
2025-02-24T16:09:32.3934954Z     
2025-02-24T16:09:32.3935026Z             diff = 0
2025-02-24T16:09:32.3935145Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3935235Z                 # count up differences
2025-02-24T16:09:32.3935405Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3935488Z                     diff += 1
2025-02-24T16:09:32.3935555Z     
2025-02-24T16:09:32.3935646Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3935781Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3935959Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3936067Z E           AssertionError: Series are different
2025-02-24T16:09:32.3936135Z E           
2025-02-24T16:09:32.3936243Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3936755Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3937099Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3937439Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3937444Z 
2025-02-24T16:09:32.3937759Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3937984Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T16:09:32.3937988Z 
2025-02-24T16:09:32.3938211Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009ddb80>
2025-02-24T16:09:32.3938380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3938473Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3938477Z 
2025-02-24T16:09:32.3938617Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3938733Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3938818Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3938886Z         try:
2025-02-24T16:09:32.3939031Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3939109Z         except KeyError:
2025-02-24T16:09:32.3939249Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3939318Z     
2025-02-24T16:09:32.3939404Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3939618Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3939706Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3939840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3939924Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3940016Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3940127Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3940132Z 
2025-02-24T16:09:32.3940370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3940490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3940494Z 
2025-02-24T16:09:32.3940629Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3940716Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3940827Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3940913Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3941056Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3941136Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3941244Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3941328Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3941429Z err_msg = None
2025-02-24T16:09:32.3941435Z 
2025-02-24T16:09:32.3941567Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3941646Z         if err_msg is None:
2025-02-24T16:09:32.3941744Z             if left.shape != right.shape:
2025-02-24T16:09:32.3941826Z                 raise_assert_detail(
2025-02-24T16:09:32.3941974Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3942047Z                 )
2025-02-24T16:09:32.3942114Z     
2025-02-24T16:09:32.3942187Z             diff = 0
2025-02-24T16:09:32.3942302Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3942391Z                 # count up differences
2025-02-24T16:09:32.3942559Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3942639Z                     diff += 1
2025-02-24T16:09:32.3942710Z     
2025-02-24T16:09:32.3942797Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3942935Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3943111Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3943219Z E           AssertionError: Series are different
2025-02-24T16:09:32.3943290Z E           
2025-02-24T16:09:32.3943397Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3943775Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3944161Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3944543Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3944631Z 
2025-02-24T16:09:32.3944941Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3945136Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T16:09:32.3945140Z 
2025-02-24T16:09:32.3945266Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3945469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3945569Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3945707Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3945832Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3945930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3946010Z err_msg = None
2025-02-24T16:09:32.3946014Z 
2025-02-24T16:09:32.3946123Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3946207Z         if err_msg is None:
2025-02-24T16:09:32.3946398Z             if left.shape != right.shape:
2025-02-24T16:09:32.3946489Z                 raise_assert_detail(
2025-02-24T16:09:32.3946641Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3946714Z                 )
2025-02-24T16:09:32.3946784Z     
2025-02-24T16:09:32.3946855Z             diff = 0
2025-02-24T16:09:32.3946972Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3947058Z                 # count up differences
2025-02-24T16:09:32.3947231Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3947310Z                     diff += 1
2025-02-24T16:09:32.3947380Z     
2025-02-24T16:09:32.3947466Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3947600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3947776Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3947890Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3947985Z E           
2025-02-24T16:09:32.3948099Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3948363Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3948630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3948637Z 
2025-02-24T16:09:32.3948946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3948950Z 
2025-02-24T16:09:32.3949120Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3949124Z 
2025-02-24T16:09:32.3949355Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dddc0>
2025-02-24T16:09:32.3949563Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>, attr = 'nu'
2025-02-24T16:09:32.3949568Z 
2025-02-24T16:09:32.3949707Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3949825Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3949909Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3950119Z         try:
2025-02-24T16:09:32.3950259Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3950342Z         except KeyError:
2025-02-24T16:09:32.3950480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3950546Z     
2025-02-24T16:09:32.3950637Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3950730Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3950824Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3951058Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3951146Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3951239Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3951349Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3951353Z 
2025-02-24T16:09:32.3951479Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3951590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3951745Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3951818Z     ???
2025-02-24T16:09:32.3951937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3951943Z 
2025-02-24T16:09:32.3952076Z >   ???
2025-02-24T16:09:32.3952296Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3952418Z E   
2025-02-24T16:09:32.3952635Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3952826Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3952952Z E          ...
2025-02-24T16:09:32.3953093Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3953232Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3953346Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3953423Z E          ...
2025-02-24T16:09:32.3953510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3953639Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3953746Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3953750Z 
2025-02-24T16:09:32.3953838Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3954045Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T16:09:32.3954050Z 
2025-02-24T16:09:32.3954186Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3954315Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3954414Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3954544Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3954672Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3954764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3954842Z err_msg = None
2025-02-24T16:09:32.3954846Z 
2025-02-24T16:09:32.3954962Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3955041Z         if err_msg is None:
2025-02-24T16:09:32.3955137Z             if left.shape != right.shape:
2025-02-24T16:09:32.3955220Z                 raise_assert_detail(
2025-02-24T16:09:32.3955364Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3955442Z                 )
2025-02-24T16:09:32.3955510Z     
2025-02-24T16:09:32.3955584Z             diff = 0
2025-02-24T16:09:32.3955693Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3955783Z                 # count up differences
2025-02-24T16:09:32.3955950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3956031Z                     diff += 1
2025-02-24T16:09:32.3956191Z     
2025-02-24T16:09:32.3956382Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3956525Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3956694Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3956811Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3956881Z E           
2025-02-24T16:09:32.3956995Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3957370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3957638Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3957646Z 
2025-02-24T16:09:32.3957952Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3957956Z 
2025-02-24T16:09:32.3958130Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3958135Z 
2025-02-24T16:09:32.3958364Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dde80>
2025-02-24T16:09:32.3958534Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3958612Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3958620Z 
2025-02-24T16:09:32.3958757Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3958874Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3958955Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3959030Z         try:
2025-02-24T16:09:32.3959168Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3959253Z         except KeyError:
2025-02-24T16:09:32.3959393Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3959459Z     
2025-02-24T16:09:32.3959550Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3959640Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3959731Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3959865Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3959953Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3960047Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3960156Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3960160Z 
2025-02-24T16:09:32.3960291Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3960404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3960569Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3960638Z     ???
2025-02-24T16:09:32.3960753Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3960757Z 
2025-02-24T16:09:32.3960832Z >   ???
2025-02-24T16:09:32.3960959Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3961032Z E   
2025-02-24T16:09:32.3961165Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3961279Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3961357Z E          ...
2025-02-24T16:09:32.3961445Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3961606Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3961804Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3961930Z E          ...
2025-02-24T16:09:32.3962227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3962446Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3962627Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3962633Z 
2025-02-24T16:09:32.3962781Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3963115Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T16:09:32.3963121Z 
2025-02-24T16:09:32.3963438Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3963661Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3963823Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3964051Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3964211Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3964310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3964390Z err_msg = None
2025-02-24T16:09:32.3964394Z 
2025-02-24T16:09:32.3964512Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3964592Z         if err_msg is None:
2025-02-24T16:09:32.3964689Z             if left.shape != right.shape:
2025-02-24T16:09:32.3964773Z                 raise_assert_detail(
2025-02-24T16:09:32.3964926Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3964997Z                 )
2025-02-24T16:09:32.3965068Z     
2025-02-24T16:09:32.3965144Z             diff = 0
2025-02-24T16:09:32.3965255Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3965347Z                 # count up differences
2025-02-24T16:09:32.3965518Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3965600Z                     diff += 1
2025-02-24T16:09:32.3973084Z     
2025-02-24T16:09:32.3973214Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3973378Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3973565Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3973688Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3973767Z E           
2025-02-24T16:09:32.3973890Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3974174Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3974445Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3974454Z 
2025-02-24T16:09:32.3974780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3974785Z 
2025-02-24T16:09:32.3974972Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3974976Z 
2025-02-24T16:09:32.3975214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009ddf40>
2025-02-24T16:09:32.3975424Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>, attr = 'f_lu'
2025-02-24T16:09:32.3975428Z 
2025-02-24T16:09:32.3975577Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3975695Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3975787Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3976030Z         try:
2025-02-24T16:09:32.3976177Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3976390Z         except KeyError:
2025-02-24T16:09:32.3976540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3976613Z     
2025-02-24T16:09:32.3976703Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3976804Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3976898Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3977170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3977265Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3977356Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3977472Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3977476Z 
2025-02-24T16:09:32.3977609Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3977730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3977896Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3977967Z     ???
2025-02-24T16:09:32.3978083Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3978087Z 
2025-02-24T16:09:32.3978156Z >   ???
2025-02-24T16:09:32.3978295Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3978370Z E   
2025-02-24T16:09:32.3978516Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3978733Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3978856Z E          ...
2025-02-24T16:09:32.3979018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3979237Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3979431Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3979553Z E          ...
2025-02-24T16:09:32.3979703Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3979871Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3979980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3979984Z 
2025-02-24T16:09:32.3980084Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3980291Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T16:09:32.3980300Z 
2025-02-24T16:09:32.3980437Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3980578Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3980681Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3980819Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3980944Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3981044Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3981120Z err_msg = None
2025-02-24T16:09:32.3981125Z 
2025-02-24T16:09:32.3981242Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3981329Z         if err_msg is None:
2025-02-24T16:09:32.3981426Z             if left.shape != right.shape:
2025-02-24T16:09:32.3981516Z                 raise_assert_detail(
2025-02-24T16:09:32.3981670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3981744Z                 )
2025-02-24T16:09:32.3981815Z     
2025-02-24T16:09:32.3981887Z             diff = 0
2025-02-24T16:09:32.3982005Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3982092Z                 # count up differences
2025-02-24T16:09:32.3982269Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3982351Z                     diff += 1
2025-02-24T16:09:32.3982547Z     
2025-02-24T16:09:32.3982641Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3982782Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3982960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3983075Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3983147Z E           
2025-02-24T16:09:32.3983262Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3983601Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3983869Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3983877Z 
2025-02-24T16:09:32.3984199Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3984204Z 
2025-02-24T16:09:32.3984379Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3984383Z 
2025-02-24T16:09:32.3984620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009de6c0>
2025-02-24T16:09:32.3984794Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3984877Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3984881Z 
2025-02-24T16:09:32.3985027Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3985147Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3985240Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3985310Z         try:
2025-02-24T16:09:32.3985456Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3985541Z         except KeyError:
2025-02-24T16:09:32.3985680Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3985752Z     
2025-02-24T16:09:32.3985839Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3985939Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3986028Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3986169Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3986259Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3986474Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3986590Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3986659Z             else:
2025-02-24T16:09:32.3986762Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3986875Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3986879Z 
2025-02-24T16:09:32.3987011Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3987132Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3987281Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3987354Z     ???
2025-02-24T16:09:32.3987464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3987468Z 
2025-02-24T16:09:32.3987543Z >   ???
2025-02-24T16:09:32.3987674Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3987742Z E   
2025-02-24T16:09:32.3987875Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3987986Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3988062Z E          ...
2025-02-24T16:09:32.3988151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3988410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3988526Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3988596Z E          ...
2025-02-24T16:09:32.3988684Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3988813Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3988923Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3988927Z 
2025-02-24T16:09:32.3989016Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3989322Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T16:09:32.3989328Z 
2025-02-24T16:09:32.3989463Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3989597Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3989703Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3989840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3989968Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3990065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3990140Z err_msg = None
2025-02-24T16:09:32.3990144Z 
2025-02-24T16:09:32.3990262Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3990344Z         if err_msg is None:
2025-02-24T16:09:32.3990447Z             if left.shape != right.shape:
2025-02-24T16:09:32.3990536Z                 raise_assert_detail(
2025-02-24T16:09:32.3990685Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3990759Z                 )
2025-02-24T16:09:32.3990827Z     
2025-02-24T16:09:32.3990902Z             diff = 0
2025-02-24T16:09:32.3991012Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3991108Z                 # count up differences
2025-02-24T16:09:32.3991285Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3991363Z                     diff += 1
2025-02-24T16:09:32.3991437Z     
2025-02-24T16:09:32.3991524Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3991665Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3991840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3991963Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3992037Z E           
2025-02-24T16:09:32.3992149Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3992417Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3992688Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3992692Z 
2025-02-24T16:09:32.3993007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3993011Z 
2025-02-24T16:09:32.3993186Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3993190Z 
2025-02-24T16:09:32.3993415Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009de780>
2025-02-24T16:09:32.3993589Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3993670Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3993760Z 
2025-02-24T16:09:32.3993900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3994019Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3994101Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3994173Z         try:
2025-02-24T16:09:32.3994316Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3994395Z         except KeyError:
2025-02-24T16:09:32.3994540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3994680Z     
2025-02-24T16:09:32.3994778Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3994871Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3994964Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3995101Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3995184Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3995278Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3995389Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3995462Z             else:
2025-02-24T16:09:32.3995557Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3995669Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3995673Z 
2025-02-24T16:09:32.3995802Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3995920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3996073Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3996142Z     ???
2025-02-24T16:09:32.3996258Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3996359Z 
2025-02-24T16:09:32.3996433Z >   ???
2025-02-24T16:09:32.3996572Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3996659Z E   
2025-02-24T16:09:32.3996791Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3996910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3996980Z E          ...
2025-02-24T16:09:32.3997073Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3997208Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3997322Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3997394Z E          ...
2025-02-24T16:09:32.3997476Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3997610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3997715Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3997719Z 
2025-02-24T16:09:32.3997813Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3998015Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T16:09:32.3998019Z 
2025-02-24T16:09:32.3998151Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3998289Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3998386Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3998523Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3998653Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3998749Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3998831Z err_msg = None
2025-02-24T16:09:32.3998835Z 
2025-02-24T16:09:32.3998946Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3999036Z         if err_msg is None:
2025-02-24T16:09:32.3999138Z             if left.shape != right.shape:
2025-02-24T16:09:32.3999223Z                 raise_assert_detail(
2025-02-24T16:09:32.3999375Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3999561Z                 )
2025-02-24T16:09:32.3999633Z     
2025-02-24T16:09:32.3999706Z             diff = 0
2025-02-24T16:09:32.3999820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3999912Z                 # count up differences
2025-02-24T16:09:32.4000086Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4000168Z                     diff += 1
2025-02-24T16:09:32.4000236Z     
2025-02-24T16:09:32.4000447Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4000590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4000767Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4000886Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4000956Z E           
2025-02-24T16:09:32.4001068Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4001334Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4001607Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4001611Z 
2025-02-24T16:09:32.4001920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4001924Z 
2025-02-24T16:09:32.4002092Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4002096Z 
2025-02-24T16:09:32.4002329Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009de900>
2025-02-24T16:09:32.4002500Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.4002574Z attr = 'j_blues'
2025-02-24T16:09:32.4002578Z 
2025-02-24T16:09:32.4002721Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4002836Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4002924Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4002998Z         try:
2025-02-24T16:09:32.4003142Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4003226Z         except KeyError:
2025-02-24T16:09:32.4003663Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4003735Z     
2025-02-24T16:09:32.4003821Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4003919Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4004014Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4004150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4004244Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4004333Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4004448Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4004518Z             else:
2025-02-24T16:09:32.4004618Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4004729Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4004734Z 
2025-02-24T16:09:32.4004862Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4004981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4005128Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4005202Z     ???
2025-02-24T16:09:32.4005314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4005403Z 
2025-02-24T16:09:32.4005473Z >   ???
2025-02-24T16:09:32.4005607Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4005675Z E   
2025-02-24T16:09:32.4005807Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4005918Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4005993Z E          ...
2025-02-24T16:09:32.4006081Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4006210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4006551Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4006628Z E          ...
2025-02-24T16:09:32.4006721Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4006849Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4006954Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4006958Z 
2025-02-24T16:09:32.4007055Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4007266Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T16:09:32.4007271Z 
2025-02-24T16:09:32.4007402Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4007532Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4007629Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4007767Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4007892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4007987Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4008068Z err_msg = None
2025-02-24T16:09:32.4008072Z 
2025-02-24T16:09:32.4008184Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4008273Z         if err_msg is None:
2025-02-24T16:09:32.4008373Z             if left.shape != right.shape:
2025-02-24T16:09:32.4008459Z                 raise_assert_detail(
2025-02-24T16:09:32.4008606Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4008675Z                 )
2025-02-24T16:09:32.4008743Z     
2025-02-24T16:09:32.4008815Z             diff = 0
2025-02-24T16:09:32.4008929Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4009016Z                 # count up differences
2025-02-24T16:09:32.4009193Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4009273Z                     diff += 1
2025-02-24T16:09:32.4009341Z     
2025-02-24T16:09:32.4009432Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4009569Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4009748Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4009867Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4009938Z E           
2025-02-24T16:09:32.4010050Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4010311Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4010632Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4010642Z 
2025-02-24T16:09:32.4011176Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4011333Z 
2025-02-24T16:09:32.4011621Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4011627Z 
2025-02-24T16:09:32.4011954Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009df680>
2025-02-24T16:09:32.4012130Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4012203Z attr = 'lines'
2025-02-24T16:09:32.4012206Z 
2025-02-24T16:09:32.4012439Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4012558Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4012646Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4012720Z         try:
2025-02-24T16:09:32.4012858Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4012940Z         except KeyError:
2025-02-24T16:09:32.4013078Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4013151Z     
2025-02-24T16:09:32.4013239Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4013338Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4013426Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4013562Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4013649Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4013738Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4013854Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4013927Z             else:
2025-02-24T16:09:32.4014025Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4014136Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4014140Z 
2025-02-24T16:09:32.4014267Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4014383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4014530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4014608Z     ???
2025-02-24T16:09:32.4014719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4014727Z 
2025-02-24T16:09:32.4014794Z >   ???
2025-02-24T16:09:32.4014925Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4014992Z E   
2025-02-24T16:09:32.4015124Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4015234Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4015310Z E          ...
2025-02-24T16:09:32.4015396Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4015536Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4015652Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4015721Z E          ...
2025-02-24T16:09:32.4015810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4015935Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4016049Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4016053Z 
2025-02-24T16:09:32.4016144Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4016581Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T16:09:32.4016586Z 
2025-02-24T16:09:32.4016822Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009df740>
2025-02-24T16:09:32.4016998Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4017091Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.4017095Z 
2025-02-24T16:09:32.4017233Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4017347Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4017432Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4017502Z         try:
2025-02-24T16:09:32.4017644Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4017850Z         except KeyError:
2025-02-24T16:09:32.4017992Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4018065Z     
2025-02-24T16:09:32.4018151Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4018246Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4018334Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4018471Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4018558Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4018750Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4018864Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4018869Z 
2025-02-24T16:09:32.4018993Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4019105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4019110Z 
2025-02-24T16:09:32.4019246Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4019337Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4019450Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4019532Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4019675Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4019755Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4019867Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4019950Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4020024Z err_msg = None
2025-02-24T16:09:32.4020028Z 
2025-02-24T16:09:32.4020144Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4020223Z         if err_msg is None:
2025-02-24T16:09:32.4020319Z             if left.shape != right.shape:
2025-02-24T16:09:32.4020403Z                 raise_assert_detail(
2025-02-24T16:09:32.4020558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4020632Z                 )
2025-02-24T16:09:32.4020700Z     
2025-02-24T16:09:32.4020777Z             diff = 0
2025-02-24T16:09:32.4020887Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4020978Z                 # count up differences
2025-02-24T16:09:32.4021150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4021236Z                     diff += 1
2025-02-24T16:09:32.4021307Z     
2025-02-24T16:09:32.4021393Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4021533Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4021708Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4021818Z E           AssertionError: Series are different
2025-02-24T16:09:32.4021889Z E           
2025-02-24T16:09:32.4022009Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.4022392Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4022727Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4023065Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4023172Z 
2025-02-24T16:09:32.4023491Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4023818Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T16:09:32.4023827Z 
2025-02-24T16:09:32.4024050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009df800>
2025-02-24T16:09:32.4024225Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4024315Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.4024319Z 
2025-02-24T16:09:32.4024462Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4024579Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4024665Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4024740Z         try:
2025-02-24T16:09:32.4024879Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4024965Z         except KeyError:
2025-02-24T16:09:32.4025103Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4025176Z     
2025-02-24T16:09:32.4025262Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4025364Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4025456Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4025589Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4025678Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4025781Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4025900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4025904Z 
2025-02-24T16:09:32.4026038Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4026156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4026160Z 
2025-02-24T16:09:32.4026402Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4026489Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4026600Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4026682Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4026827Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4026915Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4027022Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4027104Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4027178Z err_msg = None
2025-02-24T16:09:32.4027183Z 
2025-02-24T16:09:32.4027298Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4027384Z         if err_msg is None:
2025-02-24T16:09:32.4027481Z             if left.shape != right.shape:
2025-02-24T16:09:32.4027569Z                 raise_assert_detail(
2025-02-24T16:09:32.4027712Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4027783Z                 )
2025-02-24T16:09:32.4027850Z     
2025-02-24T16:09:32.4027925Z             diff = 0
2025-02-24T16:09:32.4028043Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4028128Z                 # count up differences
2025-02-24T16:09:32.4028303Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4028380Z                     diff += 1
2025-02-24T16:09:32.4028453Z     
2025-02-24T16:09:32.4028540Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4028680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4028972Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4029077Z E           AssertionError: Series are different
2025-02-24T16:09:32.4029149Z E           
2025-02-24T16:09:32.4029250Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.4029726Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4030112Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4030496Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4030505Z 
2025-02-24T16:09:32.4030816Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4031023Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T16:09:32.4031027Z 
2025-02-24T16:09:32.4031154Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4031286Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4031390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4031521Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4031647Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4031744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4031822Z err_msg = None
2025-02-24T16:09:32.4031826Z 
2025-02-24T16:09:32.4031939Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4032019Z         if err_msg is None:
2025-02-24T16:09:32.4032118Z             if left.shape != right.shape:
2025-02-24T16:09:32.4032202Z                 raise_assert_detail(
2025-02-24T16:09:32.4032347Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4032420Z                 )
2025-02-24T16:09:32.4032495Z     
2025-02-24T16:09:32.4032570Z             diff = 0
2025-02-24T16:09:32.4032684Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4032775Z                 # count up differences
2025-02-24T16:09:32.4032946Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4033028Z                     diff += 1
2025-02-24T16:09:32.4033096Z     
2025-02-24T16:09:32.4033190Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4033329Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4033499Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4033616Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4033687Z E           
2025-02-24T16:09:32.4033805Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4034161Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4034497Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4034502Z 
2025-02-24T16:09:32.4034808Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4034811Z 
2025-02-24T16:09:32.4034984Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4034991Z 
2025-02-24T16:09:32.4035215Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dfa40>
2025-02-24T16:09:32.4035421Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>, attr = 'nu'
2025-02-24T16:09:32.4035425Z 
2025-02-24T16:09:32.4035563Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4035681Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4035776Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4035846Z         try:
2025-02-24T16:09:32.4035993Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4036071Z         except KeyError:
2025-02-24T16:09:32.4036214Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4036378Z     
2025-02-24T16:09:32.4036471Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4036567Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4036653Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4036790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4036875Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4036968Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4037076Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4037085Z 
2025-02-24T16:09:32.4037213Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4037329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4037481Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4037555Z     ???
2025-02-24T16:09:32.4037664Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4037668Z 
2025-02-24T16:09:32.4037740Z >   ???
2025-02-24T16:09:32.4037875Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4037942Z E   
2025-02-24T16:09:32.4038073Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4038186Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4038260Z E          ...
2025-02-24T16:09:32.4038346Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4038484Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4038598Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4038668Z E          ...
2025-02-24T16:09:32.4038756Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4038881Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4038992Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4038996Z 
2025-02-24T16:09:32.4039089Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4039308Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T16:09:32.4039312Z 
2025-02-24T16:09:32.4039443Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4039689Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4039788Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4039924Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4040048Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4040245Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4040321Z err_msg = None
2025-02-24T16:09:32.4040325Z 
2025-02-24T16:09:32.4040440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4040522Z         if err_msg is None:
2025-02-24T16:09:32.4040619Z             if left.shape != right.shape:
2025-02-24T16:09:32.4040707Z                 raise_assert_detail(
2025-02-24T16:09:32.4040856Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4040929Z                 )
2025-02-24T16:09:32.4041001Z     
2025-02-24T16:09:32.4041071Z             diff = 0
2025-02-24T16:09:32.4041187Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4041275Z                 # count up differences
2025-02-24T16:09:32.4041448Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4041530Z                     diff += 1
2025-02-24T16:09:32.4041597Z     
2025-02-24T16:09:32.4041693Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4041828Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4042002Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4042117Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4042193Z E           
2025-02-24T16:09:32.4042308Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4042571Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4042844Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4042849Z 
2025-02-24T16:09:32.4043405Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4043413Z 
2025-02-24T16:09:32.4043703Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4043714Z 
2025-02-24T16:09:32.4044090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dfb00>
2025-02-24T16:09:32.4044266Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4044350Z attr = 'wavelength_cm'
2025-02-24T16:09:32.4044354Z 
2025-02-24T16:09:32.4044498Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4044612Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4044700Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4044773Z         try:
2025-02-24T16:09:32.4044921Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4045005Z         except KeyError:
2025-02-24T16:09:32.4045144Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4045218Z     
2025-02-24T16:09:32.4045306Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4045403Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4045491Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4045744Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4045836Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4045926Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4046043Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4046047Z 
2025-02-24T16:09:32.4046173Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4046402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4046666Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4046743Z     ???
2025-02-24T16:09:32.4046858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4046863Z 
2025-02-24T16:09:32.4046931Z >   ???
2025-02-24T16:09:32.4047061Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4047128Z E   
2025-02-24T16:09:32.4047264Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4047385Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4047463Z E          ...
2025-02-24T16:09:32.4047551Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4047685Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4047797Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4047869Z E          ...
2025-02-24T16:09:32.4047989Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4048116Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4048225Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4048230Z 
2025-02-24T16:09:32.4048319Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4048534Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T16:09:32.4048538Z 
2025-02-24T16:09:32.4048670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4048806Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4048907Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4049043Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4049171Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4049271Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4049344Z err_msg = None
2025-02-24T16:09:32.4049348Z 
2025-02-24T16:09:32.4049466Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4049547Z         if err_msg is None:
2025-02-24T16:09:32.4049645Z             if left.shape != right.shape:
2025-02-24T16:09:32.4049728Z                 raise_assert_detail(
2025-02-24T16:09:32.4049877Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4049953Z                 )
2025-02-24T16:09:32.4050020Z     
2025-02-24T16:09:32.4050095Z             diff = 0
2025-02-24T16:09:32.4050208Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4050298Z                 # count up differences
2025-02-24T16:09:32.4050472Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4050553Z                     diff += 1
2025-02-24T16:09:32.4050626Z     
2025-02-24T16:09:32.4050717Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4050860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4051033Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4051151Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4051221Z E           
2025-02-24T16:09:32.4051336Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4051723Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4052054Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4052064Z 
2025-02-24T16:09:32.4052374Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4052378Z 
2025-02-24T16:09:32.4052556Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4052564Z 
2025-02-24T16:09:32.4052792Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dfbc0>
2025-02-24T16:09:32.4053003Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>, attr = 'f_lu'
2025-02-24T16:09:32.4053007Z 
2025-02-24T16:09:32.4053149Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4053270Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4053358Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4053428Z         try:
2025-02-24T16:09:32.4053575Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4053655Z         except KeyError:
2025-02-24T16:09:32.4053799Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4053871Z     
2025-02-24T16:09:32.4053960Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4054058Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4054147Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4054287Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4054373Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4054467Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4054580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4054585Z 
2025-02-24T16:09:32.4054709Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4054826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4054974Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4055045Z     ???
2025-02-24T16:09:32.4055156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4055160Z 
2025-02-24T16:09:32.4055226Z >   ???
2025-02-24T16:09:32.4055355Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4055422Z E   
2025-02-24T16:09:32.4055553Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4055667Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4055741Z E          ...
2025-02-24T16:09:32.4055832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4055962Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4056074Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4056145Z E          ...
2025-02-24T16:09:32.4056235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4056495Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4056611Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4056615Z 
2025-02-24T16:09:32.4056709Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4056924Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T16:09:32.4056928Z 
2025-02-24T16:09:32.4057063Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4057311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4057406Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4057545Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4057668Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4057863Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4057941Z err_msg = None
2025-02-24T16:09:32.4057945Z 
2025-02-24T16:09:32.4058062Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4058149Z         if err_msg is None:
2025-02-24T16:09:32.4058246Z             if left.shape != right.shape:
2025-02-24T16:09:32.4058335Z                 raise_assert_detail(
2025-02-24T16:09:32.4058481Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4058560Z                 )
2025-02-24T16:09:32.4058627Z     
2025-02-24T16:09:32.4058702Z             diff = 0
2025-02-24T16:09:32.4058816Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4058903Z                 # count up differences
2025-02-24T16:09:32.4059080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4059157Z                     diff += 1
2025-02-24T16:09:32.4059230Z     
2025-02-24T16:09:32.4059323Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4059467Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4059639Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4059751Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4059827Z E           
2025-02-24T16:09:32.4059937Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4060208Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4060479Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4060484Z 
2025-02-24T16:09:32.4060792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4060796Z 
2025-02-24T16:09:32.4060970Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4060977Z 
2025-02-24T16:09:32.4061206Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600804380>
2025-02-24T16:09:32.4061374Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4061455Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.4061459Z 
2025-02-24T16:09:32.4061596Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4061720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4061809Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4061881Z         try:
2025-02-24T16:09:32.4062027Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4062107Z         except KeyError:
2025-02-24T16:09:32.4062249Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4062318Z     
2025-02-24T16:09:32.4062409Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4062507Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4062779Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4062914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4063000Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4063093Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4063203Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4063280Z             else:
2025-02-24T16:09:32.4063380Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4063487Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4063582Z 
2025-02-24T16:09:32.4063713Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4063825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4063974Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4064047Z     ???
2025-02-24T16:09:32.4064156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4064164Z 
2025-02-24T16:09:32.4064234Z >   ???
2025-02-24T16:09:32.4064360Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4064431Z E   
2025-02-24T16:09:32.4064558Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4064671Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4064744Z E          ...
2025-02-24T16:09:32.4064830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4064968Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4065078Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4065153Z E          ...
2025-02-24T16:09:32.4065238Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4065368Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4065476Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4065480Z 
2025-02-24T16:09:32.4065573Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4065791Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T16:09:32.4065795Z 
2025-02-24T16:09:32.4065924Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4066054Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4066151Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4066383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4066510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4066602Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4066678Z err_msg = None
2025-02-24T16:09:32.4066682Z 
2025-02-24T16:09:32.4066794Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4066880Z         if err_msg is None:
2025-02-24T16:09:32.4066977Z             if left.shape != right.shape:
2025-02-24T16:09:32.4067061Z                 raise_assert_detail(
2025-02-24T16:09:32.4067216Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4067285Z                 )
2025-02-24T16:09:32.4067357Z     
2025-02-24T16:09:32.4067431Z             diff = 0
2025-02-24T16:09:32.4067540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4067630Z                 # count up differences
2025-02-24T16:09:32.4067802Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4067883Z                     diff += 1
2025-02-24T16:09:32.4067949Z     
2025-02-24T16:09:32.4068041Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4068180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4068351Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4068587Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4068658Z E           
2025-02-24T16:09:32.4068775Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4069144Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4069410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4069414Z 
2025-02-24T16:09:32.4069724Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4069731Z 
2025-02-24T16:09:32.4069905Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4069910Z 
2025-02-24T16:09:32.4070136Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600804440>
2025-02-24T16:09:32.4070310Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4070388Z attr = 'beta_sobolev'
2025-02-24T16:09:32.4070392Z 
2025-02-24T16:09:32.4070534Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4070652Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4070736Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4070810Z         try:
2025-02-24T16:09:32.4070950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4071033Z         except KeyError:
2025-02-24T16:09:32.4071169Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4071244Z     
2025-02-24T16:09:32.4071336Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4071430Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4071525Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4071657Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4071752Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4071842Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4071956Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4072033Z             else:
2025-02-24T16:09:32.4072130Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4072239Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4072243Z 
2025-02-24T16:09:32.4072368Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4072485Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4072639Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4072707Z     ???
2025-02-24T16:09:32.4072821Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4072825Z 
2025-02-24T16:09:32.4072894Z >   ???
2025-02-24T16:09:32.4073028Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4073097Z E   
2025-02-24T16:09:32.4073235Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4073358Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4073431Z E          ...
2025-02-24T16:09:32.4073526Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4073661Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4073778Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4073849Z E          ...
2025-02-24T16:09:32.4073940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4074161Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4074268Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4074273Z 
2025-02-24T16:09:32.4074369Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4074584Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T16:09:32.4074588Z 
2025-02-24T16:09:32.4074722Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4074939Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4075122Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4075359Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4075571Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4075743Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4075872Z err_msg = None
2025-02-24T16:09:32.4075878Z 
2025-02-24T16:09:32.4076066Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4076176Z         if err_msg is None:
2025-02-24T16:09:32.4076365Z             if left.shape != right.shape:
2025-02-24T16:09:32.4076461Z                 raise_assert_detail(
2025-02-24T16:09:32.4076611Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4076681Z                 )
2025-02-24T16:09:32.4076757Z     
2025-02-24T16:09:32.4076828Z             diff = 0
2025-02-24T16:09:32.4076945Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4077033Z                 # count up differences
2025-02-24T16:09:32.4077210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4077290Z                     diff += 1
2025-02-24T16:09:32.4077357Z     
2025-02-24T16:09:32.4077456Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4077595Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4077773Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4077889Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4077967Z E           
2025-02-24T16:09:32.4078085Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4078353Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4078621Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4078628Z 
2025-02-24T16:09:32.4078945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4078949Z 
2025-02-24T16:09:32.4079122Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4079126Z 
2025-02-24T16:09:32.4079356Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008045c0>
2025-02-24T16:09:32.4079530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4079609Z attr = 'j_blues'
2025-02-24T16:09:32.4079613Z 
2025-02-24T16:09:32.4079758Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4079871Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4079959Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4080160Z         try:
2025-02-24T16:09:32.4080312Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4080397Z         except KeyError:
2025-02-24T16:09:32.4080543Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4080616Z     
2025-02-24T16:09:32.4080703Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4080801Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4080891Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4081130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4081224Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4081315Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4081426Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4081498Z             else:
2025-02-24T16:09:32.4081599Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4081707Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4081714Z 
2025-02-24T16:09:32.4081844Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4081962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4082111Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4082185Z     ???
2025-02-24T16:09:32.4082294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4082298Z 
2025-02-24T16:09:32.4082372Z >   ???
2025-02-24T16:09:32.4082503Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4082574Z E   
2025-02-24T16:09:32.4082705Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4082818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4082892Z E          ...
2025-02-24T16:09:32.4082983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4083124Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4083246Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4083315Z E          ...
2025-02-24T16:09:32.4083405Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4083533Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4083641Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4083646Z 
2025-02-24T16:09:32.4083734Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4084005Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T16:09:32.4084010Z 
2025-02-24T16:09:32.4084146Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4084275Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4084376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4084510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4084643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4084740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4084815Z err_msg = None
2025-02-24T16:09:32.4084819Z 
2025-02-24T16:09:32.4084950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4085099Z         if err_msg is None:
2025-02-24T16:09:32.4085272Z             if left.shape != right.shape:
2025-02-24T16:09:32.4085418Z                 raise_assert_detail(
2025-02-24T16:09:32.4085661Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4085784Z                 )
2025-02-24T16:09:32.4085898Z     
2025-02-24T16:09:32.4086027Z             diff = 0
2025-02-24T16:09:32.4086189Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4086382Z                 # count up differences
2025-02-24T16:09:32.4086741Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4086820Z                     diff += 1
2025-02-24T16:09:32.4086891Z     
2025-02-24T16:09:32.4086980Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4087123Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4087294Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4087529Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4087606Z E           
2025-02-24T16:09:32.4087721Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4087985Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4088251Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4088265Z 
2025-02-24T16:09:32.4088582Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4088587Z 
2025-02-24T16:09:32.4088765Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4088769Z 
2025-02-24T16:09:32.4088996Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805340>
2025-02-24T16:09:32.4089171Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4089248Z attr = 'lines'
2025-02-24T16:09:32.4089253Z 
2025-02-24T16:09:32.4089396Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4089517Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4089605Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4089680Z         try:
2025-02-24T16:09:32.4089825Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4089908Z         except KeyError:
2025-02-24T16:09:32.4090052Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4090120Z     
2025-02-24T16:09:32.4090216Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4090310Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4090402Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4090538Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4090625Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4090718Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4090830Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4090912Z             else:
2025-02-24T16:09:32.4091008Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4091122Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4091127Z 
2025-02-24T16:09:32.4091261Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4091376Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4091525Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4091599Z     ???
2025-02-24T16:09:32.4091714Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4091718Z 
2025-02-24T16:09:32.4091789Z >   ???
2025-02-24T16:09:32.4091919Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4091991Z E   
2025-02-24T16:09:32.4092125Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4092241Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4092402Z E          ...
2025-02-24T16:09:32.4092495Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4092630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4092743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4092819Z E          ...
2025-02-24T16:09:32.4092905Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4093033Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4093210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4093215Z 
2025-02-24T16:09:32.4093313Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4093642Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T16:09:32.4093646Z 
2025-02-24T16:09:32.4093874Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805400>
2025-02-24T16:09:32.4094053Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4094142Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.4094146Z 
2025-02-24T16:09:32.4094291Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4094488Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4094631Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4094751Z         try:
2025-02-24T16:09:32.4094988Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4095131Z         except KeyError:
2025-02-24T16:09:32.4095362Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4095481Z     
2025-02-24T16:09:32.4095576Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4095669Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4095764Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4095904Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4095996Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4096085Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4096198Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4096202Z 
2025-02-24T16:09:32.4096458Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4096573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4096577Z 
2025-02-24T16:09:32.4096723Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4096809Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4096922Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4097007Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4097150Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4097240Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4097349Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4097432Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4097511Z err_msg = None
2025-02-24T16:09:32.4097515Z 
2025-02-24T16:09:32.4097625Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4097707Z         if err_msg is None:
2025-02-24T16:09:32.4097806Z             if left.shape != right.shape:
2025-02-24T16:09:32.4097895Z                 raise_assert_detail(
2025-02-24T16:09:32.4098045Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4098119Z                 )
2025-02-24T16:09:32.4098190Z     
2025-02-24T16:09:32.4098264Z             diff = 0
2025-02-24T16:09:32.4098379Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4098469Z                 # count up differences
2025-02-24T16:09:32.4098647Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4098853Z                     diff += 1
2025-02-24T16:09:32.4098926Z     
2025-02-24T16:09:32.4099017Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4099156Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4099337Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4099441Z E           AssertionError: Series are different
2025-02-24T16:09:32.4099516Z E           
2025-02-24T16:09:32.4099719Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.4100102Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4100446Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4100787Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4100792Z 
2025-02-24T16:09:32.4101103Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4101427Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T16:09:32.4101432Z 
2025-02-24T16:09:32.4101663Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008054c0>
2025-02-24T16:09:32.4101833Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4101927Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.4101931Z 
2025-02-24T16:09:32.4102068Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4102194Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4102282Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4102353Z         try:
2025-02-24T16:09:32.4102497Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4102577Z         except KeyError:
2025-02-24T16:09:32.4102718Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4102785Z     
2025-02-24T16:09:32.4102877Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4102974Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4103063Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4103200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4103285Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4103379Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4103489Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4103493Z 
2025-02-24T16:09:32.4103625Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4103745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4103750Z 
2025-02-24T16:09:32.4103885Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4103973Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4104084Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4104254Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4104398Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4104481Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4104592Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4104671Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4104749Z err_msg = None
2025-02-24T16:09:32.4104753Z 
2025-02-24T16:09:32.4104938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4105026Z         if err_msg is None:
2025-02-24T16:09:32.4105122Z             if left.shape != right.shape:
2025-02-24T16:09:32.4105206Z                 raise_assert_detail(
2025-02-24T16:09:32.4105357Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4105426Z                 )
2025-02-24T16:09:32.4105498Z     
2025-02-24T16:09:32.4105574Z             diff = 0
2025-02-24T16:09:32.4105690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4105781Z                 # count up differences
2025-02-24T16:09:32.4105952Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4106033Z                     diff += 1
2025-02-24T16:09:32.4106102Z     
2025-02-24T16:09:32.4106191Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4106423Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4106604Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4106714Z E           AssertionError: Series are different
2025-02-24T16:09:32.4106785Z E           
2025-02-24T16:09:32.4106890Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.4107261Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4107650Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4108029Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4108037Z 
2025-02-24T16:09:32.4108346Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4108592Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T16:09:32.4108596Z 
2025-02-24T16:09:32.4108735Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4108866Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4108966Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4109103Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4109226Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4109461Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4109535Z err_msg = None
2025-02-24T16:09:32.4109542Z 
2025-02-24T16:09:32.4109652Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4109737Z         if err_msg is None:
2025-02-24T16:09:32.4109833Z             if left.shape != right.shape:
2025-02-24T16:09:32.4109922Z                 raise_assert_detail(
2025-02-24T16:09:32.4110168Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4110248Z                 )
2025-02-24T16:09:32.4110320Z     
2025-02-24T16:09:32.4110393Z             diff = 0
2025-02-24T16:09:32.4110508Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4110598Z                 # count up differences
2025-02-24T16:09:32.4110818Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4110961Z                     diff += 1
2025-02-24T16:09:32.4111082Z     
2025-02-24T16:09:32.4111237Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4111472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4111772Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4111941Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4112017Z E           
2025-02-24T16:09:32.4112134Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4112403Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4112672Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4112680Z 
2025-02-24T16:09:32.4112990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4112998Z 
2025-02-24T16:09:32.4113174Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4113181Z 
2025-02-24T16:09:32.4113410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805700>
2025-02-24T16:09:32.4113614Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>, attr = 'nu'
2025-02-24T16:09:32.4113618Z 
2025-02-24T16:09:32.4113763Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4113883Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4113972Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4114047Z         try:
2025-02-24T16:09:32.4114190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4114277Z         except KeyError:
2025-02-24T16:09:32.4114415Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4114489Z     
2025-02-24T16:09:32.4114579Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4114674Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4114768Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4114904Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4114995Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4115085Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4115203Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4115207Z 
2025-02-24T16:09:32.4115344Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4115553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4115706Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4115776Z     ???
2025-02-24T16:09:32.4115891Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4115895Z 
2025-02-24T16:09:32.4115970Z >   ???
2025-02-24T16:09:32.4116100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4116173Z E   
2025-02-24T16:09:32.4116527Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4116652Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4116725Z E          ...
2025-02-24T16:09:32.4116819Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4116955Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4117069Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4117145Z E          ...
2025-02-24T16:09:32.4117235Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4117366Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4117472Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4117476Z 
2025-02-24T16:09:32.4117571Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4117866Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T16:09:32.4117870Z 
2025-02-24T16:09:32.4118004Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4118139Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4118236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4118370Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4118499Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4118594Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4118671Z err_msg = None
2025-02-24T16:09:32.4118675Z 
2025-02-24T16:09:32.4118786Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4118872Z         if err_msg is None:
2025-02-24T16:09:32.4118975Z             if left.shape != right.shape:
2025-02-24T16:09:32.4119062Z                 raise_assert_detail(
2025-02-24T16:09:32.4119218Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4119289Z                 )
2025-02-24T16:09:32.4119361Z     
2025-02-24T16:09:32.4119433Z             diff = 0
2025-02-24T16:09:32.4119550Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4119642Z                 # count up differences
2025-02-24T16:09:32.4119816Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4119900Z                     diff += 1
2025-02-24T16:09:32.4119967Z     
2025-02-24T16:09:32.4120061Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4120199Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4120415Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4120618Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4120738Z E           
2025-02-24T16:09:32.4120931Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4121407Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4121727Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4121869Z 
2025-02-24T16:09:32.4122190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4122194Z 
2025-02-24T16:09:32.4122366Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4122444Z 
2025-02-24T16:09:32.4122679Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008057c0>
2025-02-24T16:09:32.4122855Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4122936Z attr = 'wavelength_cm'
2025-02-24T16:09:32.4122940Z 
2025-02-24T16:09:32.4123083Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4123200Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4123293Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4123367Z         try:
2025-02-24T16:09:32.4123510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4123594Z         except KeyError:
2025-02-24T16:09:32.4123733Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4123807Z     
2025-02-24T16:09:32.4123894Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4123994Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4124089Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4124220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4124313Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4124404Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4124518Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4124523Z 
2025-02-24T16:09:32.4124648Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4124771Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4124920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4124992Z     ???
2025-02-24T16:09:32.4125105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4125109Z 
2025-02-24T16:09:32.4125177Z >   ???
2025-02-24T16:09:32.4125309Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4125381Z E   
2025-02-24T16:09:32.4125512Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4125628Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4125700Z E          ...
2025-02-24T16:09:32.4125792Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4125922Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4126041Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4126119Z E          ...
2025-02-24T16:09:32.4126205Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4126462Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4126570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4126574Z 
2025-02-24T16:09:32.4126668Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4126925Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T16:09:32.4126933Z 
2025-02-24T16:09:32.4127066Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4127196Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4127292Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4127429Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4127675Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4127770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4127880Z err_msg = None
2025-02-24T16:09:32.4127887Z 
2025-02-24T16:09:32.4128074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4128204Z         if err_msg is None:
2025-02-24T16:09:32.4128351Z             if left.shape != right.shape:
2025-02-24T16:09:32.4128484Z                 raise_assert_detail(
2025-02-24T16:09:32.4128875Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4128990Z                 )
2025-02-24T16:09:32.4129101Z     
2025-02-24T16:09:32.4129214Z             diff = 0
2025-02-24T16:09:32.4129396Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4129537Z                 # count up differences
2025-02-24T16:09:32.4129807Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4129938Z                     diff += 1
2025-02-24T16:09:32.4130048Z     
2025-02-24T16:09:32.4130190Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4130396Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4130675Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4130850Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4130969Z E           
2025-02-24T16:09:32.4131155Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4131576Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4132079Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4132096Z 
2025-02-24T16:09:32.4132647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4132655Z 
2025-02-24T16:09:32.4132955Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4132964Z 
2025-02-24T16:09:32.4133348Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805880>
2025-02-24T16:09:32.4133570Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>, attr = 'f_lu'
2025-02-24T16:09:32.4133575Z 
2025-02-24T16:09:32.4133721Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4133844Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4133934Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4134010Z         try:
2025-02-24T16:09:32.4134156Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4134243Z         except KeyError:
2025-02-24T16:09:32.4134389Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4134460Z     
2025-02-24T16:09:32.4134556Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4134651Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4134749Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4134883Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4134974Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4135069Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4135184Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4135189Z 
2025-02-24T16:09:32.4135318Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4135582Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4135735Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4135810Z     ???
2025-02-24T16:09:32.4135920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4135924Z 
2025-02-24T16:09:32.4135998Z >   ???
2025-02-24T16:09:32.4136127Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4136198Z E   
2025-02-24T16:09:32.4136693Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4136825Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4136905Z E          ...
2025-02-24T16:09:32.4136993Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4137128Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4137247Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4137328Z E          ...
2025-02-24T16:09:32.4137416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4137546Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4137660Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4137665Z 
2025-02-24T16:09:32.4137756Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4138052Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T16:09:32.4138057Z 
2025-02-24T16:09:32.4138194Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4138327Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4138430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4138567Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4138702Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4138850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4138991Z err_msg = None
2025-02-24T16:09:32.4138997Z 
2025-02-24T16:09:32.4139193Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4139330Z         if err_msg is None:
2025-02-24T16:09:32.4139496Z             if left.shape != right.shape:
2025-02-24T16:09:32.4139636Z                 raise_assert_detail(
2025-02-24T16:09:32.4139895Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4140013Z                 )
2025-02-24T16:09:32.4140093Z     
2025-02-24T16:09:32.4140172Z             diff = 0
2025-02-24T16:09:32.4140289Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4140383Z                 # count up differences
2025-02-24T16:09:32.4140558Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4140645Z                     diff += 1
2025-02-24T16:09:32.4140715Z     
2025-02-24T16:09:32.4140811Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4140954Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4141128Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4141248Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4141321Z E           
2025-02-24T16:09:32.4141446Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4141714Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4141981Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4142110Z 
2025-02-24T16:09:32.4158502Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4158518Z 
2025-02-24T16:09:32.4159044Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4159056Z 
2025-02-24T16:09:32.4159487Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600806000>
2025-02-24T16:09:32.4159792Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4159933Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.4159940Z 
2025-02-24T16:09:32.4160188Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4160406Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4160560Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4160683Z         try:
2025-02-24T16:09:32.4160947Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4161095Z         except KeyError:
2025-02-24T16:09:32.4161349Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4161475Z     
2025-02-24T16:09:32.4161631Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4161810Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4161969Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4162218Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4162374Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4162531Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4162733Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4162854Z             else:
2025-02-24T16:09:32.4163035Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4163230Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4163245Z 
2025-02-24T16:09:32.4163471Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4163682Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4163953Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4164077Z     ???
2025-02-24T16:09:32.4164283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4164291Z 
2025-02-24T16:09:32.4164417Z >   ???
2025-02-24T16:09:32.4164633Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4164746Z E   
2025-02-24T16:09:32.4164962Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4165083Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4165157Z E          ...
2025-02-24T16:09:32.4165256Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4165399Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4165520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4165590Z E          ...
2025-02-24T16:09:32.4165684Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4165815Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4165931Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4165940Z 
2025-02-24T16:09:32.4166038Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4166548Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T16:09:32.4166554Z 
2025-02-24T16:09:32.4166700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4166836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4167151Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4167298Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4167423Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4167522Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4167599Z err_msg = None
2025-02-24T16:09:32.4167603Z 
2025-02-24T16:09:32.4167831Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4167918Z         if err_msg is None:
2025-02-24T16:09:32.4168023Z             if left.shape != right.shape:
2025-02-24T16:09:32.4168112Z                 raise_assert_detail(
2025-02-24T16:09:32.4168294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4168429Z                 )
2025-02-24T16:09:32.4168538Z     
2025-02-24T16:09:32.4168669Z             diff = 0
2025-02-24T16:09:32.4168790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4168884Z                 # count up differences
2025-02-24T16:09:32.4169069Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4169147Z                     diff += 1
2025-02-24T16:09:32.4169217Z     
2025-02-24T16:09:32.4169306Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4169451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4169637Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4169755Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4169831Z E           
2025-02-24T16:09:32.4169950Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4170224Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4170502Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4170511Z 
2025-02-24T16:09:32.4170837Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4170842Z 
2025-02-24T16:09:32.4171027Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4171032Z 
2025-02-24T16:09:32.4171269Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008060c0>
2025-02-24T16:09:32.4171438Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4171522Z attr = 'beta_sobolev'
2025-02-24T16:09:32.4171526Z 
2025-02-24T16:09:32.4171671Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4171796Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4171883Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4171958Z         try:
2025-02-24T16:09:32.4172107Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4172190Z         except KeyError:
2025-02-24T16:09:32.4172337Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4172405Z     
2025-02-24T16:09:32.4172499Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4172593Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4172688Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4172827Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4173007Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4173101Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4173213Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4173289Z             else:
2025-02-24T16:09:32.4173385Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4173497Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4173502Z 
2025-02-24T16:09:32.4173634Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4173820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4173977Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4174046Z     ???
2025-02-24T16:09:32.4174161Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4174165Z 
2025-02-24T16:09:32.4174235Z >   ???
2025-02-24T16:09:32.4174365Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4174441Z E   
2025-02-24T16:09:32.4174570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4174685Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4174755Z E          ...
2025-02-24T16:09:32.4174847Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4174982Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4175094Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4175168Z E          ...
2025-02-24T16:09:32.4175256Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4175386Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4175494Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4175498Z 
2025-02-24T16:09:32.4175588Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4175863Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T16:09:32.4175870Z 
2025-02-24T16:09:32.4176004Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4176141Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4176244Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4176587Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4176725Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4176822Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4176905Z err_msg = None
2025-02-24T16:09:32.4176909Z 
2025-02-24T16:09:32.4177024Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4177109Z         if err_msg is None:
2025-02-24T16:09:32.4177211Z             if left.shape != right.shape:
2025-02-24T16:09:32.4177296Z                 raise_assert_detail(
2025-02-24T16:09:32.4177459Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4177528Z                 )
2025-02-24T16:09:32.4177599Z     
2025-02-24T16:09:32.4177670Z             diff = 0
2025-02-24T16:09:32.4177790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4177884Z                 # count up differences
2025-02-24T16:09:32.4178058Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4178142Z                     diff += 1
2025-02-24T16:09:32.4178208Z     
2025-02-24T16:09:32.4178301Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4178439Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4178617Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4178737Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4178935Z E           
2025-02-24T16:09:32.4179054Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4179320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4179685Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4179691Z 
2025-02-24T16:09:32.4180018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4180022Z 
2025-02-24T16:09:32.4180209Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4180213Z 
2025-02-24T16:09:32.4180437Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600806240>
2025-02-24T16:09:32.4180612Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4180686Z attr = 'j_blues'
2025-02-24T16:09:32.4180689Z 
2025-02-24T16:09:32.4180839Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4180959Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4181052Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4181128Z         try:
2025-02-24T16:09:32.4181271Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4181359Z         except KeyError:
2025-02-24T16:09:32.4181500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4181570Z     
2025-02-24T16:09:32.4181659Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4181761Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4181856Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4181994Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4182087Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4182177Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4182293Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4182370Z             else:
2025-02-24T16:09:32.4182471Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4182584Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4182588Z 
2025-02-24T16:09:32.4182715Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4182834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4182983Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4183058Z     ???
2025-02-24T16:09:32.4183181Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4183185Z 
2025-02-24T16:09:32.4183253Z >   ???
2025-02-24T16:09:32.4183389Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4183456Z E   
2025-02-24T16:09:32.4183589Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4183699Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4183775Z E          ...
2025-02-24T16:09:32.4183871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4184001Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4184118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4184188Z E          ...
2025-02-24T16:09:32.4184279Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4184403Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4184511Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4184598Z 
2025-02-24T16:09:32.4184696Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4184865Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T16:09:32.4184868Z 
2025-02-24T16:09:32.4185109Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4185201Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.4185483Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05e8c541a0>
2025-02-24T16:09:32.4185577Z 
2025-02-24T16:09:32.4185735Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4185908Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4186037Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4186172Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4186467Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4186600Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4186692Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4186802Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4186806Z 
2025-02-24T16:09:32.4186911Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4187028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4187032Z 
2025-02-24T16:09:32.4187361Z args = (<function assert_allclose.<locals>.compare at 0x7f05c62c7a60>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-24T16:09:32.4187435Z         0.01476858],
2025-02-24T16:09:32.4187575Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T16:09:32.4187647Z         0.01473787]]))
2025-02-24T16:09:32.4187902Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4187910Z 
2025-02-24T16:09:32.4187990Z     @wraps(func)
2025-02-24T16:09:32.4188074Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4188167Z         with self._recreate_cm():
2025-02-24T16:09:32.4188255Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4188346Z E           AssertionError: 
2025-02-24T16:09:32.4188456Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4188531Z E           
2025-02-24T16:09:32.4188642Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:09:32.4188740Z E           Max absolute difference: 1.
2025-02-24T16:09:32.4188833Z E           Max relative difference: 1.
2025-02-24T16:09:32.4188965Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189074Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189178Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.4189305Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189409Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189509Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.4189514Z 
2025-02-24T16:09:32.4189725Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4189908Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T16:09:32.4189928Z 
2025-02-24T16:09:32.4190340Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4190496Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.4190964Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f236e600>
2025-02-24T16:09:32.4190971Z 
2025-02-24T16:09:32.4191188Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4191509Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4191633Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4191772Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4191890Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4191979Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4192068Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4192276Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4192281Z 
2025-02-24T16:09:32.4192391Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4192502Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4192506Z 
2025-02-24T16:09:32.4192916Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a17d80>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T16:09:32.4193169Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4193178Z 
2025-02-24T16:09:32.4193251Z     @wraps(func)
2025-02-24T16:09:32.4193338Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4193422Z         with self._recreate_cm():
2025-02-24T16:09:32.4193513Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4193597Z E           AssertionError: 
2025-02-24T16:09:32.4193709Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4193782Z E           
2025-02-24T16:09:32.4193889Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:09:32.4193987Z E           Max absolute difference: 4005
2025-02-24T16:09:32.4194086Z E           Max relative difference: 26.00649351
2025-02-24T16:09:32.4194199Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.4194303Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.4194310Z 
2025-02-24T16:09:32.4194521Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4194685Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T16:09:32.4194689Z 
2025-02-24T16:09:32.4194919Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4195014Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.4195289Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f06008619d0>
2025-02-24T16:09:32.4195293Z 
2025-02-24T16:09:32.4195447Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4195622Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4195746Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4195879Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4195997Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4196093Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4196187Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4196410Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4196415Z 
2025-02-24T16:09:32.4196526Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4196637Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4196641Z 
2025-02-24T16:09:32.4197046Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a15a80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T16:09:32.4197297Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4197301Z 
2025-02-24T16:09:32.4197379Z     @wraps(func)
2025-02-24T16:09:32.4197462Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4197551Z         with self._recreate_cm():
2025-02-24T16:09:32.4197756Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4197844Z E           AssertionError: 
2025-02-24T16:09:32.4197952Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4198025Z E           
2025-02-24T16:09:32.4198129Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:09:32.4198221Z E           Max absolute difference: 4046
2025-02-24T16:09:32.4198325Z E           Max relative difference: 24.82208589
2025-02-24T16:09:32.4198553Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.4198663Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.4198667Z 
2025-02-24T16:09:32.4198870Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4199029Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T16:09:32.4199033Z 
2025-02-24T16:09:32.4199271Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4199351Z attr = 'beta_sobolev'
2025-02-24T16:09:32.4199627Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f2345880>
2025-02-24T16:09:32.4199631Z 
2025-02-24T16:09:32.4199771Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4199936Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4200057Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4200189Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4200312Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4200399Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4200493Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4200598Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4200602Z 
2025-02-24T16:09:32.4200706Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4200820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4200824Z 
2025-02-24T16:09:32.4201094Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a165c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4201170Z        [1., 1., .....,
2025-02-24T16:09:32.4201252Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4201328Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4201408Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:09:32.4201653Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4201658Z 
2025-02-24T16:09:32.4201735Z     @wraps(func)
2025-02-24T16:09:32.4201817Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4201906Z         with self._recreate_cm():
2025-02-24T16:09:32.4201996Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4202078Z E           AssertionError: 
2025-02-24T16:09:32.4202192Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4202262Z E           
2025-02-24T16:09:32.4202366Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.4202464Z E           Max absolute difference: 0.99984222
2025-02-24T16:09:32.4202570Z E           Max relative difference: 6337.12154973
2025-02-24T16:09:32.4202663Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4202746Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4202839Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.4202928Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4203012Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4203096Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.4203104Z 
2025-02-24T16:09:32.4203304Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4203549Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T16:09:32.4203553Z 
2025-02-24T16:09:32.4203790Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4203868Z attr = 'lines'
2025-02-24T16:09:32.4204144Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05c6269430>
2025-02-24T16:09:32.4204148Z 
2025-02-24T16:09:32.4204296Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4204538Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4204662Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4204796Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4204917Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4205007Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4205096Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4205202Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4205206Z 
2025-02-24T16:09:32.4205310Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4205422Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4205426Z 
2025-02-24T16:09:32.4205887Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a59bc0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T16:09:32.4205996Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T16:09:32.4206246Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4206250Z 
2025-02-24T16:09:32.4206432Z     @wraps(func)
2025-02-24T16:09:32.4206516Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4206606Z         with self._recreate_cm():
2025-02-24T16:09:32.4206691Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4206785Z E           AssertionError: 
2025-02-24T16:09:32.4206888Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4206961Z E           
2025-02-24T16:09:32.4207066Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:09:32.4207166Z E           Max absolute difference: 4.25260542e+12
2025-02-24T16:09:32.4207266Z E           Max relative difference: 18196.0085861
2025-02-24T16:09:32.4207415Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.4207509Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.4207649Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.4207797Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.4207886Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.4208018Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.4208026Z 
2025-02-24T16:09:32.4208318Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4208570Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T16:09:32.4208583Z 
2025-02-24T16:09:32.4208977Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4209104Z attr = 'f_lu'
2025-02-24T16:09:32.4209492Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05c62685c0>
2025-02-24T16:09:32.4209497Z 
2025-02-24T16:09:32.4209648Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4209814Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4209936Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4210071Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4210190Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4210412Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4210501Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4210605Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4210609Z 
2025-02-24T16:09:32.4210714Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4210820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4210824Z 
2025-02-24T16:09:32.4211425Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a142c0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T16:09:32.4211536Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T16:09:32.4211785Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4211790Z 
2025-02-24T16:09:32.4211869Z     @wraps(func)
2025-02-24T16:09:32.4211956Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4212045Z         with self._recreate_cm():
2025-02-24T16:09:32.4212130Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4212216Z E           AssertionError: 
2025-02-24T16:09:32.4212320Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4212392Z E           
2025-02-24T16:09:32.4212493Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:09:32.4212592Z E           Max absolute difference: 2.92713618
2025-02-24T16:09:32.4212696Z E           Max relative difference: 18196.0085861
2025-02-24T16:09:32.4212847Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.4212934Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.4213080Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.4213163Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.4213170Z 
2025-02-24T16:09:32.4213374Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4213524Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T16:09:32.4213528Z 
2025-02-24T16:09:32.4213761Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4213845Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.4214117Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05c62e0920>
2025-02-24T16:09:32.4214124Z 
2025-02-24T16:09:32.4214272Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4214438Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4214560Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4214690Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4214812Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4214905Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4214994Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4215097Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4215101Z 
2025-02-24T16:09:32.4215204Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4215315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4215319Z 
2025-02-24T16:09:32.4215787Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a59620>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T16:09:32.4215897Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T16:09:32.4216144Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4216148Z 
2025-02-24T16:09:32.4216221Z     @wraps(func)
2025-02-24T16:09:32.4216561Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4216651Z         with self._recreate_cm():
2025-02-24T16:09:32.4216740Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4216826Z E           AssertionError: 
2025-02-24T16:09:32.4216933Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4217006Z E           
2025-02-24T16:09:32.4217108Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:09:32.4217215Z E           Max absolute difference: 282815.33818472
2025-02-24T16:09:32.4217420Z E           Max relative difference: 4.12352828e+47
2025-02-24T16:09:32.4217573Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.4217664Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.4217799Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.4217945Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.4218036Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.4218164Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.4218168Z 
2025-02-24T16:09:32.4218378Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4218546Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T16:09:32.4218550Z 
2025-02-24T16:09:32.4218777Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4218859Z attr = 'iterations_w'
2025-02-24T16:09:32.4219127Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d5b17590>
2025-02-24T16:09:32.4219131Z 
2025-02-24T16:09:32.4219226Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4219296Z         "attr",
2025-02-24T16:09:32.4219367Z         [
2025-02-24T16:09:32.4219446Z             "iterations_w",
2025-02-24T16:09:32.4219531Z             "iterations_t_rad",
2025-02-24T16:09:32.4219638Z             "iterations_electron_densities",
2025-02-24T16:09:32.4219719Z             "iterations_t_inner",
2025-02-24T16:09:32.4219790Z         ],
2025-02-24T16:09:32.4219859Z     )
2025-02-24T16:09:32.4220059Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4220168Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:09:32.4220260Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4220344Z             actual = actual.value
2025-02-24T16:09:32.4220437Z         actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4220566Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4220744Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4220748Z 
2025-02-24T16:09:32.4220873Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:09:32.4220985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4221138Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4221213Z     ???
2025-02-24T16:09:32.4221318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4221322Z 
2025-02-24T16:09:32.4221393Z >   ???
2025-02-24T16:09:32.4221576Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.4221645Z E   
2025-02-24T16:09:32.4221810Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.4221888Z E   [index]: [0, 1]
2025-02-24T16:09:32.4221993Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:09:32.4222092Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:09:32.4222272Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.4222276Z 
2025-02-24T16:09:32.4222366Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4222522Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4223043Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4223499Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4223653Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:09:32.4223658Z 
2025-02-24T16:09:32.4223661Z 
2025-02-24T16:09:32.4223982Z Packets:                                                                                   4031/? [04:48<00:00, 10.42it/s]   [A
2025-02-24T16:09:32.4223987Z 
2025-02-24T16:09:32.4224217Z Packets:                                                                                   14224/? [04:49<00:00, 60.80it/s][A
2025-02-24T16:09:32.4224221Z 
2025-02-24T16:09:32.4224449Z Packets:                                                                                   24995/? [04:49<00:00, 136.76it/s][A
2025-02-24T16:09:32.4224457Z 
2025-02-24T16:09:32.4224680Z Packets:                                                                                   35624/? [04:49<00:00, 243.65it/s][A
2025-02-24T16:09:32.4225149Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:49<00:00, 101.68s/it]
2025-02-24T16:09:32.4225155Z 
2025-02-24T16:09:32.4225389Z Packets:                                                                                   44030/? [04:49<00:00, 243.65it/s][A
2025-02-24T16:09:32.4225393Z 
2025-02-24T16:09:32.4225619Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T16:09:32.4225628Z 
2025-02-24T16:09:32.4225888Z Packets:   ███████████████████▏                                                            9605/40000 [00:00<00:00, 35249.15it/s][A
2025-02-24T16:09:32.4225893Z 
2025-02-24T16:09:32.4226157Z Packets:   ██████████████████████████▎                                                     13130/40000 [00:00<00:00, 35240.00it/s][A
2025-02-24T16:09:32.4226173Z 
2025-02-24T16:09:32.4226841Z Packets:   █████████████████████████████████▎                                              16654/40000 [00:00<00:00, 35229.89it/s][A
2025-02-24T16:09:32.4226858Z 
2025-02-24T16:09:32.4227377Z Packets:   ████████████████████████████████████████▎                                       20177/40000 [00:00<00:00, 35106.78it/s][A
2025-02-24T16:09:32.4227384Z 
2025-02-24T16:09:32.4227845Z Packets:   ███████████████████████████████████████████████▍                                23714/40000 [00:00<00:00, 35187.90it/s][A
2025-02-24T16:09:32.4227849Z 
2025-02-24T16:09:32.4228142Z Packets:   ██████████████████████████████████████████████████████▌                         27270/40000 [00:00<00:00, 35302.52it/s][A
2025-02-24T16:09:32.4228149Z 
2025-02-24T16:09:32.4228443Z Packets:   █████████████████████████████████████████████████████████████▌                  30801/40000 [00:00<00:00, 35233.60it/s][A
2025-02-24T16:09:32.4228598Z 
2025-02-24T16:09:32.4228909Z Packets:   ████████████████████████████████████████████████████████████████████▋           34327/40000 [00:00<00:00, 35241.58it/s][A
2025-02-24T16:09:32.4228913Z 
2025-02-24T16:09:32.4229217Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    37876/40000 [00:01<00:00, 35315.18it/s][A
2025-02-24T16:09:32.4229368Z Iterations:                                                                                6/? [04:51<00:00, 67.91s/it] 
2025-02-24T16:09:32.4229486Z 
2025-02-24T16:09:32.4229812Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35315.18it/s][A
2025-02-24T16:09:32.4229972Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4230491Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4230681Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T16:09:32.4230686Z 
2025-02-24T16:09:32.4230905Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4230995Z attr = 'iterations_t_rad'
2025-02-24T16:09:32.4231270Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f150bb00>
2025-02-24T16:09:32.4231274Z 
2025-02-24T16:09:32.4231372Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4231452Z         "attr",
2025-02-24T16:09:32.4231520Z         [
2025-02-24T16:09:32.4231603Z             "iterations_w",
2025-02-24T16:09:32.4231683Z             "iterations_t_rad",
2025-02-24T16:09:32.4231786Z             "iterations_electron_densities",
2025-02-24T16:09:32.4231869Z             "iterations_t_inner",
2025-02-24T16:09:32.4231940Z         ],
2025-02-24T16:09:32.4232007Z     )
2025-02-24T16:09:32.4232214Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4232333Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:09:32.4232421Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4232509Z             actual = actual.value
2025-02-24T16:09:32.4232598Z         actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4232730Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4232912Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4232916Z 
2025-02-24T16:09:32.4233040Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:09:32.4233158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4233311Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4233382Z     ???
2025-02-24T16:09:32.4233491Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4233499Z 
2025-02-24T16:09:32.4233571Z >   ???
2025-02-24T16:09:32.4233763Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.4233829Z E   
2025-02-24T16:09:32.4233994Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.4234068Z E   [index]: [0, 1]
2025-02-24T16:09:32.4234174Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:09:32.4234275Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:09:32.4234454Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.4234458Z 
2025-02-24T16:09:32.4234551Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4234734Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T16:09:32.4234738Z 
2025-02-24T16:09:32.4234961Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4235063Z attr = 'iterations_electron_densities'
2025-02-24T16:09:32.4235441Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d05476b0>
2025-02-24T16:09:32.4235445Z 
2025-02-24T16:09:32.4235541Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4235611Z         "attr",
2025-02-24T16:09:32.4235683Z         [
2025-02-24T16:09:32.4235762Z             "iterations_w",
2025-02-24T16:09:32.4235847Z             "iterations_t_rad",
2025-02-24T16:09:32.4235954Z             "iterations_electron_densities",
2025-02-24T16:09:32.4236036Z             "iterations_t_inner",
2025-02-24T16:09:32.4236109Z         ],
2025-02-24T16:09:32.4236255Z     )
2025-02-24T16:09:32.4236588Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4236702Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:09:32.4236796Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4236883Z             actual = actual.value
2025-02-24T16:09:32.4236974Z         actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4237109Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4237294Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4237298Z 
2025-02-24T16:09:32.4237425Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:09:32.4237537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4237692Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4237763Z     ???
2025-02-24T16:09:32.4237871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4237876Z 
2025-02-24T16:09:32.4237945Z >   ???
2025-02-24T16:09:32.4238124Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.4238195Z E   
2025-02-24T16:09:32.4238366Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.4238439Z E   [index]: [0, 1]
2025-02-24T16:09:32.4238543Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:09:32.4238644Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:09:32.4238816Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:09:32.4238821Z 
2025-02-24T16:09:32.4238909Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4239078Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T16:09:32.4239082Z 
2025-02-24T16:09:32.4239306Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4239392Z attr = 'nu_bar_estimator'
2025-02-24T16:09:32.4239668Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05cdb2b620>
2025-02-24T16:09:32.4239673Z 
2025-02-24T16:09:32.4239764Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4239838Z         "attr",
2025-02-24T16:09:32.4239908Z         [
2025-02-24T16:09:32.4239989Z             "nu_bar_estimator",
2025-02-24T16:09:32.4240068Z             "j_estimator",
2025-02-24T16:09:32.4240147Z             "t_radiative",
2025-02-24T16:09:32.4240235Z             "dilution_factor",
2025-02-24T16:09:32.4240312Z             "output_nus",
2025-02-24T16:09:32.4240396Z             "output_energies",
2025-02-24T16:09:32.4240466Z         ],
2025-02-24T16:09:32.4240531Z     )
2025-02-24T16:09:32.4240720Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4240835Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4240918Z             actual = getattr(
2025-02-24T16:09:32.4241118Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4241192Z                 attr,
2025-02-24T16:09:32.4241267Z             )
2025-02-24T16:09:32.4241385Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4241538Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4241652Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4241854Z             actual = getattr(
2025-02-24T16:09:32.4242030Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4242107Z                 attr,
2025-02-24T16:09:32.4242178Z             )
2025-02-24T16:09:32.4242245Z         else:
2025-02-24T16:09:32.4242383Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4242450Z     
2025-02-24T16:09:32.4242541Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4242722Z             actual = actual.value
2025-02-24T16:09:32.4242818Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4242946Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4243127Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4243131Z 
2025-02-24T16:09:32.4243250Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4243360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4243514Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4243584Z     ???
2025-02-24T16:09:32.4243690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4243694Z 
2025-02-24T16:09:32.4243763Z >   ???
2025-02-24T16:09:32.4243862Z E   AssertionError: Series are different
2025-02-24T16:09:32.4243933Z E   
2025-02-24T16:09:32.4244030Z E   Series values are different (100.0 %)
2025-02-24T16:09:32.4244166Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4245939Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:09:32.4247253Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:09:32.4247451Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:09:32.4247456Z 
2025-02-24T16:09:32.4247547Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4247711Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T16:09:32.4247715Z 
2025-02-24T16:09:32.4247937Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4248048Z attr = 'j_estimator'
2025-02-24T16:09:32.4248324Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f143aba0>
2025-02-24T16:09:32.4248328Z 
2025-02-24T16:09:32.4248422Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4248491Z         "attr",
2025-02-24T16:09:32.4248559Z         [
2025-02-24T16:09:32.4248641Z             "nu_bar_estimator",
2025-02-24T16:09:32.4248726Z             "j_estimator",
2025-02-24T16:09:32.4248809Z             "t_radiative",
2025-02-24T16:09:32.4248891Z             "dilution_factor",
2025-02-24T16:09:32.4248972Z             "output_nus",
2025-02-24T16:09:32.4249050Z             "output_energies",
2025-02-24T16:09:32.4249120Z         ],
2025-02-24T16:09:32.4249188Z     )
2025-02-24T16:09:32.4249378Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4249495Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4249705Z             actual = getattr(
2025-02-24T16:09:32.4249903Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4249974Z                 attr,
2025-02-24T16:09:32.4250046Z             )
2025-02-24T16:09:32.4250162Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4250315Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4250431Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4250610Z             actual = getattr(
2025-02-24T16:09:32.4250789Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4250861Z                 attr,
2025-02-24T16:09:32.4250933Z             )
2025-02-24T16:09:32.4250999Z         else:
2025-02-24T16:09:32.4251139Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4251207Z     
2025-02-24T16:09:32.4251294Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4251384Z             actual = actual.value
2025-02-24T16:09:32.4251468Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4251592Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4251771Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4251780Z 
2025-02-24T16:09:32.4251897Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4252017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4252171Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4252243Z     ???
2025-02-24T16:09:32.4252350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4252353Z 
2025-02-24T16:09:32.4252424Z >   ???
2025-02-24T16:09:32.4252528Z E   AssertionError: Series are different
2025-02-24T16:09:32.4252594Z E   
2025-02-24T16:09:32.4252694Z E   Series values are different (100.0 %)
2025-02-24T16:09:32.4252822Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4253819Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:09:32.4254803Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:09:32.4254974Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:09:32.4254981Z 
2025-02-24T16:09:32.4255074Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4255235Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T16:09:32.4255238Z 
2025-02-24T16:09:32.4255455Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4255539Z attr = 't_radiative'
2025-02-24T16:09:32.4255811Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f143be00>
2025-02-24T16:09:32.4255818Z 
2025-02-24T16:09:32.4255913Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4255989Z         "attr",
2025-02-24T16:09:32.4256058Z         [
2025-02-24T16:09:32.4256141Z             "nu_bar_estimator",
2025-02-24T16:09:32.4256219Z             "j_estimator",
2025-02-24T16:09:32.4256401Z             "t_radiative",
2025-02-24T16:09:32.4256483Z             "dilution_factor",
2025-02-24T16:09:32.4256565Z             "output_nus",
2025-02-24T16:09:32.4256764Z             "output_energies",
2025-02-24T16:09:32.4256831Z         ],
2025-02-24T16:09:32.4256902Z     )
2025-02-24T16:09:32.4257081Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4257196Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4257278Z             actual = getattr(
2025-02-24T16:09:32.4257474Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4257550Z                 attr,
2025-02-24T16:09:32.4257720Z             )
2025-02-24T16:09:32.4257846Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4257997Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4258111Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4258189Z             actual = getattr(
2025-02-24T16:09:32.4258366Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4258445Z                 attr,
2025-02-24T16:09:32.4258512Z             )
2025-02-24T16:09:32.4258584Z         else:
2025-02-24T16:09:32.4258718Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4258789Z     
2025-02-24T16:09:32.4258876Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4258964Z             actual = actual.value
2025-02-24T16:09:32.4259056Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4259177Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4259366Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4259371Z 
2025-02-24T16:09:32.4259489Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4259604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4259749Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4259820Z     ???
2025-02-24T16:09:32.4259936Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4259940Z 
2025-02-24T16:09:32.4260007Z >   ???
2025-02-24T16:09:32.4260113Z E   AssertionError: Series are different
2025-02-24T16:09:32.4260179Z E   
2025-02-24T16:09:32.4260278Z E   Series values are different (90.0 %)
2025-02-24T16:09:32.4260405Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4261420Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:09:32.4262446Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:09:32.4262623Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.4262627Z 
2025-02-24T16:09:32.4262742Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4263049Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T16:09:32.4263055Z 
2025-02-24T16:09:32.4263427Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4263569Z attr = 'dilution_factor'
2025-02-24T16:09:32.4263987Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f15b8c80>
2025-02-24T16:09:32.4263992Z 
2025-02-24T16:09:32.4264083Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4264265Z         "attr",
2025-02-24T16:09:32.4264332Z         [
2025-02-24T16:09:32.4264415Z             "nu_bar_estimator",
2025-02-24T16:09:32.4264495Z             "j_estimator",
2025-02-24T16:09:32.4264572Z             "t_radiative",
2025-02-24T16:09:32.4264657Z             "dilution_factor",
2025-02-24T16:09:32.4264734Z             "output_nus",
2025-02-24T16:09:32.4264817Z             "output_energies",
2025-02-24T16:09:32.4264884Z         ],
2025-02-24T16:09:32.4264953Z     )
2025-02-24T16:09:32.4265228Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4265349Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4265431Z             actual = getattr(
2025-02-24T16:09:32.4265624Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4265699Z                 attr,
2025-02-24T16:09:32.4265767Z             )
2025-02-24T16:09:32.4265886Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4266041Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4266155Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4266235Z             actual = getattr(
2025-02-24T16:09:32.4266547Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4266623Z                 attr,
2025-02-24T16:09:32.4266690Z             )
2025-02-24T16:09:32.4266762Z         else:
2025-02-24T16:09:32.4266904Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4266972Z     
2025-02-24T16:09:32.4267062Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4267145Z             actual = actual.value
2025-02-24T16:09:32.4267238Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4267361Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4267543Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4267551Z 
2025-02-24T16:09:32.4267674Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4267782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4267933Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4268001Z     ???
2025-02-24T16:09:32.4268111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4268115Z 
2025-02-24T16:09:32.4268182Z >   ???
2025-02-24T16:09:32.4268286Z E   AssertionError: Series are different
2025-02-24T16:09:32.4268355Z E   
2025-02-24T16:09:32.4268448Z E   Series values are different (95.0 %)
2025-02-24T16:09:32.4268578Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4269688Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:09:32.4270798Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:09:32.4270975Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.4270979Z 
2025-02-24T16:09:32.4271066Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4271223Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T16:09:32.4271361Z 
2025-02-24T16:09:32.4271586Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4271663Z attr = 'output_nus'
2025-02-24T16:09:32.4271942Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f15b8b30>
2025-02-24T16:09:32.4271946Z 
2025-02-24T16:09:32.4272036Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4272109Z         "attr",
2025-02-24T16:09:32.4272180Z         [
2025-02-24T16:09:32.4272260Z             "nu_bar_estimator",
2025-02-24T16:09:32.4272441Z             "j_estimator",
2025-02-24T16:09:32.4272521Z             "t_radiative",
2025-02-24T16:09:32.4272603Z             "dilution_factor",
2025-02-24T16:09:32.4272682Z             "output_nus",
2025-02-24T16:09:32.4272765Z             "output_energies",
2025-02-24T16:09:32.4272836Z         ],
2025-02-24T16:09:32.4272902Z     )
2025-02-24T16:09:32.4273086Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4273201Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4273282Z             actual = getattr(
2025-02-24T16:09:32.4273474Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4273548Z                 attr,
2025-02-24T16:09:32.4273619Z             )
2025-02-24T16:09:32.4273734Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4273890Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4274005Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4274086Z             actual = getattr(
2025-02-24T16:09:32.4274260Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4274335Z                 attr,
2025-02-24T16:09:32.4274407Z             )
2025-02-24T16:09:32.4274477Z         else:
2025-02-24T16:09:32.4274614Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4274684Z     
2025-02-24T16:09:32.4274774Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4274857Z             actual = actual.value
2025-02-24T16:09:32.4274948Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4275075Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4275254Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4275258Z 
2025-02-24T16:09:32.4275377Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4275488Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4275638Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4275709Z     ???
2025-02-24T16:09:32.4275815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4275819Z 
2025-02-24T16:09:32.4275887Z >   ???
2025-02-24T16:09:32.4275985Z E   AssertionError: Series are different
2025-02-24T16:09:32.4276060Z E   
2025-02-24T16:09:32.4276156Z E   Series values are different (5.1125 %)
2025-02-24T16:09:32.4276631Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4281937Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:09:32.4287344Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:09:32.4287531Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:09:32.4287535Z 
2025-02-24T16:09:32.4287628Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4287802Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T16:09:32.4287806Z 
2025-02-24T16:09:32.4288153Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4288294Z attr = 'output_energies'
2025-02-24T16:09:32.4288770Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f15ba300>
2025-02-24T16:09:32.4288926Z 
2025-02-24T16:09:32.4289065Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4289142Z         "attr",
2025-02-24T16:09:32.4289216Z         [
2025-02-24T16:09:32.4289298Z             "nu_bar_estimator",
2025-02-24T16:09:32.4289380Z             "j_estimator",
2025-02-24T16:09:32.4289456Z             "t_radiative",
2025-02-24T16:09:32.4289539Z             "dilution_factor",
2025-02-24T16:09:32.4289617Z             "output_nus",
2025-02-24T16:09:32.4289700Z             "output_energies",
2025-02-24T16:09:32.4289895Z         ],
2025-02-24T16:09:32.4289973Z     )
2025-02-24T16:09:32.4290163Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4290280Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4290361Z             actual = getattr(
2025-02-24T16:09:32.4290556Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4290632Z                 attr,
2025-02-24T16:09:32.4290709Z             )
2025-02-24T16:09:32.4290827Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4290986Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4291099Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4291183Z             actual = getattr(
2025-02-24T16:09:32.4291432Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4291560Z                 attr,
2025-02-24T16:09:32.4291667Z             )
2025-02-24T16:09:32.4291737Z         else:
2025-02-24T16:09:32.4291880Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4291947Z     
2025-02-24T16:09:32.4292037Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4292124Z             actual = actual.value
2025-02-24T16:09:32.4292215Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4292343Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4292533Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4292538Z 
2025-02-24T16:09:32.4292662Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4292775Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4292932Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4293001Z     ???
2025-02-24T16:09:32.4293114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4293121Z 
2025-02-24T16:09:32.4293196Z >   ???
2025-02-24T16:09:32.4293298Z E   AssertionError: Series are different
2025-02-24T16:09:32.4293369Z E   
2025-02-24T16:09:32.4293466Z E   Series values are different (1.3025 %)
2025-02-24T16:09:32.4293846Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4300566Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.4307109Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.4307438Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:09:32.4307443Z 
2025-02-24T16:09:32.4307540Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4307729Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T16:09:32.4307734Z 
2025-02-24T16:09:32.4308002Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f0600734d40>
2025-02-24T16:09:32.4308301Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ceb30080>
2025-02-24T16:09:32.4308306Z 
2025-02-24T16:09:32.4308431Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T16:09:32.4308591Z         transport_state = simulation.transport.transport_state
2025-02-24T16:09:32.4308782Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:09:32.4308853Z     
2025-02-24T16:09:32.4309047Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:09:32.4309176Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4309362Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:09:32.4309469Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4309541Z     
2025-02-24T16:09:32.4309650Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4309720Z     
2025-02-24T16:09:32.4309813Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4309884Z             result,
2025-02-24T16:09:32.4309967Z             luminosity,
2025-02-24T16:09:32.4310036Z         )
2025-02-24T16:09:32.4310040Z 
2025-02-24T16:09:32.4310170Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T16:09:32.4310283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4310635Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4310735Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4310845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4310849Z 
2025-02-24T16:09:32.4311334Z args = (<function assert_allclose.<locals>.compare at 0x7f05cd020fe0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:09:32.4311437Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4311696Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4311701Z 
2025-02-24T16:09:32.4311781Z     @wraps(func)
2025-02-24T16:09:32.4311866Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4311954Z         with self._recreate_cm():
2025-02-24T16:09:32.4312043Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4312133Z E           AssertionError: 
2025-02-24T16:09:32.4312246Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4312319Z E           
2025-02-24T16:09:32.4312428Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.4312533Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.4312627Z E           Max relative difference: 1.
2025-02-24T16:09:32.4312783Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4312876Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4313030Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4313113Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4313117Z 
2025-02-24T16:09:32.4313324Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4313521Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T16:09:32.4313525Z 
2025-02-24T16:09:32.4313920Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f0600734d10>
2025-02-24T16:09:32.4314386Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ceb30080>
2025-02-24T16:09:32.4314393Z 
2025-02-24T16:09:32.4314646Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T16:09:32.4314884Z         transport_state = simulation.transport.transport_state
2025-02-24T16:09:32.4315079Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:09:32.4315149Z     
2025-02-24T16:09:32.4315418Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:09:32.4315573Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T16:09:32.4315783Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T16:09:32.4315884Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4315958Z     
2025-02-24T16:09:32.4316065Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4316138Z     
2025-02-24T16:09:32.4316229Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4316410Z             result,
2025-02-24T16:09:32.4316492Z             luminosity,
2025-02-24T16:09:32.4316561Z         )
2025-02-24T16:09:32.4316565Z 
2025-02-24T16:09:32.4316693Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T16:09:32.4316806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4317151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4317245Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4317352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4317356Z 
2025-02-24T16:09:32.4317836Z args = (<function assert_allclose.<locals>.compare at 0x7f05d57132e0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T16:09:32.4317941Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4318193Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4318197Z 
2025-02-24T16:09:32.4318273Z     @wraps(func)
2025-02-24T16:09:32.4318356Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4318444Z         with self._recreate_cm():
2025-02-24T16:09:32.4318531Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4318620Z E           AssertionError: 
2025-02-24T16:09:32.4318736Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4318806Z E           
2025-02-24T16:09:32.4318912Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:09:32.4319011Z E           Max absolute difference: 4.15247374e+37
2025-02-24T16:09:32.4319106Z E           Max relative difference: 1.
2025-02-24T16:09:32.4319257Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4319348Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4319491Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4319573Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4319577Z 
2025-02-24T16:09:32.4319782Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4319946Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T16:09:32.4319950Z 
2025-02-24T16:09:32.4320218Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f06007345f0>
2025-02-24T16:09:32.4320419Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ceb30080>
2025-02-24T16:09:32.4320423Z 
2025-02-24T16:09:32.4320516Z     def test_solve(self, simulation):
2025-02-24T16:09:32.4320669Z         transport_state = simulation.transport.transport_state
2025-02-24T16:09:32.4320861Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:09:32.4321068Z     
2025-02-24T16:09:32.4321261Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:09:32.4321419Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T16:09:32.4321502Z             transport_state
2025-02-24T16:09:32.4321569Z         )
2025-02-24T16:09:32.4321751Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:09:32.4321988Z         expected_real = self.get_expected_data(key_real)
2025-02-24T16:09:32.4322059Z     
2025-02-24T16:09:32.4322197Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T16:09:32.4322264Z     
2025-02-24T16:09:32.4322352Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4322443Z             result_real.luminosity,
2025-02-24T16:09:32.4322528Z             luminosity_real,
2025-02-24T16:09:32.4322598Z         )
2025-02-24T16:09:32.4322602Z 
2025-02-24T16:09:32.4322737Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T16:09:32.4322850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4323188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4323282Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4323392Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4323396Z 
2025-02-24T16:09:32.4323876Z args = (<function assert_allclose.<locals>.compare at 0x7f05d4975800>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:09:32.4323981Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4324228Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4324232Z 
2025-02-24T16:09:32.4324309Z     @wraps(func)
2025-02-24T16:09:32.4324398Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4324485Z         with self._recreate_cm():
2025-02-24T16:09:32.4324579Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4324663Z E           AssertionError: 
2025-02-24T16:09:32.4324777Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4324847Z E           
2025-02-24T16:09:32.4324954Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.4325055Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.4325151Z E           Max relative difference: 1.
2025-02-24T16:09:32.4325304Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4325391Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4325538Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4325620Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4325628Z 
2025-02-24T16:09:32.4325829Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4326013Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T16:09:32.4326017Z 
2025-02-24T16:09:32.4326237Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f0600736090>
2025-02-24T16:09:32.4326537Z simulation = <tardis.simulation.base.Simulation object at 0x7f05eef1b8c0>
2025-02-24T16:09:32.4326542Z 
2025-02-24T16:09:32.4326654Z     def test_j_blue_estimators(self, simulation):
2025-02-24T16:09:32.4326814Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T16:09:32.4326923Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4326990Z     
2025-02-24T16:09:32.4327083Z >       npt.assert_allclose(
2025-02-24T16:09:32.4327310Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T16:09:32.4327394Z             expected.values,
2025-02-24T16:09:32.4327579Z         )
2025-02-24T16:09:32.4327583Z 
2025-02-24T16:09:32.4327683Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T16:09:32.4327796Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4327800Z 
2025-02-24T16:09:32.4328069Z args = (<function assert_allclose.<locals>.compare at 0x7f05f8546c00>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4328146Z        [0., 0., .....,
2025-02-24T16:09:32.4328225Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4328404Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4328486Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4328727Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4328731Z 
2025-02-24T16:09:32.4328806Z     @wraps(func)
2025-02-24T16:09:32.4328889Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4328979Z         with self._recreate_cm():
2025-02-24T16:09:32.4329072Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4329158Z E           AssertionError: 
2025-02-24T16:09:32.4329272Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4329341Z E           
2025-02-24T16:09:32.4329455Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:09:32.4329559Z E           Max absolute difference: 5.32418652e-19
2025-02-24T16:09:32.4329662Z E           Max relative difference: 12.23359055
2025-02-24T16:09:32.4329754Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4329847Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4329941Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4330030Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4330117Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4330201Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4330205Z 
2025-02-24T16:09:32.4330417Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4330575Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4330817Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4330896Z 	
2025-02-24T16:09:32.4331457Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T16:09:32.4331639Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4332158Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T16:09:32.4332367Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4332937Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T16:09:32.4333240Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4333876Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4334104Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4334482Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4334737Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4334822Z 	
2025-02-24T16:09:32.4335126Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4335326Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4335460Z 	
2025-02-24T16:09:32.4335637Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:09:32.4335749Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:09:32.4335963Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4336107Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4336609Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4336710Z 	
2025-02-24T16:09:32.4336920Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4337225Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4337326Z 	
2025-02-24T16:09:32.4337519Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:09:32.4337640Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:09:32.4337773Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:09:32.4338053Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:09:32.4338244Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:09:32.4338425Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4338622Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4338739Z 	
2025-02-24T16:09:32.4339064Z 	Current t_inner = 9974.969 K
2025-02-24T16:09:32.4339376Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:09:32.4339711Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4340064Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4340283Z 	
2025-02-24T16:09:32.4340487Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4340732Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4340816Z 	
2025-02-24T16:09:32.4341053Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:09:32.4341211Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:09:32.4341333Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4341523Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4341704Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4341895Z 	
2025-02-24T16:09:32.4342079Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4342323Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4342457Z 	
2025-02-24T16:09:32.4342583Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4342797Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:09:32.4342920Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:09:32.4343091Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:09:32.4343207Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:09:32.4343366Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4343662Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4343761Z 	
2025-02-24T16:09:32.4343930Z 	Current t_inner = 10736.790 K
2025-02-24T16:09:32.4344079Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:09:32.4344241Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4344528Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4344628Z 	
2025-02-24T16:09:32.4344863Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4345054Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4345172Z 	
2025-02-24T16:09:32.4345342Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:09:32.4345533Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:09:32.4345695Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4345832Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4346041Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4346507Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:09:32.4346786Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4346886Z 	
2025-02-24T16:09:32.4347103Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4347321Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4347478Z 	
2025-02-24T16:09:32.4347683Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4347801Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:09:32.4347951Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:09:32.4348096Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:09:32.4348279Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:09:32.4348654Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4348851Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4348982Z 	
2025-02-24T16:09:32.4349099Z 	Current t_inner = 10718.574 K
2025-02-24T16:09:32.4349338Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:09:32.4349524Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4349717Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4349849Z 	
2025-02-24T16:09:32.4350032Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4350412Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4350532Z 	
2025-02-24T16:09:32.4350696Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:09:32.4350871Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:09:32.4350993Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4351221Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4351432Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4351725Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:09:32.4351918Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4352067Z 	
2025-02-24T16:09:32.4352316Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4352522Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4352654Z 	
2025-02-24T16:09:32.4352806Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4352956Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:09:32.4353140Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:09:32.4353273Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:09:32.4353422Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:09:32.4353575Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4353802Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4353886Z 	
2025-02-24T16:09:32.4354101Z 	Current t_inner = 10696.150 K
2025-02-24T16:09:32.4354307Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:09:32.4354445Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4354669Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4354753Z 	
2025-02-24T16:09:32.4354977Z 	Simulation finished in 4 iterations 
2025-02-24T16:09:32.4355092Z 	Simulation took 12.74 s
2025-02-24T16:09:32.4355281Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4355511Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4355595Z 	
2025-02-24T16:09:32.4355878Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4356087Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4356218Z 	
2025-02-24T16:09:32.4356464Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:09:32.4356615Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:09:32.4356838Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4356999Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4357233Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:09:32.4357243Z 
2025-02-24T16:09:32.4357247Z 
2025-02-24T16:09:32.4357529Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:09:32.4357570Z 
2025-02-24T16:09:32.4357808Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T16:09:32.4357813Z 
2025-02-24T16:09:32.4358218Z Packets:   ████▏                                                                           10463/200000 [00:00<00:01, 104623.86it/s][A
2025-02-24T16:09:32.4358223Z 
2025-02-24T16:09:32.4358505Z Packets:   ████████▌                                                                       21274/200000 [00:00<00:01, 106668.71it/s][A
2025-02-24T16:09:32.4358544Z 
2025-02-24T16:09:32.4358824Z Packets:   ████████████▊                                                                   32032/200000 [00:00<00:01, 107084.50it/s][A
2025-02-24T16:09:32.4358952Z 
2025-02-24T16:09:32.4359279Z Packets:   █████████████████                                                               42741/200000 [00:00<00:01, 106902.98it/s][A
2025-02-24T16:09:32.4359284Z 
2025-02-24T16:09:32.4359560Z Packets:   █████████████████████▍                                                          53524/200000 [00:00<00:01, 107234.72it/s][A
2025-02-24T16:09:32.4359667Z 
2025-02-24T16:09:32.4360091Z Packets:   █████████████████████████▋                                                      64308/200000 [00:00<00:01, 107438.31it/s][A
2025-02-24T16:09:32.4360096Z 
2025-02-24T16:09:32.4360436Z Packets:   ██████████████████████████████                                                  75052/200000 [00:00<00:01, 107368.72it/s][A
2025-02-24T16:09:32.4360440Z 
2025-02-24T16:09:32.4360746Z Packets:   ██████████████████████████████████▎                                             85789/200000 [00:00<00:01, 107273.00it/s][A
2025-02-24T16:09:32.4360762Z 
2025-02-24T16:09:32.4361128Z Packets:   ██████████████████████████████████████▋                                         96627/200000 [00:00<00:00, 107617.65it/s][A
2025-02-24T16:09:32.4361133Z 
2025-02-24T16:09:32.4361522Z Packets:   ██████████████████████████████████████████▉                                     107389/200000 [00:01<00:00, 107446.53it/s][A
2025-02-24T16:09:32.4361527Z 
2025-02-24T16:09:32.4361865Z Packets:   ███████████████████████████████████████████████▎                                118134/200000 [00:01<00:00, 107404.20it/s][A
2025-02-24T16:09:32.4361920Z 
2025-02-24T16:09:32.4362245Z Packets:   ███████████████████████████████████████████████████▌                            128956/200000 [00:01<00:00, 107651.19it/s][A
2025-02-24T16:09:32.4362250Z 
2025-02-24T16:09:32.4362638Z Packets:   ███████████████████████████████████████████████████████▉                        139722/200000 [00:01<00:00, 107519.06it/s][A
2025-02-24T16:09:32.4362643Z 
2025-02-24T16:09:32.4362998Z Packets:   ████████████████████████████████████████████████████████████▏                   150474/200000 [00:01<00:00, 107278.87it/s][A
2025-02-24T16:09:32.4363015Z 
2025-02-24T16:09:32.4363422Z Packets:   ████████████████████████████████████████████████████████████████▍               161208/200000 [00:01<00:00, 107296.20it/s][A
2025-02-24T16:09:32.4363427Z 
2025-02-24T16:09:32.4363819Z Packets:   ████████████████████████████████████████████████████████████████████▊           171938/200000 [00:01<00:00, 107291.53it/s][A
2025-02-24T16:09:32.4363824Z 
2025-02-24T16:09:32.4364442Z Packets:   █████████████████████████████████████████████████████████████████████████       182668/200000 [00:01<00:00, 104310.13it/s][A
2025-02-24T16:09:32.4364565Z 
2025-02-24T16:09:32.4365263Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193370/200000 [00:01<00:00, 105106.61it/s][A
2025-02-24T16:09:32.4365491Z Iterations:                                                                                13/? [05:52<00:00, 12.21s/it]
2025-02-24T16:09:32.4365605Z 
2025-02-24T16:09:32.4365976Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 105106.61it/s][A
2025-02-24T16:09:32.4365981Z 
2025-02-24T16:09:32.4366400Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4366406Z 
2025-02-24T16:09:32.4366918Z Packets:   ████▎                                                                           10782/200000 [00:00<00:01, 107818.82it/s][A
2025-02-24T16:09:32.4366924Z 
2025-02-24T16:09:32.4367227Z Packets:   ████████▋                                                                       21653/200000 [00:00<00:01, 108339.76it/s][A
2025-02-24T16:09:32.4367233Z 
2025-02-24T16:09:32.4367546Z Packets:   █████████████                                                                   32580/200000 [00:00<00:01, 108761.25it/s][A
2025-02-24T16:09:32.4367561Z 
2025-02-24T16:09:32.4367885Z Packets:   █████████████████▍                                                              43457/200000 [00:00<00:01, 108610.89it/s][A
2025-02-24T16:09:32.4367889Z 
2025-02-24T16:09:32.4368195Z Packets:   █████████████████████▋                                                          54339/200000 [00:00<00:01, 108684.68it/s][A
2025-02-24T16:09:32.4368200Z 
2025-02-24T16:09:32.4368566Z Packets:   ██████████████████████████                                                      65208/200000 [00:00<00:01, 107209.42it/s][A
2025-02-24T16:09:32.4368579Z 
2025-02-24T16:09:32.4368931Z Packets:   ██████████████████████████████▍                                                 76176/200000 [00:00<00:01, 108006.80it/s][A
2025-02-24T16:09:32.4368935Z 
2025-02-24T16:09:32.4369235Z Packets:   ██████████████████████████████████▊                                             87005/200000 [00:00<00:01, 108092.00it/s][A
2025-02-24T16:09:32.4369240Z 
2025-02-24T16:09:32.4369611Z Packets:   ███████████████████████████████████████▏                                        97929/200000 [00:00<00:00, 108448.63it/s][A
2025-02-24T16:09:32.4369615Z 
2025-02-24T16:09:32.4369949Z Packets:   ███████████████████████████████████████████▌                                    108776/200000 [00:01<00:00, 108448.63it/s][A
2025-02-24T16:09:32.4369954Z 
2025-02-24T16:09:32.4370438Z Packets:   ███████████████████████████████████████████████▉                                119708/200000 [00:01<00:00, 108713.17it/s][A
2025-02-24T16:09:32.4370444Z 
2025-02-24T16:09:32.4370837Z Packets:   ████████████████████████████████████████████████████▏                           130581/200000 [00:01<00:00, 108567.99it/s][A
2025-02-24T16:09:32.4370841Z 
2025-02-24T16:09:32.4371206Z Packets:   ████████████████████████████████████████████████████████▌                       141529/200000 [00:01<00:00, 108841.62it/s][A
2025-02-24T16:09:32.4371210Z 
2025-02-24T16:09:32.4371558Z Packets:   ████████████████████████████████████████████████████████████▉                   152414/200000 [00:01<00:00, 108581.36it/s][A
2025-02-24T16:09:32.4371688Z 
2025-02-24T16:09:32.4372057Z Packets:   █████████████████████████████████████████████████████████████████▎              163273/200000 [00:01<00:00, 108464.58it/s][A
2025-02-24T16:09:32.4372061Z 
2025-02-24T16:09:32.4372503Z Packets:   █████████████████████████████████████████████████████████████████████▋          174120/200000 [00:01<00:00, 108120.94it/s][A
2025-02-24T16:09:32.4372508Z 
2025-02-24T16:09:32.4372965Z Packets:   ██████████████████████████████████████████████████████████████████████████      185024/200000 [00:01<00:00, 108394.19it/s][A
2025-02-24T16:09:32.4372970Z 
2025-02-24T16:09:32.4373362Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 195875/200000 [00:01<00:00, 108427.68it/s][A
2025-02-24T16:09:32.4373575Z Iterations:                                                                                14/? [05:55<00:00,  9.48s/it]
2025-02-24T16:09:32.4373595Z 
2025-02-24T16:09:32.4373934Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108427.68it/s][A
2025-02-24T16:09:32.4373938Z 
2025-02-24T16:09:32.4374301Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4374306Z 
2025-02-24T16:09:32.4374645Z Packets:   ████▎                                                                           10844/200000 [00:00<00:01, 106275.47it/s][A
2025-02-24T16:09:32.4374650Z 
2025-02-24T16:09:32.4374926Z Packets:   ████████▋                                                                       21591/200000 [00:00<00:01, 106970.71it/s][A
2025-02-24T16:09:32.4374930Z 
2025-02-24T16:09:32.4375247Z Packets:   ████████████▉                                                                   32427/200000 [00:00<00:01, 107601.32it/s][A
2025-02-24T16:09:32.4375252Z 
2025-02-24T16:09:32.4375664Z Packets:   █████████████████▎                                                              43188/200000 [00:00<00:01, 107470.41it/s][A
2025-02-24T16:09:32.4375676Z 
2025-02-24T16:09:32.4376004Z Packets:   █████████████████████▌                                                          53936/200000 [00:00<00:01, 107028.57it/s][A
2025-02-24T16:09:32.4376009Z 
2025-02-24T16:09:32.4376451Z Packets:   █████████████████████████▊                                                      64640/200000 [00:00<00:01, 106910.30it/s][A
2025-02-24T16:09:32.4376456Z 
2025-02-24T16:09:32.4376804Z Packets:   ██████████████████████████████▏                                                 75332/200000 [00:00<00:01, 106819.51it/s][A
2025-02-24T16:09:32.4376809Z 
2025-02-24T16:09:32.4377111Z Packets:   ██████████████████████████████████▍                                             86015/200000 [00:00<00:01, 106793.87it/s][A
2025-02-24T16:09:32.4377116Z 
2025-02-24T16:09:32.4377491Z Packets:   ██████████████████████████████████████▋                                         96849/200000 [00:00<00:00, 107275.70it/s][A
2025-02-24T16:09:32.4377638Z 
2025-02-24T16:09:32.4378018Z Packets:   ███████████████████████████████████████████                                     107650/200000 [00:01<00:00, 107500.16it/s][A
2025-02-24T16:09:32.4378022Z 
2025-02-24T16:09:32.4378344Z Packets:   ███████████████████████████████████████████████▍                                118508/200000 [00:01<00:00, 107827.94it/s][A
2025-02-24T16:09:32.4378349Z 
2025-02-24T16:09:32.4378818Z Packets:   ███████████████████████████████████████████████████▋                            129345/200000 [00:01<00:00, 107991.17it/s][A
2025-02-24T16:09:32.4378822Z 
2025-02-24T16:09:32.4379197Z Packets:   ████████████████████████████████████████████████████████                        140166/200000 [00:01<00:00, 108055.90it/s][A
2025-02-24T16:09:32.4379202Z 
2025-02-24T16:09:32.4379589Z Packets:   ████████████████████████████████████████████████████████████▍                   150972/200000 [00:01<00:00, 107727.51it/s][A
2025-02-24T16:09:32.4379609Z 
2025-02-24T16:09:32.4379998Z Packets:   ████████████████████████████████████████████████████████████████▋               161746/200000 [00:01<00:00, 107471.41it/s][A
2025-02-24T16:09:32.4380002Z 
2025-02-24T16:09:32.4380376Z Packets:   ████████████████████████████████████████████████████████████████████▉           172494/200000 [00:01<00:00, 107409.11it/s][A
2025-02-24T16:09:32.4380381Z 
2025-02-24T16:09:32.4380740Z Packets:   █████████████████████████████████████████████████████████████████████████▎      183260/200000 [00:01<00:00, 107483.83it/s][A
2025-02-24T16:09:32.4380744Z 
2025-02-24T16:09:32.4381131Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  194025/200000 [00:01<00:00, 107532.24it/s][A
2025-02-24T16:09:32.4381405Z Iterations:                                                                                15/? [05:58<00:00,  7.58s/it]
2025-02-24T16:09:32.4381410Z 
2025-02-24T16:09:32.4381862Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 107532.24it/s][A
2025-02-24T16:09:32.4381867Z 
2025-02-24T16:09:32.4382183Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4382188Z 
2025-02-24T16:09:32.4382490Z Packets:   ████▎                                                                           10857/200000 [00:00<00:01, 108569.59it/s][A
2025-02-24T16:09:32.4382575Z 
2025-02-24T16:09:32.4382836Z Packets:   ████████▋                                                                       21818/200000 [00:00<00:01, 109179.97it/s][A
2025-02-24T16:09:32.4382841Z 
2025-02-24T16:09:32.4383221Z Packets:   █████████████                                                                   32812/200000 [00:00<00:01, 109524.56it/s][A
2025-02-24T16:09:32.4383226Z 
2025-02-24T16:09:32.4383562Z Packets:   █████████████████▌                                                              43765/200000 [00:00<00:01, 109050.39it/s][A
2025-02-24T16:09:32.4383575Z 
2025-02-24T16:09:32.4383862Z Packets:   █████████████████████▉                                                          54722/200000 [00:00<00:01, 109236.25it/s][A
2025-02-24T16:09:32.4383867Z 
2025-02-24T16:09:32.4384193Z Packets:   ██████████████████████████▎                                                     65646/200000 [00:00<00:01, 108217.55it/s][A
2025-02-24T16:09:32.4384197Z 
2025-02-24T16:09:32.4384567Z Packets:   ██████████████████████████████▋                                                 76628/200000 [00:00<00:01, 108735.66it/s][A
2025-02-24T16:09:32.4384571Z 
2025-02-24T16:09:32.4384893Z Packets:   ███████████████████████████████████                                             87600/200000 [00:00<00:01, 109047.36it/s][A
2025-02-24T16:09:32.4384897Z 
2025-02-24T16:09:32.4385258Z Packets:   ███████████████████████████████████████▍                                        98506/200000 [00:00<00:00, 108972.99it/s][A
2025-02-24T16:09:32.4385273Z 
2025-02-24T16:09:32.4385623Z Packets:   ███████████████████████████████████████████▊                                    109469/200000 [00:01<00:00, 109172.53it/s][A
2025-02-24T16:09:32.4385627Z 
2025-02-24T16:09:32.4385946Z Packets:   ████████████████████████████████████████████████▏                               120387/200000 [00:01<00:00, 108897.70it/s][A
2025-02-24T16:09:32.4385951Z 
2025-02-24T16:09:32.4386545Z Packets:   ████████████████████████████████████████████████████▌                           131312/200000 [00:01<00:00, 109000.15it/s][A
2025-02-24T16:09:32.4386551Z 
2025-02-24T16:09:32.4386972Z Packets:   ████████████████████████████████████████████████████████▉                       142228/200000 [00:01<00:00, 109046.06it/s][A
2025-02-24T16:09:32.4386977Z 
2025-02-24T16:09:32.4387318Z Packets:   █████████████████████████████████████████████████████████████▎                  153133/200000 [00:01<00:00, 106248.82it/s][A
2025-02-24T16:09:32.4387453Z 
2025-02-24T16:09:32.4387840Z Packets:   █████████████████████████████████████████████████████████████████▋              164070/200000 [00:01<00:00, 107170.20it/s][A
2025-02-24T16:09:32.4387845Z 
2025-02-24T16:09:32.4388210Z Packets:   ██████████████████████████████████████████████████████████████████████          175016/200000 [00:01<00:00, 107848.87it/s][A
2025-02-24T16:09:32.4388215Z 
2025-02-24T16:09:32.4388748Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     185906/200000 [00:01<00:00, 108159.52it/s][A
2025-02-24T16:09:32.4388753Z 
2025-02-24T16:09:32.4389171Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 196730/200000 [00:01<00:00, 108002.26it/s][A
2025-02-24T16:09:32.4389382Z Iterations:                                                                                16/? [06:02<00:00,  6.25s/it]
2025-02-24T16:09:32.4389387Z 
2025-02-24T16:09:32.4389742Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108002.26it/s][A
2025-02-24T16:09:32.4389762Z 
2025-02-24T16:09:32.4390065Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4390070Z 
2025-02-24T16:09:32.4390436Z Packets:   █▋                                                                              10806/500000 [00:00<00:13, 35198.79it/s][A
2025-02-24T16:09:32.4390440Z 
2025-02-24T16:09:32.4390720Z Packets:   ██▎                                                                             14326/500000 [00:00<00:13, 35015.96it/s][A
2025-02-24T16:09:32.4390724Z 
2025-02-24T16:09:32.4391020Z Packets:   ██▊                                                                             17868/500000 [00:00<00:13, 35139.87it/s][A
2025-02-24T16:09:32.4391024Z 
2025-02-24T16:09:32.4391338Z Packets:   ███▍                                                                            21380/500000 [00:00<00:13, 35088.02it/s][A
2025-02-24T16:09:32.4391352Z 
2025-02-24T16:09:32.4391602Z Packets:   ███▉                                                                            24886/500000 [00:00<00:13, 35056.11it/s][A
2025-02-24T16:09:32.4391606Z 
2025-02-24T16:09:32.4391967Z Packets:   ████▌                                                                           28390/500000 [00:00<00:13, 34972.07it/s][A
2025-02-24T16:09:32.4391971Z 
2025-02-24T16:09:32.4392463Z Packets:   █████                                                                           31885/500000 [00:00<00:13, 34933.66it/s][A
2025-02-24T16:09:32.4392469Z 
2025-02-24T16:09:32.4392747Z Packets:   █████▋                                                                          35377/500000 [00:01<00:13, 34746.99it/s][A
2025-02-24T16:09:32.4392751Z 
2025-02-24T16:09:32.4393071Z Packets:   ██████▏                                                                         38850/500000 [00:01<00:13, 33638.29it/s][A
2025-02-24T16:09:32.4393171Z 
2025-02-24T16:09:32.4393522Z Packets:   ██████▊                                                                         42356/500000 [00:01<00:13, 34054.13it/s][A
2025-02-24T16:09:32.4393527Z 
2025-02-24T16:09:32.4393815Z Packets:   ███████▎                                                                        45894/500000 [00:01<00:13, 34444.47it/s][A
2025-02-24T16:09:32.4393820Z 
2025-02-24T16:09:32.4394137Z Packets:   ███████▉                                                                        49374/500000 [00:01<00:13, 34549.51it/s][A
2025-02-24T16:09:32.4394142Z 
2025-02-24T16:09:32.4394462Z Packets:   ████████▍                                                                       52893/500000 [00:01<00:12, 34727.47it/s][A
2025-02-24T16:09:32.4394466Z 
2025-02-24T16:09:32.4394736Z Packets:   █████████                                                                       56386/500000 [00:01<00:12, 34786.86it/s][A
2025-02-24T16:09:32.4394740Z 
2025-02-24T16:09:32.4395083Z Packets:   █████████▌                                                                      59901/500000 [00:01<00:12, 34895.28it/s][A
2025-02-24T16:09:32.4395088Z 
2025-02-24T16:09:32.4395412Z Packets:   ██████████▏                                                                     63392/500000 [00:01<00:12, 34872.74it/s][A
2025-02-24T16:09:32.4395417Z 
2025-02-24T16:09:32.4395687Z Packets:   ██████████▋                                                                     66912/500000 [00:01<00:12, 34966.93it/s][A
2025-02-24T16:09:32.4395791Z 
2025-02-24T16:09:32.4396163Z Packets:   ███████████▎                                                                    70410/500000 [00:02<00:12, 34894.50it/s][A
2025-02-24T16:09:32.4396171Z 
2025-02-24T16:09:32.4396906Z Packets:   ███████████▊                                                                    73900/500000 [00:02<00:12, 34243.14it/s][A
2025-02-24T16:09:32.4396913Z 
2025-02-24T16:09:32.4397401Z Packets:   ████████████▍                                                                   77450/500000 [00:02<00:12, 34612.15it/s][A
2025-02-24T16:09:32.4397421Z 
2025-02-24T16:09:32.4397859Z Packets:   ████████████▉                                                                   80961/500000 [00:02<00:12, 34759.48it/s][A
2025-02-24T16:09:32.4397863Z 
2025-02-24T16:09:32.4398163Z Packets:   █████████████▌                                                                  84439/500000 [00:02<00:11, 34731.82it/s][A
2025-02-24T16:09:32.4398168Z 
2025-02-24T16:09:32.4398519Z Packets:   ██████████████                                                                  87922/500000 [00:02<00:11, 34759.48it/s][A
2025-02-24T16:09:32.4398524Z 
2025-02-24T16:09:32.4398854Z Packets:   ██████████████▌                                                                 91399/500000 [00:02<00:11, 34638.36it/s][A
2025-02-24T16:09:32.4398858Z 
2025-02-24T16:09:32.4399186Z Packets:   ███████████████▏                                                                94865/500000 [00:02<00:11, 34642.68it/s][A
2025-02-24T16:09:32.4399200Z 
2025-02-24T16:09:32.4399477Z Packets:   ███████████████▋                                                                98330/500000 [00:02<00:11, 34514.37it/s][A
2025-02-24T16:09:32.4399481Z 
2025-02-24T16:09:32.4399789Z Packets:   ████████████████▎                                                               101782/500000 [00:02<00:11, 34406.09it/s][A
2025-02-24T16:09:32.4399794Z 
2025-02-24T16:09:32.4400176Z Packets:   ████████████████▊                                                               105288/500000 [00:03<00:11, 34598.05it/s][A
2025-02-24T16:09:32.4400180Z 
2025-02-24T16:09:32.4400471Z Packets:   █████████████████▍                                                              108749/500000 [00:03<00:11, 33585.83it/s][A
2025-02-24T16:09:32.4400475Z 
2025-02-24T16:09:32.4400813Z Packets:   █████████████████▉                                                              112238/500000 [00:03<00:11, 33962.42it/s][A
2025-02-24T16:09:32.4400952Z 
2025-02-24T16:09:32.4401281Z Packets:   ██████████████████▌                                                             115711/500000 [00:03<00:11, 34188.04it/s][A
2025-02-24T16:09:32.4401285Z 
2025-02-24T16:09:32.4401636Z Packets:   ███████████████████                                                             119158/500000 [00:03<00:11, 34270.11it/s][A
2025-02-24T16:09:32.4401641Z 
2025-02-24T16:09:32.4408527Z Packets:   ███████████████████▌                                                            122602/500000 [00:03<00:10, 34320.47it/s][A
2025-02-24T16:09:32.4408545Z 
2025-02-24T16:09:32.4409001Z Packets:   ████████████████████▏                                                           126092/500000 [00:03<00:10, 34493.12it/s][A
2025-02-24T16:09:32.4409006Z 
2025-02-24T16:09:32.4409286Z Packets:   ████████████████████▋                                                           129591/500000 [00:03<00:10, 34638.89it/s][A
2025-02-24T16:09:32.4409291Z 
2025-02-24T16:09:32.4409568Z Packets:   █████████████████████▎                                                          133057/500000 [00:03<00:10, 34627.21it/s][A
2025-02-24T16:09:32.4409573Z 
2025-02-24T16:09:32.4409843Z Packets:   █████████████████████▊                                                          136521/500000 [00:03<00:10, 34612.45it/s][A
2025-02-24T16:09:32.4409847Z 
2025-02-24T16:09:32.4410108Z Packets:   ██████████████████████▍                                                         139990/500000 [00:04<00:10, 34633.92it/s][A
2025-02-24T16:09:32.4410112Z 
2025-02-24T16:09:32.4410379Z Packets:   ██████████████████████▉                                                         143454/500000 [00:04<00:10, 33304.85it/s][A
2025-02-24T16:09:32.4410384Z 
2025-02-24T16:09:32.4410651Z Packets:   ███████████████████████▌                                                        146907/500000 [00:04<00:10, 33661.58it/s][A
2025-02-24T16:09:32.4410656Z 
2025-02-24T16:09:32.4410913Z Packets:   ████████████████████████                                                        150408/500000 [00:04<00:10, 34055.78it/s][A
2025-02-24T16:09:32.4410926Z 
2025-02-24T16:09:32.4411179Z Packets:   ████████████████████████▋                                                       153926/500000 [00:04<00:10, 34385.73it/s][A
2025-02-24T16:09:32.4411183Z 
2025-02-24T16:09:32.4411442Z Packets:   █████████████████████████▏                                                      157391/500000 [00:04<00:09, 34460.53it/s][A
2025-02-24T16:09:32.4411446Z 
2025-02-24T16:09:32.4411719Z Packets:   █████████████████████████▋                                                      160876/500000 [00:04<00:09, 34572.18it/s][A
2025-02-24T16:09:32.4411722Z 
2025-02-24T16:09:32.4411979Z Packets:   ██████████████████████████▎                                                     164336/500000 [00:04<00:09, 34468.71it/s][A
2025-02-24T16:09:32.4411983Z 
2025-02-24T16:09:32.4412242Z Packets:   ██████████████████████████▊                                                     167806/500000 [00:04<00:09, 34536.85it/s][A
2025-02-24T16:09:32.4412398Z 
2025-02-24T16:09:32.4412668Z Packets:   ███████████████████████████▍                                                    171367/500000 [00:04<00:09, 34855.97it/s][A
2025-02-24T16:09:32.4412672Z 
2025-02-24T16:09:32.4412933Z Packets:   ███████████████████████████▉                                                    174864/500000 [00:05<00:09, 34887.61it/s][A
2025-02-24T16:09:32.4412937Z 
2025-02-24T16:09:32.4413284Z Packets:   ████████████████████████████▌                                                   178354/500000 [00:05<00:09, 33746.99it/s][A
2025-02-24T16:09:32.4413289Z 
2025-02-24T16:09:32.4413556Z Packets:   █████████████████████████████                                                   181809/500000 [00:05<00:09, 33981.36it/s][A
2025-02-24T16:09:32.4413560Z 
2025-02-24T16:09:32.4413819Z Packets:   █████████████████████████████▋                                                  185299/500000 [00:05<00:09, 34246.85it/s][A
2025-02-24T16:09:32.4413833Z 
2025-02-24T16:09:32.4414098Z Packets:   ██████████████████████████████▏                                                 188771/500000 [00:05<00:09, 34384.60it/s][A
2025-02-24T16:09:32.4414102Z 
2025-02-24T16:09:32.4414453Z Packets:   ██████████████████████████████▊                                                 192264/500000 [00:05<00:08, 34546.00it/s][A
2025-02-24T16:09:32.4414461Z 
2025-02-24T16:09:32.4414988Z Packets:   ███████████████████████████████▎                                                195722/500000 [00:05<00:08, 34331.86it/s][A
2025-02-24T16:09:32.4414995Z 
2025-02-24T16:09:32.4415494Z Packets:   ███████████████████████████████▊                                                199166/500000 [00:05<00:08, 34362.59it/s][A
2025-02-24T16:09:32.4415501Z 
2025-02-24T16:09:32.4415793Z Packets:   ████████████████████████████████▍                                               202604/500000 [00:05<00:08, 34194.66it/s][A
2025-02-24T16:09:32.4415797Z 
2025-02-24T16:09:32.4416073Z Packets:   ████████████████████████████████▉                                               206025/500000 [00:05<00:08, 34195.89it/s][A
2025-02-24T16:09:32.4416077Z 
2025-02-24T16:09:32.4416481Z Packets:   █████████████████████████████████▌                                              209446/500000 [00:06<00:08, 34143.02it/s][A
2025-02-24T16:09:32.4416486Z 
2025-02-24T16:09:32.4416761Z Packets:   ██████████████████████████████████                                              212861/500000 [00:06<00:08, 32978.55it/s][A
2025-02-24T16:09:32.4416765Z 
2025-02-24T16:09:32.4417047Z Packets:   ██████████████████████████████████▌                                             216307/500000 [00:06<00:08, 33407.41it/s][A
2025-02-24T16:09:32.4417051Z 
2025-02-24T16:09:32.4417321Z Packets:   ███████████████████████████████████▏                                            219741/500000 [00:06<00:08, 33679.18it/s][A
2025-02-24T16:09:32.4417325Z 
2025-02-24T16:09:32.4417600Z Packets:   ███████████████████████████████████▋                                            223115/500000 [00:06<00:08, 33693.15it/s][A
2025-02-24T16:09:32.4417758Z 
2025-02-24T16:09:32.4418039Z Packets:   ████████████████████████████████████▏                                           226553/500000 [00:06<00:08, 33895.41it/s][A
2025-02-24T16:09:32.4418043Z 
2025-02-24T16:09:32.4418322Z Packets:   ████████████████████████████████████▊                                           229946/500000 [00:06<00:07, 33816.95it/s][A
2025-02-24T16:09:32.4418326Z 
2025-02-24T16:09:32.4418710Z Packets:   █████████████████████████████████████▎                                          233406/500000 [00:06<00:07, 34047.18it/s][A
2025-02-24T16:09:32.4418715Z 
2025-02-24T16:09:32.4418990Z Packets:   █████████████████████████████████████▉                                          236825/500000 [00:06<00:07, 34085.95it/s][A
2025-02-24T16:09:32.4418995Z 
2025-02-24T16:09:32.4419268Z Packets:   ██████████████████████████████████████▍                                         240235/500000 [00:06<00:07, 33941.70it/s][A
2025-02-24T16:09:32.4419284Z 
2025-02-24T16:09:32.4419559Z Packets:   ██████████████████████████████████████▉                                         243631/500000 [00:07<00:07, 33943.33it/s][A
2025-02-24T16:09:32.4419563Z 
2025-02-24T16:09:32.4419835Z Packets:   ███████████████████████████████████████▌                                        247026/500000 [00:07<00:07, 32602.13it/s][A
2025-02-24T16:09:32.4419838Z 
2025-02-24T16:09:32.4420132Z Packets:   ████████████████████████████████████████                                        250499/500000 [00:07<00:07, 33219.74it/s][A
2025-02-24T16:09:32.4420136Z 
2025-02-24T16:09:32.4420417Z Packets:   ████████████████████████████████████████▌                                       253905/500000 [00:07<00:07, 33461.69it/s][A
2025-02-24T16:09:32.4420425Z 
2025-02-24T16:09:32.4420708Z Packets:   █████████████████████████████████████████▏                                      257259/500000 [00:07<00:07, 33462.91it/s][A
2025-02-24T16:09:32.4420724Z 
2025-02-24T16:09:32.4421007Z Packets:   █████████████████████████████████████████▋                                      260646/500000 [00:07<00:07, 33582.89it/s][A
2025-02-24T16:09:32.4421011Z 
2025-02-24T16:09:32.4421285Z Packets:   ██████████████████████████████████████████▎                                     264101/500000 [00:07<00:06, 33869.79it/s][A
2025-02-24T16:09:32.4421294Z 
2025-02-24T16:09:32.4421581Z Packets:   ██████████████████████████████████████████▊                                     267560/500000 [00:07<00:06, 34081.79it/s][A
2025-02-24T16:09:32.4421586Z 
2025-02-24T16:09:32.4421866Z Packets:   ███████████████████████████████████████████▎                                    271041/500000 [00:07<00:06, 34296.32it/s][A
2025-02-24T16:09:32.4421870Z 
2025-02-24T16:09:32.4422145Z Packets:   ███████████████████████████████████████████▉                                    274483/500000 [00:08<00:06, 34329.38it/s][A
2025-02-24T16:09:32.4422155Z 
2025-02-24T16:09:32.4422525Z Packets:   ████████████████████████████████████████████▍                                   277918/500000 [00:08<00:06, 34316.68it/s][A
2025-02-24T16:09:32.4422529Z 
2025-02-24T16:09:32.4422812Z Packets:   █████████████████████████████████████████████                                   281351/500000 [00:08<00:06, 33510.71it/s][A
2025-02-24T16:09:32.4422816Z 
2025-02-24T16:09:32.4423096Z Packets:   █████████████████████████████████████████████▌                                  284805/500000 [00:08<00:06, 33813.76it/s][A
2025-02-24T16:09:32.4423104Z 
2025-02-24T16:09:32.4423465Z Packets:   ██████████████████████████████████████████████▏                                 288286/500000 [00:08<00:06, 34107.50it/s][A
2025-02-24T16:09:32.4423470Z 
2025-02-24T16:09:32.4423757Z Packets:   ██████████████████████████████████████████████▋                                 291768/500000 [00:08<00:06, 34318.51it/s][A
2025-02-24T16:09:32.4423761Z 
2025-02-24T16:09:32.4424043Z Packets:   ███████████████████████████████████████████████▏                                295240/500000 [00:08<00:05, 34436.94it/s][A
2025-02-24T16:09:32.4424060Z 
2025-02-24T16:09:32.4424347Z Packets:   ███████████████████████████████████████████████▊                                298746/500000 [00:08<00:05, 34622.43it/s][A
2025-02-24T16:09:32.4424351Z 
2025-02-24T16:09:32.4424638Z Packets:   ████████████████████████████████████████████████▎                               302253/500000 [00:08<00:05, 34747.77it/s][A
2025-02-24T16:09:32.4424642Z 
2025-02-24T16:09:32.4424938Z Packets:   ████████████████████████████████████████████████▉                               305785/500000 [00:08<00:05, 34915.36it/s][A
2025-02-24T16:09:32.4424942Z 
2025-02-24T16:09:32.4425230Z Packets:   █████████████████████████████████████████████████▍                              309278/500000 [00:09<00:05, 34785.73it/s][A
2025-02-24T16:09:32.4425234Z 
2025-02-24T16:09:32.4425523Z Packets:   ██████████████████████████████████████████████████                              312758/500000 [00:09<00:05, 34756.08it/s][A
2025-02-24T16:09:32.4425540Z 
2025-02-24T16:09:32.4425824Z Packets:   ██████████████████████████████████████████████████▌                             316234/500000 [00:09<00:05, 34744.21it/s][A
2025-02-24T16:09:32.4425828Z 
2025-02-24T16:09:32.4426116Z Packets:   ███████████████████████████████████████████████████▏                            319709/500000 [00:09<00:05, 34103.54it/s][A
2025-02-24T16:09:32.4426120Z 
2025-02-24T16:09:32.4426734Z Packets:   ███████████████████████████████████████████████████▋                            323199/500000 [00:09<00:05, 34338.67it/s][A
2025-02-24T16:09:32.4426739Z 
2025-02-24T16:09:32.4427044Z Packets:   ████████████████████████████████████████████████████▎                           326659/500000 [00:09<00:05, 34414.97it/s][A
2025-02-24T16:09:32.4427048Z 
2025-02-24T16:09:32.4427343Z Packets:   ████████████████████████████████████████████████████▊                           330134/500000 [00:09<00:04, 34511.12it/s][A
2025-02-24T16:09:32.4427481Z 
2025-02-24T16:09:32.4427779Z Packets:   █████████████████████████████████████████████████████▍                          333645/500000 [00:09<00:04, 34687.14it/s][A
2025-02-24T16:09:32.4427783Z 
2025-02-24T16:09:32.4428069Z Packets:   █████████████████████████████████████████████████████▉                          337117/500000 [00:09<00:04, 34696.72it/s][A
2025-02-24T16:09:32.4428073Z 
2025-02-24T16:09:32.4428476Z Packets:   ██████████████████████████████████████████████████████▍                         340623/500000 [00:09<00:04, 34805.33it/s][A
2025-02-24T16:09:32.4428480Z 
2025-02-24T16:09:32.4428774Z Packets:   ███████████████████████████████████████████████████████                         344109/500000 [00:10<00:04, 34821.69it/s][A
2025-02-24T16:09:32.4428778Z 
2025-02-24T16:09:32.4429066Z Packets:   ███████████████████████████████████████████████████████▌                        347592/500000 [00:10<00:04, 34712.08it/s][A
2025-02-24T16:09:32.4429070Z 
2025-02-24T16:09:32.4429377Z Packets:   ████████████████████████████████████████████████████████▏                       351064/500000 [00:10<00:04, 34673.89it/s][A
2025-02-24T16:09:32.4429381Z 
2025-02-24T16:09:32.4429673Z Packets:   ████████████████████████████████████████████████████████▋                       354532/500000 [00:10<00:04, 33066.71it/s][A
2025-02-24T16:09:32.4429677Z 
2025-02-24T16:09:32.4429966Z Packets:   █████████████████████████████████████████████████████████▎                      357972/500000 [00:10<00:04, 33449.37it/s][A
2025-02-24T16:09:32.4429970Z 
2025-02-24T16:09:32.4430277Z Packets:   █████████████████████████████████████████████████████████▊                      361466/500000 [00:10<00:04, 33881.28it/s][A
2025-02-24T16:09:32.4430281Z 
2025-02-24T16:09:32.4430577Z Packets:   ██████████████████████████████████████████████████████████▍                     364918/500000 [00:10<00:03, 34064.86it/s][A
2025-02-24T16:09:32.4430581Z 
2025-02-24T16:09:32.4430872Z Packets:   ██████████████████████████████████████████████████████████▉                     368377/500000 [00:10<00:03, 34218.54it/s][A
2025-02-24T16:09:32.4430982Z 
2025-02-24T16:09:32.4431282Z Packets:   ███████████████████████████████████████████████████████████▌                    371896/500000 [00:10<00:03, 34505.80it/s][A
2025-02-24T16:09:32.4431286Z 
2025-02-24T16:09:32.4431582Z Packets:   ████████████████████████████████████████████████████████████                    375355/500000 [00:10<00:03, 34527.01it/s][A
2025-02-24T16:09:32.4431586Z 
2025-02-24T16:09:32.4431961Z Packets:   ████████████████████████████████████████████████████████████▌                   378811/500000 [00:11<00:03, 34385.80it/s][A
2025-02-24T16:09:32.4431966Z 
2025-02-24T16:09:32.4432268Z Packets:   █████████████████████████████████████████████████████████████▏                  382252/500000 [00:11<00:03, 34291.65it/s][A
2025-02-24T16:09:32.4432272Z 
2025-02-24T16:09:32.4432571Z Packets:   █████████████████████████████████████████████████████████████▋                  385683/500000 [00:11<00:03, 34220.18it/s][A
2025-02-24T16:09:32.4432590Z 
2025-02-24T16:09:32.4432884Z Packets:   ██████████████████████████████████████████████████████████████▎                 389106/500000 [00:11<00:03, 33065.98it/s][A
2025-02-24T16:09:32.4432888Z 
2025-02-24T16:09:32.4433188Z Packets:   ██████████████████████████████████████████████████████████████▊                 392576/500000 [00:11<00:03, 33539.70it/s][A
2025-02-24T16:09:32.4433192Z 
2025-02-24T16:09:32.4433508Z Packets:   ███████████████████████████████████████████████████████████████▎                396043/500000 [00:11<00:03, 33870.65it/s][A
2025-02-24T16:09:32.4433512Z 
2025-02-24T16:09:32.4433810Z Packets:   ███████████████████████████████████████████████████████████████▉                399510/500000 [00:11<00:02, 34106.74it/s][A
2025-02-24T16:09:32.4433814Z 
2025-02-24T16:09:32.4434116Z Packets:   ████████████████████████████████████████████████████████████████▍               402926/500000 [00:11<00:02, 33570.69it/s][A
2025-02-24T16:09:32.4434134Z 
2025-02-24T16:09:32.4434435Z Packets:   █████████████████████████████████████████████████████████████████               406413/500000 [00:11<00:02, 33950.11it/s][A
2025-02-24T16:09:32.4434440Z 
2025-02-24T16:09:32.4434738Z Packets:   █████████████████████████████████████████████████████████████████▌              409880/500000 [00:11<00:02, 34162.81it/s][A
2025-02-24T16:09:32.4434742Z 
2025-02-24T16:09:32.4435060Z Packets:   ██████████████████████████████████████████████████████████████████▏             413300/500000 [00:12<00:02, 34154.68it/s][A
2025-02-24T16:09:32.4435064Z 
2025-02-24T16:09:32.4435367Z Packets:   ██████████████████████████████████████████████████████████████████▋             416741/500000 [00:12<00:02, 34230.23it/s][A
2025-02-24T16:09:32.4435371Z 
2025-02-24T16:09:32.4435670Z Packets:   ███████████████████████████████████████████████████████████████████▏            420235/500000 [00:12<00:02, 34439.73it/s][A
2025-02-24T16:09:32.4435674Z 
2025-02-24T16:09:32.4436070Z Packets:   ███████████████████████████████████████████████████████████████████▊            423681/500000 [00:12<00:02, 33271.20it/s][A
2025-02-24T16:09:32.4436074Z 
2025-02-24T16:09:32.4436506Z Packets:   ████████████████████████████████████████████████████████████████████▎           427143/500000 [00:12<00:02, 33664.11it/s][A
2025-02-24T16:09:32.4436510Z 
2025-02-24T16:09:32.4436817Z Packets:   ████████████████████████████████████████████████████████████████████▉           430588/500000 [00:12<00:02, 33895.10it/s][A
2025-02-24T16:09:32.4436821Z 
2025-02-24T16:09:32.4437253Z Packets:   █████████████████████████████████████████████████████████████████████▍          434102/500000 [00:12<00:01, 34262.48it/s][A
2025-02-24T16:09:32.4437258Z 
2025-02-24T16:09:32.4437565Z Packets:   ██████████████████████████████████████████████████████████████████████          437564/500000 [00:12<00:01, 34368.48it/s][A
2025-02-24T16:09:32.4437573Z 
2025-02-24T16:09:32.4437876Z Packets:   ██████████████████████████████████████████████████████████████████████▌         441046/500000 [00:12<00:01, 34502.60it/s][A
2025-02-24T16:09:32.4437895Z 
2025-02-24T16:09:32.4438204Z Packets:   ███████████████████████████████████████████████████████████████████████         444499/500000 [00:12<00:01, 34436.18it/s][A
2025-02-24T16:09:32.4438208Z 
2025-02-24T16:09:32.4438522Z Packets:   ███████████████████████████████████████████████████████████████████████▋        447945/500000 [00:13<00:01, 34362.21it/s][A
2025-02-24T16:09:32.4438530Z 
2025-02-24T16:09:32.4438856Z Packets:   ████████████████████████████████████████████████████████████████████████▏       451402/500000 [00:13<00:01, 34423.27it/s][A
2025-02-24T16:09:32.4438860Z 
2025-02-24T16:09:32.4439170Z Packets:   ████████████████████████████████████████████████████████████████████████▊       454913/500000 [00:13<00:01, 34627.25it/s][A
2025-02-24T16:09:32.4439174Z 
2025-02-24T16:09:32.4439480Z Packets:   █████████████████████████████████████████████████████████████████████████▎      458377/500000 [00:13<00:01, 32135.79it/s][A
2025-02-24T16:09:32.4439639Z 
2025-02-24T16:09:32.4440255Z Packets:   █████████████████████████████████████████████████████████████████████████▉      461725/500000 [00:13<00:01, 32515.73it/s][A
2025-02-24T16:09:32.4440263Z 
2025-02-24T16:09:32.4440832Z Packets:   ██████████████████████████████████████████████████████████████████████████▍     465183/500000 [00:13<00:01, 33110.56it/s][A
2025-02-24T16:09:32.4440836Z 
2025-02-24T16:09:32.4441252Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     468654/500000 [00:13<00:00, 33576.56it/s][A
2025-02-24T16:09:32.4441263Z 
2025-02-24T16:09:32.4441577Z Packets:   ███████████████████████████████████████████████████████████████████████████▌    472128/500000 [00:13<00:00, 33918.74it/s][A
2025-02-24T16:09:32.4441581Z 
2025-02-24T16:09:32.4441895Z Packets:   ████████████████████████████████████████████████████████████████████████████    475581/500000 [00:13<00:00, 34099.24it/s][A
2025-02-24T16:09:32.4441915Z 
2025-02-24T16:09:32.4442226Z Packets:   ████████████████████████████████████████████████████████████████████████████▋   479044/500000 [00:13<00:00, 34255.55it/s][A
2025-02-24T16:09:32.4442230Z 
2025-02-24T16:09:32.4442549Z Packets:   █████████████████████████████████████████████████████████████████████████████▏  482553/500000 [00:14<00:00, 34501.88it/s][A
2025-02-24T16:09:32.4442553Z 
2025-02-24T16:09:32.4442886Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  486008/500000 [00:14<00:00, 34422.92it/s][A
2025-02-24T16:09:32.4442890Z 
2025-02-24T16:09:32.4443205Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 489475/500000 [00:14<00:00, 34496.23it/s][A
2025-02-24T16:09:32.4443210Z 
2025-02-24T16:09:32.4443524Z Packets:   ██████████████████████████████████████████████████████████████████████████████▊ 492927/500000 [00:14<00:00, 33346.84it/s][A
2025-02-24T16:09:32.4443528Z 
2025-02-24T16:09:32.4443945Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496401/500000 [00:14<00:00, 33749.39it/s][A
2025-02-24T16:09:32.4443949Z 
2025-02-24T16:09:32.4444263Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉499845/500000 [00:14<00:00, 33952.16it/s][A
2025-02-24T16:09:32.4444421Z Iterations:                                                                                17/? [06:18<00:00,  9.39s/it]
2025-02-24T16:09:32.4444426Z 
2025-02-24T16:09:32.4444867Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 33952.16it/s][A
2025-02-24T16:09:32.4445036Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4445205Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T16:09:32.4445560Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T16:09:32.4445966Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T16:09:32.4446536Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T16:09:32.4447056Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4447289Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4447408Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4447495Z 	Starting iteration 1 of 5
2025-02-24T16:09:32.4447604Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4447697Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:09:32.4447790Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:09:32.4447883Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4447887Z 
2025-02-24T16:09:32.4447995Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4448112Z 	Plasma stratification:
2025-02-24T16:09:32.4448217Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4448327Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:09:32.4448411Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:09:32.4448494Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:09:32.4448580Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:09:32.4448663Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:09:32.4448667Z 
2025-02-24T16:09:32.4448775Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4448859Z 	Current t_inner = 9974.969 K
2025-02-24T16:09:32.4448983Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:09:32.4448988Z 
2025-02-24T16:09:32.4449098Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4449191Z 	Starting iteration 2 of 5
2025-02-24T16:09:32.4449301Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4449391Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:09:32.4449485Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:09:32.4449574Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4449578Z 
2025-02-24T16:09:32.4449685Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4449769Z 	Plasma stratification:
2025-02-24T16:09:32.4449880Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4449991Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4450077Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:09:32.4450164Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:09:32.4450246Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:09:32.4450332Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:09:32.4450461Z 
2025-02-24T16:09:32.4450571Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4450657Z 	Current t_inner = 10736.790 K
2025-02-24T16:09:32.4450774Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:09:32.4450778Z 
2025-02-24T16:09:32.4450880Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4450968Z 	Starting iteration 3 of 5
2025-02-24T16:09:32.4451068Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4451162Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:09:32.4451354Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:09:32.4451447Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4451451Z 
2025-02-24T16:09:32.4451676Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T16:09:32.4451783Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4451871Z 	Plasma stratification:
2025-02-24T16:09:32.4451974Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4452086Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4452172Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:09:32.4452251Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:09:32.4452338Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:09:32.4452419Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:09:32.4452424Z 
2025-02-24T16:09:32.4452530Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4452620Z 	Current t_inner = 10718.574 K
2025-02-24T16:09:32.4452739Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:09:32.4452743Z 
2025-02-24T16:09:32.4452851Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4452934Z 	Starting iteration 4 of 5
2025-02-24T16:09:32.4453039Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4453130Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:09:32.4453224Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:09:32.4453324Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4453327Z 
2025-02-24T16:09:32.4453543Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T16:09:32.4453652Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4453735Z 	Plasma stratification:
2025-02-24T16:09:32.4453845Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4453953Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4454035Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:09:32.4454123Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:09:32.4454204Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:09:32.4454290Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:09:32.4454294Z 
2025-02-24T16:09:32.4454396Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4454483Z 	Current t_inner = 10696.150 K
2025-02-24T16:09:32.4454601Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:09:32.4454609Z 
2025-02-24T16:09:32.4454715Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4454819Z 	Simulation finished in 4 iterations 
2025-02-24T16:09:32.4454902Z 	Simulation took 12.74 s
2025-02-24T16:09:32.4454906Z 
2025-02-24T16:09:32.4455016Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4455103Z 	Starting iteration 5 of 5
2025-02-24T16:09:32.4455204Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4455294Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:09:32.4455387Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:09:32.4455475Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4455652Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T16:09:32.4455656Z 
2025-02-24T16:09:32.4455876Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f0600736330>
2025-02-24T16:09:32.4456078Z simulation = <tardis.simulation.base.Simulation object at 0x7f05eef1b8c0>
2025-02-24T16:09:32.4456177Z 
2025-02-24T16:09:32.4456375Z     def test_spectrum(self, simulation):
2025-02-24T16:09:32.4456557Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:09:32.4456657Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4456728Z     
2025-02-24T16:09:32.4456843Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4456907Z     
2025-02-24T16:09:32.4456999Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4457276Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T16:09:32.4457357Z             luminosity,
2025-02-24T16:09:32.4457424Z         )
2025-02-24T16:09:32.4457428Z 
2025-02-24T16:09:32.4457526Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T16:09:32.4457719Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4458311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4458477Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4458669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4458676Z 
2025-02-24T16:09:32.4459209Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff607560>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T16:09:32.4459324Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4459579Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4459583Z 
2025-02-24T16:09:32.4459661Z     @wraps(func)
2025-02-24T16:09:32.4459744Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4459832Z         with self._recreate_cm():
2025-02-24T16:09:32.4459924Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4460009Z E           AssertionError: 
2025-02-24T16:09:32.4460129Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4460201Z E           
2025-02-24T16:09:32.4460308Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:09:32.4460412Z E           Max absolute difference: 1.38672909e+39
2025-02-24T16:09:32.4460515Z E           Max relative difference: 5.25284451
2025-02-24T16:09:32.4460676Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4460761Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4460915Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4460996Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4461000Z 
2025-02-24T16:09:32.4461214Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4461406Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T16:09:32.4461410Z 
2025-02-24T16:09:32.4461625Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f0600736570>
2025-02-24T16:09:32.4461829Z simulation = <tardis.simulation.base.Simulation object at 0x7f05eef1b8c0>
2025-02-24T16:09:32.4461833Z 
2025-02-24T16:09:32.4461945Z     def test_virtual_spectrum(self, simulation):
2025-02-24T16:09:32.4462126Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T16:09:32.4462233Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4462298Z     
2025-02-24T16:09:32.4462412Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4462481Z     
2025-02-24T16:09:32.4462568Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4462747Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T16:09:32.4462822Z             luminosity,
2025-02-24T16:09:32.4462893Z         )
2025-02-24T16:09:32.4462898Z 
2025-02-24T16:09:32.4462992Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T16:09:32.4463232Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4463576Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4463664Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4463780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4463784Z 
2025-02-24T16:09:32.4464347Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff0a8c20>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T16:09:32.4464462Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4464716Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4464720Z 
2025-02-24T16:09:32.4464791Z     @wraps(func)
2025-02-24T16:09:32.4464878Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4464966Z         with self._recreate_cm():
2025-02-24T16:09:32.4465056Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4465142Z E           AssertionError: 
2025-02-24T16:09:32.4465259Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4465347Z E           
2025-02-24T16:09:32.4465446Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:09:32.4465548Z E           Max absolute difference: 5.26760031e+38
2025-02-24T16:09:32.4465645Z E           Max relative difference: 35562.41947434
2025-02-24T16:09:32.4465818Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4465912Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4466733Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4466823Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4466827Z 
2025-02-24T16:09:32.4467030Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4467288Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T16:09:32.4467292Z 
2025-02-24T16:09:32.4467627Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600736fc0>
2025-02-24T16:09:32.4467825Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ebf4ce00>
2025-02-24T16:09:32.4468029Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T16:09:32.4468033Z 
2025-02-24T16:09:32.4468167Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4468279Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4468364Z         j_blue_estimator = (
2025-02-24T16:09:32.4468588Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4468662Z         )
2025-02-24T16:09:32.4468809Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4468938Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4468942Z 
2025-02-24T16:09:32.4469075Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4469187Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4469191Z 
2025-02-24T16:09:32.4469465Z args = (<function assert_allclose.<locals>.compare at 0x7f05f853e2a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4469536Z        [0., 0., .....,
2025-02-24T16:09:32.4469629Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4469707Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4469789Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4470031Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4470035Z 
2025-02-24T16:09:32.4470112Z     @wraps(func)
2025-02-24T16:09:32.4470199Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4470468Z         with self._recreate_cm():
2025-02-24T16:09:32.4470558Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4470642Z E           AssertionError: 
2025-02-24T16:09:32.4470754Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4470822Z E           
2025-02-24T16:09:32.4470937Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.4471043Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.4471139Z E           Max relative difference: 7.72237896
2025-02-24T16:09:32.4471354Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471444Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471535Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4471620Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471705Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471790Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4471797Z 
2025-02-24T16:09:32.4472003Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4472228Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T16:09:32.4472232Z 
2025-02-24T16:09:32.4472562Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737650>
2025-02-24T16:09:32.4472761Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ebf4ce00>
2025-02-24T16:09:32.4472946Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T16:09:32.4472950Z 
2025-02-24T16:09:32.4473060Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4473165Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4473362Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4473528Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4473638Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4473759Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4473763Z 
2025-02-24T16:09:32.4473899Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4474010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4474359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4474457Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4474565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4474569Z 
2025-02-24T16:09:32.4475051Z args = (<function assert_allclose.<locals>.compare at 0x7f05fe538fe0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:09:32.4475154Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4475406Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4475410Z 
2025-02-24T16:09:32.4475486Z     @wraps(func)
2025-02-24T16:09:32.4475570Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4475660Z         with self._recreate_cm():
2025-02-24T16:09:32.4475748Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4475887Z E           AssertionError: 
2025-02-24T16:09:32.4476075Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4476200Z E           
2025-02-24T16:09:32.4476518Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.4476691Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.4476860Z E           Max relative difference: 4.0036592
2025-02-24T16:09:32.4477116Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4477275Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4477560Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4477644Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4477648Z 
2025-02-24T16:09:32.4477855Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4478088Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T16:09:32.4478092Z 
2025-02-24T16:09:32.4478520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c320>
2025-02-24T16:09:32.4478726Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ebf4ce00>
2025-02-24T16:09:32.4478935Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T16:09:32.4478940Z 
2025-02-24T16:09:32.4479084Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4479190Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4479390Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4479554Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4479653Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4479775Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4479779Z 
2025-02-24T16:09:32.4479912Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4480031Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4480379Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4480470Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4480583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4480587Z 
2025-02-24T16:09:32.4481064Z args = (<function assert_allclose.<locals>.compare at 0x7f05d34428e0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T16:09:32.4481179Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T16:09:32.4481436Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4481440Z 
2025-02-24T16:09:32.4481513Z     @wraps(func)
2025-02-24T16:09:32.4481601Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4481690Z         with self._recreate_cm():
2025-02-24T16:09:32.4481784Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4481867Z E           AssertionError: 
2025-02-24T16:09:32.4481981Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4482058Z E           
2025-02-24T16:09:32.4482158Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4482266Z E           Max absolute difference: 5.00661745e+37
2025-02-24T16:09:32.4482372Z E           Max relative difference: 17.51202125
2025-02-24T16:09:32.4482532Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:09:32.4482618Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T16:09:32.4482766Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:09:32.4482856Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T16:09:32.4482860Z 
2025-02-24T16:09:32.4483075Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4483243Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4483247Z 
2025-02-24T16:09:32.4483251Z 
2025-02-24T16:09:32.4483636Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:10<00:00, 111787.24it/s][A
2025-02-24T16:09:32.4483865Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T16:09:32.4483959Z 
2025-02-24T16:09:32.4484293Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737800>
2025-02-24T16:09:32.4484490Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f158e090>
2025-02-24T16:09:32.4484697Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T16:09:32.4484701Z 
2025-02-24T16:09:32.4484832Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4485016Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4485104Z         j_blue_estimator = (
2025-02-24T16:09:32.4485321Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4485391Z         )
2025-02-24T16:09:32.4485542Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4485663Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4485671Z 
2025-02-24T16:09:32.4485806Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4485916Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4485920Z 
2025-02-24T16:09:32.4486195Z args = (<function assert_allclose.<locals>.compare at 0x7f05f800c860>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4486390Z        [0., 0., .....,
2025-02-24T16:09:32.4486475Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4486554Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4486635Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4486883Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4486887Z 
2025-02-24T16:09:32.4486960Z     @wraps(func)
2025-02-24T16:09:32.4487046Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4487138Z         with self._recreate_cm():
2025-02-24T16:09:32.4487224Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4487317Z E           AssertionError: 
2025-02-24T16:09:32.4487422Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4487493Z E           
2025-02-24T16:09:32.4487601Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.4487705Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.4487805Z E           Max relative difference: 3.25828651
2025-02-24T16:09:32.4487894Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4487985Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4488072Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4488162Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4488245Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4488332Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4488336Z 
2025-02-24T16:09:32.4488544Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4488768Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T16:09:32.4488773Z 
2025-02-24T16:09:32.4489112Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737f50>
2025-02-24T16:09:32.4489314Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f158e090>
2025-02-24T16:09:32.4489489Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T16:09:32.4489493Z 
2025-02-24T16:09:32.4489609Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4489714Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4489912Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4490069Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4490174Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4490295Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4490418Z 
2025-02-24T16:09:32.4490550Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4490662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4490998Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4491093Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4491303Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4491308Z 
2025-02-24T16:09:32.4491783Z args = (<function assert_allclose.<locals>.compare at 0x7f05d76565c0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:09:32.4491890Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4492134Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4492146Z 
2025-02-24T16:09:32.4492218Z     @wraps(func)
2025-02-24T16:09:32.4492303Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4492388Z         with self._recreate_cm():
2025-02-24T16:09:32.4492480Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4492563Z E           AssertionError: 
2025-02-24T16:09:32.4492671Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4492744Z E           
2025-02-24T16:09:32.4492845Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.4492951Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.4493046Z E           Max relative difference: 1.86186015
2025-02-24T16:09:32.4493202Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4493285Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4493436Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4493525Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4493529Z 
2025-02-24T16:09:32.4493728Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4493963Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T16:09:32.4493968Z 
2025-02-24T16:09:32.4494292Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c4d0>
2025-02-24T16:09:32.4494495Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f158e090>
2025-02-24T16:09:32.4494699Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T16:09:32.4494703Z 
2025-02-24T16:09:32.4494843Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4494952Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4495144Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4495310Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4495414Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4495532Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4495536Z 
2025-02-24T16:09:32.4495672Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4495779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4496122Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4496216Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4496421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4496425Z 
2025-02-24T16:09:32.4496894Z args = (<function assert_allclose.<locals>.compare at 0x7f05d237b600>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T16:09:32.4497130Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T16:09:32.4497378Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4497382Z 
2025-02-24T16:09:32.4497456Z     @wraps(func)
2025-02-24T16:09:32.4497538Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4497626Z         with self._recreate_cm():
2025-02-24T16:09:32.4497711Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4497895Z E           AssertionError: 
2025-02-24T16:09:32.4498000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4498072Z E           
2025-02-24T16:09:32.4498171Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4498271Z E           Max absolute difference: 2.90101642e+37
2025-02-24T16:09:32.4498366Z E           Max relative difference: 0.98973757
2025-02-24T16:09:32.4498512Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:09:32.4498600Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T16:09:32.4498744Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:09:32.4498825Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T16:09:32.4498829Z 
2025-02-24T16:09:32.4499027Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4499258Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T16:09:32.4499265Z 
2025-02-24T16:09:32.4499594Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737b00>
2025-02-24T16:09:32.4499794Z simulation = <tardis.simulation.base.Simulation object at 0x7f05d13fbaa0>
2025-02-24T16:09:32.4499993Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T16:09:32.4499997Z 
2025-02-24T16:09:32.4500134Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4500244Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4500330Z         j_blue_estimator = (
2025-02-24T16:09:32.4500558Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4500626Z         )
2025-02-24T16:09:32.4500775Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4500895Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4500900Z 
2025-02-24T16:09:32.4501051Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4501257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4501273Z 
2025-02-24T16:09:32.4501733Z args = (<function assert_allclose.<locals>.compare at 0x7f05fe6b1b20>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4501859Z        [0., 0., .....,
2025-02-24T16:09:32.4501991Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4502129Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4502259Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4502506Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4502510Z 
2025-02-24T16:09:32.4502585Z     @wraps(func)
2025-02-24T16:09:32.4502667Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4502756Z         with self._recreate_cm():
2025-02-24T16:09:32.4502844Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4502934Z E           AssertionError: 
2025-02-24T16:09:32.4503042Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4503118Z E           
2025-02-24T16:09:32.4503230Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.4503331Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.4503430Z E           Max relative difference: 3.25828651
2025-02-24T16:09:32.4503520Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4503700Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4503792Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4503879Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4503966Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4504049Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4504053Z 
2025-02-24T16:09:32.4504334Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4504557Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T16:09:32.4504566Z 
2025-02-24T16:09:32.4504891Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c0e0>
2025-02-24T16:09:32.4505091Z simulation = <tardis.simulation.base.Simulation object at 0x7f05d13fbaa0>
2025-02-24T16:09:32.4505263Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T16:09:32.4505270Z 
2025-02-24T16:09:32.4505383Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4505487Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4505686Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4505847Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4505947Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4506073Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4506078Z 
2025-02-24T16:09:32.4506212Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4506531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4506887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4506977Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4507094Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4507098Z 
2025-02-24T16:09:32.4507570Z args = (<function assert_allclose.<locals>.compare at 0x7f05e8cb8d60>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:09:32.4507676Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4507927Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4507931Z 
2025-02-24T16:09:32.4508003Z     @wraps(func)
2025-02-24T16:09:32.4508093Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4508179Z         with self._recreate_cm():
2025-02-24T16:09:32.4508273Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4508363Z E           AssertionError: 
2025-02-24T16:09:32.4508476Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4508553Z E           
2025-02-24T16:09:32.4508655Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.4508760Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.4508858Z E           Max relative difference: 1.86186015
2025-02-24T16:09:32.4509015Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4509104Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4509252Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4509342Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4509345Z 
2025-02-24T16:09:32.4509549Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4509791Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T16:09:32.4509795Z 
2025-02-24T16:09:32.4510127Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c6e0>
2025-02-24T16:09:32.4510449Z simulation = <tardis.simulation.base.Simulation object at 0x7f05d13fbaa0>
2025-02-24T16:09:32.4510659Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T16:09:32.4510663Z 
2025-02-24T16:09:32.4510802Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4510914Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4511111Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4511371Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4511482Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4511603Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4511607Z 
2025-02-24T16:09:32.4511745Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4511860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4512202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4512297Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4512405Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4512410Z 
2025-02-24T16:09:32.4512891Z args = (<function assert_allclose.<locals>.compare at 0x7f05d2c9cc20>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T16:09:32.4513001Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T16:09:32.4513249Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4513253Z 
2025-02-24T16:09:32.4513331Z     @wraps(func)
2025-02-24T16:09:32.4513416Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4513506Z         with self._recreate_cm():
2025-02-24T16:09:32.4513605Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4513688Z E           AssertionError: 
2025-02-24T16:09:32.4513802Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4513873Z E           
2025-02-24T16:09:32.4513977Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4514081Z E           Max absolute difference: 2.99183385e+37
2025-02-24T16:09:32.4514183Z E           Max relative difference: 0.98992197
2025-02-24T16:09:32.4514341Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:09:32.4514425Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T16:09:32.4514572Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:09:32.4514655Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T16:09:32.4514659Z 
2025-02-24T16:09:32.4514868Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4515112Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T16:09:32.4515117Z 
2025-02-24T16:09:32.4515447Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f06007379e0>
2025-02-24T16:09:32.4515650Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f8756300>
2025-02-24T16:09:32.4515851Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T16:09:32.4515856Z 
2025-02-24T16:09:32.4515997Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4516107Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4516189Z         j_blue_estimator = (
2025-02-24T16:09:32.4516514Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4516581Z         )
2025-02-24T16:09:32.4516733Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4516853Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4516975Z 
2025-02-24T16:09:32.4517107Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4517222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4517225Z 
2025-02-24T16:09:32.4517495Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a16fc0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4517570Z        [0., 0., .....,
2025-02-24T16:09:32.4517648Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4517826Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4517910Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4518152Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4518157Z 
2025-02-24T16:09:32.4518233Z     @wraps(func)
2025-02-24T16:09:32.4518315Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4518403Z         with self._recreate_cm():
2025-02-24T16:09:32.4518497Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4518583Z E           AssertionError: 
2025-02-24T16:09:32.4518691Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4518758Z E           
2025-02-24T16:09:32.4518869Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.4518973Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.4519074Z E           Max relative difference: 7.72237896
2025-02-24T16:09:32.4519176Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519331Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519488Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4519641Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519789Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519931Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4519937Z 
2025-02-24T16:09:32.4520288Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4520571Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T16:09:32.4520575Z 
2025-02-24T16:09:32.4520900Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076da00>
2025-02-24T16:09:32.4521096Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f8756300>
2025-02-24T16:09:32.4521277Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T16:09:32.4521286Z 
2025-02-24T16:09:32.4521394Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4521501Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4521699Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4521864Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4521965Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4522088Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4522092Z 
2025-02-24T16:09:32.4522224Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4522332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4522676Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4522765Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4522882Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4522885Z 
2025-02-24T16:09:32.4523367Z args = (<function assert_allclose.<locals>.compare at 0x7f05d6f9ccc0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:09:32.4523474Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4523833Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4523837Z 
2025-02-24T16:09:32.4523910Z     @wraps(func)
2025-02-24T16:09:32.4523996Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4524083Z         with self._recreate_cm():
2025-02-24T16:09:32.4524168Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4524254Z E           AssertionError: 
2025-02-24T16:09:32.4524355Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4524429Z E           
2025-02-24T16:09:32.4524599Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.4524707Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.4524809Z E           Max relative difference: 4.0036592
2025-02-24T16:09:32.4524960Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4525049Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4525197Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4525284Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4525288Z 
2025-02-24T16:09:32.4525491Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4525722Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T16:09:32.4525726Z 
2025-02-24T16:09:32.4526057Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c620>
2025-02-24T16:09:32.4526251Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f8756300>
2025-02-24T16:09:32.4526571Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T16:09:32.4526575Z 
2025-02-24T16:09:32.4526719Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4526824Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4527024Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4527184Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4527291Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4527412Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4527415Z 
2025-02-24T16:09:32.4527543Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4527654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4527988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4528081Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4528189Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4528193Z 
2025-02-24T16:09:32.4528664Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff0a8f40>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T16:09:32.4528769Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T16:09:32.4529009Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4529013Z 
2025-02-24T16:09:32.4529091Z     @wraps(func)
2025-02-24T16:09:32.4529174Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4529260Z         with self._recreate_cm():
2025-02-24T16:09:32.4529357Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4529439Z E           AssertionError: 
2025-02-24T16:09:32.4529548Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4529617Z E           
2025-02-24T16:09:32.4529720Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4529824Z E           Max absolute difference: 5.0153284e+37
2025-02-24T16:09:32.4529919Z E           Max relative difference: 4.90769503
2025-02-24T16:09:32.4530192Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:09:32.4530275Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T16:09:32.4530419Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:09:32.4530500Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T16:09:32.4530508Z 
2025-02-24T16:09:32.4530706Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4530981Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T16:09:32.4530986Z 
2025-02-24T16:09:32.4531690Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:09:32.4531971Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f0600651220>
2025-02-24T16:09:32.4532332Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:09:32.4532336Z 
2025-02-24T16:09:32.4532427Z     def test_montecarlo_main_loop(
2025-02-24T16:09:32.4532521Z         montecarlo_main_loop_config,
2025-02-24T16:09:32.4532600Z         regression_data,
2025-02-24T16:09:32.4532680Z         atomic_dataset,
2025-02-24T16:09:32.4532748Z     ):
2025-02-24T16:09:32.4532856Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:09:32.4533011Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:09:32.4533102Z             montecarlo_main_loop_config,
2025-02-24T16:09:32.4533195Z             atom_data=atomic_dataset,
2025-02-24T16:09:32.4533287Z             virtual_packet_logging=False,
2025-02-24T16:09:32.4533377Z             legacy_mode_enabled=True,
2025-02-24T16:09:32.4533449Z         )
2025-02-24T16:09:32.4533580Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:09:32.4533691Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:09:32.4533756Z     
2025-02-24T16:09:32.4533889Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:09:32.4533982Z             montecarlo_main_loop_simulation
2025-02-24T16:09:32.4534053Z         )
2025-02-24T16:09:32.4534124Z     
2025-02-24T16:09:32.4534213Z         # Load compare data from refdata
2025-02-24T16:09:32.4534283Z     
2025-02-24T16:09:32.4534377Z         expected_nu = expected_hdf_store[
2025-02-24T16:09:32.4534504Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:09:32.4534571Z         ]
2025-02-24T16:09:32.4534673Z         expected_energy = expected_hdf_store[
2025-02-24T16:09:32.4534810Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:09:32.4534877Z         ]
2025-02-24T16:09:32.4535002Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:09:32.4535148Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:09:32.4535217Z         ]
2025-02-24T16:09:32.4535323Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:09:32.4535455Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:09:32.4535524Z         ]
2025-02-24T16:09:32.4535612Z         expected_hdf_store.close()
2025-02-24T16:09:32.4535819Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T16:09:32.4535992Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:09:32.4536136Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:09:32.4536224Z         actual_nu_bar_estimator = (
2025-02-24T16:09:32.4536481Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:09:32.4536553Z         )
2025-02-24T16:09:32.4536747Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:09:32.4536934Z     
2025-02-24T16:09:32.4537008Z         # Compare
2025-02-24T16:09:32.4537094Z >       npt.assert_allclose(
2025-02-24T16:09:32.4537255Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T16:09:32.4537326Z         )
2025-02-24T16:09:32.4537330Z 
2025-02-24T16:09:32.4537518Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T16:09:32.4537630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4537634Z 
2025-02-24T16:09:32.4538182Z args = (<function assert_allclose.<locals>.compare at 0x7f05cd4428e0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T16:09:32.4538325Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T16:09:32.4538580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T16:09:32.4538588Z 
2025-02-24T16:09:32.4538666Z     @wraps(func)
2025-02-24T16:09:32.4538748Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4538838Z         with self._recreate_cm():
2025-02-24T16:09:32.4538927Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4539013Z E           AssertionError: 
2025-02-24T16:09:32.4539121Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:09:32.4539189Z E           
2025-02-24T16:09:32.4539288Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.4539390Z E           Max absolute difference: 2.25821059e+25
2025-02-24T16:09:32.4539488Z E           Max relative difference: 0.00054426
2025-02-24T16:09:32.4539627Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:09:32.4539748Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:09:32.4539875Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:09:32.4540008Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:09:32.4540129Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:09:32.4540249Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:09:32.4540253Z 
2025-02-24T16:09:32.4540457Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4540615Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:09:32.4540893Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4541349Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4541531Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4541787Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4542099Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4542223Z 	
2025-02-24T16:09:32.4542388Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4542527Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4542710Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4542962Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4543034Z 	
2025-02-24T16:09:32.4543193Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4543354Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4543421Z 	
2025-02-24T16:09:32.4543517Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4543614Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4543703Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4543811Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4543971Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4543975Z 
2025-02-24T16:09:32.4543979Z 
2025-02-24T16:09:32.4544216Z Packets:                                                                                   11201/? [00:10<00:00, 1079.15it/s][A
2025-02-24T16:09:32.4544312Z 
2025-02-24T16:09:32.4544546Z Packets:                                                                                   21697/? [00:10<00:00, 2489.49it/s][A
2025-02-24T16:09:32.4544551Z 
2025-02-24T16:09:32.4544779Z Packets:                                                                                   32512/? [00:10<00:00, 4499.78it/s][A
2025-02-24T16:09:32.4544782Z 
2025-02-24T16:09:32.4545091Z Packets:                                                                                   43359/? [00:10<00:00, 7250.92it/s][A
2025-02-24T16:09:32.4545096Z 
2025-02-24T16:09:32.4545327Z Packets:                                                                                   54173/? [00:10<00:00, 10925.68it/s][A
2025-02-24T16:09:32.4545332Z 
2025-02-24T16:09:32.4545553Z Packets:                                                                                   65049/? [00:10<00:00, 15764.64it/s][A
2025-02-24T16:09:32.4545565Z 
2025-02-24T16:09:32.4545784Z Packets:                                                                                   75864/? [00:10<00:00, 21852.95it/s][A
2025-02-24T16:09:32.4545788Z 
2025-02-24T16:09:32.4546012Z Packets:                                                                                   86743/? [00:11<00:00, 29340.24it/s][A
2025-02-24T16:09:32.4546016Z 
2025-02-24T16:09:32.4546237Z Packets:                                                                                   97658/? [00:11<00:00, 38083.73it/s][A
2025-02-24T16:09:32.4546531Z Iterations:                                                                                40/? [07:57<00:00,  5.57s/it]
2025-02-24T16:09:32.4546536Z 
2025-02-24T16:09:32.4546772Z Packets:                                                                                   104009/? [00:11<00:00, 38083.73it/s][A
2025-02-24T16:09:32.4546932Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:09:32.4547453Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4547686Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4547798Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4547898Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4547979Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4547986Z 
2025-02-24T16:09:32.4548126Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4548212Z 	Starting iteration 1 of 1
2025-02-24T16:09:32.4548322Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4548418Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4548507Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4548600Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4548766Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T16:09:32.4548771Z 
2025-02-24T16:09:32.4549470Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:09:32.4549752Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d7600980>
2025-02-24T16:09:32.4550107Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:09:32.4550111Z 
2025-02-24T16:09:32.4550224Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T16:09:32.4550314Z         montecarlo_main_loop_config,
2025-02-24T16:09:32.4550402Z         regression_data,
2025-02-24T16:09:32.4550485Z         atomic_dataset,
2025-02-24T16:09:32.4550554Z     ):
2025-02-24T16:09:32.4550795Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:09:32.4550969Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T16:09:32.4551042Z     
2025-02-24T16:09:32.4551192Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:09:32.4551288Z             montecarlo_main_loop_config,
2025-02-24T16:09:32.4551379Z             atom_data=atomic_dataset,
2025-02-24T16:09:32.4551468Z             virtual_packet_logging=True,
2025-02-24T16:09:32.4551656Z             legacy_mode_enabled=True,
2025-02-24T16:09:32.4551727Z         )
2025-02-24T16:09:32.4551864Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:09:32.4551976Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:09:32.4552046Z     
2025-02-24T16:09:32.4552186Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T16:09:32.4552251Z     
2025-02-24T16:09:32.4552458Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T16:09:32.4552526Z     
2025-02-24T16:09:32.4552657Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:09:32.4552751Z             montecarlo_main_loop_simulation
2025-02-24T16:09:32.4552822Z         )
2025-02-24T16:09:32.4552891Z     
2025-02-24T16:09:32.4552981Z         expected_nu = expected_hdf_store[
2025-02-24T16:09:32.4553113Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:09:32.4553179Z         ]
2025-02-24T16:09:32.4553285Z         expected_energy = expected_hdf_store[
2025-02-24T16:09:32.4553416Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:09:32.4553487Z         ]
2025-02-24T16:09:32.4553612Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:09:32.4553755Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:09:32.4553824Z         ]
2025-02-24T16:09:32.4553930Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:09:32.4554068Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:09:32.4554135Z         ]
2025-02-24T16:09:32.4554254Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T16:09:32.4554398Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T16:09:32.4554465Z         ]
2025-02-24T16:09:32.4554594Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T16:09:32.4554753Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T16:09:32.4554824Z         ]
2025-02-24T16:09:32.4554893Z     
2025-02-24T16:09:32.4555006Z         transport_state = transport.transport_state
2025-02-24T16:09:32.4555075Z     
2025-02-24T16:09:32.4555245Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:09:32.4555388Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:09:32.4555528Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T16:09:32.4555654Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T16:09:32.4555812Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T16:09:32.4555992Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T16:09:32.4556061Z     
2025-02-24T16:09:32.4556151Z         expected_hdf_store.close()
2025-02-24T16:09:32.4556226Z         # Compare
2025-02-24T16:09:32.4556410Z >       npt.assert_allclose(
2025-02-24T16:09:32.4556503Z             actual_nu_bar_estimator,
2025-02-24T16:09:32.4556603Z             expected_nu_bar_estimator,
2025-02-24T16:09:32.4556680Z             rtol=1e-12,
2025-02-24T16:09:32.4556756Z             atol=1e-15,
2025-02-24T16:09:32.4556829Z         )
2025-02-24T16:09:32.4556833Z 
2025-02-24T16:09:32.4557022Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T16:09:32.4557135Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4557255Z 
2025-02-24T16:09:32.4557706Z args = (<function assert_allclose.<locals>.compare at 0x7f05cd440d60>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T16:09:32.4557851Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T16:09:32.4558113Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T16:09:32.4558117Z 
2025-02-24T16:09:32.4558192Z     @wraps(func)
2025-02-24T16:09:32.4558372Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4558463Z         with self._recreate_cm():
2025-02-24T16:09:32.4558553Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4558636Z E           AssertionError: 
2025-02-24T16:09:32.4558757Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:09:32.4558826Z E           
2025-02-24T16:09:32.4558929Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.4559029Z E           Max absolute difference: 1.93283629e+25
2025-02-24T16:09:32.4559133Z E           Max relative difference: 0.00029148
2025-02-24T16:09:32.4559276Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:09:32.4559393Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:09:32.4559519Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:09:32.4559650Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:09:32.4559773Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:09:32.4559896Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:09:32.4559899Z 
2025-02-24T16:09:32.4560102Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4560261Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:09:32.4560516Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4560970Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4561152Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4561360Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4561527Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4561593Z 	
2025-02-24T16:09:32.4561693Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4561775Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4561883Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4562047Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4562112Z 	
2025-02-24T16:09:32.4562270Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4562428Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4562504Z 	
2025-02-24T16:09:32.4562598Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:09:32.4562693Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:09:32.4562785Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4562887Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4563045Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4563049Z 
2025-02-24T16:09:32.4563052Z 
2025-02-24T16:09:32.4563290Z Packets:                                                                                   108509/? [00:13<00:00, 10526.12it/s][A
2025-02-24T16:09:32.4563295Z 
2025-02-24T16:09:32.4563526Z Packets:                                                                                   116093/? [00:14<00:00, 12604.68it/s][A
2025-02-24T16:09:32.4563531Z 
2025-02-24T16:09:32.4563760Z Packets:                                                                                   122421/? [00:14<00:00, 14659.03it/s][A
2025-02-24T16:09:32.4563763Z 
2025-02-24T16:09:32.4564075Z Packets:                                                                                   127883/? [00:14<00:00, 16736.92it/s][A
2025-02-24T16:09:32.4564079Z 
2025-02-24T16:09:32.4564304Z Packets:                                                                                   132754/? [00:14<00:00, 18810.62it/s][A
2025-02-24T16:09:32.4564308Z 
2025-02-24T16:09:32.4564530Z Packets:                                                                                   137199/? [00:14<00:00, 20889.89it/s][A
2025-02-24T16:09:32.4564534Z 
2025-02-24T16:09:32.4564827Z Packets:                                                                                   141349/? [00:14<00:00, 23006.75it/s][A
2025-02-24T16:09:32.4564831Z 
2025-02-24T16:09:32.4565056Z Packets:                                                                                   145314/? [00:14<00:00, 25037.26it/s][A
2025-02-24T16:09:32.4565060Z 
2025-02-24T16:09:32.4565282Z Packets:                                                                                   149144/? [00:15<00:00, 26890.14it/s][A
2025-02-24T16:09:32.4565290Z 
2025-02-24T16:09:32.4565509Z Packets:                                                                                   152870/? [00:15<00:00, 28425.54it/s][A
2025-02-24T16:09:32.4565513Z 
2025-02-24T16:09:32.4565734Z Packets:                                                                                   156503/? [00:15<00:00, 29811.62it/s][A
2025-02-24T16:09:32.4565738Z 
2025-02-24T16:09:32.4565963Z Packets:                                                                                   160084/? [00:15<00:00, 31017.56it/s][A
2025-02-24T16:09:32.4565966Z 
2025-02-24T16:09:32.4566183Z Packets:                                                                                   163636/? [00:15<00:00, 32051.32it/s][A
2025-02-24T16:09:32.4566187Z 
2025-02-24T16:09:32.4566511Z Packets:                                                                                   167176/? [00:15<00:00, 32878.93it/s][A
2025-02-24T16:09:32.4566518Z 
2025-02-24T16:09:32.4566742Z Packets:                                                                                   170710/? [00:15<00:00, 33505.86it/s][A
2025-02-24T16:09:32.4566745Z 
2025-02-24T16:09:32.4566965Z Packets:                                                                                   174239/? [00:15<00:00, 33781.10it/s][A
2025-02-24T16:09:32.4566968Z 
2025-02-24T16:09:32.4567194Z Packets:                                                                                   177776/? [00:15<00:00, 34231.60it/s][A
2025-02-24T16:09:32.4567201Z 
2025-02-24T16:09:32.4567429Z Packets:                                                                                   181293/? [00:15<00:00, 34500.50it/s][A
2025-02-24T16:09:32.4567432Z 
2025-02-24T16:09:32.4567657Z Packets:                                                                                   184808/? [00:16<00:00, 34685.99it/s][A
2025-02-24T16:09:32.4567660Z 
2025-02-24T16:09:32.4567886Z Packets:                                                                                   188323/? [00:16<00:00, 34655.26it/s][A
2025-02-24T16:09:32.4567893Z 
2025-02-24T16:09:32.4568117Z Packets:                                                                                   191836/? [00:16<00:00, 34795.23it/s][A
2025-02-24T16:09:32.4568121Z 
2025-02-24T16:09:32.4568342Z Packets:                                                                                   195339/? [00:16<00:00, 34768.60it/s][A
2025-02-24T16:09:32.4568346Z 
2025-02-24T16:09:32.4568571Z Packets:                                                                                   198832/? [00:16<00:00, 34751.41it/s][A
2025-02-24T16:09:32.4568574Z 
2025-02-24T16:09:32.4568798Z Packets:                                                                                   202348/? [00:16<00:00, 34870.32it/s][A
2025-02-24T16:09:32.4568949Z Iterations:                                                                                41/? [08:02<00:00,  5.52s/it]
2025-02-24T16:09:32.4569069Z 
2025-02-24T16:09:32.4569299Z Packets:                                                                                   204009/? [00:16<00:00, 34870.32it/s][A
2025-02-24T16:09:32.4569448Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:09:32.4569965Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4570309Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4570421Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4570518Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4570598Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4570602Z 
2025-02-24T16:09:32.4570710Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4570800Z 	Starting iteration 1 of 1
2025-02-24T16:09:32.4570902Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4571002Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:09:32.4571091Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:09:32.4571183Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4571337Z __________________________ test_boundary_interactions __________________________
2025-02-24T16:09:32.4571346Z 
2025-02-24T16:09:32.4572154Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f060ad24d10<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f05eef3cf10>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f05d69e66b0>])
2025-02-24T16:09:32.4572435Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d37bf500>
2025-02-24T16:09:32.4572439Z 
2025-02-24T16:09:32.4572604Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T16:09:32.4572705Z         no_of_packets = len(rpacket_tracker)
2025-02-24T16:09:32.4572778Z     
2025-02-24T16:09:32.4572870Z         # Hard coding the number of columns
2025-02-24T16:09:32.4573025Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T16:09:32.4573132Z         obtained_boundary_interaction = np.full(
2025-02-24T16:09:32.4573223Z             (no_of_packets, 64),
2025-02-24T16:09:32.4573292Z             [-1],
2025-02-24T16:09:32.4573434Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T16:09:32.4573505Z         )
2025-02-24T16:09:32.4573568Z     
2025-02-24T16:09:32.4573693Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T16:09:32.4573790Z             obtained_boundary_interaction[
2025-02-24T16:09:32.4573902Z                 i, : tracker.boundary_interaction.size
2025-02-24T16:09:32.4573995Z             ] = tracker.boundary_interaction
2025-02-24T16:09:32.4574067Z     
2025-02-24T16:09:32.4574233Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T16:09:32.4574326Z             obtained_boundary_interaction
2025-02-24T16:09:32.4574401Z         )
2025-02-24T16:09:32.4574487Z >       npt.assert_array_equal(
2025-02-24T16:09:32.4574650Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T16:09:32.4574717Z         )
2025-02-24T16:09:32.4574721Z 
2025-02-24T16:09:32.4574902Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T16:09:32.4575020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4575025Z 
2025-02-24T16:09:32.4575245Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.4575353Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T16:09:32.4575537Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T16:09:32.4575738Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T16:09:32.4575742Z 
2025-02-24T16:09:32.4575907Z     @wraps(func)
2025-02-24T16:09:32.4575991Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4576083Z         with self._recreate_cm():
2025-02-24T16:09:32.4576171Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4576259Z E           AssertionError: 
2025-02-24T16:09:32.4576443Z E           Arrays are not equal
2025-02-24T16:09:32.4576517Z E           
2025-02-24T16:09:32.4576618Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:09:32.4576857Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.4576956Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.4577064Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.4577192Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.4577283Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.4577385Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.4577393Z 
2025-02-24T16:09:32.4577606Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4577770Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T16:09:32.4577774Z 
2025-02-24T16:09:32.4578473Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:09:32.4578754Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f0dc9ca0>
2025-02-24T16:09:32.4579106Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:09:32.4579515Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f05d6b50bf0>
2025-02-24T16:09:32.4579522Z 
2025-02-24T16:09:32.4579627Z     def test_montecarlo_main_loop_weighted(
2025-02-24T16:09:32.4579718Z         montecarlo_main_loop_config,
2025-02-24T16:09:32.4579800Z         regression_data,
2025-02-24T16:09:32.4579877Z         atomic_dataset,
2025-02-24T16:09:32.4579974Z         simple_weighted_packet_source,
2025-02-24T16:09:32.4580042Z     ):
2025-02-24T16:09:32.4580154Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:09:32.4580333Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T16:09:32.4580425Z             montecarlo_main_loop_config,
2025-02-24T16:09:32.4580516Z             atom_data=atomic_dataset,
2025-02-24T16:09:32.4580609Z             virtual_packet_logging=False,
2025-02-24T16:09:32.4580698Z             legacy_mode_enabled=True,
2025-02-24T16:09:32.4580765Z         )
2025-02-24T16:09:32.4580928Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T16:09:32.4581026Z             simple_weighted_packet_source
2025-02-24T16:09:32.4581093Z         )
2025-02-24T16:09:32.4581247Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T16:09:32.4581382Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T16:09:32.4581453Z     
2025-02-24T16:09:32.4581560Z         # Get the montecarlo simple regression data
2025-02-24T16:09:32.4581649Z         regression_data_dir = (
2025-02-24T16:09:32.4581835Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T16:09:32.4581976Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T16:09:32.4582048Z         )
2025-02-24T16:09:32.4582206Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T16:09:32.4582275Z     
2025-02-24T16:09:32.4582364Z         # Load compare data from refdata
2025-02-24T16:09:32.4582433Z     
2025-02-24T16:09:32.4582532Z         expected_nu = expected_hdf_store[
2025-02-24T16:09:32.4582782Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:09:32.4582853Z         ]
2025-02-24T16:09:32.4582955Z         expected_energy = expected_hdf_store[
2025-02-24T16:09:32.4583091Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:09:32.4583157Z         ]
2025-02-24T16:09:32.4583281Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:09:32.4583428Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:09:32.4583565Z         ]
2025-02-24T16:09:32.4583677Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:09:32.4583804Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:09:32.4583876Z         ]
2025-02-24T16:09:32.4583964Z         expected_hdf_store.close()
2025-02-24T16:09:32.4584052Z         transport_state = (
2025-02-24T16:09:32.4584233Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T16:09:32.4584303Z         )
2025-02-24T16:09:32.4584477Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:09:32.4584615Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:09:32.4584705Z         actual_nu_bar_estimator = (
2025-02-24T16:09:32.4584846Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:09:32.4584918Z         )
2025-02-24T16:09:32.4585105Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:09:32.4585175Z     
2025-02-24T16:09:32.4585249Z         # Compare
2025-02-24T16:09:32.4585332Z         npt.assert_allclose(
2025-02-24T16:09:32.4585487Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T16:09:32.4585555Z         )
2025-02-24T16:09:32.4585747Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T16:09:32.4585906Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T16:09:32.4585913Z 
2025-02-24T16:09:32.4586148Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T16:09:32.4586396Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4586401Z 
2025-02-24T16:09:32.4586948Z args = (<function assert_allclose.<locals>.compare at 0x7f0613d6f420>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T16:09:32.4587158Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T16:09:32.4587586Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T16:09:32.4587593Z 
2025-02-24T16:09:32.4587718Z     @wraps(func)
2025-02-24T16:09:32.4587865Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4588014Z         with self._recreate_cm():
2025-02-24T16:09:32.4588176Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4588329Z E           AssertionError: 
2025-02-24T16:09:32.4588508Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:09:32.4588632Z E           
2025-02-24T16:09:32.4588806Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:09:32.4588988Z E           Max absolute difference: 2.00640487e-05
2025-02-24T16:09:32.4589153Z E           Max relative difference: 2.06329455
2025-02-24T16:09:32.4589431Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.4589595Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.4589856Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.4590011Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.4590016Z 
2025-02-24T16:09:32.4590362Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4590630Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:09:32.4591243Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4592029Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4592353Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4592724Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4593017Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4593287Z 	
2025-02-24T16:09:32.4593455Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4593599Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4593780Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4594076Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4594189Z 	
2025-02-24T16:09:32.4594462Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4594748Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4594869Z 	
2025-02-24T16:09:32.4595031Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4595188Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4595359Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4595543Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4595816Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4595822Z 
2025-02-24T16:09:32.4595827Z 
2025-02-24T16:09:32.4596395Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T16:09:32.4596404Z 
2025-02-24T16:09:32.4596806Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T16:09:32.4596812Z 
2025-02-24T16:09:32.4597273Z Packets:   ████████▍                                                                       10595/100000 [00:00<00:00, 105944.29it/s][A
2025-02-24T16:09:32.4597290Z 
2025-02-24T16:09:32.4597759Z Packets:   █████████████████▏                                                              21545/100000 [00:00<00:00, 108031.96it/s][A
2025-02-24T16:09:32.4597765Z 
2025-02-24T16:09:32.4598124Z Packets:   █████████████████████████▉                                                      32458/100000 [00:00<00:00, 108531.13it/s][A
2025-02-24T16:09:32.4598130Z 
2025-02-24T16:09:32.4598404Z Packets:   ██████████████████████████████████▋                                             43406/100000 [00:00<00:00, 108900.95it/s][A
2025-02-24T16:09:32.4598419Z 
2025-02-24T16:09:32.4598701Z Packets:   ███████████████████████████████████████████▌                                    54402/100000 [00:00<00:00, 109282.49it/s][A
2025-02-24T16:09:32.4598706Z 
2025-02-24T16:09:32.4598996Z Packets:   ████████████████████████████████████████████████████▎                           65331/100000 [00:00<00:00, 108900.29it/s][A
2025-02-24T16:09:32.4599001Z 
2025-02-24T16:09:32.4599480Z Packets:   ████████████████████████████████████████████████████████████▉                   76238/100000 [00:00<00:00, 108953.98it/s][A
2025-02-24T16:09:32.4599485Z 
2025-02-24T16:09:32.4599799Z Packets:   █████████████████████████████████████████████████████████████████████▊          87231/100000 [00:00<00:00, 109262.23it/s][A
2025-02-24T16:09:32.4599803Z 
2025-02-24T16:09:32.4600118Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 98163/100000 [00:00<00:00, 109277.54it/s][A
2025-02-24T16:09:32.4600385Z Iterations:                                                                                45/? [08:52<00:00,  7.87s/it]
2025-02-24T16:09:32.4600390Z 
2025-02-24T16:09:32.4600716Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 109277.54it/s][A
2025-02-24T16:09:32.4600876Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:09:32.4601399Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4601642Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4601756Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4601858Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4601939Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4601943Z 
2025-02-24T16:09:32.4602059Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4602145Z 	Starting iteration 1 of 1
2025-02-24T16:09:32.4602253Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4602350Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4602443Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4602538Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4602754Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T16:09:32.4602761Z 
2025-02-24T16:09:32.4603034Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d4d70>
2025-02-24T16:09:32.4603322Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4603601Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T16:09:32.4603686Z attribute = 'plot_data'
2025-02-24T16:09:32.4603690Z 
2025-02-24T16:09:32.4603782Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4603863Z         "attribute",
2025-02-24T16:09:32.4603931Z         [
2025-02-24T16:09:32.4604011Z             "plot_data",
2025-02-24T16:09:32.4604093Z             "plot_colors",
2025-02-24T16:09:32.4604172Z             "new_bin_edges",
2025-02-24T16:09:32.4604244Z         ],
2025-02-24T16:09:32.4604311Z     )
2025-02-24T16:09:32.4604406Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4604475Z         self,
2025-02-24T16:09:32.4604574Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4604645Z         request,
2025-02-24T16:09:32.4604723Z         attribute,
2025-02-24T16:09:32.4604794Z     ):
2025-02-24T16:09:32.4604861Z         """
2025-02-24T16:09:32.4605004Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4605072Z     
2025-02-24T16:09:32.4605192Z         Parameters:
2025-02-24T16:09:32.4605325Z         -----------
2025-02-24T16:09:32.4605640Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4605810Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4606090Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4606215Z         """
2025-02-24T16:09:32.4606458Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4606605Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4606756Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4607071Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4607227Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4607350Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4607476Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4607598Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4607602Z 
2025-02-24T16:09:32.4607852Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4607974Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4607977Z 
2025-02-24T16:09:32.4608460Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1806a20>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:09:32.4608566Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:09:32.4608821Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4608830Z 
2025-02-24T16:09:32.4608904Z     @wraps(func)
2025-02-24T16:09:32.4608992Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4609078Z         with self._recreate_cm():
2025-02-24T16:09:32.4609173Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4609258Z E           AssertionError: 
2025-02-24T16:09:32.4609375Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4609449Z E           
2025-02-24T16:09:32.4609543Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.4609688Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.4609807Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.4609933Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.4610069Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.4610191Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.4610316Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.4610320Z 
2025-02-24T16:09:32.4610525Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4610685Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4610933Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4611196Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4611361Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4611862Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4612089Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T16:09:32.4612093Z 
2025-02-24T16:09:32.4612358Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d51f0>
2025-02-24T16:09:32.4612651Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4612931Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T16:09:32.4613016Z attribute = 'plot_data'
2025-02-24T16:09:32.4613020Z 
2025-02-24T16:09:32.4613115Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4613190Z         "attribute",
2025-02-24T16:09:32.4613259Z         [
2025-02-24T16:09:32.4613416Z             "plot_data",
2025-02-24T16:09:32.4613527Z             "plot_colors",
2025-02-24T16:09:32.4613670Z             "new_bin_edges",
2025-02-24T16:09:32.4613790Z         ],
2025-02-24T16:09:32.4613926Z     )
2025-02-24T16:09:32.4614244Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4614397Z         self,
2025-02-24T16:09:32.4614537Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4614676Z         request,
2025-02-24T16:09:32.4614779Z         attribute,
2025-02-24T16:09:32.4614950Z     ):
2025-02-24T16:09:32.4615116Z         """
2025-02-24T16:09:32.4615296Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4615431Z     
2025-02-24T16:09:32.4615538Z         Parameters:
2025-02-24T16:09:32.4615713Z         -----------
2025-02-24T16:09:32.4616043Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4616199Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4625445Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4625583Z         """
2025-02-24T16:09:32.4625707Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4625877Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4626058Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4626236Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4626626Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4626869Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4627009Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4627137Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4627143Z 
2025-02-24T16:09:32.4627300Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4627415Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4627420Z 
2025-02-24T16:09:32.4627878Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e29a80>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T16:09:32.4628025Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:09:32.4628278Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4628283Z 
2025-02-24T16:09:32.4628364Z     @wraps(func)
2025-02-24T16:09:32.4628450Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4628542Z         with self._recreate_cm():
2025-02-24T16:09:32.4628634Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4628722Z E           AssertionError: 
2025-02-24T16:09:32.4628836Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4628904Z E           
2025-02-24T16:09:32.4629002Z E           (shapes (558,), (560,) mismatch)
2025-02-24T16:09:32.4629146Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.4629272Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.4629404Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.4629536Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.4629651Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.4629769Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.4629773Z 
2025-02-24T16:09:32.4629987Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4630214Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T16:09:32.4630219Z 
2025-02-24T16:09:32.4630492Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5430>
2025-02-24T16:09:32.4630789Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4631071Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T16:09:32.4631338Z attribute = 'plot_data'
2025-02-24T16:09:32.4631343Z 
2025-02-24T16:09:32.4631441Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4631514Z         "attribute",
2025-02-24T16:09:32.4631590Z         [
2025-02-24T16:09:32.4631667Z             "plot_data",
2025-02-24T16:09:32.4631753Z             "plot_colors",
2025-02-24T16:09:32.4631833Z             "new_bin_edges",
2025-02-24T16:09:32.4631908Z         ],
2025-02-24T16:09:32.4631979Z     )
2025-02-24T16:09:32.4632171Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4632251Z         self,
2025-02-24T16:09:32.4632342Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4632465Z         request,
2025-02-24T16:09:32.4632604Z         attribute,
2025-02-24T16:09:32.4632716Z     ):
2025-02-24T16:09:32.4632792Z         """
2025-02-24T16:09:32.4632938Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4633007Z     
2025-02-24T16:09:32.4633085Z         Parameters:
2025-02-24T16:09:32.4633161Z         -----------
2025-02-24T16:09:32.4633346Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4633450Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4633622Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4633690Z         """
2025-02-24T16:09:32.4633805Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4633945Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4634104Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4634268Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4634426Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4634558Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4634680Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4634807Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4634812Z 
2025-02-24T16:09:32.4634960Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4635082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4635086Z 
2025-02-24T16:09:32.4635541Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e296c0>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:09:32.4635679Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:09:32.4635934Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4635938Z 
2025-02-24T16:09:32.4636010Z     @wraps(func)
2025-02-24T16:09:32.4636100Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4636194Z         with self._recreate_cm():
2025-02-24T16:09:32.4636424Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4636519Z E           AssertionError: 
2025-02-24T16:09:32.4636630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4636703Z E           
2025-02-24T16:09:32.4636793Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.4636935Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.4637057Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.4637180Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.4637314Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.4637425Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.4637546Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.4637550Z 
2025-02-24T16:09:32.4637892Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4638050Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4638473Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4638738Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4638899Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4639339Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4639557Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T16:09:32.4639561Z 
2025-02-24T16:09:32.4639832Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5670>
2025-02-24T16:09:32.4640116Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4640397Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T16:09:32.4640483Z attribute = 'plot_data'
2025-02-24T16:09:32.4640488Z 
2025-02-24T16:09:32.4640581Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4640658Z         "attribute",
2025-02-24T16:09:32.4640726Z         [
2025-02-24T16:09:32.4640809Z             "plot_data",
2025-02-24T16:09:32.4640886Z             "plot_colors",
2025-02-24T16:09:32.4640969Z             "new_bin_edges",
2025-02-24T16:09:32.4641045Z         ],
2025-02-24T16:09:32.4641111Z     )
2025-02-24T16:09:32.4641203Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4641272Z         self,
2025-02-24T16:09:32.4641366Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4641435Z         request,
2025-02-24T16:09:32.4641513Z         attribute,
2025-02-24T16:09:32.4641586Z     ):
2025-02-24T16:09:32.4641654Z         """
2025-02-24T16:09:32.4641799Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4641869Z     
2025-02-24T16:09:32.4641948Z         Parameters:
2025-02-24T16:09:32.4642021Z         -----------
2025-02-24T16:09:32.4642288Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4642456Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4642634Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4642708Z         """
2025-02-24T16:09:32.4642821Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4642966Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4643113Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4643283Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4643435Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4643562Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4643688Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4643807Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4643812Z 
2025-02-24T16:09:32.4643962Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4644085Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4644089Z 
2025-02-24T16:09:32.4644481Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e2b100>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-24T16:09:32.4644621Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:09:32.4644693Z        11042.97481792]))
2025-02-24T16:09:32.4644948Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4644952Z 
2025-02-24T16:09:32.4645121Z     @wraps(func)
2025-02-24T16:09:32.4645205Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4645296Z         with self._recreate_cm():
2025-02-24T16:09:32.4645384Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4645475Z E           AssertionError: 
2025-02-24T16:09:32.4645585Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4645664Z E           
2025-02-24T16:09:32.4645759Z E           (shapes (159,), (153,) mismatch)
2025-02-24T16:09:32.4646130Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.4646523Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.4646740Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.4646971Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.4647164Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.4647351Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.4647356Z 
2025-02-24T16:09:32.4647571Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4647789Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T16:09:32.4647793Z 
2025-02-24T16:09:32.4648096Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d58e0>
2025-02-24T16:09:32.4648393Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4648666Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T16:09:32.4648753Z attribute = 'plot_data'
2025-02-24T16:09:32.4648757Z 
2025-02-24T16:09:32.4648847Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4648925Z         "attribute",
2025-02-24T16:09:32.4648993Z         [
2025-02-24T16:09:32.4649076Z             "plot_data",
2025-02-24T16:09:32.4649164Z             "plot_colors",
2025-02-24T16:09:32.4649242Z             "new_bin_edges",
2025-02-24T16:09:32.4649315Z         ],
2025-02-24T16:09:32.4649383Z     )
2025-02-24T16:09:32.4649472Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4649542Z         self,
2025-02-24T16:09:32.4649637Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4649711Z         request,
2025-02-24T16:09:32.4649782Z         attribute,
2025-02-24T16:09:32.4649854Z     ):
2025-02-24T16:09:32.4649920Z         """
2025-02-24T16:09:32.4650065Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4650130Z     
2025-02-24T16:09:32.4650266Z         Parameters:
2025-02-24T16:09:32.4650394Z         -----------
2025-02-24T16:09:32.4650701Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4650867Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4651148Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4651231Z         """
2025-02-24T16:09:32.4651341Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4651486Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4651640Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4651802Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4651952Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4652077Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4652203Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4652322Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4652326Z 
2025-02-24T16:09:32.4652475Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4652594Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4652734Z 
2025-02-24T16:09:32.4653223Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e287c0>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:09:32.4653335Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:09:32.4653587Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4653592Z 
2025-02-24T16:09:32.4653663Z     @wraps(func)
2025-02-24T16:09:32.4653850Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4653941Z         with self._recreate_cm():
2025-02-24T16:09:32.4654036Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4654119Z E           AssertionError: 
2025-02-24T16:09:32.4654233Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4654305Z E           
2025-02-24T16:09:32.4654397Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.4654541Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.4654661Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.4654786Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.4654919Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.4655031Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.4655155Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.4655160Z 
2025-02-24T16:09:32.4655362Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4655524Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4655782Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4656038Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4656194Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4656649Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4656866Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T16:09:32.4656870Z 
2025-02-24T16:09:32.4657143Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5b20>
2025-02-24T16:09:32.4657429Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4657708Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T16:09:32.4657788Z attribute = 'plot_data'
2025-02-24T16:09:32.4657792Z 
2025-02-24T16:09:32.4657888Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4657967Z         "attribute",
2025-02-24T16:09:32.4658038Z         [
2025-02-24T16:09:32.4658117Z             "plot_data",
2025-02-24T16:09:32.4658194Z             "plot_colors",
2025-02-24T16:09:32.4658287Z             "new_bin_edges",
2025-02-24T16:09:32.4658414Z         ],
2025-02-24T16:09:32.4658538Z     )
2025-02-24T16:09:32.4658686Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4658809Z         self,
2025-02-24T16:09:32.4658964Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4659084Z         request,
2025-02-24T16:09:32.4659215Z         attribute,
2025-02-24T16:09:32.4659319Z     ):
2025-02-24T16:09:32.4659388Z         """
2025-02-24T16:09:32.4659525Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4659593Z     
2025-02-24T16:09:32.4659672Z         Parameters:
2025-02-24T16:09:32.4659748Z         -----------
2025-02-24T16:09:32.4659931Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4660028Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4660332Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4660400Z         """
2025-02-24T16:09:32.4660510Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4660654Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4660804Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4660969Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4661215Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4661344Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4661462Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4661583Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4661587Z 
2025-02-24T16:09:32.4661734Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4661847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4661852Z 
2025-02-24T16:09:32.4662330Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e29d00>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T16:09:32.4662434Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:09:32.4662695Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4662699Z 
2025-02-24T16:09:32.4662774Z     @wraps(func)
2025-02-24T16:09:32.4662861Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4662951Z         with self._recreate_cm():
2025-02-24T16:09:32.4663036Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4663122Z E           AssertionError: 
2025-02-24T16:09:32.4663229Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4663304Z E           
2025-02-24T16:09:32.4663397Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T16:09:32.4663551Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:09:32.4663700Z E                  11152.962595, 11172.044815])
2025-02-24T16:09:32.4663951Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:09:32.4664100Z E                  11398.237865, 11111.204868])
2025-02-24T16:09:32.4664106Z 
2025-02-24T16:09:32.4664452Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4664673Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4664924Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4665260Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4665414Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4665777Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4665992Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T16:09:32.4665996Z 
2025-02-24T16:09:32.4666420Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5d60>
2025-02-24T16:09:32.4666714Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4666998Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T16:09:32.4667080Z attribute = 'plot_data'
2025-02-24T16:09:32.4667084Z 
2025-02-24T16:09:32.4667181Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4667260Z         "attribute",
2025-02-24T16:09:32.4667326Z         [
2025-02-24T16:09:32.4667542Z             "plot_data",
2025-02-24T16:09:32.4667619Z             "plot_colors",
2025-02-24T16:09:32.4667699Z             "new_bin_edges",
2025-02-24T16:09:32.4667767Z         ],
2025-02-24T16:09:32.4667837Z     )
2025-02-24T16:09:32.4667925Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4667998Z         self,
2025-02-24T16:09:32.4668091Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4668161Z         request,
2025-02-24T16:09:32.4668238Z         attribute,
2025-02-24T16:09:32.4668304Z     ):
2025-02-24T16:09:32.4668477Z         """
2025-02-24T16:09:32.4668617Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4668687Z     
2025-02-24T16:09:32.4668765Z         Parameters:
2025-02-24T16:09:32.4668838Z         -----------
2025-02-24T16:09:32.4669022Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4669117Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4669287Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4669359Z         """
2025-02-24T16:09:32.4669474Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4669618Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4669766Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4669936Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4670089Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4670218Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4670342Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4670461Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4670465Z 
2025-02-24T16:09:32.4670627Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4670830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4670842Z 
2025-02-24T16:09:32.4671607Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e2a160>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:09:32.4671761Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:09:32.4672011Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4672016Z 
2025-02-24T16:09:32.4672096Z     @wraps(func)
2025-02-24T16:09:32.4672178Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4672267Z         with self._recreate_cm():
2025-02-24T16:09:32.4672355Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4672443Z E           AssertionError: 
2025-02-24T16:09:32.4672553Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4672623Z E           
2025-02-24T16:09:32.4672722Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.4672858Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.4672979Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.4673106Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.4673235Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.4673352Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.4673474Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.4673478Z 
2025-02-24T16:09:32.4673683Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4673841Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4674082Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4674464Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4674613Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4675085Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4675454Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T16:09:32.4675460Z 
2025-02-24T16:09:32.4675917Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5f40>
2025-02-24T16:09:32.4676209Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4676589Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T16:09:32.4676683Z attribute = 'plot_data'
2025-02-24T16:09:32.4676688Z 
2025-02-24T16:09:32.4676782Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4676862Z         "attribute",
2025-02-24T16:09:32.4676933Z         [
2025-02-24T16:09:32.4677009Z             "plot_data",
2025-02-24T16:09:32.4677091Z             "plot_colors",
2025-02-24T16:09:32.4677167Z             "new_bin_edges",
2025-02-24T16:09:32.4677236Z         ],
2025-02-24T16:09:32.4677301Z     )
2025-02-24T16:09:32.4677394Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4677471Z         self,
2025-02-24T16:09:32.4677560Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4677633Z         request,
2025-02-24T16:09:32.4677706Z         attribute,
2025-02-24T16:09:32.4677777Z     ):
2025-02-24T16:09:32.4677844Z         """
2025-02-24T16:09:32.4677984Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4678053Z     
2025-02-24T16:09:32.4678126Z         Parameters:
2025-02-24T16:09:32.4678205Z         -----------
2025-02-24T16:09:32.4678382Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4678491Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4678656Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4678731Z         """
2025-02-24T16:09:32.4678843Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4678982Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4679131Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4679297Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4679450Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4679572Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4679695Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4679815Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4679820Z 
2025-02-24T16:09:32.4679964Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4680080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4680084Z 
2025-02-24T16:09:32.4680590Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e2a520>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-24T16:09:32.4680815Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:09:32.4680943Z        11042.97481792]))
2025-02-24T16:09:32.4681344Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4681348Z 
2025-02-24T16:09:32.4681430Z     @wraps(func)
2025-02-24T16:09:32.4681512Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4681604Z         with self._recreate_cm():
2025-02-24T16:09:32.4681696Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4681779Z E           AssertionError: 
2025-02-24T16:09:32.4682054Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4682122Z E           
2025-02-24T16:09:32.4682217Z E           (shapes (379,), (381,) mismatch)
2025-02-24T16:09:32.4682354Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:09:32.4682474Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:09:32.4682604Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:09:32.4682830Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:09:32.4682946Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:09:32.4683066Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:09:32.4683070Z 
2025-02-24T16:09:32.4683273Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4683430Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4683673Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4683973Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4684235Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4684787Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4685062Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T16:09:32.4685067Z 
2025-02-24T16:09:32.4685333Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d4aa0>
2025-02-24T16:09:32.4685642Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05e8bc3ad0>
2025-02-24T16:09:32.4686143Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4686509Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T16:09:32.4686514Z 
2025-02-24T16:09:32.4686604Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4686763Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4686833Z     ):
2025-02-24T16:09:32.4686901Z         """
2025-02-24T16:09:32.4687037Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4687105Z     
2025-02-24T16:09:32.4687231Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4687305Z     
2025-02-24T16:09:32.4687380Z         Parameters:
2025-02-24T16:09:32.4687454Z         -----------
2025-02-24T16:09:32.4687612Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4687771Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4687873Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4687939Z         """
2025-02-24T16:09:32.4688034Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4688141Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4688311Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4688571Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4688739Z             expected_values = expected.get(
2025-02-24T16:09:32.4688894Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4689035Z             ).values.flatten()
2025-02-24T16:09:32.4689268Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4689347Z     
2025-02-24T16:09:32.4689485Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4689578Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4689664Z                     expected_values,
2025-02-24T16:09:32.4689882Z                     actual_values,
2025-02-24T16:09:32.4689957Z                     rtol=0.3,
2025-02-24T16:09:32.4690034Z                     atol=3,
2025-02-24T16:09:32.4690101Z                 )
2025-02-24T16:09:32.4690174Z             else:
2025-02-24T16:09:32.4690311Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4690381Z     
2025-02-24T16:09:32.4690493Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:09:32.4690713Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:09:32.4690817Z             if isinstance(data.get_label(), str):
2025-02-24T16:09:32.4690894Z                 assert (
2025-02-24T16:09:32.4691020Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:09:32.4691101Z                     == data.get_label()
2025-02-24T16:09:32.4691172Z                 )
2025-02-24T16:09:32.4691264Z             if isinstance(data, Line2D):
2025-02-24T16:09:32.4691359Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4691445Z                     data.get_xydata(),
2025-02-24T16:09:32.4691585Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:09:32.4691666Z                     rtol=0.3,
2025-02-24T16:09:32.4691738Z                     atol=3,
2025-02-24T16:09:32.4691809Z                 )
2025-02-24T16:09:32.4691813Z 
2025-02-24T16:09:32.4691960Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:09:32.4692076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4692081Z 
2025-02-24T16:09:32.4692380Z args = (<function assert_allclose.<locals>.compare at 0x7f05d29a6a20>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4692510Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:09:32.4692642Z        [1.82e+04, 0.00e+00],
2025-02-24T16:09:32.4692771Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4692894Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4693030Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:09:32.4693381Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4693385Z 
2025-02-24T16:09:32.4693462Z     @wraps(func)
2025-02-24T16:09:32.4693542Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4693632Z         with self._recreate_cm():
2025-02-24T16:09:32.4693722Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4693803Z E           AssertionError: 
2025-02-24T16:09:32.4693913Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4693980Z E           
2025-02-24T16:09:32.4694081Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.4694170Z E           Max absolute difference: 22.
2025-02-24T16:09:32.4694264Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4694357Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4694434Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.4694520Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.4694603Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.4694682Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.4694762Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.4694773Z 
2025-02-24T16:09:32.4694978Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4695137Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4695383Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4695827Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T16:09:32.4695977Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4696569Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:09:32.4696909Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T16:09:32.4696914Z 
2025-02-24T16:09:32.4697182Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6480>
2025-02-24T16:09:32.4697492Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05d9184410>
2025-02-24T16:09:32.4698181Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4698616Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T16:09:32.4698623Z 
2025-02-24T16:09:32.4698777Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4699018Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4699093Z     ):
2025-02-24T16:09:32.4699170Z         """
2025-02-24T16:09:32.4699302Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4699372Z     
2025-02-24T16:09:32.4699500Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4699569Z     
2025-02-24T16:09:32.4699646Z         Parameters:
2025-02-24T16:09:32.4699724Z         -----------
2025-02-24T16:09:32.4699883Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4700038Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4700141Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4700209Z         """
2025-02-24T16:09:32.4700306Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4700414Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4700588Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4700741Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4700838Z             expected_values = expected.get(
2025-02-24T16:09:32.4700933Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4701016Z             ).values.flatten()
2025-02-24T16:09:32.4701152Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4701218Z     
2025-02-24T16:09:32.4701353Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4701451Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4701534Z                     expected_values,
2025-02-24T16:09:32.4701634Z                     actual_values,
2025-02-24T16:09:32.4701772Z                     rtol=0.3,
2025-02-24T16:09:32.4701904Z                     atol=3,
2025-02-24T16:09:32.4702021Z                 )
2025-02-24T16:09:32.4702145Z             else:
2025-02-24T16:09:32.4702380Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4702492Z     
2025-02-24T16:09:32.4702647Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:09:32.4702777Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:09:32.4702880Z             if isinstance(data.get_label(), str):
2025-02-24T16:09:32.4702953Z                 assert (
2025-02-24T16:09:32.4703079Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:09:32.4703167Z                     == data.get_label()
2025-02-24T16:09:32.4703234Z                 )
2025-02-24T16:09:32.4703327Z             if isinstance(data, Line2D):
2025-02-24T16:09:32.4703421Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4703507Z                     data.get_xydata(),
2025-02-24T16:09:32.4703642Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:09:32.4703723Z                     rtol=0.3,
2025-02-24T16:09:32.4703800Z                     atol=3,
2025-02-24T16:09:32.4703868Z                 )
2025-02-24T16:09:32.4703873Z 
2025-02-24T16:09:32.4704024Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:09:32.4704249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4704254Z 
2025-02-24T16:09:32.4704508Z args = (<function assert_allclose.<locals>.compare at 0x7f05f8546980>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4704587Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:09:32.4704664Z        [1.82e+04, 0.00e+00],
2025-02-24T16:09:32.4704741Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4704816Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4704967Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:09:32.4705214Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4705218Z 
2025-02-24T16:09:32.4705295Z     @wraps(func)
2025-02-24T16:09:32.4705383Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4705469Z         with self._recreate_cm():
2025-02-24T16:09:32.4705559Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4705696Z E           AssertionError: 
2025-02-24T16:09:32.4705880Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4705998Z E           
2025-02-24T16:09:32.4706164Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.4706463Z E           Max absolute difference: 22.
2025-02-24T16:09:32.4706620Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4706774Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4706855Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.4706946Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.4707031Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.4707115Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.4707199Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.4707203Z 
2025-02-24T16:09:32.4707407Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4707617Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T16:09:32.4707624Z 
2025-02-24T16:09:32.4707886Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6870>
2025-02-24T16:09:32.4708197Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05e9ef4e00>
2025-02-24T16:09:32.4708699Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4708942Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T16:09:32.4708946Z 
2025-02-24T16:09:32.4709038Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4709198Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4709271Z     ):
2025-02-24T16:09:32.4709341Z         """
2025-02-24T16:09:32.4709471Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4709545Z     
2025-02-24T16:09:32.4709669Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4709740Z     
2025-02-24T16:09:32.4709815Z         Parameters:
2025-02-24T16:09:32.4709892Z         -----------
2025-02-24T16:09:32.4710056Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4710209Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4710305Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4710373Z         """
2025-02-24T16:09:32.4710486Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4710597Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4710772Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4710925Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4711025Z             expected_values = expected.get(
2025-02-24T16:09:32.4711117Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4711333Z             ).values.flatten()
2025-02-24T16:09:32.4711470Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4711537Z     
2025-02-24T16:09:32.4711673Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4711770Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4711854Z                     expected_values,
2025-02-24T16:09:32.4711940Z                     actual_values,
2025-02-24T16:09:32.4712119Z                     rtol=0.3,
2025-02-24T16:09:32.4712201Z                     atol=3,
2025-02-24T16:09:32.4712270Z                 )
2025-02-24T16:09:32.4712279Z 
2025-02-24T16:09:32.4712501Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T16:09:32.4712707Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4712713Z 
2025-02-24T16:09:32.4713402Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff0ab6a0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4713494Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:09:32.4713743Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4713747Z 
2025-02-24T16:09:32.4713822Z     @wraps(func)
2025-02-24T16:09:32.4713908Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4713995Z         with self._recreate_cm():
2025-02-24T16:09:32.4714091Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4714175Z E           AssertionError: 
2025-02-24T16:09:32.4714285Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4714362Z E           
2025-02-24T16:09:32.4714459Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4714556Z E           Max absolute difference: 34
2025-02-24T16:09:32.4714654Z E           Max relative difference: 0.71428571
2025-02-24T16:09:32.4714804Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4714895Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4715035Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4715125Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4715129Z 
2025-02-24T16:09:32.4715334Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4715498Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4715749Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4716008Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4716166Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4716785Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4717149Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T16:09:32.4717155Z 
2025-02-24T16:09:32.4717559Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6930>
2025-02-24T16:09:32.4717876Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05d481d880>
2025-02-24T16:09:32.4718384Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4718628Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T16:09:32.4718631Z 
2025-02-24T16:09:32.4718726Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4718894Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4719100Z     ):
2025-02-24T16:09:32.4719175Z         """
2025-02-24T16:09:32.4719308Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4719381Z     
2025-02-24T16:09:32.4719510Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4719582Z     
2025-02-24T16:09:32.4719657Z         Parameters:
2025-02-24T16:09:32.4719736Z         -----------
2025-02-24T16:09:32.4719904Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4720158Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4720262Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4720331Z         """
2025-02-24T16:09:32.4720429Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4720538Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4720708Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4720864Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4720963Z             expected_values = expected.get(
2025-02-24T16:09:32.4721056Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4721139Z             ).values.flatten()
2025-02-24T16:09:32.4721276Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4721347Z     
2025-02-24T16:09:32.4721479Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4721578Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4721664Z                     expected_values,
2025-02-24T16:09:32.4721752Z                     actual_values,
2025-02-24T16:09:32.4721851Z                     rtol=0.3,
2025-02-24T16:09:32.4721989Z                     atol=3,
2025-02-24T16:09:32.4722116Z                 )
2025-02-24T16:09:32.4722235Z             else:
2025-02-24T16:09:32.4722472Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4722592Z     
2025-02-24T16:09:32.4722780Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:09:32.4722919Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:09:32.4723026Z             if isinstance(data.get_label(), str):
2025-02-24T16:09:32.4723107Z                 assert (
2025-02-24T16:09:32.4723228Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:09:32.4723315Z                     == data.get_label()
2025-02-24T16:09:32.4723383Z                 )
2025-02-24T16:09:32.4723484Z             if isinstance(data, Line2D):
2025-02-24T16:09:32.4723576Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4723667Z                     data.get_xydata(),
2025-02-24T16:09:32.4723808Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:09:32.4723884Z                     rtol=0.3,
2025-02-24T16:09:32.4723961Z                     atol=3,
2025-02-24T16:09:32.4724030Z                 )
2025-02-24T16:09:32.4724038Z 
2025-02-24T16:09:32.4724186Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:09:32.4724299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4724304Z 
2025-02-24T16:09:32.4724562Z args = (<function assert_allclose.<locals>.compare at 0x7f05cddd8180>, array([[1.10e+04, 2.72e+02],
2025-02-24T16:09:32.4724640Z        [1.19e+04, 2.72e+0...,
2025-02-24T16:09:32.4724716Z        [1.82e+04, 5.00e+00],
2025-02-24T16:09:32.4724794Z        [1.91e+04, 5.00e+00],
2025-02-24T16:09:32.4724870Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4724953Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:09:32.4725205Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4725209Z 
2025-02-24T16:09:32.4725282Z     @wraps(func)
2025-02-24T16:09:32.4725370Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4725456Z         with self._recreate_cm():
2025-02-24T16:09:32.4725728Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4725871Z E           AssertionError: 
2025-02-24T16:09:32.4726050Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4726176Z E           
2025-02-24T16:09:32.4726474Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.4726640Z E           Max absolute difference: 34.
2025-02-24T16:09:32.4726785Z E           Max relative difference: 0.65
2025-02-24T16:09:32.4726880Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:09:32.4727115Z E                  [1.19e+04, 2.72e+02],
2025-02-24T16:09:32.4727206Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T16:09:32.4727297Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:09:32.4727373Z E                  [1.19e+04, 3.06e+02],
2025-02-24T16:09:32.4727456Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T16:09:32.4727460Z 
2025-02-24T16:09:32.4727665Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4727828Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4728079Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4728409Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4728566Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4728931Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4729139Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T16:09:32.4729144Z 
2025-02-24T16:09:32.4729415Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6db0>
2025-02-24T16:09:32.4729737Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05edba0b30>
2025-02-24T16:09:32.4729843Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4729995Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4730136Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4730346Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4730592Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T16:09:32.4730596Z 
2025-02-24T16:09:32.4730698Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4730865Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4730937Z     ):
2025-02-24T16:09:32.4731006Z         """
2025-02-24T16:09:32.4731165Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4731294Z     
2025-02-24T16:09:32.4731511Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4731634Z     
2025-02-24T16:09:32.4731761Z         Parameters:
2025-02-24T16:09:32.4731889Z         ----------
2025-02-24T16:09:32.4732135Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4732283Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4732382Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4732451Z         """
2025-02-24T16:09:32.4732549Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4732659Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4732840Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4732906Z     
2025-02-24T16:09:32.4733058Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4733157Z             expected_values = expected.get(
2025-02-24T16:09:32.4733244Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4733333Z             ).values.flatten()
2025-02-24T16:09:32.4733595Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4733667Z     
2025-02-24T16:09:32.4733813Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4733991Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4734138Z                     expected_values,
2025-02-24T16:09:32.4734236Z                     actual_values,
2025-02-24T16:09:32.4734318Z                     rtol=0.3,
2025-02-24T16:09:32.4734391Z                     atol=3,
2025-02-24T16:09:32.4734551Z                 )
2025-02-24T16:09:32.4734622Z             else:
2025-02-24T16:09:32.4734837Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4735016Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4735190Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4735336Z             if data.stackgroup:
2025-02-24T16:09:32.4735460Z                 assert (
2025-02-24T16:09:32.4735613Z                     data.stackgroup
2025-02-24T16:09:32.4735721Z                     == getattr(
2025-02-24T16:09:32.4735834Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4735942Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4736017Z                     ).decode()
2025-02-24T16:09:32.4736093Z                 )
2025-02-24T16:09:32.4736169Z             if data.name:
2025-02-24T16:09:32.4736246Z                 assert (
2025-02-24T16:09:32.4736506Z                     data.name
2025-02-24T16:09:32.4736595Z                     == getattr(
2025-02-24T16:09:32.4736711Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4736804Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4736886Z                     ).decode()
2025-02-24T16:09:32.4736955Z                 )
2025-02-24T16:09:32.4737055Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4737126Z                 data.x,
2025-02-24T16:09:32.4737255Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:09:32.4737337Z                 rtol=0.3,
2025-02-24T16:09:32.4737408Z                 atol=3,
2025-02-24T16:09:32.4737482Z             )
2025-02-24T16:09:32.4737574Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4737649Z                 data.y,
2025-02-24T16:09:32.4737756Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:09:32.4737836Z                 rtol=0.3,
2025-02-24T16:09:32.4737912Z                 atol=3,
2025-02-24T16:09:32.4737982Z             )
2025-02-24T16:09:32.4737986Z 
2025-02-24T16:09:32.4738136Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:09:32.4738253Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4738258Z 
2025-02-24T16:09:32.4738673Z args = (<function assert_allclose.<locals>.compare at 0x7f05e727b600>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4738765Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:09:32.4739008Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4739012Z 
2025-02-24T16:09:32.4739090Z     @wraps(func)
2025-02-24T16:09:32.4739173Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4739265Z         with self._recreate_cm():
2025-02-24T16:09:32.4739422Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4739574Z E           AssertionError: 
2025-02-24T16:09:32.4739752Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4739871Z E           
2025-02-24T16:09:32.4740035Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4740188Z E           Max absolute difference: 22
2025-02-24T16:09:32.4740337Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4740487Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.4740722Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4740861Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4740946Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4740950Z 
2025-02-24T16:09:32.4741165Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4741323Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4741683Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4742126Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T16:09:32.4742277Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4742721Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:09:32.4742927Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T16:09:32.4742936Z 
2025-02-24T16:09:32.4743348Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d7890>
2025-02-24T16:09:32.4743910Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05f1709d60>
2025-02-24T16:09:32.4744057Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4744221Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4744356Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4744567Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4744817Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T16:09:32.4744824Z 
2025-02-24T16:09:32.4744914Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4745084Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4745152Z     ):
2025-02-24T16:09:32.4745226Z         """
2025-02-24T16:09:32.4745359Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4745427Z     
2025-02-24T16:09:32.4745561Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4745626Z     
2025-02-24T16:09:32.4745707Z         Parameters:
2025-02-24T16:09:32.4745783Z         ----------
2025-02-24T16:09:32.4745956Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4746101Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4746199Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4746388Z         """
2025-02-24T16:09:32.4746486Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4746600Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4746781Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4746852Z     
2025-02-24T16:09:32.4747009Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4747108Z             expected_values = expected.get(
2025-02-24T16:09:32.4747200Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4747284Z             ).values.flatten()
2025-02-24T16:09:32.4747428Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4747497Z     
2025-02-24T16:09:32.4747634Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4747731Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4747815Z                     expected_values,
2025-02-24T16:09:32.4747940Z                     actual_values,
2025-02-24T16:09:32.4748110Z                     rtol=0.3,
2025-02-24T16:09:32.4748242Z                     atol=3,
2025-02-24T16:09:32.4748521Z                 )
2025-02-24T16:09:32.4748645Z             else:
2025-02-24T16:09:32.4748891Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4749003Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4749115Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4749198Z             if data.stackgroup:
2025-02-24T16:09:32.4749277Z                 assert (
2025-02-24T16:09:32.4749360Z                     data.stackgroup
2025-02-24T16:09:32.4749582Z                     == getattr(
2025-02-24T16:09:32.4749701Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4749804Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4749883Z                     ).decode()
2025-02-24T16:09:32.4749952Z                 )
2025-02-24T16:09:32.4750033Z             if data.name:
2025-02-24T16:09:32.4750107Z                 assert (
2025-02-24T16:09:32.4750186Z                     data.name
2025-02-24T16:09:32.4750269Z                     == getattr(
2025-02-24T16:09:32.4750371Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4750467Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4750541Z                     ).decode()
2025-02-24T16:09:32.4750613Z                 )
2025-02-24T16:09:32.4750704Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4750783Z                 data.x,
2025-02-24T16:09:32.4750895Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:09:32.4750972Z                 rtol=0.3,
2025-02-24T16:09:32.4751050Z                 atol=3,
2025-02-24T16:09:32.4751119Z             )
2025-02-24T16:09:32.4751213Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4751285Z                 data.y,
2025-02-24T16:09:32.4751398Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:09:32.4751478Z                 rtol=0.3,
2025-02-24T16:09:32.4751555Z                 atol=3,
2025-02-24T16:09:32.4751632Z             )
2025-02-24T16:09:32.4751636Z 
2025-02-24T16:09:32.4751782Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:09:32.4751901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4751905Z 
2025-02-24T16:09:32.4752322Z args = (<function assert_allclose.<locals>.compare at 0x7f05e7233c40>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4752408Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:09:32.4752659Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4752663Z 
2025-02-24T16:09:32.4752737Z     @wraps(func)
2025-02-24T16:09:32.4752826Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4752912Z         with self._recreate_cm():
2025-02-24T16:09:32.4753007Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4753101Z E           AssertionError: 
2025-02-24T16:09:32.4753205Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4753331Z E           
2025-02-24T16:09:32.4753496Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4753656Z E           Max absolute difference: 22
2025-02-24T16:09:32.4753811Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4754046Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.4754214Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4754354Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4754447Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4754451Z 
2025-02-24T16:09:32.4754655Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4754863Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T16:09:32.4754955Z 
2025-02-24T16:09:32.4755228Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d7ce0>
2025-02-24T16:09:32.4755547Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05d87e1130>
2025-02-24T16:09:32.4755647Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4755796Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4756025Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4756239Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4756597Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T16:09:32.4756602Z 
2025-02-24T16:09:32.4756694Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4756864Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4756947Z     ):
2025-02-24T16:09:32.4757029Z         """
2025-02-24T16:09:32.4757163Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4757238Z     
2025-02-24T16:09:32.4757365Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4757439Z     
2025-02-24T16:09:32.4757512Z         Parameters:
2025-02-24T16:09:32.4757593Z         ----------
2025-02-24T16:09:32.4757756Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4757895Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4758005Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4758077Z         """
2025-02-24T16:09:32.4758179Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4758289Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4758471Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4758543Z     
2025-02-24T16:09:32.4758731Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4758906Z             expected_values = expected.get(
2025-02-24T16:09:32.4759051Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4759197Z             ).values.flatten()
2025-02-24T16:09:32.4759432Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4759551Z     
2025-02-24T16:09:32.4759738Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4759837Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4759928Z                     expected_values,
2025-02-24T16:09:32.4760011Z                     actual_values,
2025-02-24T16:09:32.4760095Z                     rtol=0.3,
2025-02-24T16:09:32.4760168Z                     atol=3,
2025-02-24T16:09:32.4760247Z                 )
2025-02-24T16:09:32.4760250Z 
2025-02-24T16:09:32.4760400Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T16:09:32.4760517Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4760521Z 
2025-02-24T16:09:32.4760950Z args = (<function assert_allclose.<locals>.compare at 0x7f05e7232fc0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4761031Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:09:32.4761279Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4761286Z 
2025-02-24T16:09:32.4761367Z     @wraps(func)
2025-02-24T16:09:32.4761449Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4761543Z         with self._recreate_cm():
2025-02-24T16:09:32.4761631Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4761725Z E           AssertionError: 
2025-02-24T16:09:32.4761836Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4761908Z E           
2025-02-24T16:09:32.4762141Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4762232Z E           Max absolute difference: 34
2025-02-24T16:09:32.4762339Z E           Max relative difference: 0.71428571
2025-02-24T16:09:32.4762480Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4762575Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4762716Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4762900Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4762905Z 
2025-02-24T16:09:32.4763115Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4763270Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4763539Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4764003Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4764277Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4764698Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4764905Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T16:09:32.4764910Z 
2025-02-24T16:09:32.4765184Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d7da0>
2025-02-24T16:09:32.4765516Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05f23c36e0>
2025-02-24T16:09:32.4765616Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4765778Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4765912Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4766127Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4766490Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T16:09:32.4766495Z 
2025-02-24T16:09:32.4766590Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4766767Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4766836Z     ):
2025-02-24T16:09:32.4766911Z         """
2025-02-24T16:09:32.4767046Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4767121Z     
2025-02-24T16:09:32.4767255Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4767322Z     
2025-02-24T16:09:32.4767404Z         Parameters:
2025-02-24T16:09:32.4767482Z         ----------
2025-02-24T16:09:32.4767652Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4767791Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4767898Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4767972Z         """
2025-02-24T16:09:32.4768068Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4768181Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4768356Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4768430Z     
2025-02-24T16:09:32.4768580Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4768686Z             expected_values = expected.get(
2025-02-24T16:09:32.4768783Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4768868Z             ).values.flatten()
2025-02-24T16:09:32.4769097Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4769214Z     
2025-02-24T16:09:32.4769441Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4769601Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4769747Z                     expected_values,
2025-02-24T16:09:32.4770024Z                     actual_values,
2025-02-24T16:09:32.4770106Z                     rtol=0.3,
2025-02-24T16:09:32.4770187Z                     atol=3,
2025-02-24T16:09:32.4770257Z                 )
2025-02-24T16:09:32.4770335Z             else:
2025-02-24T16:09:32.4770475Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4770587Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4770700Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4770888Z             if data.stackgroup:
2025-02-24T16:09:32.4770973Z                 assert (
2025-02-24T16:09:32.4771059Z                     data.stackgroup
2025-02-24T16:09:32.4771140Z                     == getattr(
2025-02-24T16:09:32.4771250Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4771356Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4771438Z                     ).decode()
2025-02-24T16:09:32.4771509Z                 )
2025-02-24T16:09:32.4771590Z             if data.name:
2025-02-24T16:09:32.4771664Z                 assert (
2025-02-24T16:09:32.4771748Z                     data.name
2025-02-24T16:09:32.4771823Z                     == getattr(
2025-02-24T16:09:32.4771931Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4772028Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4772105Z                     ).decode()
2025-02-24T16:09:32.4772179Z                 )
2025-02-24T16:09:32.4772275Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4772353Z                 data.x,
2025-02-24T16:09:32.4772464Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:09:32.4772544Z                 rtol=0.3,
2025-02-24T16:09:32.4772623Z                 atol=3,
2025-02-24T16:09:32.4772690Z             )
2025-02-24T16:09:32.4772785Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4772857Z                 data.y,
2025-02-24T16:09:32.4772973Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:09:32.4773048Z                 rtol=0.3,
2025-02-24T16:09:32.4773127Z                 atol=3,
2025-02-24T16:09:32.4773201Z             )
2025-02-24T16:09:32.4773205Z 
2025-02-24T16:09:32.4773351Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:09:32.4773473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4773477Z 
2025-02-24T16:09:32.4773903Z args = (<function assert_allclose.<locals>.compare at 0x7f05e727b4c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4774001Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:09:32.4774430Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4774438Z 
2025-02-24T16:09:32.4774562Z     @wraps(func)
2025-02-24T16:09:32.4774708Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4774854Z         with self._recreate_cm():
2025-02-24T16:09:32.4775001Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4775088Z E           AssertionError: 
2025-02-24T16:09:32.4775200Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4775275Z E           
2025-02-24T16:09:32.4775373Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4775471Z E           Max absolute difference: 34
2025-02-24T16:09:32.4775567Z E           Max relative difference: 0.65
2025-02-24T16:09:32.4775721Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4775818Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4775956Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4776050Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4776142Z 
2025-02-24T16:09:32.4776502Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4776664Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4776911Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4777251Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4777527Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4778057Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4778303Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T16:09:32.4778307Z 
2025-02-24T16:09:32.4778586Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005db770>
2025-02-24T16:09:32.4778908Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4779248Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d5e52690>
2025-02-24T16:09:32.4779536Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T16:09:32.4779540Z 
2025-02-24T16:09:32.4779642Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4779720Z         self,
2025-02-24T16:09:32.4779817Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4779911Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4779981Z         request,
2025-02-24T16:09:32.4780055Z     ):
2025-02-24T16:09:32.4780220Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4780547Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4780696Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4781002Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4781138Z             plot_object = getattr(
2025-02-24T16:09:32.4781271Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4781349Z             )
2025-02-24T16:09:32.4781450Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4781625Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4781743Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4781842Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4781976Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4782046Z                 )
2025-02-24T16:09:32.4782050Z 
2025-02-24T16:09:32.4782207Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4782329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4782336Z 
2025-02-24T16:09:32.4782826Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0cfe700>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4782939Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4783191Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4783196Z 
2025-02-24T16:09:32.4783280Z     @wraps(func)
2025-02-24T16:09:32.4783370Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4783459Z         with self._recreate_cm():
2025-02-24T16:09:32.4783557Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4783638Z E           AssertionError: 
2025-02-24T16:09:32.4783752Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4783821Z E           
2025-02-24T16:09:32.4783927Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4784188Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4784288Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4784451Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4784535Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4784685Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4784768Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4784851Z 
2025-02-24T16:09:32.4785061Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4785294Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T16:09:32.4785298Z 
2025-02-24T16:09:32.4785570Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005dbe60>
2025-02-24T16:09:32.4785891Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4786237Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d6b4f050>
2025-02-24T16:09:32.4786643Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T16:09:32.4786648Z 
2025-02-24T16:09:32.4786752Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4786824Z         self,
2025-02-24T16:09:32.4786929Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4787028Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4787100Z         request,
2025-02-24T16:09:32.4787181Z     ):
2025-02-24T16:09:32.4787290Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4787486Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4787574Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4787821Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4787981Z             plot_object = getattr(
2025-02-24T16:09:32.4788194Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4788317Z             )
2025-02-24T16:09:32.4788488Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4788747Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4788858Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4788965Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4789099Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4789169Z                 )
2025-02-24T16:09:32.4789174Z 
2025-02-24T16:09:32.4789331Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4789447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4789452Z 
2025-02-24T16:09:32.4789940Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b1440>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4790051Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4790303Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4790308Z 
2025-02-24T16:09:32.4790388Z     @wraps(func)
2025-02-24T16:09:32.4790474Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4790575Z         with self._recreate_cm():
2025-02-24T16:09:32.4790670Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4790756Z E           AssertionError: 
2025-02-24T16:09:32.4790872Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4790945Z E           
2025-02-24T16:09:32.4791054Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4791157Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4791534Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4791796Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4791939Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4792200Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4792307Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4792311Z 
2025-02-24T16:09:32.4792638Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4792872Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T16:09:32.4792877Z 
2025-02-24T16:09:32.4793152Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550110>
2025-02-24T16:09:32.4793473Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4793810Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05e92a42c0>
2025-02-24T16:09:32.4794101Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T16:09:32.4794105Z 
2025-02-24T16:09:32.4794207Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4794281Z         self,
2025-02-24T16:09:32.4794387Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4794480Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4794562Z         request,
2025-02-24T16:09:32.4794631Z     ):
2025-02-24T16:09:32.4794745Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4794938Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4795025Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4795210Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4795300Z             plot_object = getattr(
2025-02-24T16:09:32.4795442Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4795513Z             )
2025-02-24T16:09:32.4795619Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4795792Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4795898Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4795999Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4796132Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4796210Z                 )
2025-02-24T16:09:32.4796214Z 
2025-02-24T16:09:32.4796482Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4796673Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4796679Z 
2025-02-24T16:09:32.4797503Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b2de0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4797612Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4797869Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4797873Z 
2025-02-24T16:09:32.4797953Z     @wraps(func)
2025-02-24T16:09:32.4798036Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4798132Z         with self._recreate_cm():
2025-02-24T16:09:32.4798225Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4798315Z E           AssertionError: 
2025-02-24T16:09:32.4798423Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4798498Z E           
2025-02-24T16:09:32.4798605Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4798707Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4798809Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4799087Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4799177Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4799327Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4799410Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4799414Z 
2025-02-24T16:09:32.4799630Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4799954Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T16:09:32.4799959Z 
2025-02-24T16:09:32.4800240Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005514c0>
2025-02-24T16:09:32.4800563Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4800897Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f2242ae0>
2025-02-24T16:09:32.4801186Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T16:09:32.4801190Z 
2025-02-24T16:09:32.4801287Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4801364Z         self,
2025-02-24T16:09:32.4801464Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4801556Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4801654Z         request,
2025-02-24T16:09:32.4801777Z     ):
2025-02-24T16:09:32.4801970Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4802282Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4802433Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4802695Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4802782Z             plot_object = getattr(
2025-02-24T16:09:32.4802914Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4802989Z             )
2025-02-24T16:09:32.4803097Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4803260Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4803373Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4803473Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4803601Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4803679Z                 )
2025-02-24T16:09:32.4803683Z 
2025-02-24T16:09:32.4803833Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4803952Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4803956Z 
2025-02-24T16:09:32.4804439Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1413600>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4804546Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4804803Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4804807Z 
2025-02-24T16:09:32.4804881Z     @wraps(func)
2025-02-24T16:09:32.4804972Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4805064Z         with self._recreate_cm():
2025-02-24T16:09:32.4805221Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4805374Z E           AssertionError: 
2025-02-24T16:09:32.4805559Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4805683Z E           
2025-02-24T16:09:32.4805849Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4806031Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4806155Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4806408Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4806645Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4806793Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4806884Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4806888Z 
2025-02-24T16:09:32.4807098Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4807321Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T16:09:32.4807325Z 
2025-02-24T16:09:32.4807715Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550080>
2025-02-24T16:09:32.4808034Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4808382Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05c59bb6e0>
2025-02-24T16:09:32.4808705Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T16:09:32.4808719Z 
2025-02-24T16:09:32.4808882Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4809008Z         self,
2025-02-24T16:09:32.4809173Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4809330Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4809451Z         request,
2025-02-24T16:09:32.4809577Z     ):
2025-02-24T16:09:32.4809719Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4809913Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4810007Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4810302Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4810458Z             plot_object = getattr(
2025-02-24T16:09:32.4810615Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4810950Z             )
2025-02-24T16:09:32.4811096Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4811348Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4811488Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4811635Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4811895Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4812014Z                 )
2025-02-24T16:09:32.4812018Z 
2025-02-24T16:09:32.4812231Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4812378Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4812382Z 
2025-02-24T16:09:32.4813284Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0c7fb00>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4813575Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4813882Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4813887Z 
2025-02-24T16:09:32.4814028Z     @wraps(func)
2025-02-24T16:09:32.4814144Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4814286Z         with self._recreate_cm():
2025-02-24T16:09:32.4814532Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4814649Z E           AssertionError: 
2025-02-24T16:09:32.4814823Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4814925Z E           
2025-02-24T16:09:32.4815086Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4815327Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4815461Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4815678Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4815797Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4816087Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4816447Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4816507Z 
2025-02-24T16:09:32.4816755Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4817042Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T16:09:32.4817047Z 
2025-02-24T16:09:32.4817469Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550170>
2025-02-24T16:09:32.4817861Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4818334Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d29cbb90>
2025-02-24T16:09:32.4818647Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T16:09:32.4818655Z 
2025-02-24T16:09:32.4818814Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4818934Z         self,
2025-02-24T16:09:32.4819084Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4819302Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4819405Z         request,
2025-02-24T16:09:32.4819540Z     ):
2025-02-24T16:09:32.4819693Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4819928Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4820095Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4820357Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4820526Z             plot_object = getattr(
2025-02-24T16:09:32.4820684Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4820803Z             )
2025-02-24T16:09:32.4820977Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4821225Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4821418Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4821544Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4821722Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4829289Z                 )
2025-02-24T16:09:32.4829302Z 
2025-02-24T16:09:32.4829526Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4829758Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4829767Z 
2025-02-24T16:09:32.4830560Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0cff920>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4830760Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4831038Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4831050Z 
2025-02-24T16:09:32.4831129Z     @wraps(func)
2025-02-24T16:09:32.4831224Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4831314Z         with self._recreate_cm():
2025-02-24T16:09:32.4831417Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4831511Z E           AssertionError: 
2025-02-24T16:09:32.4831629Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4831706Z E           
2025-02-24T16:09:32.4831811Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4831922Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4832028Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4832199Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4832295Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4832446Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4832720Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4832724Z 
2025-02-24T16:09:32.4832944Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4833188Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T16:09:32.4833193Z 
2025-02-24T16:09:32.4833477Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550230>
2025-02-24T16:09:32.4833930Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4834279Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d864acf0>
2025-02-24T16:09:32.4834565Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T16:09:32.4834586Z 
2025-02-24T16:09:32.4834759Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4834898Z         self,
2025-02-24T16:09:32.4834999Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4835098Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4835171Z         request,
2025-02-24T16:09:32.4835246Z     ):
2025-02-24T16:09:32.4835359Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4835555Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4835649Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4835837Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4835933Z             plot_object = getattr(
2025-02-24T16:09:32.4836060Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4836136Z             )
2025-02-24T16:09:32.4836248Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4836607Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4836725Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4836827Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4836962Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4837034Z                 )
2025-02-24T16:09:32.4837039Z 
2025-02-24T16:09:32.4837197Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4837319Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4837323Z 
2025-02-24T16:09:32.4837805Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1476ac0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4837920Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4838171Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4838180Z 
2025-02-24T16:09:32.4838257Z     @wraps(func)
2025-02-24T16:09:32.4838350Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4838437Z         with self._recreate_cm():
2025-02-24T16:09:32.4838536Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4838623Z E           AssertionError: 
2025-02-24T16:09:32.4838739Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4838816Z E           
2025-02-24T16:09:32.4838919Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4839025Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4839129Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4839291Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4839380Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4839531Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4839622Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4839758Z 
2025-02-24T16:09:32.4839971Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4840203Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T16:09:32.4840207Z 
2025-02-24T16:09:32.4840486Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005502f0>
2025-02-24T16:09:32.4840807Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4841270Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f00d8ef0>
2025-02-24T16:09:32.4841552Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T16:09:32.4841557Z 
2025-02-24T16:09:32.4841657Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4841729Z         self,
2025-02-24T16:09:32.4841836Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4841937Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4842009Z         request,
2025-02-24T16:09:32.4842083Z     ):
2025-02-24T16:09:32.4842191Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4842383Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4842470Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4842657Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4842751Z             plot_object = getattr(
2025-02-24T16:09:32.4842885Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4842961Z             )
2025-02-24T16:09:32.4843061Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4843231Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4843336Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4843438Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4843579Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4843651Z                 )
2025-02-24T16:09:32.4843655Z 
2025-02-24T16:09:32.4843810Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4843923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4843927Z 
2025-02-24T16:09:32.4844415Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b2660>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4844524Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4844773Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4844777Z 
2025-02-24T16:09:32.4844859Z     @wraps(func)
2025-02-24T16:09:32.4844944Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4845044Z         with self._recreate_cm():
2025-02-24T16:09:32.4845141Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4845228Z E           AssertionError: 
2025-02-24T16:09:32.4845342Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4845413Z E           
2025-02-24T16:09:32.4845526Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4845628Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4845733Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4845897Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4845986Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4846139Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4846223Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4846226Z 
2025-02-24T16:09:32.4846613Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4846970Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T16:09:32.4846974Z 
2025-02-24T16:09:32.4847252Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005503b0>
2025-02-24T16:09:32.4847575Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4848013Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d44ae570>
2025-02-24T16:09:32.4848337Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T16:09:32.4848342Z 
2025-02-24T16:09:32.4848447Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4848519Z         self,
2025-02-24T16:09:32.4848622Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4848713Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4848795Z         request,
2025-02-24T16:09:32.4848865Z     ):
2025-02-24T16:09:32.4848978Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4849167Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4849253Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4849438Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4849529Z             plot_object = getattr(
2025-02-24T16:09:32.4849662Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4849740Z             )
2025-02-24T16:09:32.4849841Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4850018Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4850127Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4850229Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4850360Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4850439Z                 )
2025-02-24T16:09:32.4850443Z 
2025-02-24T16:09:32.4850600Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4850715Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4850718Z 
2025-02-24T16:09:32.4851197Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1411300>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4851305Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4851558Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4851562Z 
2025-02-24T16:09:32.4851642Z     @wraps(func)
2025-02-24T16:09:32.4851727Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4851820Z         with self._recreate_cm():
2025-02-24T16:09:32.4851908Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4852003Z E           AssertionError: 
2025-02-24T16:09:32.4852124Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4852195Z E           
2025-02-24T16:09:32.4852302Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4852403Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4852507Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4852661Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4852755Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4852907Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4852990Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4852994Z 
2025-02-24T16:09:32.4853212Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4853441Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T16:09:32.4853545Z 
2025-02-24T16:09:32.4853827Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550470>
2025-02-24T16:09:32.4854152Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4854488Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f00d9580>
2025-02-24T16:09:32.4854848Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T16:09:32.4854853Z 
2025-02-24T16:09:32.4854948Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4855027Z         self,
2025-02-24T16:09:32.4855129Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4855223Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4855301Z         request,
2025-02-24T16:09:32.4855369Z     ):
2025-02-24T16:09:32.4855480Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4855667Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4855760Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4855941Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4856028Z             plot_object = getattr(
2025-02-24T16:09:32.4856161Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4856230Z             )
2025-02-24T16:09:32.4856502Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4856671Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4856784Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4856886Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4857014Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4857091Z                 )
2025-02-24T16:09:32.4857099Z 
2025-02-24T16:09:32.4857247Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4857367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4857371Z 
2025-02-24T16:09:32.4857848Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0cfe700>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4857951Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4858208Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4858212Z 
2025-02-24T16:09:32.4858286Z     @wraps(func)
2025-02-24T16:09:32.4858378Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4858474Z         with self._recreate_cm():
2025-02-24T16:09:32.4858563Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4858654Z E           AssertionError: 
2025-02-24T16:09:32.4858769Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4858845Z E           
2025-02-24T16:09:32.4858945Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4859051Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4859156Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4859308Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4859400Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4859554Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4859645Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4859649Z 
2025-02-24T16:09:32.4859859Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4860094Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T16:09:32.4860098Z 
2025-02-24T16:09:32.4860503Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550530>
2025-02-24T16:09:32.4860817Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4861156Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f00d9640>
2025-02-24T16:09:32.4861442Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T16:09:32.4861452Z 
2025-02-24T16:09:32.4861647Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4861727Z         self,
2025-02-24T16:09:32.4861824Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4861918Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4861990Z         request,
2025-02-24T16:09:32.4862064Z     ):
2025-02-24T16:09:32.4862177Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4862359Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4862455Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4862631Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4862722Z             plot_object = getattr(
2025-02-24T16:09:32.4862849Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4862924Z             )
2025-02-24T16:09:32.4863032Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4863197Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4863308Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4863403Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4863535Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4863606Z                 )
2025-02-24T16:09:32.4863610Z 
2025-02-24T16:09:32.4863760Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4863879Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4863883Z 
2025-02-24T16:09:32.4864349Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1476020>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4864456Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4864712Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4864717Z 
2025-02-24T16:09:32.4864792Z     @wraps(func)
2025-02-24T16:09:32.4864880Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4864965Z         with self._recreate_cm():
2025-02-24T16:09:32.4865058Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4865141Z E           AssertionError: 
2025-02-24T16:09:32.4865254Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4865335Z E           
2025-02-24T16:09:32.4865434Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4865541Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4865640Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4865793Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4865879Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4866028Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4866121Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4866125Z 
2025-02-24T16:09:32.4866563Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4866800Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T16:09:32.4866804Z 
2025-02-24T16:09:32.4867076Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005505f0>
2025-02-24T16:09:32.4867539Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4867874Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d8649c70>
2025-02-24T16:09:32.4868161Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T16:09:32.4868165Z 
2025-02-24T16:09:32.4868265Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4868435Z         self,
2025-02-24T16:09:32.4868549Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4868642Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4868723Z         request,
2025-02-24T16:09:32.4868791Z     ):
2025-02-24T16:09:32.4868902Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4869090Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4869177Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4869362Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4869448Z             plot_object = getattr(
2025-02-24T16:09:32.4869588Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4869658Z             )
2025-02-24T16:09:32.4869767Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4869934Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4870047Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4870151Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4870279Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4870357Z                 )
2025-02-24T16:09:32.4870361Z 
2025-02-24T16:09:32.4870515Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4870628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4870635Z 
2025-02-24T16:09:32.4871113Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0c7fb00>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4871216Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4871469Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4871473Z 
2025-02-24T16:09:32.4871557Z     @wraps(func)
2025-02-24T16:09:32.4871642Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4871737Z         with self._recreate_cm():
2025-02-24T16:09:32.4871825Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4871913Z E           AssertionError: 
2025-02-24T16:09:32.4872020Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4872097Z E           
2025-02-24T16:09:32.4872201Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4872307Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4872407Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4872559Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4872651Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4872804Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4872889Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4872892Z 
2025-02-24T16:09:32.4873105Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4873330Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T16:09:32.4873335Z 
2025-02-24T16:09:32.4873612Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005506b0>
2025-02-24T16:09:32.4873933Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4874353Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f239ff80>
2025-02-24T16:09:32.4874642Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T16:09:32.4874646Z 
2025-02-24T16:09:32.4874740Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4874817Z         self,
2025-02-24T16:09:32.4874917Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4875078Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4875157Z         request,
2025-02-24T16:09:32.4875226Z     ):
2025-02-24T16:09:32.4875337Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4875518Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4875610Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4875787Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4875874Z             plot_object = getattr(
2025-02-24T16:09:32.4876007Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4876075Z             )
2025-02-24T16:09:32.4876180Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4876508Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4876622Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4876728Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4876857Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4876934Z                 )
2025-02-24T16:09:32.4876937Z 
2025-02-24T16:09:32.4877083Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4877202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4877205Z 
2025-02-24T16:09:32.4877680Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149b060>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4877787Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4878038Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4878042Z 
2025-02-24T16:09:32.4878116Z     @wraps(func)
2025-02-24T16:09:32.4878207Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4878302Z         with self._recreate_cm():
2025-02-24T16:09:32.4878390Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4878482Z E           AssertionError: 
2025-02-24T16:09:32.4878591Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4878667Z E           
2025-02-24T16:09:32.4878767Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4878878Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4878987Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4879134Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4879224Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4879371Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4879462Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4879466Z 
2025-02-24T16:09:32.4879680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4879906Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T16:09:32.4879910Z 
2025-02-24T16:09:32.4880185Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550770>
2025-02-24T16:09:32.4880502Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4880964Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d0d0c5f0>
2025-02-24T16:09:32.4881257Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T16:09:32.4881261Z 
2025-02-24T16:09:32.4881353Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4881432Z         self,
2025-02-24T16:09:32.4881528Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4881626Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4881805Z         request,
2025-02-24T16:09:32.4881886Z     ):
2025-02-24T16:09:32.4882000Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4882184Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4882276Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4882454Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4882548Z             plot_object = getattr(
2025-02-24T16:09:32.4882680Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4882756Z             )
2025-02-24T16:09:32.4882862Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4883026Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4883137Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4883232Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4883369Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4883446Z                 )
2025-02-24T16:09:32.4883450Z 
2025-02-24T16:09:32.4883594Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4883711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4883715Z 
2025-02-24T16:09:32.4884183Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14999e0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4884295Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4884545Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4884549Z 
2025-02-24T16:09:32.4884624Z     @wraps(func)
2025-02-24T16:09:32.4884714Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4884800Z         with self._recreate_cm():
2025-02-24T16:09:32.4884899Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4884986Z E           AssertionError: 
2025-02-24T16:09:32.4885101Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4885178Z E           
2025-02-24T16:09:32.4885275Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4885378Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4885477Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4885633Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4885726Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4885870Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4885961Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4885965Z 
2025-02-24T16:09:32.4886165Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4886564Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T16:09:32.4886570Z 
2025-02-24T16:09:32.4886851Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550890>
2025-02-24T16:09:32.4887164Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4887504Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05e723d9a0>
2025-02-24T16:09:32.4887912Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T16:09:32.4887917Z 
2025-02-24T16:09:32.4888015Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4888095Z         self,
2025-02-24T16:09:32.4888193Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4888287Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4888360Z         request,
2025-02-24T16:09:32.4888433Z     ):
2025-02-24T16:09:32.4888640Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4888834Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4888927Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4889102Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4889193Z             plot_object = getattr(
2025-02-24T16:09:32.4889320Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4889399Z             )
2025-02-24T16:09:32.4889498Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4889665Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4889776Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4889872Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4890005Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4890075Z                 )
2025-02-24T16:09:32.4890081Z 
2025-02-24T16:09:32.4890235Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4890352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4890357Z 
2025-02-24T16:09:32.4890826Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0c1bd80>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4890936Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4891182Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4891186Z 
2025-02-24T16:09:32.4891267Z     @wraps(func)
2025-02-24T16:09:32.4891355Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4891440Z         with self._recreate_cm():
2025-02-24T16:09:32.4891535Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4891619Z E           AssertionError: 
2025-02-24T16:09:32.4891734Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4891805Z E           
2025-02-24T16:09:32.4891912Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4892022Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4892125Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4892287Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4892377Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4892528Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4892613Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4892624Z 
2025-02-24T16:09:32.4892830Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4893061Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T16:09:32.4893065Z 
2025-02-24T16:09:32.4893341Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005509b0>
2025-02-24T16:09:32.4893662Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4894001Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05eef6bf80>
2025-02-24T16:09:32.4894285Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T16:09:32.4894392Z 
2025-02-24T16:09:32.4894498Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4894569Z         self,
2025-02-24T16:09:32.4894672Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4894767Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4894841Z         request,
2025-02-24T16:09:32.4894916Z     ):
2025-02-24T16:09:32.4895021Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4895287Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4895373Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4895552Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4895641Z             plot_object = getattr(
2025-02-24T16:09:32.4895765Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4895840Z             )
2025-02-24T16:09:32.4895939Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4896110Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4896215Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4896474Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4896611Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4896680Z                 )
2025-02-24T16:09:32.4896684Z 
2025-02-24T16:09:32.4896834Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4896949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4896953Z 
2025-02-24T16:09:32.4897430Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b2de0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4897545Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4897799Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4897803Z 
2025-02-24T16:09:32.4897882Z     @wraps(func)
2025-02-24T16:09:32.4897966Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4898059Z         with self._recreate_cm():
2025-02-24T16:09:32.4898154Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4898237Z E           AssertionError: 
2025-02-24T16:09:32.4898353Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4898427Z E           
2025-02-24T16:09:32.4898531Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4898630Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4898734Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4898889Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4898976Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4899128Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4899214Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4899218Z 
2025-02-24T16:09:32.4899426Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4899639Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T16:09:32.4899643Z 
2025-02-24T16:09:32.4899922Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550d40>
2025-02-24T16:09:32.4900252Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d7acd640>
2025-02-24T16:09:32.4900349Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4900445Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4900549Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4900688Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4901069Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4901319Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T16:09:32.4901324Z 
2025-02-24T16:09:32.4901420Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4901593Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4901668Z     ):
2025-02-24T16:09:32.4901771Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4901982Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4902168Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4902237Z     
2025-02-24T16:09:32.4902355Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4902456Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4902608Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4902727Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4902796Z             )
2025-02-24T16:09:32.4902871Z     
2025-02-24T16:09:32.4902971Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4903083Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4903169Z             if data.stackgroup:
2025-02-24T16:09:32.4903252Z                 assert (
2025-02-24T16:09:32.4903343Z                     data.stackgroup
2025-02-24T16:09:32.4903420Z                     == getattr(
2025-02-24T16:09:32.4903542Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4903640Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4903725Z                     ).decode()
2025-02-24T16:09:32.4903796Z                 )
2025-02-24T16:09:32.4903880Z             if data.name:
2025-02-24T16:09:32.4903962Z                 assert (
2025-02-24T16:09:32.4904040Z                     data.name
2025-02-24T16:09:32.4904126Z                     == getattr(
2025-02-24T16:09:32.4904232Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4904335Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4904410Z                     ).decode()
2025-02-24T16:09:32.4904491Z                 )
2025-02-24T16:09:32.4904598Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4904733Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4904807Z             )
2025-02-24T16:09:32.4904905Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4905035Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4905104Z             )
2025-02-24T16:09:32.4905114Z 
2025-02-24T16:09:32.4905265Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4905384Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4905388Z 
2025-02-24T16:09:32.4905871Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fa840>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4905978Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4906233Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4906238Z 
2025-02-24T16:09:32.4906542Z     @wraps(func)
2025-02-24T16:09:32.4906694Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4906786Z         with self._recreate_cm():
2025-02-24T16:09:32.4906883Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4906967Z E           AssertionError: 
2025-02-24T16:09:32.4907080Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4907157Z E           
2025-02-24T16:09:32.4907263Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4907372Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4907597Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4907756Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4907840Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4907990Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4908078Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4908082Z 
2025-02-24T16:09:32.4908386Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4908600Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T16:09:32.4908604Z 
2025-02-24T16:09:32.4908879Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550e00>
2025-02-24T16:09:32.4909208Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05eabc7470>
2025-02-24T16:09:32.4909315Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4909403Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4909514Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4909612Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4909826Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4910079Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T16:09:32.4910083Z 
2025-02-24T16:09:32.4910174Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4910350Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4910421Z     ):
2025-02-24T16:09:32.4910526Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4910636Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4910818Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4910896Z     
2025-02-24T16:09:32.4911005Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4911105Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4911247Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4911362Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4911439Z             )
2025-02-24T16:09:32.4911510Z     
2025-02-24T16:09:32.4911617Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4911725Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4911822Z             if data.stackgroup:
2025-02-24T16:09:32.4911900Z                 assert (
2025-02-24T16:09:32.4911994Z                     data.stackgroup
2025-02-24T16:09:32.4912075Z                     == getattr(
2025-02-24T16:09:32.4912181Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4912286Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4912366Z                     ).decode()
2025-02-24T16:09:32.4912443Z                 )
2025-02-24T16:09:32.4912523Z             if data.name:
2025-02-24T16:09:32.4912606Z                 assert (
2025-02-24T16:09:32.4912683Z                     data.name
2025-02-24T16:09:32.4912764Z                     == getattr(
2025-02-24T16:09:32.4912876Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4912970Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4913054Z                     ).decode()
2025-02-24T16:09:32.4913127Z                 )
2025-02-24T16:09:32.4913227Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4913356Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4913432Z             )
2025-02-24T16:09:32.4913533Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4913652Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4913731Z             )
2025-02-24T16:09:32.4913825Z 
2025-02-24T16:09:32.4913975Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4914093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4914097Z 
2025-02-24T16:09:32.4914583Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fb920>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4914684Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4915047Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4915052Z 
2025-02-24T16:09:32.4915126Z     @wraps(func)
2025-02-24T16:09:32.4915217Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4915307Z         with self._recreate_cm():
2025-02-24T16:09:32.4915398Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4915489Z E           AssertionError: 
2025-02-24T16:09:32.4915600Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4915675Z E           
2025-02-24T16:09:32.4915773Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4915880Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4915981Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4916131Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4916218Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4916480Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4916569Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4916573Z 
2025-02-24T16:09:32.4916784Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4916986Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T16:09:32.4916993Z 
2025-02-24T16:09:32.4917267Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551250>
2025-02-24T16:09:32.4917589Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d4406600>
2025-02-24T16:09:32.4917688Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4917780Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4917884Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4917987Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4918194Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4918439Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T16:09:32.4918443Z 
2025-02-24T16:09:32.4918534Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4918704Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4918780Z     ):
2025-02-24T16:09:32.4918875Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4918985Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4919160Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4919234Z     
2025-02-24T16:09:32.4919350Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4919448Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4919596Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4919704Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4919779Z             )
2025-02-24T16:09:32.4919847Z     
2025-02-24T16:09:32.4919950Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4920057Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4920142Z             if data.stackgroup:
2025-02-24T16:09:32.4920222Z                 assert (
2025-02-24T16:09:32.4920427Z                     data.stackgroup
2025-02-24T16:09:32.4920508Z                     == getattr(
2025-02-24T16:09:32.4920613Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4920714Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4920796Z                     ).decode()
2025-02-24T16:09:32.4920867Z                 )
2025-02-24T16:09:32.4920948Z             if data.name:
2025-02-24T16:09:32.4921022Z                 assert (
2025-02-24T16:09:32.4921104Z                     data.name
2025-02-24T16:09:32.4921280Z                     == getattr(
2025-02-24T16:09:32.4921395Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4921492Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4921567Z                     ).decode()
2025-02-24T16:09:32.4921641Z                 )
2025-02-24T16:09:32.4921733Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4921862Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4921935Z             )
2025-02-24T16:09:32.4922030Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4922155Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4922224Z             )
2025-02-24T16:09:32.4922228Z 
2025-02-24T16:09:32.4922383Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4922496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4922500Z 
2025-02-24T16:09:32.4922984Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fb7e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4923089Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4923334Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4923339Z 
2025-02-24T16:09:32.4923421Z     @wraps(func)
2025-02-24T16:09:32.4923503Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4923594Z         with self._recreate_cm():
2025-02-24T16:09:32.4923688Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4923772Z E           AssertionError: 
2025-02-24T16:09:32.4923883Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4923954Z E           
2025-02-24T16:09:32.4924057Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4924162Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4924267Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4924423Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4924507Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4924656Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4924739Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4924746Z 
2025-02-24T16:09:32.4924955Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4925158Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T16:09:32.4925168Z 
2025-02-24T16:09:32.4925438Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551310>
2025-02-24T16:09:32.4925763Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05eef19970>
2025-02-24T16:09:32.4925863Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4925955Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4926056Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4926158Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4926500Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4926741Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T16:09:32.4926861Z 
2025-02-24T16:09:32.4926956Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4927126Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4927199Z     ):
2025-02-24T16:09:32.4927301Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4927406Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4927585Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4927751Z     
2025-02-24T16:09:32.4927865Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4927961Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4928110Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4928220Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4928290Z             )
2025-02-24T16:09:32.4928363Z     
2025-02-24T16:09:32.4928467Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4928578Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4928663Z             if data.stackgroup:
2025-02-24T16:09:32.4928744Z                 assert (
2025-02-24T16:09:32.4928833Z                     data.stackgroup
2025-02-24T16:09:32.4928908Z                     == getattr(
2025-02-24T16:09:32.4929019Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4929113Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4929197Z                     ).decode()
2025-02-24T16:09:32.4929268Z                 )
2025-02-24T16:09:32.4929353Z             if data.name:
2025-02-24T16:09:32.4929433Z                 assert (
2025-02-24T16:09:32.4929509Z                     data.name
2025-02-24T16:09:32.4929588Z                     == getattr(
2025-02-24T16:09:32.4929691Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4929786Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4929868Z                     ).decode()
2025-02-24T16:09:32.4929942Z                 )
2025-02-24T16:09:32.4930040Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4930172Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4930246Z             )
2025-02-24T16:09:32.4930337Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4930462Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4930532Z             )
2025-02-24T16:09:32.4930540Z 
2025-02-24T16:09:32.4930692Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4930808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4930812Z 
2025-02-24T16:09:32.4931282Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149b240>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4931390Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4931645Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4931649Z 
2025-02-24T16:09:32.4931723Z     @wraps(func)
2025-02-24T16:09:32.4931811Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4931895Z         with self._recreate_cm():
2025-02-24T16:09:32.4931987Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4932070Z E           AssertionError: 
2025-02-24T16:09:32.4932184Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4932260Z E           
2025-02-24T16:09:32.4932360Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4932467Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4932563Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4932720Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4932891Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4933043Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4933132Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4933135Z 
2025-02-24T16:09:32.4933342Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4933549Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T16:09:32.4933553Z 
2025-02-24T16:09:32.4933898Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005dbbf0>
2025-02-24T16:09:32.4934229Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05ff11b920>
2025-02-24T16:09:32.4934328Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4934416Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4934523Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4934624Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4934839Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4935087Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T16:09:32.4935092Z 
2025-02-24T16:09:32.4935178Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4935351Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4935422Z     ):
2025-02-24T16:09:32.4935522Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4935629Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4935807Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4935879Z     
2025-02-24T16:09:32.4935987Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4936087Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4936231Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4936445Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4936522Z             )
2025-02-24T16:09:32.4936588Z     
2025-02-24T16:09:32.4936693Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4936798Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4936888Z             if data.stackgroup:
2025-02-24T16:09:32.4936963Z                 assert (
2025-02-24T16:09:32.4937054Z                     data.stackgroup
2025-02-24T16:09:32.4937128Z                     == getattr(
2025-02-24T16:09:32.4937237Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4937338Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4937413Z                     ).decode()
2025-02-24T16:09:32.4937487Z                 )
2025-02-24T16:09:32.4937565Z             if data.name:
2025-02-24T16:09:32.4937648Z                 assert (
2025-02-24T16:09:32.4937724Z                     data.name
2025-02-24T16:09:32.4937806Z                     == getattr(
2025-02-24T16:09:32.4937914Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4938004Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4938083Z                     ).decode()
2025-02-24T16:09:32.4938152Z                 )
2025-02-24T16:09:32.4938249Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4938378Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4938453Z             )
2025-02-24T16:09:32.4938550Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4938674Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4938750Z             )
2025-02-24T16:09:32.4938754Z 
2025-02-24T16:09:32.4938899Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4939016Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4939138Z 
2025-02-24T16:09:32.4939613Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffd580>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.4939712Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4939962Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4939967Z 
2025-02-24T16:09:32.4940156Z     @wraps(func)
2025-02-24T16:09:32.4940246Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4940336Z         with self._recreate_cm():
2025-02-24T16:09:32.4940424Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4940511Z E           AssertionError: 
2025-02-24T16:09:32.4940617Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4940692Z E           
2025-02-24T16:09:32.4940791Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.4940900Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.4941003Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.4941156Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4941246Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4941392Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4941482Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4941489Z 
2025-02-24T16:09:32.4941701Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4941903Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T16:09:32.4941906Z 
2025-02-24T16:09:32.4942181Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005db0e0>
2025-02-24T16:09:32.4942501Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05fe3fe6f0>
2025-02-24T16:09:32.4942604Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4942696Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4942799Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4942901Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4943108Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4943359Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T16:09:32.4943363Z 
2025-02-24T16:09:32.4943457Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4943625Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4943699Z     ):
2025-02-24T16:09:32.4943794Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4943905Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4944084Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4944156Z     
2025-02-24T16:09:32.4944273Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4944371Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4944518Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4944624Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4944698Z             )
2025-02-24T16:09:32.4944770Z     
2025-02-24T16:09:32.4944878Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4944987Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4945071Z             if data.stackgroup:
2025-02-24T16:09:32.4945153Z                 assert (
2025-02-24T16:09:32.4945237Z                     data.stackgroup
2025-02-24T16:09:32.4945318Z                     == getattr(
2025-02-24T16:09:32.4945422Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4945609Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4945691Z                     ).decode()
2025-02-24T16:09:32.4945760Z                 )
2025-02-24T16:09:32.4945841Z             if data.name:
2025-02-24T16:09:32.4945914Z                 assert (
2025-02-24T16:09:32.4945997Z                     data.name
2025-02-24T16:09:32.4946071Z                     == getattr(
2025-02-24T16:09:32.4946179Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4946496Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4946579Z                     ).decode()
2025-02-24T16:09:32.4946654Z                 )
2025-02-24T16:09:32.4946750Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4946882Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4946951Z             )
2025-02-24T16:09:32.4947047Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4947176Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4947244Z             )
2025-02-24T16:09:32.4947248Z 
2025-02-24T16:09:32.4947403Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4947520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4947524Z 
2025-02-24T16:09:32.4948008Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffc5e0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.4948158Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4948407Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4948411Z 
2025-02-24T16:09:32.4948495Z     @wraps(func)
2025-02-24T16:09:32.4948582Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4948674Z         with self._recreate_cm():
2025-02-24T16:09:32.4948768Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4948859Z E           AssertionError: 
2025-02-24T16:09:32.4948977Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4949049Z E           
2025-02-24T16:09:32.4949159Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.4949262Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.4949369Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.4949538Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4949628Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4949780Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4949868Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4949872Z 
2025-02-24T16:09:32.4950086Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4950298Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T16:09:32.4950309Z 
2025-02-24T16:09:32.4950581Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551640>
2025-02-24T16:09:32.4950910Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05fa3f40e0>
2025-02-24T16:09:32.4951008Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4951105Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4951213Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4951320Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4951536Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4951783Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T16:09:32.4951786Z 
2025-02-24T16:09:32.4951882Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4952170Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4952244Z     ):
2025-02-24T16:09:32.4952346Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4952456Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4952636Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4952704Z     
2025-02-24T16:09:32.4952821Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4952920Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4953143Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4953261Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4953333Z             )
2025-02-24T16:09:32.4953405Z     
2025-02-24T16:09:32.4953508Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4953620Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4953711Z             if data.stackgroup:
2025-02-24T16:09:32.4953792Z                 assert (
2025-02-24T16:09:32.4953882Z                     data.stackgroup
2025-02-24T16:09:32.4953958Z                     == getattr(
2025-02-24T16:09:32.4954071Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4954169Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4954252Z                     ).decode()
2025-02-24T16:09:32.4954323Z                 )
2025-02-24T16:09:32.4954405Z             if data.name:
2025-02-24T16:09:32.4954492Z                 assert (
2025-02-24T16:09:32.4954571Z                     data.name
2025-02-24T16:09:32.4954651Z                     == getattr(
2025-02-24T16:09:32.4954757Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4954859Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4954934Z                     ).decode()
2025-02-24T16:09:32.4955010Z                 )
2025-02-24T16:09:32.4955113Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4955246Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4955321Z             )
2025-02-24T16:09:32.4955414Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4955544Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4955615Z             )
2025-02-24T16:09:32.4955620Z 
2025-02-24T16:09:32.4955777Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4955901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4955906Z 
2025-02-24T16:09:32.4956484Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14984a0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.4956592Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4956840Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4956859Z 
2025-02-24T16:09:32.4956934Z     @wraps(func)
2025-02-24T16:09:32.4957022Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4957110Z         with self._recreate_cm():
2025-02-24T16:09:32.4957205Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4957290Z E           AssertionError: 
2025-02-24T16:09:32.4957412Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4957487Z E           
2025-02-24T16:09:32.4957593Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.4957697Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.4957796Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.4957956Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4958043Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4958196Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4958404Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4958409Z 
2025-02-24T16:09:32.4958616Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4958825Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T16:09:32.4958829Z 
2025-02-24T16:09:32.4959103Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551700>
2025-02-24T16:09:32.4959530Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05ff84ec30>
2025-02-24T16:09:32.4959634Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4959721Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4959832Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4959931Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4960150Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4960405Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T16:09:32.4960409Z 
2025-02-24T16:09:32.4960495Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4960669Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4960740Z     ):
2025-02-24T16:09:32.4960842Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4960951Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4961133Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4961206Z     
2025-02-24T16:09:32.4961316Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4961418Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4961561Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4961672Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4961745Z             )
2025-02-24T16:09:32.4961819Z     
2025-02-24T16:09:32.4961923Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4962030Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4962119Z             if data.stackgroup:
2025-02-24T16:09:32.4962193Z                 assert (
2025-02-24T16:09:32.4962283Z                     data.stackgroup
2025-02-24T16:09:32.4962358Z                     == getattr(
2025-02-24T16:09:32.4962472Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4962573Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4962648Z                     ).decode()
2025-02-24T16:09:32.4962722Z                 )
2025-02-24T16:09:32.4962801Z             if data.name:
2025-02-24T16:09:32.4962880Z                 assert (
2025-02-24T16:09:32.4963680Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4963689Z 
2025-02-24T16:09:32.4964369Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T16:09:32.4964374Z 
2025-02-24T16:09:32.4964697Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4964701Z 
2025-02-24T16:09:32.4965379Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T16:09:32.4965384Z 
2025-02-24T16:09:32.4965705Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4965709Z 
2025-02-24T16:09:32.4966468Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T16:09:32.4966633Z 
2025-02-24T16:09:32.4966954Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4966958Z 
2025-02-24T16:09:32.4967626Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T16:09:32.4967630Z 
2025-02-24T16:09:32.4968045Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4968049Z 
2025-02-24T16:09:32.4968759Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T16:09:32.4968763Z 
2025-02-24T16:09:32.4969091Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4969095Z 
2025-02-24T16:09:32.4969802Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T16:09:32.4969812Z 
2025-02-24T16:09:32.4970124Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4970131Z 
2025-02-24T16:09:32.4970834Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T16:09:32.4970838Z 
2025-02-24T16:09:32.4971151Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4971164Z 
2025-02-24T16:09:32.4971823Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T16:09:32.4971828Z 
2025-02-24T16:09:32.4972144Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4972148Z 
2025-02-24T16:09:32.4972815Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T16:09:32.4972825Z 
2025-02-24T16:09:32.4973136Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4973139Z 
2025-02-24T16:09:32.4973800Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T16:09:32.4973808Z 
2025-02-24T16:09:32.4974120Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4974129Z 
2025-02-24T16:09:32.4974828Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T16:09:32.4974833Z 
2025-02-24T16:09:32.4975149Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4975152Z 
2025-02-24T16:09:32.4975816Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T16:09:32.4975825Z 
2025-02-24T16:09:32.4976136Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4976222Z 
2025-02-24T16:09:32.4977032Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T16:09:32.4977037Z 
2025-02-24T16:09:32.4977352Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4977356Z 
2025-02-24T16:09:32.4978146Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T16:09:32.4978152Z 
2025-02-24T16:09:32.4978468Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4978472Z 
2025-02-24T16:09:32.4979185Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T16:09:32.4979189Z 
2025-02-24T16:09:32.4979499Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4979503Z 
2025-02-24T16:09:32.4980173Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T16:09:32.4980177Z 
2025-02-24T16:09:32.4980494Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4980498Z 
2025-02-24T16:09:32.4981202Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T16:09:32.4981209Z 
2025-02-24T16:09:32.4981524Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4981528Z 
2025-02-24T16:09:32.4982231Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T16:09:32.4982235Z 
2025-02-24T16:09:32.4982547Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4982550Z 
2025-02-24T16:09:32.4983217Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T16:09:32.4983221Z 
2025-02-24T16:09:32.4983538Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4983544Z 
2025-02-24T16:09:32.4984190Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T16:09:32.4984194Z 
2025-02-24T16:09:32.4984508Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4984511Z 
2025-02-24T16:09:32.4985183Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T16:09:32.4985188Z 
2025-02-24T16:09:32.4985498Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4985502Z 
2025-02-24T16:09:32.4986210Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T16:09:32.4986428Z 
2025-02-24T16:09:32.4986756Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4986759Z 
2025-02-24T16:09:32.4987522Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T16:09:32.4987527Z 
2025-02-24T16:09:32.4987844Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4987848Z 
2025-02-24T16:09:32.4988550Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T16:09:32.4988557Z 
2025-02-24T16:09:32.4988869Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4988873Z 
2025-02-24T16:09:32.4989576Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T16:09:32.4989581Z 
2025-02-24T16:09:32.4989902Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4989906Z 
2025-02-24T16:09:32.4990608Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T16:09:32.4990612Z 
2025-02-24T16:09:32.4990929Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4990935Z 
2025-02-24T16:09:32.4991591Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T16:09:32.4991595Z 
2025-02-24T16:09:32.4991908Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4991912Z 
2025-02-24T16:09:32.4992587Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T16:09:32.4992591Z 
2025-02-24T16:09:32.4992907Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4992910Z 
2025-02-24T16:09:32.4993568Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T16:09:32.4993575Z 
2025-02-24T16:09:32.4993894Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4993898Z 
2025-02-24T16:09:32.4994557Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T16:09:32.4994561Z 
2025-02-24T16:09:32.4994873Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4994876Z 
2025-02-24T16:09:32.4995538Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T16:09:32.4995646Z 
2025-02-24T16:09:32.4995969Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4995973Z 
2025-02-24T16:09:32.4996744Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T16:09:32.4996749Z 
2025-02-24T16:09:32.4997173Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4997177Z 
2025-02-24T16:09:32.4997843Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T16:09:32.4997846Z 
2025-02-24T16:09:32.4998162Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4998170Z 
2025-02-24T16:09:32.4998824Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T16:09:32.4998828Z 
2025-02-24T16:09:32.4999148Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4999151Z 
2025-02-24T16:09:32.4999855Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T16:09:32.4999865Z 
2025-02-24T16:09:32.5000178Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5000181Z 
2025-02-24T16:09:32.5000847Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T16:09:32.5000854Z 
2025-02-24T16:09:32.5001166Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5001174Z 
2025-02-24T16:09:32.5001832Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T16:09:32.5001840Z 
2025-02-24T16:09:32.5002155Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5002159Z 
2025-02-24T16:09:32.5002867Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T16:09:32.5002877Z 
2025-02-24T16:09:32.5003192Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5003196Z 
2025-02-24T16:09:32.5003898Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T16:09:32.5003903Z 
2025-02-24T16:09:32.5004215Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5004227Z 
2025-02-24T16:09:32.5004927Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T16:09:32.5004931Z 
2025-02-24T16:09:32.5005248Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5005378Z 
2025-02-24T16:09:32.5006043Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T16:09:32.5006052Z 
2025-02-24T16:09:32.5006133Z                     data.name
2025-02-24T16:09:32.5006217Z                     == getattr(
2025-02-24T16:09:32.5006426Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5006530Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5006714Z                     ).decode()
2025-02-24T16:09:32.5006793Z                 )
2025-02-24T16:09:32.5006896Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5007028Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5007104Z             )
2025-02-24T16:09:32.5007197Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5007323Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5007399Z             )
2025-02-24T16:09:32.5007404Z 
2025-02-24T16:09:32.5007563Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5007686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5007691Z 
2025-02-24T16:09:32.5008170Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1499da0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.5008284Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5008544Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5008549Z 
2025-02-24T16:09:32.5008623Z     @wraps(func)
2025-02-24T16:09:32.5008717Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5008806Z         with self._recreate_cm():
2025-02-24T16:09:32.5008900Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5008988Z E           AssertionError: 
2025-02-24T16:09:32.5009104Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5009182Z E           
2025-02-24T16:09:32.5009284Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5009390Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5009490Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.5009651Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5009741Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5009893Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5009984Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5009988Z 
2025-02-24T16:09:32.5010194Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5010408Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T16:09:32.5010415Z 
2025-02-24T16:09:32.5010689Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005517c0>
2025-02-24T16:09:32.5011022Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05c5c78ce0>
2025-02-24T16:09:32.5011125Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5011214Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5011322Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5011430Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5011651Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5011908Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T16:09:32.5011912Z 
2025-02-24T16:09:32.5012000Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5012175Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5012362Z     ):
2025-02-24T16:09:32.5012467Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5012577Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5012760Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5012832Z     
2025-02-24T16:09:32.5012945Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5013045Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5013263Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5013379Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5013454Z             )
2025-02-24T16:09:32.5013523Z     
2025-02-24T16:09:32.5013628Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5013733Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5013824Z             if data.stackgroup:
2025-02-24T16:09:32.5013903Z                 assert (
2025-02-24T16:09:32.5013993Z                     data.stackgroup
2025-02-24T16:09:32.5014069Z                     == getattr(
2025-02-24T16:09:32.5014182Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5014284Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5014363Z                     ).decode()
2025-02-24T16:09:32.5014439Z                 )
2025-02-24T16:09:32.5014521Z             if data.name:
2025-02-24T16:09:32.5014600Z                 assert (
2025-02-24T16:09:32.5014681Z                     data.name
2025-02-24T16:09:32.5014761Z                     == getattr(
2025-02-24T16:09:32.5014871Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5014964Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5015051Z                     ).decode()
2025-02-24T16:09:32.5015121Z                 )
2025-02-24T16:09:32.5015219Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5015352Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5015427Z             )
2025-02-24T16:09:32.5015524Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5015646Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5015721Z             )
2025-02-24T16:09:32.5015725Z 
2025-02-24T16:09:32.5015871Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5015998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5016002Z 
2025-02-24T16:09:32.5016592Z args = (<function assert_allclose.<locals>.compare at 0x7f05cefff920>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5016693Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5016954Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5016962Z 
2025-02-24T16:09:32.5017036Z     @wraps(func)
2025-02-24T16:09:32.5017125Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5017217Z         with self._recreate_cm():
2025-02-24T16:09:32.5017307Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5017397Z E           AssertionError: 
2025-02-24T16:09:32.5017505Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5017582Z E           
2025-02-24T16:09:32.5017682Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5017794Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5017897Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5018053Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5018146Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5018296Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5018504Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5018508Z 
2025-02-24T16:09:32.5018721Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5018925Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T16:09:32.5018928Z 
2025-02-24T16:09:32.5019210Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551880>
2025-02-24T16:09:32.5019630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05cdbeab40>
2025-02-24T16:09:32.5019735Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5019828Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5019931Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5020034Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5020245Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5020499Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T16:09:32.5020503Z 
2025-02-24T16:09:32.5020595Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5020768Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5020846Z     ):
2025-02-24T16:09:32.5020948Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5021061Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5021240Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5021314Z     
2025-02-24T16:09:32.5021430Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5021526Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5021677Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5021786Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5021866Z             )
2025-02-24T16:09:32.5021935Z     
2025-02-24T16:09:32.5022040Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5022150Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5022235Z             if data.stackgroup:
2025-02-24T16:09:32.5022315Z                 assert (
2025-02-24T16:09:32.5022401Z                     data.stackgroup
2025-02-24T16:09:32.5022482Z                     == getattr(
2025-02-24T16:09:32.5022589Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5022692Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5022775Z                     ).decode()
2025-02-24T16:09:32.5022844Z                 )
2025-02-24T16:09:32.5022928Z             if data.name:
2025-02-24T16:09:32.5023005Z                 assert (
2025-02-24T16:09:32.5023089Z                     data.name
2025-02-24T16:09:32.5023166Z                     == getattr(
2025-02-24T16:09:32.5023280Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5023382Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5023459Z                     ).decode()
2025-02-24T16:09:32.5023534Z                 )
2025-02-24T16:09:32.5023628Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5023764Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5023834Z             )
2025-02-24T16:09:32.5023933Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5024064Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5024133Z             )
2025-02-24T16:09:32.5024136Z 
2025-02-24T16:09:32.5024294Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5024411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5024416Z 
2025-02-24T16:09:32.5024892Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffca40>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5025088Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5025340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5025345Z 
2025-02-24T16:09:32.5025424Z     @wraps(func)
2025-02-24T16:09:32.5025509Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5025601Z         with self._recreate_cm():
2025-02-24T16:09:32.5025777Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5025870Z E           AssertionError: 
2025-02-24T16:09:32.5025988Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5026060Z E           
2025-02-24T16:09:32.5026168Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5026373Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5026482Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5026647Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5026735Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5026885Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5026968Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5026971Z 
2025-02-24T16:09:32.5027185Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5027397Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T16:09:32.5027408Z 
2025-02-24T16:09:32.5027679Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551940>
2025-02-24T16:09:32.5028015Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d0f7a3c0>
2025-02-24T16:09:32.5028114Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5028208Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5028319Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5028427Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5028652Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5028901Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T16:09:32.5028905Z 
2025-02-24T16:09:32.5029002Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5029174Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5029251Z     ):
2025-02-24T16:09:32.5029359Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5029468Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5029652Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5029721Z     
2025-02-24T16:09:32.5029841Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5029941Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5030094Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5030212Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5030285Z             )
2025-02-24T16:09:32.5030360Z     
2025-02-24T16:09:32.5030462Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5030574Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5030662Z             if data.stackgroup:
2025-02-24T16:09:32.5030748Z                 assert (
2025-02-24T16:09:32.5030837Z                     data.stackgroup
2025-02-24T16:09:32.5030912Z                     == getattr(
2025-02-24T16:09:32.5031023Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5031119Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5031201Z                     ).decode()
2025-02-24T16:09:32.5031271Z                 )
2025-02-24T16:09:32.5031477Z             if data.name:
2025-02-24T16:09:32.5031556Z                 assert (
2025-02-24T16:09:32.5031633Z                     data.name
2025-02-24T16:09:32.5031715Z                     == getattr(
2025-02-24T16:09:32.5031821Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5031919Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5031994Z                     ).decode()
2025-02-24T16:09:32.5032071Z                 )
2025-02-24T16:09:32.5032270Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5032403Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5032480Z             )
2025-02-24T16:09:32.5032573Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5032700Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5032770Z             )
2025-02-24T16:09:32.5032774Z 
2025-02-24T16:09:32.5032927Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5033053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5033057Z 
2025-02-24T16:09:32.5033536Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffc400>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5033644Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5033899Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5033911Z 
2025-02-24T16:09:32.5033985Z     @wraps(func)
2025-02-24T16:09:32.5034077Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5034164Z         with self._recreate_cm():
2025-02-24T16:09:32.5034260Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5034347Z E           AssertionError: 
2025-02-24T16:09:32.5034466Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5034546Z E           
2025-02-24T16:09:32.5034648Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5034759Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5034858Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5035018Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5035104Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5035257Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5035351Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5035357Z 
2025-02-24T16:09:32.5035563Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5035776Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T16:09:32.5035780Z 
2025-02-24T16:09:32.5036055Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551a00>
2025-02-24T16:09:32.5036490Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05cdbeb920>
2025-02-24T16:09:32.5036594Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5036683Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5036796Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5036895Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5037116Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5037500Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T16:09:32.5037505Z 
2025-02-24T16:09:32.5037625Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5044211Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5044302Z     ):
2025-02-24T16:09:32.5044413Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5044700Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5044894Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5044961Z     
2025-02-24T16:09:32.5045080Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5045177Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5045326Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5045437Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5045665Z             )
2025-02-24T16:09:32.5045737Z     
2025-02-24T16:09:32.5045845Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5045954Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5046040Z             if data.stackgroup:
2025-02-24T16:09:32.5046116Z                 assert (
2025-02-24T16:09:32.5046199Z                     data.stackgroup
2025-02-24T16:09:32.5046424Z                     == getattr(
2025-02-24T16:09:32.5046550Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5046652Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5046730Z                     ).decode()
2025-02-24T16:09:32.5046798Z                 )
2025-02-24T16:09:32.5046881Z             if data.name:
2025-02-24T16:09:32.5046955Z                 assert (
2025-02-24T16:09:32.5047038Z                     data.name
2025-02-24T16:09:32.5047113Z                     == getattr(
2025-02-24T16:09:32.5047230Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5047330Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5047407Z                     ).decode()
2025-02-24T16:09:32.5047486Z                 )
2025-02-24T16:09:32.5047584Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5047727Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5047801Z             )
2025-02-24T16:09:32.5047906Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5048037Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5048107Z             )
2025-02-24T16:09:32.5048112Z 
2025-02-24T16:09:32.5048308Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5048431Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5048435Z 
2025-02-24T16:09:32.5048927Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149a160>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5049038Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5049296Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5049300Z 
2025-02-24T16:09:32.5049381Z     @wraps(func)
2025-02-24T16:09:32.5049471Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5049568Z         with self._recreate_cm():
2025-02-24T16:09:32.5049664Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5049751Z E           AssertionError: 
2025-02-24T16:09:32.5049871Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5049943Z E           
2025-02-24T16:09:32.5050050Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5050155Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5050263Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5050434Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5050523Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5050679Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5050764Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5050768Z 
2025-02-24T16:09:32.5050989Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5051331Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T16:09:32.5051335Z 
2025-02-24T16:09:32.5051614Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551ac0>
2025-02-24T16:09:32.5051953Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d0d3b560>
2025-02-24T16:09:32.5052056Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5052251Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5052369Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5052474Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5052702Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5052956Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T16:09:32.5052963Z 
2025-02-24T16:09:32.5053060Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5053246Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5053318Z     ):
2025-02-24T16:09:32.5053421Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5053532Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5053716Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5053785Z     
2025-02-24T16:09:32.5053910Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5054019Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5054169Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5054291Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5054362Z             )
2025-02-24T16:09:32.5054436Z     
2025-02-24T16:09:32.5054538Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5054651Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5054748Z             if data.stackgroup:
2025-02-24T16:09:32.5054825Z                 assert (
2025-02-24T16:09:32.5054917Z                     data.stackgroup
2025-02-24T16:09:32.5054994Z                     == getattr(
2025-02-24T16:09:32.5055111Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5055211Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5055296Z                     ).decode()
2025-02-24T16:09:32.5055375Z                 )
2025-02-24T16:09:32.5055456Z             if data.name:
2025-02-24T16:09:32.5055538Z                 assert (
2025-02-24T16:09:32.5055617Z                     data.name
2025-02-24T16:09:32.5055701Z                     == getattr(
2025-02-24T16:09:32.5055807Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5055907Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5055990Z                     ).decode()
2025-02-24T16:09:32.5056064Z                 )
2025-02-24T16:09:32.5056167Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5056408Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5056485Z             )
2025-02-24T16:09:32.5056581Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5056713Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5056789Z             )
2025-02-24T16:09:32.5056793Z 
2025-02-24T16:09:32.5056949Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5057073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5057077Z 
2025-02-24T16:09:32.5057563Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffe0c0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5057671Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5058052Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5058056Z 
2025-02-24T16:09:32.5058133Z     @wraps(func)
2025-02-24T16:09:32.5058225Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5058313Z         with self._recreate_cm():
2025-02-24T16:09:32.5058409Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5058503Z E           AssertionError: 
2025-02-24T16:09:32.5058614Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5058791Z E           
2025-02-24T16:09:32.5058896Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5059002Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5059099Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5059260Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5059352Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5059503Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5059594Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5059598Z 
2025-02-24T16:09:32.5059810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5060027Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T16:09:32.5060031Z 
2025-02-24T16:09:32.5060316Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551b80>
2025-02-24T16:09:32.5060642Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d72a1eb0>
2025-02-24T16:09:32.5060747Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5060834Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5060943Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5061045Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5061264Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5061521Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T16:09:32.5061525Z 
2025-02-24T16:09:32.5061612Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5061794Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5061865Z     ):
2025-02-24T16:09:32.5061968Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5062086Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5062267Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5062341Z     
2025-02-24T16:09:32.5062455Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5062558Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5062705Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5062823Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5062899Z             )
2025-02-24T16:09:32.5062968Z     
2025-02-24T16:09:32.5063074Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5063181Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5063273Z             if data.stackgroup:
2025-02-24T16:09:32.5063349Z                 assert (
2025-02-24T16:09:32.5063443Z                     data.stackgroup
2025-02-24T16:09:32.5063530Z                     == getattr(
2025-02-24T16:09:32.5063639Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5063745Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5063822Z                     ).decode()
2025-02-24T16:09:32.5063900Z                 )
2025-02-24T16:09:32.5063978Z             if data.name:
2025-02-24T16:09:32.5064058Z                 assert (
2025-02-24T16:09:32.5064141Z                     data.name
2025-02-24T16:09:32.5064308Z                     == getattr(
2025-02-24T16:09:32.5064419Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5064511Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5064593Z                     ).decode()
2025-02-24T16:09:32.5064664Z                 )
2025-02-24T16:09:32.5064764Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5064899Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5064970Z             )
2025-02-24T16:09:32.5065146Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5065270Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5065346Z             )
2025-02-24T16:09:32.5065350Z 
2025-02-24T16:09:32.5065497Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5065617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5065621Z 
2025-02-24T16:09:32.5066109Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fbec0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5066209Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5066568Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5066575Z 
2025-02-24T16:09:32.5066656Z     @wraps(func)
2025-02-24T16:09:32.5066742Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5066837Z         with self._recreate_cm():
2025-02-24T16:09:32.5066928Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5067018Z E           AssertionError: 
2025-02-24T16:09:32.5067129Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5067208Z E           
2025-02-24T16:09:32.5067314Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5067416Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5067521Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5067675Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5067766Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5067915Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5068005Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5068009Z 
2025-02-24T16:09:32.5068226Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5068434Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T16:09:32.5068437Z 
2025-02-24T16:09:32.5068718Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551c40>
2025-02-24T16:09:32.5069042Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d13d8770>
2025-02-24T16:09:32.5069151Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5069246Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5069351Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5069456Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5069667Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5069930Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T16:09:32.5069937Z 
2025-02-24T16:09:32.5070030Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5070201Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5070276Z     ):
2025-02-24T16:09:32.5070373Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5070491Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5070667Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5070883Z     
2025-02-24T16:09:32.5070999Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5071097Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5071248Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5071358Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5071434Z             )
2025-02-24T16:09:32.5071503Z     
2025-02-24T16:09:32.5071611Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5071825Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5071914Z             if data.stackgroup:
2025-02-24T16:09:32.5071997Z                 assert (
2025-02-24T16:09:32.5072081Z                     data.stackgroup
2025-02-24T16:09:32.5072164Z                     == getattr(
2025-02-24T16:09:32.5072272Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5072374Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5072462Z                     ).decode()
2025-02-24T16:09:32.5072532Z                 )
2025-02-24T16:09:32.5072612Z             if data.name:
2025-02-24T16:09:32.5072693Z                 assert (
2025-02-24T16:09:32.5072778Z                     data.name
2025-02-24T16:09:32.5072853Z                     == getattr(
2025-02-24T16:09:32.5072962Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5073059Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5073138Z                     ).decode()
2025-02-24T16:09:32.5073213Z                 )
2025-02-24T16:09:32.5073307Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5073442Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5073514Z             )
2025-02-24T16:09:32.5073612Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5073742Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5073815Z             )
2025-02-24T16:09:32.5073819Z 
2025-02-24T16:09:32.5073971Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5074082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5074087Z 
2025-02-24T16:09:32.5074563Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149b240>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5074669Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5074918Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5074922Z 
2025-02-24T16:09:32.5075002Z     @wraps(func)
2025-02-24T16:09:32.5075087Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5075182Z         with self._recreate_cm():
2025-02-24T16:09:32.5075276Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5075364Z E           AssertionError: 
2025-02-24T16:09:32.5075477Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5075549Z E           
2025-02-24T16:09:32.5075654Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5075754Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5075856Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5076011Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5076100Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5076250Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5076438Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5076443Z 
2025-02-24T16:09:32.5076653Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5076863Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T16:09:32.5076981Z 
2025-02-24T16:09:32.5077254Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551d00>
2025-02-24T16:09:32.5077581Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05fe511f70>
2025-02-24T16:09:32.5077677Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5077771Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5077878Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5078073Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5078296Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5078549Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T16:09:32.5078553Z 
2025-02-24T16:09:32.5078645Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5078821Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5078893Z     ):
2025-02-24T16:09:32.5078996Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5079104Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5079280Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5079348Z     
2025-02-24T16:09:32.5079466Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5079567Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5079715Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5079829Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5079908Z             )
2025-02-24T16:09:32.5079976Z     
2025-02-24T16:09:32.5080084Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5080196Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5080281Z             if data.stackgroup:
2025-02-24T16:09:32.5080361Z                 assert (
2025-02-24T16:09:32.5080449Z                     data.stackgroup
2025-02-24T16:09:32.5080529Z                     == getattr(
2025-02-24T16:09:32.5080634Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5080735Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5080815Z                     ).decode()
2025-02-24T16:09:32.5080886Z                 )
2025-02-24T16:09:32.5080969Z             if data.name:
2025-02-24T16:09:32.5081043Z                 assert (
2025-02-24T16:09:32.5081126Z                     data.name
2025-02-24T16:09:32.5081201Z                     == getattr(
2025-02-24T16:09:32.5081309Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5081405Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5081481Z                     ).decode()
2025-02-24T16:09:32.5081558Z                 )
2025-02-24T16:09:32.5081652Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5081783Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5081857Z             )
2025-02-24T16:09:32.5081954Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5082080Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5082148Z             )
2025-02-24T16:09:32.5082153Z 
2025-02-24T16:09:32.5082303Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5082414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5082418Z 
2025-02-24T16:09:32.5082895Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffe8e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5083000Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5083247Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5083336Z 
2025-02-24T16:09:32.5083418Z     @wraps(func)
2025-02-24T16:09:32.5083501Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5083593Z         with self._recreate_cm():
2025-02-24T16:09:32.5083686Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5083770Z E           AssertionError: 
2025-02-24T16:09:32.5083882Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5083952Z E           
2025-02-24T16:09:32.5084057Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5084227Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5084331Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5084489Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5084574Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5084724Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5084809Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5084816Z 
2025-02-24T16:09:32.5085025Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5085146Z =============================== warnings summary ===============================
2025-02-24T16:09:32.5085264Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:09:32.5085384Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:09:32.5085695Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T16:09:32.5085778Z   
2025-02-24T16:09:32.5087042Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T16:09:32.5087051Z 
2025-02-24T16:09:32.5087294Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T16:09:32.5087663Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T16:09:32.5087731Z   
2025-02-24T16:09:32.5087891Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T16:09:32.5088055Z   given by the platformdirs library.  To remove this warning and
2025-02-24T16:09:32.5088227Z   see the appropriate new directories, set the environment variable
2025-02-24T16:09:32.5088378Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T16:09:32.5088535Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T16:09:32.5088540Z 
2025-02-24T16:09:32.5092933Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T16:09:32.5093232Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5093470Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T16:09:32.5093545Z   
2025-02-24T16:09:32.5093613Z   
2025-02-24T16:09:32.5093834Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:09:32.5094102Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:09:32.5094111Z 
2025-02-24T16:09:32.5094319Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T16:09:32.5094551Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T16:09:32.5094787Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T16:09:32.5094975Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T16:09:32.5095293Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T16:09:32.5095537Z   
2025-02-24T16:09:32.5095664Z   The current CMFGEN model parser is deprecated
2025-02-24T16:09:32.5095669Z 
2025-02-24T16:09:32.5095784Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T16:09:32.5095969Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T16:09:32.5096437Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T16:09:32.5096516Z   
2025-02-24T16:09:32.5096632Z   The current CMFGEN model parser is deprecated
2025-02-24T16:09:32.5096637Z 
2025-02-24T16:09:32.5096995Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T16:09:32.5097385Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T16:09:32.5097456Z   
2025-02-24T16:09:32.5097905Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T16:09:32.5097910Z 
2025-02-24T16:09:32.5098025Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:09:32.5098154Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:09:32.5098341Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:09:32.5098617Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T16:09:32.5098692Z   
2025-02-24T16:09:32.5098802Z   v_inner_boundary < 0, assuming default value
2025-02-24T16:09:32.5098806Z 
2025-02-24T16:09:32.5098911Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:09:32.5099033Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:09:32.5099209Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:09:32.5099479Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T16:09:32.5099546Z   
2025-02-24T16:09:32.5099653Z   v_outer_boundary < 0, assuming default value
2025-02-24T16:09:32.5099657Z 
2025-02-24T16:09:32.5100138Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T16:09:32.5100450Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T16:09:32.5100526Z   
2025-02-24T16:09:32.5100808Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T16:09:32.5101273Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T16:09:32.5101346Z   
2025-02-24T16:09:32.5101884Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T16:09:32.5101889Z 
2025-02-24T16:09:32.5102115Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T16:09:32.5102328Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T16:09:32.5102540Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T16:09:32.5102786Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T16:09:32.5102854Z   
2025-02-24T16:09:32.5103054Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T16:09:32.5103058Z 
2025-02-24T16:09:32.5103276Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:09:32.5103486Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T16:09:32.5103559Z   
2025-02-24T16:09:32.5103891Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T16:09:32.5103895Z 
2025-02-24T16:09:32.5104113Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:09:32.5104436Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T16:09:32.5104508Z   
2025-02-24T16:09:32.5104866Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T16:09:32.5104871Z 
2025-02-24T16:09:32.5105084Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T16:09:32.5105206Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T16:09:32.5105273Z   
2025-02-24T16:09:32.5106557Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T16:09:32.5106653Z   Exception origin:
2025-02-24T16:09:32.5106914Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T16:09:32.5107017Z       raise TypeError(msg) from None
2025-02-24T16:09:32.5107115Z   [0m[0m
2025-02-24T16:09:32.5107119Z 
2025-02-24T16:09:32.5107464Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T16:09:32.5107753Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T16:09:32.5107821Z   
2025-02-24T16:09:32.5108697Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T16:09:32.5108702Z 
2025-02-24T16:09:32.5109065Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5109423Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5109781Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5110128Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5110478Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5110828Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5111194Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:09:32.5111268Z   
2025-02-24T16:09:32.5111463Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T16:09:32.5111646Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:09:32.5111891Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:09:32.5111895Z 
2025-02-24T16:09:32.5112252Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5112611Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5112974Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:09:32.5113047Z   
2025-02-24T16:09:32.5113224Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T16:09:32.5113402Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:09:32.5113645Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:09:32.5113649Z 
2025-02-24T16:09:32.5114120Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5114479Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:09:32.5114545Z   
2025-02-24T16:09:32.5114731Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T16:09:32.5114909Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:09:32.5115216Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:09:32.5115221Z 
2025-02-24T16:09:32.5115666Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T16:09:32.5115996Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-02-24T16:09:32.5116069Z   
2025-02-24T16:09:32.5116464Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T16:09:32.5116469Z 
2025-02-24T16:09:32.5116734Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5116952Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T16:09:32.5117020Z   
2025-02-24T16:09:32.5117096Z   
2025-02-24T16:09:32.5117310Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:09:32.5117578Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:09:32.5117582Z 
2025-02-24T16:09:32.5117854Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5118061Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T16:09:32.5118133Z   
2025-02-24T16:09:32.5118207Z   
2025-02-24T16:09:32.5118415Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:09:32.5118600Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T16:09:32.5118604Z 
2025-02-24T16:09:32.5118861Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5119113Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T16:09:32.5119181Z   
2025-02-24T16:09:32.5119380Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T16:09:32.5119384Z 
2025-02-24T16:09:32.5119579Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T16:09:32.5119583Z 
2025-02-24T16:09:32.5119751Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-24T16:09:32.5119879Z Coverage HTML written to dir coverage_html_report
2025-02-24T16:09:32.5119983Z Coverage XML written to file coverage.xml
2025-02-24T16:09:32.5119996Z 
2025-02-24T16:09:32.5120124Z =========================== short test summary info ============================
2025-02-24T16:09:32.5120542Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T16:09:32.5120547Z 
2025-02-24T16:09:32.5120680Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:09:32.5120801Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.5120872Z        ...
2025-02-24T16:09:32.5120968Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.5121095Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.5121208Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.5121281Z        ...
2025-02-24T16:09:32.5121362Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.5121481Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.5121586Z At positional index 54, first diff: 14 != 12
2025-02-24T16:09:32.5121997Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T16:09:32.5122101Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5122105Z 
2025-02-24T16:09:32.5122202Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.5122299Z Max absolute difference: 0.99984222
2025-02-24T16:09:32.5122392Z Max relative difference: 6337.12154973
2025-02-24T16:09:32.5122482Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5122695Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5122779Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5122868Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5122944Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5123026Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5123641Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:09:32.5124146Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5124150Z 
2025-02-24T16:09:32.5124284Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5124392Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5124467Z        ...
2025-02-24T16:09:32.5124554Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5124690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5124803Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5124872Z        ...
2025-02-24T16:09:32.5124963Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5125090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5125199Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5125731Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5125735Z 
2025-02-24T16:09:32.5125829Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5126210Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5126664Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5127000Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5127518Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5127522Z 
2025-02-24T16:09:32.5127619Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5127988Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5128596Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5128977Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5129472Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5129477Z 
2025-02-24T16:09:32.5129603Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5129718Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5129786Z        ...
2025-02-24T16:09:32.5129881Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5130008Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5130122Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5130195Z        ...
2025-02-24T16:09:32.5130276Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5130403Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5130502Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5131038Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5131042Z 
2025-02-24T16:09:32.5131172Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5131278Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5131351Z        ...
2025-02-24T16:09:32.5131432Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5131560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5131668Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5131742Z        ...
2025-02-24T16:09:32.5131827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5131946Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5132050Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5132537Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5132542Z 
2025-02-24T16:09:32.5132672Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5132782Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5132850Z        ...
2025-02-24T16:09:32.5132938Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5133058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5133177Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5133244Z        ...
2025-02-24T16:09:32.5133330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5133454Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5133553Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5134078Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5134171Z 
2025-02-24T16:09:32.5134296Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5134405Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5134478Z        ...
2025-02-24T16:09:32.5134557Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5134681Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5134860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5134934Z        ...
2025-02-24T16:09:32.5135014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5135139Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5135241Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5135762Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5135770Z 
2025-02-24T16:09:32.5135895Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5135998Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5136071Z        ...
2025-02-24T16:09:32.5136156Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5136382Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5136494Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5136565Z        ...
2025-02-24T16:09:32.5136651Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5136769Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5136871Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5137381Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5137388Z 
2025-02-24T16:09:32.5137510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5137617Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5137686Z        ...
2025-02-24T16:09:32.5137774Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5137898Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5138005Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5138078Z        ...
2025-02-24T16:09:32.5138162Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5138288Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5138387Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5138872Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5138876Z 
2025-02-24T16:09:32.5139004Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5139111Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5139185Z        ...
2025-02-24T16:09:32.5139263Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5139390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5139504Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5139572Z        ...
2025-02-24T16:09:32.5139656Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5139779Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5139882Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5140375Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5140386Z 
2025-02-24T16:09:32.5140479Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5140972Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5141400Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5141738Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5142239Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5142243Z 
2025-02-24T16:09:32.5142345Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5142714Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5143093Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5143476Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5143943Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5143947Z 
2025-02-24T16:09:32.5144079Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5144193Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5144262Z        ...
2025-02-24T16:09:32.5144348Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5144471Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5144584Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5144652Z        ...
2025-02-24T16:09:32.5144738Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5144868Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5144966Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5145485Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5145489Z 
2025-02-24T16:09:32.5145612Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5145807Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5145881Z        ...
2025-02-24T16:09:32.5145961Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5146085Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5146192Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5146381Z        ...
2025-02-24T16:09:32.5146466Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5146593Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5146800Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5147277Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5147281Z 
2025-02-24T16:09:32.5147410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5147515Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5147592Z        ...
2025-02-24T16:09:32.5147677Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5147799Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5147911Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5147979Z        ...
2025-02-24T16:09:32.5148063Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5148212Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5148316Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5148823Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5148827Z 
2025-02-24T16:09:32.5148949Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5149059Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5149126Z        ...
2025-02-24T16:09:32.5149215Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5149341Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5149449Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5149521Z        ...
2025-02-24T16:09:32.5149601Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5149726Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5149824Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5150330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5150334Z 
2025-02-24T16:09:32.5150460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5150563Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5150637Z        ...
2025-02-24T16:09:32.5150717Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5150845Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5150956Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5151023Z        ...
2025-02-24T16:09:32.5151109Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5151228Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5151332Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5151820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5151825Z 
2025-02-24T16:09:32.5151947Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5152053Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5152122Z        ...
2025-02-24T16:09:32.5152208Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5152326Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5152573Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5152647Z        ...
2025-02-24T16:09:32.5152727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5152851Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5152949Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5153502Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5153507Z 
2025-02-24T16:09:32.5153634Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5153737Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5153809Z        ...
2025-02-24T16:09:32.5153889Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5154014Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5154119Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5154198Z        ...
2025-02-24T16:09:32.5154283Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5154401Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5154502Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5154990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5154994Z 
2025-02-24T16:09:32.5155096Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5155470Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5155801Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5156139Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5156736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5156744Z 
2025-02-24T16:09:32.5156838Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5157212Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5157593Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5157970Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5158552Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5158652Z 
2025-02-24T16:09:32.5158783Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5158894Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5158963Z        ...
2025-02-24T16:09:32.5159049Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5159171Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5159282Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5159353Z        ...
2025-02-24T16:09:32.5159439Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5159603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5159778Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5160432Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5160437Z 
2025-02-24T16:09:32.5160565Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5160674Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5160748Z        ...
2025-02-24T16:09:32.5160828Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5160955Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5161063Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5161139Z        ...
2025-02-24T16:09:32.5161219Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5161344Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5161446Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5161922Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5161926Z 
2025-02-24T16:09:32.5162055Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5162164Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5162238Z        ...
2025-02-24T16:09:32.5162322Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5162450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5162565Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5162635Z        ...
2025-02-24T16:09:32.5162722Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5162845Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5162948Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5163450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5163454Z 
2025-02-24T16:09:32.5163576Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5163689Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5163757Z        ...
2025-02-24T16:09:32.5163841Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5163961Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5164074Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5164147Z        ...
2025-02-24T16:09:32.5164228Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5164448Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5164545Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5165048Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5165052Z 
2025-02-24T16:09:32.5165180Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5165283Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5165356Z        ...
2025-02-24T16:09:32.5165512Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5165642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5165748Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5165821Z        ...
2025-02-24T16:09:32.5165906Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5166025Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5166132Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5166735Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5166740Z 
2025-02-24T16:09:32.5166869Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5166976Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5167044Z        ...
2025-02-24T16:09:32.5167131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5167252Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5167363Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5167431Z        ...
2025-02-24T16:09:32.5167517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5167643Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5167746Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5168261Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5168265Z 
2025-02-24T16:09:32.5168387Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5168494Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5168567Z        ...
2025-02-24T16:09:32.5168649Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5168781Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5168887Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5168961Z        ...
2025-02-24T16:09:32.5169041Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5169164Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5169268Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5169792Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5169800Z 
2025-02-24T16:09:32.5169899Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5170274Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5170602Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5171058Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5171684Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5171688Z 
2025-02-24T16:09:32.5171783Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5172150Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5172533Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5172912Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5173405Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5173409Z 
2025-02-24T16:09:32.5173539Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5173645Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5173718Z        ...
2025-02-24T16:09:32.5173805Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5173931Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5174043Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5174113Z        ...
2025-02-24T16:09:32.5174206Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5174334Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5174441Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5174989Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5174997Z 
2025-02-24T16:09:32.5175129Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5175246Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5175316Z        ...
2025-02-24T16:09:32.5175408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5175538Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5175652Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5175727Z        ...
2025-02-24T16:09:32.5175809Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5175936Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5176036Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5176679Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5176819Z 
2025-02-24T16:09:32.5176958Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5177063Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5177136Z        ...
2025-02-24T16:09:32.5177218Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5177346Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5177559Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5177630Z        ...
2025-02-24T16:09:32.5177715Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5177837Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5177939Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5178472Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5178485Z 
2025-02-24T16:09:32.5178613Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5178724Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5178792Z        ...
2025-02-24T16:09:32.5178879Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5179000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5179114Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5179190Z        ...
2025-02-24T16:09:32.5179271Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5179397Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5179495Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5180028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5180035Z 
2025-02-24T16:09:32.5180165Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5180269Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5180343Z        ...
2025-02-24T16:09:32.5180423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5180549Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5180658Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5180732Z        ...
2025-02-24T16:09:32.5180825Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5180946Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5181047Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5181562Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5181566Z 
2025-02-24T16:09:32.5181698Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5181809Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5181878Z        ...
2025-02-24T16:09:32.5181965Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5182087Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5182200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5182270Z        ...
2025-02-24T16:09:32.5182357Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5182484Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5182582Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5183165Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5183170Z 
2025-02-24T16:09:32.5183293Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5183512Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5183585Z        ...
2025-02-24T16:09:32.5183665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5183793Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5183900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5183973Z        ...
2025-02-24T16:09:32.5184052Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5184248Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5184355Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5184954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5184958Z 
2025-02-24T16:09:32.5185060Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5185433Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5185771Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5186108Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5186851Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5186856Z 
2025-02-24T16:09:32.5186951Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5187325Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5187700Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5188079Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5188649Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5188769Z 
2025-02-24T16:09:32.5188903Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5189010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5189084Z        ...
2025-02-24T16:09:32.5189172Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5189298Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5189412Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5189480Z        ...
2025-02-24T16:09:32.5189676Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5189803Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5189911Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5190520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5190528Z 
2025-02-24T16:09:32.5190652Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5190761Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5190830Z        ...
2025-02-24T16:09:32.5190918Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5191044Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5191151Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5191224Z        ...
2025-02-24T16:09:32.5191309Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5191439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5191539Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5192110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5192115Z 
2025-02-24T16:09:32.5192244Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5192351Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5192425Z        ...
2025-02-24T16:09:32.5192506Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5192633Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5192745Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5192813Z        ...
2025-02-24T16:09:32.5192899Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5193023Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5193128Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5193728Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5193738Z 
2025-02-24T16:09:32.5193860Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5193977Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5194046Z        ...
2025-02-24T16:09:32.5194134Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5194259Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5194370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5194444Z        ...
2025-02-24T16:09:32.5194525Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5194655Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5194755Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5195354Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5195358Z 
2025-02-24T16:09:32.5195491Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5195697Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5195771Z        ...
2025-02-24T16:09:32.5195850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5195977Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5196084Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5196157Z        ...
2025-02-24T16:09:32.5196244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5196593Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5196701Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5197278Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5197282Z 
2025-02-24T16:09:32.5197411Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5197522Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5197594Z        ...
2025-02-24T16:09:32.5197682Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5197803Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5197915Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5197982Z        ...
2025-02-24T16:09:32.5198067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5198194Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5198297Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5198839Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5198844Z 
2025-02-24T16:09:32.5198967Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5199079Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5199166Z        ...
2025-02-24T16:09:32.5199252Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5199381Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5199490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5199565Z        ...
2025-02-24T16:09:32.5199647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5199782Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5199891Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5200447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5200452Z 
2025-02-24T16:09:32.5200560Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5200932Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5201273Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5201609Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5202283Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5202288Z 
2025-02-24T16:09:32.5202382Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5202825Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5203208Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5203591Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5204120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5204124Z 
2025-02-24T16:09:32.5204262Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5204373Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5204454Z        ...
2025-02-24T16:09:32.5204550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5204679Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5204797Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5204871Z        ...
2025-02-24T16:09:32.5204960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5205084Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5205199Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5205772Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5205777Z 
2025-02-24T16:09:32.5205905Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5206021Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5206095Z        ...
2025-02-24T16:09:32.5206187Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5206418Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5206530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5206607Z        ...
2025-02-24T16:09:32.5206689Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5206818Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5206918Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5207450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5207454Z 
2025-02-24T16:09:32.5207586Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5207694Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5207772Z        ...
2025-02-24T16:09:32.5207969Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5208098Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5208213Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5208284Z        ...
2025-02-24T16:09:32.5208371Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5208491Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5208596Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5209251Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5209262Z 
2025-02-24T16:09:32.5209388Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5209498Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5209567Z        ...
2025-02-24T16:09:32.5209654Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5209782Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5209899Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5209974Z        ...
2025-02-24T16:09:32.5210053Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5210180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5210282Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5210845Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5210849Z 
2025-02-24T16:09:32.5210980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5211085Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5211160Z        ...
2025-02-24T16:09:32.5211241Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5211373Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5211481Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5211558Z        ...
2025-02-24T16:09:32.5211648Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5211771Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5211881Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5212417Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5212422Z 
2025-02-24T16:09:32.5212552Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5212667Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5212737Z        ...
2025-02-24T16:09:32.5212827Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5212947Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5213065Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5213135Z        ...
2025-02-24T16:09:32.5213225Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5213353Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5213456Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5214002Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5214007Z 
2025-02-24T16:09:32.5214133Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5214247Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5214324Z        ...
2025-02-24T16:09:32.5214406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5214534Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5214642Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5214814Z        ...
2025-02-24T16:09:32.5214899Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5215028Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5215135Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5215688Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5215692Z 
2025-02-24T16:09:32.5215867Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5216241Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5216678Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5217018Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5217574Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5217581Z 
2025-02-24T16:09:32.5217677Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5218048Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5218426Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5218801Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5219331Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5219335Z 
2025-02-24T16:09:32.5219464Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5219570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5219647Z        ...
2025-02-24T16:09:32.5219730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5219861Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5220092Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5220162Z        ...
2025-02-24T16:09:32.5220253Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5220374Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5220479Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5221170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5221175Z 
2025-02-24T16:09:32.5221303Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5221418Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5221488Z        ...
2025-02-24T16:09:32.5221577Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5221701Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5221814Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5221894Z        ...
2025-02-24T16:09:32.5221976Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5222106Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5222206Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5222738Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5222743Z 
2025-02-24T16:09:32.5222875Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5222982Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5223060Z        ...
2025-02-24T16:09:32.5223141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5223270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5223380Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5223459Z        ...
2025-02-24T16:09:32.5223546Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5223669Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5223775Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5224335Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5224340Z 
2025-02-24T16:09:32.5224473Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5224584Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5224657Z        ...
2025-02-24T16:09:32.5224746Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5224872Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5224989Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5225059Z        ...
2025-02-24T16:09:32.5225148Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5225274Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5225375Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5225941Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5225945Z 
2025-02-24T16:09:32.5226069Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5226183Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5226258Z        ...
2025-02-24T16:09:32.5226469Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5226597Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5226704Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5226778Z        ...
2025-02-24T16:09:32.5226859Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5227102Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5227207Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5227745Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5227749Z 
2025-02-24T16:09:32.5227881Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5228089Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5228168Z        ...
2025-02-24T16:09:32.5228258Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5228383Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5228498Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5228569Z        ...
2025-02-24T16:09:32.5228657Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5228783Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5228889Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5229462Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5229467Z 
2025-02-24T16:09:32.5229592Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5229707Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5229781Z        ...
2025-02-24T16:09:32.5229870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5230000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5230110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5230186Z        ...
2025-02-24T16:09:32.5230269Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5230402Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5230506Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5231090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5231094Z 
2025-02-24T16:09:32.5231194Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5231562Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5231896Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5232238Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5232818Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5232822Z 
2025-02-24T16:09:32.5232918Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5233287Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5234158Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5234534Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5235094Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5235098Z 
2025-02-24T16:09:32.5235225Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5235338Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5235415Z        ...
2025-02-24T16:09:32.5235496Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5235627Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5235741Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5235812Z        ...
2025-02-24T16:09:32.5235900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5236028Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5236135Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5236833Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5236838Z 
2025-02-24T16:09:32.5236966Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5237076Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5237151Z        ...
2025-02-24T16:09:32.5237239Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5237360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5237477Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5237553Z        ...
2025-02-24T16:09:32.5237635Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5237769Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5237874Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5238432Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5238436Z 
2025-02-24T16:09:32.5238570Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5238675Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5238751Z        ...
2025-02-24T16:09:32.5238835Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5238967Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5239077Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5239152Z        ...
2025-02-24T16:09:32.5239240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5239364Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5239591Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5240177Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5240181Z 
2025-02-24T16:09:32.5240312Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5240425Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5240497Z        ...
2025-02-24T16:09:32.5240687Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5240813Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5240927Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5240997Z        ...
2025-02-24T16:09:32.5241085Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5241212Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5241316Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5241908Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5241912Z 
2025-02-24T16:09:32.5242038Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5242151Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5242226Z        ...
2025-02-24T16:09:32.5242312Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5242439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5242550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5242626Z        ...
2025-02-24T16:09:32.5242710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5242839Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5242947Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5243519Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5243523Z 
2025-02-24T16:09:32.5243654Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5243760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5243837Z        ...
2025-02-24T16:09:32.5243927Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5244054Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5244170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5244242Z        ...
2025-02-24T16:09:32.5244331Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5244452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5244559Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5245094Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5245101Z 
2025-02-24T16:09:32.5245227Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5245341Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5245410Z        ...
2025-02-24T16:09:32.5245498Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5245627Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5245735Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5245809Z        ...
2025-02-24T16:09:32.5245889Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5246016Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5246117Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5246767Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5246921Z 
2025-02-24T16:09:32.5247023Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5247504Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5247841Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5248204Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5248760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5248764Z 
2025-02-24T16:09:32.5248858Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5249228Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5249618Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5249992Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5250518Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5250522Z 
2025-02-24T16:09:32.5250651Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5250759Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5250837Z        ...
2025-02-24T16:09:32.5250921Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5251056Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5251172Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5251243Z        ...
2025-02-24T16:09:32.5251332Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5251453Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5251559Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5252118Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5252211Z 
2025-02-24T16:09:32.5252337Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5252449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5252518Z        ...
2025-02-24T16:09:32.5252606Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5252733Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5252919Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5252996Z        ...
2025-02-24T16:09:32.5253078Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5253205Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5253305Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5253834Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5253842Z 
2025-02-24T16:09:32.5253972Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5254079Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5254154Z        ...
2025-02-24T16:09:32.5254236Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5254364Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5254476Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5254555Z        ...
2025-02-24T16:09:32.5254645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5254765Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5254870Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5255426Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5255433Z 
2025-02-24T16:09:32.5255561Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5255673Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5255742Z        ...
2025-02-24T16:09:32.5255830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5255954Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5256067Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5256138Z        ...
2025-02-24T16:09:32.5256238Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5256489Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5256591Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5257131Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5257139Z 
2025-02-24T16:09:32.5257265Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5257380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5257459Z        ...
2025-02-24T16:09:32.5257541Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5257669Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5257779Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5257858Z        ...
2025-02-24T16:09:32.5257944Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5258074Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5258179Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5258721Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5258841Z 
2025-02-24T16:09:32.5258976Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5259084Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5259163Z        ...
2025-02-24T16:09:32.5259253Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5259376Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5259489Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5259561Z        ...
2025-02-24T16:09:32.5259747Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5259873Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5259978Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5260538Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5260542Z 
2025-02-24T16:09:32.5260636Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5261009Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5261343Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5261673Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5262235Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5262239Z 
2025-02-24T16:09:32.5262339Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5262705Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5263085Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5263469Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5263998Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5264080Z 
2025-02-24T16:09:32.5264207Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5264319Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5264387Z        ...
2025-02-24T16:09:32.5264475Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5264607Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5264716Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5264789Z        ...
2025-02-24T16:09:32.5264943Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5265074Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5265173Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5265752Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5265760Z 
2025-02-24T16:09:32.5265891Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5271818Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5271921Z        ...
2025-02-24T16:09:32.5272028Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5272178Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5272306Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5272379Z        ...
2025-02-24T16:09:32.5272482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5272617Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5272727Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5273296Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5273301Z 
2025-02-24T16:09:32.5273439Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5273562Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5273639Z        ...
2025-02-24T16:09:32.5273727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5273859Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5273969Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5274043Z        ...
2025-02-24T16:09:32.5274126Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5274261Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5274373Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5274947Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5274952Z 
2025-02-24T16:09:32.5275089Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5275204Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5275278Z        ...
2025-02-24T16:09:32.5275370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5275499Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5275615Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5275684Z        ...
2025-02-24T16:09:32.5275770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5275893Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5275999Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5276747Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5276753Z 
2025-02-24T16:09:32.5276880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5276992Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5277249Z        ...
2025-02-24T16:09:32.5277338Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5277466Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5277574Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5277647Z        ...
2025-02-24T16:09:32.5277726Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5277852Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5278050Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5278606Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5278611Z 
2025-02-24T16:09:32.5278740Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5278845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5278928Z        ...
2025-02-24T16:09:32.5279010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5279136Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5279248Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5279318Z        ...
2025-02-24T16:09:32.5279402Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5279520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5279624Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5280169Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5280179Z 
2025-02-24T16:09:32.5280301Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5280411Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5280479Z        ...
2025-02-24T16:09:32.5280569Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5280689Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5280806Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5280881Z        ...
2025-02-24T16:09:32.5280960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5281083Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5281183Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5281758Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5281763Z 
2025-02-24T16:09:32.5281864Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5282239Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5282582Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5282917Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5283570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5283575Z 
2025-02-24T16:09:32.5283675Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5284115Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5284488Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5284877Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5285408Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5285412Z 
2025-02-24T16:09:32.5285544Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5285656Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5285735Z        ...
2025-02-24T16:09:32.5285825Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5285963Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5286079Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5286156Z        ...
2025-02-24T16:09:32.5286248Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5286481Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5286593Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5287170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5287175Z 
2025-02-24T16:09:32.5287312Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5287432Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5287503Z        ...
2025-02-24T16:09:32.5287595Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5287720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5287836Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5287906Z        ...
2025-02-24T16:09:32.5287997Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5288123Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5288226Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5288765Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5288770Z 
2025-02-24T16:09:32.5288899Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5289012Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5289090Z        ...
2025-02-24T16:09:32.5289175Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5289423Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5289530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5289605Z        ...
2025-02-24T16:09:32.5289686Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5289814Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5289920Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5290585Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5290589Z 
2025-02-24T16:09:32.5290726Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5290832Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5290909Z        ...
2025-02-24T16:09:32.5290997Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5291120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5291234Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5291304Z        ...
2025-02-24T16:09:32.5291393Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5291512Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5291615Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5292181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5292185Z 
2025-02-24T16:09:32.5292305Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5292415Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5292484Z        ...
2025-02-24T16:09:32.5292575Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5292704Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5292815Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5292890Z        ...
2025-02-24T16:09:32.5292970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5293097Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5293197Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5293755Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5293760Z 
2025-02-24T16:09:32.5293889Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5293993Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5294068Z        ...
2025-02-24T16:09:32.5294149Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5294276Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5294393Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5294462Z        ...
2025-02-24T16:09:32.5294551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5294671Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5294777Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5295314Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5295330Z 
2025-02-24T16:09:32.5295462Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5295578Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5295647Z        ...
2025-02-24T16:09:32.5295734Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5295859Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5295973Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5296138Z        ...
2025-02-24T16:09:32.5296219Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5296444Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5296547Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5297123Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5297127Z 
2025-02-24T16:09:32.5297353Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5297725Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5298063Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5298399Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5298956Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5298963Z 
2025-02-24T16:09:32.5299066Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5299438Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5299815Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5300195Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5300732Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5300737Z 
2025-02-24T16:09:32.5300872Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5300979Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5301054Z        ...
2025-02-24T16:09:32.5301137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5301270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5301490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5301566Z        ...
2025-02-24T16:09:32.5301655Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5301776Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5301882Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5302447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5302530Z 
2025-02-24T16:09:32.5302665Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5302778Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5302848Z        ...
2025-02-24T16:09:32.5302936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5303059Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5303173Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5303247Z        ...
2025-02-24T16:09:32.5303338Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5303465Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5303564Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5304100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5304104Z 
2025-02-24T16:09:32.5304229Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5304341Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5304417Z        ...
2025-02-24T16:09:32.5304499Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5304626Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5304734Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5304813Z        ...
2025-02-24T16:09:32.5304895Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5305023Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5305129Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5305695Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5305699Z 
2025-02-24T16:09:32.5305832Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5305937Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5306014Z        ...
2025-02-24T16:09:32.5306102Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5306227Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5306449Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5306520Z        ...
2025-02-24T16:09:32.5306612Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5306734Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5306842Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5307409Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5307413Z 
2025-02-24T16:09:32.5307536Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5307648Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5307719Z        ...
2025-02-24T16:09:32.5307808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5307937Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5308043Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5308119Z        ...
2025-02-24T16:09:32.5308199Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5308441Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5308539Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5309090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5309095Z 
2025-02-24T16:09:32.5309224Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5309449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5309530Z        ...
2025-02-24T16:09:32.5309609Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5309735Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5309841Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5309917Z        ...
2025-02-24T16:09:32.5310003Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5310130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5310232Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5310777Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5310782Z 
2025-02-24T16:09:32.5310911Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5311018Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5311091Z        ...
2025-02-24T16:09:32.5311178Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5311297Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5311408Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5311478Z        ...
2025-02-24T16:09:32.5311567Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5311694Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5311796Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5312362Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5312366Z 
2025-02-24T16:09:32.5312461Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5312845Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5313181Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5313523Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5314083Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5314086Z 
2025-02-24T16:09:32.5314184Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5314554Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5315082Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5315466Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5316004Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5316009Z 
2025-02-24T16:09:32.5316135Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5316249Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5316433Z        ...
2025-02-24T16:09:32.5316519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5316650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5316757Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5316832Z        ...
2025-02-24T16:09:32.5316914Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5317041Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5317151Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5317728Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5317732Z 
2025-02-24T16:09:32.5317861Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5317965Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5318043Z        ...
2025-02-24T16:09:32.5318131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5318254Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5318367Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5318437Z        ...
2025-02-24T16:09:32.5318523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5318644Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5318752Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5319288Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5319293Z 
2025-02-24T16:09:32.5319428Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5319541Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5319611Z        ...
2025-02-24T16:09:32.5319702Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5319825Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5319944Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5320014Z        ...
2025-02-24T16:09:32.5320102Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5320232Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5320452Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5321026Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5321031Z 
2025-02-24T16:09:32.5321155Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5321268Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5321344Z        ...
2025-02-24T16:09:32.5321541Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5321673Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5321783Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5321859Z        ...
2025-02-24T16:09:32.5321942Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5322068Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5322172Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5322743Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5322748Z 
2025-02-24T16:09:32.5322875Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5322979Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5323056Z        ...
2025-02-24T16:09:32.5323141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5323265Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5323380Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5323449Z        ...
2025-02-24T16:09:32.5323533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5323652Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5323760Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5324315Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5324322Z 
2025-02-24T16:09:32.5324443Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5324555Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5324624Z        ...
2025-02-24T16:09:32.5324709Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5324838Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5324945Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5325023Z        ...
2025-02-24T16:09:32.5325103Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5325227Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5325327Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5325916Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5325923Z 
2025-02-24T16:09:32.5326051Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5326154Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5326227Z        ...
2025-02-24T16:09:32.5326411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5326539Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5326654Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5326723Z        ...
2025-02-24T16:09:32.5326810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5326932Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5327037Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5327623Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5327749Z 
2025-02-24T16:09:32.5327844Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5328317Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5328654Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5328985Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5329580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5329585Z 
2025-02-24T16:09:32.5329686Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5330052Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5330433Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5330811Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5331377Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5331386Z 
2025-02-24T16:09:32.5331510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5331622Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5331692Z        ...
2025-02-24T16:09:32.5331783Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5331908Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5332022Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5332097Z        ...
2025-02-24T16:09:32.5332180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5332310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5332412Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5333101Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5333106Z 
2025-02-24T16:09:32.5333233Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5333340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5333415Z        ...
2025-02-24T16:09:32.5333500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5333698Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5333809Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5333888Z        ...
2025-02-24T16:09:32.5333975Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5334097Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5334204Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5334774Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5334779Z 
2025-02-24T16:09:32.5334911Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5335021Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5335090Z        ...
2025-02-24T16:09:32.5335177Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5335305Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5335419Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5335489Z        ...
2025-02-24T16:09:32.5335581Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5335710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5335809Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5336656Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5336663Z 
2025-02-24T16:09:32.5336833Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:09:32.5337209Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5341974Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.5346857Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.5347056Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:09:32.5347692Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5347697Z 
2025-02-24T16:09:32.5347828Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5347941Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5348010Z        ...
2025-02-24T16:09:32.5348099Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5348253Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5348373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5348442Z        ...
2025-02-24T16:09:32.5348529Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5348660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5348762Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5349363Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5349368Z 
2025-02-24T16:09:32.5349491Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5349602Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5349677Z        ...
2025-02-24T16:09:32.5349760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5350026Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5350131Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5350205Z        ...
2025-02-24T16:09:32.5350286Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5350412Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5350518Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5351208Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5351213Z 
2025-02-24T16:09:32.5351345Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5351454Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5351529Z        ...
2025-02-24T16:09:32.5351615Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5351742Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5351853Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5351921Z        ...
2025-02-24T16:09:32.5352009Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5352130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5352237Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5352824Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5352829Z 
2025-02-24T16:09:32.5352955Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5353067Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5353137Z        ...
2025-02-24T16:09:32.5353225Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5353353Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5353467Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5353544Z        ...
2025-02-24T16:09:32.5353625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5353750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5353849Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5354412Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5354417Z 
2025-02-24T16:09:32.5354544Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5354647Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5354722Z        ...
2025-02-24T16:09:32.5354803Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5354943Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5355082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5355153Z        ...
2025-02-24T16:09:32.5355241Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5355362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5355466Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5356038Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5356053Z 
2025-02-24T16:09:32.5356151Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5356628Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5357083Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5357516Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5358103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5358111Z 
2025-02-24T16:09:32.5358211Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5358579Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5358959Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5359346Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5359897Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5359909Z 
2025-02-24T16:09:32.5360040Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5360155Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5360224Z        ...
2025-02-24T16:09:32.5360321Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5360448Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5360565Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5360644Z        ...
2025-02-24T16:09:32.5360727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5360856Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5360958Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5361552Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5361557Z 
2025-02-24T16:09:32.5361687Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5361795Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5361868Z        ...
2025-02-24T16:09:32.5361951Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5362162Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5362268Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5362342Z        ...
2025-02-24T16:09:32.5362428Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5362547Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5362653Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5363296Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5363301Z 
2025-02-24T16:09:32.5363433Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5363542Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5363611Z        ...
2025-02-24T16:09:32.5363701Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5363827Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5363939Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5364008Z        ...
2025-02-24T16:09:32.5364096Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5364226Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5364325Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5365026Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5365031Z 
2025-02-24T16:09:32.5365202Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.5365577Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5370643Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5375829Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5376021Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.5376726Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5376731Z 
2025-02-24T16:09:32.5376860Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5376973Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5377042Z        ...
2025-02-24T16:09:32.5377136Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5377261Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5377375Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5377445Z        ...
2025-02-24T16:09:32.5377530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5377658Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5377760Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5378348Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5378353Z 
2025-02-24T16:09:32.5378477Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5378588Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5378663Z        ...
2025-02-24T16:09:32.5378748Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5378878Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5378988Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5379066Z        ...
2025-02-24T16:09:32.5379148Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5379279Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5379531Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5380105Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5380109Z 
2025-02-24T16:09:32.5380239Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5380351Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5380419Z        ...
2025-02-24T16:09:32.5380632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5380761Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5380873Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5380941Z        ...
2025-02-24T16:09:32.5381029Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5381159Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5381261Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5381830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5381835Z 
2025-02-24T16:09:32.5381957Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5382069Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5382146Z        ...
2025-02-24T16:09:32.5382234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5382366Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5382474Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5382549Z        ...
2025-02-24T16:09:32.5382632Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5382762Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5382867Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5383361Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5383366Z 
2025-02-24T16:09:32.5383496Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5383599Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5383675Z        ...
2025-02-24T16:09:32.5383766Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5383892Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5384009Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5384078Z        ...
2025-02-24T16:09:32.5384168Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5384289Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5384398Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5384901Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5384908Z 
2025-02-24T16:09:32.5385003Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5385379Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5385715Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5386129Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5386869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5386875Z 
2025-02-24T16:09:32.5386979Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5387343Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5387726Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5388105Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5388592Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5388596Z 
2025-02-24T16:09:32.5388721Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5388832Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5388902Z        ...
2025-02-24T16:09:32.5388989Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5389117Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5389229Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5389305Z        ...
2025-02-24T16:09:32.5389386Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5389516Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5389615Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5390136Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5390141Z 
2025-02-24T16:09:32.5390269Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5390374Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5390447Z        ...
2025-02-24T16:09:32.5390530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5390663Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5390770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5390846Z        ...
2025-02-24T16:09:32.5390934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5391057Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5391165Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5391640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5391841Z 
2025-02-24T16:09:32.5391974Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5392083Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5392153Z        ...
2025-02-24T16:09:32.5392240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5392363Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5392551Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5392623Z        ...
2025-02-24T16:09:32.5392712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5392839Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5392938Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5393556Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5393564Z 
2025-02-24T16:09:32.5393732Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.5394111Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5399167Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5404245Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5404543Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.5405087Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5405092Z 
2025-02-24T16:09:32.5405223Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5405337Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5405406Z        ...
2025-02-24T16:09:32.5405501Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5405630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5405741Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5405810Z        ...
2025-02-24T16:09:32.5405899Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5406027Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5406125Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5406737Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5406742Z 
2025-02-24T16:09:32.5406867Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5406976Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5407049Z        ...
2025-02-24T16:09:32.5407132Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5407262Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5407369Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5407442Z        ...
2025-02-24T16:09:32.5407522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5407647Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5407750Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5408254Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5408258Z 
2025-02-24T16:09:32.5408385Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5408489Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5408562Z        ...
2025-02-24T16:09:32.5408647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5408768Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5408998Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5409065Z        ...
2025-02-24T16:09:32.5409150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5409270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5409373Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5409973Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5409978Z 
2025-02-24T16:09:32.5410103Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5410213Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5410281Z        ...
2025-02-24T16:09:32.5410366Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5410495Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5410606Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5410679Z        ...
2025-02-24T16:09:32.5410760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5410886Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5410985Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5411494Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5411502Z 
2025-02-24T16:09:32.5411630Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5411733Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5411807Z        ...
2025-02-24T16:09:32.5411888Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5412012Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5412124Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5412195Z        ...
2025-02-24T16:09:32.5412281Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5412435Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5412610Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5413372Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5413377Z 
2025-02-24T16:09:32.5413477Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5413850Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5414187Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5414521Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5415041Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5415147Z 
2025-02-24T16:09:32.5415247Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5415611Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5416059Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5416554Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5417049Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5417062Z 
2025-02-24T16:09:32.5417186Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5417296Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5417366Z        ...
2025-02-24T16:09:32.5417454Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5417578Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5417691Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5417767Z        ...
2025-02-24T16:09:32.5417849Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5417976Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5418073Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5418601Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5418606Z 
2025-02-24T16:09:32.5418741Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5418845Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5418919Z        ...
2025-02-24T16:09:32.5419000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5419126Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5419233Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5419311Z        ...
2025-02-24T16:09:32.5419397Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5419521Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5419625Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5420117Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5420121Z 
2025-02-24T16:09:32.5420248Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5420361Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5420430Z        ...
2025-02-24T16:09:32.5420518Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5420640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5420754Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5420822Z        ...
2025-02-24T16:09:32.5420909Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5421157Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5421256Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5421781Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5421785Z 
2025-02-24T16:09:32.5421908Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5422114Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5422194Z        ...
2025-02-24T16:09:32.5422276Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5422400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5422506Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5422579Z        ...
2025-02-24T16:09:32.5422659Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5422791Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5422900Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5423424Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5423428Z 
2025-02-24T16:09:32.5423556Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5423661Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5423739Z        ...
2025-02-24T16:09:32.5423826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5423947Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5424058Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5424131Z        ...
2025-02-24T16:09:32.5424218Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5424338Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5424443Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5424952Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5424956Z 
2025-02-24T16:09:32.5425078Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5425188Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5425258Z        ...
2025-02-24T16:09:32.5425348Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5425476Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5425583Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5425658Z        ...
2025-02-24T16:09:32.5425739Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5425863Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5425964Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5426561Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5426566Z 
2025-02-24T16:09:32.5426693Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5426797Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5426870Z        ...
2025-02-24T16:09:32.5426950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5427080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5427196Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5427264Z        ...
2025-02-24T16:09:32.5427347Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5427467Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5427571Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5428191Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5428200Z 
2025-02-24T16:09:32.5428292Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5428778Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5429108Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5429445Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5429959Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5429963Z 
2025-02-24T16:09:32.5430063Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5430425Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5430805Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5431182Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5431658Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5431662Z 
2025-02-24T16:09:32.5431791Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5431900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5431969Z        ...
2025-02-24T16:09:32.5432055Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5432182Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5432293Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5432362Z        ...
2025-02-24T16:09:32.5432449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5432576Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5432674Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5433274Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5433279Z 
2025-02-24T16:09:32.5433403Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5433513Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5433586Z        ...
2025-02-24T16:09:32.5433667Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5433871Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5433979Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5434052Z        ...
2025-02-24T16:09:32.5434133Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5434258Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5434361Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5434845Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5434854Z 
2025-02-24T16:09:32.5434982Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5435087Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5435161Z        ...
2025-02-24T16:09:32.5435246Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5435369Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5435488Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5435558Z        ...
2025-02-24T16:09:32.5435646Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5435767Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5435870Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5436491Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5436500Z 
2025-02-24T16:09:32.5436626Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5436733Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5436803Z        ...
2025-02-24T16:09:32.5436888Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5437015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5437123Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5437196Z        ...
2025-02-24T16:09:32.5437275Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5437403Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5437502Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5438022Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5438029Z 
2025-02-24T16:09:32.5438158Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5438262Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5438335Z        ...
2025-02-24T16:09:32.5438418Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5438553Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5438665Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5438733Z        ...
2025-02-24T16:09:32.5438821Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5438942Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5439044Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5439541Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5439662Z 
2025-02-24T16:09:32.5439786Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5439895Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5439964Z        ...
2025-02-24T16:09:32.5440051Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5440174Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5440285Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5440358Z        ...
2025-02-24T16:09:32.5440538Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5440666Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5440763Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5441293Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5441297Z 
2025-02-24T16:09:32.5441428Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5441534Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5441608Z        ...
2025-02-24T16:09:32.5441694Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5441818Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5441923Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5441997Z        ...
2025-02-24T16:09:32.5442082Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5442205Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5442310Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5442854Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5442858Z 
2025-02-24T16:09:32.5442959Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5443335Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5443665Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5444000Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5444555Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5444560Z 
2025-02-24T16:09:32.5444652Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5445023Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5445401Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5445964Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5446580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5446588Z 
2025-02-24T16:09:32.5446719Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5446829Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5446899Z        ...
2025-02-24T16:09:32.5446988Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5447110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5447223Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5447291Z        ...
2025-02-24T16:09:32.5447383Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5447517Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5447616Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5448181Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5448185Z 
2025-02-24T16:09:32.5448337Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5448450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5448524Z        ...
2025-02-24T16:09:32.5448604Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5448732Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5448837Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5448911Z        ...
2025-02-24T16:09:32.5448990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5449118Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5449221Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5449737Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5449741Z 
2025-02-24T16:09:32.5449872Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5449979Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5450053Z        ...
2025-02-24T16:09:32.5450138Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5450258Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5450370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5450439Z        ...
2025-02-24T16:09:32.5450525Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5450644Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5450749Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5451301Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5451306Z 
2025-02-24T16:09:32.5451427Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5451535Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5451737Z        ...
2025-02-24T16:09:32.5451826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5451955Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5452061Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5452134Z        ...
2025-02-24T16:09:32.5452213Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5452337Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5452533Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5453088Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5453093Z 
2025-02-24T16:09:32.5453220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5453321Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5453398Z        ...
2025-02-24T16:09:32.5453479Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5453606Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5453719Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5453787Z        ...
2025-02-24T16:09:32.5453871Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5453991Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5454094Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5454629Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5454639Z 
2025-02-24T16:09:32.5454762Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5454870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5454940Z        ...
2025-02-24T16:09:32.5455028Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5455148Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5455260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5455333Z        ...
2025-02-24T16:09:32.5455413Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5455538Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5455636Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5456234Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5456239Z 
2025-02-24T16:09:32.5456471Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5456578Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5456653Z        ...
2025-02-24T16:09:32.5456733Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5456865Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5456970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5457044Z        ...
2025-02-24T16:09:32.5457129Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5457249Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5457351Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5457964Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5457968Z 
2025-02-24T16:09:32.5458066Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5458440Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5458982Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5459321Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5459933Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5459937Z 
2025-02-24T16:09:32.5460028Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5460399Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5460778Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5461163Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5461738Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5461743Z 
2025-02-24T16:09:32.5461873Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5461987Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5462060Z        ...
2025-02-24T16:09:32.5462147Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5462270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5462383Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5462453Z        ...
2025-02-24T16:09:32.5462542Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5462669Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5462767Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5463387Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5463392Z 
2025-02-24T16:09:32.5463516Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5463627Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5463788Z        ...
2025-02-24T16:09:32.5463869Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5463998Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5464106Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5464180Z        ...
2025-02-24T16:09:32.5464261Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5464387Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5464491Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5465145Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5465150Z 
2025-02-24T16:09:32.5465280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5465385Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5465471Z        ...
2025-02-24T16:09:32.5465559Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5465678Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5465788Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5465857Z        ...
2025-02-24T16:09:32.5465943Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5466064Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5466170Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5466926Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5466931Z 
2025-02-24T16:09:32.5467055Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5467166Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5467235Z        ...
2025-02-24T16:09:32.5467320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5467451Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5467559Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5467632Z        ...
2025-02-24T16:09:32.5467714Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5467840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5467937Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5468553Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5468558Z 
2025-02-24T16:09:32.5468687Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5468791Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5468866Z        ...
2025-02-24T16:09:32.5468946Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5469075Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5469188Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5469258Z        ...
2025-02-24T16:09:32.5469343Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5469464Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5469571Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5470165Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5470174Z 
2025-02-24T16:09:32.5470297Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5470407Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5470475Z        ...
2025-02-24T16:09:32.5470560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5470800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5470911Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5470984Z        ...
2025-02-24T16:09:32.5471067Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5471192Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5471289Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5471609Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T16:09:32.5471811Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5471822Z 
2025-02-24T16:09:32.5471919Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:09:32.5472016Z Max absolute difference: 1.
2025-02-24T16:09:32.5472103Z Max relative difference: 1.
2025-02-24T16:09:32.5472236Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472339Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472449Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.5472570Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472666Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472766Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.5473071Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T16:09:32.5473177Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5473182Z 
2025-02-24T16:09:32.5473279Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:09:32.5473370Z Max absolute difference: 4005
2025-02-24T16:09:32.5473469Z Max relative difference: 26.00649351
2025-02-24T16:09:32.5473574Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.5473679Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.5473972Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T16:09:32.5474075Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5474080Z 
2025-02-24T16:09:32.5474178Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:09:32.5474266Z Max absolute difference: 4046
2025-02-24T16:09:32.5474361Z Max relative difference: 24.82208589
2025-02-24T16:09:32.5474459Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.5474561Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.5474833Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T16:09:32.5474929Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5474933Z 
2025-02-24T16:09:32.5475034Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.5475125Z Max absolute difference: 0.99984222
2025-02-24T16:09:32.5475227Z Max relative difference: 6337.12154973
2025-02-24T16:09:32.5475310Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475396Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475483Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5475564Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475647Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475724Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5475974Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T16:09:32.5476069Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5476079Z 
2025-02-24T16:09:32.5476174Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:09:32.5476392Z Max absolute difference: 4.25260542e+12
2025-02-24T16:09:32.5476488Z Max relative difference: 18196.0085861
2025-02-24T16:09:32.5476644Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.5476724Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.5477003Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.5477150Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.5477227Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.5477360Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.5477602Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T16:09:32.5477803Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5477808Z 
2025-02-24T16:09:32.5477907Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:09:32.5477999Z Max absolute difference: 2.92713618
2025-02-24T16:09:32.5478097Z Max relative difference: 18196.0085861
2025-02-24T16:09:32.5478239Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.5478322Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.5478458Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.5478544Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.5478815Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T16:09:32.5478913Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5478916Z 
2025-02-24T16:09:32.5479017Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:09:32.5479113Z Max absolute difference: 282815.33818472
2025-02-24T16:09:32.5479212Z Max relative difference: 4.12352828e+47
2025-02-24T16:09:32.5479358Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.5479446Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.5479583Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.5479721Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.5479803Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.5479931Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.5480432Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5480436Z 
2025-02-24T16:09:32.5480605Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.5480681Z [index]: [0, 1]
2025-02-24T16:09:32.5480787Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:09:32.5480890Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:09:32.5481074Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.5481574Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5481578Z 
2025-02-24T16:09:32.5481741Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.5481823Z [index]: [0, 1]
2025-02-24T16:09:32.5481919Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:09:32.5482022Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:09:32.5482197Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.5482735Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5482739Z 
2025-02-24T16:09:32.5482906Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.5482981Z [index]: [0, 1]
2025-02-24T16:09:32.5483085Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:09:32.5483181Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:09:32.5483353Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:09:32.5483735Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T16:09:32.5483835Z 
2025-02-24T16:09:32.5483931Z Series values are different (100.0 %)
2025-02-24T16:09:32.5484063Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5485362Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:09:32.5486671Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:09:32.5486871Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:09:32.5487243Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T16:09:32.5487251Z 
2025-02-24T16:09:32.5487346Z Series values are different (100.0 %)
2025-02-24T16:09:32.5487473Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5488463Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:09:32.5489434Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:09:32.5489608Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:09:32.5489973Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T16:09:32.5489977Z 
2025-02-24T16:09:32.5490071Z Series values are different (90.0 %)
2025-02-24T16:09:32.5490197Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5491217Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:09:32.5492256Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:09:32.5492431Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.5492807Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T16:09:32.5492930Z 
2025-02-24T16:09:32.5493023Z Series values are different (95.0 %)
2025-02-24T16:09:32.5493147Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5494346Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:09:32.5495450Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:09:32.5495630Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.5495993Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T16:09:32.5495997Z 
2025-02-24T16:09:32.5496099Z Series values are different (5.1125 %)
2025-02-24T16:09:32.5496624Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5501835Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:09:32.5507262Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:09:32.5507564Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:09:32.5507952Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T16:09:32.5507959Z 
2025-02-24T16:09:32.5508062Z Series values are different (1.3025 %)
2025-02-24T16:09:32.5508435Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5514803Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.5521287Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.5521500Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:09:32.5521877Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T16:09:32.5521984Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5521988Z 
2025-02-24T16:09:32.5522082Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.5522182Z Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.5522271Z Max relative difference: 1.
2025-02-24T16:09:32.5522428Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5522651Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5522797Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5522877Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5523273Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T16:09:32.5523376Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5523381Z 
2025-02-24T16:09:32.5523573Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:09:32.5523673Z Max absolute difference: 4.15247374e+37
2025-02-24T16:09:32.5523766Z Max relative difference: 1.
2025-02-24T16:09:32.5523907Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5523988Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5524131Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5524215Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5524518Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T16:09:32.5524621Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5524625Z 
2025-02-24T16:09:32.5524718Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.5524812Z Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.5524905Z Max relative difference: 1.
2025-02-24T16:09:32.5525053Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5525137Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5525279Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5525355Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5525654Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T16:09:32.5525752Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5525759Z 
2025-02-24T16:09:32.5525865Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:09:32.5525961Z Max absolute difference: 5.32418652e-19
2025-02-24T16:09:32.5526054Z Max relative difference: 12.23359055
2025-02-24T16:09:32.5526144Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526225Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526407Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5526494Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526580Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526662Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5526926Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T16:09:32.5527026Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5527030Z 
2025-02-24T16:09:32.5527121Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:09:32.5527217Z Max absolute difference: 1.38672909e+39
2025-02-24T16:09:32.5527312Z Max relative difference: 5.25284451
2025-02-24T16:09:32.5527458Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5527539Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5527677Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5527759Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5528049Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T16:09:32.5528155Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5528159Z 
2025-02-24T16:09:32.5528254Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:09:32.5528344Z Max absolute difference: 5.26760031e+38
2025-02-24T16:09:32.5528440Z Max relative difference: 35562.41947434
2025-02-24T16:09:32.5528579Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5528661Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5528923Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5529007Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5529473Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T16:09:32.5529569Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5529573Z 
2025-02-24T16:09:32.5529677Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.5529769Z Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.5529960Z Max relative difference: 7.72237896
2025-02-24T16:09:32.5530051Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530128Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530209Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5530292Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530372Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530449Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5530886Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T16:09:32.5530985Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5530989Z 
2025-02-24T16:09:32.5531079Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.5531173Z Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.5531264Z Max relative difference: 4.0036592
2025-02-24T16:09:32.5531413Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5531497Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5531635Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5531718Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5532178Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T16:09:32.5532282Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5532286Z 
2025-02-24T16:09:32.5532377Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5532475Z Max absolute difference: 5.00661745e+37
2025-02-24T16:09:32.5532571Z Max relative difference: 17.51202125
2025-02-24T16:09:32.5532706Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:09:32.5532788Z        2.279436e+31, 2.243943e+31])
2025-02-24T16:09:32.5532924Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:09:32.5533008Z        2.292907e+31, 2.257206e+31])
2025-02-24T16:09:32.5533472Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T16:09:32.5533572Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5533576Z 
2025-02-24T16:09:32.5533680Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.5533775Z Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.5533870Z Max relative difference: 3.25828651
2025-02-24T16:09:32.5533952Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534037Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534117Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5534199Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534279Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534354Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5534791Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T16:09:32.5534892Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5534896Z 
2025-02-24T16:09:32.5534986Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.5535087Z Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.5535175Z Max relative difference: 1.86186015
2025-02-24T16:09:32.5535318Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5535486Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5535629Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5535710Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5536166Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T16:09:32.5536362Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5536366Z 
2025-02-24T16:09:32.5536586Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5536690Z Max absolute difference: 2.90101642e+37
2025-02-24T16:09:32.5536782Z Max relative difference: 0.98973757
2025-02-24T16:09:32.5536921Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:09:32.5537000Z        1.330497e+31, 1.294462e+31])
2025-02-24T16:09:32.5537138Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:09:32.5537221Z        1.375141e+31, 1.337928e+31])
2025-02-24T16:09:32.5537665Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T16:09:32.5537767Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5537770Z 
2025-02-24T16:09:32.5537874Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.5537966Z Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.5538060Z Max relative difference: 3.25828651
2025-02-24T16:09:32.5538145Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538229Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538311Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5538394Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538478Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538554Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5538979Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T16:09:32.5539078Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5539083Z 
2025-02-24T16:09:32.5539180Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.5539288Z Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.5539377Z Max relative difference: 1.86186015
2025-02-24T16:09:32.5539524Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5539604Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5539751Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5539837Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5540292Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T16:09:32.5540398Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5540405Z 
2025-02-24T16:09:32.5540495Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5540595Z Max absolute difference: 2.99183385e+37
2025-02-24T16:09:32.5540686Z Max relative difference: 0.98992197
2025-02-24T16:09:32.5540834Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:09:32.5540919Z        1.260980e+31, 1.222587e+31])
2025-02-24T16:09:32.5541059Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:09:32.5541142Z        1.193005e+31, 1.164854e+31])
2025-02-24T16:09:32.5541591Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T16:09:32.5541696Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5541699Z 
2025-02-24T16:09:32.5541805Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.5541899Z Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.5541997Z Max relative difference: 7.72237896
2025-02-24T16:09:32.5542210Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542291Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542370Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5542457Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542539Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542617Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5543122Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T16:09:32.5543219Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5543223Z 
2025-02-24T16:09:32.5543320Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.5543415Z Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.5543506Z Max relative difference: 4.0036592
2025-02-24T16:09:32.5543650Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5543733Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5543876Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5543953Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5544418Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T16:09:32.5544519Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5544523Z 
2025-02-24T16:09:32.5544615Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5544715Z Max absolute difference: 5.0153284e+37
2025-02-24T16:09:32.5544804Z Max relative difference: 4.90769503
2025-02-24T16:09:32.5544949Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:09:32.5545031Z        2.088676e+31, 2.060278e+31])
2025-02-24T16:09:32.5545168Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:09:32.5545250Z        2.124305e+31, 2.101081e+31])
2025-02-24T16:09:32.5545608Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T16:09:32.5545708Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:09:32.5545711Z 
2025-02-24T16:09:32.5545803Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.5545897Z Max absolute difference: 2.25821059e+25
2025-02-24T16:09:32.5545992Z Max relative difference: 0.00054426
2025-02-24T16:09:32.5546127Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:09:32.5552142Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:09:32.5552325Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:09:32.5552476Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:09:32.5552603Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:09:32.5552728Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:09:32.5553182Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T16:09:32.5553306Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:09:32.5553312Z 
2025-02-24T16:09:32.5553408Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.5553512Z Max absolute difference: 1.93283629e+25
2025-02-24T16:09:32.5553600Z Max relative difference: 0.00029148
2025-02-24T16:09:32.5553752Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:09:32.5553877Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:09:32.5554001Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:09:32.5554139Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:09:32.5554253Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:09:32.5554376Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:09:32.5554910Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T16:09:32.5554993Z Arrays are not equal
2025-02-24T16:09:32.5554997Z 
2025-02-24T16:09:32.5555095Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:09:32.5555235Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.5555328Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.5555436Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.5555671Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.5555765Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.5555866Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.5556471Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T16:09:32.5556575Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:09:32.5556584Z 
2025-02-24T16:09:32.5556686Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:09:32.5556787Z Max absolute difference: 2.00640487e-05
2025-02-24T16:09:32.5556878Z Max relative difference: 2.06329455
2025-02-24T16:09:32.5557049Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.5557136Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.5557300Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.5557384Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.5557882Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T16:09:32.5557992Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5557997Z 
2025-02-24T16:09:32.5558084Z (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.5558229Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.5558350Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.5558477Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.5558613Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.5558725Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.5558849Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.5559320Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T16:09:32.5559432Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5559435Z 
2025-02-24T16:09:32.5559522Z (shapes (558,), (560,) mismatch)
2025-02-24T16:09:32.5559659Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.5559785Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.5559903Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.5560036Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.5560150Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.5560263Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.5560729Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T16:09:32.5560828Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5560832Z 
2025-02-24T16:09:32.5560921Z (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.5561054Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.5561163Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.5561283Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.5561530Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.5561644Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.5561758Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.5562217Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T16:09:32.5562319Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5562324Z 
2025-02-24T16:09:32.5562510Z (shapes (159,), (153,) mismatch)
2025-02-24T16:09:32.5562648Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.5562755Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.5562876Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.5563012Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.5563124Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.5563243Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.5563695Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T16:09:32.5563797Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5563801Z 
2025-02-24T16:09:32.5563887Z (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.5564018Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.5564132Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.5564247Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.5564377Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.5564486Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.5564604Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.5565071Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T16:09:32.5565166Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5565169Z 
2025-02-24T16:09:32.5565262Z (shapes (1466,), (1481,) mismatch)
2025-02-24T16:09:32.5565410Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:09:32.5565493Z        11152.962595, 11172.044815])
2025-02-24T16:09:32.5565644Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:09:32.5565720Z        11398.237865, 11111.204868])
2025-02-24T16:09:32.5566178Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T16:09:32.5566377Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5566383Z 
2025-02-24T16:09:32.5566476Z (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.5566611Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.5566722Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.5566846Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.5566970Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.5567085Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.5567210Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.5567666Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T16:09:32.5567770Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5567774Z 
2025-02-24T16:09:32.5567854Z (shapes (379,), (381,) mismatch)
2025-02-24T16:09:32.5567983Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:09:32.5568239Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:09:32.5568354Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:09:32.5568484Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:09:32.5568590Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:09:32.5568709Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:09:32.5569239Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T16:09:32.5569345Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5569350Z 
2025-02-24T16:09:32.5569444Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.5569536Z Max absolute difference: 22.
2025-02-24T16:09:32.5569630Z Max relative difference: 0.8
2025-02-24T16:09:32.5569713Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.5569799Z        [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.5569877Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.5569964Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.5570045Z        [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.5570120Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.5570557Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T16:09:32.5570657Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5570661Z 
2025-02-24T16:09:32.5570764Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.5570857Z Max absolute difference: 22.
2025-02-24T16:09:32.5570942Z Max relative difference: 0.8
2025-02-24T16:09:32.5571026Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.5571100Z        [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.5571184Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.5571262Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.5571351Z        [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.5571433Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.5571865Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T16:09:32.5571966Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5571970Z 
2025-02-24T16:09:32.5572057Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5572150Z Max absolute difference: 34
2025-02-24T16:09:32.5572243Z Max relative difference: 0.71428571
2025-02-24T16:09:32.5572396Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.5572485Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5572616Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.5572704Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5573130Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T16:09:32.5573233Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5573237Z 
2025-02-24T16:09:32.5573331Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.5573420Z Max absolute difference: 34.
2025-02-24T16:09:32.5573514Z Max relative difference: 0.65
2025-02-24T16:09:32.5573594Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:09:32.5573675Z        [1.19e+04, 2.72e+02],
2025-02-24T16:09:32.5573750Z        [1.19e+04, 1.10e+02],...
2025-02-24T16:09:32.5573834Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:09:32.5573917Z        [1.19e+04, 3.06e+02],
2025-02-24T16:09:32.5573993Z        [1.19e+04, 1.18e+02],...
2025-02-24T16:09:32.5574424Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:09:32.5574521Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5574525Z 
2025-02-24T16:09:32.5574618Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5574798Z Max absolute difference: 22
2025-02-24T16:09:32.5574884Z Max relative difference: 0.8
2025-02-24T16:09:32.5575017Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.5575097Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5575224Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.5575306Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5575800Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:09:32.5575902Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5575906Z 
2025-02-24T16:09:32.5575991Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5576083Z Max absolute difference: 22
2025-02-24T16:09:32.5576170Z Max relative difference: 0.8
2025-02-24T16:09:32.5576407Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.5576500Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5576624Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.5576708Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5577129Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:09:32.5577227Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5577231Z 
2025-02-24T16:09:32.5577321Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5577413Z Max absolute difference: 34
2025-02-24T16:09:32.5577509Z Max relative difference: 0.71428571
2025-02-24T16:09:32.5577638Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.5577722Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5577849Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.5577934Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5578363Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:09:32.5578459Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5578463Z 
2025-02-24T16:09:32.5578557Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5578642Z Max absolute difference: 34
2025-02-24T16:09:32.5578738Z Max relative difference: 0.65
2025-02-24T16:09:32.5578871Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.5578956Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5579088Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.5579167Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5579657Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T16:09:32.5579761Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5579765Z 
2025-02-24T16:09:32.5579861Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5579965Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5580055Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5580211Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5580288Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5580435Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5580515Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5580996Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T16:09:32.5581105Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5581110Z 
2025-02-24T16:09:32.5581200Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5581418Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5581508Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5581656Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5581738Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5581875Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5581955Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5582530Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T16:09:32.5582642Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5582646Z 
2025-02-24T16:09:32.5582742Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5582833Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5582926Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5583064Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5583151Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5583288Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5583371Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5583849Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T16:09:32.5583945Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5583949Z 
2025-02-24T16:09:32.5584047Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5584137Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5584229Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5584375Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5584451Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5584597Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5584673Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5585153Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T16:09:32.5585256Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5585259Z 
2025-02-24T16:09:32.5585351Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5585448Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5585541Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5585687Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5585763Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5585907Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5585987Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5586593Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T16:09:32.5586699Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5586703Z 
2025-02-24T16:09:32.5586791Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5586888Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5586987Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5587124Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5587204Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5587342Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5587424Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5587898Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T16:09:32.5587998Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5588001Z 
2025-02-24T16:09:32.5588096Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5588305Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5588402Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5588540Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5588621Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5588765Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5588840Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5589455Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T16:09:32.5589555Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5589558Z 
2025-02-24T16:09:32.5589653Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5589749Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5589838Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5589984Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5590064Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5590205Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5590280Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5590756Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T16:09:32.5590857Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5590861Z 
2025-02-24T16:09:32.5590952Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5591050Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5591137Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5591281Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5591363Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5591500Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5591588Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5592062Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T16:09:32.5592165Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5592168Z 
2025-02-24T16:09:32.5592256Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5592353Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5592448Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5592591Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5592672Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5592807Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5592888Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5593376Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T16:09:32.5593486Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5593489Z 
2025-02-24T16:09:32.5593577Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5593673Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5593764Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5593900Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5593981Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5594119Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5594200Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5594673Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T16:09:32.5594774Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5594778Z 
2025-02-24T16:09:32.5594872Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5595068Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5595160Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5595295Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5595375Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5595516Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5595591Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5596145Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T16:09:32.5596243Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5596247Z 
2025-02-24T16:09:32.5596447Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5596547Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5596638Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5596779Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5596858Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5596998Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5597073Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5597551Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T16:09:32.5597650Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5597654Z 
2025-02-24T16:09:32.5597744Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5597842Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5597931Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5598073Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5598153Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5598289Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5598373Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5598846Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T16:09:32.5598947Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5598951Z 
2025-02-24T16:09:32.5599045Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5599134Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5599230Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5599366Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5599448Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5599583Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5599668Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5600146Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T16:09:32.5600245Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5600249Z 
2025-02-24T16:09:32.5600344Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5600438Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5600535Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5600678Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5600754Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5600897Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5600973Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5601409Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:09:32.5601505Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5601513Z 
2025-02-24T16:09:32.5601602Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5601827Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5601914Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5602056Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5602130Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5602273Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5602353Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5602881Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:09:32.5602986Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5602990Z 
2025-02-24T16:09:32.5603078Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5603173Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5603260Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5603402Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5603486Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5603624Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5603704Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5604143Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T16:09:32.5604246Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5604250Z 
2025-02-24T16:09:32.5604346Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5604440Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5604533Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5604670Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5604750Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5604888Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5604972Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5605405Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T16:09:32.5605500Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5605504Z 
2025-02-24T16:09:32.5605595Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5605690Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5605783Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5605926Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5606002Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5606146Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5606221Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5606754Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:09:32.5606862Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5606866Z 
2025-02-24T16:09:32.5606958Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5607054Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5607144Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5607286Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5607363Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5607508Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5607587Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5608021Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:09:32.5608121Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5608125Z 
2025-02-24T16:09:32.5608216Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5608436Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5608530Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5608666Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5608746Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5608882Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5608963Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5609488Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T16:09:32.5609592Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5609596Z 
2025-02-24T16:09:32.5609688Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5609781Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5609877Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5610017Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5610100Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5610241Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5610317Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5610748Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T16:09:32.5610843Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5610847Z 
2025-02-24T16:09:32.5610944Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5611039Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5611130Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5611272Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5611346Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5611489Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5611568Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5612000Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T16:09:32.5612102Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5612106Z 
2025-02-24T16:09:32.5612197Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5612292Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5612378Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5612536Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5612624Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5612771Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5612854Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5613300Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T16:09:32.5613410Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5613414Z 
2025-02-24T16:09:32.5613507Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5613609Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5613702Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5613846Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5613928Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5614066Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5614151Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5614595Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T16:09:32.5614695Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5614699Z 
2025-02-24T16:09:32.5614792Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5614884Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5615065Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5615205Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5615287Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5615428Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5615504Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5616031Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T16:09:32.5616131Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5616135Z 
2025-02-24T16:09:32.5616229Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5616438Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5616529Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5616681Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5616762Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5616905Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5616981Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5617424Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T16:09:32.5617529Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5617533Z 
2025-02-24T16:09:32.5617624Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5617722Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5617813Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5617964Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5618045Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5618180Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5618262Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5618694Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T16:09:32.5618796Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5618800Z 
2025-02-24T16:09:32.5618894Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5618985Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5619079Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5619219Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5619301Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5619437Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5619519Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5619955Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T16:09:32.5620050Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5620057Z 
2025-02-24T16:09:32.5620155Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5620246Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5620341Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5620482Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5620558Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5620702Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5620780Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5621215Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T16:09:32.5621313Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5621323Z 
2025-02-24T16:09:32.5621410Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5621505Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5621720Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5621861Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5621938Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5622078Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5622160Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5622434Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 753.85s (0:12:33) =
2025-02-24T16:09:34.8073273Z ##[error]Process completed with exit code 1.
2025-02-24T16:09:34.8151239Z Post job cleanup.
2025-02-24T16:09:34.8182784Z Post job cleanup.
2025-02-24T16:09:34.9516216Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-02-24T16:09:34.9522869Z Removing micromamba run shell ...
2025-02-24T16:09:34.9526613Z ##[group]Deinitialize micromamba for bash
2025-02-24T16:09:34.9545185Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T16:09:34.9646239Z Resetting RC file "/home/runner/.bashrc"
2025-02-24T16:09:34.9646913Z Deleting config for root prefix 
2025-02-24T16:09:34.9647398Z Clearing mamba executable environment variable
2025-02-24T16:09:34.9649842Z Removing the following in your "/home/runner/.bashrc" file
2025-02-24T16:09:34.9650758Z # >>> mamba initialize >>>
2025-02-24T16:09:34.9650988Z ...
2025-02-24T16:09:34.9651172Z # <<< mamba initialize <<<
2025-02-24T16:09:34.9679887Z Removing mamba initialize block from .bash_profile
2025-02-24T16:09:34.9696693Z ##[endgroup]
2025-02-24T16:09:34.9701234Z Removing environment tardis from auto-activate bash ...
2025-02-24T16:09:34.9834443Z Post job cleanup.
2025-02-24T16:09:34.9872441Z Post job cleanup.
2025-02-24T16:09:35.0857159Z [command]/usr/bin/git version
2025-02-24T16:09:35.0893167Z git version 2.48.1
2025-02-24T16:09:35.0943026Z Temporarily overriding HOME='/home/runner/work/_temp/7cbe1740-4643-40ca-a6cc-ad493be2e67c' before making global git config changes
2025-02-24T16:09:35.0944406Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T16:09:35.0949626Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T16:09:35.0987876Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T16:09:35.1021304Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T16:09:35.1250569Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T16:09:35.1270966Z http.https://github.com/.extraheader
2025-02-24T16:09:35.1284684Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T16:09:35.1318658Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T16:09:35.1663774Z Post job cleanup.
2025-02-24T16:09:35.2612543Z [command]/usr/bin/git version
2025-02-24T16:09:35.2649283Z git version 2.48.1
2025-02-24T16:09:35.2691680Z Temporarily overriding HOME='/home/runner/work/_temp/464e7b95-b768-4154-b572-f465b2d44981' before making global git config changes
2025-02-24T16:09:35.2692850Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T16:09:35.2704985Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-24T16:09:35.2740674Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T16:09:35.2772900Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T16:09:35.3011866Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T16:09:35.3032877Z http.https://github.com/.extraheader
2025-02-24T16:09:35.3045210Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T16:09:35.3079260Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T16:09:35.3411337Z Cleaning up orphan processes
