2025-02-24T15:57:42.6900060Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T15:57:42.6901130Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T15:57:42.6957760Z shell: /bin/bash -l {0}
2025-02-24T15:57:42.6958010Z env:
2025-02-24T15:57:42.6958180Z   CACHE_NUMBER: 0
2025-02-24T15:57:42.6958710Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:57:42.6959550Z   CODECOV_TOKEN: ***
2025-02-24T15:57:42.6959760Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-02-24T15:57:42.6960050Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-02-24T15:57:42.6960350Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:57:42.6960660Z ##[endgroup]
2025-02-24T15:57:58.1387460Z ============================= test session starts ==============================
2025-02-24T15:57:58.1388610Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T15:57:58.1389150Z rootdir: /Users/runner/work/tardis/tardis
2025-02-24T15:57:58.1389520Z configfile: pyproject.toml
2025-02-24T15:57:58.1389910Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-02-24T15:57:58.1390430Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T15:57:58.1390750Z 
2025-02-24T15:58:01.6321580Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T15:58:04.3774200Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T15:58:05.6178060Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T15:58:06.7232570Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T15:58:06.7293270Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T15:58:07.6970950Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T15:58:08.0106550Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T15:58:08.0115730Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T15:58:11.2597860Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T15:58:11.2677020Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T15:58:11.2895910Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T15:58:45.4185310Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T15:58:45.5602160Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T15:58:45.6857220Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T15:58:45.7372280Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T15:58:45.8043430Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T15:58:46.3351680Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T15:58:47.1168570Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T15:58:47.1473060Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T15:58:47.3505080Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T15:58:47.3569280Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T15:59:21.9566770Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T15:59:22.8551840Z ............                                                             [ 10%]
2025-02-24T15:59:25.5011790Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T15:59:25.5376790Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T15:59:27.1283490Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T15:59:28.6797060Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T15:59:30.9929550Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T15:59:33.4761180Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T16:00:21.7708320Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T16:00:33.9514620Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T16:00:35.4249610Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T16:00:38.4481860Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T16:00:40.4495150Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T16:00:43.1884640Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T16:00:46.2981800Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T16:00:47.5892360Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T16:00:51.4777200Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T16:00:54.5399640Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T16:00:57.9870970Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T16:01:00.3323890Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T16:01:03.2573760Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T16:01:06.3020190Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T16:01:06.9244420Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T16:01:07.2409540Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T16:01:07.2492890Z ......                                                                   [ 62%]
2025-02-24T16:01:07.5278610Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T16:03:19.5090130Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T16:03:19.5192460Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T16:03:45.0668240Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T16:03:58.4561750Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T16:03:59.2957100Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T16:04:12.1031270Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T16:04:12.1207150Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T16:04:12.5589590Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T16:04:12.5641120Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T16:04:14.0882240Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T16:04:14.1152100Z ..........                                                               [ 69%]
2025-02-24T16:04:14.4004140Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T16:04:14.4393310Z .........                                                                [ 72%]
2025-02-24T16:04:52.2219640Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T16:06:28.1546880Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T16:08:17.3525480Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T16:08:17.4264560Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T16:08:19.5860710Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T16:08:24.6510880Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T16:08:24.7993670Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T16:08:24.8112420Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T16:08:24.8355250Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T16:08:32.5051090Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T16:08:32.5182080Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T16:08:35.5396320Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T16:08:35.9574930Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T16:08:36.6623770Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T16:08:36.7529770Z XX.........                                                              [ 84%]
2025-02-24T16:08:36.7806640Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T16:08:36.9868190Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T16:08:37.2473860Z .....                                                                    [ 85%]
2025-02-24T16:08:46.7443330Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T16:08:46.7659480Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T16:08:46.7694720Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T16:08:47.9575920Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T16:08:47.9782020Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T16:08:50.6095780Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T16:08:50.6101910Z                                                                          [ 86%]
2025-02-24T16:08:51.2035650Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T16:08:53.6219360Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T16:08:55.4736790Z ......                                                                   [ 88%]
2025-02-24T16:08:59.1765230Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T16:09:03.7406640Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T16:09:06.7807080Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T16:09:14.3271100Z ....                                                                     [ 92%]
2025-02-24T16:09:19.8486550Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T16:09:27.0870900Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T16:09:27.4424880Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T16:09:27.4822010Z ....                                                                     [ 96%]
2025-02-24T16:09:28.3009060Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T16:09:28.8438000Z ..................                                                       [ 98%]
2025-02-24T16:12:38.6465020Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T16:12:46.4648520Z ......                                                                   [100%]
2025-02-24T16:12:46.4734000Z 
2025-02-24T16:12:46.4734800Z =================================== FAILURES ===================================
2025-02-24T16:12:46.4735610Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T16:12:46.4735930Z 
2025-02-24T16:12:46.4736250Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T16:12:46.4736770Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T16:12:46.4737120Z 
2025-02-24T16:12:46.4739080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.4740280Z         if err_msg is None:
2025-02-24T16:12:46.4740700Z             if left.shape != right.shape:
2025-02-24T16:12:46.4741080Z                 raise_assert_detail(
2025-02-24T16:12:46.4741900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.4742610Z                 )
2025-02-24T16:12:46.4743000Z     
2025-02-24T16:12:46.4743340Z             diff = 0
2025-02-24T16:12:46.4743750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.4744210Z                 # count up differences
2025-02-24T16:12:46.4744640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.4745130Z                     diff += 1
2025-02-24T16:12:46.4745440Z     
2025-02-24T16:12:46.4745780Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.4746190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.4746740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.4747340Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.4747840Z E           
2025-02-24T16:12:46.4748310Z E           numpy array values are different (0.09581 %)
2025-02-24T16:12:46.4748990Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:12:46.4750340Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:12:46.4750940Z 
2025-02-24T16:12:46.4751750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.4752600Z 
2025-02-24T16:12:46.4752920Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.4753240Z 
2025-02-24T16:12:46.4753590Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x13df64c50>
2025-02-24T16:12:46.4754430Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13df64fe0>
2025-02-24T16:12:46.4754870Z 
2025-02-24T16:12:46.4755560Z     def test_calculate_sobolev_line_opacity(
2025-02-24T16:12:46.4756020Z         nb_simulation_verysimple, regression_data
2025-02-24T16:12:46.4756370Z     ):
2025-02-24T16:12:46.4756700Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:12:46.4757080Z     
2025-02-24T16:12:46.4774310Z         actual = calculate_sobolev_line_opacity(
2025-02-24T16:12:46.4775170Z             legacy_plasma.lines,
2025-02-24T16:12:46.4775810Z             legacy_plasma.level_number_density,
2025-02-24T16:12:46.4805220Z             legacy_plasma.time_explosion,
2025-02-24T16:12:46.4805980Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:12:46.4806720Z         )
2025-02-24T16:12:46.4807340Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.4808110Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.4808610Z 
2025-02-24T16:12:46.4808940Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T16:12:46.4809700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.4810640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.4811590Z     ???
2025-02-24T16:12:46.4811940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.4812210Z 
2025-02-24T16:12:46.4812320Z >   ???
2025-02-24T16:12:46.4812560Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T16:12:46.4813130Z E   
2025-02-24T16:12:46.4813370Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:12:46.4813750Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:12:46.4814030Z E          ...
2025-02-24T16:12:46.4814340Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:12:46.4814650Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:12:46.4815050Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:12:46.4815370Z E          ...
2025-02-24T16:12:46.4815590Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:12:46.4815920Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:12:46.4816290Z E   At positional index 54, first diff: 14 != 12
2025-02-24T16:12:46.4816500Z 
2025-02-24T16:12:46.4816660Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.4816990Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.4819660Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.4820510Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.4821210Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:12:46.4821460Z 
2025-02-24T16:12:46.4860330Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.91s/it]
2025-02-24T16:12:46.4860760Z 
2025-02-24T16:12:46.4861040Z Packets:                                                                                   4030/? [00:12<00:00, 31838.66it/s][A
2025-02-24T16:12:46.4861430Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.4862180Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.4862920Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T16:12:46.4863120Z 
2025-02-24T16:12:46.4863370Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x13df64c50>
2025-02-24T16:12:46.4864020Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13cc38860>
2025-02-24T16:12:46.4864360Z 
2025-02-24T16:12:46.4864520Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T16:12:46.4865000Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:12:46.4865280Z     
2025-02-24T16:12:46.4865590Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T16:12:46.4865930Z             legacy_plasma.lines,
2025-02-24T16:12:46.4866200Z             legacy_plasma.level_number_density,
2025-02-24T16:12:46.4867050Z             legacy_plasma.time_explosion,
2025-02-24T16:12:46.4867400Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:12:46.4868050Z         )
2025-02-24T16:12:46.4868260Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T16:12:46.4868640Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.4868960Z >       npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.4869170Z 
2025-02-24T16:12:46.4869340Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T16:12:46.4869710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.4869880Z 
2025-02-24T16:12:46.4870170Z args = (<function assert_allclose.<locals>.compare at 0x1259aaca0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4870620Z        [1., 1., 1.,.....,
2025-02-24T16:12:46.4870840Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4871130Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4871380Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:12:46.4871800Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.4872130Z 
2025-02-24T16:12:46.4872230Z     @wraps(func)
2025-02-24T16:12:46.4872440Z     def inner(*args, **kwds):
2025-02-24T16:12:46.4872730Z         with self._recreate_cm():
2025-02-24T16:12:46.4872980Z >           return func(*args, **kwds)
2025-02-24T16:12:46.4873280Z E           AssertionError: 
2025-02-24T16:12:46.4873540Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.4873900Z E           
2025-02-24T16:12:46.4874120Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:12:46.4874450Z E           Max absolute difference: 0.99984222
2025-02-24T16:12:46.4874770Z E           Max relative difference: 6337.12154973
2025-02-24T16:12:46.4875090Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4875430Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4875720Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.4876040Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4876330Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.4876680Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.4876880Z 
2025-02-24T16:12:46.4877100Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.4877620Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T16:12:46.4877850Z 
2025-02-24T16:12:46.4878090Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T16:12:46.4879060Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x14b7e8ce0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x302f6a600>, 'electron')]
2025-02-24T16:12:46.4880010Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x13cbafbf0>
2025-02-24T16:12:46.4880610Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30f200c80>
2025-02-24T16:12:46.4880950Z 
2025-02-24T16:12:46.4881070Z     def test_rate_matrix_solver(
2025-02-24T16:12:46.4881320Z         new_chianti_atomic_dataset_si,
2025-02-24T16:12:46.4881610Z         rate_solver_list,
2025-02-24T16:12:46.4881870Z         collisional_simulation_state,
2025-02-24T16:12:46.4882210Z         regression_data,
2025-02-24T16:12:46.4882430Z     ):
2025-02-24T16:12:46.4882670Z         rate_matrix_solver = RateMatrix(
2025-02-24T16:12:46.4883090Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T16:12:46.4883370Z         )
2025-02-24T16:12:46.4883600Z     
2025-02-24T16:12:46.4883840Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T16:12:46.4884240Z             collisional_simulation_state.t_radiative,
2025-02-24T16:12:46.4884860Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T16:12:46.4885280Z         )
2025-02-24T16:12:46.4885730Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T16:12:46.4886140Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T16:12:46.4886510Z         )
2025-02-24T16:12:46.4886670Z     
2025-02-24T16:12:46.4886970Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T16:12:46.4887270Z     
2025-02-24T16:12:46.4887570Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.4887790Z 
2025-02-24T16:12:46.4887910Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T16:12:46.4888280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.4888640Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T16:12:46.4889030Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T16:12:46.4889490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T16:12:46.4889890Z     return store.select(
2025-02-24T16:12:46.4890310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T16:12:46.4890700Z     return it.get_result()
2025-02-24T16:12:46.4891130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T16:12:46.4891560Z     results = self.func(self.start, self.stop, where)
2025-02-24T16:12:46.4892030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T16:12:46.4892540Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T16:12:46.4893030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T16:12:46.4893560Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T16:12:46.4894070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T16:12:46.4894550Z     ret = node[0][start:stop]
2025-02-24T16:12:46.4894930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T16:12:46.4895480Z     return self.read(start, stop, step)[0]
2025-02-24T16:12:46.4895920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T16:12:46.4896340Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T16:12:46.4896710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.4896940Z 
2025-02-24T16:12:46.4897000Z self = ObjectAtom()
2025-02-24T16:12:46.4897300Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T16:12:46.4897530Z 
2025-02-24T16:12:46.4897600Z     def fromarray(self, array):
2025-02-24T16:12:46.4897940Z         # We have to check for an empty array because of a possible
2025-02-24T16:12:46.4898330Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T16:12:46.4898640Z         # record when in fact it is empty.
2025-02-24T16:12:46.4898950Z         if array.size == 0:
2025-02-24T16:12:46.4899160Z             return None
2025-02-24T16:12:46.4899460Z >       return pickle.loads(array.tobytes())
2025-02-24T16:12:46.4899810Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:12:46.4900050Z 
2025-02-24T16:12:46.4900320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T16:12:46.4900830Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.4901390Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.4902210Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.4902960Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.4903660Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.4904530Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T16:12:46.4904810Z 
2025-02-24T16:12:46.4904970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.4905360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.4905670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.4906030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.4906390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.4906750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.4906990Z err_msg = None
2025-02-24T16:12:46.4907140Z 
2025-02-24T16:12:46.4907280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.4907610Z         if err_msg is None:
2025-02-24T16:12:46.4907870Z             if left.shape != right.shape:
2025-02-24T16:12:46.4908190Z                 raise_assert_detail(
2025-02-24T16:12:46.4908500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.4908880Z                 )
2025-02-24T16:12:46.4909150Z     
2025-02-24T16:12:46.4909510Z             diff = 0
2025-02-24T16:12:46.4909750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.4909990Z                 # count up differences
2025-02-24T16:12:46.4911250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.4911560Z                     diff += 1
2025-02-24T16:12:46.4911750Z     
2025-02-24T16:12:46.4911950Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5047460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5048320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5048790Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5049090Z E           
2025-02-24T16:12:46.5049380Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5050330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5061560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5062480Z 
2025-02-24T16:12:46.5063850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5064240Z 
2025-02-24T16:12:46.5064380Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5065700Z 
2025-02-24T16:12:46.5065940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d92510>
2025-02-24T16:12:46.5066440Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>, attr = 'lines'
2025-02-24T16:12:46.5066740Z 
2025-02-24T16:12:46.5066920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5067250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5067560Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5069260Z         try:
2025-02-24T16:12:46.5069530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5071120Z         except KeyError:
2025-02-24T16:12:46.5071360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5071600Z     
2025-02-24T16:12:46.5071750Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5071950Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5072160Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5072420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5072670Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5072870Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5073100Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5073330Z             else:
2025-02-24T16:12:46.5073520Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5073760Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5073920Z 
2025-02-24T16:12:46.5074030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5074310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5074600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5074840Z     ???
2025-02-24T16:12:46.5075020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5075190Z 
2025-02-24T16:12:46.5075240Z >   ???
2025-02-24T16:12:46.5075420Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5075640Z E   
2025-02-24T16:12:46.5075830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5076100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5076320Z E          ...
2025-02-24T16:12:46.5076480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5076740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5077030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5077250Z E          ...
2025-02-24T16:12:46.5077460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5077800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5078090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5078290Z 
2025-02-24T16:12:46.5078410Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5078790Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T16:12:46.5079080Z 
2025-02-24T16:12:46.5079310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d91d60>
2025-02-24T16:12:46.5079820Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>
2025-02-24T16:12:46.5080130Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5080290Z 
2025-02-24T16:12:46.5080440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5080840Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5081150Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5081400Z         try:
2025-02-24T16:12:46.5081620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5081960Z         except KeyError:
2025-02-24T16:12:46.5082290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5082560Z     
2025-02-24T16:12:46.5082770Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5083050Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5083350Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5083680Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5084010Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5084280Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5084580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5085660Z 
2025-02-24T16:12:46.5085810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5086170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5086890Z 
2025-02-24T16:12:46.5087070Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5090420Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5091180Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5091470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5091820Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5092130Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5092440Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5092750Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5092970Z err_msg = None
2025-02-24T16:12:46.5093100Z 
2025-02-24T16:12:46.5093260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5093570Z         if err_msg is None:
2025-02-24T16:12:46.5093840Z             if left.shape != right.shape:
2025-02-24T16:12:46.5094130Z                 raise_assert_detail(
2025-02-24T16:12:46.5094490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5094840Z                 )
2025-02-24T16:12:46.5095020Z     
2025-02-24T16:12:46.5095180Z             diff = 0
2025-02-24T16:12:46.5095440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5095710Z                 # count up differences
2025-02-24T16:12:46.5096070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5096440Z                     diff += 1
2025-02-24T16:12:46.5096680Z     
2025-02-24T16:12:46.5096890Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5097230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5097670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5098070Z E           AssertionError: Series are different
2025-02-24T16:12:46.5098360Z E           
2025-02-24T16:12:46.5098590Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5099160Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5099980Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5100760Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5101190Z 
2025-02-24T16:12:46.5101510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5102280Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T16:12:46.5102630Z 
2025-02-24T16:12:46.5102890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d929c0>
2025-02-24T16:12:46.5103780Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>
2025-02-24T16:12:46.5104180Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5104700Z 
2025-02-24T16:12:46.5104860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5105250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5105580Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5105770Z         try:
2025-02-24T16:12:46.5106030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5106370Z         except KeyError:
2025-02-24T16:12:46.5106700Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5106990Z     
2025-02-24T16:12:46.5107170Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5107450Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5107760Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5108110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5108420Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5108620Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5108920Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5109140Z 
2025-02-24T16:12:46.5109300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5109700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5109950Z 
2025-02-24T16:12:46.5110120Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5110520Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5111180Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5111550Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5111920Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5112210Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5112520Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5112760Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5112960Z err_msg = None
2025-02-24T16:12:46.5113060Z 
2025-02-24T16:12:46.5113150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5113370Z         if err_msg is None:
2025-02-24T16:12:46.5113570Z             if left.shape != right.shape:
2025-02-24T16:12:46.5113790Z                 raise_assert_detail(
2025-02-24T16:12:46.5114060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5114310Z                 )
2025-02-24T16:12:46.5114450Z     
2025-02-24T16:12:46.5114570Z             diff = 0
2025-02-24T16:12:46.5114780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5115020Z                 # count up differences
2025-02-24T16:12:46.5115750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5116830Z                     diff += 1
2025-02-24T16:12:46.5117330Z     
2025-02-24T16:12:46.5117760Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5118470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5119380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5120230Z E           AssertionError: Series are different
2025-02-24T16:12:46.5120830Z E           
2025-02-24T16:12:46.5121330Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.5122670Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5125310Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5127930Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5129110Z 
2025-02-24T16:12:46.5130170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5132410Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T16:12:46.5133530Z 
2025-02-24T16:12:46.5133880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5135200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5136100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5136920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5137270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5137550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5137770Z err_msg = None
2025-02-24T16:12:46.5137880Z 
2025-02-24T16:12:46.5137990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5138250Z         if err_msg is None:
2025-02-24T16:12:46.5138450Z             if left.shape != right.shape:
2025-02-24T16:12:46.5138680Z                 raise_assert_detail(
2025-02-24T16:12:46.5138960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5139210Z                 )
2025-02-24T16:12:46.5139360Z     
2025-02-24T16:12:46.5139490Z             diff = 0
2025-02-24T16:12:46.5139690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5139920Z                 # count up differences
2025-02-24T16:12:46.5140200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5140480Z                     diff += 1
2025-02-24T16:12:46.5140660Z     
2025-02-24T16:12:46.5140810Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5141070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5141410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5141740Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5141960Z E           
2025-02-24T16:12:46.5142150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5142530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5143080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5143720Z 
2025-02-24T16:12:46.5143990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5144310Z 
2025-02-24T16:12:46.5144750Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5144970Z 
2025-02-24T16:12:46.5145250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d91280>
2025-02-24T16:12:46.5145680Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>, attr = 'nu'
2025-02-24T16:12:46.5145910Z 
2025-02-24T16:12:46.5146040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5146330Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5146570Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5146750Z         try:
2025-02-24T16:12:46.5146960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5147220Z         except KeyError:
2025-02-24T16:12:46.5147450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5147710Z     
2025-02-24T16:12:46.5147860Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5148070Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5148290Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5148700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5148970Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5149180Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5149420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5149590Z 
2025-02-24T16:12:46.5149700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5150110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5150420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5150670Z     ???
2025-02-24T16:12:46.5150900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5151240Z 
2025-02-24T16:12:46.5151290Z >   ???
2025-02-24T16:12:46.5151490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5151730Z E   
2025-02-24T16:12:46.5151910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5152210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5152440Z E          ...
2025-02-24T16:12:46.5152610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5152880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5153170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5153390Z E          ...
2025-02-24T16:12:46.5153560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5153820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5154260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5154410Z 
2025-02-24T16:12:46.5154500Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5154800Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T16:12:46.5155050Z 
2025-02-24T16:12:46.5155170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5155470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5155740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5156020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5156330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5156610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5156820Z err_msg = None
2025-02-24T16:12:46.5156910Z 
2025-02-24T16:12:46.5157150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5157730Z         if err_msg is None:
2025-02-24T16:12:46.5158280Z             if left.shape != right.shape:
2025-02-24T16:12:46.5158530Z                 raise_assert_detail(
2025-02-24T16:12:46.5159060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5159500Z                 )
2025-02-24T16:12:46.5159660Z     
2025-02-24T16:12:46.5159890Z             diff = 0
2025-02-24T16:12:46.5160110Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5160370Z                 # count up differences
2025-02-24T16:12:46.5160690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5160980Z                     diff += 1
2025-02-24T16:12:46.5161190Z     
2025-02-24T16:12:46.5161430Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5161790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5169230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5169630Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5169850Z E           
2025-02-24T16:12:46.5170040Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5170420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5170950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5171240Z 
2025-02-24T16:12:46.5171520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5179890Z 
2025-02-24T16:12:46.5180050Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5180290Z 
2025-02-24T16:12:46.5180470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d90e90>
2025-02-24T16:12:46.5180870Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>
2025-02-24T16:12:46.5181150Z attr = 'wavelength_cm'
2025-02-24T16:12:46.5181260Z 
2025-02-24T16:12:46.5181380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5181670Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5181910Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5182090Z         try:
2025-02-24T16:12:46.5182310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5182570Z         except KeyError:
2025-02-24T16:12:46.5182810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5183060Z     
2025-02-24T16:12:46.5183210Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5183420Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5183640Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5183900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5184150Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5184360Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5184590Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5184750Z 
2025-02-24T16:12:46.5184850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5185130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5185430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5185670Z     ???
2025-02-24T16:12:46.5185850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5186370Z 
2025-02-24T16:12:46.5186420Z >   ???
2025-02-24T16:12:46.5186640Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5187230Z E   
2025-02-24T16:12:46.5187420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5187690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5187910Z E          ...
2025-02-24T16:12:46.5188160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5188410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5188690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5188910Z E          ...
2025-02-24T16:12:46.5189080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5189360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5189630Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5189790Z 
2025-02-24T16:12:46.5189870Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5190170Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T16:12:46.5190410Z 
2025-02-24T16:12:46.5190520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5190820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5191080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5191350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5191650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5191930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5192130Z err_msg = None
2025-02-24T16:12:46.5192220Z 
2025-02-24T16:12:46.5192330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5192580Z         if err_msg is None:
2025-02-24T16:12:46.5192780Z             if left.shape != right.shape:
2025-02-24T16:12:46.5193000Z                 raise_assert_detail(
2025-02-24T16:12:46.5193280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5193550Z                 )
2025-02-24T16:12:46.5193700Z     
2025-02-24T16:12:46.5193840Z             diff = 0
2025-02-24T16:12:46.5194050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5194280Z                 # count up differences
2025-02-24T16:12:46.5194570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5194870Z                     diff += 1
2025-02-24T16:12:46.5195040Z     
2025-02-24T16:12:46.5195190Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5195460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5195830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5196170Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5196430Z E           
2025-02-24T16:12:46.5196610Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5197010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5197530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5197970Z 
2025-02-24T16:12:46.5198240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5198580Z 
2025-02-24T16:12:46.5198950Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5199170Z 
2025-02-24T16:12:46.5199360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d91e80>
2025-02-24T16:12:46.5199780Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>, attr = 'f_lu'
2025-02-24T16:12:46.5200020Z 
2025-02-24T16:12:46.5200140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5200420Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5200660Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5200840Z         try:
2025-02-24T16:12:46.5201050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5201300Z         except KeyError:
2025-02-24T16:12:46.5201530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5201770Z     
2025-02-24T16:12:46.5201910Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5202130Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5202360Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5202610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5202870Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5203080Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5203310Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5203480Z 
2025-02-24T16:12:46.5203580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5203860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5204150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5204400Z     ???
2025-02-24T16:12:46.5204580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5204750Z 
2025-02-24T16:12:46.5204800Z >   ???
2025-02-24T16:12:46.5204980Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5205210Z E   
2025-02-24T16:12:46.5205390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5205660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5205880Z E          ...
2025-02-24T16:12:46.5206050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5206300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5206580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5206810Z E          ...
2025-02-24T16:12:46.5206970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5207220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5207480Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5207650Z 
2025-02-24T16:12:46.5207720Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5208020Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T16:12:46.5208270Z 
2025-02-24T16:12:46.5208380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5208670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5208940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5209210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5209510Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5209770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5211040Z err_msg = None
2025-02-24T16:12:46.5211150Z 
2025-02-24T16:12:46.5211250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5211710Z         if err_msg is None:
2025-02-24T16:12:46.5211910Z             if left.shape != right.shape:
2025-02-24T16:12:46.5215210Z                 raise_assert_detail(
2025-02-24T16:12:46.5218660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5219530Z                 )
2025-02-24T16:12:46.5219950Z     
2025-02-24T16:12:46.5220330Z             diff = 0
2025-02-24T16:12:46.5220870Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5221510Z                 # count up differences
2025-02-24T16:12:46.5222520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5223290Z                     diff += 1
2025-02-24T16:12:46.5223840Z     
2025-02-24T16:12:46.5225030Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5225860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5226770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5227730Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5228350Z E           
2025-02-24T16:12:46.5228900Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5229990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5231510Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5232380Z 
2025-02-24T16:12:46.5233120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5234030Z 
2025-02-24T16:12:46.5234430Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5235000Z 
2025-02-24T16:12:46.5235520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d90c80>
2025-02-24T16:12:46.5236560Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>
2025-02-24T16:12:46.5237280Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.5237680Z 
2025-02-24T16:12:46.5237990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5238740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5239390Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5239890Z         try:
2025-02-24T16:12:46.5240440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5241130Z         except KeyError:
2025-02-24T16:12:46.5241740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5244110Z     
2025-02-24T16:12:46.5244340Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5244580Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5244830Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5245660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5245940Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5246160Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5246460Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5246680Z             else:
2025-02-24T16:12:46.5246850Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5247090Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5247250Z 
2025-02-24T16:12:46.5247360Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5247640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5248350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5248600Z     ???
2025-02-24T16:12:46.5248780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5249290Z 
2025-02-24T16:12:46.5249340Z >   ???
2025-02-24T16:12:46.5249530Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5249770Z E   
2025-02-24T16:12:46.5249960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5250240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5250460Z E          ...
2025-02-24T16:12:46.5250620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5250880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5251160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5251380Z E          ...
2025-02-24T16:12:46.5251540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5251800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5252070Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5252230Z 
2025-02-24T16:12:46.5252300Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5253180Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T16:12:46.5253430Z 
2025-02-24T16:12:46.5253550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5253870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5254150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5254490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5255000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5255360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5255660Z err_msg = None
2025-02-24T16:12:46.5255750Z 
2025-02-24T16:12:46.5255860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5256090Z         if err_msg is None:
2025-02-24T16:12:46.5256290Z             if left.shape != right.shape:
2025-02-24T16:12:46.5256560Z                 raise_assert_detail(
2025-02-24T16:12:46.5256830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5257100Z                 )
2025-02-24T16:12:46.5257240Z     
2025-02-24T16:12:46.5257370Z             diff = 0
2025-02-24T16:12:46.5257650Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5257940Z                 # count up differences
2025-02-24T16:12:46.5258260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5258620Z                     diff += 1
2025-02-24T16:12:46.5258820Z     
2025-02-24T16:12:46.5259010Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5259290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5259670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5260100Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5260410Z E           
2025-02-24T16:12:46.5260630Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5261050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5261780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5262400Z 
2025-02-24T16:12:46.5262670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5263000Z 
2025-02-24T16:12:46.5263140Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5263370Z 
2025-02-24T16:12:46.5263550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d90c50>
2025-02-24T16:12:46.5263940Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>
2025-02-24T16:12:46.5264200Z attr = 'beta_sobolev'
2025-02-24T16:12:46.5264310Z 
2025-02-24T16:12:46.5264430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5264880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5265110Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5265300Z         try:
2025-02-24T16:12:46.5265500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5265750Z         except KeyError:
2025-02-24T16:12:46.5265990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5266230Z     
2025-02-24T16:12:46.5266380Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5266660Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5277620Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5278600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5279620Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5279870Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5280110Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5280330Z             else:
2025-02-24T16:12:46.5280510Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5280890Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5281080Z 
2025-02-24T16:12:46.5281200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5281480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5281790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5282040Z     ???
2025-02-24T16:12:46.5282400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5282580Z 
2025-02-24T16:12:46.5282630Z >   ???
2025-02-24T16:12:46.5282820Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5283040Z E   
2025-02-24T16:12:46.5283230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5283610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5283970Z E          ...
2025-02-24T16:12:46.5284150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5284420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5284710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5284930Z E          ...
2025-02-24T16:12:46.5285100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5285360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5285620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5285780Z 
2025-02-24T16:12:46.5285850Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5286150Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T16:12:46.5286530Z 
2025-02-24T16:12:46.5286670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5286980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5287260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5287940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5288320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5288760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5288980Z err_msg = None
2025-02-24T16:12:46.5289080Z 
2025-02-24T16:12:46.5289180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5289520Z         if err_msg is None:
2025-02-24T16:12:46.5289720Z             if left.shape != right.shape:
2025-02-24T16:12:46.5289940Z                 raise_assert_detail(
2025-02-24T16:12:46.5290200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5290450Z                 )
2025-02-24T16:12:46.5291440Z     
2025-02-24T16:12:46.5291610Z             diff = 0
2025-02-24T16:12:46.5291810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5292040Z                 # count up differences
2025-02-24T16:12:46.5292330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5292620Z                     diff += 1
2025-02-24T16:12:46.5292790Z     
2025-02-24T16:12:46.5292940Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5293200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5293530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5293850Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5294070Z E           
2025-02-24T16:12:46.5294250Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5294640Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5295180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5295480Z 
2025-02-24T16:12:46.5295740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5296070Z 
2025-02-24T16:12:46.5296220Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5296430Z 
2025-02-24T16:12:46.5296610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d922a0>
2025-02-24T16:12:46.5297040Z plasma = <tardis.plasma.base.BasePlasma object at 0x13cc5a5d0>, attr = 'j_blues'
2025-02-24T16:12:46.5297280Z 
2025-02-24T16:12:46.5297400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5297680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5297920Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5298100Z         try:
2025-02-24T16:12:46.5298310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5300430Z         except KeyError:
2025-02-24T16:12:46.5302630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5302900Z     
2025-02-24T16:12:46.5303050Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5303250Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5303460Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5303720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5303970Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5304180Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5304410Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5304880Z             else:
2025-02-24T16:12:46.5305050Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5305290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5305560Z 
2025-02-24T16:12:46.5305670Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5305940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5306240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5306480Z     ???
2025-02-24T16:12:46.5306650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5306820Z 
2025-02-24T16:12:46.5306870Z >   ???
2025-02-24T16:12:46.5307060Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5307280Z E   
2025-02-24T16:12:46.5307450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5307730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5309330Z E          ...
2025-02-24T16:12:46.5309850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5310550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5311340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5311580Z E          ...
2025-02-24T16:12:46.5311750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5312000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5312270Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5312430Z 
2025-02-24T16:12:46.5312500Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5312790Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T16:12:46.5313030Z 
2025-02-24T16:12:46.5313140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5313440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5313720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5314010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5314310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5314630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5314850Z err_msg = None
2025-02-24T16:12:46.5314960Z 
2025-02-24T16:12:46.5315050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5315270Z         if err_msg is None:
2025-02-24T16:12:46.5315470Z             if left.shape != right.shape:
2025-02-24T16:12:46.5315710Z                 raise_assert_detail(
2025-02-24T16:12:46.5315970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5316320Z                 )
2025-02-24T16:12:46.5316470Z     
2025-02-24T16:12:46.5316600Z             diff = 0
2025-02-24T16:12:46.5316790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5317030Z                 # count up differences
2025-02-24T16:12:46.5317320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5317600Z                     diff += 1
2025-02-24T16:12:46.5317770Z     
2025-02-24T16:12:46.5317920Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5318190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5318590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5319160Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5319410Z E           
2025-02-24T16:12:46.5319590Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5320030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5321360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5321710Z 
2025-02-24T16:12:46.5321960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5322340Z 
2025-02-24T16:12:46.5322490Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5322750Z 
2025-02-24T16:12:46.5322930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d93ef0>
2025-02-24T16:12:46.5323420Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>, attr = 'lines'
2025-02-24T16:12:46.5323660Z 
2025-02-24T16:12:46.5323850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5324130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5324410Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5324590Z         try:
2025-02-24T16:12:46.5324860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5325170Z         except KeyError:
2025-02-24T16:12:46.5325400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5325690Z     
2025-02-24T16:12:46.5325840Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5326040Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5326310Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5326570Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5326880Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5327080Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5327370Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5327780Z             else:
2025-02-24T16:12:46.5327960Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5328330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5328490Z 
2025-02-24T16:12:46.5328600Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5328870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5329160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5329400Z     ???
2025-02-24T16:12:46.5329570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5329740Z 
2025-02-24T16:12:46.5329800Z >   ???
2025-02-24T16:12:46.5329980Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5330210Z E   
2025-02-24T16:12:46.5330390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5330660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5330890Z E          ...
2025-02-24T16:12:46.5331120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5331380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5331660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5331890Z E          ...
2025-02-24T16:12:46.5332050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5332370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5332640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5332790Z 
2025-02-24T16:12:46.5332870Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5333230Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T16:12:46.5334070Z 
2025-02-24T16:12:46.5334290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d938c0>
2025-02-24T16:12:46.5334680Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>
2025-02-24T16:12:46.5335140Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5335270Z 
2025-02-24T16:12:46.5335390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5335760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5336400Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5337410Z         try:
2025-02-24T16:12:46.5338590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5339310Z         except KeyError:
2025-02-24T16:12:46.5340070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5340370Z     
2025-02-24T16:12:46.5340510Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5340720Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5340940Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5341200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5341460Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5341670Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5341900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5342060Z 
2025-02-24T16:12:46.5342170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5342440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5342610Z 
2025-02-24T16:12:46.5342740Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5343000Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5343240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5343470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5343740Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5344010Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5344250Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5344480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5344680Z err_msg = None
2025-02-24T16:12:46.5344770Z 
2025-02-24T16:12:46.5344870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5345090Z         if err_msg is None:
2025-02-24T16:12:46.5345290Z             if left.shape != right.shape:
2025-02-24T16:12:46.5345500Z                 raise_assert_detail(
2025-02-24T16:12:46.5345760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5346010Z                 )
2025-02-24T16:12:46.5346150Z     
2025-02-24T16:12:46.5346280Z             diff = 0
2025-02-24T16:12:46.5346470Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5346710Z                 # count up differences
2025-02-24T16:12:46.5346990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5348590Z                     diff += 1
2025-02-24T16:12:46.5349150Z     
2025-02-24T16:12:46.5349560Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5350440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5351350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5352500Z E           AssertionError: Series are different
2025-02-24T16:12:46.5353140Z E           
2025-02-24T16:12:46.5353610Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5354920Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5358320Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5360170Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5361400Z 
2025-02-24T16:12:46.5361740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5362240Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T16:12:46.5362490Z 
2025-02-24T16:12:46.5362680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d93b90>
2025-02-24T16:12:46.5363060Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>
2025-02-24T16:12:46.5363330Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5363590Z 
2025-02-24T16:12:46.5363730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5364090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5364350Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5364680Z         try:
2025-02-24T16:12:46.5364900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5365180Z         except KeyError:
2025-02-24T16:12:46.5365420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5365740Z     
2025-02-24T16:12:46.5365990Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5366300Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5366550Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5366850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5367180Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5367420Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5367730Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5367910Z 
2025-02-24T16:12:46.5368020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5379870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5380300Z 
2025-02-24T16:12:46.5380490Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5380790Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5381100Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5381390Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5381660Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5381920Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5382160Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5382390Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5382580Z err_msg = None
2025-02-24T16:12:46.5382670Z 
2025-02-24T16:12:46.5382760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5382990Z         if err_msg is None:
2025-02-24T16:12:46.5383180Z             if left.shape != right.shape:
2025-02-24T16:12:46.5383390Z                 raise_assert_detail(
2025-02-24T16:12:46.5383640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5384120Z                 )
2025-02-24T16:12:46.5384270Z     
2025-02-24T16:12:46.5384400Z             diff = 0
2025-02-24T16:12:46.5384600Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5384960Z                 # count up differences
2025-02-24T16:12:46.5385240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5385520Z                     diff += 1
2025-02-24T16:12:46.5385690Z     
2025-02-24T16:12:46.5385840Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5386110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5386440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5386740Z E           AssertionError: Series are different
2025-02-24T16:12:46.5386950Z E           
2025-02-24T16:12:46.5387130Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.5387630Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5388400Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5389120Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5389530Z 
2025-02-24T16:12:46.5389790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5390270Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T16:12:46.5390500Z 
2025-02-24T16:12:46.5390610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5390910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5391180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5391450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5391760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5392020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5392240Z err_msg = None
2025-02-24T16:12:46.5392330Z 
2025-02-24T16:12:46.5392420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5392640Z         if err_msg is None:
2025-02-24T16:12:46.5392840Z             if left.shape != right.shape:
2025-02-24T16:12:46.5393050Z                 raise_assert_detail(
2025-02-24T16:12:46.5393310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5393560Z                 )
2025-02-24T16:12:46.5393700Z     
2025-02-24T16:12:46.5393820Z             diff = 0
2025-02-24T16:12:46.5394020Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5394250Z                 # count up differences
2025-02-24T16:12:46.5394530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5395150Z                     diff += 1
2025-02-24T16:12:46.5395320Z     
2025-02-24T16:12:46.5395470Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5395840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5396180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5396490Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5396710Z E           
2025-02-24T16:12:46.5396890Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5397270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5397800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5398090Z 
2025-02-24T16:12:46.5398350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5398660Z 
2025-02-24T16:12:46.5398810Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5399020Z 
2025-02-24T16:12:46.5399200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d92360>
2025-02-24T16:12:46.5399610Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>, attr = 'nu'
2025-02-24T16:12:46.5399850Z 
2025-02-24T16:12:46.5399960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5400250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5400480Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5400660Z         try:
2025-02-24T16:12:46.5400860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5401110Z         except KeyError:
2025-02-24T16:12:46.5401330Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5401610Z     
2025-02-24T16:12:46.5401760Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5401960Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5402180Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5402430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5402680Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5403220Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5403510Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5403690Z 
2025-02-24T16:12:46.5403810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5404090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5404400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5404650Z     ???
2025-02-24T16:12:46.5404830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5405010Z 
2025-02-24T16:12:46.5405060Z >   ???
2025-02-24T16:12:46.5405250Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5405470Z E   
2025-02-24T16:12:46.5405660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5405940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5406160Z E          ...
2025-02-24T16:12:46.5406330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5406590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5406870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5407440Z E          ...
2025-02-24T16:12:46.5407680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5408110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5408390Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5408550Z 
2025-02-24T16:12:46.5408640Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5408950Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T16:12:46.5409190Z 
2025-02-24T16:12:46.5409310Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5409610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5409880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5410150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5410590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5410870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5411090Z err_msg = None
2025-02-24T16:12:46.5411180Z 
2025-02-24T16:12:46.5411270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5411490Z         if err_msg is None:
2025-02-24T16:12:46.5411690Z             if left.shape != right.shape:
2025-02-24T16:12:46.5411900Z                 raise_assert_detail(
2025-02-24T16:12:46.5412150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5412410Z                 )
2025-02-24T16:12:46.5412550Z     
2025-02-24T16:12:46.5412680Z             diff = 0
2025-02-24T16:12:46.5412870Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5413110Z                 # count up differences
2025-02-24T16:12:46.5413520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5413600Z                     diff += 1
2025-02-24T16:12:46.5413650Z     
2025-02-24T16:12:46.5413730Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5413850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5414000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5414100Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5414150Z E           
2025-02-24T16:12:46.5414250Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5414490Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5414730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5414750Z 
2025-02-24T16:12:46.5415010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5415020Z 
2025-02-24T16:12:46.5415170Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5415170Z 
2025-02-24T16:12:46.5415350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d91340>
2025-02-24T16:12:46.5415490Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>
2025-02-24T16:12:46.5415550Z attr = 'wavelength_cm'
2025-02-24T16:12:46.5415550Z 
2025-02-24T16:12:46.5415670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5415920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5416080Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5416170Z         try:
2025-02-24T16:12:46.5416430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5416500Z         except KeyError:
2025-02-24T16:12:46.5416620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5416670Z     
2025-02-24T16:12:46.5416740Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5416830Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5416900Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5417030Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5417100Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5417170Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5417270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5417280Z 
2025-02-24T16:12:46.5417390Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5417500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5417630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5417680Z     ???
2025-02-24T16:12:46.5417790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5417790Z 
2025-02-24T16:12:46.5417840Z >   ???
2025-02-24T16:12:46.5417950Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5418000Z E   
2025-02-24T16:12:46.5418120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5418220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5418270Z E          ...
2025-02-24T16:12:46.5418350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5418460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5418570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5418620Z E          ...
2025-02-24T16:12:46.5418700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5418810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5418900Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5418900Z 
2025-02-24T16:12:46.5418980Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5419480Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T16:12:46.5419490Z 
2025-02-24T16:12:46.5419620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5419830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5419920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5420040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5420160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5420250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5420320Z err_msg = None
2025-02-24T16:12:46.5420320Z 
2025-02-24T16:12:46.5420410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5420480Z         if err_msg is None:
2025-02-24T16:12:46.5420560Z             if left.shape != right.shape:
2025-02-24T16:12:46.5420630Z                 raise_assert_detail(
2025-02-24T16:12:46.5420760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5420820Z                 )
2025-02-24T16:12:46.5420870Z     
2025-02-24T16:12:46.5420930Z             diff = 0
2025-02-24T16:12:46.5421030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5421100Z                 # count up differences
2025-02-24T16:12:46.5421250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5421420Z                     diff += 1
2025-02-24T16:12:46.5421480Z     
2025-02-24T16:12:46.5421620Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5421740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5421890Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5421980Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5422050Z E           
2025-02-24T16:12:46.5422140Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5422360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5422600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5422600Z 
2025-02-24T16:12:46.5422860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5422870Z 
2025-02-24T16:12:46.5423010Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5423020Z 
2025-02-24T16:12:46.5423200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d91640>
2025-02-24T16:12:46.5423370Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>, attr = 'f_lu'
2025-02-24T16:12:46.5423370Z 
2025-02-24T16:12:46.5423490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5423590Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5423660Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5423720Z         try:
2025-02-24T16:12:46.5423840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5423910Z         except KeyError:
2025-02-24T16:12:46.5424030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5424080Z     
2025-02-24T16:12:46.5424150Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5424230Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5424300Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5424420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5424490Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5424570Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5424660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5424670Z 
2025-02-24T16:12:46.5424770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5424870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5425010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5425060Z     ???
2025-02-24T16:12:46.5425160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5425160Z 
2025-02-24T16:12:46.5425210Z >   ???
2025-02-24T16:12:46.5425320Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5425370Z E   
2025-02-24T16:12:46.5425540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5425640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5425700Z E          ...
2025-02-24T16:12:46.5425770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5425890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5425980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5426480Z E          ...
2025-02-24T16:12:46.5426570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5426820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5426920Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5426920Z 
2025-02-24T16:12:46.5426990Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5427630Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T16:12:46.5427640Z 
2025-02-24T16:12:46.5427820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5427940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5428030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5428150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5428270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5428350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5428420Z err_msg = None
2025-02-24T16:12:46.5428420Z 
2025-02-24T16:12:46.5428520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5428580Z         if err_msg is None:
2025-02-24T16:12:46.5428660Z             if left.shape != right.shape:
2025-02-24T16:12:46.5428720Z                 raise_assert_detail(
2025-02-24T16:12:46.5428850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5428910Z                 )
2025-02-24T16:12:46.5428960Z     
2025-02-24T16:12:46.5429010Z             diff = 0
2025-02-24T16:12:46.5429350Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5429660Z                 # count up differences
2025-02-24T16:12:46.5429820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5429890Z                     diff += 1
2025-02-24T16:12:46.5429950Z     
2025-02-24T16:12:46.5430020Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5430150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5430300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5430400Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5430450Z E           
2025-02-24T16:12:46.5430550Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5430780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5431020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5431020Z 
2025-02-24T16:12:46.5431290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5431300Z 
2025-02-24T16:12:46.5431450Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5431450Z 
2025-02-24T16:12:46.5431640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119d913d0>
2025-02-24T16:12:46.5431780Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>
2025-02-24T16:12:46.5431840Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.5431850Z 
2025-02-24T16:12:46.5431970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5432210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5432280Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5432340Z         try:
2025-02-24T16:12:46.5432530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5432590Z         except KeyError:
2025-02-24T16:12:46.5432710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5435720Z     
2025-02-24T16:12:46.5435830Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5435910Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5435990Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5436560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5437040Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5437270Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5437530Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5437710Z             else:
2025-02-24T16:12:46.5437950Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5438210Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5438230Z 
2025-02-24T16:12:46.5438520Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5438790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5439120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5439290Z     ???
2025-02-24T16:12:46.5439560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5439570Z 
2025-02-24T16:12:46.5439720Z >   ???
2025-02-24T16:12:46.5440010Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5440170Z E   
2025-02-24T16:12:46.5440470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5441240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5441420Z E          ...
2025-02-24T16:12:46.5441630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5441920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5442320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5442590Z E          ...
2025-02-24T16:12:46.5442880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5443330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5443570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5443580Z 
2025-02-24T16:12:46.5443790Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5444380Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T16:12:46.5444390Z 
2025-02-24T16:12:46.5444700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5445010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5445340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5445660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5446270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5446550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5446730Z err_msg = None
2025-02-24T16:12:46.5446850Z 
2025-02-24T16:12:46.5447110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5447580Z         if err_msg is None:
2025-02-24T16:12:46.5448080Z             if left.shape != right.shape:
2025-02-24T16:12:46.5448600Z                 raise_assert_detail(
2025-02-24T16:12:46.5449180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5449360Z                 )
2025-02-24T16:12:46.5449530Z     
2025-02-24T16:12:46.5449780Z             diff = 0
2025-02-24T16:12:46.5451970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5452190Z                 # count up differences
2025-02-24T16:12:46.5452890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5453090Z                     diff += 1
2025-02-24T16:12:46.5453250Z     
2025-02-24T16:12:46.5453710Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5454340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5455010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5455270Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5455440Z E           
2025-02-24T16:12:46.5455700Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5456330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5456970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5456980Z 
2025-02-24T16:12:46.5457670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5457690Z 
2025-02-24T16:12:46.5458060Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5458070Z 
2025-02-24T16:12:46.5458550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x11983acc0>
2025-02-24T16:12:46.5458900Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>
2025-02-24T16:12:46.5459090Z attr = 'beta_sobolev'
2025-02-24T16:12:46.5459100Z 
2025-02-24T16:12:46.5459420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5459690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5459880Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5460050Z         try:
2025-02-24T16:12:46.5460370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5460550Z         except KeyError:
2025-02-24T16:12:46.5461000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5461190Z     
2025-02-24T16:12:46.5461410Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5461660Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5461860Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5462190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5462840Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5529460Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5530040Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5530140Z             else:
2025-02-24T16:12:46.5530230Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5530330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5530330Z 
2025-02-24T16:12:46.5530440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5530560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5530680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5530740Z     ???
2025-02-24T16:12:46.5531220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5531330Z 
2025-02-24T16:12:46.5531670Z >   ???
2025-02-24T16:12:46.5532000Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5533080Z E   
2025-02-24T16:12:46.5533380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5533640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5534660Z E          ...
2025-02-24T16:12:46.5535140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5535600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5535960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5536630Z E          ...
2025-02-24T16:12:46.5537040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5537680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5537960Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5537980Z 
2025-02-24T16:12:46.5538380Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5538920Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T16:12:46.5538940Z 
2025-02-24T16:12:46.5539250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5539680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5539930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5540350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5540860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5541100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5541800Z err_msg = None
2025-02-24T16:12:46.5541830Z 
2025-02-24T16:12:46.5542110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5542550Z         if err_msg is None:
2025-02-24T16:12:46.5542790Z             if left.shape != right.shape:
2025-02-24T16:12:46.5543250Z                 raise_assert_detail(
2025-02-24T16:12:46.5543910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5545520Z                 )
2025-02-24T16:12:46.5545960Z     
2025-02-24T16:12:46.5546140Z             diff = 0
2025-02-24T16:12:46.5546790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5547270Z                 # count up differences
2025-02-24T16:12:46.5547480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5547540Z                     diff += 1
2025-02-24T16:12:46.5547590Z     
2025-02-24T16:12:46.5547670Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5547790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5547940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5548040Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5548210Z E           
2025-02-24T16:12:46.5548320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5548610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5548960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5548960Z 
2025-02-24T16:12:46.5549230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5549230Z 
2025-02-24T16:12:46.5549380Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5549870Z 
2025-02-24T16:12:46.5550070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b777a0>
2025-02-24T16:12:46.5550800Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b1fb6b0>, attr = 'j_blues'
2025-02-24T16:12:46.5550830Z 
2025-02-24T16:12:46.5550960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5551070Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5551140Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5551190Z         try:
2025-02-24T16:12:46.5551320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5551520Z         except KeyError:
2025-02-24T16:12:46.5551640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5551760Z     
2025-02-24T16:12:46.5551830Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5551910Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5551990Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5552110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5552190Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5552270Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5552360Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5552420Z             else:
2025-02-24T16:12:46.5552490Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5552700Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5552700Z 
2025-02-24T16:12:46.5552810Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5552920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5553040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5553100Z     ???
2025-02-24T16:12:46.5553190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5553200Z 
2025-02-24T16:12:46.5553250Z >   ???
2025-02-24T16:12:46.5553380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5553440Z E   
2025-02-24T16:12:46.5553550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5553670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5553730Z E          ...
2025-02-24T16:12:46.5553810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5553920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5554020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5554070Z E          ...
2025-02-24T16:12:46.5554140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5554250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5554330Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5554340Z 
2025-02-24T16:12:46.5554410Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5554770Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T16:12:46.5554770Z 
2025-02-24T16:12:46.5556470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5557260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5558720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5559090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5559380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5559600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5559780Z err_msg = None
2025-02-24T16:12:46.5559790Z 
2025-02-24T16:12:46.5560050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5560630Z         if err_msg is None:
2025-02-24T16:12:46.5560950Z             if left.shape != right.shape:
2025-02-24T16:12:46.5561070Z                 raise_assert_detail(
2025-02-24T16:12:46.5561450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5561510Z                 )
2025-02-24T16:12:46.5561570Z     
2025-02-24T16:12:46.5561620Z             diff = 0
2025-02-24T16:12:46.5561730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5561800Z                 # count up differences
2025-02-24T16:12:46.5561960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5562020Z                     diff += 1
2025-02-24T16:12:46.5562070Z     
2025-02-24T16:12:46.5562150Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5562260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5562410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5562510Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5562570Z E           
2025-02-24T16:12:46.5562670Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5562900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5563130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5563130Z 
2025-02-24T16:12:46.5563400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5563410Z 
2025-02-24T16:12:46.5563560Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5563560Z 
2025-02-24T16:12:46.5563750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b77650>
2025-02-24T16:12:46.5563920Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>, attr = 'lines'
2025-02-24T16:12:46.5563920Z 
2025-02-24T16:12:46.5564040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5564140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5564200Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5564260Z         try:
2025-02-24T16:12:46.5564380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5564440Z         except KeyError:
2025-02-24T16:12:46.5564560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5564610Z     
2025-02-24T16:12:46.5564690Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5564760Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5564840Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5564960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5565030Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5565100Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5565190Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5565250Z             else:
2025-02-24T16:12:46.5565320Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5565420Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5565420Z 
2025-02-24T16:12:46.5565540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5565650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5566310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5566360Z     ???
2025-02-24T16:12:46.5566460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5566540Z 
2025-02-24T16:12:46.5566600Z >   ???
2025-02-24T16:12:46.5566700Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5566760Z E   
2025-02-24T16:12:46.5566860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5566960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5567010Z E          ...
2025-02-24T16:12:46.5567090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5567190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5567290Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5567340Z E          ...
2025-02-24T16:12:46.5567410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5567530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5567610Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5567620Z 
2025-02-24T16:12:46.5567690Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5567870Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T16:12:46.5567870Z 
2025-02-24T16:12:46.5568050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74ce0>
2025-02-24T16:12:46.5568190Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>
2025-02-24T16:12:46.5568260Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5568270Z 
2025-02-24T16:12:46.5568380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5568480Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5568540Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5568600Z         try:
2025-02-24T16:12:46.5568720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5568790Z         except KeyError:
2025-02-24T16:12:46.5568910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5568960Z     
2025-02-24T16:12:46.5569030Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5569110Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5569180Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5569290Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5569360Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5569440Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5569530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5569530Z 
2025-02-24T16:12:46.5569640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5569740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5569740Z 
2025-02-24T16:12:46.5569860Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5569940Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5570030Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5570110Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5570230Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5570300Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5570390Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5570460Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5570520Z err_msg = None
2025-02-24T16:12:46.5570520Z 
2025-02-24T16:12:46.5570620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5570680Z         if err_msg is None:
2025-02-24T16:12:46.5570750Z             if left.shape != right.shape:
2025-02-24T16:12:46.5570820Z                 raise_assert_detail(
2025-02-24T16:12:46.5571020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5571070Z                 )
2025-02-24T16:12:46.5572270Z     
2025-02-24T16:12:46.5572510Z             diff = 0
2025-02-24T16:12:46.5572790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5572990Z                 # count up differences
2025-02-24T16:12:46.5573390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5573640Z                     diff += 1
2025-02-24T16:12:46.5573930Z     
2025-02-24T16:12:46.5574050Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5574170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5574320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5574400Z E           AssertionError: Series are different
2025-02-24T16:12:46.5574460Z E           
2025-02-24T16:12:46.5574550Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5574880Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5575170Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5575450Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5575460Z 
2025-02-24T16:12:46.5575730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5575900Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T16:12:46.5575910Z 
2025-02-24T16:12:46.5576090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b77170>
2025-02-24T16:12:46.5576220Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>
2025-02-24T16:12:46.5576300Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5576300Z 
2025-02-24T16:12:46.5576410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5576510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5576580Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5576630Z         try:
2025-02-24T16:12:46.5576760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5576820Z         except KeyError:
2025-02-24T16:12:46.5576940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5576990Z     
2025-02-24T16:12:46.5577060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5577140Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5577210Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5577320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5577390Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5577460Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5577550Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5577560Z 
2025-02-24T16:12:46.5577870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5577970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5578080Z 
2025-02-24T16:12:46.5578200Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5578270Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5578370Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5578430Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5578550Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5578620Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5578720Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5578780Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5578840Z err_msg = None
2025-02-24T16:12:46.5578840Z 
2025-02-24T16:12:46.5578930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5579010Z         if err_msg is None:
2025-02-24T16:12:46.5579090Z             if left.shape != right.shape:
2025-02-24T16:12:46.5579150Z                 raise_assert_detail(
2025-02-24T16:12:46.5579280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5579340Z                 )
2025-02-24T16:12:46.5579390Z     
2025-02-24T16:12:46.5579440Z             diff = 0
2025-02-24T16:12:46.5579540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5579610Z                 # count up differences
2025-02-24T16:12:46.5579760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5579820Z                     diff += 1
2025-02-24T16:12:46.5580320Z     
2025-02-24T16:12:46.5580630Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5580950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5581370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5581610Z E           AssertionError: Series are different
2025-02-24T16:12:46.5581790Z E           
2025-02-24T16:12:46.5582050Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.5583120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5584050Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5584970Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5584980Z 
2025-02-24T16:12:46.5586530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5586740Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T16:12:46.5586750Z 
2025-02-24T16:12:46.5586870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5587250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5587450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5587580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5587690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5588340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5588400Z err_msg = None
2025-02-24T16:12:46.5588410Z 
2025-02-24T16:12:46.5588500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5588570Z         if err_msg is None:
2025-02-24T16:12:46.5588640Z             if left.shape != right.shape:
2025-02-24T16:12:46.5588720Z                 raise_assert_detail(
2025-02-24T16:12:46.5589130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5589260Z                 )
2025-02-24T16:12:46.5589310Z     
2025-02-24T16:12:46.5589370Z             diff = 0
2025-02-24T16:12:46.5589470Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5589540Z                 # count up differences
2025-02-24T16:12:46.5589740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5589800Z                     diff += 1
2025-02-24T16:12:46.5589850Z     
2025-02-24T16:12:46.5589980Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5590110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5590260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5590350Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5590410Z E           
2025-02-24T16:12:46.5590510Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5590740Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5590970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5590970Z 
2025-02-24T16:12:46.5591280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5591290Z 
2025-02-24T16:12:46.5591440Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5591440Z 
2025-02-24T16:12:46.5591630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b77e30>
2025-02-24T16:12:46.5591790Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>, attr = 'nu'
2025-02-24T16:12:46.5591800Z 
2025-02-24T16:12:46.5591920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5592020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5592080Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5592140Z         try:
2025-02-24T16:12:46.5592260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5592330Z         except KeyError:
2025-02-24T16:12:46.5592500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5592550Z     
2025-02-24T16:12:46.5592630Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5592710Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5592780Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5593010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5593090Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5593160Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5593320Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5593330Z 
2025-02-24T16:12:46.5593430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5594010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5594160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5594210Z     ???
2025-02-24T16:12:46.5594320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5594320Z 
2025-02-24T16:12:46.5594380Z >   ???
2025-02-24T16:12:46.5594540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5594590Z E   
2025-02-24T16:12:46.5594700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5594810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5594860Z E          ...
2025-02-24T16:12:46.5594940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5595050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5595150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5595200Z E          ...
2025-02-24T16:12:46.5595280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5595390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5595470Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5595480Z 
2025-02-24T16:12:46.5595550Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5595720Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T16:12:46.5595730Z 
2025-02-24T16:12:46.5595840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5595960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5596040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5596160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5596280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5596360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5596420Z err_msg = None
2025-02-24T16:12:46.5596420Z 
2025-02-24T16:12:46.5596520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5596590Z         if err_msg is None:
2025-02-24T16:12:46.5596670Z             if left.shape != right.shape:
2025-02-24T16:12:46.5596730Z                 raise_assert_detail(
2025-02-24T16:12:46.5596860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5596910Z                 )
2025-02-24T16:12:46.5597030Z     
2025-02-24T16:12:46.5597190Z             diff = 0
2025-02-24T16:12:46.5597340Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5597430Z                 # count up differences
2025-02-24T16:12:46.5597580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5597660Z                     diff += 1
2025-02-24T16:12:46.5597710Z     
2025-02-24T16:12:46.5597790Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5597900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5598050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5598150Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5598200Z E           
2025-02-24T16:12:46.5598300Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5598690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5599000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5599010Z 
2025-02-24T16:12:46.5599350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5599350Z 
2025-02-24T16:12:46.5599490Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5599500Z 
2025-02-24T16:12:46.5599690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b77ec0>
2025-02-24T16:12:46.5599830Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>
2025-02-24T16:12:46.5599890Z attr = 'wavelength_cm'
2025-02-24T16:12:46.5599900Z 
2025-02-24T16:12:46.5600020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5600220Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5600320Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5600440Z         try:
2025-02-24T16:12:46.5600560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5600630Z         except KeyError:
2025-02-24T16:12:46.5600750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5600800Z     
2025-02-24T16:12:46.5600880Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5600960Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5601040Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5601210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5601280Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5601350Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5601450Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5601460Z 
2025-02-24T16:12:46.5601560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5601660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5601780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5601830Z     ???
2025-02-24T16:12:46.5601940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5601940Z 
2025-02-24T16:12:46.5601990Z >   ???
2025-02-24T16:12:46.5602100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5602150Z E   
2025-02-24T16:12:46.5602260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5602360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5602420Z E          ...
2025-02-24T16:12:46.5602500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5602610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5602700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5602750Z E          ...
2025-02-24T16:12:46.5602830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5602940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5603020Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5603020Z 
2025-02-24T16:12:46.5603200Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5603460Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T16:12:46.5603470Z 
2025-02-24T16:12:46.5603580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5604160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5604440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5604560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5604670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5604760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5604810Z err_msg = None
2025-02-24T16:12:46.5604820Z 
2025-02-24T16:12:46.5604910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5605040Z         if err_msg is None:
2025-02-24T16:12:46.5605120Z             if left.shape != right.shape:
2025-02-24T16:12:46.5605190Z                 raise_assert_detail(
2025-02-24T16:12:46.5605310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5605360Z                 )
2025-02-24T16:12:46.5605420Z     
2025-02-24T16:12:46.5605470Z             diff = 0
2025-02-24T16:12:46.5605580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5605650Z                 # count up differences
2025-02-24T16:12:46.5605800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5605950Z                     diff += 1
2025-02-24T16:12:46.5606030Z     
2025-02-24T16:12:46.5606120Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5606240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5606390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5606490Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5606540Z E           
2025-02-24T16:12:46.5606710Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5606940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5607170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5607170Z 
2025-02-24T16:12:46.5607430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5607440Z 
2025-02-24T16:12:46.5607580Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5607590Z 
2025-02-24T16:12:46.5607780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b766f0>
2025-02-24T16:12:46.5607950Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>, attr = 'f_lu'
2025-02-24T16:12:46.5607960Z 
2025-02-24T16:12:46.5608070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5608170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5608240Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5608290Z         try:
2025-02-24T16:12:46.5608420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5608940Z         except KeyError:
2025-02-24T16:12:46.5609090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5609150Z     
2025-02-24T16:12:46.5609220Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5609300Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5609380Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5609620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5609700Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5620020Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5620500Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5620500Z 
2025-02-24T16:12:46.5620610Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5620710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5620830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5620880Z     ???
2025-02-24T16:12:46.5620980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5620990Z 
2025-02-24T16:12:46.5621040Z >   ???
2025-02-24T16:12:46.5621150Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5621200Z E   
2025-02-24T16:12:46.5621310Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5621410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5621470Z E          ...
2025-02-24T16:12:46.5621540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5621650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5621760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5621810Z E          ...
2025-02-24T16:12:46.5621890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5622000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5622080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5622080Z 
2025-02-24T16:12:46.5622160Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5622320Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T16:12:46.5622330Z 
2025-02-24T16:12:46.5622450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5622570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5622650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5622780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5622890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5622980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5623030Z err_msg = None
2025-02-24T16:12:46.5623030Z 
2025-02-24T16:12:46.5623130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5623190Z         if err_msg is None:
2025-02-24T16:12:46.5624250Z             if left.shape != right.shape:
2025-02-24T16:12:46.5624600Z                 raise_assert_detail(
2025-02-24T16:12:46.5624950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5625160Z                 )
2025-02-24T16:12:46.5625320Z     
2025-02-24T16:12:46.5625480Z             diff = 0
2025-02-24T16:12:46.5625740Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5626170Z                 # count up differences
2025-02-24T16:12:46.5626580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5626760Z                     diff += 1
2025-02-24T16:12:46.5626930Z     
2025-02-24T16:12:46.5627140Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5627440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5627840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5628150Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5628450Z E           
2025-02-24T16:12:46.5628700Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5630000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5631770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5631780Z 
2025-02-24T16:12:46.5632990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5633020Z 
2025-02-24T16:12:46.5633180Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5633190Z 
2025-02-24T16:12:46.5633390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74650>
2025-02-24T16:12:46.5633680Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>
2025-02-24T16:12:46.5633760Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.5633760Z 
2025-02-24T16:12:46.5633890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5633980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5634740Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5635690Z         try:
2025-02-24T16:12:46.5636030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5636210Z         except KeyError:
2025-02-24T16:12:46.5636870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5636970Z     
2025-02-24T16:12:46.5637040Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5637120Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5637200Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5637400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5637620Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5637710Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5637810Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5637860Z             else:
2025-02-24T16:12:46.5638620Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5639630Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5639650Z 
2025-02-24T16:12:46.5639940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5640210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5640540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5640710Z     ???
2025-02-24T16:12:46.5640960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5640980Z 
2025-02-24T16:12:46.5641150Z >   ???
2025-02-24T16:12:46.5641440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5641600Z E   
2025-02-24T16:12:46.5641920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5642170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5642340Z E          ...
2025-02-24T16:12:46.5642530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5643040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5643420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5643600Z E          ...
2025-02-24T16:12:46.5643810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5644800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5645050Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5645060Z 
2025-02-24T16:12:46.5645270Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5646110Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T16:12:46.5646120Z 
2025-02-24T16:12:46.5646580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5647100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5647320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5647620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5647910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5648130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5648300Z err_msg = None
2025-02-24T16:12:46.5648310Z 
2025-02-24T16:12:46.5648640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5648970Z         if err_msg is None:
2025-02-24T16:12:46.5649200Z             if left.shape != right.shape:
2025-02-24T16:12:46.5649380Z                 raise_assert_detail(
2025-02-24T16:12:46.5649720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5649890Z                 )
2025-02-24T16:12:46.5650050Z     
2025-02-24T16:12:46.5650220Z             diff = 0
2025-02-24T16:12:46.5650470Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5650670Z                 # count up differences
2025-02-24T16:12:46.5651050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5651240Z                     diff += 1
2025-02-24T16:12:46.5651400Z     
2025-02-24T16:12:46.5651590Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5651900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5652280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5652550Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5652710Z E           
2025-02-24T16:12:46.5652970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5654900Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5656050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5656130Z 
2025-02-24T16:12:46.5656450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5656470Z 
2025-02-24T16:12:46.5656620Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5656640Z 
2025-02-24T16:12:46.5656900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b754f0>
2025-02-24T16:12:46.5657030Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>
2025-02-24T16:12:46.5657090Z attr = 'beta_sobolev'
2025-02-24T16:12:46.5657100Z 
2025-02-24T16:12:46.5657220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5657320Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5657380Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5657440Z         try:
2025-02-24T16:12:46.5657560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5657630Z         except KeyError:
2025-02-24T16:12:46.5657750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5658040Z     
2025-02-24T16:12:46.5658120Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5658190Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5658390Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5658510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5658580Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5658660Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5658750Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5658800Z             else:
2025-02-24T16:12:46.5658880Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5658970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5658970Z 
2025-02-24T16:12:46.5659070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5659180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5659310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5659360Z     ???
2025-02-24T16:12:46.5659460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5659470Z 
2025-02-24T16:12:46.5659520Z >   ???
2025-02-24T16:12:46.5659630Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5659680Z E   
2025-02-24T16:12:46.5659790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5659890Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5659940Z E          ...
2025-02-24T16:12:46.5660020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5660130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5660230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5660280Z E          ...
2025-02-24T16:12:46.5660360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5660470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5660560Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5660560Z 
2025-02-24T16:12:46.5660630Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5660800Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T16:12:46.5660800Z 
2025-02-24T16:12:46.5660920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5661030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5661110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5661240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5661350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5661430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5661500Z err_msg = None
2025-02-24T16:12:46.5661500Z 
2025-02-24T16:12:46.5661590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5661660Z         if err_msg is None:
2025-02-24T16:12:46.5661740Z             if left.shape != right.shape:
2025-02-24T16:12:46.5661810Z                 raise_assert_detail(
2025-02-24T16:12:46.5661930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5661990Z                 )
2025-02-24T16:12:46.5662040Z     
2025-02-24T16:12:46.5662090Z             diff = 0
2025-02-24T16:12:46.5662180Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5662250Z                 # count up differences
2025-02-24T16:12:46.5662400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5662460Z                     diff += 1
2025-02-24T16:12:46.5662520Z     
2025-02-24T16:12:46.5662590Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5662760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5662910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5663060Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5663110Z E           
2025-02-24T16:12:46.5663200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5663430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5663660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5663670Z 
2025-02-24T16:12:46.5663930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5663940Z 
2025-02-24T16:12:46.5664080Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5664080Z 
2025-02-24T16:12:46.5664260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74fe0>
2025-02-24T16:12:46.5664430Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8e74a0>, attr = 'j_blues'
2025-02-24T16:12:46.5664430Z 
2025-02-24T16:12:46.5664550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5664650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5664780Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5664840Z         try:
2025-02-24T16:12:46.5664960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5665020Z         except KeyError:
2025-02-24T16:12:46.5665140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5665190Z     
2025-02-24T16:12:46.5665270Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5665340Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5665420Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5665530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5665600Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5665680Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5665770Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5665830Z             else:
2025-02-24T16:12:46.5665900Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5666000Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5666000Z 
2025-02-24T16:12:46.5666100Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5666210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5666400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5666450Z     ???
2025-02-24T16:12:46.5666550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5666550Z 
2025-02-24T16:12:46.5666600Z >   ???
2025-02-24T16:12:46.5666710Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5666760Z E   
2025-02-24T16:12:46.5666870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5666970Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5667020Z E          ...
2025-02-24T16:12:46.5667100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5667210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5667310Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5667440Z E          ...
2025-02-24T16:12:46.5667520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5667680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5667830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5667830Z 
2025-02-24T16:12:46.5667900Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5668070Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T16:12:46.5668080Z 
2025-02-24T16:12:46.5668190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5668310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5668400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5668510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5668630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5668710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5668780Z err_msg = None
2025-02-24T16:12:46.5668780Z 
2025-02-24T16:12:46.5668880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5668950Z         if err_msg is None:
2025-02-24T16:12:46.5669020Z             if left.shape != right.shape:
2025-02-24T16:12:46.5669090Z                 raise_assert_detail(
2025-02-24T16:12:46.5669270Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5669330Z                 )
2025-02-24T16:12:46.5669380Z     
2025-02-24T16:12:46.5669430Z             diff = 0
2025-02-24T16:12:46.5669530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5669590Z                 # count up differences
2025-02-24T16:12:46.5669740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5669810Z                     diff += 1
2025-02-24T16:12:46.5669860Z     
2025-02-24T16:12:46.5669930Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5670050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5670200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5670300Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5670360Z E           
2025-02-24T16:12:46.5670450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5670680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5670900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5670910Z 
2025-02-24T16:12:46.5671220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5671230Z 
2025-02-24T16:12:46.5671370Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5671380Z 
2025-02-24T16:12:46.5671560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74d40>
2025-02-24T16:12:46.5671730Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>, attr = 'lines'
2025-02-24T16:12:46.5671730Z 
2025-02-24T16:12:46.5671850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5671950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5672090Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5672140Z         try:
2025-02-24T16:12:46.5672260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5672370Z         except KeyError:
2025-02-24T16:12:46.5672550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5672600Z     
2025-02-24T16:12:46.5672670Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5672750Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5672820Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5672940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5673010Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5673080Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5673170Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5673230Z             else:
2025-02-24T16:12:46.5673300Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5673400Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5673400Z 
2025-02-24T16:12:46.5673510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5673610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5673730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5673780Z     ???
2025-02-24T16:12:46.5673880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5673880Z 
2025-02-24T16:12:46.5673990Z >   ???
2025-02-24T16:12:46.5674100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5674150Z E   
2025-02-24T16:12:46.5674260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5674360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5676220Z E          ...
2025-02-24T16:12:46.5676640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5677070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5677350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5677530Z E          ...
2025-02-24T16:12:46.5677930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5678160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5678260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5678260Z 
2025-02-24T16:12:46.5678340Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5678610Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T16:12:46.5678620Z 
2025-02-24T16:12:46.5678820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74c20>
2025-02-24T16:12:46.5678950Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>
2025-02-24T16:12:46.5679020Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5679040Z 
2025-02-24T16:12:46.5679160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5679260Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5679340Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5679400Z         try:
2025-02-24T16:12:46.5679520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5679590Z         except KeyError:
2025-02-24T16:12:46.5679710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5679760Z     
2025-02-24T16:12:46.5679830Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5679910Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5679990Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5680100Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5680180Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5680310Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5680760Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5680760Z 
2025-02-24T16:12:46.5680870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5681420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5681420Z 
2025-02-24T16:12:46.5681540Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5681610Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5681710Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5681770Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5681900Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5681970Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5682060Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5682130Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5682190Z err_msg = None
2025-02-24T16:12:46.5682190Z 
2025-02-24T16:12:46.5682280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5682350Z         if err_msg is None:
2025-02-24T16:12:46.5682430Z             if left.shape != right.shape:
2025-02-24T16:12:46.5682500Z                 raise_assert_detail(
2025-02-24T16:12:46.5682620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5682680Z                 )
2025-02-24T16:12:46.5682730Z     
2025-02-24T16:12:46.5682780Z             diff = 0
2025-02-24T16:12:46.5682880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5682950Z                 # count up differences
2025-02-24T16:12:46.5683100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5683160Z                     diff += 1
2025-02-24T16:12:46.5683210Z     
2025-02-24T16:12:46.5683280Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5683410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5683560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5683650Z E           AssertionError: Series are different
2025-02-24T16:12:46.5683710Z E           
2025-02-24T16:12:46.5683790Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5684120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5684420Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5684720Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5684730Z 
2025-02-24T16:12:46.5684990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5685190Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T16:12:46.5685190Z 
2025-02-24T16:12:46.5685460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74830>
2025-02-24T16:12:46.5685590Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>
2025-02-24T16:12:46.5685720Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5685730Z 
2025-02-24T16:12:46.5685850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5685940Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5686010Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5686060Z         try:
2025-02-24T16:12:46.5686180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5686250Z         except KeyError:
2025-02-24T16:12:46.5686370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5686420Z     
2025-02-24T16:12:46.5686500Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5686570Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5686640Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5686760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5686830Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5686910Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5687000Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5687000Z 
2025-02-24T16:12:46.5687110Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5687210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5687210Z 
2025-02-24T16:12:46.5687330Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5687400Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5687500Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5687560Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5687680Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5687760Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5687850Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5687920Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5687980Z err_msg = None
2025-02-24T16:12:46.5687980Z 
2025-02-24T16:12:46.5688070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5688140Z         if err_msg is None:
2025-02-24T16:12:46.5688210Z             if left.shape != right.shape:
2025-02-24T16:12:46.5688280Z                 raise_assert_detail(
2025-02-24T16:12:46.5688410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5688460Z                 )
2025-02-24T16:12:46.5688510Z     
2025-02-24T16:12:46.5688570Z             diff = 0
2025-02-24T16:12:46.5688670Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5688740Z                 # count up differences
2025-02-24T16:12:46.5688880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5688950Z                     diff += 1
2025-02-24T16:12:46.5689010Z     
2025-02-24T16:12:46.5689080Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5689190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5689340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5689420Z E           AssertionError: Series are different
2025-02-24T16:12:46.5689480Z E           
2025-02-24T16:12:46.5689570Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.5689890Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5690260Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5690650Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5690660Z 
2025-02-24T16:12:46.5690910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5691080Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T16:12:46.5691090Z 
2025-02-24T16:12:46.5691220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5691360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5691450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5691560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5691680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5691770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5691820Z err_msg = None
2025-02-24T16:12:46.5691830Z 
2025-02-24T16:12:46.5691920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5691980Z         if err_msg is None:
2025-02-24T16:12:46.5692060Z             if left.shape != right.shape:
2025-02-24T16:12:46.5692130Z                 raise_assert_detail(
2025-02-24T16:12:46.5692250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5692310Z                 )
2025-02-24T16:12:46.5692360Z     
2025-02-24T16:12:46.5692420Z             diff = 0
2025-02-24T16:12:46.5692500Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5692580Z                 # count up differences
2025-02-24T16:12:46.5692910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5693020Z                     diff += 1
2025-02-24T16:12:46.5693080Z     
2025-02-24T16:12:46.5693160Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5693290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5693450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5693560Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5693610Z E           
2025-02-24T16:12:46.5693710Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5693940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5694170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5694320Z 
2025-02-24T16:12:46.5694600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5694660Z 
2025-02-24T16:12:46.5694820Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5694820Z 
2025-02-24T16:12:46.5695000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b76630>
2025-02-24T16:12:46.5695170Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>, attr = 'nu'
2025-02-24T16:12:46.5695170Z 
2025-02-24T16:12:46.5695290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5695390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5695460Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5695510Z         try:
2025-02-24T16:12:46.5696670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5696750Z         except KeyError:
2025-02-24T16:12:46.5696870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5696930Z     
2025-02-24T16:12:46.5697000Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5697080Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5697160Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5697280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5697350Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5697460Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5697560Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5697560Z 
2025-02-24T16:12:46.5697670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5697770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5697900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5697950Z     ???
2025-02-24T16:12:46.5698140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5698160Z 
2025-02-24T16:12:46.5698240Z >   ???
2025-02-24T16:12:46.5698350Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5698400Z E   
2025-02-24T16:12:46.5698510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5698610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5698660Z E          ...
2025-02-24T16:12:46.5698730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5698850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5698940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5699000Z E          ...
2025-02-24T16:12:46.5699070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5699180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5699270Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5699270Z 
2025-02-24T16:12:46.5699340Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5699520Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T16:12:46.5699520Z 
2025-02-24T16:12:46.5705960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5706150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5706240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5706350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5706470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5706550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5706610Z err_msg = None
2025-02-24T16:12:46.5706830Z 
2025-02-24T16:12:46.5706920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5706990Z         if err_msg is None:
2025-02-24T16:12:46.5707060Z             if left.shape != right.shape:
2025-02-24T16:12:46.5707240Z                 raise_assert_detail(
2025-02-24T16:12:46.5707370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5707420Z                 )
2025-02-24T16:12:46.5707470Z     
2025-02-24T16:12:46.5707520Z             diff = 0
2025-02-24T16:12:46.5707620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5707690Z                 # count up differences
2025-02-24T16:12:46.5707840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5707900Z                     diff += 1
2025-02-24T16:12:46.5707950Z     
2025-02-24T16:12:46.5708020Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5708140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5708300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5708390Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5708450Z E           
2025-02-24T16:12:46.5708550Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5708770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5709000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5709010Z 
2025-02-24T16:12:46.5709290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5709310Z 
2025-02-24T16:12:46.5709460Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5709460Z 
2025-02-24T16:12:46.5709640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b759d0>
2025-02-24T16:12:46.5709780Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>
2025-02-24T16:12:46.5709840Z attr = 'wavelength_cm'
2025-02-24T16:12:46.5709850Z 
2025-02-24T16:12:46.5709960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5710060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5710130Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5710180Z         try:
2025-02-24T16:12:46.5710300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5710370Z         except KeyError:
2025-02-24T16:12:46.5710490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5710540Z     
2025-02-24T16:12:46.5710610Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5710690Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5710760Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5710870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5710940Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5711010Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5711110Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5711110Z 
2025-02-24T16:12:46.5711210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5711320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5711440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5711570Z     ???
2025-02-24T16:12:46.5711670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5711670Z 
2025-02-24T16:12:46.5711780Z >   ???
2025-02-24T16:12:46.5711890Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5711940Z E   
2025-02-24T16:12:46.5712050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5712140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5712190Z E          ...
2025-02-24T16:12:46.5712650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5713160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5713420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5713590Z E          ...
2025-02-24T16:12:46.5713790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5714080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5715240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5715260Z 
2025-02-24T16:12:46.5715770Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5725780Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T16:12:46.5725830Z 
2025-02-24T16:12:46.5726020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5726150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5726230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5726350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5726470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5726550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5726610Z err_msg = None
2025-02-24T16:12:46.5726630Z 
2025-02-24T16:12:46.5726720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5726790Z         if err_msg is None:
2025-02-24T16:12:46.5726870Z             if left.shape != right.shape:
2025-02-24T16:12:46.5726950Z                 raise_assert_detail(
2025-02-24T16:12:46.5727070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5727190Z                 )
2025-02-24T16:12:46.5727250Z     
2025-02-24T16:12:46.5727300Z             diff = 0
2025-02-24T16:12:46.5727400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5727470Z                 # count up differences
2025-02-24T16:12:46.5727620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5727680Z                     diff += 1
2025-02-24T16:12:46.5727740Z     
2025-02-24T16:12:46.5727810Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5727930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5728080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5728180Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5728240Z E           
2025-02-24T16:12:46.5728450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5728690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5728990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5729290Z 
2025-02-24T16:12:46.5729560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5729690Z 
2025-02-24T16:12:46.5729830Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5729840Z 
2025-02-24T16:12:46.5730020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b75d00>
2025-02-24T16:12:46.5730190Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>, attr = 'f_lu'
2025-02-24T16:12:46.5730190Z 
2025-02-24T16:12:46.5730310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5730410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5730480Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5730540Z         try:
2025-02-24T16:12:46.5730660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5730780Z         except KeyError:
2025-02-24T16:12:46.5730910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5730960Z     
2025-02-24T16:12:46.5731040Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5731110Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5731180Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5731300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5731370Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5731440Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5731540Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5731540Z 
2025-02-24T16:12:46.5731640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5732510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5733160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5733350Z     ???
2025-02-24T16:12:46.5733710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5733730Z 
2025-02-24T16:12:46.5733800Z >   ???
2025-02-24T16:12:46.5733910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5733970Z E   
2025-02-24T16:12:46.5734080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5734180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5734230Z E          ...
2025-02-24T16:12:46.5734310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5734420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5734840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5734920Z E          ...
2025-02-24T16:12:46.5735000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5735120Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5735220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5735220Z 
2025-02-24T16:12:46.5735360Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5735540Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T16:12:46.5735550Z 
2025-02-24T16:12:46.5735660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5735790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5735870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5735980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5736100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5736190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5736240Z err_msg = None
2025-02-24T16:12:46.5736350Z 
2025-02-24T16:12:46.5736450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5736520Z         if err_msg is None:
2025-02-24T16:12:46.5736590Z             if left.shape != right.shape:
2025-02-24T16:12:46.5736710Z                 raise_assert_detail(
2025-02-24T16:12:46.5736850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5736900Z                 )
2025-02-24T16:12:46.5736950Z     
2025-02-24T16:12:46.5737010Z             diff = 0
2025-02-24T16:12:46.5737110Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5737250Z                 # count up differences
2025-02-24T16:12:46.5737390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5737460Z                     diff += 1
2025-02-24T16:12:46.5737510Z     
2025-02-24T16:12:46.5737580Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5737700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5737850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5737950Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5738010Z E           
2025-02-24T16:12:46.5738100Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5738330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5738560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5738560Z 
2025-02-24T16:12:46.5739290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5739480Z 
2025-02-24T16:12:46.5739640Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5739650Z 
2025-02-24T16:12:46.5739830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b75ee0>
2025-02-24T16:12:46.5739960Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>
2025-02-24T16:12:46.5740020Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.5740020Z 
2025-02-24T16:12:46.5740150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5740240Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5741870Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5742080Z         try:
2025-02-24T16:12:46.5742430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5742640Z         except KeyError:
2025-02-24T16:12:46.5743470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5743660Z     
2025-02-24T16:12:46.5743880Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5744100Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5744310Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5744610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5744820Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5745140Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5745410Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5745980Z             else:
2025-02-24T16:12:46.5746460Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5746880Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5746910Z 
2025-02-24T16:12:46.5747050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5747710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5747840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5748050Z     ???
2025-02-24T16:12:46.5748160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5748170Z 
2025-02-24T16:12:46.5748220Z >   ???
2025-02-24T16:12:46.5748320Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5748380Z E   
2025-02-24T16:12:46.5748490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5748580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5748650Z E          ...
2025-02-24T16:12:46.5748720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5748830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5748930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5748990Z E          ...
2025-02-24T16:12:46.5749070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5749170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5749380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5749400Z 
2025-02-24T16:12:46.5749490Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5749680Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T16:12:46.5749680Z 
2025-02-24T16:12:46.5749800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5749910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5750010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5750120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5750230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5750330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5750390Z err_msg = None
2025-02-24T16:12:46.5750390Z 
2025-02-24T16:12:46.5750500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5750560Z         if err_msg is None:
2025-02-24T16:12:46.5750640Z             if left.shape != right.shape:
2025-02-24T16:12:46.5750710Z                 raise_assert_detail(
2025-02-24T16:12:46.5750830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5750890Z                 )
2025-02-24T16:12:46.5750940Z     
2025-02-24T16:12:46.5751000Z             diff = 0
2025-02-24T16:12:46.5751100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5751170Z                 # count up differences
2025-02-24T16:12:46.5752000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5752100Z                     diff += 1
2025-02-24T16:12:46.5752150Z     
2025-02-24T16:12:46.5752230Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5752360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5752520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5752610Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5752670Z E           
2025-02-24T16:12:46.5752760Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5753060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5753290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5753530Z 
2025-02-24T16:12:46.5753800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5753800Z 
2025-02-24T16:12:46.5753950Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5753960Z 
2025-02-24T16:12:46.5754140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b74aa0>
2025-02-24T16:12:46.5754280Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>
2025-02-24T16:12:46.5754340Z attr = 'beta_sobolev'
2025-02-24T16:12:46.5754340Z 
2025-02-24T16:12:46.5754460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5755490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5755870Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5756030Z         try:
2025-02-24T16:12:46.5756730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5756980Z         except KeyError:
2025-02-24T16:12:46.5757320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5757470Z     
2025-02-24T16:12:46.5757680Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5757900Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5758100Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5758410Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5758600Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5758810Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5759220Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5759350Z             else:
2025-02-24T16:12:46.5759430Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5759550Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5759550Z 
2025-02-24T16:12:46.5759660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5759780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5759900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5759960Z     ???
2025-02-24T16:12:46.5760050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5760060Z 
2025-02-24T16:12:46.5760110Z >   ???
2025-02-24T16:12:46.5760220Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5760270Z E   
2025-02-24T16:12:46.5760380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5760480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5760530Z E          ...
2025-02-24T16:12:46.5760610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5760720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5760820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5760880Z E          ...
2025-02-24T16:12:46.5760950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5761060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5761150Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5761150Z 
2025-02-24T16:12:46.5761220Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5761390Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T16:12:46.5761400Z 
2025-02-24T16:12:46.5761510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5761630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5761890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5762000Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5762200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5762290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5762340Z err_msg = None
2025-02-24T16:12:46.5762350Z 
2025-02-24T16:12:46.5762440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5762500Z         if err_msg is None:
2025-02-24T16:12:46.5762590Z             if left.shape != right.shape:
2025-02-24T16:12:46.5762660Z                 raise_assert_detail(
2025-02-24T16:12:46.5762790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5762840Z                 )
2025-02-24T16:12:46.5762890Z     
2025-02-24T16:12:46.5762950Z             diff = 0
2025-02-24T16:12:46.5763050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5763130Z                 # count up differences
2025-02-24T16:12:46.5763270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5763340Z                     diff += 1
2025-02-24T16:12:46.5763390Z     
2025-02-24T16:12:46.5763460Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5763580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5763720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5763820Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5763870Z E           
2025-02-24T16:12:46.5763970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5764190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5764410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5764420Z 
2025-02-24T16:12:46.5764680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5764680Z 
2025-02-24T16:12:46.5764820Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5764830Z 
2025-02-24T16:12:46.5765000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b747a0>
2025-02-24T16:12:46.5765180Z plasma = <tardis.plasma.base.BasePlasma object at 0x30bd780e0>, attr = 'j_blues'
2025-02-24T16:12:46.5765190Z 
2025-02-24T16:12:46.5765310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5765410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5765480Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5765530Z         try:
2025-02-24T16:12:46.5765650Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5765710Z         except KeyError:
2025-02-24T16:12:46.5765830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5765880Z     
2025-02-24T16:12:46.5765960Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5766580Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5766950Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5767560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5767760Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5768110Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5772500Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5772570Z             else:
2025-02-24T16:12:46.5772650Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5772890Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5772900Z 
2025-02-24T16:12:46.5773000Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5773100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5773220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5773280Z     ???
2025-02-24T16:12:46.5773440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5773440Z 
2025-02-24T16:12:46.5773500Z >   ???
2025-02-24T16:12:46.5773610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5773660Z E   
2025-02-24T16:12:46.5773770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5773870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5773930Z E          ...
2025-02-24T16:12:46.5774010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5774120Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5774220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5774280Z E          ...
2025-02-24T16:12:46.5774350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5774470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5774960Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5775070Z 
2025-02-24T16:12:46.5775530Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5776490Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T16:12:46.5776520Z 
2025-02-24T16:12:46.5776940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5777270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5777780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5778130Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5778540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5778950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5779230Z err_msg = None
2025-02-24T16:12:46.5779240Z 
2025-02-24T16:12:46.5779340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5779410Z         if err_msg is None:
2025-02-24T16:12:46.5779490Z             if left.shape != right.shape:
2025-02-24T16:12:46.5779560Z                 raise_assert_detail(
2025-02-24T16:12:46.5779760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5779830Z                 )
2025-02-24T16:12:46.5779880Z     
2025-02-24T16:12:46.5779930Z             diff = 0
2025-02-24T16:12:46.5780040Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5780120Z                 # count up differences
2025-02-24T16:12:46.5780260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5780330Z                     diff += 1
2025-02-24T16:12:46.5780380Z     
2025-02-24T16:12:46.5780460Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5780580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5780720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5780820Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5780870Z E           
2025-02-24T16:12:46.5780970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5781600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5781960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5781960Z 
2025-02-24T16:12:46.5782220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5782220Z 
2025-02-24T16:12:46.5782370Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5782370Z 
2025-02-24T16:12:46.5782550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c25df0>
2025-02-24T16:12:46.5782800Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>, attr = 'lines'
2025-02-24T16:12:46.5782810Z 
2025-02-24T16:12:46.5782930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5783030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5783090Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5783470Z         try:
2025-02-24T16:12:46.5783730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5783790Z         except KeyError:
2025-02-24T16:12:46.5783920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5783970Z     
2025-02-24T16:12:46.5784050Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5784120Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5784190Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5784320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5784380Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5784460Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5784560Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5784620Z             else:
2025-02-24T16:12:46.5784700Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5784790Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5784800Z 
2025-02-24T16:12:46.5784900Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5785010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5785130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5785190Z     ???
2025-02-24T16:12:46.5785340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5785350Z 
2025-02-24T16:12:46.5785410Z >   ???
2025-02-24T16:12:46.5785510Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5785570Z E   
2025-02-24T16:12:46.5785680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5785780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5785840Z E          ...
2025-02-24T16:12:46.5785990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5786140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5786240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5786300Z E          ...
2025-02-24T16:12:46.5786370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5786480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5786570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5786570Z 
2025-02-24T16:12:46.5786640Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5787010Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T16:12:46.5787020Z 
2025-02-24T16:12:46.5787270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c279b0>
2025-02-24T16:12:46.5787480Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>
2025-02-24T16:12:46.5787550Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5787550Z 
2025-02-24T16:12:46.5787660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5787760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5787830Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5787880Z         try:
2025-02-24T16:12:46.5788000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5788060Z         except KeyError:
2025-02-24T16:12:46.5788180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5788230Z     
2025-02-24T16:12:46.5788310Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5788390Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5788460Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5788590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5788650Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5788890Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5789030Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5789030Z 
2025-02-24T16:12:46.5789150Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5789250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5789260Z 
2025-02-24T16:12:46.5789370Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5789450Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5789540Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5789620Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5789740Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5789820Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5789910Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5789980Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5790040Z err_msg = None
2025-02-24T16:12:46.5790040Z 
2025-02-24T16:12:46.5790130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5790200Z         if err_msg is None:
2025-02-24T16:12:46.5790280Z             if left.shape != right.shape:
2025-02-24T16:12:46.5790350Z                 raise_assert_detail(
2025-02-24T16:12:46.5790550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5790600Z                 )
2025-02-24T16:12:46.5790650Z     
2025-02-24T16:12:46.5790710Z             diff = 0
2025-02-24T16:12:46.5790810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5790880Z                 # count up differences
2025-02-24T16:12:46.5791030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5791090Z                     diff += 1
2025-02-24T16:12:46.5791150Z     
2025-02-24T16:12:46.5791220Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5791330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5791600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5791700Z E           AssertionError: Series are different
2025-02-24T16:12:46.5791760Z E           
2025-02-24T16:12:46.5791840Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5792170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5792700Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5792990Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5793000Z 
2025-02-24T16:12:46.5793330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5793590Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T16:12:46.5793590Z 
2025-02-24T16:12:46.5793780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c256d0>
2025-02-24T16:12:46.5793920Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>
2025-02-24T16:12:46.5793990Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5794000Z 
2025-02-24T16:12:46.5794120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5794220Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5794290Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5794340Z         try:
2025-02-24T16:12:46.5800790Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5800940Z         except KeyError:
2025-02-24T16:12:46.5801060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5801120Z     
2025-02-24T16:12:46.5801190Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5801270Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5801340Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5801460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5801520Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5801610Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5801700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5801710Z 
2025-02-24T16:12:46.5801810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5801910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5801910Z 
2025-02-24T16:12:46.5802030Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5802100Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5802200Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5802270Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5802400Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5802470Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5802570Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5802640Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5802700Z err_msg = None
2025-02-24T16:12:46.5802700Z 
2025-02-24T16:12:46.5802800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5802860Z         if err_msg is None:
2025-02-24T16:12:46.5802940Z             if left.shape != right.shape:
2025-02-24T16:12:46.5803220Z                 raise_assert_detail(
2025-02-24T16:12:46.5803340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5803400Z                 )
2025-02-24T16:12:46.5803540Z     
2025-02-24T16:12:46.5803600Z             diff = 0
2025-02-24T16:12:46.5803690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5803760Z                 # count up differences
2025-02-24T16:12:46.5803900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5803970Z                     diff += 1
2025-02-24T16:12:46.5804020Z     
2025-02-24T16:12:46.5804090Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5804210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5804350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5804450Z E           AssertionError: Series are different
2025-02-24T16:12:46.5804500Z E           
2025-02-24T16:12:46.5804590Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.5804910Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5805230Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5805560Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5805570Z 
2025-02-24T16:12:46.5805830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5806030Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T16:12:46.5806040Z 
2025-02-24T16:12:46.5806150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5806270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5806350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5806470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5806590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5806670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5806730Z err_msg = None
2025-02-24T16:12:46.5806740Z 
2025-02-24T16:12:46.5806830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5806890Z         if err_msg is None:
2025-02-24T16:12:46.5806970Z             if left.shape != right.shape:
2025-02-24T16:12:46.5807040Z                 raise_assert_detail(
2025-02-24T16:12:46.5807160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5807680Z                 )
2025-02-24T16:12:46.5808120Z     
2025-02-24T16:12:46.5808310Z             diff = 0
2025-02-24T16:12:46.5808720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5809670Z                 # count up differences
2025-02-24T16:12:46.5810090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5811010Z                     diff += 1
2025-02-24T16:12:46.5811060Z     
2025-02-24T16:12:46.5811140Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5811250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5811410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5811500Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5811560Z E           
2025-02-24T16:12:46.5811660Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5811880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5812120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5812130Z 
2025-02-24T16:12:46.5812390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5812390Z 
2025-02-24T16:12:46.5812530Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5812530Z 
2025-02-24T16:12:46.5812720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c261b0>
2025-02-24T16:12:46.5812890Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>, attr = 'nu'
2025-02-24T16:12:46.5812890Z 
2025-02-24T16:12:46.5813010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5813110Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5813180Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5813240Z         try:
2025-02-24T16:12:46.5813360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5813420Z         except KeyError:
2025-02-24T16:12:46.5813540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5813590Z     
2025-02-24T16:12:46.5813670Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5813740Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5813810Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5813930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5814000Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5814080Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5814170Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5814170Z 
2025-02-24T16:12:46.5814280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5814390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5814510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5814570Z     ???
2025-02-24T16:12:46.5814670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5814680Z 
2025-02-24T16:12:46.5814730Z >   ???
2025-02-24T16:12:46.5814830Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5814890Z E   
2025-02-24T16:12:46.5815000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5815100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5815150Z E          ...
2025-02-24T16:12:46.5815220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5815430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5815520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5815640Z E          ...
2025-02-24T16:12:46.5815710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5815820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5815910Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5815910Z 
2025-02-24T16:12:46.5815980Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5816210Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T16:12:46.5816210Z 
2025-02-24T16:12:46.5816320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5816440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5816520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5816640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5816760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5816840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5816900Z err_msg = None
2025-02-24T16:12:46.5816910Z 
2025-02-24T16:12:46.5817000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5817060Z         if err_msg is None:
2025-02-24T16:12:46.5817140Z             if left.shape != right.shape:
2025-02-24T16:12:46.5817210Z                 raise_assert_detail(
2025-02-24T16:12:46.5817330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5817390Z                 )
2025-02-24T16:12:46.5817440Z     
2025-02-24T16:12:46.5817500Z             diff = 0
2025-02-24T16:12:46.5817600Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5817680Z                 # count up differences
2025-02-24T16:12:46.5817820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5817890Z                     diff += 1
2025-02-24T16:12:46.5817980Z     
2025-02-24T16:12:46.5818050Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5818170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5818320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5818410Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5818470Z E           
2025-02-24T16:12:46.5818560Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5818780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5819020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5819030Z 
2025-02-24T16:12:46.5819280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5819280Z 
2025-02-24T16:12:46.5819430Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5819430Z 
2025-02-24T16:12:46.5819610Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c26d20>
2025-02-24T16:12:46.5819740Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>
2025-02-24T16:12:46.5819860Z attr = 'wavelength_cm'
2025-02-24T16:12:46.5819860Z 
2025-02-24T16:12:46.5819980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5820130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5820200Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5820250Z         try:
2025-02-24T16:12:46.5820370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5820430Z         except KeyError:
2025-02-24T16:12:46.5820550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5820610Z     
2025-02-24T16:12:46.5820680Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5820760Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5820820Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5821020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5821100Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5821170Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5821270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5821270Z 
2025-02-24T16:12:46.5821380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5821480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5821600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5821650Z     ???
2025-02-24T16:12:46.5821760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5821760Z 
2025-02-24T16:12:46.5821810Z >   ???
2025-02-24T16:12:46.5821920Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5821970Z E   
2025-02-24T16:12:46.5822120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5822230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5822290Z E          ...
2025-02-24T16:12:46.5822370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5822480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5822580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5822630Z E          ...
2025-02-24T16:12:46.5823470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5823970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5824060Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5824070Z 
2025-02-24T16:12:46.5824140Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5824350Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T16:12:46.5824350Z 
2025-02-24T16:12:46.5824480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5824610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5824700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5824820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5824940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5825030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5825090Z err_msg = None
2025-02-24T16:12:46.5825090Z 
2025-02-24T16:12:46.5825190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5825250Z         if err_msg is None:
2025-02-24T16:12:46.5825390Z             if left.shape != right.shape:
2025-02-24T16:12:46.5825470Z                 raise_assert_detail(
2025-02-24T16:12:46.5825600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5825650Z                 )
2025-02-24T16:12:46.5825710Z     
2025-02-24T16:12:46.5825760Z             diff = 0
2025-02-24T16:12:46.5826030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5826110Z                 # count up differences
2025-02-24T16:12:46.5826260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5826400Z                     diff += 1
2025-02-24T16:12:46.5826450Z     
2025-02-24T16:12:46.5826530Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5826640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5826860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5826950Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5827010Z E           
2025-02-24T16:12:46.5827100Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5827840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5833190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5833230Z 
2025-02-24T16:12:46.5833540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5833550Z 
2025-02-24T16:12:46.5833700Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5833700Z 
2025-02-24T16:12:46.5833890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c242f0>
2025-02-24T16:12:46.5834060Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>, attr = 'f_lu'
2025-02-24T16:12:46.5834080Z 
2025-02-24T16:12:46.5834200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5834320Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5834390Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5834440Z         try:
2025-02-24T16:12:46.5834560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5834630Z         except KeyError:
2025-02-24T16:12:46.5834750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5834800Z     
2025-02-24T16:12:46.5834870Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5834940Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5835020Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5835140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5835200Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5835280Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5835420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5835430Z 
2025-02-24T16:12:46.5835540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5835660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5835780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5835840Z     ???
2025-02-24T16:12:46.5835940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5835940Z 
2025-02-24T16:12:46.5835990Z >   ???
2025-02-24T16:12:46.5836100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5836150Z E   
2025-02-24T16:12:46.5836250Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5836350Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5836400Z E          ...
2025-02-24T16:12:46.5836480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5837040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5837140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5837310Z E          ...
2025-02-24T16:12:46.5837390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5837500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5837580Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5837580Z 
2025-02-24T16:12:46.5837660Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5837880Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T16:12:46.5837890Z 
2025-02-24T16:12:46.5838000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5838120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5838210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5838330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5838450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5838530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5838590Z err_msg = None
2025-02-24T16:12:46.5838590Z 
2025-02-24T16:12:46.5838690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5838750Z         if err_msg is None:
2025-02-24T16:12:46.5838830Z             if left.shape != right.shape:
2025-02-24T16:12:46.5838900Z                 raise_assert_detail(
2025-02-24T16:12:46.5839030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5839080Z                 )
2025-02-24T16:12:46.5839130Z     
2025-02-24T16:12:46.5839190Z             diff = 0
2025-02-24T16:12:46.5839290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5839360Z                 # count up differences
2025-02-24T16:12:46.5839500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5839570Z                     diff += 1
2025-02-24T16:12:46.5839620Z     
2025-02-24T16:12:46.5839690Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5839810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5839960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5840050Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5840100Z E           
2025-02-24T16:12:46.5840200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5840420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5840650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5840660Z 
2025-02-24T16:12:46.5840920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5840920Z 
2025-02-24T16:12:46.5841060Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5841070Z 
2025-02-24T16:12:46.5841250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c26360>
2025-02-24T16:12:46.5841380Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>
2025-02-24T16:12:46.5841490Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.5841500Z 
2025-02-24T16:12:46.5841620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5841790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5841860Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5841920Z         try:
2025-02-24T16:12:46.5842040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5842100Z         except KeyError:
2025-02-24T16:12:46.5842220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5842280Z     
2025-02-24T16:12:46.5842340Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5842420Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5842490Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5842690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5842760Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5842840Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5842930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5842990Z             else:
2025-02-24T16:12:46.5843070Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5843160Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5843160Z 
2025-02-24T16:12:46.5843270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5843370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5843490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5843550Z     ???
2025-02-24T16:12:46.5843980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5843990Z 
2025-02-24T16:12:46.5844050Z >   ???
2025-02-24T16:12:46.5844220Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5844270Z E   
2025-02-24T16:12:46.5844400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5844500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5844560Z E          ...
2025-02-24T16:12:46.5844640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5844750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5844850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5844900Z E          ...
2025-02-24T16:12:46.5844980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5845090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5845180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5845180Z 
2025-02-24T16:12:46.5845250Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5845530Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T16:12:46.5845540Z 
2025-02-24T16:12:46.5845660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5845780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5845870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5845990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5846200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5846340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5846400Z err_msg = None
2025-02-24T16:12:46.5846400Z 
2025-02-24T16:12:46.5846490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5846560Z         if err_msg is None:
2025-02-24T16:12:46.5846640Z             if left.shape != right.shape:
2025-02-24T16:12:46.5846780Z                 raise_assert_detail(
2025-02-24T16:12:46.5847070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5847130Z                 )
2025-02-24T16:12:46.5847180Z     
2025-02-24T16:12:46.5847310Z             diff = 0
2025-02-24T16:12:46.5847410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5847480Z                 # count up differences
2025-02-24T16:12:46.5847630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5847690Z                     diff += 1
2025-02-24T16:12:46.5847740Z     
2025-02-24T16:12:46.5847810Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5847930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5848160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5848260Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5848320Z E           
2025-02-24T16:12:46.5848410Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5848650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5848870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5848880Z 
2025-02-24T16:12:46.5849130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5849140Z 
2025-02-24T16:12:46.5849280Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5849290Z 
2025-02-24T16:12:46.5849470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c265a0>
2025-02-24T16:12:46.5849660Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>
2025-02-24T16:12:46.5849730Z attr = 'beta_sobolev'
2025-02-24T16:12:46.5849730Z 
2025-02-24T16:12:46.5849840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5849950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5850010Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5850070Z         try:
2025-02-24T16:12:46.5850190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5850250Z         except KeyError:
2025-02-24T16:12:46.5850370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5850420Z     
2025-02-24T16:12:46.5850490Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5850580Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5850650Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5850770Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5850840Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5850920Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5851490Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5851820Z             else:
2025-02-24T16:12:46.5852060Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5852540Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5852570Z 
2025-02-24T16:12:46.5852930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5853210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5856900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5857110Z     ???
2025-02-24T16:12:46.5857370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5857800Z 
2025-02-24T16:12:46.5857970Z >   ???
2025-02-24T16:12:46.5858260Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5858920Z E   
2025-02-24T16:12:46.5859240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5859510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5859680Z E          ...
2025-02-24T16:12:46.5859880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5860190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5860490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5860660Z E          ...
2025-02-24T16:12:46.5860970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5861400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5861840Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5861890Z 
2025-02-24T16:12:46.5862120Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5862730Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T16:12:46.5862750Z 
2025-02-24T16:12:46.5863050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5863350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5863570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5863880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5864170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5864380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5864860Z err_msg = None
2025-02-24T16:12:46.5864900Z 
2025-02-24T16:12:46.5865200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5865400Z         if err_msg is None:
2025-02-24T16:12:46.5865630Z             if left.shape != right.shape:
2025-02-24T16:12:46.5865830Z                 raise_assert_detail(
2025-02-24T16:12:46.5866170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5867890Z                 )
2025-02-24T16:12:46.5868450Z     
2025-02-24T16:12:46.5868670Z             diff = 0
2025-02-24T16:12:46.5868770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5868850Z                 # count up differences
2025-02-24T16:12:46.5869000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5869080Z                     diff += 1
2025-02-24T16:12:46.5869130Z     
2025-02-24T16:12:46.5869200Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5869330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5869490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5869590Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5869810Z E           
2025-02-24T16:12:46.5869910Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5870130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5870470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5871000Z 
2025-02-24T16:12:46.5871280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5871420Z 
2025-02-24T16:12:46.5871580Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5871580Z 
2025-02-24T16:12:46.5871880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c26240>
2025-02-24T16:12:46.5872060Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a7824e0>, attr = 'j_blues'
2025-02-24T16:12:46.5872060Z 
2025-02-24T16:12:46.5872180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5872280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5872350Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5872400Z         try:
2025-02-24T16:12:46.5872530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5872590Z         except KeyError:
2025-02-24T16:12:46.5872710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5872760Z     
2025-02-24T16:12:46.5872840Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5872920Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5872990Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5873110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5873170Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5873360Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5873460Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5873520Z             else:
2025-02-24T16:12:46.5873600Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5873690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5873690Z 
2025-02-24T16:12:46.5873800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5873900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5874030Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5874080Z     ???
2025-02-24T16:12:46.5874180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5874190Z 
2025-02-24T16:12:46.5874240Z >   ???
2025-02-24T16:12:46.5874350Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5874410Z E   
2025-02-24T16:12:46.5874510Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5874620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5874780Z E          ...
2025-02-24T16:12:46.5874860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5874980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5875070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5875130Z E          ...
2025-02-24T16:12:46.5875200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5875310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5875400Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5875400Z 
2025-02-24T16:12:46.5875470Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5875660Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T16:12:46.5875660Z 
2025-02-24T16:12:46.5875770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5875890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5875980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5876210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5876320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5876580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5876650Z err_msg = None
2025-02-24T16:12:46.5876660Z 
2025-02-24T16:12:46.5876750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5876880Z         if err_msg is None:
2025-02-24T16:12:46.5877070Z             if left.shape != right.shape:
2025-02-24T16:12:46.5877140Z                 raise_assert_detail(
2025-02-24T16:12:46.5877260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5877310Z                 )
2025-02-24T16:12:46.5884540Z     
2025-02-24T16:12:46.5884660Z             diff = 0
2025-02-24T16:12:46.5884770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5884850Z                 # count up differences
2025-02-24T16:12:46.5885000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5885060Z                     diff += 1
2025-02-24T16:12:46.5885120Z     
2025-02-24T16:12:46.5885210Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5885330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5885490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5885580Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5885640Z E           
2025-02-24T16:12:46.5885740Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5886080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5886320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5886330Z 
2025-02-24T16:12:46.5886590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5886590Z 
2025-02-24T16:12:46.5886740Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5886740Z 
2025-02-24T16:12:46.5886930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c25ee0>
2025-02-24T16:12:46.5887090Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>, attr = 'lines'
2025-02-24T16:12:46.5887100Z 
2025-02-24T16:12:46.5887220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5887310Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5887500Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5887560Z         try:
2025-02-24T16:12:46.5887690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5887750Z         except KeyError:
2025-02-24T16:12:46.5887870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5887930Z     
2025-02-24T16:12:46.5887990Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5888080Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5888150Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5888260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5888330Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5888410Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5888510Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5888560Z             else:
2025-02-24T16:12:46.5888640Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5888730Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5889020Z 
2025-02-24T16:12:46.5889130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5889230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5889450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5889500Z     ???
2025-02-24T16:12:46.5889600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5889610Z 
2025-02-24T16:12:46.5889660Z >   ???
2025-02-24T16:12:46.5890440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5890540Z E   
2025-02-24T16:12:46.5890670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5890770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5890830Z E          ...
2025-02-24T16:12:46.5890910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5891030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5891140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5891190Z E          ...
2025-02-24T16:12:46.5891270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5891390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5891480Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5891480Z 
2025-02-24T16:12:46.5891560Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5891790Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T16:12:46.5891790Z 
2025-02-24T16:12:46.5891980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c257f0>
2025-02-24T16:12:46.5892120Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>
2025-02-24T16:12:46.5892190Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5892200Z 
2025-02-24T16:12:46.5892310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5892410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5892490Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5892540Z         try:
2025-02-24T16:12:46.5892670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5892730Z         except KeyError:
2025-02-24T16:12:46.5892850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5892910Z     
2025-02-24T16:12:46.5892980Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5893050Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5893130Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5893250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5893320Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5893400Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5893490Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5893490Z 
2025-02-24T16:12:46.5893600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5893850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5893860Z 
2025-02-24T16:12:46.5893990Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5894060Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5894270Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5894340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5894470Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5894530Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5894750Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5894820Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5894870Z err_msg = None
2025-02-24T16:12:46.5894870Z 
2025-02-24T16:12:46.5895110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5895510Z         if err_msg is None:
2025-02-24T16:12:46.5895800Z             if left.shape != right.shape:
2025-02-24T16:12:46.5896010Z                 raise_assert_detail(
2025-02-24T16:12:46.5896150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5896210Z                 )
2025-02-24T16:12:46.5896260Z     
2025-02-24T16:12:46.5896310Z             diff = 0
2025-02-24T16:12:46.5896400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5896480Z                 # count up differences
2025-02-24T16:12:46.5896750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5896820Z                     diff += 1
2025-02-24T16:12:46.5896880Z     
2025-02-24T16:12:46.5897060Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5897190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5897460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5897560Z E           AssertionError: Series are different
2025-02-24T16:12:46.5897620Z E           
2025-02-24T16:12:46.5897710Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5898030Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5898310Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5898610Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5898620Z 
2025-02-24T16:12:46.5898890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5899100Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T16:12:46.5899110Z 
2025-02-24T16:12:46.5899290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c27470>
2025-02-24T16:12:46.5899430Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>
2025-02-24T16:12:46.5899510Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5899520Z 
2025-02-24T16:12:46.5899640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5899750Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5899820Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5899870Z         try:
2025-02-24T16:12:46.5900000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5900170Z         except KeyError:
2025-02-24T16:12:46.5900320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5900370Z     
2025-02-24T16:12:46.5900440Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5900520Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5900730Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5900860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5901120Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5901200Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5901290Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5901390Z 
2025-02-24T16:12:46.5901510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5901610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5901610Z 
2025-02-24T16:12:46.5901730Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5901800Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5902010Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5902080Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5902200Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5902270Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5902480Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5902550Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5902610Z err_msg = None
2025-02-24T16:12:46.5902610Z 
2025-02-24T16:12:46.5902830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5902900Z         if err_msg is None:
2025-02-24T16:12:46.5902980Z             if left.shape != right.shape:
2025-02-24T16:12:46.5903050Z                 raise_assert_detail(
2025-02-24T16:12:46.5903180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5903230Z                 )
2025-02-24T16:12:46.5903280Z     
2025-02-24T16:12:46.5903340Z             diff = 0
2025-02-24T16:12:46.5903440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5903510Z                 # count up differences
2025-02-24T16:12:46.5903660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5903720Z                     diff += 1
2025-02-24T16:12:46.5903910Z     
2025-02-24T16:12:46.5903990Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5904110Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5904260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5904350Z E           AssertionError: Series are different
2025-02-24T16:12:46.5904400Z E           
2025-02-24T16:12:46.5904490Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.5904930Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5905380Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5905820Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.5905830Z 
2025-02-24T16:12:46.5906090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5906470Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T16:12:46.5906470Z 
2025-02-24T16:12:46.5906780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5907010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5907100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5907220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5907330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5907420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5907470Z err_msg = None
2025-02-24T16:12:46.5907480Z 
2025-02-24T16:12:46.5907570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5907750Z         if err_msg is None:
2025-02-24T16:12:46.5907830Z             if left.shape != right.shape:
2025-02-24T16:12:46.5907900Z                 raise_assert_detail(
2025-02-24T16:12:46.5908030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5908080Z                 )
2025-02-24T16:12:46.5908130Z     
2025-02-24T16:12:46.5908190Z             diff = 0
2025-02-24T16:12:46.5908280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5908350Z                 # count up differences
2025-02-24T16:12:46.5908500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5908560Z                     diff += 1
2025-02-24T16:12:46.5908620Z     
2025-02-24T16:12:46.5908690Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5908800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5908950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5909040Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5909100Z E           
2025-02-24T16:12:46.5909200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5909450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5909810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5909820Z 
2025-02-24T16:12:46.5910070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5910080Z 
2025-02-24T16:12:46.5910220Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5910230Z 
2025-02-24T16:12:46.5910410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c27680>
2025-02-24T16:12:46.5910940Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>, attr = 'nu'
2025-02-24T16:12:46.5910960Z 
2025-02-24T16:12:46.5911090Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5911190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5911260Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5911310Z         try:
2025-02-24T16:12:46.5911430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5911500Z         except KeyError:
2025-02-24T16:12:46.5911760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5911980Z     
2025-02-24T16:12:46.5912050Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5912130Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5912270Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5912390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5912460Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5912650Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5912750Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5912760Z 
2025-02-24T16:12:46.5912870Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5913080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5913210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5913370Z     ???
2025-02-24T16:12:46.5913490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5913500Z 
2025-02-24T16:12:46.5913560Z >   ???
2025-02-24T16:12:46.5913670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5913730Z E   
2025-02-24T16:12:46.5913840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5913940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5913990Z E          ...
2025-02-24T16:12:46.5914070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5914310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5914410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5914460Z E          ...
2025-02-24T16:12:46.5914540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5914650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5914730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5914740Z 
2025-02-24T16:12:46.5914810Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5915010Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T16:12:46.5915010Z 
2025-02-24T16:12:46.5915130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5915250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5915330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5915450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5915570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5915650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5915710Z err_msg = None
2025-02-24T16:12:46.5915710Z 
2025-02-24T16:12:46.5915810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5915880Z         if err_msg is None:
2025-02-24T16:12:46.5915960Z             if left.shape != right.shape:
2025-02-24T16:12:46.5916140Z                 raise_assert_detail(
2025-02-24T16:12:46.5916280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5916330Z                 )
2025-02-24T16:12:46.5916380Z     
2025-02-24T16:12:46.5916440Z             diff = 0
2025-02-24T16:12:46.5916540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5916610Z                 # count up differences
2025-02-24T16:12:46.5916760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5916830Z                     diff += 1
2025-02-24T16:12:46.5916880Z     
2025-02-24T16:12:46.5916950Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5917210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5917370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5917600Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5917650Z E           
2025-02-24T16:12:46.5917750Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5918030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5918390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5918390Z 
2025-02-24T16:12:46.5918650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5918660Z 
2025-02-24T16:12:46.5918790Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5918800Z 
2025-02-24T16:12:46.5918990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c25ac0>
2025-02-24T16:12:46.5919120Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>
2025-02-24T16:12:46.5919180Z attr = 'wavelength_cm'
2025-02-24T16:12:46.5919190Z 
2025-02-24T16:12:46.5919300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5919400Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5919470Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5919530Z         try:
2025-02-24T16:12:46.5919760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5919830Z         except KeyError:
2025-02-24T16:12:46.5919940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5920000Z     
2025-02-24T16:12:46.5920070Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5920150Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5920230Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5920350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5920420Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5920610Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5920710Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5920710Z 
2025-02-24T16:12:46.5920820Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5921080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5921320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5921380Z     ???
2025-02-24T16:12:46.5921480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5921490Z 
2025-02-24T16:12:46.5921540Z >   ???
2025-02-24T16:12:46.5921650Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5921710Z E   
2025-02-24T16:12:46.5921820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5921920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5922080Z E          ...
2025-02-24T16:12:46.5922160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5922270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5922370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5922430Z E          ...
2025-02-24T16:12:46.5922500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5922610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5922690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5922700Z 
2025-02-24T16:12:46.5922900Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5923070Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T16:12:46.5923080Z 
2025-02-24T16:12:46.5923650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5923780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5923870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5923980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5924100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5924180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5924240Z err_msg = None
2025-02-24T16:12:46.5924240Z 
2025-02-24T16:12:46.5924330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5924400Z         if err_msg is None:
2025-02-24T16:12:46.5924480Z             if left.shape != right.shape:
2025-02-24T16:12:46.5924550Z                 raise_assert_detail(
2025-02-24T16:12:46.5924680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5924730Z                 )
2025-02-24T16:12:46.5924780Z     
2025-02-24T16:12:46.5924840Z             diff = 0
2025-02-24T16:12:46.5924940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5925000Z                 # count up differences
2025-02-24T16:12:46.5925150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5925210Z                     diff += 1
2025-02-24T16:12:46.5925260Z     
2025-02-24T16:12:46.5925340Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5925450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5925600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5925700Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5925750Z E           
2025-02-24T16:12:46.5925850Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5926700Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5927030Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5927040Z 
2025-02-24T16:12:46.5927300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5927300Z 
2025-02-24T16:12:46.5927450Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5927450Z 
2025-02-24T16:12:46.5927640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c27350>
2025-02-24T16:12:46.5927820Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>, attr = 'f_lu'
2025-02-24T16:12:46.5927830Z 
2025-02-24T16:12:46.5927950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5928050Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5928110Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5928170Z         try:
2025-02-24T16:12:46.5928290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5928360Z         except KeyError:
2025-02-24T16:12:46.5928480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5928670Z     
2025-02-24T16:12:46.5928740Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5928820Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5928970Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5929090Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5929390Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5929480Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5929580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5929590Z 
2025-02-24T16:12:46.5929700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5929800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5929930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5929980Z     ???
2025-02-24T16:12:46.5930080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5930090Z 
2025-02-24T16:12:46.5930140Z >   ???
2025-02-24T16:12:46.5930250Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5930300Z E   
2025-02-24T16:12:46.5930410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5930510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5930570Z E          ...
2025-02-24T16:12:46.5930640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5930750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5930850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5930910Z E          ...
2025-02-24T16:12:46.5930980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5931090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5931180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5931180Z 
2025-02-24T16:12:46.5931260Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5931450Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T16:12:46.5931450Z 
2025-02-24T16:12:46.5931560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5934640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5934760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5934880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5934990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5935070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5935190Z err_msg = None
2025-02-24T16:12:46.5935190Z 
2025-02-24T16:12:46.5935290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5935890Z         if err_msg is None:
2025-02-24T16:12:46.5936390Z             if left.shape != right.shape:
2025-02-24T16:12:46.5937300Z                 raise_assert_detail(
2025-02-24T16:12:46.5937480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5937630Z                 )
2025-02-24T16:12:46.5937690Z     
2025-02-24T16:12:46.5937760Z             diff = 0
2025-02-24T16:12:46.5937860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5937940Z                 # count up differences
2025-02-24T16:12:46.5938100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5938170Z                     diff += 1
2025-02-24T16:12:46.5938220Z     
2025-02-24T16:12:46.5938300Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5938430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5938580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5938890Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5939030Z E           
2025-02-24T16:12:46.5939150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5939520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5939760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5939760Z 
2025-02-24T16:12:46.5940040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5940040Z 
2025-02-24T16:12:46.5940200Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5940210Z 
2025-02-24T16:12:46.5940400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c25fa0>
2025-02-24T16:12:46.5940540Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>
2025-02-24T16:12:46.5940600Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.5940600Z 
2025-02-24T16:12:46.5940730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5940830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5940900Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5940960Z         try:
2025-02-24T16:12:46.5941090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5941160Z         except KeyError:
2025-02-24T16:12:46.5941280Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5941330Z     
2025-02-24T16:12:46.5941410Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5941490Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5941570Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5941690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5941750Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5941830Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5941930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5941980Z             else:
2025-02-24T16:12:46.5942060Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5942150Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5942160Z 
2025-02-24T16:12:46.5942260Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5942370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5942500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5942590Z     ???
2025-02-24T16:12:46.5942690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5942700Z 
2025-02-24T16:12:46.5942750Z >   ???
2025-02-24T16:12:46.5942870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5942920Z E   
2025-02-24T16:12:46.5943040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5943140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5943190Z E          ...
2025-02-24T16:12:46.5943270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5943380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5943480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5943530Z E          ...
2025-02-24T16:12:46.5943620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5943800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5943890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5943940Z 
2025-02-24T16:12:46.5944020Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5944210Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T16:12:46.5944220Z 
2025-02-24T16:12:46.5944340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5944460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5944540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5944660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5944780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5944860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5944920Z err_msg = None
2025-02-24T16:12:46.5944930Z 
2025-02-24T16:12:46.5945020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5945090Z         if err_msg is None:
2025-02-24T16:12:46.5945170Z             if left.shape != right.shape:
2025-02-24T16:12:46.5945240Z                 raise_assert_detail(
2025-02-24T16:12:46.5945370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5945430Z                 )
2025-02-24T16:12:46.5945490Z     
2025-02-24T16:12:46.5945540Z             diff = 0
2025-02-24T16:12:46.5946170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5946550Z                 # count up differences
2025-02-24T16:12:46.5946960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5947140Z                     diff += 1
2025-02-24T16:12:46.5947310Z     
2025-02-24T16:12:46.5947550Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5947860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5948330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5948480Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5948530Z E           
2025-02-24T16:12:46.5948630Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5948860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5949100Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5949110Z 
2025-02-24T16:12:46.5949370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5949380Z 
2025-02-24T16:12:46.5949520Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5949520Z 
2025-02-24T16:12:46.5949710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c25370>
2025-02-24T16:12:46.5949850Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>
2025-02-24T16:12:46.5949910Z attr = 'beta_sobolev'
2025-02-24T16:12:46.5949910Z 
2025-02-24T16:12:46.5950030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5950130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5950200Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5950450Z         try:
2025-02-24T16:12:46.5950570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5950630Z         except KeyError:
2025-02-24T16:12:46.5950840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5950890Z     
2025-02-24T16:12:46.5960450Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5960640Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5960730Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5960850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5960930Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5961010Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5961100Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5961160Z             else:
2025-02-24T16:12:46.5961240Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5961330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5961360Z 
2025-02-24T16:12:46.5961470Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5961570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5961710Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5961760Z     ???
2025-02-24T16:12:46.5961880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5961890Z 
2025-02-24T16:12:46.5961940Z >   ???
2025-02-24T16:12:46.5962060Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5962110Z E   
2025-02-24T16:12:46.5962220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5962320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5962370Z E          ...
2025-02-24T16:12:46.5962450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5962560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5962670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5962720Z E          ...
2025-02-24T16:12:46.5962800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5962990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5963080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5963090Z 
2025-02-24T16:12:46.5963180Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5963370Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T16:12:46.5963370Z 
2025-02-24T16:12:46.5963490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5963610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5963690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5963810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5963920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5964010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5964080Z err_msg = None
2025-02-24T16:12:46.5964080Z 
2025-02-24T16:12:46.5964180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5964240Z         if err_msg is None:
2025-02-24T16:12:46.5964320Z             if left.shape != right.shape:
2025-02-24T16:12:46.5964400Z                 raise_assert_detail(
2025-02-24T16:12:46.5964530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5964580Z                 )
2025-02-24T16:12:46.5964640Z     
2025-02-24T16:12:46.5964690Z             diff = 0
2025-02-24T16:12:46.5964800Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5964880Z                 # count up differences
2025-02-24T16:12:46.5965310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5965380Z                     diff += 1
2025-02-24T16:12:46.5965550Z     
2025-02-24T16:12:46.5965630Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5965750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5965900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5966000Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5966060Z E           
2025-02-24T16:12:46.5966150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5966380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5966610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5966620Z 
2025-02-24T16:12:46.5966900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5966910Z 
2025-02-24T16:12:46.5967050Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5967060Z 
2025-02-24T16:12:46.5967240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119c25e80>
2025-02-24T16:12:46.5967420Z plasma = <tardis.plasma.base.BasePlasma object at 0x17f0ad820>, attr = 'j_blues'
2025-02-24T16:12:46.5967420Z 
2025-02-24T16:12:46.5967540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5967650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5967710Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5967770Z         try:
2025-02-24T16:12:46.5967900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5967970Z         except KeyError:
2025-02-24T16:12:46.5968100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5968150Z     
2025-02-24T16:12:46.5968220Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5968300Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5968380Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5968500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5968570Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5968640Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5968740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5968800Z             else:
2025-02-24T16:12:46.5968870Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5968970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5968970Z 
2025-02-24T16:12:46.5969070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5969170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5969300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5969350Z     ???
2025-02-24T16:12:46.5969450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5969460Z 
2025-02-24T16:12:46.5969510Z >   ???
2025-02-24T16:12:46.5969620Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5969670Z E   
2025-02-24T16:12:46.5969780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5969940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5970420Z E          ...
2025-02-24T16:12:46.5970500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5970610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5970790Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5970850Z E          ...
2025-02-24T16:12:46.5970930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5971040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5971120Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5971120Z 
2025-02-24T16:12:46.5971200Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5971370Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T16:12:46.5971380Z 
2025-02-24T16:12:46.5971490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5971610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5971700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5971820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.5971930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5972020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.5972080Z err_msg = None
2025-02-24T16:12:46.5972080Z 
2025-02-24T16:12:46.5972180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5972240Z         if err_msg is None:
2025-02-24T16:12:46.5972320Z             if left.shape != right.shape:
2025-02-24T16:12:46.5972390Z                 raise_assert_detail(
2025-02-24T16:12:46.5972520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5972580Z                 )
2025-02-24T16:12:46.5972630Z     
2025-02-24T16:12:46.5972690Z             diff = 0
2025-02-24T16:12:46.5972780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5972860Z                 # count up differences
2025-02-24T16:12:46.5973010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5973070Z                     diff += 1
2025-02-24T16:12:46.5973120Z     
2025-02-24T16:12:46.5973200Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5973310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5973460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5973560Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.5973620Z E           
2025-02-24T16:12:46.5973710Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.5973940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5974220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5974240Z 
2025-02-24T16:12:46.5974510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5974520Z 
2025-02-24T16:12:46.5974690Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.5974700Z 
2025-02-24T16:12:46.5974880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5bd10>
2025-02-24T16:12:46.5975150Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>, attr = 'lines'
2025-02-24T16:12:46.5975150Z 
2025-02-24T16:12:46.5975270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5975430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5975510Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5975560Z         try:
2025-02-24T16:12:46.5975680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5975740Z         except KeyError:
2025-02-24T16:12:46.5975850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5975910Z     
2025-02-24T16:12:46.5975970Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5976060Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5976120Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5976250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5976320Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5976390Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5976490Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5976540Z             else:
2025-02-24T16:12:46.5976630Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.5976720Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.5976730Z 
2025-02-24T16:12:46.5976830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.5976930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5977110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.5977170Z     ???
2025-02-24T16:12:46.5977260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5977270Z 
2025-02-24T16:12:46.5977320Z >   ???
2025-02-24T16:12:46.5977430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.5977480Z E   
2025-02-24T16:12:46.5977590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.5977690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5977750Z E          ...
2025-02-24T16:12:46.5977820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5977930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5978040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.5978090Z E          ...
2025-02-24T16:12:46.5978170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.5978280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.5978370Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.5978370Z 
2025-02-24T16:12:46.5978450Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.5978670Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T16:12:46.5978670Z 
2025-02-24T16:12:46.5978850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5a000>
2025-02-24T16:12:46.5978980Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>
2025-02-24T16:12:46.5979060Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.5979070Z 
2025-02-24T16:12:46.5979180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5979280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5979350Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5979400Z         try:
2025-02-24T16:12:46.5979520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5979580Z         except KeyError:
2025-02-24T16:12:46.5979710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5979760Z     
2025-02-24T16:12:46.5979820Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5979900Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5979970Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5980410Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5980480Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5982280Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5982560Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5982570Z 
2025-02-24T16:12:46.5983320Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5983530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5983540Z 
2025-02-24T16:12:46.5983660Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5983730Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5983840Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5983900Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5984030Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.5984100Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.5984200Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.5984280Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.5984330Z err_msg = None
2025-02-24T16:12:46.5984340Z 
2025-02-24T16:12:46.5984430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.5984500Z         if err_msg is None:
2025-02-24T16:12:46.5984590Z             if left.shape != right.shape:
2025-02-24T16:12:46.5984660Z                 raise_assert_detail(
2025-02-24T16:12:46.5984790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.5984840Z                 )
2025-02-24T16:12:46.5991520Z     
2025-02-24T16:12:46.5991930Z             diff = 0
2025-02-24T16:12:46.5992210Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.5992810Z                 # count up differences
2025-02-24T16:12:46.5993280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.5993470Z                     diff += 1
2025-02-24T16:12:46.5993650Z     
2025-02-24T16:12:46.5993860Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.5994180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.5994570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.5994820Z E           AssertionError: Series are different
2025-02-24T16:12:46.5994980Z E           
2025-02-24T16:12:46.5995510Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.5995940Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.5996260Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5996560Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.5996570Z 
2025-02-24T16:12:46.5996840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.5997300Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T16:12:46.5997400Z 
2025-02-24T16:12:46.5997590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5a270>
2025-02-24T16:12:46.5997730Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>
2025-02-24T16:12:46.5997810Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.5997810Z 
2025-02-24T16:12:46.5997930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.5998030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.5998100Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.5998160Z         try:
2025-02-24T16:12:46.5998290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.5998350Z         except KeyError:
2025-02-24T16:12:46.5998490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.5998560Z     
2025-02-24T16:12:46.5998650Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.5998740Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.5998840Z             if attr == "selected_atoms":
2025-02-24T16:12:46.5998960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.5999030Z             elif actual.ndim == 1:
2025-02-24T16:12:46.5999110Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.5999210Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.5999210Z 
2025-02-24T16:12:46.5999310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.5999420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.5999420Z 
2025-02-24T16:12:46.5999550Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.5999630Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.5999770Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.5999840Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.5999980Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6000050Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6000140Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6000210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6000270Z err_msg = None
2025-02-24T16:12:46.6000270Z 
2025-02-24T16:12:46.6000380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6000450Z         if err_msg is None:
2025-02-24T16:12:46.6000530Z             if left.shape != right.shape:
2025-02-24T16:12:46.6000600Z                 raise_assert_detail(
2025-02-24T16:12:46.6000720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6000800Z                 )
2025-02-24T16:12:46.6000850Z     
2025-02-24T16:12:46.6000910Z             diff = 0
2025-02-24T16:12:46.6001000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6001080Z                 # count up differences
2025-02-24T16:12:46.6001230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6001290Z                     diff += 1
2025-02-24T16:12:46.6001500Z     
2025-02-24T16:12:46.6001570Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6001690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6001840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6001920Z E           AssertionError: Series are different
2025-02-24T16:12:46.6001980Z E           
2025-02-24T16:12:46.6002060Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6012770Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6013520Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6013840Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6013860Z 
2025-02-24T16:12:46.6014130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6014310Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T16:12:46.6014310Z 
2025-02-24T16:12:46.6014430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6014550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6014640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6014760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6014880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6014960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6015030Z err_msg = None
2025-02-24T16:12:46.6015030Z 
2025-02-24T16:12:46.6015130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6015190Z         if err_msg is None:
2025-02-24T16:12:46.6015270Z             if left.shape != right.shape:
2025-02-24T16:12:46.6015340Z                 raise_assert_detail(
2025-02-24T16:12:46.6015490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6015560Z                 )
2025-02-24T16:12:46.6015620Z     
2025-02-24T16:12:46.6015680Z             diff = 0
2025-02-24T16:12:46.6015780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6015860Z                 # count up differences
2025-02-24T16:12:46.6016010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6016080Z                     diff += 1
2025-02-24T16:12:46.6016130Z     
2025-02-24T16:12:46.6016210Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6016330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6016480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6016590Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6016650Z E           
2025-02-24T16:12:46.6016750Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6016970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6017300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6017360Z 
2025-02-24T16:12:46.6017620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6017620Z 
2025-02-24T16:12:46.6017770Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6017770Z 
2025-02-24T16:12:46.6017960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b59d60>
2025-02-24T16:12:46.6018120Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>, attr = 'nu'
2025-02-24T16:12:46.6018120Z 
2025-02-24T16:12:46.6018240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6018340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6018410Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6018460Z         try:
2025-02-24T16:12:46.6018590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6018660Z         except KeyError:
2025-02-24T16:12:46.6018780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6018830Z     
2025-02-24T16:12:46.6018900Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6019050Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6019130Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6019250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6019320Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6019390Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6019490Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6019490Z 
2025-02-24T16:12:46.6019600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6019710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6019830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6019890Z     ???
2025-02-24T16:12:46.6019990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6020000Z 
2025-02-24T16:12:46.6020060Z >   ???
2025-02-24T16:12:46.6020170Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6020230Z E   
2025-02-24T16:12:46.6020390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6020490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6021130Z E          ...
2025-02-24T16:12:46.6021250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6021370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6021470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6021530Z E          ...
2025-02-24T16:12:46.6021610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6021720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6021810Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6021810Z 
2025-02-24T16:12:46.6021880Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6022080Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T16:12:46.6022080Z 
2025-02-24T16:12:46.6022200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6022320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6022410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6022530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6022920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6023020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6023260Z err_msg = None
2025-02-24T16:12:46.6023260Z 
2025-02-24T16:12:46.6023350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6023410Z         if err_msg is None:
2025-02-24T16:12:46.6023500Z             if left.shape != right.shape:
2025-02-24T16:12:46.6023560Z                 raise_assert_detail(
2025-02-24T16:12:46.6023690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6023740Z                 )
2025-02-24T16:12:46.6023790Z     
2025-02-24T16:12:46.6023850Z             diff = 0
2025-02-24T16:12:46.6023940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6024020Z                 # count up differences
2025-02-24T16:12:46.6024160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6024220Z                     diff += 1
2025-02-24T16:12:46.6024280Z     
2025-02-24T16:12:46.6024350Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6024470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6024620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6024720Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6024770Z E           
2025-02-24T16:12:46.6024870Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6025090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6025320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6025330Z 
2025-02-24T16:12:46.6025590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6025590Z 
2025-02-24T16:12:46.6025740Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6025740Z 
2025-02-24T16:12:46.6025920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5b080>
2025-02-24T16:12:46.6026060Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>
2025-02-24T16:12:46.6026140Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6026140Z 
2025-02-24T16:12:46.6026260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6026370Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6026430Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6026490Z         try:
2025-02-24T16:12:46.6026620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6026680Z         except KeyError:
2025-02-24T16:12:46.6026820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6026880Z     
2025-02-24T16:12:46.6026960Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6027030Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6027110Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6027230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6027300Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6027370Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6027480Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6027490Z 
2025-02-24T16:12:46.6027700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6027810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6028020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6028070Z     ???
2025-02-24T16:12:46.6028170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6028170Z 
2025-02-24T16:12:46.6028230Z >   ???
2025-02-24T16:12:46.6028330Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6028390Z E   
2025-02-24T16:12:46.6028500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6028600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6028650Z E          ...
2025-02-24T16:12:46.6028730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6028840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6028940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6028990Z E          ...
2025-02-24T16:12:46.6029070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6029180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6029270Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6029270Z 
2025-02-24T16:12:46.6029340Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6029510Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T16:12:46.6029510Z 
2025-02-24T16:12:46.6029630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6029740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6029820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6029940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6030060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6030140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6030200Z err_msg = None
2025-02-24T16:12:46.6030200Z 
2025-02-24T16:12:46.6030290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6030350Z         if err_msg is None:
2025-02-24T16:12:46.6030440Z             if left.shape != right.shape:
2025-02-24T16:12:46.6030500Z                 raise_assert_detail(
2025-02-24T16:12:46.6030630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6030680Z                 )
2025-02-24T16:12:46.6030730Z     
2025-02-24T16:12:46.6030790Z             diff = 0
2025-02-24T16:12:46.6030880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6030950Z                 # count up differences
2025-02-24T16:12:46.6031090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6031170Z                     diff += 1
2025-02-24T16:12:46.6031220Z     
2025-02-24T16:12:46.6031290Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6031410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6031560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6031660Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6031710Z E           
2025-02-24T16:12:46.6031810Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6032030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6032310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6032370Z 
2025-02-24T16:12:46.6032630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6032630Z 
2025-02-24T16:12:46.6032770Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6032780Z 
2025-02-24T16:12:46.6032950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5b6b0>
2025-02-24T16:12:46.6033120Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>, attr = 'f_lu'
2025-02-24T16:12:46.6033130Z 
2025-02-24T16:12:46.6033240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6033340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6033410Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6033460Z         try:
2025-02-24T16:12:46.6033590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6033660Z         except KeyError:
2025-02-24T16:12:46.6033770Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6033830Z     
2025-02-24T16:12:46.6033890Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6033980Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6034050Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6034160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6034230Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6034310Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6034400Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6034410Z 
2025-02-24T16:12:46.6034510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6034610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6034740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6034790Z     ???
2025-02-24T16:12:46.6034890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6034890Z 
2025-02-24T16:12:46.6034940Z >   ???
2025-02-24T16:12:46.6035050Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6035100Z E   
2025-02-24T16:12:46.6035210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6035300Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6035360Z E          ...
2025-02-24T16:12:46.6035440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6035550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6035650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6035710Z E          ...
2025-02-24T16:12:46.6035790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6035900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6035990Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6035990Z 
2025-02-24T16:12:46.6036060Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6042970Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T16:12:46.6042990Z 
2025-02-24T16:12:46.6043120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6043250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6043330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6043450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6043690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6043780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6043890Z err_msg = None
2025-02-24T16:12:46.6043890Z 
2025-02-24T16:12:46.6043990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6044050Z         if err_msg is None:
2025-02-24T16:12:46.6044130Z             if left.shape != right.shape:
2025-02-24T16:12:46.6044200Z                 raise_assert_detail(
2025-02-24T16:12:46.6044330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6044380Z                 )
2025-02-24T16:12:46.6044430Z     
2025-02-24T16:12:46.6044490Z             diff = 0
2025-02-24T16:12:46.6044580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6044660Z                 # count up differences
2025-02-24T16:12:46.6044800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6044870Z                     diff += 1
2025-02-24T16:12:46.6044920Z     
2025-02-24T16:12:46.6044990Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6045180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6045340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6045430Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6045490Z E           
2025-02-24T16:12:46.6045590Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6045810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6046040Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6046050Z 
2025-02-24T16:12:46.6046300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6046300Z 
2025-02-24T16:12:46.6046450Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6046450Z 
2025-02-24T16:12:46.6047060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b597c0>
2025-02-24T16:12:46.6047550Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>
2025-02-24T16:12:46.6047740Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6047750Z 
2025-02-24T16:12:46.6048070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6048350Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6048550Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6048720Z         try:
2025-02-24T16:12:46.6049050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6049240Z         except KeyError:
2025-02-24T16:12:46.6049550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6049720Z     
2025-02-24T16:12:46.6049920Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6050140Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6050340Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6050640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6050840Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6051050Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6051300Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6051470Z             else:
2025-02-24T16:12:46.6053510Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6053850Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6054900Z 
2025-02-24T16:12:46.6055030Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6055150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6055280Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6055340Z     ???
2025-02-24T16:12:46.6055440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6055440Z 
2025-02-24T16:12:46.6055490Z >   ???
2025-02-24T16:12:46.6055610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6055660Z E   
2025-02-24T16:12:46.6055770Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6055870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6055930Z E          ...
2025-02-24T16:12:46.6056020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6056130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6057180Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6057260Z E          ...
2025-02-24T16:12:46.6057340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6057460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6057550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6057560Z 
2025-02-24T16:12:46.6057630Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6057820Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T16:12:46.6057830Z 
2025-02-24T16:12:46.6057950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6058070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6058160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6058280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6058400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6058480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6058540Z err_msg = None
2025-02-24T16:12:46.6058540Z 
2025-02-24T16:12:46.6058640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6058700Z         if err_msg is None:
2025-02-24T16:12:46.6058780Z             if left.shape != right.shape:
2025-02-24T16:12:46.6058850Z                 raise_assert_detail(
2025-02-24T16:12:46.6059180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6059240Z                 )
2025-02-24T16:12:46.6059290Z     
2025-02-24T16:12:46.6059350Z             diff = 0
2025-02-24T16:12:46.6059450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6059530Z                 # count up differences
2025-02-24T16:12:46.6059680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6059740Z                     diff += 1
2025-02-24T16:12:46.6059790Z     
2025-02-24T16:12:46.6059860Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6059990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6060130Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6060230Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6060280Z E           
2025-02-24T16:12:46.6060380Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6060610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6061070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6061070Z 
2025-02-24T16:12:46.6061350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6061360Z 
2025-02-24T16:12:46.6061510Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6061510Z 
2025-02-24T16:12:46.6061700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5a810>
2025-02-24T16:12:46.6061850Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>
2025-02-24T16:12:46.6061920Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6061920Z 
2025-02-24T16:12:46.6062040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6062140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6062220Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6062270Z         try:
2025-02-24T16:12:46.6062390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6062460Z         except KeyError:
2025-02-24T16:12:46.6062580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6062630Z     
2025-02-24T16:12:46.6062700Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6062780Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6062850Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6062960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6063030Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6063110Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6063210Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6063270Z             else:
2025-02-24T16:12:46.6063350Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6063440Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6063450Z 
2025-02-24T16:12:46.6063570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6063670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6063800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6063860Z     ???
2025-02-24T16:12:46.6063980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6063980Z 
2025-02-24T16:12:46.6064040Z >   ???
2025-02-24T16:12:46.6064140Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6064200Z E   
2025-02-24T16:12:46.6064310Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6064410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6064470Z E          ...
2025-02-24T16:12:46.6064540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6064650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6064760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6064820Z E          ...
2025-02-24T16:12:46.6064900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6065010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6065100Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6065100Z 
2025-02-24T16:12:46.6065170Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6065350Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T16:12:46.6065430Z 
2025-02-24T16:12:46.6065560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6065690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6065850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6065970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6066080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6066170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6066220Z err_msg = None
2025-02-24T16:12:46.6066220Z 
2025-02-24T16:12:46.6066320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6066380Z         if err_msg is None:
2025-02-24T16:12:46.6066460Z             if left.shape != right.shape:
2025-02-24T16:12:46.6066530Z                 raise_assert_detail(
2025-02-24T16:12:46.6066660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6066710Z                 )
2025-02-24T16:12:46.6066760Z     
2025-02-24T16:12:46.6066820Z             diff = 0
2025-02-24T16:12:46.6066910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6066990Z                 # count up differences
2025-02-24T16:12:46.6067130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6067200Z                     diff += 1
2025-02-24T16:12:46.6067250Z     
2025-02-24T16:12:46.6067320Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6067440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6067590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6067680Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6067740Z E           
2025-02-24T16:12:46.6067840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6068060Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6068280Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6068290Z 
2025-02-24T16:12:46.6068840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6069020Z 
2025-02-24T16:12:46.6069230Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6069240Z 
2025-02-24T16:12:46.6069590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119b5a690>
2025-02-24T16:12:46.6069780Z plasma = <tardis.plasma.base.BasePlasma object at 0x176497530>, attr = 'j_blues'
2025-02-24T16:12:46.6069780Z 
2025-02-24T16:12:46.6069900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6070000Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6070070Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6070120Z         try:
2025-02-24T16:12:46.6070250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6070310Z         except KeyError:
2025-02-24T16:12:46.6070430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6070490Z     
2025-02-24T16:12:46.6070550Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6070640Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6070850Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6070970Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6071100Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6071170Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6071270Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6071320Z             else:
2025-02-24T16:12:46.6071400Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6071490Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6071500Z 
2025-02-24T16:12:46.6071610Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6071700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6071830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6071960Z     ???
2025-02-24T16:12:46.6072070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6072070Z 
2025-02-24T16:12:46.6072130Z >   ???
2025-02-24T16:12:46.6072230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6072290Z E   
2025-02-24T16:12:46.6072400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6072490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6072550Z E          ...
2025-02-24T16:12:46.6074130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6074270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6074360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6074420Z E          ...
2025-02-24T16:12:46.6074500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6074600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6074690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6074700Z 
2025-02-24T16:12:46.6074770Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6074960Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T16:12:46.6074970Z 
2025-02-24T16:12:46.6075080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6075200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6075290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6075400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6075540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6075630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6075690Z err_msg = None
2025-02-24T16:12:46.6075690Z 
2025-02-24T16:12:46.6075780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6075850Z         if err_msg is None:
2025-02-24T16:12:46.6075930Z             if left.shape != right.shape:
2025-02-24T16:12:46.6076000Z                 raise_assert_detail(
2025-02-24T16:12:46.6076130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6076180Z                 )
2025-02-24T16:12:46.6076230Z     
2025-02-24T16:12:46.6076280Z             diff = 0
2025-02-24T16:12:46.6076380Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6076450Z                 # count up differences
2025-02-24T16:12:46.6076600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6076660Z                     diff += 1
2025-02-24T16:12:46.6076710Z     
2025-02-24T16:12:46.6076780Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6077400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6077930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6078890Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6079060Z E           
2025-02-24T16:12:46.6079600Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6080220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6081360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6081390Z 
2025-02-24T16:12:46.6081650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6081660Z 
2025-02-24T16:12:46.6081800Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6081820Z 
2025-02-24T16:12:46.6082000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e15340>
2025-02-24T16:12:46.6082170Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>, attr = 'lines'
2025-02-24T16:12:46.6082170Z 
2025-02-24T16:12:46.6082290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6082380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6082450Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6082510Z         try:
2025-02-24T16:12:46.6082630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6082690Z         except KeyError:
2025-02-24T16:12:46.6082810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6082870Z     
2025-02-24T16:12:46.6082940Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6083020Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6083090Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6083210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6083280Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6083350Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6083450Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6083500Z             else:
2025-02-24T16:12:46.6083580Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6083680Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6083680Z 
2025-02-24T16:12:46.6083780Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6083880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6084010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6084070Z     ???
2025-02-24T16:12:46.6084170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6084170Z 
2025-02-24T16:12:46.6084230Z >   ???
2025-02-24T16:12:46.6084330Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6084390Z E   
2025-02-24T16:12:46.6084500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6084590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6084650Z E          ...
2025-02-24T16:12:46.6084720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6084830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6084920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6084980Z E          ...
2025-02-24T16:12:46.6085060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6085350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6085440Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6085520Z 
2025-02-24T16:12:46.6085590Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6085910Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T16:12:46.6085920Z 
2025-02-24T16:12:46.6086100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e16750>
2025-02-24T16:12:46.6086230Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>
2025-02-24T16:12:46.6086310Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6086310Z 
2025-02-24T16:12:46.6086420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6086520Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6086580Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6086640Z         try:
2025-02-24T16:12:46.6086760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6086820Z         except KeyError:
2025-02-24T16:12:46.6086940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6086990Z     
2025-02-24T16:12:46.6087070Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6087150Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6087220Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6087340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6087400Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6087480Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6087570Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6087570Z 
2025-02-24T16:12:46.6087680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6087780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6087780Z 
2025-02-24T16:12:46.6087900Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6087970Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6088070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6088140Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6088260Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6088330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6088430Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6088490Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6088550Z err_msg = None
2025-02-24T16:12:46.6088550Z 
2025-02-24T16:12:46.6088650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6088710Z         if err_msg is None:
2025-02-24T16:12:46.6088790Z             if left.shape != right.shape:
2025-02-24T16:12:46.6088850Z                 raise_assert_detail(
2025-02-24T16:12:46.6088980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6089030Z                 )
2025-02-24T16:12:46.6089090Z     
2025-02-24T16:12:46.6089140Z             diff = 0
2025-02-24T16:12:46.6089240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6089310Z                 # count up differences
2025-02-24T16:12:46.6089450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6089520Z                     diff += 1
2025-02-24T16:12:46.6089570Z     
2025-02-24T16:12:46.6089640Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6089760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6089900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6089990Z E           AssertionError: Series are different
2025-02-24T16:12:46.6090100Z E           
2025-02-24T16:12:46.6090200Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6090540Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6091010Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6091350Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6091370Z 
2025-02-24T16:12:46.6091640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6091880Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T16:12:46.6091880Z 
2025-02-24T16:12:46.6092070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e140b0>
2025-02-24T16:12:46.6092210Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>
2025-02-24T16:12:46.6092280Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6092280Z 
2025-02-24T16:12:46.6092400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6092500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6092570Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6092630Z         try:
2025-02-24T16:12:46.6092760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6092820Z         except KeyError:
2025-02-24T16:12:46.6092940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6093000Z     
2025-02-24T16:12:46.6093060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6093140Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6093210Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6093330Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6093400Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6093480Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6093580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6093580Z 
2025-02-24T16:12:46.6093690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6093870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6093890Z 
2025-02-24T16:12:46.6094060Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6094130Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6094240Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6094300Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6094430Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6094500Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6094590Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6094660Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6094720Z err_msg = None
2025-02-24T16:12:46.6094860Z 
2025-02-24T16:12:46.6095300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6095370Z         if err_msg is None:
2025-02-24T16:12:46.6095550Z             if left.shape != right.shape:
2025-02-24T16:12:46.6095630Z                 raise_assert_detail(
2025-02-24T16:12:46.6095750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6095810Z                 )
2025-02-24T16:12:46.6095860Z     
2025-02-24T16:12:46.6095920Z             diff = 0
2025-02-24T16:12:46.6096010Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6096080Z                 # count up differences
2025-02-24T16:12:46.6096230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6096290Z                     diff += 1
2025-02-24T16:12:46.6096350Z     
2025-02-24T16:12:46.6096420Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6096770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6096920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6097020Z E           AssertionError: Series are different
2025-02-24T16:12:46.6097070Z E           
2025-02-24T16:12:46.6097160Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6097480Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6097800Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6098130Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6098130Z 
2025-02-24T16:12:46.6098390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6098570Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T16:12:46.6098580Z 
2025-02-24T16:12:46.6098700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6098810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6098900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6099020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6099130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6099220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6099280Z err_msg = None
2025-02-24T16:12:46.6099280Z 
2025-02-24T16:12:46.6099370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6099440Z         if err_msg is None:
2025-02-24T16:12:46.6099520Z             if left.shape != right.shape:
2025-02-24T16:12:46.6099580Z                 raise_assert_detail(
2025-02-24T16:12:46.6099710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6100060Z                 )
2025-02-24T16:12:46.6100110Z     
2025-02-24T16:12:46.6100160Z             diff = 0
2025-02-24T16:12:46.6100420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6100490Z                 # count up differences
2025-02-24T16:12:46.6100630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6100700Z                     diff += 1
2025-02-24T16:12:46.6100740Z     
2025-02-24T16:12:46.6100820Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6100930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6101080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6101170Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6101230Z E           
2025-02-24T16:12:46.6101320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6101550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6101780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6101790Z 
2025-02-24T16:12:46.6102040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6102040Z 
2025-02-24T16:12:46.6102180Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6102190Z 
2025-02-24T16:12:46.6102370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e17290>
2025-02-24T16:12:46.6102540Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>, attr = 'nu'
2025-02-24T16:12:46.6102550Z 
2025-02-24T16:12:46.6102660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6102760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6102830Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6102880Z         try:
2025-02-24T16:12:46.6103000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6103060Z         except KeyError:
2025-02-24T16:12:46.6103190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6103240Z     
2025-02-24T16:12:46.6103310Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6103380Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6103460Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6103580Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6103650Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6103730Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6103820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6103830Z 
2025-02-24T16:12:46.6103930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6104030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6104160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6104220Z     ???
2025-02-24T16:12:46.6104310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6104320Z 
2025-02-24T16:12:46.6104370Z >   ???
2025-02-24T16:12:46.6104470Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6104530Z E   
2025-02-24T16:12:46.6104640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6104810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6104860Z E          ...
2025-02-24T16:12:46.6104990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6105110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6105200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6105260Z E          ...
2025-02-24T16:12:46.6105340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6105440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6105530Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6105530Z 
2025-02-24T16:12:46.6105600Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6105820Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T16:12:46.6105820Z 
2025-02-24T16:12:46.6105930Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6106050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6106140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6106250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6106360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6106450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6106500Z err_msg = None
2025-02-24T16:12:46.6106500Z 
2025-02-24T16:12:46.6106600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6106660Z         if err_msg is None:
2025-02-24T16:12:46.6106740Z             if left.shape != right.shape:
2025-02-24T16:12:46.6106800Z                 raise_assert_detail(
2025-02-24T16:12:46.6106930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6106990Z                 )
2025-02-24T16:12:46.6107040Z     
2025-02-24T16:12:46.6107100Z             diff = 0
2025-02-24T16:12:46.6107190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6115990Z                 # count up differences
2025-02-24T16:12:46.6116400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6116480Z                     diff += 1
2025-02-24T16:12:46.6116530Z     
2025-02-24T16:12:46.6116610Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6116730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6116880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6116980Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6117040Z E           
2025-02-24T16:12:46.6117140Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6117370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6117610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6117610Z 
2025-02-24T16:12:46.6117880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6117880Z 
2025-02-24T16:12:46.6118030Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6118220Z 
2025-02-24T16:12:46.6118410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e17350>
2025-02-24T16:12:46.6118550Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>
2025-02-24T16:12:46.6118680Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6118690Z 
2025-02-24T16:12:46.6118810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6118910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6118980Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6119030Z         try:
2025-02-24T16:12:46.6119160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6119220Z         except KeyError:
2025-02-24T16:12:46.6119340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6119390Z     
2025-02-24T16:12:46.6119470Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6119560Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6119640Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6119760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6119840Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6119910Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6120010Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6120010Z 
2025-02-24T16:12:46.6120120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6120220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6120350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6120400Z     ???
2025-02-24T16:12:46.6120500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6120510Z 
2025-02-24T16:12:46.6120560Z >   ???
2025-02-24T16:12:46.6120670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6120720Z E   
2025-02-24T16:12:46.6120830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6120930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6120980Z E          ...
2025-02-24T16:12:46.6121060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6121170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6121260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6121320Z E          ...
2025-02-24T16:12:46.6121390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6121500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6121590Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6121590Z 
2025-02-24T16:12:46.6121660Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6121850Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T16:12:46.6121850Z 
2025-02-24T16:12:46.6121970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6122420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6122520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6122640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6122760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6122840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6122900Z err_msg = None
2025-02-24T16:12:46.6122900Z 
2025-02-24T16:12:46.6123910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6124000Z         if err_msg is None:
2025-02-24T16:12:46.6124080Z             if left.shape != right.shape:
2025-02-24T16:12:46.6124150Z                 raise_assert_detail(
2025-02-24T16:12:46.6124400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6124450Z                 )
2025-02-24T16:12:46.6124510Z     
2025-02-24T16:12:46.6124620Z             diff = 0
2025-02-24T16:12:46.6124720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6124790Z                 # count up differences
2025-02-24T16:12:46.6124930Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6125000Z                     diff += 1
2025-02-24T16:12:46.6125050Z     
2025-02-24T16:12:46.6125120Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6125240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6125390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6125480Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6125530Z E           
2025-02-24T16:12:46.6125630Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6125980Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6126250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6126250Z 
2025-02-24T16:12:46.6126510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6126510Z 
2025-02-24T16:12:46.6126660Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6126670Z 
2025-02-24T16:12:46.6126850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e17410>
2025-02-24T16:12:46.6127020Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>, attr = 'f_lu'
2025-02-24T16:12:46.6127030Z 
2025-02-24T16:12:46.6127140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6127250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6127310Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6127370Z         try:
2025-02-24T16:12:46.6127490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6127560Z         except KeyError:
2025-02-24T16:12:46.6127680Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6127730Z     
2025-02-24T16:12:46.6127800Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6127880Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6127960Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6128070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6128150Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6128240Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6128340Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6128340Z 
2025-02-24T16:12:46.6128450Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6128540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6128670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6128720Z     ???
2025-02-24T16:12:46.6128830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6128830Z 
2025-02-24T16:12:46.6128880Z >   ???
2025-02-24T16:12:46.6128990Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6129040Z E   
2025-02-24T16:12:46.6129320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6129420Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6129650Z E          ...
2025-02-24T16:12:46.6129730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6129840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6129940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6129990Z E          ...
2025-02-24T16:12:46.6130600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6131010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6131250Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6131270Z 
2025-02-24T16:12:46.6131480Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6132030Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T16:12:46.6132040Z 
2025-02-24T16:12:46.6132360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6132670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6132900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6134340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6134520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6134610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6134670Z err_msg = None
2025-02-24T16:12:46.6134680Z 
2025-02-24T16:12:46.6134770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6134830Z         if err_msg is None:
2025-02-24T16:12:46.6134920Z             if left.shape != right.shape:
2025-02-24T16:12:46.6134990Z                 raise_assert_detail(
2025-02-24T16:12:46.6135120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6135180Z                 )
2025-02-24T16:12:46.6135230Z     
2025-02-24T16:12:46.6135290Z             diff = 0
2025-02-24T16:12:46.6135390Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6135460Z                 # count up differences
2025-02-24T16:12:46.6135610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6135670Z                     diff += 1
2025-02-24T16:12:46.6135720Z     
2025-02-24T16:12:46.6135790Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6136080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6136720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6136820Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6136880Z E           
2025-02-24T16:12:46.6136970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6137200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6137430Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6137440Z 
2025-02-24T16:12:46.6137700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6137700Z 
2025-02-24T16:12:46.6137850Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6138000Z 
2025-02-24T16:12:46.6138520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e17b90>
2025-02-24T16:12:46.6138820Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>
2025-02-24T16:12:46.6138890Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6138890Z 
2025-02-24T16:12:46.6139020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6139110Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6139180Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6139240Z         try:
2025-02-24T16:12:46.6139360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6139420Z         except KeyError:
2025-02-24T16:12:46.6139540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6139590Z     
2025-02-24T16:12:46.6139660Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6139740Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6139820Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6139930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6140000Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6140080Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6140180Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6140230Z             else:
2025-02-24T16:12:46.6140310Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6140400Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6140400Z 
2025-02-24T16:12:46.6140510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6140610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6140730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6140790Z     ???
2025-02-24T16:12:46.6140890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6140890Z 
2025-02-24T16:12:46.6140940Z >   ???
2025-02-24T16:12:46.6141070Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6141120Z E   
2025-02-24T16:12:46.6141230Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6141330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6141390Z E          ...
2025-02-24T16:12:46.6141470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6141580Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6141680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6141730Z E          ...
2025-02-24T16:12:46.6141810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6141920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6142000Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6142010Z 
2025-02-24T16:12:46.6142080Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6142280Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T16:12:46.6142290Z 
2025-02-24T16:12:46.6142410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6142530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6142620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6142740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6142850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6142930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6142990Z err_msg = None
2025-02-24T16:12:46.6142990Z 
2025-02-24T16:12:46.6143080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6143230Z         if err_msg is None:
2025-02-24T16:12:46.6143310Z             if left.shape != right.shape:
2025-02-24T16:12:46.6143380Z                 raise_assert_detail(
2025-02-24T16:12:46.6143550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6143610Z                 )
2025-02-24T16:12:46.6143660Z     
2025-02-24T16:12:46.6143710Z             diff = 0
2025-02-24T16:12:46.6143810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6143880Z                 # count up differences
2025-02-24T16:12:46.6144350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6144430Z                     diff += 1
2025-02-24T16:12:46.6144480Z     
2025-02-24T16:12:46.6144550Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6144670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6144820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6144920Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6144980Z E           
2025-02-24T16:12:46.6145080Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6145310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6145530Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6145540Z 
2025-02-24T16:12:46.6145800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6145800Z 
2025-02-24T16:12:46.6145950Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6145950Z 
2025-02-24T16:12:46.6146140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e17c50>
2025-02-24T16:12:46.6146270Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>
2025-02-24T16:12:46.6146330Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6146330Z 
2025-02-24T16:12:46.6146450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6146570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6146650Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6146710Z         try:
2025-02-24T16:12:46.6146830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6146890Z         except KeyError:
2025-02-24T16:12:46.6147010Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6147060Z     
2025-02-24T16:12:46.6147140Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6147220Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6147290Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6147410Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6147470Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6147550Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6147640Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6147700Z             else:
2025-02-24T16:12:46.6147770Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6147860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6147870Z 
2025-02-24T16:12:46.6147970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6148070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6148310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6148360Z     ???
2025-02-24T16:12:46.6148520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6148530Z 
2025-02-24T16:12:46.6148580Z >   ???
2025-02-24T16:12:46.6148680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6148740Z E   
2025-02-24T16:12:46.6148840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6148950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6149000Z E          ...
2025-02-24T16:12:46.6149070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6149180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6149280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6149340Z E          ...
2025-02-24T16:12:46.6149410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6149520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6149610Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6149610Z 
2025-02-24T16:12:46.6149680Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6149880Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T16:12:46.6149880Z 
2025-02-24T16:12:46.6150000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6150110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6150200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6150310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6150420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6150510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6150570Z err_msg = None
2025-02-24T16:12:46.6150580Z 
2025-02-24T16:12:46.6150670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6150730Z         if err_msg is None:
2025-02-24T16:12:46.6150820Z             if left.shape != right.shape:
2025-02-24T16:12:46.6151400Z                 raise_assert_detail(
2025-02-24T16:12:46.6152280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6153200Z                 )
2025-02-24T16:12:46.6153390Z     
2025-02-24T16:12:46.6153880Z             diff = 0
2025-02-24T16:12:46.6154130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6154340Z                 # count up differences
2025-02-24T16:12:46.6154730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6154920Z                     diff += 1
2025-02-24T16:12:46.6155100Z     
2025-02-24T16:12:46.6155320Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6155630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6156030Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6156290Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6156450Z E           
2025-02-24T16:12:46.6156720Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6158580Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6159260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6160590Z 
2025-02-24T16:12:46.6161320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6161330Z 
2025-02-24T16:12:46.6161720Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6161740Z 
2025-02-24T16:12:46.6162370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119e17dd0>
2025-02-24T16:12:46.6162890Z plasma = <tardis.plasma.base.BasePlasma object at 0x16ccafce0>, attr = 'j_blues'
2025-02-24T16:12:46.6162900Z 
2025-02-24T16:12:46.6163220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6163490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6163690Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6164080Z         try:
2025-02-24T16:12:46.6164310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6164380Z         except KeyError:
2025-02-24T16:12:46.6164520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6164580Z     
2025-02-24T16:12:46.6164650Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6164730Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6164800Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6164920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6164990Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6165070Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6165160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6165220Z             else:
2025-02-24T16:12:46.6165300Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6165390Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6165400Z 
2025-02-24T16:12:46.6165510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6165610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6165750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6165800Z     ???
2025-02-24T16:12:46.6165900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6165900Z 
2025-02-24T16:12:46.6165950Z >   ???
2025-02-24T16:12:46.6166060Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6166110Z E   
2025-02-24T16:12:46.6166220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6166320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6166470Z E          ...
2025-02-24T16:12:46.6166600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6166720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6166830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6166880Z E          ...
2025-02-24T16:12:46.6166960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6167070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6167170Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6167170Z 
2025-02-24T16:12:46.6167240Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6167430Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T16:12:46.6167430Z 
2025-02-24T16:12:46.6167550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6167670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6167760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6167880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6168210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6168390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6168450Z err_msg = None
2025-02-24T16:12:46.6168460Z 
2025-02-24T16:12:46.6168560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6168620Z         if err_msg is None:
2025-02-24T16:12:46.6168700Z             if left.shape != right.shape:
2025-02-24T16:12:46.6168770Z                 raise_assert_detail(
2025-02-24T16:12:46.6168890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6168950Z                 )
2025-02-24T16:12:46.6169000Z     
2025-02-24T16:12:46.6169060Z             diff = 0
2025-02-24T16:12:46.6169150Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6169230Z                 # count up differences
2025-02-24T16:12:46.6169380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6169440Z                     diff += 1
2025-02-24T16:12:46.6169500Z     
2025-02-24T16:12:46.6169570Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6169690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6169830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6169930Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6169990Z E           
2025-02-24T16:12:46.6170080Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6170310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6170540Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6170550Z 
2025-02-24T16:12:46.6170810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6170810Z 
2025-02-24T16:12:46.6170960Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6170960Z 
2025-02-24T16:12:46.6171140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed4bc0>
2025-02-24T16:12:46.6171320Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>, attr = 'lines'
2025-02-24T16:12:46.6171320Z 
2025-02-24T16:12:46.6171440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6171730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6171810Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6171860Z         try:
2025-02-24T16:12:46.6171990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6172050Z         except KeyError:
2025-02-24T16:12:46.6172170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6172220Z     
2025-02-24T16:12:46.6172290Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6172370Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6172440Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6172670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6172740Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6172820Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6172910Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6173040Z             else:
2025-02-24T16:12:46.6173120Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6173210Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6173270Z 
2025-02-24T16:12:46.6173380Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6173480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6173610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6173660Z     ???
2025-02-24T16:12:46.6173760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6173760Z 
2025-02-24T16:12:46.6173820Z >   ???
2025-02-24T16:12:46.6173920Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6173980Z E   
2025-02-24T16:12:46.6174080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6174180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6174240Z E          ...
2025-02-24T16:12:46.6174320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6174430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6174530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6174580Z E          ...
2025-02-24T16:12:46.6174650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6174760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6174850Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6174850Z 
2025-02-24T16:12:46.6174920Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6175140Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T16:12:46.6175140Z 
2025-02-24T16:12:46.6175320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed4c80>
2025-02-24T16:12:46.6175460Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>
2025-02-24T16:12:46.6175540Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6175540Z 
2025-02-24T16:12:46.6175660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6175760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6175820Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6175880Z         try:
2025-02-24T16:12:46.6176000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6176530Z         except KeyError:
2025-02-24T16:12:46.6176660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6176720Z     
2025-02-24T16:12:46.6176790Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6176860Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6176940Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6177050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6177120Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6177200Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6177300Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6177300Z 
2025-02-24T16:12:46.6177410Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6177500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6177510Z 
2025-02-24T16:12:46.6177620Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6177700Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6177910Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6177980Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6178100Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6178170Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6178270Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6178460Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6178520Z err_msg = None
2025-02-24T16:12:46.6178570Z 
2025-02-24T16:12:46.6178660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6178730Z         if err_msg is None:
2025-02-24T16:12:46.6178810Z             if left.shape != right.shape:
2025-02-24T16:12:46.6178870Z                 raise_assert_detail(
2025-02-24T16:12:46.6179000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6179050Z                 )
2025-02-24T16:12:46.6179100Z     
2025-02-24T16:12:46.6179160Z             diff = 0
2025-02-24T16:12:46.6179260Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6179330Z                 # count up differences
2025-02-24T16:12:46.6179480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6179540Z                     diff += 1
2025-02-24T16:12:46.6179710Z     
2025-02-24T16:12:46.6179810Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6179950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6180100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6180190Z E           AssertionError: Series are different
2025-02-24T16:12:46.6180240Z E           
2025-02-24T16:12:46.6180350Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6180670Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6180980Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6181280Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6181280Z 
2025-02-24T16:12:46.6181540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6181760Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T16:12:46.6181770Z 
2025-02-24T16:12:46.6181960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed4d40>
2025-02-24T16:12:46.6182090Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>
2025-02-24T16:12:46.6182170Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6182170Z 
2025-02-24T16:12:46.6182290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6182390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6182460Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6182510Z         try:
2025-02-24T16:12:46.6182640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6182700Z         except KeyError:
2025-02-24T16:12:46.6182820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6182870Z     
2025-02-24T16:12:46.6182940Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6183020Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6183230Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6183350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6183530Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6183610Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6183710Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6183710Z 
2025-02-24T16:12:46.6183810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6183910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6183920Z 
2025-02-24T16:12:46.6184040Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6184110Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6184210Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6184270Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6184400Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6184470Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6184570Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6184630Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6197700Z err_msg = None
2025-02-24T16:12:46.6197840Z 
2025-02-24T16:12:46.6198260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6198450Z         if err_msg is None:
2025-02-24T16:12:46.6198670Z             if left.shape != right.shape:
2025-02-24T16:12:46.6198870Z                 raise_assert_detail(
2025-02-24T16:12:46.6199200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6199370Z                 )
2025-02-24T16:12:46.6199530Z     
2025-02-24T16:12:46.6199700Z             diff = 0
2025-02-24T16:12:46.6199960Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6200210Z                 # count up differences
2025-02-24T16:12:46.6200600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6200800Z                     diff += 1
2025-02-24T16:12:46.6200960Z     
2025-02-24T16:12:46.6201160Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6201470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6202240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6202480Z E           AssertionError: Series are different
2025-02-24T16:12:46.6202540Z E           
2025-02-24T16:12:46.6202620Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6202970Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6203330Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6203660Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6203880Z 
2025-02-24T16:12:46.6204160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6204450Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T16:12:46.6204460Z 
2025-02-24T16:12:46.6204570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6204690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6204780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6204910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6205030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6205110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6205170Z err_msg = None
2025-02-24T16:12:46.6205180Z 
2025-02-24T16:12:46.6205270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6205340Z         if err_msg is None:
2025-02-24T16:12:46.6205420Z             if left.shape != right.shape:
2025-02-24T16:12:46.6205490Z                 raise_assert_detail(
2025-02-24T16:12:46.6205630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6205690Z                 )
2025-02-24T16:12:46.6205740Z     
2025-02-24T16:12:46.6205800Z             diff = 0
2025-02-24T16:12:46.6205890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6205980Z                 # count up differences
2025-02-24T16:12:46.6206150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6206220Z                     diff += 1
2025-02-24T16:12:46.6206270Z     
2025-02-24T16:12:46.6206360Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6206490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6206650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6206760Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6206820Z E           
2025-02-24T16:12:46.6206910Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6207130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6207380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6207390Z 
2025-02-24T16:12:46.6207650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6207660Z 
2025-02-24T16:12:46.6207800Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6207800Z 
2025-02-24T16:12:46.6207980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed4f80>
2025-02-24T16:12:46.6208150Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>, attr = 'nu'
2025-02-24T16:12:46.6208150Z 
2025-02-24T16:12:46.6208260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6208360Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6208430Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6208480Z         try:
2025-02-24T16:12:46.6208820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6208920Z         except KeyError:
2025-02-24T16:12:46.6209050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6209230Z     
2025-02-24T16:12:46.6209310Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6209380Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6209450Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6209580Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6209640Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6209730Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6209820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6209830Z 
2025-02-24T16:12:46.6209930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6210040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6210170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6210220Z     ???
2025-02-24T16:12:46.6210320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6210330Z 
2025-02-24T16:12:46.6210380Z >   ???
2025-02-24T16:12:46.6210490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6210540Z E   
2025-02-24T16:12:46.6210650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6210750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6210810Z E          ...
2025-02-24T16:12:46.6210880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6210990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6211110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6211170Z E          ...
2025-02-24T16:12:46.6211240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6211350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6211440Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6211440Z 
2025-02-24T16:12:46.6211520Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6211710Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T16:12:46.6211720Z 
2025-02-24T16:12:46.6211830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6211960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6212060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6212180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6212290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6212370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6212440Z err_msg = None
2025-02-24T16:12:46.6212440Z 
2025-02-24T16:12:46.6212540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6212600Z         if err_msg is None:
2025-02-24T16:12:46.6212690Z             if left.shape != right.shape:
2025-02-24T16:12:46.6212770Z                 raise_assert_detail(
2025-02-24T16:12:46.6212910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6212960Z                 )
2025-02-24T16:12:46.6213010Z     
2025-02-24T16:12:46.6213070Z             diff = 0
2025-02-24T16:12:46.6213160Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6213230Z                 # count up differences
2025-02-24T16:12:46.6213370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6213440Z                     diff += 1
2025-02-24T16:12:46.6213490Z     
2025-02-24T16:12:46.6213560Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6213770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6213920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6214080Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6214130Z E           
2025-02-24T16:12:46.6214230Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6214450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6214680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6214680Z 
2025-02-24T16:12:46.6215350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6215350Z 
2025-02-24T16:12:46.6215510Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6215510Z 
2025-02-24T16:12:46.6215690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed5040>
2025-02-24T16:12:46.6215830Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>
2025-02-24T16:12:46.6215890Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6215900Z 
2025-02-24T16:12:46.6216020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6216120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6216260Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6216320Z         try:
2025-02-24T16:12:46.6216440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6216560Z         except KeyError:
2025-02-24T16:12:46.6216680Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6216740Z     
2025-02-24T16:12:46.6216810Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6216880Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6216960Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6217070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6217140Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6217210Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6217480Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6217490Z 
2025-02-24T16:12:46.6217590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6217690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6217820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6217870Z     ???
2025-02-24T16:12:46.6217970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6217980Z 
2025-02-24T16:12:46.6218030Z >   ???
2025-02-24T16:12:46.6218140Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6218190Z E   
2025-02-24T16:12:46.6218300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6218390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6218450Z E          ...
2025-02-24T16:12:46.6218530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6218640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6218730Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6218790Z E          ...
2025-02-24T16:12:46.6218960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6219520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6219610Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6219720Z 
2025-02-24T16:12:46.6219800Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6219990Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T16:12:46.6219990Z 
2025-02-24T16:12:46.6220110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6220230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6220310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6220440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6220550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6220640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6220700Z err_msg = None
2025-02-24T16:12:46.6220700Z 
2025-02-24T16:12:46.6220800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6220870Z         if err_msg is None:
2025-02-24T16:12:46.6220950Z             if left.shape != right.shape:
2025-02-24T16:12:46.6221020Z                 raise_assert_detail(
2025-02-24T16:12:46.6221150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6221200Z                 )
2025-02-24T16:12:46.6221260Z     
2025-02-24T16:12:46.6221320Z             diff = 0
2025-02-24T16:12:46.6221430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6221520Z                 # count up differences
2025-02-24T16:12:46.6221680Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6221780Z                     diff += 1
2025-02-24T16:12:46.6221830Z     
2025-02-24T16:12:46.6221910Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6222030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6222180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6222280Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6222330Z E           
2025-02-24T16:12:46.6222430Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6222660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6222890Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6222900Z 
2025-02-24T16:12:46.6223170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6223170Z 
2025-02-24T16:12:46.6223310Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6223320Z 
2025-02-24T16:12:46.6223500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed5100>
2025-02-24T16:12:46.6223670Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>, attr = 'f_lu'
2025-02-24T16:12:46.6223680Z 
2025-02-24T16:12:46.6223790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6223890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6223960Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6224010Z         try:
2025-02-24T16:12:46.6224240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6224440Z         except KeyError:
2025-02-24T16:12:46.6224570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6224690Z     
2025-02-24T16:12:46.6224770Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6224840Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6224920Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6225030Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6225110Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6225180Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6225280Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6225280Z 
2025-02-24T16:12:46.6225390Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6225490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6225620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6225670Z     ???
2025-02-24T16:12:46.6225770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6225780Z 
2025-02-24T16:12:46.6225850Z >   ???
2025-02-24T16:12:46.6225970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6226020Z E   
2025-02-24T16:12:46.6226130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6226230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6226290Z E          ...
2025-02-24T16:12:46.6226360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6226470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6226570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6226630Z E          ...
2025-02-24T16:12:46.6226700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6226810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6226900Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6226900Z 
2025-02-24T16:12:46.6226970Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6227160Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T16:12:46.6227160Z 
2025-02-24T16:12:46.6227280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6227390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6227480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6227590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6227710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6227800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6227920Z err_msg = None
2025-02-24T16:12:46.6227920Z 
2025-02-24T16:12:46.6228020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6228090Z         if err_msg is None:
2025-02-24T16:12:46.6228170Z             if left.shape != right.shape:
2025-02-24T16:12:46.6228240Z                 raise_assert_detail(
2025-02-24T16:12:46.6228480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6228590Z                 )
2025-02-24T16:12:46.6228650Z     
2025-02-24T16:12:46.6228710Z             diff = 0
2025-02-24T16:12:46.6228820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6228900Z                 # count up differences
2025-02-24T16:12:46.6229050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6229120Z                     diff += 1
2025-02-24T16:12:46.6229170Z     
2025-02-24T16:12:46.6229240Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6229540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6229690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6229860Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6229910Z E           
2025-02-24T16:12:46.6230010Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6230240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6230460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6230470Z 
2025-02-24T16:12:46.6230740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6230750Z 
2025-02-24T16:12:46.6231340Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6231360Z 
2025-02-24T16:12:46.6231560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed5880>
2025-02-24T16:12:46.6231890Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>
2025-02-24T16:12:46.6231960Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6231960Z 
2025-02-24T16:12:46.6232080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6232180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6232250Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6232300Z         try:
2025-02-24T16:12:46.6232430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6232500Z         except KeyError:
2025-02-24T16:12:46.6232620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6232670Z     
2025-02-24T16:12:46.6232740Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6232820Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6232890Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6233370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6233460Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6233530Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6233630Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6233690Z             else:
2025-02-24T16:12:46.6233770Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6233860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6233870Z 
2025-02-24T16:12:46.6233980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6234090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6234230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6234280Z     ???
2025-02-24T16:12:46.6234700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6234710Z 
2025-02-24T16:12:46.6234760Z >   ???
2025-02-24T16:12:46.6235190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6235270Z E   
2025-02-24T16:12:46.6235390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6235490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6235540Z E          ...
2025-02-24T16:12:46.6235620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6235740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6235990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6236050Z E          ...
2025-02-24T16:12:46.6236120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6236300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6236380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6236390Z 
2025-02-24T16:12:46.6236460Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6236640Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T16:12:46.6236640Z 
2025-02-24T16:12:46.6236760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6236880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6236960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6237090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6237210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6237290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6237650Z err_msg = None
2025-02-24T16:12:46.6237660Z 
2025-02-24T16:12:46.6237760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6237820Z         if err_msg is None:
2025-02-24T16:12:46.6237900Z             if left.shape != right.shape:
2025-02-24T16:12:46.6237970Z                 raise_assert_detail(
2025-02-24T16:12:46.6238100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6238150Z                 )
2025-02-24T16:12:46.6238210Z     
2025-02-24T16:12:46.6238260Z             diff = 0
2025-02-24T16:12:46.6238360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6238430Z                 # count up differences
2025-02-24T16:12:46.6238580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6238650Z                     diff += 1
2025-02-24T16:12:46.6238700Z     
2025-02-24T16:12:46.6238770Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6238890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6239040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6239130Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6239190Z E           
2025-02-24T16:12:46.6239280Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6239650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6239880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6239890Z 
2025-02-24T16:12:46.6240150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6240160Z 
2025-02-24T16:12:46.6240300Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6240310Z 
2025-02-24T16:12:46.6240810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed5ac0>
2025-02-24T16:12:46.6241000Z plasma = <tardis.plasma.base.BasePlasma object at 0x15f557ce0>, attr = 'j_blues'
2025-02-24T16:12:46.6241010Z 
2025-02-24T16:12:46.6241120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6242190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6242260Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6242930Z         try:
2025-02-24T16:12:46.6243220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6243290Z         except KeyError:
2025-02-24T16:12:46.6243410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6243460Z     
2025-02-24T16:12:46.6243530Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6243610Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6243690Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6243870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6243940Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6245780Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6246250Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6246460Z             else:
2025-02-24T16:12:46.6246770Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6247100Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6247120Z 
2025-02-24T16:12:46.6247250Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6247370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6247500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6247550Z     ???
2025-02-24T16:12:46.6247660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6247660Z 
2025-02-24T16:12:46.6247710Z >   ???
2025-02-24T16:12:46.6247820Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6247880Z E   
2025-02-24T16:12:46.6247990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6248090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6248150Z E          ...
2025-02-24T16:12:46.6248230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6248340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6248450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6248500Z E          ...
2025-02-24T16:12:46.6248570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6248680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6248770Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6248770Z 
2025-02-24T16:12:46.6248840Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6249030Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T16:12:46.6249030Z 
2025-02-24T16:12:46.6249140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6249260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6249350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6249470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6249590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6249670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6249730Z err_msg = None
2025-02-24T16:12:46.6249730Z 
2025-02-24T16:12:46.6249820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6249890Z         if err_msg is None:
2025-02-24T16:12:46.6249970Z             if left.shape != right.shape:
2025-02-24T16:12:46.6250040Z                 raise_assert_detail(
2025-02-24T16:12:46.6250160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6250210Z                 )
2025-02-24T16:12:46.6250270Z     
2025-02-24T16:12:46.6250320Z             diff = 0
2025-02-24T16:12:46.6250540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6250610Z                 # count up differences
2025-02-24T16:12:46.6250830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6250900Z                     diff += 1
2025-02-24T16:12:46.6250940Z     
2025-02-24T16:12:46.6251020Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6251130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6251280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6251380Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6251440Z E           
2025-02-24T16:12:46.6251530Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6251760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6251990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6251990Z 
2025-02-24T16:12:46.6252260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6252260Z 
2025-02-24T16:12:46.6252400Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6252410Z 
2025-02-24T16:12:46.6252590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed6840>
2025-02-24T16:12:46.6252770Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>, attr = 'lines'
2025-02-24T16:12:46.6252770Z 
2025-02-24T16:12:46.6252880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6252990Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6253050Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6253110Z         try:
2025-02-24T16:12:46.6253230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6253290Z         except KeyError:
2025-02-24T16:12:46.6253410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6253460Z     
2025-02-24T16:12:46.6253540Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6253610Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6253690Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6253800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6253870Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6253950Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6254040Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6254100Z             else:
2025-02-24T16:12:46.6254180Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6254270Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6254280Z 
2025-02-24T16:12:46.6254380Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6254480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6254620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6254690Z     ???
2025-02-24T16:12:46.6254790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6254790Z 
2025-02-24T16:12:46.6254840Z >   ???
2025-02-24T16:12:46.6254950Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6255100Z E   
2025-02-24T16:12:46.6255300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6255400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6255510Z E          ...
2025-02-24T16:12:46.6255590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6255700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6255800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6255860Z E          ...
2025-02-24T16:12:46.6255940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6256040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6256130Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6256130Z 
2025-02-24T16:12:46.6256210Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6256610Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T16:12:46.6256670Z 
2025-02-24T16:12:46.6258090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed6900>
2025-02-24T16:12:46.6259050Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>
2025-02-24T16:12:46.6259310Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6259320Z 
2025-02-24T16:12:46.6259650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6259960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6260080Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6260130Z         try:
2025-02-24T16:12:46.6260260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6260320Z         except KeyError:
2025-02-24T16:12:46.6260450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6260500Z     
2025-02-24T16:12:46.6260580Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6260650Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6260730Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6260850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6260930Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6261010Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6261100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6261110Z 
2025-02-24T16:12:46.6261210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6261310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6261310Z 
2025-02-24T16:12:46.6261430Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6261500Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6261600Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6261670Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6261790Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6261860Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6261960Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6262030Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6262100Z err_msg = None
2025-02-24T16:12:46.6262120Z 
2025-02-24T16:12:46.6262220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6262280Z         if err_msg is None:
2025-02-24T16:12:46.6262350Z             if left.shape != right.shape:
2025-02-24T16:12:46.6262430Z                 raise_assert_detail(
2025-02-24T16:12:46.6262550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6262610Z                 )
2025-02-24T16:12:46.6262670Z     
2025-02-24T16:12:46.6262720Z             diff = 0
2025-02-24T16:12:46.6262820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6262900Z                 # count up differences
2025-02-24T16:12:46.6263280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6263340Z                     diff += 1
2025-02-24T16:12:46.6263470Z     
2025-02-24T16:12:46.6263550Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6263670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6268690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6268830Z E           AssertionError: Series are different
2025-02-24T16:12:46.6268880Z E           
2025-02-24T16:12:46.6268980Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6269290Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6269590Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6269880Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6269890Z 
2025-02-24T16:12:46.6270150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6270360Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T16:12:46.6270370Z 
2025-02-24T16:12:46.6270560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed69c0>
2025-02-24T16:12:46.6270690Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>
2025-02-24T16:12:46.6270770Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6270770Z 
2025-02-24T16:12:46.6270890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6270980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6271070Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6271130Z         try:
2025-02-24T16:12:46.6271250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6271310Z         except KeyError:
2025-02-24T16:12:46.6271440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6271490Z     
2025-02-24T16:12:46.6271560Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6271640Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6271720Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6271830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6271900Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6272100Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6272250Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6272250Z 
2025-02-24T16:12:46.6272360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6272470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6272470Z 
2025-02-24T16:12:46.6272590Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6272670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6273050Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6273120Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6273700Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6273770Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6273870Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6273940Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6273990Z err_msg = None
2025-02-24T16:12:46.6273990Z 
2025-02-24T16:12:46.6274090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6274150Z         if err_msg is None:
2025-02-24T16:12:46.6274230Z             if left.shape != right.shape:
2025-02-24T16:12:46.6274300Z                 raise_assert_detail(
2025-02-24T16:12:46.6274440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6274510Z                 )
2025-02-24T16:12:46.6274560Z     
2025-02-24T16:12:46.6274620Z             diff = 0
2025-02-24T16:12:46.6274710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6274790Z                 # count up differences
2025-02-24T16:12:46.6274940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6275010Z                     diff += 1
2025-02-24T16:12:46.6275060Z     
2025-02-24T16:12:46.6275130Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6275250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6276210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6276870Z E           AssertionError: Series are different
2025-02-24T16:12:46.6277050Z E           
2025-02-24T16:12:46.6277300Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6281470Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6282480Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6283410Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6283440Z 
2025-02-24T16:12:46.6284160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6284640Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T16:12:46.6284650Z 
2025-02-24T16:12:46.6284950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6285260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6285480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6285790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6286760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6286980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6287410Z err_msg = None
2025-02-24T16:12:46.6287420Z 
2025-02-24T16:12:46.6289040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6289320Z         if err_msg is None:
2025-02-24T16:12:46.6289540Z             if left.shape != right.shape:
2025-02-24T16:12:46.6289750Z                 raise_assert_detail(
2025-02-24T16:12:46.6290700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6291150Z                 )
2025-02-24T16:12:46.6291350Z     
2025-02-24T16:12:46.6291540Z             diff = 0
2025-02-24T16:12:46.6291810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6292010Z                 # count up differences
2025-02-24T16:12:46.6292400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6292600Z                     diff += 1
2025-02-24T16:12:46.6292760Z     
2025-02-24T16:12:46.6292960Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6293290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6293680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6294150Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6294620Z E           
2025-02-24T16:12:46.6295020Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6295920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6296580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6296620Z 
2025-02-24T16:12:46.6297810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6297830Z 
2025-02-24T16:12:46.6298220Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6298230Z 
2025-02-24T16:12:46.6298800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed6c00>
2025-02-24T16:12:46.6301380Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>, attr = 'nu'
2025-02-24T16:12:46.6301400Z 
2025-02-24T16:12:46.6301750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6302020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6302240Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6302410Z         try:
2025-02-24T16:12:46.6302730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6302940Z         except KeyError:
2025-02-24T16:12:46.6303250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6303420Z     
2025-02-24T16:12:46.6303620Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6303840Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6304040Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6304340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6304550Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6305390Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6305680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6305690Z 
2025-02-24T16:12:46.6306000Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6306900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6307230Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6307640Z     ???
2025-02-24T16:12:46.6307900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6307910Z 
2025-02-24T16:12:46.6308070Z >   ???
2025-02-24T16:12:46.6308370Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6308830Z E   
2025-02-24T16:12:46.6309570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6309860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6310160Z E          ...
2025-02-24T16:12:46.6310400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6313530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6314020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6314260Z E          ...
2025-02-24T16:12:46.6314470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6314780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6315020Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6315030Z 
2025-02-24T16:12:46.6315240Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6315850Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T16:12:46.6315860Z 
2025-02-24T16:12:46.6317480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6317810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6318030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6318340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6318640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6318860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6319050Z err_msg = None
2025-02-24T16:12:46.6319050Z 
2025-02-24T16:12:46.6319310Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6319500Z         if err_msg is None:
2025-02-24T16:12:46.6319710Z             if left.shape != right.shape:
2025-02-24T16:12:46.6320470Z                 raise_assert_detail(
2025-02-24T16:12:46.6320700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6320760Z                 )
2025-02-24T16:12:46.6320810Z     
2025-02-24T16:12:46.6320870Z             diff = 0
2025-02-24T16:12:46.6320970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6321040Z                 # count up differences
2025-02-24T16:12:46.6321200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6321290Z                     diff += 1
2025-02-24T16:12:46.6321340Z     
2025-02-24T16:12:46.6321410Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6321540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6321700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6321790Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6321850Z E           
2025-02-24T16:12:46.6321950Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6322170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6322400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6322840Z 
2025-02-24T16:12:46.6323120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6323130Z 
2025-02-24T16:12:46.6323280Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6323280Z 
2025-02-24T16:12:46.6323470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed6cc0>
2025-02-24T16:12:46.6323610Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>
2025-02-24T16:12:46.6323670Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6323670Z 
2025-02-24T16:12:46.6323790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6323900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6323970Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6324020Z         try:
2025-02-24T16:12:46.6324150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6324210Z         except KeyError:
2025-02-24T16:12:46.6324330Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6324380Z     
2025-02-24T16:12:46.6324450Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6324530Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6324600Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6324720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6324790Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6324870Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6324960Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6324970Z 
2025-02-24T16:12:46.6325070Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6325180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6325310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6325360Z     ???
2025-02-24T16:12:46.6325460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6325470Z 
2025-02-24T16:12:46.6325520Z >   ???
2025-02-24T16:12:46.6325620Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6325670Z E   
2025-02-24T16:12:46.6325790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6325890Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6325940Z E          ...
2025-02-24T16:12:46.6326010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6326130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6326230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6326280Z E          ...
2025-02-24T16:12:46.6326360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6326470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6327020Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6327090Z 
2025-02-24T16:12:46.6327400Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6327890Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T16:12:46.6327900Z 
2025-02-24T16:12:46.6329780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6329970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6330060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6330190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6330730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6330820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6331050Z err_msg = None
2025-02-24T16:12:46.6331050Z 
2025-02-24T16:12:46.6331150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6331220Z         if err_msg is None:
2025-02-24T16:12:46.6331300Z             if left.shape != right.shape:
2025-02-24T16:12:46.6331380Z                 raise_assert_detail(
2025-02-24T16:12:46.6331510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6331570Z                 )
2025-02-24T16:12:46.6331620Z     
2025-02-24T16:12:46.6331670Z             diff = 0
2025-02-24T16:12:46.6331770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6331850Z                 # count up differences
2025-02-24T16:12:46.6332000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6332060Z                     diff += 1
2025-02-24T16:12:46.6332110Z     
2025-02-24T16:12:46.6332190Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6332310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6332480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6332580Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6332640Z E           
2025-02-24T16:12:46.6332740Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6332960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6333190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6333200Z 
2025-02-24T16:12:46.6333470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6333470Z 
2025-02-24T16:12:46.6333620Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6333620Z 
2025-02-24T16:12:46.6333810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed6d80>
2025-02-24T16:12:46.6333970Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>, attr = 'f_lu'
2025-02-24T16:12:46.6333980Z 
2025-02-24T16:12:46.6334100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6334200Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6334270Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6334320Z         try:
2025-02-24T16:12:46.6334440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6334510Z         except KeyError:
2025-02-24T16:12:46.6334630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6334680Z     
2025-02-24T16:12:46.6334750Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6334830Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6334910Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6335020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6335100Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6335170Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6335270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6335270Z 
2025-02-24T16:12:46.6335370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6335560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6335680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6335800Z     ???
2025-02-24T16:12:46.6335900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6335900Z 
2025-02-24T16:12:46.6335950Z >   ???
2025-02-24T16:12:46.6336060Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6336130Z E   
2025-02-24T16:12:46.6336240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6336340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6336390Z E          ...
2025-02-24T16:12:46.6336470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6336580Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6336670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6336730Z E          ...
2025-02-24T16:12:46.6336810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6336920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6337010Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6337020Z 
2025-02-24T16:12:46.6337080Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6337280Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T16:12:46.6337280Z 
2025-02-24T16:12:46.6337390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6337520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6337600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6337710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6337830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6337910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6337970Z err_msg = None
2025-02-24T16:12:46.6337980Z 
2025-02-24T16:12:46.6338060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6338130Z         if err_msg is None:
2025-02-24T16:12:46.6338210Z             if left.shape != right.shape:
2025-02-24T16:12:46.6338270Z                 raise_assert_detail(
2025-02-24T16:12:46.6338400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6338450Z                 )
2025-02-24T16:12:46.6338510Z     
2025-02-24T16:12:46.6338570Z             diff = 0
2025-02-24T16:12:46.6338660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6338730Z                 # count up differences
2025-02-24T16:12:46.6338870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6338940Z                     diff += 1
2025-02-24T16:12:46.6338990Z     
2025-02-24T16:12:46.6339060Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6339190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6339330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6339430Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6339480Z E           
2025-02-24T16:12:46.6339580Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6339800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6340030Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6340160Z 
2025-02-24T16:12:46.6340420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6340430Z 
2025-02-24T16:12:46.6340570Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6340580Z 
2025-02-24T16:12:46.6340760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed7500>
2025-02-24T16:12:46.6340890Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>
2025-02-24T16:12:46.6340950Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6340950Z 
2025-02-24T16:12:46.6341070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6341170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6341240Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6341300Z         try:
2025-02-24T16:12:46.6341420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6341480Z         except KeyError:
2025-02-24T16:12:46.6341600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6341650Z     
2025-02-24T16:12:46.6341720Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6341800Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6341870Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6341980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6342060Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6342130Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6342220Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6342270Z             else:
2025-02-24T16:12:46.6342360Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6342450Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6342460Z 
2025-02-24T16:12:46.6342560Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6342670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6342790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6342840Z     ???
2025-02-24T16:12:46.6342940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6342950Z 
2025-02-24T16:12:46.6343000Z >   ???
2025-02-24T16:12:46.6343110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6343160Z E   
2025-02-24T16:12:46.6343270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6343370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6343420Z E          ...
2025-02-24T16:12:46.6343500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6343610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6343710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6343760Z E          ...
2025-02-24T16:12:46.6343840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6343950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6344030Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6344040Z 
2025-02-24T16:12:46.6344110Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6344290Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T16:12:46.6344300Z 
2025-02-24T16:12:46.6344410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6344520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6344670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6344790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6344940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6345030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6345080Z err_msg = None
2025-02-24T16:12:46.6345090Z 
2025-02-24T16:12:46.6345180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6345250Z         if err_msg is None:
2025-02-24T16:12:46.6345320Z             if left.shape != right.shape:
2025-02-24T16:12:46.6345390Z                 raise_assert_detail(
2025-02-24T16:12:46.6345510Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6345570Z                 )
2025-02-24T16:12:46.6345620Z     
2025-02-24T16:12:46.6345670Z             diff = 0
2025-02-24T16:12:46.6345770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6345840Z                 # count up differences
2025-02-24T16:12:46.6345990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6346050Z                     diff += 1
2025-02-24T16:12:46.6346100Z     
2025-02-24T16:12:46.6346170Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6346300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6346440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6346540Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6346590Z E           
2025-02-24T16:12:46.6346690Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6346910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6347140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6347150Z 
2025-02-24T16:12:46.6347400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6347400Z 
2025-02-24T16:12:46.6347540Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6347550Z 
2025-02-24T16:12:46.6347720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed75c0>
2025-02-24T16:12:46.6347850Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>
2025-02-24T16:12:46.6347920Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6347920Z 
2025-02-24T16:12:46.6348040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6348180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6348260Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6348310Z         try:
2025-02-24T16:12:46.6348430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6348490Z         except KeyError:
2025-02-24T16:12:46.6348610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6348670Z     
2025-02-24T16:12:46.6348740Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6348810Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6348880Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6349010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6349080Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6349450Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6349540Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6349690Z             else:
2025-02-24T16:12:46.6349770Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6349860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6349860Z 
2025-02-24T16:12:46.6349970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6350060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6350190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6350250Z     ???
2025-02-24T16:12:46.6350350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6350350Z 
2025-02-24T16:12:46.6350400Z >   ???
2025-02-24T16:12:46.6350510Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6350570Z E   
2025-02-24T16:12:46.6350680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6350770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6350830Z E          ...
2025-02-24T16:12:46.6350910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6351020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6351110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6351170Z E          ...
2025-02-24T16:12:46.6351240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6351350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6351440Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6351440Z 
2025-02-24T16:12:46.6351510Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6351690Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T16:12:46.6351690Z 
2025-02-24T16:12:46.6351800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6351920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6352010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6352120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6352240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6352320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6352380Z err_msg = None
2025-02-24T16:12:46.6352380Z 
2025-02-24T16:12:46.6352470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6352530Z         if err_msg is None:
2025-02-24T16:12:46.6352610Z             if left.shape != right.shape:
2025-02-24T16:12:46.6352670Z                 raise_assert_detail(
2025-02-24T16:12:46.6352800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6352860Z                 )
2025-02-24T16:12:46.6352910Z     
2025-02-24T16:12:46.6352970Z             diff = 0
2025-02-24T16:12:46.6353060Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6353140Z                 # count up differences
2025-02-24T16:12:46.6353520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6353590Z                     diff += 1
2025-02-24T16:12:46.6353640Z     
2025-02-24T16:12:46.6353710Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6353830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6353970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6354070Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6354120Z E           
2025-02-24T16:12:46.6354340Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6354560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6354830Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6354840Z 
2025-02-24T16:12:46.6355090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6355100Z 
2025-02-24T16:12:46.6355300Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6355310Z 
2025-02-24T16:12:46.6355510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119ed7740>
2025-02-24T16:12:46.6355700Z plasma = <tardis.plasma.base.BasePlasma object at 0x148b316a0>, attr = 'j_blues'
2025-02-24T16:12:46.6355700Z 
2025-02-24T16:12:46.6355820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6355910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6356490Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6356850Z         try:
2025-02-24T16:12:46.6357220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6357410Z         except KeyError:
2025-02-24T16:12:46.6357730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6357890Z     
2025-02-24T16:12:46.6358330Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6358450Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6358530Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6358650Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6358720Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6358800Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6358890Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6358950Z             else:
2025-02-24T16:12:46.6368110Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6368250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6368250Z 
2025-02-24T16:12:46.6368350Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6368460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6368580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6368640Z     ???
2025-02-24T16:12:46.6368730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6368750Z 
2025-02-24T16:12:46.6368800Z >   ???
2025-02-24T16:12:46.6368910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6368960Z E   
2025-02-24T16:12:46.6369070Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6369170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6369220Z E          ...
2025-02-24T16:12:46.6369300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6369410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6369510Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6369560Z E          ...
2025-02-24T16:12:46.6369640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6369750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6369840Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6369840Z 
2025-02-24T16:12:46.6370130Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6370310Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T16:12:46.6370400Z 
2025-02-24T16:12:46.6370580Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6370710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6370830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6370960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6371080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6371160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6371220Z err_msg = None
2025-02-24T16:12:46.6371220Z 
2025-02-24T16:12:46.6371320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6371390Z         if err_msg is None:
2025-02-24T16:12:46.6371460Z             if left.shape != right.shape:
2025-02-24T16:12:46.6371530Z                 raise_assert_detail(
2025-02-24T16:12:46.6371660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6371710Z                 )
2025-02-24T16:12:46.6371760Z     
2025-02-24T16:12:46.6371820Z             diff = 0
2025-02-24T16:12:46.6371910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6371980Z                 # count up differences
2025-02-24T16:12:46.6372130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6372190Z                     diff += 1
2025-02-24T16:12:46.6372240Z     
2025-02-24T16:12:46.6372310Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6372430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6372580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6372680Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6372740Z E           
2025-02-24T16:12:46.6372830Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6373050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6373280Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6373280Z 
2025-02-24T16:12:46.6373540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6373540Z 
2025-02-24T16:12:46.6373680Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6373690Z 
2025-02-24T16:12:46.6373870Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efc500>
2025-02-24T16:12:46.6374040Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>, attr = 'lines'
2025-02-24T16:12:46.6374040Z 
2025-02-24T16:12:46.6374160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6374250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6374390Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6374450Z         try:
2025-02-24T16:12:46.6374570Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6374630Z         except KeyError:
2025-02-24T16:12:46.6374750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6374900Z     
2025-02-24T16:12:46.6374970Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6375270Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6375420Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6375540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6375620Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6375700Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6375790Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6375850Z             else:
2025-02-24T16:12:46.6375920Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6376020Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6376020Z 
2025-02-24T16:12:46.6376130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6376230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6376360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6376410Z     ???
2025-02-24T16:12:46.6376510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6376510Z 
2025-02-24T16:12:46.6376560Z >   ???
2025-02-24T16:12:46.6376670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6376720Z E   
2025-02-24T16:12:46.6376830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6376930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6377000Z E          ...
2025-02-24T16:12:46.6377090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6377210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6377320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6377370Z E          ...
2025-02-24T16:12:46.6377440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6377560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6377650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6377660Z 
2025-02-24T16:12:46.6377740Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6377960Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T16:12:46.6377970Z 
2025-02-24T16:12:46.6378140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efc5c0>
2025-02-24T16:12:46.6378280Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>
2025-02-24T16:12:46.6378350Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6378350Z 
2025-02-24T16:12:46.6378470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6378560Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6378700Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6378750Z         try:
2025-02-24T16:12:46.6378880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6378940Z         except KeyError:
2025-02-24T16:12:46.6379060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6379120Z     
2025-02-24T16:12:46.6379180Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6379270Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6379340Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6379450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6379520Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6379600Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6379690Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6379690Z 
2025-02-24T16:12:46.6379850Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6379960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6379960Z 
2025-02-24T16:12:46.6380210Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6380280Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6380470Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6380530Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6380650Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6380720Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6380810Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6380890Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6380940Z err_msg = None
2025-02-24T16:12:46.6380950Z 
2025-02-24T16:12:46.6381040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6381160Z         if err_msg is None:
2025-02-24T16:12:46.6381240Z             if left.shape != right.shape:
2025-02-24T16:12:46.6381310Z                 raise_assert_detail(
2025-02-24T16:12:46.6381440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6381490Z                 )
2025-02-24T16:12:46.6381540Z     
2025-02-24T16:12:46.6381600Z             diff = 0
2025-02-24T16:12:46.6381690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6381770Z                 # count up differences
2025-02-24T16:12:46.6381910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6381970Z                     diff += 1
2025-02-24T16:12:46.6382030Z     
2025-02-24T16:12:46.6382100Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6382220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6382360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6382500Z E           AssertionError: Series are different
2025-02-24T16:12:46.6382560Z E           
2025-02-24T16:12:46.6382650Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6382990Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6383310Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6383610Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6383620Z 
2025-02-24T16:12:46.6383880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6384110Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T16:12:46.6384110Z 
2025-02-24T16:12:46.6384360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efc680>
2025-02-24T16:12:46.6384500Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>
2025-02-24T16:12:46.6384570Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6384580Z 
2025-02-24T16:12:46.6384700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6384890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6384960Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6385010Z         try:
2025-02-24T16:12:46.6385200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6385270Z         except KeyError:
2025-02-24T16:12:46.6385390Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6385440Z     
2025-02-24T16:12:46.6385510Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6385610Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6385690Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6385810Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6385880Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6385950Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6386050Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6386050Z 
2025-02-24T16:12:46.6386160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6386260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6386270Z 
2025-02-24T16:12:46.6386390Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6386460Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6386560Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6386630Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6386750Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6386830Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6386920Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6386990Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6387050Z err_msg = None
2025-02-24T16:12:46.6387050Z 
2025-02-24T16:12:46.6387140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6387210Z         if err_msg is None:
2025-02-24T16:12:46.6387290Z             if left.shape != right.shape:
2025-02-24T16:12:46.6387360Z                 raise_assert_detail(
2025-02-24T16:12:46.6387480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6387540Z                 )
2025-02-24T16:12:46.6387590Z     
2025-02-24T16:12:46.6387650Z             diff = 0
2025-02-24T16:12:46.6387750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6387820Z                 # count up differences
2025-02-24T16:12:46.6387970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6388100Z                     diff += 1
2025-02-24T16:12:46.6388150Z     
2025-02-24T16:12:46.6388230Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6388340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6388500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6388580Z E           AssertionError: Series are different
2025-02-24T16:12:46.6388640Z E           
2025-02-24T16:12:46.6388730Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6389040Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6389360Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6389820Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6389830Z 
2025-02-24T16:12:46.6390080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6390250Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T16:12:46.6390260Z 
2025-02-24T16:12:46.6390370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6390490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6390580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6390700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6390810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6390890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6390950Z err_msg = None
2025-02-24T16:12:46.6390950Z 
2025-02-24T16:12:46.6391050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6391110Z         if err_msg is None:
2025-02-24T16:12:46.6391180Z             if left.shape != right.shape:
2025-02-24T16:12:46.6391250Z                 raise_assert_detail(
2025-02-24T16:12:46.6391370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6391430Z                 )
2025-02-24T16:12:46.6391480Z     
2025-02-24T16:12:46.6391530Z             diff = 0
2025-02-24T16:12:46.6391630Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6391700Z                 # count up differences
2025-02-24T16:12:46.6391850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6391910Z                     diff += 1
2025-02-24T16:12:46.6391960Z     
2025-02-24T16:12:46.6392030Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6392140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6392290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6392390Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6392440Z E           
2025-02-24T16:12:46.6392530Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6392760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6392980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6392990Z 
2025-02-24T16:12:46.6393240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6393240Z 
2025-02-24T16:12:46.6393390Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6393440Z 
2025-02-24T16:12:46.6393700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efc8c0>
2025-02-24T16:12:46.6393860Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>, attr = 'nu'
2025-02-24T16:12:46.6393910Z 
2025-02-24T16:12:46.6394030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6394130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6394200Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6394250Z         try:
2025-02-24T16:12:46.6394370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6394440Z         except KeyError:
2025-02-24T16:12:46.6394550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6394610Z     
2025-02-24T16:12:46.6394680Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6394760Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6394830Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6394940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6395020Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6395090Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6395190Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6395190Z 
2025-02-24T16:12:46.6395290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6395390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6395510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6395570Z     ???
2025-02-24T16:12:46.6395670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6395670Z 
2025-02-24T16:12:46.6395720Z >   ???
2025-02-24T16:12:46.6395830Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6395870Z E   
2025-02-24T16:12:46.6395990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6396090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6396140Z E          ...
2025-02-24T16:12:46.6396220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6396330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6396430Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6396480Z E          ...
2025-02-24T16:12:46.6396560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6396660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6396750Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6396750Z 
2025-02-24T16:12:46.6396830Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6397020Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T16:12:46.6397020Z 
2025-02-24T16:12:46.6397130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6397250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6397350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6397460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6397570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6397660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6397720Z err_msg = None
2025-02-24T16:12:46.6397720Z 
2025-02-24T16:12:46.6397810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6397870Z         if err_msg is None:
2025-02-24T16:12:46.6397950Z             if left.shape != right.shape:
2025-02-24T16:12:46.6398020Z                 raise_assert_detail(
2025-02-24T16:12:46.6398140Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6400610Z                 )
2025-02-24T16:12:46.6400810Z     
2025-02-24T16:12:46.6401000Z             diff = 0
2025-02-24T16:12:46.6402440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6402650Z                 # count up differences
2025-02-24T16:12:46.6403050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6403230Z                     diff += 1
2025-02-24T16:12:46.6403390Z     
2025-02-24T16:12:46.6403610Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6403910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6404400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6404660Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6405280Z E           
2025-02-24T16:12:46.6405580Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6406250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6408630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6408650Z 
2025-02-24T16:12:46.6409350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6409370Z 
2025-02-24T16:12:46.6410010Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6410070Z 
2025-02-24T16:12:46.6410330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efc980>
2025-02-24T16:12:46.6410470Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>
2025-02-24T16:12:46.6410550Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6410560Z 
2025-02-24T16:12:46.6410690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6410790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6410850Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6410900Z         try:
2025-02-24T16:12:46.6411030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6411080Z         except KeyError:
2025-02-24T16:12:46.6411210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6411260Z     
2025-02-24T16:12:46.6411330Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6411400Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6411470Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6411590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6411660Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6411740Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6411840Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6411840Z 
2025-02-24T16:12:46.6411940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6412050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6412170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6412220Z     ???
2025-02-24T16:12:46.6412310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6412320Z 
2025-02-24T16:12:46.6412370Z >   ???
2025-02-24T16:12:46.6412480Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6412530Z E   
2025-02-24T16:12:46.6412830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6412930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6412990Z E          ...
2025-02-24T16:12:46.6413150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6413250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6413350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6413410Z E          ...
2025-02-24T16:12:46.6413480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6413590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6413680Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6413680Z 
2025-02-24T16:12:46.6413750Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6413930Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T16:12:46.6413930Z 
2025-02-24T16:12:46.6414040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6414160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6414250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6414360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6414480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6414560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6414610Z err_msg = None
2025-02-24T16:12:46.6414620Z 
2025-02-24T16:12:46.6414710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6414770Z         if err_msg is None:
2025-02-24T16:12:46.6414850Z             if left.shape != right.shape:
2025-02-24T16:12:46.6414920Z                 raise_assert_detail(
2025-02-24T16:12:46.6415040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6415100Z                 )
2025-02-24T16:12:46.6415150Z     
2025-02-24T16:12:46.6415200Z             diff = 0
2025-02-24T16:12:46.6415300Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6415380Z                 # count up differences
2025-02-24T16:12:46.6415520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6415580Z                     diff += 1
2025-02-24T16:12:46.6415630Z     
2025-02-24T16:12:46.6415700Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6415820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6416190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6416300Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6416350Z E           
2025-02-24T16:12:46.6416440Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6416670Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6416910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6416910Z 
2025-02-24T16:12:46.6417160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6417170Z 
2025-02-24T16:12:46.6417310Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6417380Z 
2025-02-24T16:12:46.6417570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efca40>
2025-02-24T16:12:46.6417750Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>, attr = 'f_lu'
2025-02-24T16:12:46.6417850Z 
2025-02-24T16:12:46.6417970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6418070Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6418140Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6418190Z         try:
2025-02-24T16:12:46.6418310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6418380Z         except KeyError:
2025-02-24T16:12:46.6418500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6418550Z     
2025-02-24T16:12:46.6418610Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6418710Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6418790Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6418910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6418980Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6419060Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6419160Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6419160Z 
2025-02-24T16:12:46.6419260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6419360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6419480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6419530Z     ???
2025-02-24T16:12:46.6419640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6419640Z 
2025-02-24T16:12:46.6419690Z >   ???
2025-02-24T16:12:46.6419800Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6419850Z E   
2025-02-24T16:12:46.6419960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6420060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6420110Z E          ...
2025-02-24T16:12:46.6420190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6420310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6420400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6420460Z E          ...
2025-02-24T16:12:46.6420530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6420640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6420730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6420730Z 
2025-02-24T16:12:46.6420810Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6420990Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T16:12:46.6421000Z 
2025-02-24T16:12:46.6421120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6421240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6421320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6421440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6421550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6421640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6421700Z err_msg = None
2025-02-24T16:12:46.6421700Z 
2025-02-24T16:12:46.6421790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6421850Z         if err_msg is None:
2025-02-24T16:12:46.6421930Z             if left.shape != right.shape:
2025-02-24T16:12:46.6422000Z                 raise_assert_detail(
2025-02-24T16:12:46.6422120Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6422260Z                 )
2025-02-24T16:12:46.6422310Z     
2025-02-24T16:12:46.6422370Z             diff = 0
2025-02-24T16:12:46.6422520Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6422590Z                 # count up differences
2025-02-24T16:12:46.6422740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6422810Z                     diff += 1
2025-02-24T16:12:46.6422860Z     
2025-02-24T16:12:46.6422930Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6423040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6423190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6423280Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6423340Z E           
2025-02-24T16:12:46.6423450Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6423690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6423910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6423920Z 
2025-02-24T16:12:46.6424170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6424170Z 
2025-02-24T16:12:46.6424320Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6424320Z 
2025-02-24T16:12:46.6424500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efd1c0>
2025-02-24T16:12:46.6424630Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>
2025-02-24T16:12:46.6424700Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6424700Z 
2025-02-24T16:12:46.6424820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6424910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6424980Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6425030Z         try:
2025-02-24T16:12:46.6425170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6425240Z         except KeyError:
2025-02-24T16:12:46.6425350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6425410Z     
2025-02-24T16:12:46.6425480Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6425560Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6425630Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6425750Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6425810Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6425890Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6425990Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6426040Z             else:
2025-02-24T16:12:46.6426120Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6426220Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6426220Z 
2025-02-24T16:12:46.6426330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6426430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6426560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6426610Z     ???
2025-02-24T16:12:46.6426730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6426950Z 
2025-02-24T16:12:46.6427010Z >   ???
2025-02-24T16:12:46.6427120Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6427170Z E   
2025-02-24T16:12:46.6427390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6427490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6427540Z E          ...
2025-02-24T16:12:46.6427620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6427740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6427840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6427890Z E          ...
2025-02-24T16:12:46.6427970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6428090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6428190Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6428190Z 
2025-02-24T16:12:46.6428270Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6428460Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T16:12:46.6428470Z 
2025-02-24T16:12:46.6428600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6428730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6428810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6449560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6449870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6449970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6450030Z err_msg = None
2025-02-24T16:12:46.6450040Z 
2025-02-24T16:12:46.6450140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6450230Z         if err_msg is None:
2025-02-24T16:12:46.6450310Z             if left.shape != right.shape:
2025-02-24T16:12:46.6450380Z                 raise_assert_detail(
2025-02-24T16:12:46.6450530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6450590Z                 )
2025-02-24T16:12:46.6450640Z     
2025-02-24T16:12:46.6450690Z             diff = 0
2025-02-24T16:12:46.6450790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6450870Z                 # count up differences
2025-02-24T16:12:46.6451020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6451080Z                     diff += 1
2025-02-24T16:12:46.6451140Z     
2025-02-24T16:12:46.6451210Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6451340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6451480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6451590Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6451640Z E           
2025-02-24T16:12:46.6451740Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6451970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6452200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6452200Z 
2025-02-24T16:12:46.6452470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6452790Z 
2025-02-24T16:12:46.6452950Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6453090Z 
2025-02-24T16:12:46.6453280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efd280>
2025-02-24T16:12:46.6453420Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>
2025-02-24T16:12:46.6453480Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6453490Z 
2025-02-24T16:12:46.6453600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6453700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6453770Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6453820Z         try:
2025-02-24T16:12:46.6453950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6454020Z         except KeyError:
2025-02-24T16:12:46.6454130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6454190Z     
2025-02-24T16:12:46.6454260Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6454340Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6454420Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6454530Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6454600Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6454690Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6454790Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6454850Z             else:
2025-02-24T16:12:46.6454920Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6455030Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6455040Z 
2025-02-24T16:12:46.6455140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6455250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6455380Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6455440Z     ???
2025-02-24T16:12:46.6455540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6455550Z 
2025-02-24T16:12:46.6455610Z >   ???
2025-02-24T16:12:46.6455730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6455780Z E   
2025-02-24T16:12:46.6455890Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6455990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6456040Z E          ...
2025-02-24T16:12:46.6456120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6456230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6456330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6456380Z E          ...
2025-02-24T16:12:46.6456460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6456570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6456650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6456660Z 
2025-02-24T16:12:46.6456730Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6456920Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T16:12:46.6456920Z 
2025-02-24T16:12:46.6457030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6457150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6457240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6457350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6457470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6457940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6458110Z err_msg = None
2025-02-24T16:12:46.6458110Z 
2025-02-24T16:12:46.6458200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6458340Z         if err_msg is None:
2025-02-24T16:12:46.6458420Z             if left.shape != right.shape:
2025-02-24T16:12:46.6458490Z                 raise_assert_detail(
2025-02-24T16:12:46.6458620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6458680Z                 )
2025-02-24T16:12:46.6458730Z     
2025-02-24T16:12:46.6459250Z             diff = 0
2025-02-24T16:12:46.6459370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6459830Z                 # count up differences
2025-02-24T16:12:46.6461130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6461250Z                     diff += 1
2025-02-24T16:12:46.6461580Z     
2025-02-24T16:12:46.6461690Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6461820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6462300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6462430Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6462510Z E           
2025-02-24T16:12:46.6462910Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6463440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6463690Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6463710Z 
2025-02-24T16:12:46.6464570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6464580Z 
2025-02-24T16:12:46.6465100Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6465110Z 
2025-02-24T16:12:46.6465600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efd400>
2025-02-24T16:12:46.6466110Z plasma = <tardis.plasma.base.BasePlasma object at 0x17cbdec30>, attr = 'j_blues'
2025-02-24T16:12:46.6466120Z 
2025-02-24T16:12:46.6466250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6466610Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6466690Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6467040Z         try:
2025-02-24T16:12:46.6467200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6467260Z         except KeyError:
2025-02-24T16:12:46.6467660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6467730Z     
2025-02-24T16:12:46.6467810Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6468200Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6468280Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6468670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6468750Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6468820Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6469190Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6469250Z             else:
2025-02-24T16:12:46.6469330Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6469790Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6469980Z 
2025-02-24T16:12:46.6470410Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6470520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6471410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6471490Z     ???
2025-02-24T16:12:46.6471600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6471600Z 
2025-02-24T16:12:46.6471660Z >   ???
2025-02-24T16:12:46.6471770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6471820Z E   
2025-02-24T16:12:46.6471930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6472020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6472080Z E          ...
2025-02-24T16:12:46.6472160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6472270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6472370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6472430Z E          ...
2025-02-24T16:12:46.6472510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6472620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6472710Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6472710Z 
2025-02-24T16:12:46.6472780Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6472980Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T16:12:46.6472990Z 
2025-02-24T16:12:46.6473110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6473220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6473310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6473440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6473580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6473670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6473730Z err_msg = None
2025-02-24T16:12:46.6473730Z 
2025-02-24T16:12:46.6473830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6473890Z         if err_msg is None:
2025-02-24T16:12:46.6473980Z             if left.shape != right.shape:
2025-02-24T16:12:46.6474040Z                 raise_assert_detail(
2025-02-24T16:12:46.6474170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6474230Z                 )
2025-02-24T16:12:46.6474290Z     
2025-02-24T16:12:46.6474350Z             diff = 0
2025-02-24T16:12:46.6474440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6474520Z                 # count up differences
2025-02-24T16:12:46.6474660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6474740Z                     diff += 1
2025-02-24T16:12:46.6474790Z     
2025-02-24T16:12:46.6475250Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6475380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6475540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6475650Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6475710Z E           
2025-02-24T16:12:46.6475810Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6476040Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6476610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6476770Z 
2025-02-24T16:12:46.6477060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6477070Z 
2025-02-24T16:12:46.6477210Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6477220Z 
2025-02-24T16:12:46.6477400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efe180>
2025-02-24T16:12:46.6477590Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>, attr = 'lines'
2025-02-24T16:12:46.6477600Z 
2025-02-24T16:12:46.6477740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6477850Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6477920Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6477980Z         try:
2025-02-24T16:12:46.6478100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6478170Z         except KeyError:
2025-02-24T16:12:46.6478290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6478340Z     
2025-02-24T16:12:46.6478410Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6478490Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6478560Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6478690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6478760Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6478830Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6478930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6479000Z             else:
2025-02-24T16:12:46.6479090Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6479330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6479350Z 
2025-02-24T16:12:46.6479480Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6479590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6479720Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6479770Z     ???
2025-02-24T16:12:46.6479870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6479870Z 
2025-02-24T16:12:46.6479930Z >   ???
2025-02-24T16:12:46.6480220Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6480290Z E   
2025-02-24T16:12:46.6480410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6480510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6480570Z E          ...
2025-02-24T16:12:46.6480650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6480950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6481070Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6481130Z E          ...
2025-02-24T16:12:46.6481210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6481330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6481430Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6481430Z 
2025-02-24T16:12:46.6481510Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6482190Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T16:12:46.6482200Z 
2025-02-24T16:12:46.6482390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efe240>
2025-02-24T16:12:46.6482530Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>
2025-02-24T16:12:46.6482750Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6482760Z 
2025-02-24T16:12:46.6482870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6483050Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6483130Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6483190Z         try:
2025-02-24T16:12:46.6483320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6483380Z         except KeyError:
2025-02-24T16:12:46.6483530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6483590Z     
2025-02-24T16:12:46.6483660Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6483740Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6483810Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6483930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6484020Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6484110Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6484200Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6484210Z 
2025-02-24T16:12:46.6484310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6484420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6484420Z 
2025-02-24T16:12:46.6484540Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6484620Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6484710Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6484780Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6484910Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6484980Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6485070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6485150Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6495230Z err_msg = None
2025-02-24T16:12:46.6495270Z 
2025-02-24T16:12:46.6495410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6495480Z         if err_msg is None:
2025-02-24T16:12:46.6495560Z             if left.shape != right.shape:
2025-02-24T16:12:46.6495690Z                 raise_assert_detail(
2025-02-24T16:12:46.6495830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6495880Z                 )
2025-02-24T16:12:46.6495940Z     
2025-02-24T16:12:46.6496000Z             diff = 0
2025-02-24T16:12:46.6496100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6496180Z                 # count up differences
2025-02-24T16:12:46.6496380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6496450Z                     diff += 1
2025-02-24T16:12:46.6496510Z     
2025-02-24T16:12:46.6496580Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6496760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6496910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6497060Z E           AssertionError: Series are different
2025-02-24T16:12:46.6497110Z E           
2025-02-24T16:12:46.6497200Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6497580Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6497910Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6498570Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6498630Z 
2025-02-24T16:12:46.6498910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6499190Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T16:12:46.6499210Z 
2025-02-24T16:12:46.6499410Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efe300>
2025-02-24T16:12:46.6499600Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>
2025-02-24T16:12:46.6499680Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6499690Z 
2025-02-24T16:12:46.6499810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6499910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6500030Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6500090Z         try:
2025-02-24T16:12:46.6500220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6500290Z         except KeyError:
2025-02-24T16:12:46.6500450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6500510Z     
2025-02-24T16:12:46.6500580Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6500660Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6500730Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6500900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6501000Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6501680Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6501820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6501820Z 
2025-02-24T16:12:46.6501930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6502100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6502100Z 
2025-02-24T16:12:46.6502230Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6502300Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6502400Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6502460Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6502600Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6502670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6502770Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6502840Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6502890Z err_msg = None
2025-02-24T16:12:46.6502900Z 
2025-02-24T16:12:46.6502990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6503050Z         if err_msg is None:
2025-02-24T16:12:46.6503130Z             if left.shape != right.shape:
2025-02-24T16:12:46.6503200Z                 raise_assert_detail(
2025-02-24T16:12:46.6503330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6503380Z                 )
2025-02-24T16:12:46.6503430Z     
2025-02-24T16:12:46.6503490Z             diff = 0
2025-02-24T16:12:46.6503580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6503850Z                 # count up differences
2025-02-24T16:12:46.6504020Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6504230Z                     diff += 1
2025-02-24T16:12:46.6504280Z     
2025-02-24T16:12:46.6504360Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6504480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6504620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6504710Z E           AssertionError: Series are different
2025-02-24T16:12:46.6504760Z E           
2025-02-24T16:12:46.6504850Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6506000Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6506730Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6507060Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6507070Z 
2025-02-24T16:12:46.6507340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6507590Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T16:12:46.6507590Z 
2025-02-24T16:12:46.6507710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6507830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6507930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6508110Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6508250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6508330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6508390Z err_msg = None
2025-02-24T16:12:46.6508400Z 
2025-02-24T16:12:46.6508500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6508640Z         if err_msg is None:
2025-02-24T16:12:46.6508720Z             if left.shape != right.shape:
2025-02-24T16:12:46.6508810Z                 raise_assert_detail(
2025-02-24T16:12:46.6508950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6509000Z                 )
2025-02-24T16:12:46.6509110Z     
2025-02-24T16:12:46.6509170Z             diff = 0
2025-02-24T16:12:46.6509260Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6509340Z                 # count up differences
2025-02-24T16:12:46.6509490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6509550Z                     diff += 1
2025-02-24T16:12:46.6509600Z     
2025-02-24T16:12:46.6509680Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6510180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6510390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6510590Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6510650Z E           
2025-02-24T16:12:46.6510750Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6510970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6511200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6511200Z 
2025-02-24T16:12:46.6511510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6511520Z 
2025-02-24T16:12:46.6511670Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6511670Z 
2025-02-24T16:12:46.6511850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efe540>
2025-02-24T16:12:46.6512210Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>, attr = 'nu'
2025-02-24T16:12:46.6512220Z 
2025-02-24T16:12:46.6512350Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6512450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6512520Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6512570Z         try:
2025-02-24T16:12:46.6512700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6513490Z         except KeyError:
2025-02-24T16:12:46.6513630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6513690Z     
2025-02-24T16:12:46.6513760Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6513840Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6514270Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6514400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6514470Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6514550Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6514640Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6514650Z 
2025-02-24T16:12:46.6514960Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6515070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6515200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6515250Z     ???
2025-02-24T16:12:46.6515350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6515360Z 
2025-02-24T16:12:46.6515410Z >   ???
2025-02-24T16:12:46.6515520Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6515570Z E   
2025-02-24T16:12:46.6515680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6515780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6515830Z E          ...
2025-02-24T16:12:46.6515900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6516010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6516120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6516170Z E          ...
2025-02-24T16:12:46.6516240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6516350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6516550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6516550Z 
2025-02-24T16:12:46.6516620Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6516890Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T16:12:46.6516890Z 
2025-02-24T16:12:46.6517010Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6517130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6517220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6517330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6517450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6517530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6517590Z err_msg = None
2025-02-24T16:12:46.6517590Z 
2025-02-24T16:12:46.6517690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6517750Z         if err_msg is None:
2025-02-24T16:12:46.6517830Z             if left.shape != right.shape:
2025-02-24T16:12:46.6517900Z                 raise_assert_detail(
2025-02-24T16:12:46.6518020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6518080Z                 )
2025-02-24T16:12:46.6518130Z     
2025-02-24T16:12:46.6518180Z             diff = 0
2025-02-24T16:12:46.6518280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6518350Z                 # count up differences
2025-02-24T16:12:46.6518500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6518560Z                     diff += 1
2025-02-24T16:12:46.6518610Z     
2025-02-24T16:12:46.6518690Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6518810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6518960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6519050Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6519110Z E           
2025-02-24T16:12:46.6519200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6519430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6519660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6519670Z 
2025-02-24T16:12:46.6519930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6519930Z 
2025-02-24T16:12:46.6520100Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6520120Z 
2025-02-24T16:12:46.6520300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efe600>
2025-02-24T16:12:46.6520430Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>
2025-02-24T16:12:46.6520500Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6520500Z 
2025-02-24T16:12:46.6520620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6520730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6520820Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6520890Z         try:
2025-02-24T16:12:46.6521010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6521160Z         except KeyError:
2025-02-24T16:12:46.6521280Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6521390Z     
2025-02-24T16:12:46.6521460Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6521540Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6521620Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6521730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6521800Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6521880Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6521970Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6521970Z 
2025-02-24T16:12:46.6522080Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6522170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6522300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6522360Z     ???
2025-02-24T16:12:46.6522450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6522460Z 
2025-02-24T16:12:46.6522520Z >   ???
2025-02-24T16:12:46.6522620Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6522680Z E   
2025-02-24T16:12:46.6522790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6522880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6522940Z E          ...
2025-02-24T16:12:46.6523010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6523130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6523220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6523280Z E          ...
2025-02-24T16:12:46.6523350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6523460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6523550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6523550Z 
2025-02-24T16:12:46.6523620Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6523800Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T16:12:46.6523810Z 
2025-02-24T16:12:46.6523920Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6524040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6524120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6524230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6524350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6524430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6524500Z err_msg = None
2025-02-24T16:12:46.6524500Z 
2025-02-24T16:12:46.6524590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6524660Z         if err_msg is None:
2025-02-24T16:12:46.6524740Z             if left.shape != right.shape:
2025-02-24T16:12:46.6524800Z                 raise_assert_detail(
2025-02-24T16:12:46.6524930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6524980Z                 )
2025-02-24T16:12:46.6525030Z     
2025-02-24T16:12:46.6525080Z             diff = 0
2025-02-24T16:12:46.6525180Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6525250Z                 # count up differences
2025-02-24T16:12:46.6525390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6525460Z                     diff += 1
2025-02-24T16:12:46.6525510Z     
2025-02-24T16:12:46.6525580Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6525760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6525900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6526120Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6526230Z E           
2025-02-24T16:12:46.6526420Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6526660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6533020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6533530Z 
2025-02-24T16:12:46.6534250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6534300Z 
2025-02-24T16:12:46.6534460Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6534470Z 
2025-02-24T16:12:46.6534650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efe6c0>
2025-02-24T16:12:46.6534820Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>, attr = 'f_lu'
2025-02-24T16:12:46.6534820Z 
2025-02-24T16:12:46.6534940Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6535040Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6535100Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6535160Z         try:
2025-02-24T16:12:46.6535280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6535360Z         except KeyError:
2025-02-24T16:12:46.6535480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6535530Z     
2025-02-24T16:12:46.6535610Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6535680Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6535760Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6535870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6535940Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6536010Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6536110Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6536110Z 
2025-02-24T16:12:46.6536280Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6536380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6536560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6536620Z     ???
2025-02-24T16:12:46.6536720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6536730Z 
2025-02-24T16:12:46.6536780Z >   ???
2025-02-24T16:12:46.6536880Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6536940Z E   
2025-02-24T16:12:46.6537050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6537140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6537200Z E          ...
2025-02-24T16:12:46.6537280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6537390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6537490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6537540Z E          ...
2025-02-24T16:12:46.6537620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6538190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6538540Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6538550Z 
2025-02-24T16:12:46.6538620Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6539220Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T16:12:46.6539220Z 
2025-02-24T16:12:46.6539490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6539640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6539730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6539850Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6539960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6540050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6540110Z err_msg = None
2025-02-24T16:12:46.6540110Z 
2025-02-24T16:12:46.6540210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6540270Z         if err_msg is None:
2025-02-24T16:12:46.6540350Z             if left.shape != right.shape:
2025-02-24T16:12:46.6540420Z                 raise_assert_detail(
2025-02-24T16:12:46.6540550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6540610Z                 )
2025-02-24T16:12:46.6540660Z     
2025-02-24T16:12:46.6540720Z             diff = 0
2025-02-24T16:12:46.6540810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6540940Z                 # count up differences
2025-02-24T16:12:46.6541090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6541150Z                     diff += 1
2025-02-24T16:12:46.6541210Z     
2025-02-24T16:12:46.6541280Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6541400Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6541540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6541640Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6541700Z E           
2025-02-24T16:12:46.6541790Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6542010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6542290Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6542300Z 
2025-02-24T16:12:46.6542560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6542570Z 
2025-02-24T16:12:46.6542710Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6542710Z 
2025-02-24T16:12:46.6542890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efee40>
2025-02-24T16:12:46.6543020Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>
2025-02-24T16:12:46.6543090Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6543090Z 
2025-02-24T16:12:46.6543210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6543300Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6543370Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6543430Z         try:
2025-02-24T16:12:46.6543550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6543700Z         except KeyError:
2025-02-24T16:12:46.6543820Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6543990Z     
2025-02-24T16:12:46.6544060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6544140Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6544210Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6544320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6544400Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6544470Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6544560Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6544620Z             else:
2025-02-24T16:12:46.6544700Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6544790Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6544790Z 
2025-02-24T16:12:46.6544900Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6545000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6545130Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6545180Z     ???
2025-02-24T16:12:46.6545280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6545280Z 
2025-02-24T16:12:46.6545340Z >   ???
2025-02-24T16:12:46.6545490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6545550Z E   
2025-02-24T16:12:46.6545660Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6545750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6545810Z E          ...
2025-02-24T16:12:46.6545890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6546000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6546100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6546520Z E          ...
2025-02-24T16:12:46.6546690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6546820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6546910Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6546910Z 
2025-02-24T16:12:46.6546980Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6547210Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T16:12:46.6547220Z 
2025-02-24T16:12:46.6547340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6547450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6547540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6547660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6547770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6547860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6547920Z err_msg = None
2025-02-24T16:12:46.6547920Z 
2025-02-24T16:12:46.6548020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6548080Z         if err_msg is None:
2025-02-24T16:12:46.6548170Z             if left.shape != right.shape:
2025-02-24T16:12:46.6548240Z                 raise_assert_detail(
2025-02-24T16:12:46.6548360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6548420Z                 )
2025-02-24T16:12:46.6548470Z     
2025-02-24T16:12:46.6548520Z             diff = 0
2025-02-24T16:12:46.6548620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6548690Z                 # count up differences
2025-02-24T16:12:46.6548840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6549130Z                     diff += 1
2025-02-24T16:12:46.6549210Z     
2025-02-24T16:12:46.6549280Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6549520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6549670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6549770Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6549820Z E           
2025-02-24T16:12:46.6549920Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6550130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6550360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6550370Z 
2025-02-24T16:12:46.6550630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6550630Z 
2025-02-24T16:12:46.6550780Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6550780Z 
2025-02-24T16:12:46.6550960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efef00>
2025-02-24T16:12:46.6551090Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>
2025-02-24T16:12:46.6551150Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6551160Z 
2025-02-24T16:12:46.6551270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6551380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6551440Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6552200Z         try:
2025-02-24T16:12:46.6552600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6552680Z         except KeyError:
2025-02-24T16:12:46.6552800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6552850Z     
2025-02-24T16:12:46.6552920Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6553000Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6553070Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6553190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6553260Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6553330Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6553430Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6553490Z             else:
2025-02-24T16:12:46.6553560Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6553660Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6553670Z 
2025-02-24T16:12:46.6553770Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6553880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6554000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6554060Z     ???
2025-02-24T16:12:46.6554160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6554160Z 
2025-02-24T16:12:46.6554210Z >   ???
2025-02-24T16:12:46.6554320Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6554370Z E   
2025-02-24T16:12:46.6554480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6554580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6554730Z E          ...
2025-02-24T16:12:46.6554810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6554930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6555150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6555220Z E          ...
2025-02-24T16:12:46.6555300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6555410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6555500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6555500Z 
2025-02-24T16:12:46.6555570Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6555750Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T16:12:46.6555760Z 
2025-02-24T16:12:46.6555870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6555990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6556070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6556190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6556340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6556420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6556480Z err_msg = None
2025-02-24T16:12:46.6556480Z 
2025-02-24T16:12:46.6556570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6556630Z         if err_msg is None:
2025-02-24T16:12:46.6556710Z             if left.shape != right.shape:
2025-02-24T16:12:46.6556780Z                 raise_assert_detail(
2025-02-24T16:12:46.6556900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6556960Z                 )
2025-02-24T16:12:46.6557010Z     
2025-02-24T16:12:46.6557070Z             diff = 0
2025-02-24T16:12:46.6557160Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6557230Z                 # count up differences
2025-02-24T16:12:46.6557410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6557470Z                     diff += 1
2025-02-24T16:12:46.6557520Z     
2025-02-24T16:12:46.6557590Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6557710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6557860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6557950Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6558000Z E           
2025-02-24T16:12:46.6558100Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6558320Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6558550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6558560Z 
2025-02-24T16:12:46.6558810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6558810Z 
2025-02-24T16:12:46.6558950Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6558960Z 
2025-02-24T16:12:46.6559140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119eff080>
2025-02-24T16:12:46.6559440Z plasma = <tardis.plasma.base.BasePlasma object at 0x318726c30>, attr = 'j_blues'
2025-02-24T16:12:46.6559450Z 
2025-02-24T16:12:46.6559560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6559840Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6559910Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6559970Z         try:
2025-02-24T16:12:46.6560080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6560150Z         except KeyError:
2025-02-24T16:12:46.6560270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6560320Z     
2025-02-24T16:12:46.6560390Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6560470Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6560540Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6560720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6560790Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6560870Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6560960Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6561020Z             else:
2025-02-24T16:12:46.6561100Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6561200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6561200Z 
2025-02-24T16:12:46.6561300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6561400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6561530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6561580Z     ???
2025-02-24T16:12:46.6561680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6561680Z 
2025-02-24T16:12:46.6562170Z >   ???
2025-02-24T16:12:46.6562610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6562710Z E   
2025-02-24T16:12:46.6562840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6562930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6562990Z E          ...
2025-02-24T16:12:46.6563140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6563260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6563360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6563410Z E          ...
2025-02-24T16:12:46.6563480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6563590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6563680Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6563680Z 
2025-02-24T16:12:46.6563760Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6563940Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T16:12:46.6563940Z 
2025-02-24T16:12:46.6564060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6564170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6564610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6564760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6564870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6564960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6565020Z err_msg = None
2025-02-24T16:12:46.6565020Z 
2025-02-24T16:12:46.6565180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6565250Z         if err_msg is None:
2025-02-24T16:12:46.6565330Z             if left.shape != right.shape:
2025-02-24T16:12:46.6565400Z                 raise_assert_detail(
2025-02-24T16:12:46.6565650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6565710Z                 )
2025-02-24T16:12:46.6565760Z     
2025-02-24T16:12:46.6565880Z             diff = 0
2025-02-24T16:12:46.6565980Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6566050Z                 # count up differences
2025-02-24T16:12:46.6566190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6566260Z                     diff += 1
2025-02-24T16:12:46.6566310Z     
2025-02-24T16:12:46.6566380Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6566550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6566700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6566790Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6566840Z E           
2025-02-24T16:12:46.6566940Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6567170Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6567410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6567410Z 
2025-02-24T16:12:46.6567670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6567670Z 
2025-02-24T16:12:46.6567810Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6567820Z 
2025-02-24T16:12:46.6568000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119effe00>
2025-02-24T16:12:46.6568170Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>, attr = 'lines'
2025-02-24T16:12:46.6568180Z 
2025-02-24T16:12:46.6568290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6568390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6568450Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6568510Z         try:
2025-02-24T16:12:46.6568630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6568690Z         except KeyError:
2025-02-24T16:12:46.6568860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6568910Z     
2025-02-24T16:12:46.6568980Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6569060Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6569130Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6569250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6569320Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6569400Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6569490Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6569550Z             else:
2025-02-24T16:12:46.6569620Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6569720Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6569720Z 
2025-02-24T16:12:46.6569830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6569920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6570050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6570100Z     ???
2025-02-24T16:12:46.6570200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6570300Z 
2025-02-24T16:12:46.6570370Z >   ???
2025-02-24T16:12:46.6570490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6570690Z E   
2025-02-24T16:12:46.6570800Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6570890Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6570950Z E          ...
2025-02-24T16:12:46.6571020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6571130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6571230Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6571280Z E          ...
2025-02-24T16:12:46.6571360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6571470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6571550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6571560Z 
2025-02-24T16:12:46.6571630Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6571850Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T16:12:46.6571860Z 
2025-02-24T16:12:46.6572040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119effec0>
2025-02-24T16:12:46.6572180Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>
2025-02-24T16:12:46.6572250Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6572250Z 
2025-02-24T16:12:46.6572370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6572460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6572530Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6572580Z         try:
2025-02-24T16:12:46.6572700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6572820Z         except KeyError:
2025-02-24T16:12:46.6572950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6573000Z     
2025-02-24T16:12:46.6573070Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6573150Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6573220Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6573340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6573400Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6573480Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6573580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6573580Z 
2025-02-24T16:12:46.6573680Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6573780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6573780Z 
2025-02-24T16:12:46.6573900Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6573970Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6574060Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6574140Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6574260Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6574380Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6574470Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6574540Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6574600Z err_msg = None
2025-02-24T16:12:46.6574600Z 
2025-02-24T16:12:46.6574690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6574760Z         if err_msg is None:
2025-02-24T16:12:46.6574830Z             if left.shape != right.shape:
2025-02-24T16:12:46.6574900Z                 raise_assert_detail(
2025-02-24T16:12:46.6575020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6575070Z                 )
2025-02-24T16:12:46.6575190Z     
2025-02-24T16:12:46.6575240Z             diff = 0
2025-02-24T16:12:46.6575340Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6575410Z                 # count up differences
2025-02-24T16:12:46.6575600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6575660Z                     diff += 1
2025-02-24T16:12:46.6575760Z     
2025-02-24T16:12:46.6575840Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6575950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6576100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6576180Z E           AssertionError: Series are different
2025-02-24T16:12:46.6576240Z E           
2025-02-24T16:12:46.6576320Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6576640Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6576930Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6577270Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6577270Z 
2025-02-24T16:12:46.6577520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6577750Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T16:12:46.6577750Z 
2025-02-24T16:12:46.6577930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119efff80>
2025-02-24T16:12:46.6578060Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>
2025-02-24T16:12:46.6578140Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6578140Z 
2025-02-24T16:12:46.6578260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6578350Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6578430Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6578480Z         try:
2025-02-24T16:12:46.6578610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6578670Z         except KeyError:
2025-02-24T16:12:46.6578790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6578840Z     
2025-02-24T16:12:46.6578940Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6579040Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6579110Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6579230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6579300Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6579380Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6579470Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6579650Z 
2025-02-24T16:12:46.6579800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6579910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6580290Z 
2025-02-24T16:12:46.6580420Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6580500Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6580700Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6580770Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6580900Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6580970Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6581070Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6581190Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6581250Z err_msg = None
2025-02-24T16:12:46.6581250Z 
2025-02-24T16:12:46.6581350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6581410Z         if err_msg is None:
2025-02-24T16:12:46.6581490Z             if left.shape != right.shape:
2025-02-24T16:12:46.6581560Z                 raise_assert_detail(
2025-02-24T16:12:46.6581700Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6581750Z                 )
2025-02-24T16:12:46.6581800Z     
2025-02-24T16:12:46.6581860Z             diff = 0
2025-02-24T16:12:46.6581950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6582030Z                 # count up differences
2025-02-24T16:12:46.6582180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6582240Z                     diff += 1
2025-02-24T16:12:46.6582290Z     
2025-02-24T16:12:46.6582370Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6582490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6582640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6582730Z E           AssertionError: Series are different
2025-02-24T16:12:46.6582780Z E           
2025-02-24T16:12:46.6582870Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6583190Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6583510Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6583840Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6583850Z 
2025-02-24T16:12:46.6584110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6584290Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T16:12:46.6584300Z 
2025-02-24T16:12:46.6584420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6584540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6584680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6584800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6584960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6585050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6585110Z err_msg = None
2025-02-24T16:12:46.6585110Z 
2025-02-24T16:12:46.6585200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6585270Z         if err_msg is None:
2025-02-24T16:12:46.6585350Z             if left.shape != right.shape:
2025-02-24T16:12:46.6585420Z                 raise_assert_detail(
2025-02-24T16:12:46.6585540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6586030Z                 )
2025-02-24T16:12:46.6586120Z     
2025-02-24T16:12:46.6586180Z             diff = 0
2025-02-24T16:12:46.6586280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6586350Z                 # count up differences
2025-02-24T16:12:46.6586500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6586560Z                     diff += 1
2025-02-24T16:12:46.6586620Z     
2025-02-24T16:12:46.6586690Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6586800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6586950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6587040Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6587100Z E           
2025-02-24T16:12:46.6587200Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6587420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6587650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6587660Z 
2025-02-24T16:12:46.6587910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6587910Z 
2025-02-24T16:12:46.6588050Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6588060Z 
2025-02-24T16:12:46.6588240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f28200>
2025-02-24T16:12:46.6588400Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>, attr = 'nu'
2025-02-24T16:12:46.6588410Z 
2025-02-24T16:12:46.6588530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6588650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6588710Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6588770Z         try:
2025-02-24T16:12:46.6588890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6589100Z         except KeyError:
2025-02-24T16:12:46.6589250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6595780Z     
2025-02-24T16:12:46.6595950Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6596030Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6596150Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6596270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6596350Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6596420Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6596690Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6596690Z 
2025-02-24T16:12:46.6596800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6597000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6597120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6597180Z     ???
2025-02-24T16:12:46.6597280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6597280Z 
2025-02-24T16:12:46.6597330Z >   ???
2025-02-24T16:12:46.6597440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6597490Z E   
2025-02-24T16:12:46.6597600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6597700Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6597750Z E          ...
2025-02-24T16:12:46.6597820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6597940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6598040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6598100Z E          ...
2025-02-24T16:12:46.6598170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6598280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6598370Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6598370Z 
2025-02-24T16:12:46.6598440Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6598640Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T16:12:46.6598650Z 
2025-02-24T16:12:46.6598760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6598880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6598970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6599080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6599200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6599280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6599350Z err_msg = None
2025-02-24T16:12:46.6599360Z 
2025-02-24T16:12:46.6599460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6599520Z         if err_msg is None:
2025-02-24T16:12:46.6599600Z             if left.shape != right.shape:
2025-02-24T16:12:46.6599670Z                 raise_assert_detail(
2025-02-24T16:12:46.6599800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6599850Z                 )
2025-02-24T16:12:46.6599900Z     
2025-02-24T16:12:46.6599950Z             diff = 0
2025-02-24T16:12:46.6600050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6600120Z                 # count up differences
2025-02-24T16:12:46.6600270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6600340Z                     diff += 1
2025-02-24T16:12:46.6600390Z     
2025-02-24T16:12:46.6600470Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6600590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6600730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6600840Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6600890Z E           
2025-02-24T16:12:46.6600990Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6601220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6601560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6601630Z 
2025-02-24T16:12:46.6601880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6601890Z 
2025-02-24T16:12:46.6602040Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6602050Z 
2025-02-24T16:12:46.6602240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f282c0>
2025-02-24T16:12:46.6602370Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>
2025-02-24T16:12:46.6602430Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6602440Z 
2025-02-24T16:12:46.6602550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6602660Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6602720Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6602770Z         try:
2025-02-24T16:12:46.6602890Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6602960Z         except KeyError:
2025-02-24T16:12:46.6603070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6603120Z     
2025-02-24T16:12:46.6603200Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6603270Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6603340Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6603460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6603520Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6603600Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6603690Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6603700Z 
2025-02-24T16:12:46.6603810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6603910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6604030Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6604080Z     ???
2025-02-24T16:12:46.6604180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6604180Z 
2025-02-24T16:12:46.6604240Z >   ???
2025-02-24T16:12:46.6604340Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6604390Z E   
2025-02-24T16:12:46.6604500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6604590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6604650Z E          ...
2025-02-24T16:12:46.6604730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6604840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6604940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6604990Z E          ...
2025-02-24T16:12:46.6605070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6605170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6605260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6605260Z 
2025-02-24T16:12:46.6605330Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6605520Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T16:12:46.6605520Z 
2025-02-24T16:12:46.6605630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6605740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6606300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6606430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6606700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6606790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6606850Z err_msg = None
2025-02-24T16:12:46.6606850Z 
2025-02-24T16:12:46.6606950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6607010Z         if err_msg is None:
2025-02-24T16:12:46.6607090Z             if left.shape != right.shape:
2025-02-24T16:12:46.6607160Z                 raise_assert_detail(
2025-02-24T16:12:46.6607280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6607340Z                 )
2025-02-24T16:12:46.6607390Z     
2025-02-24T16:12:46.6607440Z             diff = 0
2025-02-24T16:12:46.6607540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6607620Z                 # count up differences
2025-02-24T16:12:46.6607760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6607830Z                     diff += 1
2025-02-24T16:12:46.6607880Z     
2025-02-24T16:12:46.6607950Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6608070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6608230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6608330Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6608390Z E           
2025-02-24T16:12:46.6608490Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6608710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6608950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6608970Z 
2025-02-24T16:12:46.6609230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6609230Z 
2025-02-24T16:12:46.6609370Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6609380Z 
2025-02-24T16:12:46.6609560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f28380>
2025-02-24T16:12:46.6609730Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>, attr = 'f_lu'
2025-02-24T16:12:46.6609740Z 
2025-02-24T16:12:46.6609860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6609960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6610030Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6610080Z         try:
2025-02-24T16:12:46.6610200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6610270Z         except KeyError:
2025-02-24T16:12:46.6610390Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6610440Z     
2025-02-24T16:12:46.6610510Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6610580Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6610650Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6610780Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6610840Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6611010Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6611110Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6611110Z 
2025-02-24T16:12:46.6611270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6611380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6611500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6611550Z     ???
2025-02-24T16:12:46.6611650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6611660Z 
2025-02-24T16:12:46.6611710Z >   ???
2025-02-24T16:12:46.6611810Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6611860Z E   
2025-02-24T16:12:46.6611980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6612070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6612130Z E          ...
2025-02-24T16:12:46.6612210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6612310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6612410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6612470Z E          ...
2025-02-24T16:12:46.6612550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6612660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6612740Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6612750Z 
2025-02-24T16:12:46.6612820Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6613010Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T16:12:46.6613020Z 
2025-02-24T16:12:46.6613250Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6613370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6613470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6613580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6613690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6613780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6613830Z err_msg = None
2025-02-24T16:12:46.6613840Z 
2025-02-24T16:12:46.6614010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6614080Z         if err_msg is None:
2025-02-24T16:12:46.6614160Z             if left.shape != right.shape:
2025-02-24T16:12:46.6614240Z                 raise_assert_detail(
2025-02-24T16:12:46.6614420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6614480Z                 )
2025-02-24T16:12:46.6614530Z     
2025-02-24T16:12:46.6614580Z             diff = 0
2025-02-24T16:12:46.6614700Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6614790Z                 # count up differences
2025-02-24T16:12:46.6614940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6615120Z                     diff += 1
2025-02-24T16:12:46.6615190Z     
2025-02-24T16:12:46.6615260Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6615380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6615530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6615720Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6615840Z E           
2025-02-24T16:12:46.6615940Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6616510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6616940Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6616940Z 
2025-02-24T16:12:46.6617300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6617310Z 
2025-02-24T16:12:46.6617450Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6617500Z 
2025-02-24T16:12:46.6617680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f28b00>
2025-02-24T16:12:46.6617820Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>
2025-02-24T16:12:46.6617990Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6617990Z 
2025-02-24T16:12:46.6618110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6618210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6618280Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6618340Z         try:
2025-02-24T16:12:46.6618460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6618520Z         except KeyError:
2025-02-24T16:12:46.6618640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6618690Z     
2025-02-24T16:12:46.6618760Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6618840Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6618910Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6619110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6619180Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6619260Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6619360Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6619410Z             else:
2025-02-24T16:12:46.6619490Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6619580Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6619590Z 
2025-02-24T16:12:46.6619760Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6619870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6620060Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6620110Z     ???
2025-02-24T16:12:46.6620210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6620210Z 
2025-02-24T16:12:46.6620270Z >   ???
2025-02-24T16:12:46.6621230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6621320Z E   
2025-02-24T16:12:46.6621450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6621660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6621750Z E          ...
2025-02-24T16:12:46.6621830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6621940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6622040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6622100Z E          ...
2025-02-24T16:12:46.6622170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6622280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6622370Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6622370Z 
2025-02-24T16:12:46.6622440Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6622840Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T16:12:46.6622850Z 
2025-02-24T16:12:46.6623050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6623170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6623300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6623420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6623630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6623720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6623780Z err_msg = None
2025-02-24T16:12:46.6623780Z 
2025-02-24T16:12:46.6623870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6623930Z         if err_msg is None:
2025-02-24T16:12:46.6624010Z             if left.shape != right.shape:
2025-02-24T16:12:46.6624090Z                 raise_assert_detail(
2025-02-24T16:12:46.6624210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6624270Z                 )
2025-02-24T16:12:46.6624320Z     
2025-02-24T16:12:46.6624540Z             diff = 0
2025-02-24T16:12:46.6624640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6624710Z                 # count up differences
2025-02-24T16:12:46.6624850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6625000Z                     diff += 1
2025-02-24T16:12:46.6625060Z     
2025-02-24T16:12:46.6625130Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6625250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6625390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6625490Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6625540Z E           
2025-02-24T16:12:46.6625640Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6625940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6626230Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6626230Z 
2025-02-24T16:12:46.6626560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6626570Z 
2025-02-24T16:12:46.6626710Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6626720Z 
2025-02-24T16:12:46.6626890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f28bc0>
2025-02-24T16:12:46.6627110Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>
2025-02-24T16:12:46.6627220Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6627230Z 
2025-02-24T16:12:46.6627360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6627460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6627520Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6627580Z         try:
2025-02-24T16:12:46.6627700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6627860Z         except KeyError:
2025-02-24T16:12:46.6627980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6628040Z     
2025-02-24T16:12:46.6628110Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6628180Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6628390Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6628510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6628840Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6629060Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6629160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6629210Z             else:
2025-02-24T16:12:46.6629290Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6629380Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6629390Z 
2025-02-24T16:12:46.6629570Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6629670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6629800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6629850Z     ???
2025-02-24T16:12:46.6629950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6629960Z 
2025-02-24T16:12:46.6630310Z >   ???
2025-02-24T16:12:46.6630430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6630490Z E   
2025-02-24T16:12:46.6630600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6630800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6630850Z E          ...
2025-02-24T16:12:46.6630930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6631040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6631190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6631240Z E          ...
2025-02-24T16:12:46.6631310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6631420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6631510Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6631510Z 
2025-02-24T16:12:46.6631590Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6631760Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T16:12:46.6631770Z 
2025-02-24T16:12:46.6631900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6632050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6632130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6632240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6632360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6632460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6632810Z err_msg = None
2025-02-24T16:12:46.6632820Z 
2025-02-24T16:12:46.6632920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6632990Z         if err_msg is None:
2025-02-24T16:12:46.6633060Z             if left.shape != right.shape:
2025-02-24T16:12:46.6633130Z                 raise_assert_detail(
2025-02-24T16:12:46.6633260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6633310Z                 )
2025-02-24T16:12:46.6633360Z     
2025-02-24T16:12:46.6633420Z             diff = 0
2025-02-24T16:12:46.6633510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6633580Z                 # count up differences
2025-02-24T16:12:46.6633730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6633790Z                     diff += 1
2025-02-24T16:12:46.6633840Z     
2025-02-24T16:12:46.6633910Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6634030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6634170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6634370Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6634430Z E           
2025-02-24T16:12:46.6634590Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6634810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6635030Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6635040Z 
2025-02-24T16:12:46.6635300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6635300Z 
2025-02-24T16:12:46.6635440Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6635450Z 
2025-02-24T16:12:46.6635630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f28d40>
2025-02-24T16:12:46.6635800Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b2b9730>, attr = 'j_blues'
2025-02-24T16:12:46.6635810Z 
2025-02-24T16:12:46.6635920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6636020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6636080Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6636140Z         try:
2025-02-24T16:12:46.6636260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6636320Z         except KeyError:
2025-02-24T16:12:46.6636440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6636490Z     
2025-02-24T16:12:46.6636570Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6636640Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6636710Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6636830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6636900Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6636970Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6637060Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6637120Z             else:
2025-02-24T16:12:46.6637190Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6637290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6637290Z 
2025-02-24T16:12:46.6637390Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6637490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6637620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6637670Z     ???
2025-02-24T16:12:46.6637770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6637770Z 
2025-02-24T16:12:46.6637820Z >   ???
2025-02-24T16:12:46.6637930Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6637980Z E   
2025-02-24T16:12:46.6638090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6638180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6638230Z E          ...
2025-02-24T16:12:46.6638320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6638420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6638520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6638790Z E          ...
2025-02-24T16:12:46.6638910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6639160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6639310Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6639390Z 
2025-02-24T16:12:46.6639470Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6639700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T16:12:46.6639760Z 
2025-02-24T16:12:46.6639880Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6640010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6640090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6640220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6640330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6640420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6640480Z err_msg = None
2025-02-24T16:12:46.6640480Z 
2025-02-24T16:12:46.6640580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6640650Z         if err_msg is None:
2025-02-24T16:12:46.6640740Z             if left.shape != right.shape:
2025-02-24T16:12:46.6640810Z                 raise_assert_detail(
2025-02-24T16:12:46.6640940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6641000Z                 )
2025-02-24T16:12:46.6641050Z     
2025-02-24T16:12:46.6641100Z             diff = 0
2025-02-24T16:12:46.6641200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6641270Z                 # count up differences
2025-02-24T16:12:46.6641420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6641480Z                     diff += 1
2025-02-24T16:12:46.6641530Z     
2025-02-24T16:12:46.6641610Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6641730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6641880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6641980Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6642030Z E           
2025-02-24T16:12:46.6642130Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6642350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6642570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6642580Z 
2025-02-24T16:12:46.6642850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6642850Z 
2025-02-24T16:12:46.6642990Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6643000Z 
2025-02-24T16:12:46.6643180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f29ac0>
2025-02-24T16:12:46.6643350Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>, attr = 'lines'
2025-02-24T16:12:46.6643360Z 
2025-02-24T16:12:46.6643470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6643570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6643640Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6643690Z         try:
2025-02-24T16:12:46.6643870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6643940Z         except KeyError:
2025-02-24T16:12:46.6644060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6644160Z     
2025-02-24T16:12:46.6644230Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6644300Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6644380Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6644490Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6644560Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6644640Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6644730Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6644780Z             else:
2025-02-24T16:12:46.6644860Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6644960Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6644960Z 
2025-02-24T16:12:46.6645060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6645170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6645300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6645350Z     ???
2025-02-24T16:12:46.6645450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6645450Z 
2025-02-24T16:12:46.6645500Z >   ???
2025-02-24T16:12:46.6645610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6645660Z E   
2025-02-24T16:12:46.6645760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6645860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6645910Z E          ...
2025-02-24T16:12:46.6645990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6646100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6646200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6646250Z E          ...
2025-02-24T16:12:46.6646320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6646440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6646520Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6646520Z 
2025-02-24T16:12:46.6646590Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6646850Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T16:12:46.6646860Z 
2025-02-24T16:12:46.6647040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f29b80>
2025-02-24T16:12:46.6647180Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6647250Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6647260Z 
2025-02-24T16:12:46.6647410Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6647520Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6647590Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6647640Z         try:
2025-02-24T16:12:46.6647760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6647830Z         except KeyError:
2025-02-24T16:12:46.6647940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6648000Z     
2025-02-24T16:12:46.6648060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6648140Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6648210Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6648320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6648400Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6648470Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6648570Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6648690Z 
2025-02-24T16:12:46.6648810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6648900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6648990Z 
2025-02-24T16:12:46.6649200Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6649280Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6649390Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6649650Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6649800Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6649920Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6650010Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6650090Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6650160Z err_msg = None
2025-02-24T16:12:46.6650170Z 
2025-02-24T16:12:46.6650270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6650350Z         if err_msg is None:
2025-02-24T16:12:46.6650420Z             if left.shape != right.shape:
2025-02-24T16:12:46.6650510Z                 raise_assert_detail(
2025-02-24T16:12:46.6656600Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6656680Z                 )
2025-02-24T16:12:46.6656730Z     
2025-02-24T16:12:46.6656790Z             diff = 0
2025-02-24T16:12:46.6656890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6656960Z                 # count up differences
2025-02-24T16:12:46.6657110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6657170Z                     diff += 1
2025-02-24T16:12:46.6657220Z     
2025-02-24T16:12:46.6657290Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6657420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6657580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6657660Z E           AssertionError: Series are different
2025-02-24T16:12:46.6657720Z E           
2025-02-24T16:12:46.6657810Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6658130Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6658410Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6658700Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6658710Z 
2025-02-24T16:12:46.6658970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6659280Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T16:12:46.6659290Z 
2025-02-24T16:12:46.6659470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f29c40>
2025-02-24T16:12:46.6659770Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6659840Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6659910Z 
2025-02-24T16:12:46.6660040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6660140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6660200Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6660260Z         try:
2025-02-24T16:12:46.6660370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6660440Z         except KeyError:
2025-02-24T16:12:46.6660560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6660610Z     
2025-02-24T16:12:46.6660680Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6660760Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6660830Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6661380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6661500Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6661580Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6661680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6661680Z 
2025-02-24T16:12:46.6661810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6661920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6661920Z 
2025-02-24T16:12:46.6662040Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6662110Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6662220Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6662310Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6662440Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6662520Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6662640Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6662720Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6662840Z err_msg = None
2025-02-24T16:12:46.6662850Z 
2025-02-24T16:12:46.6662940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6663020Z         if err_msg is None:
2025-02-24T16:12:46.6663110Z             if left.shape != right.shape:
2025-02-24T16:12:46.6663170Z                 raise_assert_detail(
2025-02-24T16:12:46.6663300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6663350Z                 )
2025-02-24T16:12:46.6663410Z     
2025-02-24T16:12:46.6663470Z             diff = 0
2025-02-24T16:12:46.6663580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6663650Z                 # count up differences
2025-02-24T16:12:46.6663790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6663860Z                     diff += 1
2025-02-24T16:12:46.6663910Z     
2025-02-24T16:12:46.6663980Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6664160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6664320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6664410Z E           AssertionError: Series are different
2025-02-24T16:12:46.6664460Z E           
2025-02-24T16:12:46.6664550Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6664880Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6665330Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6665780Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6665780Z 
2025-02-24T16:12:46.6666050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6666270Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T16:12:46.6666280Z 
2025-02-24T16:12:46.6666400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6666520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6666600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6666720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6666820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6666910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6666960Z err_msg = None
2025-02-24T16:12:46.6666970Z 
2025-02-24T16:12:46.6667060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6667130Z         if err_msg is None:
2025-02-24T16:12:46.6667200Z             if left.shape != right.shape:
2025-02-24T16:12:46.6667270Z                 raise_assert_detail(
2025-02-24T16:12:46.6667400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6667500Z                 )
2025-02-24T16:12:46.6667560Z     
2025-02-24T16:12:46.6667610Z             diff = 0
2025-02-24T16:12:46.6667710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6667780Z                 # count up differences
2025-02-24T16:12:46.6667920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6667980Z                     diff += 1
2025-02-24T16:12:46.6668040Z     
2025-02-24T16:12:46.6668110Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6668230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6668380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6668470Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6668530Z E           
2025-02-24T16:12:46.6668630Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6668910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6669140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6669200Z 
2025-02-24T16:12:46.6669460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6669510Z 
2025-02-24T16:12:46.6669650Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6669660Z 
2025-02-24T16:12:46.6669840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f29e80>
2025-02-24T16:12:46.6670000Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>, attr = 'nu'
2025-02-24T16:12:46.6670050Z 
2025-02-24T16:12:46.6670170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6670270Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6670340Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6670400Z         try:
2025-02-24T16:12:46.6670520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6670580Z         except KeyError:
2025-02-24T16:12:46.6670700Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6670760Z     
2025-02-24T16:12:46.6670830Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6670910Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6670980Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6671200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6671310Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6671390Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6671480Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6671490Z 
2025-02-24T16:12:46.6671600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6671700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6671830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6671950Z     ???
2025-02-24T16:12:46.6672060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6672070Z 
2025-02-24T16:12:46.6672120Z >   ???
2025-02-24T16:12:46.6672230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6672280Z E   
2025-02-24T16:12:46.6672390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6672490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6672540Z E          ...
2025-02-24T16:12:46.6672620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6672730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6672830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6672880Z E          ...
2025-02-24T16:12:46.6672960Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6673070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6673150Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6673160Z 
2025-02-24T16:12:46.6673290Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6673530Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T16:12:46.6673530Z 
2025-02-24T16:12:46.6675080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6675240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6675320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6675450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6676010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6676110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6676160Z err_msg = None
2025-02-24T16:12:46.6676170Z 
2025-02-24T16:12:46.6676880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6676950Z         if err_msg is None:
2025-02-24T16:12:46.6677030Z             if left.shape != right.shape:
2025-02-24T16:12:46.6677200Z                 raise_assert_detail(
2025-02-24T16:12:46.6677320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6677370Z                 )
2025-02-24T16:12:46.6677430Z     
2025-02-24T16:12:46.6677480Z             diff = 0
2025-02-24T16:12:46.6677580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6677650Z                 # count up differences
2025-02-24T16:12:46.6677790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6677850Z                     diff += 1
2025-02-24T16:12:46.6677900Z     
2025-02-24T16:12:46.6677970Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6678090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6678240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6678330Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6678390Z E           
2025-02-24T16:12:46.6678490Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6678710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6678950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6678960Z 
2025-02-24T16:12:46.6679220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6679220Z 
2025-02-24T16:12:46.6679370Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6679370Z 
2025-02-24T16:12:46.6679550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f29f40>
2025-02-24T16:12:46.6679680Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6679740Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6679740Z 
2025-02-24T16:12:46.6679860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6679960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6680030Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6680080Z         try:
2025-02-24T16:12:46.6680200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6680270Z         except KeyError:
2025-02-24T16:12:46.6680380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6680440Z     
2025-02-24T16:12:46.6680510Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6680590Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6680660Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6680780Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6680850Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6680920Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6681010Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6681020Z 
2025-02-24T16:12:46.6681120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6681220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6681340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6681390Z     ???
2025-02-24T16:12:46.6681580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6681580Z 
2025-02-24T16:12:46.6681640Z >   ???
2025-02-24T16:12:46.6681800Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6681860Z E   
2025-02-24T16:12:46.6681970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6682070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6682120Z E          ...
2025-02-24T16:12:46.6682200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6682310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6682400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6682460Z E          ...
2025-02-24T16:12:46.6682530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6682640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6682730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6682730Z 
2025-02-24T16:12:46.6682800Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6683030Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T16:12:46.6683040Z 
2025-02-24T16:12:46.6683150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6683270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6683350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6683480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6683580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6683670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6683720Z err_msg = None
2025-02-24T16:12:46.6683730Z 
2025-02-24T16:12:46.6683820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6683890Z         if err_msg is None:
2025-02-24T16:12:46.6683970Z             if left.shape != right.shape:
2025-02-24T16:12:46.6684040Z                 raise_assert_detail(
2025-02-24T16:12:46.6684170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6684220Z                 )
2025-02-24T16:12:46.6684270Z     
2025-02-24T16:12:46.6684330Z             diff = 0
2025-02-24T16:12:46.6684420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6684490Z                 # count up differences
2025-02-24T16:12:46.6684630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6684690Z                     diff += 1
2025-02-24T16:12:46.6684740Z     
2025-02-24T16:12:46.6684810Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6684930Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6685080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6685170Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6685230Z E           
2025-02-24T16:12:46.6685330Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6685550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6685770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6685830Z 
2025-02-24T16:12:46.6686110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6686200Z 
2025-02-24T16:12:46.6686350Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6686350Z 
2025-02-24T16:12:46.6686530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2a000>
2025-02-24T16:12:46.6686700Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>, attr = 'f_lu'
2025-02-24T16:12:46.6686700Z 
2025-02-24T16:12:46.6686840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6686950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6687010Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6687070Z         try:
2025-02-24T16:12:46.6687200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6687280Z         except KeyError:
2025-02-24T16:12:46.6687400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6687450Z     
2025-02-24T16:12:46.6687520Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6687590Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6687680Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6687800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6687870Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6687950Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6688040Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6688040Z 
2025-02-24T16:12:46.6688150Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6688240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6688370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6688420Z     ???
2025-02-24T16:12:46.6688520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6688520Z 
2025-02-24T16:12:46.6688570Z >   ???
2025-02-24T16:12:46.6688680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6688730Z E   
2025-02-24T16:12:46.6688840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6688940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6689350Z E          ...
2025-02-24T16:12:46.6689440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6689550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6689650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6689710Z E          ...
2025-02-24T16:12:46.6689780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6689890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6689980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6689980Z 
2025-02-24T16:12:46.6690060Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6690440Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T16:12:46.6690450Z 
2025-02-24T16:12:46.6690630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2a600>
2025-02-24T16:12:46.6690770Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6690840Z attr = 'stimulated_emission_factor'
2025-02-24T16:12:46.6690840Z 
2025-02-24T16:12:46.6690950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6691050Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6691120Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6691170Z         try:
2025-02-24T16:12:46.6691290Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6692110Z         except KeyError:
2025-02-24T16:12:46.6692300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6692360Z     
2025-02-24T16:12:46.6692500Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6692570Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6692760Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6692890Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6692960Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6693030Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6693130Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6693180Z             else:
2025-02-24T16:12:46.6693260Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6693350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6693360Z 
2025-02-24T16:12:46.6693460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6693570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6693700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6693750Z     ???
2025-02-24T16:12:46.6693860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6693860Z 
2025-02-24T16:12:46.6693910Z >   ???
2025-02-24T16:12:46.6694060Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.6694110Z E   
2025-02-24T16:12:46.6694350Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:12:46.6694720Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6699950Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-24T16:12:46.6704260Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:12:46.6704840Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:12:46.6704860Z 
2025-02-24T16:12:46.6704940Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6705210Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T16:12:46.6705210Z 
2025-02-24T16:12:46.6705320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6705450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6705540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6705660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6705770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6705860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6705920Z err_msg = None
2025-02-24T16:12:46.6705920Z 
2025-02-24T16:12:46.6706010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6706370Z         if err_msg is None:
2025-02-24T16:12:46.6706470Z             if left.shape != right.shape:
2025-02-24T16:12:46.6706540Z                 raise_assert_detail(
2025-02-24T16:12:46.6706660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6706720Z                 )
2025-02-24T16:12:46.6706770Z     
2025-02-24T16:12:46.6706830Z             diff = 0
2025-02-24T16:12:46.6706920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6707000Z                 # count up differences
2025-02-24T16:12:46.6707140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6707200Z                     diff += 1
2025-02-24T16:12:46.6707250Z     
2025-02-24T16:12:46.6707320Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6707440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6707590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6707680Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6707730Z E           
2025-02-24T16:12:46.6707830Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6708150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6708450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6708450Z 
2025-02-24T16:12:46.6708710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6708710Z 
2025-02-24T16:12:46.6708860Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6708870Z 
2025-02-24T16:12:46.6709040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2a6c0>
2025-02-24T16:12:46.6709180Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6709250Z attr = 'previous_beta_sobolev'
2025-02-24T16:12:46.6709250Z 
2025-02-24T16:12:46.6709370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6709460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6709530Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6709590Z         try:
2025-02-24T16:12:46.6709700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6709770Z         except KeyError:
2025-02-24T16:12:46.6709890Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6709950Z     
2025-02-24T16:12:46.6710010Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6710090Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6710160Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6710280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6710350Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6710420Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6710520Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6710570Z             else:
2025-02-24T16:12:46.6710650Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6710740Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6710750Z 
2025-02-24T16:12:46.6710840Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6710970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6711110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6711170Z     ???
2025-02-24T16:12:46.6711280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6711290Z 
2025-02-24T16:12:46.6711350Z >   ???
2025-02-24T16:12:46.6711460Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6711510Z E   
2025-02-24T16:12:46.6711620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6711730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6711800Z E          ...
2025-02-24T16:12:46.6711870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6711980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6712080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6712130Z E          ...
2025-02-24T16:12:46.6712210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6712320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6712400Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6712480Z 
2025-02-24T16:12:46.6712560Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6712790Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T16:12:46.6712850Z 
2025-02-24T16:12:46.6712970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6713080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6713160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6713280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6713390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6713480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6713530Z err_msg = None
2025-02-24T16:12:46.6713540Z 
2025-02-24T16:12:46.6713630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6713700Z         if err_msg is None:
2025-02-24T16:12:46.6713770Z             if left.shape != right.shape:
2025-02-24T16:12:46.6713840Z                 raise_assert_detail(
2025-02-24T16:12:46.6713970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6714020Z                 )
2025-02-24T16:12:46.6714080Z     
2025-02-24T16:12:46.6714130Z             diff = 0
2025-02-24T16:12:46.6714220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6714290Z                 # count up differences
2025-02-24T16:12:46.6714440Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6714500Z                     diff += 1
2025-02-24T16:12:46.6714550Z     
2025-02-24T16:12:46.6714820Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6715200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6715370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6715460Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6715530Z E           
2025-02-24T16:12:46.6715620Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6715850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6716160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6716170Z 
2025-02-24T16:12:46.6716430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6716440Z 
2025-02-24T16:12:46.6716590Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6716590Z 
2025-02-24T16:12:46.6716770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2a780>
2025-02-24T16:12:46.6716910Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6716970Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6716970Z 
2025-02-24T16:12:46.6717100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6717510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6717580Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6717630Z         try:
2025-02-24T16:12:46.6717760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6717820Z         except KeyError:
2025-02-24T16:12:46.6718060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6718110Z     
2025-02-24T16:12:46.6718180Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6718320Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6718390Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6718510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6718580Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6718650Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6718740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6718800Z             else:
2025-02-24T16:12:46.6718880Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6718970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6718970Z 
2025-02-24T16:12:46.6719070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6719230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6719360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6719410Z     ???
2025-02-24T16:12:46.6719510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6719510Z 
2025-02-24T16:12:46.6719570Z >   ???
2025-02-24T16:12:46.6719680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6719730Z E   
2025-02-24T16:12:46.6719840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6719940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6720000Z E          ...
2025-02-24T16:12:46.6720070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6720190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6720280Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6720340Z E          ...
2025-02-24T16:12:46.6720410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6720520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6720610Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6720610Z 
2025-02-24T16:12:46.6720680Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6720920Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T16:12:46.6720930Z 
2025-02-24T16:12:46.6721040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6721210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6721300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6721410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6721530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6721610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6721670Z err_msg = None
2025-02-24T16:12:46.6721680Z 
2025-02-24T16:12:46.6721780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6721840Z         if err_msg is None:
2025-02-24T16:12:46.6722010Z             if left.shape != right.shape:
2025-02-24T16:12:46.6722150Z                 raise_assert_detail(
2025-02-24T16:12:46.6722610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6722730Z                 )
2025-02-24T16:12:46.6730120Z     
2025-02-24T16:12:46.6730200Z             diff = 0
2025-02-24T16:12:46.6730310Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6730390Z                 # count up differences
2025-02-24T16:12:46.6730550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6731240Z                     diff += 1
2025-02-24T16:12:46.6731290Z     
2025-02-24T16:12:46.6731370Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6731490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6731960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6732060Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6732120Z E           
2025-02-24T16:12:46.6732220Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6732440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6732670Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6732690Z 
2025-02-24T16:12:46.6732970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6732980Z 
2025-02-24T16:12:46.6733130Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6733130Z 
2025-02-24T16:12:46.6733380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2a840>
2025-02-24T16:12:46.6733520Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>
2025-02-24T16:12:46.6733580Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6733590Z 
2025-02-24T16:12:46.6733700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6733800Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6733870Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6733930Z         try:
2025-02-24T16:12:46.6734050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6734110Z         except KeyError:
2025-02-24T16:12:46.6734230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6734280Z     
2025-02-24T16:12:46.6734360Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6734430Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6734510Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6734620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6734690Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6734770Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6734860Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6734920Z             else:
2025-02-24T16:12:46.6734990Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6735090Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6735100Z 
2025-02-24T16:12:46.6735200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6735300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6735780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6736100Z     ???
2025-02-24T16:12:46.6736490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6736500Z 
2025-02-24T16:12:46.6736800Z >   ???
2025-02-24T16:12:46.6737110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6737280Z E   
2025-02-24T16:12:46.6737570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6737930Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6738090Z E          ...
2025-02-24T16:12:46.6738300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6739540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6739870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6740150Z E          ...
2025-02-24T16:12:46.6740230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6740340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6740660Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6740670Z 
2025-02-24T16:12:46.6740750Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6740980Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T16:12:46.6740990Z 
2025-02-24T16:12:46.6741100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6741220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6741320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6741440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6741560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6741640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6741700Z err_msg = None
2025-02-24T16:12:46.6741710Z 
2025-02-24T16:12:46.6741800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6741870Z         if err_msg is None:
2025-02-24T16:12:46.6741950Z             if left.shape != right.shape:
2025-02-24T16:12:46.6742020Z                 raise_assert_detail(
2025-02-24T16:12:46.6742150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6742200Z                 )
2025-02-24T16:12:46.6742250Z     
2025-02-24T16:12:46.6742310Z             diff = 0
2025-02-24T16:12:46.6742400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6742480Z                 # count up differences
2025-02-24T16:12:46.6742620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6742700Z                     diff += 1
2025-02-24T16:12:46.6742750Z     
2025-02-24T16:12:46.6742830Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6742940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6743090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6743190Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6743240Z E           
2025-02-24T16:12:46.6743340Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6743560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6743800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6743800Z 
2025-02-24T16:12:46.6744070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6744070Z 
2025-02-24T16:12:46.6744220Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6744220Z 
2025-02-24T16:12:46.6744400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2a9c0>
2025-02-24T16:12:46.6744580Z plasma = <tardis.plasma.base.BasePlasma object at 0x11b62e420>, attr = 'j_blues'
2025-02-24T16:12:46.6744680Z 
2025-02-24T16:12:46.6744800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6744900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6745020Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6745080Z         try:
2025-02-24T16:12:46.6745210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6745270Z         except KeyError:
2025-02-24T16:12:46.6745390Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6745440Z     
2025-02-24T16:12:46.6745510Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6745590Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6745660Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6746040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6746160Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6746250Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6746360Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6746420Z             else:
2025-02-24T16:12:46.6746500Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6746600Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6746600Z 
2025-02-24T16:12:46.6746720Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6746820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6746950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6747000Z     ???
2025-02-24T16:12:46.6747110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6747110Z 
2025-02-24T16:12:46.6747170Z >   ???
2025-02-24T16:12:46.6747280Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6747330Z E   
2025-02-24T16:12:46.6747440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6747540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6747600Z E          ...
2025-02-24T16:12:46.6747680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6747790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6747890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6747960Z E          ...
2025-02-24T16:12:46.6748040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6748150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6748240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6748240Z 
2025-02-24T16:12:46.6748320Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6748540Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T16:12:46.6748540Z 
2025-02-24T16:12:46.6748660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6748780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6748870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6748990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6749110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6749190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6749250Z err_msg = None
2025-02-24T16:12:46.6749250Z 
2025-02-24T16:12:46.6749350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6749410Z         if err_msg is None:
2025-02-24T16:12:46.6749490Z             if left.shape != right.shape:
2025-02-24T16:12:46.6749560Z                 raise_assert_detail(
2025-02-24T16:12:46.6749690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6749910Z                 )
2025-02-24T16:12:46.6750130Z     
2025-02-24T16:12:46.6750200Z             diff = 0
2025-02-24T16:12:46.6750370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6750440Z                 # count up differences
2025-02-24T16:12:46.6750590Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6750650Z                     diff += 1
2025-02-24T16:12:46.6750700Z     
2025-02-24T16:12:46.6750780Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6750900Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6751040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6751140Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6751190Z E           
2025-02-24T16:12:46.6751290Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6751520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6751750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6751760Z 
2025-02-24T16:12:46.6752020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6752020Z 
2025-02-24T16:12:46.6752170Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6752170Z 
2025-02-24T16:12:46.6752360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2b740>
2025-02-24T16:12:46.6752530Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>, attr = 'lines'
2025-02-24T16:12:46.6752530Z 
2025-02-24T16:12:46.6752650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6752750Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6752810Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6752870Z         try:
2025-02-24T16:12:46.6752990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6753050Z         except KeyError:
2025-02-24T16:12:46.6753170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6753220Z     
2025-02-24T16:12:46.6753300Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6753370Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6753450Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6753560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6753630Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6753710Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6753810Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6753870Z             else:
2025-02-24T16:12:46.6753960Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6754070Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6754070Z 
2025-02-24T16:12:46.6754170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6754270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6754400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6754450Z     ???
2025-02-24T16:12:46.6754550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6754560Z 
2025-02-24T16:12:46.6754820Z >   ???
2025-02-24T16:12:46.6754930Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6754990Z E   
2025-02-24T16:12:46.6755090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6755410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6755460Z E          ...
2025-02-24T16:12:46.6755540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6755650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6755750Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6755800Z E          ...
2025-02-24T16:12:46.6755880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6755990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6756070Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6756080Z 
2025-02-24T16:12:46.6756150Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6756400Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T16:12:46.6756410Z 
2025-02-24T16:12:46.6756590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2b800>
2025-02-24T16:12:46.6756730Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6756800Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6756810Z 
2025-02-24T16:12:46.6756920Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6757020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6757090Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6757140Z         try:
2025-02-24T16:12:46.6757260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6757320Z         except KeyError:
2025-02-24T16:12:46.6757970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6758030Z     
2025-02-24T16:12:46.6758110Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6758190Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6758260Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6758680Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6758770Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6758840Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6758940Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6758940Z 
2025-02-24T16:12:46.6759040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6759140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6759150Z 
2025-02-24T16:12:46.6759270Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6759340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6759430Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6759510Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6759630Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6759700Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6759790Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6759860Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6759920Z err_msg = None
2025-02-24T16:12:46.6759920Z 
2025-02-24T16:12:46.6760010Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6760080Z         if err_msg is None:
2025-02-24T16:12:46.6760150Z             if left.shape != right.shape:
2025-02-24T16:12:46.6760220Z                 raise_assert_detail(
2025-02-24T16:12:46.6760340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6760400Z                 )
2025-02-24T16:12:46.6760580Z     
2025-02-24T16:12:46.6760730Z             diff = 0
2025-02-24T16:12:46.6760830Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6760900Z                 # count up differences
2025-02-24T16:12:46.6761120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6761190Z                     diff += 1
2025-02-24T16:12:46.6761250Z     
2025-02-24T16:12:46.6761320Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6761430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6761580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6761660Z E           AssertionError: Series are different
2025-02-24T16:12:46.6761720Z E           
2025-02-24T16:12:46.6761800Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6762260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6762550Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6762840Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6762850Z 
2025-02-24T16:12:46.6763410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6763880Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T16:12:46.6763890Z 
2025-02-24T16:12:46.6764080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2b8c0>
2025-02-24T16:12:46.6764220Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6764300Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6764300Z 
2025-02-24T16:12:46.6764530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6764640Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6764710Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6764870Z         try:
2025-02-24T16:12:46.6765000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6765180Z         except KeyError:
2025-02-24T16:12:46.6765300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6765350Z     
2025-02-24T16:12:46.6765430Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6765510Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6765580Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6765690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6765760Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6765840Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6765930Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6765930Z 
2025-02-24T16:12:46.6766040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6766140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6766260Z 
2025-02-24T16:12:46.6766380Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6766450Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6766740Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6766810Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6766930Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6767000Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6767100Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6767160Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6767220Z err_msg = None
2025-02-24T16:12:46.6767220Z 
2025-02-24T16:12:46.6767320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6767380Z         if err_msg is None:
2025-02-24T16:12:46.6767460Z             if left.shape != right.shape:
2025-02-24T16:12:46.6767530Z                 raise_assert_detail(
2025-02-24T16:12:46.6767660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6767710Z                 )
2025-02-24T16:12:46.6767790Z     
2025-02-24T16:12:46.6767850Z             diff = 0
2025-02-24T16:12:46.6767950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6768020Z                 # count up differences
2025-02-24T16:12:46.6768160Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6768350Z                     diff += 1
2025-02-24T16:12:46.6768410Z     
2025-02-24T16:12:46.6768490Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6768600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6768750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6768830Z E           AssertionError: Series are different
2025-02-24T16:12:46.6768890Z E           
2025-02-24T16:12:46.6768980Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6769300Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6769630Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6770070Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6770080Z 
2025-02-24T16:12:46.6770340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6770660Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T16:12:46.6770660Z 
2025-02-24T16:12:46.6770890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6771060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6771230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6771350Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6771650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6771730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6771790Z err_msg = None
2025-02-24T16:12:46.6771800Z 
2025-02-24T16:12:46.6771890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6771960Z         if err_msg is None:
2025-02-24T16:12:46.6772040Z             if left.shape != right.shape:
2025-02-24T16:12:46.6772100Z                 raise_assert_detail(
2025-02-24T16:12:46.6772340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6772400Z                 )
2025-02-24T16:12:46.6772450Z     
2025-02-24T16:12:46.6772510Z             diff = 0
2025-02-24T16:12:46.6772610Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6772680Z                 # count up differences
2025-02-24T16:12:46.6772830Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6772890Z                     diff += 1
2025-02-24T16:12:46.6773050Z     
2025-02-24T16:12:46.6773130Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6773360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6773620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6773720Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6773770Z E           
2025-02-24T16:12:46.6773870Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6775130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6775800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6775830Z 
2025-02-24T16:12:46.6776100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6776100Z 
2025-02-24T16:12:46.6776250Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6776250Z 
2025-02-24T16:12:46.6776440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2bb00>
2025-02-24T16:12:46.6776600Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>, attr = 'nu'
2025-02-24T16:12:46.6776620Z 
2025-02-24T16:12:46.6776740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6776850Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6776920Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6776970Z         try:
2025-02-24T16:12:46.6777090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6777160Z         except KeyError:
2025-02-24T16:12:46.6777270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6777330Z     
2025-02-24T16:12:46.6777400Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6777470Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6777550Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6777660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6777740Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6778140Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6778240Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6778250Z 
2025-02-24T16:12:46.6778600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6778700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6778830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6778880Z     ???
2025-02-24T16:12:46.6778980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6778980Z 
2025-02-24T16:12:46.6779040Z >   ???
2025-02-24T16:12:46.6779150Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6779200Z E   
2025-02-24T16:12:46.6779300Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6779400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6779450Z E          ...
2025-02-24T16:12:46.6779530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6779650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6779740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6779800Z E          ...
2025-02-24T16:12:46.6779880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6779990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6780070Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6780070Z 
2025-02-24T16:12:46.6780150Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6780380Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T16:12:46.6780380Z 
2025-02-24T16:12:46.6780490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6780610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6780690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6780810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6780930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6781010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6781090Z err_msg = None
2025-02-24T16:12:46.6781100Z 
2025-02-24T16:12:46.6781200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6781260Z         if err_msg is None:
2025-02-24T16:12:46.6781340Z             if left.shape != right.shape:
2025-02-24T16:12:46.6781410Z                 raise_assert_detail(
2025-02-24T16:12:46.6781530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6781580Z                 )
2025-02-24T16:12:46.6781640Z     
2025-02-24T16:12:46.6781690Z             diff = 0
2025-02-24T16:12:46.6781790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6781860Z                 # count up differences
2025-02-24T16:12:46.6782010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6782080Z                     diff += 1
2025-02-24T16:12:46.6782130Z     
2025-02-24T16:12:46.6782200Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6782320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6782470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6782570Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6782620Z E           
2025-02-24T16:12:46.6782720Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6782940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6783310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6783320Z 
2025-02-24T16:12:46.6783640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6783640Z 
2025-02-24T16:12:46.6783780Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6783790Z 
2025-02-24T16:12:46.6783970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2bbc0>
2025-02-24T16:12:46.6784100Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6784160Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6784170Z 
2025-02-24T16:12:46.6784290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6784390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6784460Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6784510Z         try:
2025-02-24T16:12:46.6784630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6784690Z         except KeyError:
2025-02-24T16:12:46.6784810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6784870Z     
2025-02-24T16:12:46.6784940Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6785020Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6785090Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6785200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6785270Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6785350Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6785450Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6785450Z 
2025-02-24T16:12:46.6785550Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6785660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6785780Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6785830Z     ???
2025-02-24T16:12:46.6785930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6785930Z 
2025-02-24T16:12:46.6785980Z >   ???
2025-02-24T16:12:46.6786090Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6786150Z E   
2025-02-24T16:12:46.6786260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6786360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6786410Z E          ...
2025-02-24T16:12:46.6786490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6786600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6786710Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6786760Z E          ...
2025-02-24T16:12:46.6786830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6786940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6787030Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6787030Z 
2025-02-24T16:12:46.6787110Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6787320Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T16:12:46.6787320Z 
2025-02-24T16:12:46.6787430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6787550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6787700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6787820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6788410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6788500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6788550Z err_msg = None
2025-02-24T16:12:46.6788560Z 
2025-02-24T16:12:46.6788650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6788710Z         if err_msg is None:
2025-02-24T16:12:46.6788790Z             if left.shape != right.shape:
2025-02-24T16:12:46.6788860Z                 raise_assert_detail(
2025-02-24T16:12:46.6788980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6789030Z                 )
2025-02-24T16:12:46.6789090Z     
2025-02-24T16:12:46.6789150Z             diff = 0
2025-02-24T16:12:46.6789250Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6789320Z                 # count up differences
2025-02-24T16:12:46.6789470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6789530Z                     diff += 1
2025-02-24T16:12:46.6789580Z     
2025-02-24T16:12:46.6789730Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6789850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6790020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6790120Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6790240Z E           
2025-02-24T16:12:46.6790350Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6790590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6790960Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6790980Z 
2025-02-24T16:12:46.6791290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6791300Z 
2025-02-24T16:12:46.6791540Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6791540Z 
2025-02-24T16:12:46.6791800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f2bc80>
2025-02-24T16:12:46.6791980Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>, attr = 'f_lu'
2025-02-24T16:12:46.6792000Z 
2025-02-24T16:12:46.6792120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6797740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6797840Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6797890Z         try:
2025-02-24T16:12:46.6798020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6798080Z         except KeyError:
2025-02-24T16:12:46.6798200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6798250Z     
2025-02-24T16:12:46.6798320Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6798400Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6799050Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6799200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6799270Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6799620Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6799720Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6799800Z 
2025-02-24T16:12:46.6799910Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6800010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6800140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6800190Z     ???
2025-02-24T16:12:46.6800290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6800290Z 
2025-02-24T16:12:46.6800340Z >   ???
2025-02-24T16:12:46.6800450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6800500Z E   
2025-02-24T16:12:46.6800600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6800710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6800760Z E          ...
2025-02-24T16:12:46.6800840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6801360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6801460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6801510Z E          ...
2025-02-24T16:12:46.6801590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6801700Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6801780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6801780Z 
2025-02-24T16:12:46.6801850Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6802110Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T16:12:46.6802110Z 
2025-02-24T16:12:46.6802290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f502c0>
2025-02-24T16:12:46.6802430Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6802510Z attr = 'stimulated_emission_factor'
2025-02-24T16:12:46.6802510Z 
2025-02-24T16:12:46.6802630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6802730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6802790Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6802850Z         try:
2025-02-24T16:12:46.6802970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6803030Z         except KeyError:
2025-02-24T16:12:46.6803150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6803200Z     
2025-02-24T16:12:46.6803270Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6803350Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6803420Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6803540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6803600Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6803690Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6803900Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6803960Z             else:
2025-02-24T16:12:46.6804030Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6804130Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6804130Z 
2025-02-24T16:12:46.6804240Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6804340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6804460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6804510Z     ???
2025-02-24T16:12:46.6804610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6804620Z 
2025-02-24T16:12:46.6804670Z >   ???
2025-02-24T16:12:46.6804820Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.6805000Z E   
2025-02-24T16:12:46.6805140Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:12:46.6805480Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6809870Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:12:46.6817520Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:12:46.6817990Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:12:46.6818000Z 
2025-02-24T16:12:46.6818080Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6818330Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T16:12:46.6818330Z 
2025-02-24T16:12:46.6818450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6818580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6818680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6818800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6818920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6819010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6819070Z err_msg = None
2025-02-24T16:12:46.6819080Z 
2025-02-24T16:12:46.6819180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6819240Z         if err_msg is None:
2025-02-24T16:12:46.6819330Z             if left.shape != right.shape:
2025-02-24T16:12:46.6819390Z                 raise_assert_detail(
2025-02-24T16:12:46.6819540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6819600Z                 )
2025-02-24T16:12:46.6819660Z     
2025-02-24T16:12:46.6819710Z             diff = 0
2025-02-24T16:12:46.6819810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6819890Z                 # count up differences
2025-02-24T16:12:46.6820050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6820120Z                     diff += 1
2025-02-24T16:12:46.6820180Z     
2025-02-24T16:12:46.6820250Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6820380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6820530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6820630Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6820690Z E           
2025-02-24T16:12:46.6820780Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6821010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6821500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6821510Z 
2025-02-24T16:12:46.6821790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6821790Z 
2025-02-24T16:12:46.6821940Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6821950Z 
2025-02-24T16:12:46.6822140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f50380>
2025-02-24T16:12:46.6822290Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6822370Z attr = 'previous_beta_sobolev'
2025-02-24T16:12:46.6822490Z 
2025-02-24T16:12:46.6822620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6822720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6822860Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6822920Z         try:
2025-02-24T16:12:46.6823040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6823110Z         except KeyError:
2025-02-24T16:12:46.6823220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6823280Z     
2025-02-24T16:12:46.6823350Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6823430Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6823510Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6823630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6823720Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6823800Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6823900Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6823960Z             else:
2025-02-24T16:12:46.6824030Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6824130Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6824130Z 
2025-02-24T16:12:46.6824240Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6824340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6824470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6824520Z     ???
2025-02-24T16:12:46.6824620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6824630Z 
2025-02-24T16:12:46.6824670Z >   ???
2025-02-24T16:12:46.6824790Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6824840Z E   
2025-02-24T16:12:46.6824950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6825050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6825110Z E          ...
2025-02-24T16:12:46.6825180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6825300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6825400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6825450Z E          ...
2025-02-24T16:12:46.6825530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6825640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6825720Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6825730Z 
2025-02-24T16:12:46.6825800Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6826030Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T16:12:46.6826030Z 
2025-02-24T16:12:46.6826150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6826280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6826360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6826490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6826600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6826680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6826740Z err_msg = None
2025-02-24T16:12:46.6826740Z 
2025-02-24T16:12:46.6826840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6826900Z         if err_msg is None:
2025-02-24T16:12:46.6826980Z             if left.shape != right.shape:
2025-02-24T16:12:46.6827050Z                 raise_assert_detail(
2025-02-24T16:12:46.6827180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6827330Z                 )
2025-02-24T16:12:46.6827380Z     
2025-02-24T16:12:46.6827440Z             diff = 0
2025-02-24T16:12:46.6827530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6827660Z                 # count up differences
2025-02-24T16:12:46.6827810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6827870Z                     diff += 1
2025-02-24T16:12:46.6827930Z     
2025-02-24T16:12:46.6828010Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6828130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6828290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6828750Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6828840Z E           
2025-02-24T16:12:46.6828950Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6829210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6829450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6829460Z 
2025-02-24T16:12:46.6829720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6829720Z 
2025-02-24T16:12:46.6829870Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6829870Z 
2025-02-24T16:12:46.6830060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f50440>
2025-02-24T16:12:46.6830200Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6830260Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6830260Z 
2025-02-24T16:12:46.6830380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6830490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6830560Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6830620Z         try:
2025-02-24T16:12:46.6830740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6830810Z         except KeyError:
2025-02-24T16:12:46.6830930Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6830980Z     
2025-02-24T16:12:46.6831050Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6831130Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6831200Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6831320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6831390Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6831480Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6831580Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6831820Z             else:
2025-02-24T16:12:46.6831910Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6832000Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6832010Z 
2025-02-24T16:12:46.6832130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6832240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6832430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6832510Z     ???
2025-02-24T16:12:46.6832620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6832630Z 
2025-02-24T16:12:46.6832890Z >   ???
2025-02-24T16:12:46.6833000Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6833060Z E   
2025-02-24T16:12:46.6833170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6833590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6833650Z E          ...
2025-02-24T16:12:46.6833730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6833840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6833940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6834000Z E          ...
2025-02-24T16:12:46.6834070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6834190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6834280Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6834280Z 
2025-02-24T16:12:46.6834350Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6834600Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T16:12:46.6834610Z 
2025-02-24T16:12:46.6834740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6834870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6834960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6835080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6835200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6835280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6835350Z err_msg = None
2025-02-24T16:12:46.6835350Z 
2025-02-24T16:12:46.6835440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6835500Z         if err_msg is None:
2025-02-24T16:12:46.6835590Z             if left.shape != right.shape:
2025-02-24T16:12:46.6835660Z                 raise_assert_detail(
2025-02-24T16:12:46.6835790Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6835840Z                 )
2025-02-24T16:12:46.6835910Z     
2025-02-24T16:12:46.6835970Z             diff = 0
2025-02-24T16:12:46.6836130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6836210Z                 # count up differences
2025-02-24T16:12:46.6836350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6836420Z                     diff += 1
2025-02-24T16:12:46.6836480Z     
2025-02-24T16:12:46.6836560Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6836690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6836830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6836950Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6837010Z E           
2025-02-24T16:12:46.6837120Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6837350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6837570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6837580Z 
2025-02-24T16:12:46.6837850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6837950Z 
2025-02-24T16:12:46.6838110Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6838170Z 
2025-02-24T16:12:46.6838370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f50500>
2025-02-24T16:12:46.6838510Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>
2025-02-24T16:12:46.6838570Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6838580Z 
2025-02-24T16:12:46.6838700Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6838790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6838860Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6838920Z         try:
2025-02-24T16:12:46.6839030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6839100Z         except KeyError:
2025-02-24T16:12:46.6839220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6839270Z     
2025-02-24T16:12:46.6839340Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6839410Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6839490Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6839600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6839670Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6839750Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6839840Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6839890Z             else:
2025-02-24T16:12:46.6839970Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6840060Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6840060Z 
2025-02-24T16:12:46.6840170Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6840280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6840410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6840470Z     ???
2025-02-24T16:12:46.6840570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6840580Z 
2025-02-24T16:12:46.6840630Z >   ???
2025-02-24T16:12:46.6840740Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6840790Z E   
2025-02-24T16:12:46.6840900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6841000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6841050Z E          ...
2025-02-24T16:12:46.6841130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6841240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6841340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6841390Z E          ...
2025-02-24T16:12:46.6841460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6841570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6841660Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6841660Z 
2025-02-24T16:12:46.6841740Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6842050Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T16:12:46.6842060Z 
2025-02-24T16:12:46.6842550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6842710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6842800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6842920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6843030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6843130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6843320Z err_msg = None
2025-02-24T16:12:46.6843320Z 
2025-02-24T16:12:46.6843420Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6843550Z         if err_msg is None:
2025-02-24T16:12:46.6843630Z             if left.shape != right.shape:
2025-02-24T16:12:46.6843700Z                 raise_assert_detail(
2025-02-24T16:12:46.6843830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6843890Z                 )
2025-02-24T16:12:46.6843940Z     
2025-02-24T16:12:46.6843990Z             diff = 0
2025-02-24T16:12:46.6844100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6844170Z                 # count up differences
2025-02-24T16:12:46.6844320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6844380Z                     diff += 1
2025-02-24T16:12:46.6844440Z     
2025-02-24T16:12:46.6844510Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6844630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6844780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6844880Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6844940Z E           
2025-02-24T16:12:46.6845030Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6845250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6845500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6845510Z 
2025-02-24T16:12:46.6845770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6845780Z 
2025-02-24T16:12:46.6845920Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6845920Z 
2025-02-24T16:12:46.6846110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f50680>
2025-02-24T16:12:46.6846280Z plasma = <tardis.plasma.base.BasePlasma object at 0x13df4afc0>, attr = 'j_blues'
2025-02-24T16:12:46.6846290Z 
2025-02-24T16:12:46.6846400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6846500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6846570Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6846620Z         try:
2025-02-24T16:12:46.6846750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6846810Z         except KeyError:
2025-02-24T16:12:46.6846930Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6846980Z     
2025-02-24T16:12:46.6847060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6847130Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6847210Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6847420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6847500Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6847580Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6847670Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6847720Z             else:
2025-02-24T16:12:46.6847800Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6847900Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6847990Z 
2025-02-24T16:12:46.6848090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6848190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6848370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6848430Z     ???
2025-02-24T16:12:46.6848530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6848530Z 
2025-02-24T16:12:46.6848580Z >   ???
2025-02-24T16:12:46.6848700Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6848750Z E   
2025-02-24T16:12:46.6848860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6848960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6849010Z E          ...
2025-02-24T16:12:46.6849080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6849190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6866780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6866990Z E          ...
2025-02-24T16:12:46.6867070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6867210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6867300Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6867300Z 
2025-02-24T16:12:46.6867380Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6867560Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T16:12:46.6867560Z 
2025-02-24T16:12:46.6867690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6867850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6868150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6868290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6868410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6868500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6868580Z err_msg = None
2025-02-24T16:12:46.6868580Z 
2025-02-24T16:12:46.6868680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6868750Z         if err_msg is None:
2025-02-24T16:12:46.6868830Z             if left.shape != right.shape:
2025-02-24T16:12:46.6868910Z                 raise_assert_detail(
2025-02-24T16:12:46.6869030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6869090Z                 )
2025-02-24T16:12:46.6869140Z     
2025-02-24T16:12:46.6869190Z             diff = 0
2025-02-24T16:12:46.6869290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6869360Z                 # count up differences
2025-02-24T16:12:46.6869500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6869570Z                     diff += 1
2025-02-24T16:12:46.6869630Z     
2025-02-24T16:12:46.6869700Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6869830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6869990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6870090Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6870140Z E           
2025-02-24T16:12:46.6870240Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6870470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6870950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6871150Z 
2025-02-24T16:12:46.6871420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6871430Z 
2025-02-24T16:12:46.6871580Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6871590Z 
2025-02-24T16:12:46.6871780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f51400>
2025-02-24T16:12:46.6871970Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>, attr = 'lines'
2025-02-24T16:12:46.6871980Z 
2025-02-24T16:12:46.6872100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6872200Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6872270Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6872320Z         try:
2025-02-24T16:12:46.6872450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6872510Z         except KeyError:
2025-02-24T16:12:46.6872640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6872690Z     
2025-02-24T16:12:46.6872760Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6872840Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6872910Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6873030Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6873100Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6873180Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6873270Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6873330Z             else:
2025-02-24T16:12:46.6873410Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6873510Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6873510Z 
2025-02-24T16:12:46.6873620Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6873720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6873850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6873900Z     ???
2025-02-24T16:12:46.6874020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6874030Z 
2025-02-24T16:12:46.6874080Z >   ???
2025-02-24T16:12:46.6874190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6874240Z E   
2025-02-24T16:12:46.6874340Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6874450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6874500Z E          ...
2025-02-24T16:12:46.6874590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6874710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6874820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6874880Z E          ...
2025-02-24T16:12:46.6874950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6875070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6875360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6875360Z 
2025-02-24T16:12:46.6875440Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6875630Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T16:12:46.6875640Z 
2025-02-24T16:12:46.6875820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f514c0>
2025-02-24T16:12:46.6875960Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6876140Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6876140Z 
2025-02-24T16:12:46.6876270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6876430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6876510Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6876560Z         try:
2025-02-24T16:12:46.6876680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6876750Z         except KeyError:
2025-02-24T16:12:46.6876870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6876920Z     
2025-02-24T16:12:46.6876990Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6877070Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6877160Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6877280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6877350Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6877430Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6877530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6877540Z 
2025-02-24T16:12:46.6877640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6877740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6877750Z 
2025-02-24T16:12:46.6877870Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6877940Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6878040Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6878120Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6878240Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6878320Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6878410Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6878480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6878530Z err_msg = None
2025-02-24T16:12:46.6878540Z 
2025-02-24T16:12:46.6878630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6878700Z         if err_msg is None:
2025-02-24T16:12:46.6878770Z             if left.shape != right.shape:
2025-02-24T16:12:46.6878850Z                 raise_assert_detail(
2025-02-24T16:12:46.6878970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6879350Z                 )
2025-02-24T16:12:46.6879410Z     
2025-02-24T16:12:46.6879470Z             diff = 0
2025-02-24T16:12:46.6879570Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6879640Z                 # count up differences
2025-02-24T16:12:46.6879800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6879940Z                     diff += 1
2025-02-24T16:12:46.6880010Z     
2025-02-24T16:12:46.6880080Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6880380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6880540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6880680Z E           AssertionError: Series are different
2025-02-24T16:12:46.6880750Z E           
2025-02-24T16:12:46.6880850Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6881170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6887740Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6888280Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6888280Z 
2025-02-24T16:12:46.6888570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6888770Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T16:12:46.6888780Z 
2025-02-24T16:12:46.6888960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f51580>
2025-02-24T16:12:46.6889090Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6889180Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6889180Z 
2025-02-24T16:12:46.6889300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6889390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6889470Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6889520Z         try:
2025-02-24T16:12:46.6889640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6889700Z         except KeyError:
2025-02-24T16:12:46.6889830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6889880Z     
2025-02-24T16:12:46.6889960Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6890050Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6890130Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6890250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6890310Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6890400Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6890490Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6890500Z 
2025-02-24T16:12:46.6890600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6890710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6890710Z 
2025-02-24T16:12:46.6890830Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6890900Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6891000Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6891060Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6891190Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6891260Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6891360Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6891430Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6891490Z err_msg = None
2025-02-24T16:12:46.6891490Z 
2025-02-24T16:12:46.6891580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6891640Z         if err_msg is None:
2025-02-24T16:12:46.6891720Z             if left.shape != right.shape:
2025-02-24T16:12:46.6891790Z                 raise_assert_detail(
2025-02-24T16:12:46.6891910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6891970Z                 )
2025-02-24T16:12:46.6892020Z     
2025-02-24T16:12:46.6892070Z             diff = 0
2025-02-24T16:12:46.6892170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6892320Z                 # count up differences
2025-02-24T16:12:46.6892470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6892590Z                     diff += 1
2025-02-24T16:12:46.6892640Z     
2025-02-24T16:12:46.6892720Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6892830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6892970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6893060Z E           AssertionError: Series are different
2025-02-24T16:12:46.6893110Z E           
2025-02-24T16:12:46.6893200Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6893510Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6893830Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6894150Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6894160Z 
2025-02-24T16:12:46.6894420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6894590Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T16:12:46.6894590Z 
2025-02-24T16:12:46.6894710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6894830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6894910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6895030Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6895140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6895220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6895280Z err_msg = None
2025-02-24T16:12:46.6895290Z 
2025-02-24T16:12:46.6895380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6895450Z         if err_msg is None:
2025-02-24T16:12:46.6895530Z             if left.shape != right.shape:
2025-02-24T16:12:46.6895590Z                 raise_assert_detail(
2025-02-24T16:12:46.6895720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6895770Z                 )
2025-02-24T16:12:46.6895820Z     
2025-02-24T16:12:46.6895870Z             diff = 0
2025-02-24T16:12:46.6895970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6896040Z                 # count up differences
2025-02-24T16:12:46.6896180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6896250Z                     diff += 1
2025-02-24T16:12:46.6896300Z     
2025-02-24T16:12:46.6896370Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6896810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6896960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6897150Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6897210Z E           
2025-02-24T16:12:46.6897310Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6897530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6897760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6897760Z 
2025-02-24T16:12:46.6898020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6898020Z 
2025-02-24T16:12:46.6898170Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6898170Z 
2025-02-24T16:12:46.6898350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f517c0>
2025-02-24T16:12:46.6898520Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>, attr = 'nu'
2025-02-24T16:12:46.6898520Z 
2025-02-24T16:12:46.6898640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6898730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6898800Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6898850Z         try:
2025-02-24T16:12:46.6898970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6899040Z         except KeyError:
2025-02-24T16:12:46.6899160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6899210Z     
2025-02-24T16:12:46.6899280Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6899360Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6899430Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6899550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6899620Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6899770Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6899860Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6899870Z 
2025-02-24T16:12:46.6899970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6900070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6900190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6900250Z     ???
2025-02-24T16:12:46.6900350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6900350Z 
2025-02-24T16:12:46.6900410Z >   ???
2025-02-24T16:12:46.6900510Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6900560Z E   
2025-02-24T16:12:46.6900670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6900770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6900830Z E          ...
2025-02-24T16:12:46.6900900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6901010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6901110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6901170Z E          ...
2025-02-24T16:12:46.6901240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6901350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6901500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6901500Z 
2025-02-24T16:12:46.6901570Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6901790Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T16:12:46.6901800Z 
2025-02-24T16:12:46.6901910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6902030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6902110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6902220Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6902340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6902420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6902490Z err_msg = None
2025-02-24T16:12:46.6902490Z 
2025-02-24T16:12:46.6902860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6902930Z         if err_msg is None:
2025-02-24T16:12:46.6903030Z             if left.shape != right.shape:
2025-02-24T16:12:46.6903110Z                 raise_assert_detail(
2025-02-24T16:12:46.6903230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6903290Z                 )
2025-02-24T16:12:46.6903340Z     
2025-02-24T16:12:46.6903400Z             diff = 0
2025-02-24T16:12:46.6903490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6903560Z                 # count up differences
2025-02-24T16:12:46.6903700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6903770Z                     diff += 1
2025-02-24T16:12:46.6903820Z     
2025-02-24T16:12:46.6903900Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6904050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6904210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6904310Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6904360Z E           
2025-02-24T16:12:46.6904460Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6904680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6904900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6904910Z 
2025-02-24T16:12:46.6905160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6905170Z 
2025-02-24T16:12:46.6905310Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6905310Z 
2025-02-24T16:12:46.6905490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f51880>
2025-02-24T16:12:46.6905630Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6905690Z attr = 'wavelength_cm'
2025-02-24T16:12:46.6905690Z 
2025-02-24T16:12:46.6905810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6905910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6905970Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6906020Z         try:
2025-02-24T16:12:46.6906140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6906330Z         except KeyError:
2025-02-24T16:12:46.6906440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6906550Z     
2025-02-24T16:12:46.6906620Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6906700Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6906770Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6906880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6906960Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6907030Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6907120Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6907130Z 
2025-02-24T16:12:46.6907230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6907330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6907450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6907510Z     ???
2025-02-24T16:12:46.6907610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6907610Z 
2025-02-24T16:12:46.6907890Z >   ???
2025-02-24T16:12:46.6908210Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6908260Z E   
2025-02-24T16:12:46.6908370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6908480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6908530Z E          ...
2025-02-24T16:12:46.6908610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6908720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6908820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6908880Z E          ...
2025-02-24T16:12:46.6908950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6909060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6909150Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6909160Z 
2025-02-24T16:12:46.6909230Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6909410Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T16:12:46.6909410Z 
2025-02-24T16:12:46.6909520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6909660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6909750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6909870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6909980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6910060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6910130Z err_msg = None
2025-02-24T16:12:46.6910130Z 
2025-02-24T16:12:46.6910220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6910290Z         if err_msg is None:
2025-02-24T16:12:46.6910380Z             if left.shape != right.shape:
2025-02-24T16:12:46.6910440Z                 raise_assert_detail(
2025-02-24T16:12:46.6910570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6910620Z                 )
2025-02-24T16:12:46.6910670Z     
2025-02-24T16:12:46.6910730Z             diff = 0
2025-02-24T16:12:46.6910820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6910900Z                 # count up differences
2025-02-24T16:12:46.6911040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6911100Z                     diff += 1
2025-02-24T16:12:46.6911150Z     
2025-02-24T16:12:46.6911230Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6911470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6911630Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6911780Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6911830Z E           
2025-02-24T16:12:46.6911930Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6912150Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6912380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6912390Z 
2025-02-24T16:12:46.6912650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6912650Z 
2025-02-24T16:12:46.6912790Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6912800Z 
2025-02-24T16:12:46.6912980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f51940>
2025-02-24T16:12:46.6913150Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>, attr = 'f_lu'
2025-02-24T16:12:46.6913150Z 
2025-02-24T16:12:46.6913270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6913370Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6913430Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6913490Z         try:
2025-02-24T16:12:46.6913610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6913670Z         except KeyError:
2025-02-24T16:12:46.6913790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6913840Z     
2025-02-24T16:12:46.6913920Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6913990Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6914060Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6914180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6914260Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6914350Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6914440Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6914440Z 
2025-02-24T16:12:46.6914550Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6914650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6914790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6914850Z     ???
2025-02-24T16:12:46.6914940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6914950Z 
2025-02-24T16:12:46.6915010Z >   ???
2025-02-24T16:12:46.6915110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6915160Z E   
2025-02-24T16:12:46.6915270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6915370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6915420Z E          ...
2025-02-24T16:12:46.6915500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6915610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6915700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6915750Z E          ...
2025-02-24T16:12:46.6915830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6915930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6916280Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6916280Z 
2025-02-24T16:12:46.6916350Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6916710Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T16:12:46.6916720Z 
2025-02-24T16:12:46.6916900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f51f40>
2025-02-24T16:12:46.6917030Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6917100Z attr = 'stimulated_emission_factor'
2025-02-24T16:12:46.6917100Z 
2025-02-24T16:12:46.6917210Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6917310Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6917380Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6917430Z         try:
2025-02-24T16:12:46.6917550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6917620Z         except KeyError:
2025-02-24T16:12:46.6917740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6917790Z     
2025-02-24T16:12:46.6917860Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6917940Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6918010Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6918130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6918190Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6918270Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6918360Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6918410Z             else:
2025-02-24T16:12:46.6918490Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6918580Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6918580Z 
2025-02-24T16:12:46.6918690Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6918790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6918920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6918970Z     ???
2025-02-24T16:12:46.6919070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6919070Z 
2025-02-24T16:12:46.6919120Z >   ???
2025-02-24T16:12:46.6919280Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.6919330Z E   
2025-02-24T16:12:46.6919470Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:12:46.6919790Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6923780Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:12:46.6927880Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:12:46.6928060Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:12:46.6928070Z 
2025-02-24T16:12:46.6928140Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6928330Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T16:12:46.6928340Z 
2025-02-24T16:12:46.6928450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6928570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6928650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6928770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6928890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6928990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6929060Z err_msg = None
2025-02-24T16:12:46.6929070Z 
2025-02-24T16:12:46.6929160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6929230Z         if err_msg is None:
2025-02-24T16:12:46.6929400Z             if left.shape != right.shape:
2025-02-24T16:12:46.6929460Z                 raise_assert_detail(
2025-02-24T16:12:46.6929590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6929710Z                 )
2025-02-24T16:12:46.6929760Z     
2025-02-24T16:12:46.6929820Z             diff = 0
2025-02-24T16:12:46.6929910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6929980Z                 # count up differences
2025-02-24T16:12:46.6930120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6930190Z                     diff += 1
2025-02-24T16:12:46.6930240Z     
2025-02-24T16:12:46.6930310Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6930430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6930580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6930680Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6930730Z E           
2025-02-24T16:12:46.6930820Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6931050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6931270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6931280Z 
2025-02-24T16:12:46.6931540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6931560Z 
2025-02-24T16:12:46.6931710Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6931710Z 
2025-02-24T16:12:46.6931910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f52000>
2025-02-24T16:12:46.6932050Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6932120Z attr = 'previous_beta_sobolev'
2025-02-24T16:12:46.6932120Z 
2025-02-24T16:12:46.6932240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6932340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6932410Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6932460Z         try:
2025-02-24T16:12:46.6932580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6932650Z         except KeyError:
2025-02-24T16:12:46.6932770Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6932830Z     
2025-02-24T16:12:46.6932900Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6932970Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6933050Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6933170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6933240Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6933310Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6933410Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6933470Z             else:
2025-02-24T16:12:46.6933540Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6933640Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6933640Z 
2025-02-24T16:12:46.6933740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6933840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6934050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6934100Z     ???
2025-02-24T16:12:46.6934200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6934250Z 
2025-02-24T16:12:46.6934320Z >   ???
2025-02-24T16:12:46.6934430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6934480Z E   
2025-02-24T16:12:46.6934600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6934690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6934740Z E          ...
2025-02-24T16:12:46.6934820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6934930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6935030Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6935080Z E          ...
2025-02-24T16:12:46.6935160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6935270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6935360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6935360Z 
2025-02-24T16:12:46.6935440Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6935610Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T16:12:46.6935620Z 
2025-02-24T16:12:46.6935730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6935840Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6935920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6936050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6936160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6936240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6936310Z err_msg = None
2025-02-24T16:12:46.6936310Z 
2025-02-24T16:12:46.6936400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6936470Z         if err_msg is None:
2025-02-24T16:12:46.6936680Z             if left.shape != right.shape:
2025-02-24T16:12:46.6936790Z                 raise_assert_detail(
2025-02-24T16:12:46.6936910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6936970Z                 )
2025-02-24T16:12:46.6937020Z     
2025-02-24T16:12:46.6937070Z             diff = 0
2025-02-24T16:12:46.6937170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6937240Z                 # count up differences
2025-02-24T16:12:46.6937390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6937450Z                     diff += 1
2025-02-24T16:12:46.6937510Z     
2025-02-24T16:12:46.6937580Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6937700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6937860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6937960Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6938010Z E           
2025-02-24T16:12:46.6938100Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6938330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6938550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6942080Z 
2025-02-24T16:12:46.6942840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6942850Z 
2025-02-24T16:12:46.6943000Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6943010Z 
2025-02-24T16:12:46.6943190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f520c0>
2025-02-24T16:12:46.6943320Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6943400Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.6943410Z 
2025-02-24T16:12:46.6943550Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6943650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6943730Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6943800Z         try:
2025-02-24T16:12:46.6943950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6944030Z         except KeyError:
2025-02-24T16:12:46.6944150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6944220Z     
2025-02-24T16:12:46.6944290Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6944380Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6944450Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6944560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6944630Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6944710Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6944800Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6944850Z             else:
2025-02-24T16:12:46.6944940Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6945030Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6945030Z 
2025-02-24T16:12:46.6945140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6945250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6945370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6945430Z     ???
2025-02-24T16:12:46.6945530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6945540Z 
2025-02-24T16:12:46.6945590Z >   ???
2025-02-24T16:12:46.6945700Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6945750Z E   
2025-02-24T16:12:46.6945860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6945960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6946010Z E          ...
2025-02-24T16:12:46.6946090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6946200Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6946300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6946350Z E          ...
2025-02-24T16:12:46.6946430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6946540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6946630Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6946630Z 
2025-02-24T16:12:46.6946700Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6946880Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T16:12:46.6946880Z 
2025-02-24T16:12:46.6947000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6947110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6947200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6947310Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6947520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6947660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6947720Z err_msg = None
2025-02-24T16:12:46.6947720Z 
2025-02-24T16:12:46.6947820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6947890Z         if err_msg is None:
2025-02-24T16:12:46.6947970Z             if left.shape != right.shape:
2025-02-24T16:12:46.6948040Z                 raise_assert_detail(
2025-02-24T16:12:46.6948160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6948220Z                 )
2025-02-24T16:12:46.6948270Z     
2025-02-24T16:12:46.6948320Z             diff = 0
2025-02-24T16:12:46.6948420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6948490Z                 # count up differences
2025-02-24T16:12:46.6948630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6948700Z                     diff += 1
2025-02-24T16:12:46.6948750Z     
2025-02-24T16:12:46.6948840Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6948970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6949120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6949230Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6949290Z E           
2025-02-24T16:12:46.6949380Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6949620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6949860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6949870Z 
2025-02-24T16:12:46.6950130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6950130Z 
2025-02-24T16:12:46.6950280Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6950280Z 
2025-02-24T16:12:46.6950460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f52180>
2025-02-24T16:12:46.6950590Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>
2025-02-24T16:12:46.6950650Z attr = 'beta_sobolev'
2025-02-24T16:12:46.6950660Z 
2025-02-24T16:12:46.6950770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6950870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6950940Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6951080Z         try:
2025-02-24T16:12:46.6951220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6951300Z         except KeyError:
2025-02-24T16:12:46.6951420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6951520Z     
2025-02-24T16:12:46.6951620Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6951710Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6957370Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6957520Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6957590Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6957660Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6957750Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6957930Z             else:
2025-02-24T16:12:46.6958010Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6958100Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6958160Z 
2025-02-24T16:12:46.6958280Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6958380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6958500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6958560Z     ???
2025-02-24T16:12:46.6958660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6958660Z 
2025-02-24T16:12:46.6958720Z >   ???
2025-02-24T16:12:46.6958820Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6958880Z E   
2025-02-24T16:12:46.6958990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6959100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6959160Z E          ...
2025-02-24T16:12:46.6959240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6959350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6959450Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6959510Z E          ...
2025-02-24T16:12:46.6959580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6959690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6959770Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6959780Z 
2025-02-24T16:12:46.6959860Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6960040Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T16:12:46.6960050Z 
2025-02-24T16:12:46.6960160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6960280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6960360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6960480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6960600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6960680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6960740Z err_msg = None
2025-02-24T16:12:46.6960740Z 
2025-02-24T16:12:46.6960830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6960900Z         if err_msg is None:
2025-02-24T16:12:46.6960980Z             if left.shape != right.shape:
2025-02-24T16:12:46.6961050Z                 raise_assert_detail(
2025-02-24T16:12:46.6961180Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6961230Z                 )
2025-02-24T16:12:46.6961280Z     
2025-02-24T16:12:46.6961340Z             diff = 0
2025-02-24T16:12:46.6961440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6961510Z                 # count up differences
2025-02-24T16:12:46.6961660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6961720Z                     diff += 1
2025-02-24T16:12:46.6961770Z     
2025-02-24T16:12:46.6961840Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6961960Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6962110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6962200Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6962260Z E           
2025-02-24T16:12:46.6962350Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6962760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6963150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6963160Z 
2025-02-24T16:12:46.6963420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6963420Z 
2025-02-24T16:12:46.6963560Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6963560Z 
2025-02-24T16:12:46.6963750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f52300>
2025-02-24T16:12:46.6963930Z plasma = <tardis.plasma.base.BasePlasma object at 0x138d4ee70>, attr = 'j_blues'
2025-02-24T16:12:46.6963930Z 
2025-02-24T16:12:46.6964040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6964150Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6964210Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6964270Z         try:
2025-02-24T16:12:46.6964390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6964450Z         except KeyError:
2025-02-24T16:12:46.6964570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6964620Z     
2025-02-24T16:12:46.6964700Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6964770Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6964850Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6964960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6965030Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6965110Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6965200Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6965260Z             else:
2025-02-24T16:12:46.6965340Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6965430Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6965430Z 
2025-02-24T16:12:46.6965540Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6965630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6965770Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6965830Z     ???
2025-02-24T16:12:46.6965940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6965940Z 
2025-02-24T16:12:46.6965990Z >   ???
2025-02-24T16:12:46.6966100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6966160Z E   
2025-02-24T16:12:46.6966270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6966360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6966420Z E          ...
2025-02-24T16:12:46.6966500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6966600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6966700Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6966760Z E          ...
2025-02-24T16:12:46.6966830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6966940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6967020Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6967030Z 
2025-02-24T16:12:46.6967100Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6967300Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T16:12:46.6967490Z 
2025-02-24T16:12:46.6967610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6967720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6968020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6968140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6968250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6968330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6968390Z err_msg = None
2025-02-24T16:12:46.6968390Z 
2025-02-24T16:12:46.6968480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6968550Z         if err_msg is None:
2025-02-24T16:12:46.6968620Z             if left.shape != right.shape:
2025-02-24T16:12:46.6968690Z                 raise_assert_detail(
2025-02-24T16:12:46.6968820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6968870Z                 )
2025-02-24T16:12:46.6968920Z     
2025-02-24T16:12:46.6968980Z             diff = 0
2025-02-24T16:12:46.6969080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6969150Z                 # count up differences
2025-02-24T16:12:46.6969290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6969350Z                     diff += 1
2025-02-24T16:12:46.6969400Z     
2025-02-24T16:12:46.6969480Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6969590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6969740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6969840Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6969890Z E           
2025-02-24T16:12:46.6970000Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6970260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6970500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6970500Z 
2025-02-24T16:12:46.6970750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6970760Z 
2025-02-24T16:12:46.6970900Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.6970910Z 
2025-02-24T16:12:46.6971090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53080>
2025-02-24T16:12:46.6971260Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>, attr = 'lines'
2025-02-24T16:12:46.6971260Z 
2025-02-24T16:12:46.6971380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6971480Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6971550Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6971620Z         try:
2025-02-24T16:12:46.6971740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6971820Z         except KeyError:
2025-02-24T16:12:46.6971940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6971990Z     
2025-02-24T16:12:46.6972060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6972140Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6972300Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6972410Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6972540Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6972610Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6972710Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6972760Z             else:
2025-02-24T16:12:46.6972840Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.6972930Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.6972930Z 
2025-02-24T16:12:46.6973040Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.6973130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6973260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.6973310Z     ???
2025-02-24T16:12:46.6973410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6973420Z 
2025-02-24T16:12:46.6973470Z >   ???
2025-02-24T16:12:46.6973580Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.6973630Z E   
2025-02-24T16:12:46.6973740Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.6973840Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6973890Z E          ...
2025-02-24T16:12:46.6973970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6974080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6974170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.6974230Z E          ...
2025-02-24T16:12:46.6974300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.6974410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.6974490Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.6974490Z 
2025-02-24T16:12:46.6974570Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.6974760Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T16:12:46.6974770Z 
2025-02-24T16:12:46.6974950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53140>
2025-02-24T16:12:46.6975090Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>
2025-02-24T16:12:46.6975150Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.6975160Z 
2025-02-24T16:12:46.6975280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6975380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6975440Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6975500Z         try:
2025-02-24T16:12:46.6975620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6975680Z         except KeyError:
2025-02-24T16:12:46.6975800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6975860Z     
2025-02-24T16:12:46.6975920Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6976000Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6976080Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6976190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6976260Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6976340Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6976430Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6976430Z 
2025-02-24T16:12:46.6976540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6976630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6976640Z 
2025-02-24T16:12:46.6976760Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6976830Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6976930Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6977090Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6977220Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.6977340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.6977440Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6977500Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.6977560Z err_msg = None
2025-02-24T16:12:46.6977560Z 
2025-02-24T16:12:46.6977650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6977720Z         if err_msg is None:
2025-02-24T16:12:46.6977790Z             if left.shape != right.shape:
2025-02-24T16:12:46.6977860Z                 raise_assert_detail(
2025-02-24T16:12:46.6977980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6978040Z                 )
2025-02-24T16:12:46.6978090Z     
2025-02-24T16:12:46.6978150Z             diff = 0
2025-02-24T16:12:46.6978240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6978310Z                 # count up differences
2025-02-24T16:12:46.6978460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6978520Z                     diff += 1
2025-02-24T16:12:46.6978570Z     
2025-02-24T16:12:46.6978640Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6978750Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6978900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6978990Z E           AssertionError: Series are different
2025-02-24T16:12:46.6979040Z E           
2025-02-24T16:12:46.6979130Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.6979440Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6979740Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6980020Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6980030Z 
2025-02-24T16:12:46.6980280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6980480Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T16:12:46.6980480Z 
2025-02-24T16:12:46.6980660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53200>
2025-02-24T16:12:46.6980790Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>
2025-02-24T16:12:46.6980860Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.6980870Z 
2025-02-24T16:12:46.6980980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.6981080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.6981140Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.6981200Z         try:
2025-02-24T16:12:46.6981370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.6981430Z         except KeyError:
2025-02-24T16:12:46.6981550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.6981640Z     
2025-02-24T16:12:46.6981710Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.6981780Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.6981860Z             if attr == "selected_atoms":
2025-02-24T16:12:46.6982050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.6982110Z             elif actual.ndim == 1:
2025-02-24T16:12:46.6982190Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.6982280Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.6982280Z 
2025-02-24T16:12:46.6982410Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.6982520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.6982530Z 
2025-02-24T16:12:46.6982650Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6982720Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6982820Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6982890Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6983010Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.6983080Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.6983170Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.6983240Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.6983300Z err_msg = None
2025-02-24T16:12:46.6983300Z 
2025-02-24T16:12:46.6983390Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6983460Z         if err_msg is None:
2025-02-24T16:12:46.6983540Z             if left.shape != right.shape:
2025-02-24T16:12:46.6983610Z                 raise_assert_detail(
2025-02-24T16:12:46.6983890Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6984000Z                 )
2025-02-24T16:12:46.6984050Z     
2025-02-24T16:12:46.6984110Z             diff = 0
2025-02-24T16:12:46.6984210Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6984290Z                 # count up differences
2025-02-24T16:12:46.6984430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6984510Z                     diff += 1
2025-02-24T16:12:46.6984560Z     
2025-02-24T16:12:46.6984650Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6984770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6984930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6985020Z E           AssertionError: Series are different
2025-02-24T16:12:46.6985070Z E           
2025-02-24T16:12:46.6985160Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.6985480Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.6985830Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6986540Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.6986680Z 
2025-02-24T16:12:46.6986980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6987180Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T16:12:46.6987190Z 
2025-02-24T16:12:46.6987360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6987500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6989160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6989550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.6989880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.6990170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.6990400Z err_msg = None
2025-02-24T16:12:46.6990510Z 
2025-02-24T16:12:46.6990630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.6990860Z         if err_msg is None:
2025-02-24T16:12:46.6991110Z             if left.shape != right.shape:
2025-02-24T16:12:46.6991360Z                 raise_assert_detail(
2025-02-24T16:12:46.6991660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.6991940Z                 )
2025-02-24T16:12:46.6992090Z     
2025-02-24T16:12:46.6992210Z             diff = 0
2025-02-24T16:12:46.6992400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.6993780Z                 # count up differences
2025-02-24T16:12:46.6994250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.6996240Z                     diff += 1
2025-02-24T16:12:46.6996430Z     
2025-02-24T16:12:46.6996580Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.6996840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.6997170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.6997480Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.6997700Z E           
2025-02-24T16:12:46.6997880Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.6998280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6998880Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.6999180Z 
2025-02-24T16:12:46.6999430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.6999750Z 
2025-02-24T16:12:46.6999890Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7000110Z 
2025-02-24T16:12:46.7000280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53440>
2025-02-24T16:12:46.7000690Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>, attr = 'nu'
2025-02-24T16:12:46.7001050Z 
2025-02-24T16:12:46.7001160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7001530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7001760Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7001940Z         try:
2025-02-24T16:12:46.7002140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7002400Z         except KeyError:
2025-02-24T16:12:46.7002650Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7002890Z     
2025-02-24T16:12:46.7003030Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7003240Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7003460Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7003710Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7003970Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7004180Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7005320Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7005500Z 
2025-02-24T16:12:46.7005600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7005880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7006170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7006410Z     ???
2025-02-24T16:12:46.7006590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7006750Z 
2025-02-24T16:12:46.7006800Z >   ???
2025-02-24T16:12:46.7006980Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7007320Z E   
2025-02-24T16:12:46.7008270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7008810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7009060Z E          ...
2025-02-24T16:12:46.7009220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7009490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7009770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7010000Z E          ...
2025-02-24T16:12:46.7010170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7010420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7010690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7011090Z 
2025-02-24T16:12:46.7011500Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7011810Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T16:12:46.7012060Z 
2025-02-24T16:12:46.7012170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7012500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7012830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7013120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7013530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7013800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7014010Z err_msg = None
2025-02-24T16:12:46.7014100Z 
2025-02-24T16:12:46.7014200Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7014420Z         if err_msg is None:
2025-02-24T16:12:46.7014610Z             if left.shape != right.shape:
2025-02-24T16:12:46.7014830Z                 raise_assert_detail(
2025-02-24T16:12:46.7015090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7015340Z                 )
2025-02-24T16:12:46.7015480Z     
2025-02-24T16:12:46.7015610Z             diff = 0
2025-02-24T16:12:46.7015810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7016250Z                 # count up differences
2025-02-24T16:12:46.7016540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7016920Z                     diff += 1
2025-02-24T16:12:46.7017090Z     
2025-02-24T16:12:46.7017230Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7017510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7017850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7018170Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7018380Z E           
2025-02-24T16:12:46.7026100Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7026620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7027270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7027630Z 
2025-02-24T16:12:46.7027890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7028210Z 
2025-02-24T16:12:46.7028360Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7028580Z 
2025-02-24T16:12:46.7028760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53500>
2025-02-24T16:12:46.7029150Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>
2025-02-24T16:12:46.7029440Z attr = 'wavelength_cm'
2025-02-24T16:12:46.7029580Z 
2025-02-24T16:12:46.7029690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7029990Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7030220Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7030410Z         try:
2025-02-24T16:12:46.7030620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7030870Z         except KeyError:
2025-02-24T16:12:46.7031110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7031350Z     
2025-02-24T16:12:46.7031480Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7031690Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7031910Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7032160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7032410Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7032620Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7032850Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7033020Z 
2025-02-24T16:12:46.7033120Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7033400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7033690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7033930Z     ???
2025-02-24T16:12:46.7034100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7034270Z 
2025-02-24T16:12:46.7034320Z >   ???
2025-02-24T16:12:46.7034500Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7034730Z E   
2025-02-24T16:12:46.7034910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7035180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7035390Z E          ...
2025-02-24T16:12:46.7035700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7035960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7036340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7036550Z E          ...
2025-02-24T16:12:46.7036710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7036960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7037220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7037370Z 
2025-02-24T16:12:46.7037440Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7037730Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T16:12:46.7037960Z 
2025-02-24T16:12:46.7038080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7038380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7038660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7038920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7039230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7039510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7039710Z err_msg = None
2025-02-24T16:12:46.7039800Z 
2025-02-24T16:12:46.7039900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7040120Z         if err_msg is None:
2025-02-24T16:12:46.7040310Z             if left.shape != right.shape:
2025-02-24T16:12:46.7040520Z                 raise_assert_detail(
2025-02-24T16:12:46.7040780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7041030Z                 )
2025-02-24T16:12:46.7041170Z     
2025-02-24T16:12:46.7041300Z             diff = 0
2025-02-24T16:12:46.7041490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7041720Z                 # count up differences
2025-02-24T16:12:46.7042000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7042280Z                     diff += 1
2025-02-24T16:12:46.7042480Z     
2025-02-24T16:12:46.7042650Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7042910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7043240Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7043550Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7043770Z E           
2025-02-24T16:12:46.7043940Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7044330Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7044850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7045140Z 
2025-02-24T16:12:46.7045400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7045720Z 
2025-02-24T16:12:46.7045860Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7046080Z 
2025-02-24T16:12:46.7046260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f535c0>
2025-02-24T16:12:46.7046680Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>, attr = 'f_lu'
2025-02-24T16:12:46.7047220Z 
2025-02-24T16:12:46.7047480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7047870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7048110Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7048420Z         try:
2025-02-24T16:12:46.7048620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7048870Z         except KeyError:
2025-02-24T16:12:46.7049100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7049360Z     
2025-02-24T16:12:46.7049500Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7049700Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7049930Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7050200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7050460Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7050670Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7050900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7051070Z 
2025-02-24T16:12:46.7051170Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7051440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7051730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7053450Z     ???
2025-02-24T16:12:46.7054000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7054460Z 
2025-02-24T16:12:46.7054630Z >   ???
2025-02-24T16:12:46.7055130Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7055960Z E   
2025-02-24T16:12:46.7056170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7056450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7056670Z E          ...
2025-02-24T16:12:46.7056850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7057110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7057380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7057610Z E          ...
2025-02-24T16:12:46.7057770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7058020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7058280Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7058440Z 
2025-02-24T16:12:46.7058510Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7058800Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T16:12:46.7059050Z 
2025-02-24T16:12:46.7059160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7059460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7059730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7059990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7060730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7061020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7061280Z err_msg = None
2025-02-24T16:12:46.7061390Z 
2025-02-24T16:12:46.7061490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7061730Z         if err_msg is None:
2025-02-24T16:12:46.7061940Z             if left.shape != right.shape:
2025-02-24T16:12:46.7062160Z                 raise_assert_detail(
2025-02-24T16:12:46.7062420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7062660Z                 )
2025-02-24T16:12:46.7062800Z     
2025-02-24T16:12:46.7062930Z             diff = 0
2025-02-24T16:12:46.7063120Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7063600Z                 # count up differences
2025-02-24T16:12:46.7063880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7064260Z                     diff += 1
2025-02-24T16:12:46.7064430Z     
2025-02-24T16:12:46.7064570Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7064830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7065160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7065480Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7065690Z E           
2025-02-24T16:12:46.7069650Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7070100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7070650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7070940Z 
2025-02-24T16:12:46.7071200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7071510Z 
2025-02-24T16:12:46.7071660Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7071870Z 
2025-02-24T16:12:46.7072050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53d40>
2025-02-24T16:12:46.7073180Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>
2025-02-24T16:12:46.7074000Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.7074300Z 
2025-02-24T16:12:46.7074620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7075430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7076070Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7076560Z         try:
2025-02-24T16:12:46.7077100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7077780Z         except KeyError:
2025-02-24T16:12:46.7078630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7078900Z     
2025-02-24T16:12:46.7079050Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7079260Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7079470Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7079730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7080240Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7080460Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7080690Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7080910Z             else:
2025-02-24T16:12:46.7081090Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7081330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7081490Z 
2025-02-24T16:12:46.7081600Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7081880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7082180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7082420Z     ???
2025-02-24T16:12:46.7082590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7083440Z 
2025-02-24T16:12:46.7083680Z >   ???
2025-02-24T16:12:46.7084190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7084820Z E   
2025-02-24T16:12:46.7086700Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7087620Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7088240Z E          ...
2025-02-24T16:12:46.7089110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7089370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7089660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7089910Z E          ...
2025-02-24T16:12:46.7090100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7090380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7090670Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7090820Z 
2025-02-24T16:12:46.7091080Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7093040Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T16:12:46.7093500Z 
2025-02-24T16:12:46.7093710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7094040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7094320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7094590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7094900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7095170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7096640Z err_msg = None
2025-02-24T16:12:46.7096830Z 
2025-02-24T16:12:46.7096930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7097160Z         if err_msg is None:
2025-02-24T16:12:46.7097350Z             if left.shape != right.shape:
2025-02-24T16:12:46.7097570Z                 raise_assert_detail(
2025-02-24T16:12:46.7097820Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7098070Z                 )
2025-02-24T16:12:46.7098220Z     
2025-02-24T16:12:46.7098340Z             diff = 0
2025-02-24T16:12:46.7099890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7100530Z                 # count up differences
2025-02-24T16:12:46.7100820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7101120Z                     diff += 1
2025-02-24T16:12:46.7101290Z     
2025-02-24T16:12:46.7101440Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7101700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7102040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7102360Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7102580Z E           
2025-02-24T16:12:46.7102760Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7103160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7103700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7103990Z 
2025-02-24T16:12:46.7104260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7104580Z 
2025-02-24T16:12:46.7104720Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7105160Z 
2025-02-24T16:12:46.7105340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53e00>
2025-02-24T16:12:46.7105760Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>
2025-02-24T16:12:46.7106210Z attr = 'beta_sobolev'
2025-02-24T16:12:46.7106340Z 
2025-02-24T16:12:46.7106470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7106770Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7107020Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7107200Z         try:
2025-02-24T16:12:46.7107400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7107650Z         except KeyError:
2025-02-24T16:12:46.7108970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7109260Z     
2025-02-24T16:12:46.7109410Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7109610Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7119770Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7120130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7120420Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7120630Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7120860Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7121070Z             else:
2025-02-24T16:12:46.7121240Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7121480Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7121640Z 
2025-02-24T16:12:46.7121740Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7122010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7122310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7122550Z     ???
2025-02-24T16:12:46.7122720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7122910Z 
2025-02-24T16:12:46.7122960Z >   ???
2025-02-24T16:12:46.7123150Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7123400Z E   
2025-02-24T16:12:46.7123580Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7123860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7124070Z E          ...
2025-02-24T16:12:46.7124230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7124490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7124770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7124980Z E          ...
2025-02-24T16:12:46.7125140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7125400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7125680Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7125860Z 
2025-02-24T16:12:46.7125960Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7126270Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T16:12:46.7126540Z 
2025-02-24T16:12:46.7126650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7126960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7127230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7127640Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7127940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7128330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7128650Z err_msg = None
2025-02-24T16:12:46.7128740Z 
2025-02-24T16:12:46.7128840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7129450Z         if err_msg is None:
2025-02-24T16:12:46.7129650Z             if left.shape != right.shape:
2025-02-24T16:12:46.7129860Z                 raise_assert_detail(
2025-02-24T16:12:46.7130630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7130870Z                 )
2025-02-24T16:12:46.7131010Z     
2025-02-24T16:12:46.7131140Z             diff = 0
2025-02-24T16:12:46.7131330Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7131670Z                 # count up differences
2025-02-24T16:12:46.7131970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7132250Z                     diff += 1
2025-02-24T16:12:46.7132420Z     
2025-02-24T16:12:46.7132560Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7132820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7133150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7133460Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7133670Z E           
2025-02-24T16:12:46.7133860Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7134240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7134900Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7135200Z 
2025-02-24T16:12:46.7135560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7137400Z 
2025-02-24T16:12:46.7137890Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7138550Z 
2025-02-24T16:12:46.7139070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f53f80>
2025-02-24T16:12:46.7140180Z plasma = <tardis.plasma.base.BasePlasma object at 0x13dfc0350>, attr = 'j_blues'
2025-02-24T16:12:46.7140460Z 
2025-02-24T16:12:46.7140580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7140860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7141090Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7141270Z         try:
2025-02-24T16:12:46.7141470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7141860Z         except KeyError:
2025-02-24T16:12:46.7142120Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7142370Z     
2025-02-24T16:12:46.7142520Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7142720Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7142950Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7143210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7143460Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7143670Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7143930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7144150Z             else:
2025-02-24T16:12:46.7144350Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7144670Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7144840Z 
2025-02-24T16:12:46.7144960Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7145240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7145730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7145980Z     ???
2025-02-24T16:12:46.7146150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7146410Z 
2025-02-24T16:12:46.7146460Z >   ???
2025-02-24T16:12:46.7146650Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7146870Z E   
2025-02-24T16:12:46.7147050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7147330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7147540Z E          ...
2025-02-24T16:12:46.7147710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7147960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7148240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7148460Z E          ...
2025-02-24T16:12:46.7148620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7148880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7149160Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7150220Z 
2025-02-24T16:12:46.7150310Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7150630Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T16:12:46.7150870Z 
2025-02-24T16:12:46.7150980Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7151290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7151560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7151820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7152120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7152390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7152600Z err_msg = None
2025-02-24T16:12:46.7152690Z 
2025-02-24T16:12:46.7152780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7153010Z         if err_msg is None:
2025-02-24T16:12:46.7153200Z             if left.shape != right.shape:
2025-02-24T16:12:46.7153410Z                 raise_assert_detail(
2025-02-24T16:12:46.7153670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7153910Z                 )
2025-02-24T16:12:46.7154050Z     
2025-02-24T16:12:46.7154180Z             diff = 0
2025-02-24T16:12:46.7154370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7154590Z                 # count up differences
2025-02-24T16:12:46.7154890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7155190Z                     diff += 1
2025-02-24T16:12:46.7155360Z     
2025-02-24T16:12:46.7155510Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7155800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7156140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7156450Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7156670Z E           
2025-02-24T16:12:46.7156840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7157230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7157750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7158180Z 
2025-02-24T16:12:46.7158500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7158820Z 
2025-02-24T16:12:46.7158960Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7159170Z 
2025-02-24T16:12:46.7159360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f78d40>
2025-02-24T16:12:46.7159790Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>, attr = 'lines'
2025-02-24T16:12:46.7160060Z 
2025-02-24T16:12:46.7160180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7160460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7160700Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7160890Z         try:
2025-02-24T16:12:46.7161110Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7161370Z         except KeyError:
2025-02-24T16:12:46.7161600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7161830Z     
2025-02-24T16:12:46.7161970Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7162170Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7162380Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7162630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7162880Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7163100Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7163330Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7163540Z             else:
2025-02-24T16:12:46.7163710Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7163950Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7164100Z 
2025-02-24T16:12:46.7164210Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7164470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7164760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7165030Z     ???
2025-02-24T16:12:46.7165200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7165360Z 
2025-02-24T16:12:46.7165420Z >   ???
2025-02-24T16:12:46.7165620Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7165840Z E   
2025-02-24T16:12:46.7166010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7166280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7166500Z E          ...
2025-02-24T16:12:46.7166660Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7166910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7167190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7167400Z E          ...
2025-02-24T16:12:46.7167560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7167830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7168080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7168270Z 
2025-02-24T16:12:46.7168340Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7168650Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T16:12:46.7168900Z 
2025-02-24T16:12:46.7169110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f78e00>
2025-02-24T16:12:46.7169500Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>
2025-02-24T16:12:46.7169800Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.7169970Z 
2025-02-24T16:12:46.7170100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7170420Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7170750Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7170920Z         try:
2025-02-24T16:12:46.7171120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7171430Z         except KeyError:
2025-02-24T16:12:46.7171690Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7171960Z     
2025-02-24T16:12:46.7172110Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7172390Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7172600Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7172850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7173110Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7173310Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7173540Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7173700Z 
2025-02-24T16:12:46.7173800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7174070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7174080Z 
2025-02-24T16:12:46.7174200Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.7174270Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.7174370Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7174440Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.7174560Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.7174630Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.7174720Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7174790Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.7174840Z err_msg = None
2025-02-24T16:12:46.7174850Z 
2025-02-24T16:12:46.7174940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7175000Z         if err_msg is None:
2025-02-24T16:12:46.7175080Z             if left.shape != right.shape:
2025-02-24T16:12:46.7175150Z                 raise_assert_detail(
2025-02-24T16:12:46.7175280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7175330Z                 )
2025-02-24T16:12:46.7175380Z     
2025-02-24T16:12:46.7175440Z             diff = 0
2025-02-24T16:12:46.7175530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7175600Z                 # count up differences
2025-02-24T16:12:46.7175750Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7175810Z                     diff += 1
2025-02-24T16:12:46.7175860Z     
2025-02-24T16:12:46.7175930Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7176040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7176210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7176320Z E           AssertionError: Series are different
2025-02-24T16:12:46.7176380Z E           
2025-02-24T16:12:46.7176490Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.7176840Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7177130Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7177680Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7177900Z 
2025-02-24T16:12:46.7178200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7178410Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T16:12:46.7178420Z 
2025-02-24T16:12:46.7178620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f78ec0>
2025-02-24T16:12:46.7178770Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>
2025-02-24T16:12:46.7178860Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.7178880Z 
2025-02-24T16:12:46.7178990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7179090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7179160Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7179210Z         try:
2025-02-24T16:12:46.7179330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7179400Z         except KeyError:
2025-02-24T16:12:46.7179520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7179570Z     
2025-02-24T16:12:46.7179640Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7179710Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7179780Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7179900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7179970Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7180050Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7180140Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7180150Z 
2025-02-24T16:12:46.7180250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7180350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7180360Z 
2025-02-24T16:12:46.7180480Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.7180550Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.7180650Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.7180710Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.7180830Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.7180910Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.7181000Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.7181070Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.7181130Z err_msg = None
2025-02-24T16:12:46.7181130Z 
2025-02-24T16:12:46.7181220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7181290Z         if err_msg is None:
2025-02-24T16:12:46.7181360Z             if left.shape != right.shape:
2025-02-24T16:12:46.7181430Z                 raise_assert_detail(
2025-02-24T16:12:46.7181550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7181610Z                 )
2025-02-24T16:12:46.7181660Z     
2025-02-24T16:12:46.7181710Z             diff = 0
2025-02-24T16:12:46.7181880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7181950Z                 # count up differences
2025-02-24T16:12:46.7182180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7182300Z                     diff += 1
2025-02-24T16:12:46.7182460Z     
2025-02-24T16:12:46.7182600Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7182730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7183560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7183770Z E           AssertionError: Series are different
2025-02-24T16:12:46.7183870Z E           
2025-02-24T16:12:46.7183970Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.7184330Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7184680Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.7185040Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.7185040Z 
2025-02-24T16:12:46.7185310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7186050Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T16:12:46.7186060Z 
2025-02-24T16:12:46.7186190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7186330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7186470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7186670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7186850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7186930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7187020Z err_msg = None
2025-02-24T16:12:46.7187030Z 
2025-02-24T16:12:46.7187130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7187200Z         if err_msg is None:
2025-02-24T16:12:46.7187290Z             if left.shape != right.shape:
2025-02-24T16:12:46.7187360Z                 raise_assert_detail(
2025-02-24T16:12:46.7187490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7187560Z                 )
2025-02-24T16:12:46.7187620Z     
2025-02-24T16:12:46.7187680Z             diff = 0
2025-02-24T16:12:46.7187790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7187870Z                 # count up differences
2025-02-24T16:12:46.7194690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7194830Z                     diff += 1
2025-02-24T16:12:46.7194880Z     
2025-02-24T16:12:46.7194950Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7195070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7195220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7195500Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7195560Z E           
2025-02-24T16:12:46.7195650Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7195960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7196200Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7196210Z 
2025-02-24T16:12:46.7196470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7196470Z 
2025-02-24T16:12:46.7196620Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7196630Z 
2025-02-24T16:12:46.7196810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f79100>
2025-02-24T16:12:46.7196980Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>, attr = 'nu'
2025-02-24T16:12:46.7196980Z 
2025-02-24T16:12:46.7197100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7197190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7197260Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7197310Z         try:
2025-02-24T16:12:46.7197430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7197500Z         except KeyError:
2025-02-24T16:12:46.7197610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7197670Z     
2025-02-24T16:12:46.7197740Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7197820Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7197890Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7198010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7198080Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7198160Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7198250Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7198250Z 
2025-02-24T16:12:46.7198360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7198460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7198580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7198640Z     ???
2025-02-24T16:12:46.7198740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7198740Z 
2025-02-24T16:12:46.7198790Z >   ???
2025-02-24T16:12:46.7198920Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7198970Z E   
2025-02-24T16:12:46.7199100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7199220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7199280Z E          ...
2025-02-24T16:12:46.7199360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7199470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7199570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7199620Z E          ...
2025-02-24T16:12:46.7199700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7199810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7199890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7199890Z 
2025-02-24T16:12:46.7199970Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7200150Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T16:12:46.7200240Z 
2025-02-24T16:12:46.7200370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7200570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7200660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7200800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7200920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7201000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7201060Z err_msg = None
2025-02-24T16:12:46.7201060Z 
2025-02-24T16:12:46.7201150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7201220Z         if err_msg is None:
2025-02-24T16:12:46.7201290Z             if left.shape != right.shape:
2025-02-24T16:12:46.7201370Z                 raise_assert_detail(
2025-02-24T16:12:46.7201490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7201550Z                 )
2025-02-24T16:12:46.7201600Z     
2025-02-24T16:12:46.7201650Z             diff = 0
2025-02-24T16:12:46.7201750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7201820Z                 # count up differences
2025-02-24T16:12:46.7201970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7202030Z                     diff += 1
2025-02-24T16:12:46.7202090Z     
2025-02-24T16:12:46.7202160Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7202270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7202420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7202510Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7202570Z E           
2025-02-24T16:12:46.7202660Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7202890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7203120Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7203130Z 
2025-02-24T16:12:46.7203370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7203380Z 
2025-02-24T16:12:46.7203520Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7203530Z 
2025-02-24T16:12:46.7203710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f791c0>
2025-02-24T16:12:46.7203850Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>
2025-02-24T16:12:46.7203910Z attr = 'wavelength_cm'
2025-02-24T16:12:46.7203910Z 
2025-02-24T16:12:46.7204030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7204120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7204190Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7204240Z         try:
2025-02-24T16:12:46.7204370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7204440Z         except KeyError:
2025-02-24T16:12:46.7204550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7204610Z     
2025-02-24T16:12:46.7204950Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7205030Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7205100Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7205310Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7205380Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7205460Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7205550Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7205560Z 
2025-02-24T16:12:46.7205660Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7205790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7205910Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7205970Z     ???
2025-02-24T16:12:46.7206060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7206070Z 
2025-02-24T16:12:46.7206150Z >   ???
2025-02-24T16:12:46.7206260Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7206310Z E   
2025-02-24T16:12:46.7206430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7206520Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7206580Z E          ...
2025-02-24T16:12:46.7206650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7206760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7206880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7206940Z E          ...
2025-02-24T16:12:46.7207020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7207120Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7207210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7207220Z 
2025-02-24T16:12:46.7207290Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7207470Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T16:12:46.7207480Z 
2025-02-24T16:12:46.7207590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7207710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7207790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7207910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7208020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7208100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7208160Z err_msg = None
2025-02-24T16:12:46.7208160Z 
2025-02-24T16:12:46.7208250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7208320Z         if err_msg is None:
2025-02-24T16:12:46.7208390Z             if left.shape != right.shape:
2025-02-24T16:12:46.7208460Z                 raise_assert_detail(
2025-02-24T16:12:46.7208580Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7208640Z                 )
2025-02-24T16:12:46.7208690Z     
2025-02-24T16:12:46.7208750Z             diff = 0
2025-02-24T16:12:46.7208840Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7208910Z                 # count up differences
2025-02-24T16:12:46.7209060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7209120Z                     diff += 1
2025-02-24T16:12:46.7209170Z     
2025-02-24T16:12:46.7209240Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7209360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7209510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7209690Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7209750Z E           
2025-02-24T16:12:46.7209840Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7210120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7210350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7210350Z 
2025-02-24T16:12:46.7210600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7210610Z 
2025-02-24T16:12:46.7210750Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7210760Z 
2025-02-24T16:12:46.7210940Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f79280>
2025-02-24T16:12:46.7211110Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>, attr = 'f_lu'
2025-02-24T16:12:46.7211110Z 
2025-02-24T16:12:46.7211220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7211320Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7211390Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7211450Z         try:
2025-02-24T16:12:46.7211560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7211630Z         except KeyError:
2025-02-24T16:12:46.7211740Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7211800Z     
2025-02-24T16:12:46.7211870Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7211950Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7212020Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7212130Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7212200Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7212280Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7212370Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7212380Z 
2025-02-24T16:12:46.7212480Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7212570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7212700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7212750Z     ???
2025-02-24T16:12:46.7212840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7212850Z 
2025-02-24T16:12:46.7212920Z >   ???
2025-02-24T16:12:46.7213040Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7213090Z E   
2025-02-24T16:12:46.7213200Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7213290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7213350Z E          ...
2025-02-24T16:12:46.7213420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7213530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7213630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7213680Z E          ...
2025-02-24T16:12:46.7213750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7213860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7213940Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7213940Z 
2025-02-24T16:12:46.7214020Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7214300Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T16:12:46.7214310Z 
2025-02-24T16:12:46.7214420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7214590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7214680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7214800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7214920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7215030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7215090Z err_msg = None
2025-02-24T16:12:46.7215100Z 
2025-02-24T16:12:46.7215180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7215250Z         if err_msg is None:
2025-02-24T16:12:46.7215330Z             if left.shape != right.shape:
2025-02-24T16:12:46.7215400Z                 raise_assert_detail(
2025-02-24T16:12:46.7215530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7215590Z                 )
2025-02-24T16:12:46.7215640Z     
2025-02-24T16:12:46.7215690Z             diff = 0
2025-02-24T16:12:46.7215790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7215860Z                 # count up differences
2025-02-24T16:12:46.7216000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7216060Z                     diff += 1
2025-02-24T16:12:46.7216110Z     
2025-02-24T16:12:46.7216190Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7216300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7216950Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7217070Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7217130Z E           
2025-02-24T16:12:46.7217230Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7217450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7217680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7217680Z 
2025-02-24T16:12:46.7217940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7217940Z 
2025-02-24T16:12:46.7218080Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7218090Z 
2025-02-24T16:12:46.7218300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f79a00>
2025-02-24T16:12:46.7218430Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>
2025-02-24T16:12:46.7218490Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.7218500Z 
2025-02-24T16:12:46.7218610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7218710Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7218780Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7218830Z         try:
2025-02-24T16:12:46.7218950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7219010Z         except KeyError:
2025-02-24T16:12:46.7219130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7219330Z     
2025-02-24T16:12:46.7219400Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7219480Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7219550Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7219730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7219810Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7219880Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7219970Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7220020Z             else:
2025-02-24T16:12:46.7220100Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7220190Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7220200Z 
2025-02-24T16:12:46.7220300Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7220400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7220520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7220580Z     ???
2025-02-24T16:12:46.7220670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7220680Z 
2025-02-24T16:12:46.7220730Z >   ???
2025-02-24T16:12:46.7220870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7220930Z E   
2025-02-24T16:12:46.7221060Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7221160Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7221220Z E          ...
2025-02-24T16:12:46.7221290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7221400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7221500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7221550Z E          ...
2025-02-24T16:12:46.7221630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7221730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7221830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7221830Z 
2025-02-24T16:12:46.7221900Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7222080Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T16:12:46.7222080Z 
2025-02-24T16:12:46.7222210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7222340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7222420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7222540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7222650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7222740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7222800Z err_msg = None
2025-02-24T16:12:46.7222800Z 
2025-02-24T16:12:46.7222890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7222960Z         if err_msg is None:
2025-02-24T16:12:46.7223040Z             if left.shape != right.shape:
2025-02-24T16:12:46.7223110Z                 raise_assert_detail(
2025-02-24T16:12:46.7223230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7223290Z                 )
2025-02-24T16:12:46.7223340Z     
2025-02-24T16:12:46.7223390Z             diff = 0
2025-02-24T16:12:46.7223480Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7223550Z                 # count up differences
2025-02-24T16:12:46.7223700Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7223760Z                     diff += 1
2025-02-24T16:12:46.7223810Z     
2025-02-24T16:12:46.7223880Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7224250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7224400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7224650Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7224700Z E           
2025-02-24T16:12:46.7224790Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7225010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7225240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7225250Z 
2025-02-24T16:12:46.7225490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7225500Z 
2025-02-24T16:12:46.7225640Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7225650Z 
2025-02-24T16:12:46.7225820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f79ac0>
2025-02-24T16:12:46.7225960Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>
2025-02-24T16:12:46.7226020Z attr = 'beta_sobolev'
2025-02-24T16:12:46.7226020Z 
2025-02-24T16:12:46.7226130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7226230Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7226300Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7226350Z         try:
2025-02-24T16:12:46.7226470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7226540Z         except KeyError:
2025-02-24T16:12:46.7226660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7226710Z     
2025-02-24T16:12:46.7226780Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7226860Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7226930Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7227050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7227120Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7227190Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7227280Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7227340Z             else:
2025-02-24T16:12:46.7227420Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7227520Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7227520Z 
2025-02-24T16:12:46.7227650Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7227750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7227880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7227930Z     ???
2025-02-24T16:12:46.7228040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7228040Z 
2025-02-24T16:12:46.7228090Z >   ???
2025-02-24T16:12:46.7228200Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7228260Z E   
2025-02-24T16:12:46.7228370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7228460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7228550Z E          ...
2025-02-24T16:12:46.7228640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7228750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7228850Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7229000Z E          ...
2025-02-24T16:12:46.7229080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7229250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7229330Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7229340Z 
2025-02-24T16:12:46.7229420Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7229590Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T16:12:46.7229590Z 
2025-02-24T16:12:46.7229730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7229860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7229940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7230070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7230230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7230340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7230430Z err_msg = None
2025-02-24T16:12:46.7230430Z 
2025-02-24T16:12:46.7230520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7230600Z         if err_msg is None:
2025-02-24T16:12:46.7230690Z             if left.shape != right.shape:
2025-02-24T16:12:46.7230760Z                 raise_assert_detail(
2025-02-24T16:12:46.7230900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7230950Z                 )
2025-02-24T16:12:46.7231020Z     
2025-02-24T16:12:46.7231080Z             diff = 0
2025-02-24T16:12:46.7231190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7231270Z                 # count up differences
2025-02-24T16:12:46.7231410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7231520Z                     diff += 1
2025-02-24T16:12:46.7231580Z     
2025-02-24T16:12:46.7231660Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7231780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7232000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7232130Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7232190Z E           
2025-02-24T16:12:46.7232290Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7232510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7232740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7232750Z 
2025-02-24T16:12:46.7233010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7233010Z 
2025-02-24T16:12:46.7233160Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7233170Z 
2025-02-24T16:12:46.7233350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f79c40>
2025-02-24T16:12:46.7233540Z plasma = <tardis.plasma.base.BasePlasma object at 0x30b8a9b50>, attr = 'j_blues'
2025-02-24T16:12:46.7233540Z 
2025-02-24T16:12:46.7233650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7233760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7233930Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7233980Z         try:
2025-02-24T16:12:46.7234120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7234240Z         except KeyError:
2025-02-24T16:12:46.7234360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7234410Z     
2025-02-24T16:12:46.7234490Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7234560Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7234630Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7234750Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7234810Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7234890Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7234990Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7235040Z             else:
2025-02-24T16:12:46.7235120Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7235210Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7235220Z 
2025-02-24T16:12:46.7235330Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7235420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7235550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7235600Z     ???
2025-02-24T16:12:46.7235700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7235710Z 
2025-02-24T16:12:46.7235760Z >   ???
2025-02-24T16:12:46.7235860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7235920Z E   
2025-02-24T16:12:46.7236030Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7236130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7236190Z E          ...
2025-02-24T16:12:46.7236270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7236380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7236470Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7236530Z E          ...
2025-02-24T16:12:46.7236600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7236720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7236800Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7236810Z 
2025-02-24T16:12:46.7236880Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7237080Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T16:12:46.7237090Z 
2025-02-24T16:12:46.7237200Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7237320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7237400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7237520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7237630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7237720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7237780Z err_msg = None
2025-02-24T16:12:46.7237780Z 
2025-02-24T16:12:46.7237870Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7237930Z         if err_msg is None:
2025-02-24T16:12:46.7238030Z             if left.shape != right.shape:
2025-02-24T16:12:46.7238100Z                 raise_assert_detail(
2025-02-24T16:12:46.7238230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7238290Z                 )
2025-02-24T16:12:46.7238360Z     
2025-02-24T16:12:46.7238410Z             diff = 0
2025-02-24T16:12:46.7238590Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7238660Z                 # count up differences
2025-02-24T16:12:46.7238800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7238920Z                     diff += 1
2025-02-24T16:12:46.7238970Z     
2025-02-24T16:12:46.7239050Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7239170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7239310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7239410Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7239460Z E           
2025-02-24T16:12:46.7239550Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7239770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7240010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7240010Z 
2025-02-24T16:12:46.7240260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7240270Z 
2025-02-24T16:12:46.7240410Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7240410Z 
2025-02-24T16:12:46.7240590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7a9c0>
2025-02-24T16:12:46.7240760Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>, attr = 'lines'
2025-02-24T16:12:46.7240770Z 
2025-02-24T16:12:46.7240880Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7240980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7241050Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7241100Z         try:
2025-02-24T16:12:46.7241220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7241280Z         except KeyError:
2025-02-24T16:12:46.7241410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7241460Z     
2025-02-24T16:12:46.7241530Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7241610Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7241680Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7241790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7241860Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7241940Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7242040Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7242090Z             else:
2025-02-24T16:12:46.7242170Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7242270Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7242270Z 
2025-02-24T16:12:46.7242370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7242470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7242600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7242650Z     ???
2025-02-24T16:12:46.7242750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7242750Z 
2025-02-24T16:12:46.7242810Z >   ???
2025-02-24T16:12:46.7242920Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7242990Z E   
2025-02-24T16:12:46.7243100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7243320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7243370Z E          ...
2025-02-24T16:12:46.7243780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7243910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7244020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7244080Z E          ...
2025-02-24T16:12:46.7244160Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7244350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7244430Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7244440Z 
2025-02-24T16:12:46.7244540Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7244780Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T16:12:46.7244790Z 
2025-02-24T16:12:46.7245040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7aa80>
2025-02-24T16:12:46.7245190Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>
2025-02-24T16:12:46.7245260Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.7245270Z 
2025-02-24T16:12:46.7245400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7245510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7245580Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7252080Z         try:
2025-02-24T16:12:46.7252250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7252310Z         except KeyError:
2025-02-24T16:12:46.7252430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7252560Z     
2025-02-24T16:12:46.7252630Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7252710Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7252780Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7252980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7253050Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7253130Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7253220Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7253230Z 
2025-02-24T16:12:46.7253330Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7253430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7253430Z 
2025-02-24T16:12:46.7253630Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.7253710Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.7253800Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7253870Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.7254070Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.7254150Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.7254240Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7254320Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.7254450Z err_msg = None
2025-02-24T16:12:46.7254450Z 
2025-02-24T16:12:46.7254550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7254610Z         if err_msg is None:
2025-02-24T16:12:46.7254690Z             if left.shape != right.shape:
2025-02-24T16:12:46.7254770Z                 raise_assert_detail(
2025-02-24T16:12:46.7254970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7255030Z                 )
2025-02-24T16:12:46.7255100Z     
2025-02-24T16:12:46.7255180Z             diff = 0
2025-02-24T16:12:46.7255370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7255450Z                 # count up differences
2025-02-24T16:12:46.7255630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7255940Z                     diff += 1
2025-02-24T16:12:46.7255990Z     
2025-02-24T16:12:46.7256140Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7256340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7256490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7256580Z E           AssertionError: Series are different
2025-02-24T16:12:46.7256640Z E           
2025-02-24T16:12:46.7256730Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.7257160Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7257560Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7257950Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7257960Z 
2025-02-24T16:12:46.7258210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7258430Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T16:12:46.7258430Z 
2025-02-24T16:12:46.7258720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7ab40>
2025-02-24T16:12:46.7258860Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>
2025-02-24T16:12:46.7258930Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.7258940Z 
2025-02-24T16:12:46.7259050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7259210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7259290Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7259340Z         try:
2025-02-24T16:12:46.7259460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7259520Z         except KeyError:
2025-02-24T16:12:46.7259650Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7259700Z     
2025-02-24T16:12:46.7259780Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7259850Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7259920Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7260160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7260230Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7260300Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7260390Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7260400Z 
2025-02-24T16:12:46.7260510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7260610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7260610Z 
2025-02-24T16:12:46.7260840Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.7260910Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.7261060Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.7261240Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.7261480Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.7261620Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.7261720Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.7261780Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.7261840Z err_msg = None
2025-02-24T16:12:46.7261850Z 
2025-02-24T16:12:46.7261940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7262110Z         if err_msg is None:
2025-02-24T16:12:46.7262190Z             if left.shape != right.shape:
2025-02-24T16:12:46.7262320Z                 raise_assert_detail(
2025-02-24T16:12:46.7262450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7262500Z                 )
2025-02-24T16:12:46.7262560Z     
2025-02-24T16:12:46.7262620Z             diff = 0
2025-02-24T16:12:46.7262820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7262900Z                 # count up differences
2025-02-24T16:12:46.7263050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7263110Z                     diff += 1
2025-02-24T16:12:46.7263160Z     
2025-02-24T16:12:46.7263230Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7263350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7263510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7263740Z E           AssertionError: Series are different
2025-02-24T16:12:46.7263870Z E           
2025-02-24T16:12:46.7263980Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.7264290Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7264740Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.7265080Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.7265100Z 
2025-02-24T16:12:46.7265360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7265530Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T16:12:46.7265530Z 
2025-02-24T16:12:46.7265650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7265760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7265850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7265970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7266200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7266450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7266570Z err_msg = None
2025-02-24T16:12:46.7266570Z 
2025-02-24T16:12:46.7266660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7266730Z         if err_msg is None:
2025-02-24T16:12:46.7266800Z             if left.shape != right.shape:
2025-02-24T16:12:46.7266870Z                 raise_assert_detail(
2025-02-24T16:12:46.7266990Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7267050Z                 )
2025-02-24T16:12:46.7267100Z     
2025-02-24T16:12:46.7267150Z             diff = 0
2025-02-24T16:12:46.7267250Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7267320Z                 # count up differences
2025-02-24T16:12:46.7267460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7267520Z                     diff += 1
2025-02-24T16:12:46.7267580Z     
2025-02-24T16:12:46.7267650Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7267760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7267910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7268010Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7268060Z E           
2025-02-24T16:12:46.7268160Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7268380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7268600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7268610Z 
2025-02-24T16:12:46.7268860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7268870Z 
2025-02-24T16:12:46.7269010Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7269010Z 
2025-02-24T16:12:46.7269190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7ad80>
2025-02-24T16:12:46.7269350Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>, attr = 'nu'
2025-02-24T16:12:46.7269350Z 
2025-02-24T16:12:46.7269470Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7269570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7269640Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7269690Z         try:
2025-02-24T16:12:46.7269810Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7269900Z         except KeyError:
2025-02-24T16:12:46.7270030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7270100Z     
2025-02-24T16:12:46.7270180Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7270260Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7270340Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7270460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7270530Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7270600Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7270700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7270700Z 
2025-02-24T16:12:46.7270800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7271050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7271200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7271500Z     ???
2025-02-24T16:12:46.7271600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7271610Z 
2025-02-24T16:12:46.7271660Z >   ???
2025-02-24T16:12:46.7271770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7271820Z E   
2025-02-24T16:12:46.7271920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7272020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7272070Z E          ...
2025-02-24T16:12:46.7272150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7272260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7272360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7272410Z E          ...
2025-02-24T16:12:46.7272490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7272600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7272690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7272700Z 
2025-02-24T16:12:46.7272770Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7272950Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T16:12:46.7272960Z 
2025-02-24T16:12:46.7273070Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7273190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7273270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7273390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7273500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7273590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7273650Z err_msg = None
2025-02-24T16:12:46.7273650Z 
2025-02-24T16:12:46.7273740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7273800Z         if err_msg is None:
2025-02-24T16:12:46.7273880Z             if left.shape != right.shape:
2025-02-24T16:12:46.7273950Z                 raise_assert_detail(
2025-02-24T16:12:46.7274070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7274120Z                 )
2025-02-24T16:12:46.7274170Z     
2025-02-24T16:12:46.7274230Z             diff = 0
2025-02-24T16:12:46.7274320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7274390Z                 # count up differences
2025-02-24T16:12:46.7274530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7274600Z                     diff += 1
2025-02-24T16:12:46.7274650Z     
2025-02-24T16:12:46.7274730Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7274840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7274990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7275090Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7275140Z E           
2025-02-24T16:12:46.7275240Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7275450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7275680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7275820Z 
2025-02-24T16:12:46.7276220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7276230Z 
2025-02-24T16:12:46.7276380Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7276390Z 
2025-02-24T16:12:46.7276570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7ae40>
2025-02-24T16:12:46.7276700Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>
2025-02-24T16:12:46.7277210Z attr = 'wavelength_cm'
2025-02-24T16:12:46.7277240Z 
2025-02-24T16:12:46.7277580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7277690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7277790Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7277870Z         try:
2025-02-24T16:12:46.7278000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7278080Z         except KeyError:
2025-02-24T16:12:46.7278200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7278250Z     
2025-02-24T16:12:46.7278320Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7278400Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7278470Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7278590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7278660Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7278730Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7278840Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7278840Z 
2025-02-24T16:12:46.7278940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7279060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7279180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7279240Z     ???
2025-02-24T16:12:46.7279350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7279360Z 
2025-02-24T16:12:46.7279420Z >   ???
2025-02-24T16:12:46.7279530Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7279580Z E   
2025-02-24T16:12:46.7279680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7279780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7279840Z E          ...
2025-02-24T16:12:46.7279940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7280050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7280150Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7280210Z E          ...
2025-02-24T16:12:46.7280280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7280390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7280480Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7280480Z 
2025-02-24T16:12:46.7280560Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7280730Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T16:12:46.7280740Z 
2025-02-24T16:12:46.7280850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7280970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7281050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7281170Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7281280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7281580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7281710Z err_msg = None
2025-02-24T16:12:46.7281710Z 
2025-02-24T16:12:46.7281810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7281870Z         if err_msg is None:
2025-02-24T16:12:46.7281950Z             if left.shape != right.shape:
2025-02-24T16:12:46.7282030Z                 raise_assert_detail(
2025-02-24T16:12:46.7282150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7282200Z                 )
2025-02-24T16:12:46.7282260Z     
2025-02-24T16:12:46.7282320Z             diff = 0
2025-02-24T16:12:46.7282410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7282480Z                 # count up differences
2025-02-24T16:12:46.7282640Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7282700Z                     diff += 1
2025-02-24T16:12:46.7282750Z     
2025-02-24T16:12:46.7282820Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7282940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7283090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7283180Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7283240Z E           
2025-02-24T16:12:46.7283340Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7283560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7283790Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7283800Z 
2025-02-24T16:12:46.7284060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7284060Z 
2025-02-24T16:12:46.7284210Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7284210Z 
2025-02-24T16:12:46.7284390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7af00>
2025-02-24T16:12:46.7284560Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>, attr = 'f_lu'
2025-02-24T16:12:46.7284570Z 
2025-02-24T16:12:46.7284680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7284780Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7284850Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7284930Z         try:
2025-02-24T16:12:46.7285050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7285120Z         except KeyError:
2025-02-24T16:12:46.7285260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7285330Z     
2025-02-24T16:12:46.7285410Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7285480Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7285550Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7285670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7285740Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7285810Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7285900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7285910Z 
2025-02-24T16:12:46.7286010Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7286200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7286320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7286440Z     ???
2025-02-24T16:12:46.7286530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7286540Z 
2025-02-24T16:12:46.7286590Z >   ???
2025-02-24T16:12:46.7286710Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7286770Z E   
2025-02-24T16:12:46.7286880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7286980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7287030Z E          ...
2025-02-24T16:12:46.7287260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7287390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7287490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7287550Z E          ...
2025-02-24T16:12:46.7287620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7287730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7287820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7287820Z 
2025-02-24T16:12:46.7287890Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7291840Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T16:12:46.7291860Z 
2025-02-24T16:12:46.7291980Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7292100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7292190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7292300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7292410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7292500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7292560Z err_msg = None
2025-02-24T16:12:46.7292570Z 
2025-02-24T16:12:46.7292660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7292730Z         if err_msg is None:
2025-02-24T16:12:46.7292810Z             if left.shape != right.shape:
2025-02-24T16:12:46.7292870Z                 raise_assert_detail(
2025-02-24T16:12:46.7293000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7293050Z                 )
2025-02-24T16:12:46.7293110Z     
2025-02-24T16:12:46.7293160Z             diff = 0
2025-02-24T16:12:46.7293260Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7293330Z                 # count up differences
2025-02-24T16:12:46.7293470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7293540Z                     diff += 1
2025-02-24T16:12:46.7293600Z     
2025-02-24T16:12:46.7293670Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7293790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7293990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7294090Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7294140Z E           
2025-02-24T16:12:46.7294240Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7295890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7296130Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7296520Z 
2025-02-24T16:12:46.7296790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7296790Z 
2025-02-24T16:12:46.7296930Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7296940Z 
2025-02-24T16:12:46.7297120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7b680>
2025-02-24T16:12:46.7297250Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>
2025-02-24T16:12:46.7297310Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.7297310Z 
2025-02-24T16:12:46.7297430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7297530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7297610Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7297680Z         try:
2025-02-24T16:12:46.7297800Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7297870Z         except KeyError:
2025-02-24T16:12:46.7298000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7298060Z     
2025-02-24T16:12:46.7298150Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7298230Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7298310Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7298440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7298520Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7298590Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7298690Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7298760Z             else:
2025-02-24T16:12:46.7298840Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7298940Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7298950Z 
2025-02-24T16:12:46.7299050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7299150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7299270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7299320Z     ???
2025-02-24T16:12:46.7299420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7299430Z 
2025-02-24T16:12:46.7299480Z >   ???
2025-02-24T16:12:46.7299600Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7300190Z E   
2025-02-24T16:12:46.7300390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7300500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7300560Z E          ...
2025-02-24T16:12:46.7300640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7300760Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7300870Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7300920Z E          ...
2025-02-24T16:12:46.7301000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7301130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7301230Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7301230Z 
2025-02-24T16:12:46.7301320Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7301510Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T16:12:46.7301520Z 
2025-02-24T16:12:46.7301640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7301760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7301850Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7302150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7302270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7302440Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7302500Z err_msg = None
2025-02-24T16:12:46.7302510Z 
2025-02-24T16:12:46.7302600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7302680Z         if err_msg is None:
2025-02-24T16:12:46.7302770Z             if left.shape != right.shape:
2025-02-24T16:12:46.7302850Z                 raise_assert_detail(
2025-02-24T16:12:46.7302980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7303050Z                 )
2025-02-24T16:12:46.7303110Z     
2025-02-24T16:12:46.7303180Z             diff = 0
2025-02-24T16:12:46.7303290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7303370Z                 # count up differences
2025-02-24T16:12:46.7303520Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7303580Z                     diff += 1
2025-02-24T16:12:46.7303640Z     
2025-02-24T16:12:46.7303710Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7303830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7303980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7304070Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7304130Z E           
2025-02-24T16:12:46.7304230Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7304450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7304680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7304690Z 
2025-02-24T16:12:46.7304950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7304960Z 
2025-02-24T16:12:46.7305100Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7305100Z 
2025-02-24T16:12:46.7305280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7b740>
2025-02-24T16:12:46.7305410Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>
2025-02-24T16:12:46.7305480Z attr = 'beta_sobolev'
2025-02-24T16:12:46.7305490Z 
2025-02-24T16:12:46.7305600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7305710Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7305780Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7305830Z         try:
2025-02-24T16:12:46.7305950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7306010Z         except KeyError:
2025-02-24T16:12:46.7306130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7306180Z     
2025-02-24T16:12:46.7306250Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7306330Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7306400Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7306520Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7306580Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7306660Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7306810Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7306870Z             else:
2025-02-24T16:12:46.7307000Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7307090Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7307090Z 
2025-02-24T16:12:46.7307200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7307320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7307460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7307520Z     ???
2025-02-24T16:12:46.7307620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7307620Z 
2025-02-24T16:12:46.7307690Z >   ???
2025-02-24T16:12:46.7308770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7308860Z E   
2025-02-24T16:12:46.7308980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7309080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7309140Z E          ...
2025-02-24T16:12:46.7309210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7309320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7309420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7309480Z E          ...
2025-02-24T16:12:46.7309550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7309660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7309740Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7309750Z 
2025-02-24T16:12:46.7309810Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7310000Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T16:12:46.7310000Z 
2025-02-24T16:12:46.7310110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7310230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7310320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7310430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7310550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7310630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7310690Z err_msg = None
2025-02-24T16:12:46.7310690Z 
2025-02-24T16:12:46.7310790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7310850Z         if err_msg is None:
2025-02-24T16:12:46.7310940Z             if left.shape != right.shape:
2025-02-24T16:12:46.7311080Z                 raise_assert_detail(
2025-02-24T16:12:46.7311300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7311360Z                 )
2025-02-24T16:12:46.7311430Z     
2025-02-24T16:12:46.7311500Z             diff = 0
2025-02-24T16:12:46.7311660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7312450Z                 # count up differences
2025-02-24T16:12:46.7312610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7331690Z                     diff += 1
2025-02-24T16:12:46.7331930Z     
2025-02-24T16:12:46.7332150Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7332310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7332530Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7332640Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7332690Z E           
2025-02-24T16:12:46.7332790Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7333410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7333820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7333830Z 
2025-02-24T16:12:46.7334090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7334090Z 
2025-02-24T16:12:46.7334240Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7334240Z 
2025-02-24T16:12:46.7334420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119f7b8c0>
2025-02-24T16:12:46.7334700Z plasma = <tardis.plasma.base.BasePlasma object at 0x303097dd0>, attr = 'j_blues'
2025-02-24T16:12:46.7334700Z 
2025-02-24T16:12:46.7334820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7334920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7334990Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7335040Z         try:
2025-02-24T16:12:46.7335170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7335230Z         except KeyError:
2025-02-24T16:12:46.7335350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7335400Z     
2025-02-24T16:12:46.7335470Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7335550Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7335610Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7335740Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7335810Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7335880Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7335980Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7336030Z             else:
2025-02-24T16:12:46.7336110Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7336200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7336200Z 
2025-02-24T16:12:46.7336310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7336410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7336530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7336590Z     ???
2025-02-24T16:12:46.7336680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7336690Z 
2025-02-24T16:12:46.7336750Z >   ???
2025-02-24T16:12:46.7336850Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7336900Z E   
2025-02-24T16:12:46.7337010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7337130Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7337200Z E          ...
2025-02-24T16:12:46.7337270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7337390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7337480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7337540Z E          ...
2025-02-24T16:12:46.7337610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7337720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7337810Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7337810Z 
2025-02-24T16:12:46.7337880Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7338250Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T16:12:46.7338250Z 
2025-02-24T16:12:46.7338370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7338720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7338810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7338930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7339040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7339120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7339180Z err_msg = None
2025-02-24T16:12:46.7339180Z 
2025-02-24T16:12:46.7339270Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7339330Z         if err_msg is None:
2025-02-24T16:12:46.7339420Z             if left.shape != right.shape:
2025-02-24T16:12:46.7340590Z                 raise_assert_detail(
2025-02-24T16:12:46.7340750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7340820Z                 )
2025-02-24T16:12:46.7340870Z     
2025-02-24T16:12:46.7340930Z             diff = 0
2025-02-24T16:12:46.7341020Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7341090Z                 # count up differences
2025-02-24T16:12:46.7341240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7341310Z                     diff += 1
2025-02-24T16:12:46.7341360Z     
2025-02-24T16:12:46.7341430Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7341560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7341710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7341810Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7341860Z E           
2025-02-24T16:12:46.7341960Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7342190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7342410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7342420Z 
2025-02-24T16:12:46.7342680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7342690Z 
2025-02-24T16:12:46.7342830Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7342840Z 
2025-02-24T16:12:46.7343020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa0680>
2025-02-24T16:12:46.7343190Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>, attr = 'lines'
2025-02-24T16:12:46.7343200Z 
2025-02-24T16:12:46.7343310Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7343410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7343480Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7343530Z         try:
2025-02-24T16:12:46.7343660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7343720Z         except KeyError:
2025-02-24T16:12:46.7343840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7343890Z     
2025-02-24T16:12:46.7344110Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7344190Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7344260Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7344450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7344510Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7344590Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7344680Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7344740Z             else:
2025-02-24T16:12:46.7344820Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7344910Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7344910Z 
2025-02-24T16:12:46.7345020Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7345120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7345240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7345300Z     ???
2025-02-24T16:12:46.7345400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7345400Z 
2025-02-24T16:12:46.7345460Z >   ???
2025-02-24T16:12:46.7345560Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7345610Z E   
2025-02-24T16:12:46.7345720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7345820Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7345870Z E          ...
2025-02-24T16:12:46.7345950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7346060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7346160Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7346210Z E          ...
2025-02-24T16:12:46.7346290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7346400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7346490Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7346490Z 
2025-02-24T16:12:46.7346560Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7346830Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T16:12:46.7346830Z 
2025-02-24T16:12:46.7347010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa0740>
2025-02-24T16:12:46.7347140Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>
2025-02-24T16:12:46.7347220Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.7347220Z 
2025-02-24T16:12:46.7347330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7347430Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7347500Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7347550Z         try:
2025-02-24T16:12:46.7347670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7347730Z         except KeyError:
2025-02-24T16:12:46.7347850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7347900Z     
2025-02-24T16:12:46.7347980Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7348060Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7348130Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7348250Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7348320Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7348390Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7348490Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7348490Z 
2025-02-24T16:12:46.7348590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7348700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7348700Z 
2025-02-24T16:12:46.7348820Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.7348940Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.7349030Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7349150Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.7349270Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:12:46.7349340Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:12:46.7349430Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7349490Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:12:46.7349560Z err_msg = None
2025-02-24T16:12:46.7349560Z 
2025-02-24T16:12:46.7349650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7349710Z         if err_msg is None:
2025-02-24T16:12:46.7349790Z             if left.shape != right.shape:
2025-02-24T16:12:46.7349860Z                 raise_assert_detail(
2025-02-24T16:12:46.7349980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7350040Z                 )
2025-02-24T16:12:46.7350090Z     
2025-02-24T16:12:46.7350150Z             diff = 0
2025-02-24T16:12:46.7350240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7350310Z                 # count up differences
2025-02-24T16:12:46.7350460Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7350520Z                     diff += 1
2025-02-24T16:12:46.7350570Z     
2025-02-24T16:12:46.7350640Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7350760Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7350900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7350990Z E           AssertionError: Series are different
2025-02-24T16:12:46.7351040Z E           
2025-02-24T16:12:46.7351130Z E           Series values are different (4.04858 %)
2025-02-24T16:12:46.7351450Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7351740Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7352020Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7352030Z 
2025-02-24T16:12:46.7352290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7353540Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T16:12:46.7353560Z 
2025-02-24T16:12:46.7353770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa0800>
2025-02-24T16:12:46.7353910Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>
2025-02-24T16:12:46.7353980Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.7353990Z 
2025-02-24T16:12:46.7354110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7354360Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7354430Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7354480Z         try:
2025-02-24T16:12:46.7354680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7354740Z         except KeyError:
2025-02-24T16:12:46.7354880Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7354930Z     
2025-02-24T16:12:46.7355000Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7355080Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7355150Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7355330Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7355410Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7355480Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7355580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7355580Z 
2025-02-24T16:12:46.7355690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7355800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7355800Z 
2025-02-24T16:12:46.7355930Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.7355990Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.7356090Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.7356210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.7356330Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:12:46.7356400Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:12:46.7356500Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:12:46.7356570Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:12:46.7356620Z err_msg = None
2025-02-24T16:12:46.7356620Z 
2025-02-24T16:12:46.7356730Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7356790Z         if err_msg is None:
2025-02-24T16:12:46.7356870Z             if left.shape != right.shape:
2025-02-24T16:12:46.7356940Z                 raise_assert_detail(
2025-02-24T16:12:46.7357060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7357120Z                 )
2025-02-24T16:12:46.7357170Z     
2025-02-24T16:12:46.7357230Z             diff = 0
2025-02-24T16:12:46.7357320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7357400Z                 # count up differences
2025-02-24T16:12:46.7357550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7357610Z                     diff += 1
2025-02-24T16:12:46.7357670Z     
2025-02-24T16:12:46.7357740Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7357860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7358010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7358100Z E           AssertionError: Series are different
2025-02-24T16:12:46.7358160Z E           
2025-02-24T16:12:46.7358250Z E           Series values are different (6.47773 %)
2025-02-24T16:12:46.7358570Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7358890Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.7359620Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.7359630Z 
2025-02-24T16:12:46.7359900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7360100Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T16:12:46.7360110Z 
2025-02-24T16:12:46.7360220Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7360350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7360430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7360700Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7360820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7360900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7360970Z err_msg = None
2025-02-24T16:12:46.7360970Z 
2025-02-24T16:12:46.7361060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7361130Z         if err_msg is None:
2025-02-24T16:12:46.7361250Z             if left.shape != right.shape:
2025-02-24T16:12:46.7361430Z                 raise_assert_detail(
2025-02-24T16:12:46.7361560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7361620Z                 )
2025-02-24T16:12:46.7361670Z     
2025-02-24T16:12:46.7361720Z             diff = 0
2025-02-24T16:12:46.7361820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7362010Z                 # count up differences
2025-02-24T16:12:46.7362150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7362220Z                     diff += 1
2025-02-24T16:12:46.7362260Z     
2025-02-24T16:12:46.7362350Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7362480Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7363140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7363250Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7363300Z E           
2025-02-24T16:12:46.7363560Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7363790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7364150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7364170Z 
2025-02-24T16:12:46.7364630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7364630Z 
2025-02-24T16:12:46.7364780Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7365290Z 
2025-02-24T16:12:46.7365490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa0a40>
2025-02-24T16:12:46.7365650Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>, attr = 'nu'
2025-02-24T16:12:46.7365720Z 
2025-02-24T16:12:46.7365840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7365940Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7366000Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7366060Z         try:
2025-02-24T16:12:46.7366180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7366240Z         except KeyError:
2025-02-24T16:12:46.7366370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7366420Z     
2025-02-24T16:12:46.7366610Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7366690Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7366770Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7367050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7367120Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7367190Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7367450Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7367450Z 
2025-02-24T16:12:46.7367560Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7367670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7367790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7368130Z     ???
2025-02-24T16:12:46.7368240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7368250Z 
2025-02-24T16:12:46.7368300Z >   ???
2025-02-24T16:12:46.7368410Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7368460Z E   
2025-02-24T16:12:46.7368570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7368670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7368720Z E          ...
2025-02-24T16:12:46.7368800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7368910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7369010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7369070Z E          ...
2025-02-24T16:12:46.7369140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7369250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7369340Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7369340Z 
2025-02-24T16:12:46.7369410Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7369650Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T16:12:46.7369660Z 
2025-02-24T16:12:46.7369770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7369890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7369980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7370090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7370210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7370290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7370350Z err_msg = None
2025-02-24T16:12:46.7370350Z 
2025-02-24T16:12:46.7370440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7370500Z         if err_msg is None:
2025-02-24T16:12:46.7370590Z             if left.shape != right.shape:
2025-02-24T16:12:46.7370650Z                 raise_assert_detail(
2025-02-24T16:12:46.7370780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7370900Z                 )
2025-02-24T16:12:46.7370960Z     
2025-02-24T16:12:46.7371010Z             diff = 0
2025-02-24T16:12:46.7371160Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7371230Z                 # count up differences
2025-02-24T16:12:46.7371400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7371470Z                     diff += 1
2025-02-24T16:12:46.7371520Z     
2025-02-24T16:12:46.7371600Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7371730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7371880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7371990Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7372050Z E           
2025-02-24T16:12:46.7372150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7372380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7372600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7372610Z 
2025-02-24T16:12:46.7372860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7372870Z 
2025-02-24T16:12:46.7373010Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7373020Z 
2025-02-24T16:12:46.7373200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa0b00>
2025-02-24T16:12:46.7373330Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>
2025-02-24T16:12:46.7373400Z attr = 'wavelength_cm'
2025-02-24T16:12:46.7373400Z 
2025-02-24T16:12:46.7373520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7373620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7373680Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7373740Z         try:
2025-02-24T16:12:46.7373860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7373920Z         except KeyError:
2025-02-24T16:12:46.7374040Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7374090Z     
2025-02-24T16:12:46.7374160Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7374230Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7374310Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7374420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7374490Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7374570Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7374660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7374670Z 
2025-02-24T16:12:46.7374770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7374870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7375000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7375050Z     ???
2025-02-24T16:12:46.7375140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7375150Z 
2025-02-24T16:12:46.7375200Z >   ???
2025-02-24T16:12:46.7375300Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7375360Z E   
2025-02-24T16:12:46.7375550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7375650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7375700Z E          ...
2025-02-24T16:12:46.7375830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7375940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7376040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7376100Z E          ...
2025-02-24T16:12:46.7376170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7376280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7376360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7376370Z 
2025-02-24T16:12:46.7376430Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7376650Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T16:12:46.7376650Z 
2025-02-24T16:12:46.7376770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7376880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7376970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7377090Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7377200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7377290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7377350Z err_msg = None
2025-02-24T16:12:46.7377350Z 
2025-02-24T16:12:46.7377440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7377500Z         if err_msg is None:
2025-02-24T16:12:46.7377580Z             if left.shape != right.shape:
2025-02-24T16:12:46.7377650Z                 raise_assert_detail(
2025-02-24T16:12:46.7377780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7377830Z                 )
2025-02-24T16:12:46.7377880Z     
2025-02-24T16:12:46.7377940Z             diff = 0
2025-02-24T16:12:46.7378030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7378100Z                 # count up differences
2025-02-24T16:12:46.7378250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7378310Z                     diff += 1
2025-02-24T16:12:46.7378360Z     
2025-02-24T16:12:46.7378430Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7378550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7378690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7378790Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7378840Z E           
2025-02-24T16:12:46.7378940Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7379160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7379390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7379390Z 
2025-02-24T16:12:46.7379640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7379650Z 
2025-02-24T16:12:46.7379790Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7379880Z 
2025-02-24T16:12:46.7380060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa0bc0>
2025-02-24T16:12:46.7380300Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>, attr = 'f_lu'
2025-02-24T16:12:46.7380300Z 
2025-02-24T16:12:46.7380420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7380520Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7380580Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7380630Z         try:
2025-02-24T16:12:46.7380760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7380820Z         except KeyError:
2025-02-24T16:12:46.7380930Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7380980Z     
2025-02-24T16:12:46.7381060Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7381130Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7381200Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7381320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7381390Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7381470Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7381560Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7381570Z 
2025-02-24T16:12:46.7381670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:12:46.7382060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7382200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7382260Z     ???
2025-02-24T16:12:46.7382350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7382360Z 
2025-02-24T16:12:46.7382410Z >   ???
2025-02-24T16:12:46.7382520Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7382570Z E   
2025-02-24T16:12:46.7382730Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7382830Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7382890Z E          ...
2025-02-24T16:12:46.7383400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7383610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7383760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7383820Z E          ...
2025-02-24T16:12:46.7383890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7384000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7384090Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7384090Z 
2025-02-24T16:12:46.7384170Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7384390Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T16:12:46.7384400Z 
2025-02-24T16:12:46.7384520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7384630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7384720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7384840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7385040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7385130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7385190Z err_msg = None
2025-02-24T16:12:46.7385190Z 
2025-02-24T16:12:46.7385280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7385350Z         if err_msg is None:
2025-02-24T16:12:46.7385420Z             if left.shape != right.shape:
2025-02-24T16:12:46.7385490Z                 raise_assert_detail(
2025-02-24T16:12:46.7385810Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7385870Z                 )
2025-02-24T16:12:46.7385920Z     
2025-02-24T16:12:46.7386090Z             diff = 0
2025-02-24T16:12:46.7386190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7386260Z                 # count up differences
2025-02-24T16:12:46.7386410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7386470Z                     diff += 1
2025-02-24T16:12:46.7386520Z     
2025-02-24T16:12:46.7386590Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7386810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7386960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7387060Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7387120Z E           
2025-02-24T16:12:46.7387210Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7387550Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7387840Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7387940Z 
2025-02-24T16:12:46.7388310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7388310Z 
2025-02-24T16:12:46.7388470Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7388470Z 
2025-02-24T16:12:46.7388660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa1340>
2025-02-24T16:12:46.7388870Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>
2025-02-24T16:12:46.7389010Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.7389020Z 
2025-02-24T16:12:46.7389280Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7389510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7389590Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7389740Z         try:
2025-02-24T16:12:46.7389860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7390010Z         except KeyError:
2025-02-24T16:12:46.7390130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7390190Z     
2025-02-24T16:12:46.7390280Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7397860Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7397990Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7398110Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7398180Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7398260Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7398350Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7398510Z             else:
2025-02-24T16:12:46.7398600Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7398690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7398700Z 
2025-02-24T16:12:46.7398800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7398910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7399040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7399090Z     ???
2025-02-24T16:12:46.7399300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7399560Z 
2025-02-24T16:12:46.7399620Z >   ???
2025-02-24T16:12:46.7399750Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7399940Z E   
2025-02-24T16:12:46.7400170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7400280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7400330Z E          ...
2025-02-24T16:12:46.7400410Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7400540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7400640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7400700Z E          ...
2025-02-24T16:12:46.7400770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7400890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7400980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7400990Z 
2025-02-24T16:12:46.7401060Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7401300Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T16:12:46.7401310Z 
2025-02-24T16:12:46.7401430Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7401540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7401630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7401870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7401990Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7402130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7402190Z err_msg = None
2025-02-24T16:12:46.7402200Z 
2025-02-24T16:12:46.7402290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7402360Z         if err_msg is None:
2025-02-24T16:12:46.7402440Z             if left.shape != right.shape:
2025-02-24T16:12:46.7402510Z                 raise_assert_detail(
2025-02-24T16:12:46.7402650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7402700Z                 )
2025-02-24T16:12:46.7402760Z     
2025-02-24T16:12:46.7402820Z             diff = 0
2025-02-24T16:12:46.7402910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7402990Z                 # count up differences
2025-02-24T16:12:46.7403140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7403200Z                     diff += 1
2025-02-24T16:12:46.7403250Z     
2025-02-24T16:12:46.7403330Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7403460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7403610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7403710Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7403770Z E           
2025-02-24T16:12:46.7403870Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7404090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7404320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7404420Z 
2025-02-24T16:12:46.7404670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7404670Z 
2025-02-24T16:12:46.7404870Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7404880Z 
2025-02-24T16:12:46.7405060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa1400>
2025-02-24T16:12:46.7405200Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>
2025-02-24T16:12:46.7405260Z attr = 'beta_sobolev'
2025-02-24T16:12:46.7405270Z 
2025-02-24T16:12:46.7405390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7405510Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7405570Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7405640Z         try:
2025-02-24T16:12:46.7405780Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7405840Z         except KeyError:
2025-02-24T16:12:46.7405970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7406020Z     
2025-02-24T16:12:46.7406090Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7406170Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7406240Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7406360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7406430Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7406510Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7406610Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7406660Z             else:
2025-02-24T16:12:46.7406740Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7406830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7406840Z 
2025-02-24T16:12:46.7406940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7407040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7407170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7407220Z     ???
2025-02-24T16:12:46.7407330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7407330Z 
2025-02-24T16:12:46.7407390Z >   ???
2025-02-24T16:12:46.7407500Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7407540Z E   
2025-02-24T16:12:46.7407650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7407750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7407800Z E          ...
2025-02-24T16:12:46.7407880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7407990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7408090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7408140Z E          ...
2025-02-24T16:12:46.7408230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7408340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7408420Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7408420Z 
2025-02-24T16:12:46.7408490Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7408710Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T16:12:46.7408710Z 
2025-02-24T16:12:46.7408830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7408960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7409040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7409160Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:12:46.7409270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:12:46.7409570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:12:46.7409630Z err_msg = None
2025-02-24T16:12:46.7409790Z 
2025-02-24T16:12:46.7409900Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:12:46.7409970Z         if err_msg is None:
2025-02-24T16:12:46.7410040Z             if left.shape != right.shape:
2025-02-24T16:12:46.7410110Z                 raise_assert_detail(
2025-02-24T16:12:46.7410230Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:12:46.7410290Z                 )
2025-02-24T16:12:46.7410340Z     
2025-02-24T16:12:46.7410400Z             diff = 0
2025-02-24T16:12:46.7410490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:12:46.7410560Z                 # count up differences
2025-02-24T16:12:46.7410710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:12:46.7410770Z                     diff += 1
2025-02-24T16:12:46.7410830Z     
2025-02-24T16:12:46.7410900Z             diff = diff * 100.0 / left.size
2025-02-24T16:12:46.7411020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:12:46.7411180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:12:46.7411280Z E           AssertionError: numpy array are different
2025-02-24T16:12:46.7411340Z E           
2025-02-24T16:12:46.7411430Z E           numpy array values are different (4.04858 %)
2025-02-24T16:12:46.7411680Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7411920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.7411930Z 
2025-02-24T16:12:46.7412590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:12:46.7412600Z 
2025-02-24T16:12:46.7412740Z During handling of the above exception, another exception occurred:
2025-02-24T16:12:46.7412750Z 
2025-02-24T16:12:46.7412930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x119fa1580>
2025-02-24T16:12:46.7413090Z plasma = <tardis.plasma.base.BasePlasma object at 0x129acd820>, attr = 'j_blues'
2025-02-24T16:12:46.7413100Z 
2025-02-24T16:12:46.7413220Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:12:46.7413310Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:12:46.7413380Z         key = f"plasma/{attr}"
2025-02-24T16:12:46.7413440Z         try:
2025-02-24T16:12:46.7413560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:12:46.7413630Z         except KeyError:
2025-02-24T16:12:46.7413750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:12:46.7413800Z     
2025-02-24T16:12:46.7413870Z         if hasattr(plasma, attr):
2025-02-24T16:12:46.7413950Z             actual = getattr(plasma, attr)
2025-02-24T16:12:46.7414020Z             if attr == "selected_atoms":
2025-02-24T16:12:46.7414140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:12:46.7414210Z             elif actual.ndim == 1:
2025-02-24T16:12:46.7414280Z                 actual = pd.Series(actual)
2025-02-24T16:12:46.7414380Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:12:46.7414440Z             else:
2025-02-24T16:12:46.7414510Z                 actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7414610Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:12:46.7414730Z 
2025-02-24T16:12:46.7414830Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:12:46.7414940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7415120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7415180Z     ???
2025-02-24T16:12:46.7415280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7415280Z 
2025-02-24T16:12:46.7415330Z >   ???
2025-02-24T16:12:46.7415440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.7415490Z E   
2025-02-24T16:12:46.7415600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.7415690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7415750Z E          ...
2025-02-24T16:12:46.7415820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7415930Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7416040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.7416090Z E          ...
2025-02-24T16:12:46.7416170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.7416280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.7416370Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.7416370Z 
2025-02-24T16:12:46.7416440Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7416580Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T16:12:46.7416590Z 
2025-02-24T16:12:46.7416770Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7416850Z attr = 'stimulated_emission_factor'
2025-02-24T16:12:46.7417060Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15dd064b0>
2025-02-24T16:12:46.7417060Z 
2025-02-24T16:12:46.7417190Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7417330Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7417450Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7417570Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7417670Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7417740Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7417810Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7417900Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7417910Z 
2025-02-24T16:12:46.7417990Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7418090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7418090Z 
2025-02-24T16:12:46.7418350Z args = (<function assert_allclose.<locals>.compare at 0x17e7580e0>, array([[0.        , 0.        , 0.        , ..., 0.      ...1,
2025-02-24T16:12:46.7418410Z         0.01476858],
2025-02-24T16:12:46.7418520Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T16:12:46.7418580Z         0.01473787]]))
2025-02-24T16:12:46.7418790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7418790Z 
2025-02-24T16:12:46.7418850Z     @wraps(func)
2025-02-24T16:12:46.7418910Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7418980Z         with self._recreate_cm():
2025-02-24T16:12:46.7419050Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7419120Z E           AssertionError: 
2025-02-24T16:12:46.7419210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7419270Z E           
2025-02-24T16:12:46.7419350Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:12:46.7419430Z E           Max absolute difference: 1.
2025-02-24T16:12:46.7419500Z E           Max relative difference: 1.
2025-02-24T16:12:46.7419670Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.7419760Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.7419910Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:12:46.7420010Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.7420120Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.7420210Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:12:46.7420210Z 
2025-02-24T16:12:46.7420380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7420520Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T16:12:46.7420520Z 
2025-02-24T16:12:46.7420710Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7420780Z attr = 'lines_lower_level_index'
2025-02-24T16:12:46.7421000Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13fb78200>
2025-02-24T16:12:46.7421000Z 
2025-02-24T16:12:46.7421130Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7421270Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7421370Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7421480Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7421580Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7421650Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7421720Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7421810Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7421820Z 
2025-02-24T16:12:46.7421910Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7422000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7422010Z 
2025-02-24T16:12:46.7422330Z args = (<function assert_allclose.<locals>.compare at 0x16d28a520>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T16:12:46.7422530Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7422540Z 
2025-02-24T16:12:46.7422600Z     @wraps(func)
2025-02-24T16:12:46.7422790Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7422860Z         with self._recreate_cm():
2025-02-24T16:12:46.7422960Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7423050Z E           AssertionError: 
2025-02-24T16:12:46.7423140Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7423200Z E           
2025-02-24T16:12:46.7423280Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:12:46.7423370Z E           Max absolute difference: 4005
2025-02-24T16:12:46.7423620Z E           Max relative difference: 26.00649351
2025-02-24T16:12:46.7423720Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:12:46.7423810Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:12:46.7423810Z 
2025-02-24T16:12:46.7423980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7424280Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T16:12:46.7424280Z 
2025-02-24T16:12:46.7424470Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7424540Z attr = 'lines_upper_level_index'
2025-02-24T16:12:46.7424750Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x119ff8c50>
2025-02-24T16:12:46.7424760Z 
2025-02-24T16:12:46.7425430Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7425580Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7425750Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7425860Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7425960Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7426030Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7426100Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7426190Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7426190Z 
2025-02-24T16:12:46.7426280Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7426370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7426380Z 
2025-02-24T16:12:46.7426690Z args = (<function assert_allclose.<locals>.compare at 0x16d2b2520>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T16:12:46.7426900Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7426910Z 
2025-02-24T16:12:46.7426960Z     @wraps(func)
2025-02-24T16:12:46.7427030Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7427100Z         with self._recreate_cm():
2025-02-24T16:12:46.7427170Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7427240Z E           AssertionError: 
2025-02-24T16:12:46.7427330Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7427380Z E           
2025-02-24T16:12:46.7427470Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:12:46.7427540Z E           Max absolute difference: 4046
2025-02-24T16:12:46.7427620Z E           Max relative difference: 24.82208589
2025-02-24T16:12:46.7427710Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:12:46.7427800Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:12:46.7427810Z 
2025-02-24T16:12:46.7427980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7428110Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T16:12:46.7428120Z 
2025-02-24T16:12:46.7428290Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7428360Z attr = 'beta_sobolev'
2025-02-24T16:12:46.7428570Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13fb782c0>
2025-02-24T16:12:46.7428570Z 
2025-02-24T16:12:46.7428690Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7428830Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7428940Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7429050Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7429170Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7429250Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7429330Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7429410Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7429420Z 
2025-02-24T16:12:46.7429500Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7429600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7429600Z 
2025-02-24T16:12:46.7429810Z args = (<function assert_allclose.<locals>.compare at 0x16d28ac00>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7429880Z        [1., 1., 1.,.....,
2025-02-24T16:12:46.7429940Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7430010Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7430070Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:12:46.7430270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7430470Z 
2025-02-24T16:12:46.7430540Z     @wraps(func)
2025-02-24T16:12:46.7430610Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7430760Z         with self._recreate_cm():
2025-02-24T16:12:46.7430830Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7430900Z E           AssertionError: 
2025-02-24T16:12:46.7430990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7431050Z E           
2025-02-24T16:12:46.7431140Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:12:46.7431220Z E           Max absolute difference: 0.99984222
2025-02-24T16:12:46.7431300Z E           Max relative difference: 6337.12154973
2025-02-24T16:12:46.7431380Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7431480Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7431560Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.7431640Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7431720Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.7431790Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.7431800Z 
2025-02-24T16:12:46.7431970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7432100Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T16:12:46.7432100Z 
2025-02-24T16:12:46.7432280Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7432340Z attr = 'lines'
2025-02-24T16:12:46.7432550Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x17e7469c0>
2025-02-24T16:12:46.7432550Z 
2025-02-24T16:12:46.7432680Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7432820Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7432920Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7433030Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7433130Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7433210Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7433280Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7433370Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7433370Z 
2025-02-24T16:12:46.7433450Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7433550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7433550Z 
2025-02-24T16:12:46.7433920Z args = (<function assert_allclose.<locals>.compare at 0x17e759d00>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02, ....       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T16:12:46.7434010Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T16:12:46.7434240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7434250Z 
2025-02-24T16:12:46.7434310Z     @wraps(func)
2025-02-24T16:12:46.7434370Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7434440Z         with self._recreate_cm():
2025-02-24T16:12:46.7434510Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7434580Z E           AssertionError: 
2025-02-24T16:12:46.7434670Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7434720Z E           
2025-02-24T16:12:46.7434810Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:12:46.7434900Z E           Max absolute difference: 4.25260542e+12
2025-02-24T16:12:46.7435000Z E           Max relative difference: 18196.0085861
2025-02-24T16:12:46.7435150Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:12:46.7435240Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:12:46.7435450Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:12:46.7435580Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:12:46.7435710Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:12:46.7435830Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:12:46.7435830Z 
2025-02-24T16:12:46.7436000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7436130Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T16:12:46.7436130Z 
2025-02-24T16:12:46.7436310Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7436370Z attr = 'f_lu'
2025-02-24T16:12:46.7437570Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x17e79ee40>
2025-02-24T16:12:46.7437600Z 
2025-02-24T16:12:46.7437740Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7437970Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7438080Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7438210Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7438310Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7438390Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7438470Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7438610Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7438610Z 
2025-02-24T16:12:46.7438700Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7438810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7438810Z 
2025-02-24T16:12:46.7439200Z args = (<function assert_allclose.<locals>.compare at 0x13fb94f40>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, .....), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T16:12:46.7439300Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T16:12:46.7439520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7439520Z 
2025-02-24T16:12:46.7439580Z     @wraps(func)
2025-02-24T16:12:46.7439650Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7439720Z         with self._recreate_cm():
2025-02-24T16:12:46.7439840Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7439910Z E           AssertionError: 
2025-02-24T16:12:46.7440000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7440060Z E           
2025-02-24T16:12:46.7440150Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:12:46.7440230Z E           Max absolute difference: 2.92713618
2025-02-24T16:12:46.7440310Z E           Max relative difference: 18196.0085861
2025-02-24T16:12:46.7440450Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:12:46.7440530Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:12:46.7440660Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:12:46.7440730Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:12:46.7440730Z 
2025-02-24T16:12:46.7440960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7441090Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T16:12:46.7441100Z 
2025-02-24T16:12:46.7441280Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x1258787d0>
2025-02-24T16:12:46.7441340Z attr = 'tau_sobolevs'
2025-02-24T16:12:46.7441560Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x17e7456a0>
2025-02-24T16:12:46.7441560Z 
2025-02-24T16:12:46.7441690Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:12:46.7442050Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:12:46.7442170Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:12:46.7442370Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:12:46.7442480Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:12:46.7442550Z             if hasattr(actual, "cgs"):
2025-02-24T16:12:46.7442620Z                 actual = actual.cgs.value
2025-02-24T16:12:46.7442710Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:12:46.7442720Z 
2025-02-24T16:12:46.7442800Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:12:46.7442900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7442900Z 
2025-02-24T16:12:46.7443330Z args = (<function assert_allclose.<locals>.compare at 0x17e7596c0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ....       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T16:12:46.7443430Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T16:12:46.7443640Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7443640Z 
2025-02-24T16:12:46.7443700Z     @wraps(func)
2025-02-24T16:12:46.7443770Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7443840Z         with self._recreate_cm():
2025-02-24T16:12:46.7443910Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7443980Z E           AssertionError: 
2025-02-24T16:12:46.7444120Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7444180Z E           
2025-02-24T16:12:46.7444280Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:12:46.7444360Z E           Max absolute difference: 282815.33818472
2025-02-24T16:12:46.7444450Z E           Max relative difference: 4.12352828e+47
2025-02-24T16:12:46.7444580Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:12:46.7444660Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:12:46.7444780Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:12:46.7444910Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:12:46.7444990Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:12:46.7445150Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:12:46.7445160Z 
2025-02-24T16:12:46.7445330Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7445480Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T16:12:46.7445480Z 
2025-02-24T16:12:46.7445650Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7445710Z attr = 'iterations_w'
2025-02-24T16:12:46.7445930Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c2cbc0>
2025-02-24T16:12:46.7445930Z 
2025-02-24T16:12:46.7446010Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7446070Z         "attr",
2025-02-24T16:12:46.7446180Z         [
2025-02-24T16:12:46.7446240Z             "iterations_w",
2025-02-24T16:12:46.7446310Z             "iterations_t_rad",
2025-02-24T16:12:46.7446390Z             "iterations_electron_densities",
2025-02-24T16:12:46.7446450Z             "iterations_t_inner",
2025-02-24T16:12:46.7446510Z         ],
2025-02-24T16:12:46.7446560Z     )
2025-02-24T16:12:46.7446730Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7446820Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:12:46.7446890Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7446960Z             actual = actual.value
2025-02-24T16:12:46.7447030Z         actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7447190Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7447410Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7447410Z 
2025-02-24T16:12:46.7447560Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:12:46.7447670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7447790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7447850Z     ???
2025-02-24T16:12:46.7447950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7447950Z 
2025-02-24T16:12:46.7448010Z >   ???
2025-02-24T16:12:46.7448210Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.7448270Z E   
2025-02-24T16:12:46.7448400Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:12:46.7448460Z E   [index]: [0, 1]
2025-02-24T16:12:46.7448550Z E   [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-24T16:12:46.7448640Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:12:46.7448810Z E   At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:12:46.7448830Z 
2025-02-24T16:12:46.7448900Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7449030Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.7449440Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.7449800Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.7449940Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:12:46.7449950Z 
2025-02-24T16:12:46.7449950Z 
2025-02-24T16:12:46.7450140Z Packets:                                                                                   4031/? [04:45<00:00, 10.79it/s]   [A
2025-02-24T16:12:46.7450150Z 
2025-02-24T16:12:46.7450320Z Packets:                                                                                   14811/? [04:45<00:00, 64.77it/s][A
2025-02-24T16:12:46.7450330Z 
2025-02-24T16:12:46.7450560Z Packets:                                                                                   26848/? [04:45<00:00, 150.79it/s][A
2025-02-24T16:12:46.7450560Z 
2025-02-24T16:12:46.7450740Z Packets:                                                                                   38590/? [04:45<00:00, 270.44it/s][A
2025-02-24T16:12:46.7561750Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:45<00:00, 100.34s/it]
2025-02-24T16:12:46.7561820Z 
2025-02-24T16:12:46.7562180Z Packets:                                                                                   44030/? [04:45<00:00, 270.44it/s][A
2025-02-24T16:12:46.7562190Z 
2025-02-24T16:12:46.7562460Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T16:12:46.7562500Z 
2025-02-24T16:12:46.7562730Z Packets:   ████████████████████▉                                                           10479/40000 [00:00<00:00, 41339.61it/s][A
2025-02-24T16:12:46.7562750Z 
2025-02-24T16:12:46.7563000Z Packets:   █████████████████████████████▌                                                  14796/40000 [00:00<00:00, 41996.77it/s][A
2025-02-24T16:12:46.7563010Z 
2025-02-24T16:12:46.7563380Z Packets:   ██████████████████████████████████████                                          19038/40000 [00:00<00:00, 24280.82it/s][A
2025-02-24T16:12:46.7563390Z 
2025-02-24T16:12:46.7563770Z Packets:   ███████████████████████████████████████████▉                                    21955/40000 [00:00<00:00, 25279.41it/s][A
2025-02-24T16:12:46.7563770Z 
2025-02-24T16:12:46.7564110Z Packets:   ███████████████████████████████████████████████████▏                            25563/40000 [00:00<00:00, 27843.53it/s][A
2025-02-24T16:12:46.7564420Z 
2025-02-24T16:12:46.7564720Z Packets:   █████████████████████████████████████████████████████████▍                      28720/40000 [00:00<00:00, 27989.89it/s][A
2025-02-24T16:12:46.7565020Z 
2025-02-24T16:12:46.7565280Z Packets:   ███████████████████████████████████████████████████████████████▊                31937/40000 [00:01<00:00, 29076.17it/s][A
2025-02-24T16:12:46.7565290Z 
2025-02-24T16:12:46.7565590Z Packets:   ███████████████████████████████████████████████████████████████████████▍        35722/40000 [00:01<00:00, 31450.27it/s][A
2025-02-24T16:12:46.7565600Z 
2025-02-24T16:12:46.7565900Z Packets:   ███████████████████████████████████████████████████████████████████████████████ 39526/40000 [00:01<00:00, 33279.17it/s][A
2025-02-24T16:12:46.7566040Z Iterations:                                                                                6/? [04:48<00:00, 67.21s/it] 
2025-02-24T16:12:46.7566050Z 
2025-02-24T16:12:46.7566320Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 33279.17it/s][A
2025-02-24T16:12:46.7574680Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.7575150Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.7575320Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T16:12:46.7575330Z 
2025-02-24T16:12:46.7575520Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7575600Z attr = 'iterations_t_rad'
2025-02-24T16:12:46.7575830Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c01070>
2025-02-24T16:12:46.7575840Z 
2025-02-24T16:12:46.7575930Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7576000Z         "attr",
2025-02-24T16:12:46.7576050Z         [
2025-02-24T16:12:46.7576110Z             "iterations_w",
2025-02-24T16:12:46.7576180Z             "iterations_t_rad",
2025-02-24T16:12:46.7576270Z             "iterations_electron_densities",
2025-02-24T16:12:46.7576330Z             "iterations_t_inner",
2025-02-24T16:12:46.7576410Z         ],
2025-02-24T16:12:46.7576470Z     )
2025-02-24T16:12:46.7576650Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7576750Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:12:46.7576840Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7576920Z             actual = actual.value
2025-02-24T16:12:46.7576990Z         actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7577100Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7577260Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7577270Z 
2025-02-24T16:12:46.7577370Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:12:46.7577470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7577800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7577870Z     ???
2025-02-24T16:12:46.7578060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7578070Z 
2025-02-24T16:12:46.7578120Z >   ???
2025-02-24T16:12:46.7578270Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.7578320Z E   
2025-02-24T16:12:46.7578480Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:12:46.7578540Z E   [index]: [0, 1]
2025-02-24T16:12:46.7578630Z E   [left]:  [9967.488442185557, 10091.396322818851]
2025-02-24T16:12:46.7578730Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:12:46.7578900Z E   At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:12:46.7578910Z 
2025-02-24T16:12:46.7578990Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7579150Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T16:12:46.7579150Z 
2025-02-24T16:12:46.7579330Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7579420Z attr = 'iterations_electron_densities'
2025-02-24T16:12:46.7579650Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c69910>
2025-02-24T16:12:46.7579650Z 
2025-02-24T16:12:46.7579730Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7579780Z         "attr",
2025-02-24T16:12:46.7579840Z         [
2025-02-24T16:12:46.7579900Z             "iterations_w",
2025-02-24T16:12:46.7579970Z             "iterations_t_rad",
2025-02-24T16:12:46.7580050Z             "iterations_electron_densities",
2025-02-24T16:12:46.7580110Z             "iterations_t_inner",
2025-02-24T16:12:46.7580180Z         ],
2025-02-24T16:12:46.7580240Z     )
2025-02-24T16:12:46.7580410Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7580500Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:12:46.7580580Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7580650Z             actual = actual.value
2025-02-24T16:12:46.7580730Z         actual = pd.DataFrame(actual)
2025-02-24T16:12:46.7580830Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7581050Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7581050Z 
2025-02-24T16:12:46.7581160Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:12:46.7581250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7581390Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7581460Z     ???
2025-02-24T16:12:46.7581560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7581570Z 
2025-02-24T16:12:46.7581630Z >   ???
2025-02-24T16:12:46.7581780Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.7581850Z E   
2025-02-24T16:12:46.7582060Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:12:46.7582140Z E   [index]: [0, 1]
2025-02-24T16:12:46.7582230Z E   [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-24T16:12:46.7582330Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:12:46.7582480Z E   At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-24T16:12:46.7582490Z 
2025-02-24T16:12:46.7582570Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7582720Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T16:12:46.7582730Z 
2025-02-24T16:12:46.7582900Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7582970Z attr = 'nu_bar_estimator'
2025-02-24T16:12:46.7583240Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c38650>
2025-02-24T16:12:46.7583320Z 
2025-02-24T16:12:46.7583420Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7583480Z         "attr",
2025-02-24T16:12:46.7583610Z         [
2025-02-24T16:12:46.7583690Z             "nu_bar_estimator",
2025-02-24T16:12:46.7583760Z             "j_estimator",
2025-02-24T16:12:46.7583820Z             "t_radiative",
2025-02-24T16:12:46.7583890Z             "dilution_factor",
2025-02-24T16:12:46.7583950Z             "output_nus",
2025-02-24T16:12:46.7584010Z             "output_energies",
2025-02-24T16:12:46.7584070Z         ],
2025-02-24T16:12:46.7584120Z     )
2025-02-24T16:12:46.7584320Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7584420Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:12:46.7584490Z             actual = getattr(
2025-02-24T16:12:46.7584650Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:12:46.7584710Z                 attr,
2025-02-24T16:12:46.7584770Z             )
2025-02-24T16:12:46.7584870Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:12:46.7585000Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:12:46.7585100Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:12:46.7585160Z             actual = getattr(
2025-02-24T16:12:46.7585360Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:12:46.7585420Z                 attr,
2025-02-24T16:12:46.7585470Z             )
2025-02-24T16:12:46.7585520Z         else:
2025-02-24T16:12:46.7585640Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:12:46.7585700Z     
2025-02-24T16:12:46.7585770Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7585830Z             actual = actual.value
2025-02-24T16:12:46.7585900Z         actual = pd.Series(actual)
2025-02-24T16:12:46.7586020Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7586190Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7586190Z 
2025-02-24T16:12:46.7586290Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:12:46.7586440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7586570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7586630Z     ???
2025-02-24T16:12:46.7586720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7586730Z 
2025-02-24T16:12:46.7586780Z >   ???
2025-02-24T16:12:46.7586870Z E   AssertionError: Series are different
2025-02-24T16:12:46.7586930Z E   
2025-02-24T16:12:46.7587010Z E   Series values are different (100.0 %)
2025-02-24T16:12:46.7587120Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.7588160Z E   [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-24T16:12:46.7589200Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:12:46.7589370Z E   At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-24T16:12:46.7589450Z 
2025-02-24T16:12:46.7589530Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7589660Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T16:12:46.7589710Z 
2025-02-24T16:12:46.7589960Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7590030Z attr = 'j_estimator'
2025-02-24T16:12:46.7590240Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158d48e30>
2025-02-24T16:12:46.7590250Z 
2025-02-24T16:12:46.7590320Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7590380Z         "attr",
2025-02-24T16:12:46.7590430Z         [
2025-02-24T16:12:46.7590490Z             "nu_bar_estimator",
2025-02-24T16:12:46.7590560Z             "j_estimator",
2025-02-24T16:12:46.7590620Z             "t_radiative",
2025-02-24T16:12:46.7590680Z             "dilution_factor",
2025-02-24T16:12:46.7590810Z             "output_nus",
2025-02-24T16:12:46.7590890Z             "output_energies",
2025-02-24T16:12:46.7590940Z         ],
2025-02-24T16:12:46.7590990Z     )
2025-02-24T16:12:46.7591140Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7591250Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:12:46.7591310Z             actual = getattr(
2025-02-24T16:12:46.7591470Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:12:46.7591530Z                 attr,
2025-02-24T16:12:46.7591580Z             )
2025-02-24T16:12:46.7591680Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:12:46.7591860Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:12:46.7591960Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:12:46.7592020Z             actual = getattr(
2025-02-24T16:12:46.7592170Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:12:46.7592230Z                 attr,
2025-02-24T16:12:46.7592280Z             )
2025-02-24T16:12:46.7592330Z         else:
2025-02-24T16:12:46.7592450Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:12:46.7592520Z     
2025-02-24T16:12:46.7592590Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7592660Z             actual = actual.value
2025-02-24T16:12:46.7592730Z         actual = pd.Series(actual)
2025-02-24T16:12:46.7592830Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7592980Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7592990Z 
2025-02-24T16:12:46.7593090Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:12:46.7593190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7593310Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7593370Z     ???
2025-02-24T16:12:46.7593520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7593520Z 
2025-02-24T16:12:46.7593580Z >   ???
2025-02-24T16:12:46.7593660Z E   AssertionError: Series are different
2025-02-24T16:12:46.7593710Z E   
2025-02-24T16:12:46.7593790Z E   Series values are different (100.0 %)
2025-02-24T16:12:46.7593900Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.7594680Z E   [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-24T16:12:46.7595470Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:12:46.7595790Z E   At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-24T16:12:46.7595790Z 
2025-02-24T16:12:46.7595860Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7595990Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T16:12:46.7596000Z 
2025-02-24T16:12:46.7596170Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7596400Z attr = 't_radiative'
2025-02-24T16:12:46.7596620Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c39940>
2025-02-24T16:12:46.7596620Z 
2025-02-24T16:12:46.7596700Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7596750Z         "attr",
2025-02-24T16:12:46.7596810Z         [
2025-02-24T16:12:46.7596880Z             "nu_bar_estimator",
2025-02-24T16:12:46.7596950Z             "j_estimator",
2025-02-24T16:12:46.7597010Z             "t_radiative",
2025-02-24T16:12:46.7597070Z             "dilution_factor",
2025-02-24T16:12:46.7597130Z             "output_nus",
2025-02-24T16:12:46.7597200Z             "output_energies",
2025-02-24T16:12:46.7597250Z         ],
2025-02-24T16:12:46.7597300Z     )
2025-02-24T16:12:46.7597450Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7597550Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:12:46.7597610Z             actual = getattr(
2025-02-24T16:12:46.7597770Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:12:46.7597830Z                 attr,
2025-02-24T16:12:46.7597880Z             )
2025-02-24T16:12:46.7597980Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:12:46.7598110Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:12:46.7598210Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:12:46.7598270Z             actual = getattr(
2025-02-24T16:12:46.7598420Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:12:46.7598480Z                 attr,
2025-02-24T16:12:46.7598530Z             )
2025-02-24T16:12:46.7598580Z         else:
2025-02-24T16:12:46.7598700Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:12:46.7598750Z     
2025-02-24T16:12:46.7598820Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7598890Z             actual = actual.value
2025-02-24T16:12:46.7598960Z         actual = pd.Series(actual)
2025-02-24T16:12:46.7599060Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7599210Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7599220Z 
2025-02-24T16:12:46.7599320Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:12:46.7599420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7599550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7599600Z     ???
2025-02-24T16:12:46.7599700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7599710Z 
2025-02-24T16:12:46.7599750Z >   ???
2025-02-24T16:12:46.7599840Z E   AssertionError: Series are different
2025-02-24T16:12:46.7599890Z E   
2025-02-24T16:12:46.7599960Z E   Series values are different (90.0 %)
2025-02-24T16:12:46.7600080Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.7601080Z E   [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-24T16:12:46.7602100Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:12:46.7602260Z E   At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:12:46.7602260Z 
2025-02-24T16:12:46.7602350Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7602510Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T16:12:46.7602520Z 
2025-02-24T16:12:46.7602710Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7602790Z attr = 'dilution_factor'
2025-02-24T16:12:46.7603010Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c38f50>
2025-02-24T16:12:46.7603020Z 
2025-02-24T16:12:46.7603090Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7603150Z         "attr",
2025-02-24T16:12:46.7603190Z         [
2025-02-24T16:12:46.7603260Z             "nu_bar_estimator",
2025-02-24T16:12:46.7603330Z             "j_estimator",
2025-02-24T16:12:46.7603380Z             "t_radiative",
2025-02-24T16:12:46.7603450Z             "dilution_factor",
2025-02-24T16:12:46.7603510Z             "output_nus",
2025-02-24T16:12:46.7603590Z             "output_energies",
2025-02-24T16:12:46.7603650Z         ],
2025-02-24T16:12:46.7603700Z     )
2025-02-24T16:12:46.7603860Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7603980Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:12:46.7604070Z             actual = getattr(
2025-02-24T16:12:46.7604240Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:12:46.7604300Z                 attr,
2025-02-24T16:12:46.7604350Z             )
2025-02-24T16:12:46.7604450Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:12:46.7604580Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:12:46.7604670Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:12:46.7604740Z             actual = getattr(
2025-02-24T16:12:46.7604880Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:12:46.7604950Z                 attr,
2025-02-24T16:12:46.7605020Z             )
2025-02-24T16:12:46.7605080Z         else:
2025-02-24T16:12:46.7605200Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:12:46.7605250Z     
2025-02-24T16:12:46.7605320Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7605390Z             actual = actual.value
2025-02-24T16:12:46.7605470Z         actual = pd.Series(actual)
2025-02-24T16:12:46.7605640Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7605830Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7605840Z 
2025-02-24T16:12:46.7605940Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:12:46.7606030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7606150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7606210Z     ???
2025-02-24T16:12:46.7606350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7606360Z 
2025-02-24T16:12:46.7606410Z >   ???
2025-02-24T16:12:46.7606490Z E   AssertionError: Series are different
2025-02-24T16:12:46.7606610Z E   
2025-02-24T16:12:46.7606690Z E   Series values are different (95.0 %)
2025-02-24T16:12:46.7606890Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.7607790Z E   [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-24T16:12:46.7608870Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:12:46.7609110Z E   At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:12:46.7609110Z 
2025-02-24T16:12:46.7609200Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7609350Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T16:12:46.7609360Z 
2025-02-24T16:12:46.7609550Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7609620Z attr = 'output_nus'
2025-02-24T16:12:46.7609840Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c39fd0>
2025-02-24T16:12:46.7609840Z 
2025-02-24T16:12:46.7609970Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7610030Z         "attr",
2025-02-24T16:12:46.7610080Z         [
2025-02-24T16:12:46.7610150Z             "nu_bar_estimator",
2025-02-24T16:12:46.7610220Z             "j_estimator",
2025-02-24T16:12:46.7610280Z             "t_radiative",
2025-02-24T16:12:46.7610350Z             "dilution_factor",
2025-02-24T16:12:46.7610420Z             "output_nus",
2025-02-24T16:12:46.7610500Z             "output_energies",
2025-02-24T16:12:46.7610570Z         ],
2025-02-24T16:12:46.7610640Z     )
2025-02-24T16:12:46.7610820Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7610940Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:12:46.7611020Z             actual = getattr(
2025-02-24T16:12:46.7611200Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:12:46.7611280Z                 attr,
2025-02-24T16:12:46.7611340Z             )
2025-02-24T16:12:46.7611470Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:12:46.7611610Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:12:46.7611730Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:12:46.7611800Z             actual = getattr(
2025-02-24T16:12:46.7612030Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:12:46.7612110Z                 attr,
2025-02-24T16:12:46.7612170Z             )
2025-02-24T16:12:46.7612220Z         else:
2025-02-24T16:12:46.7612340Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:12:46.7612390Z     
2025-02-24T16:12:46.7612470Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7612540Z             actual = actual.value
2025-02-24T16:12:46.7612610Z         actual = pd.Series(actual)
2025-02-24T16:12:46.7612710Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7612860Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7612860Z 
2025-02-24T16:12:46.7612960Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:12:46.7613110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7613250Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7613400Z     ???
2025-02-24T16:12:46.7613510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7613520Z 
2025-02-24T16:12:46.7613580Z >   ???
2025-02-24T16:12:46.7613750Z E   AssertionError: Series are different
2025-02-24T16:12:46.7613810Z E   
2025-02-24T16:12:46.7613890Z E   Series values are different (5.1125 %)
2025-02-24T16:12:46.7614260Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7618620Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:12:46.7623390Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:12:46.7623970Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:12:46.7623970Z 
2025-02-24T16:12:46.7624040Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7624190Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T16:12:46.7624190Z 
2025-02-24T16:12:46.7624370Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x158971940>
2025-02-24T16:12:46.7624430Z attr = 'output_energies'
2025-02-24T16:12:46.7624650Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x158c3bc80>
2025-02-24T16:12:46.7624660Z 
2025-02-24T16:12:46.7624730Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.7624790Z         "attr",
2025-02-24T16:12:46.7624840Z         [
2025-02-24T16:12:46.7624900Z             "nu_bar_estimator",
2025-02-24T16:12:46.7624970Z             "j_estimator",
2025-02-24T16:12:46.7625030Z             "t_radiative",
2025-02-24T16:12:46.7625100Z             "dilution_factor",
2025-02-24T16:12:46.7625150Z             "output_nus",
2025-02-24T16:12:46.7625220Z             "output_energies",
2025-02-24T16:12:46.7625270Z         ],
2025-02-24T16:12:46.7625320Z     )
2025-02-24T16:12:46.7625470Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:12:46.7625570Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:12:46.7625640Z             actual = getattr(
2025-02-24T16:12:46.7625790Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:12:46.7625860Z                 attr,
2025-02-24T16:12:46.7625910Z             )
2025-02-24T16:12:46.7626010Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:12:46.7626140Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:12:46.7626230Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:12:46.7626300Z             actual = getattr(
2025-02-24T16:12:46.7626440Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:12:46.7626500Z                 attr,
2025-02-24T16:12:46.7626550Z             )
2025-02-24T16:12:46.7626600Z         else:
2025-02-24T16:12:46.7626720Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:12:46.7626770Z     
2025-02-24T16:12:46.7626840Z         if hasattr(actual, "value"):
2025-02-24T16:12:46.7626900Z             actual = actual.value
2025-02-24T16:12:46.7626980Z         actual = pd.Series(actual)
2025-02-24T16:12:46.7627090Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:12:46.7627360Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:12:46.7627440Z 
2025-02-24T16:12:46.7627560Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:12:46.7627680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7627820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:12:46.7627890Z     ???
2025-02-24T16:12:46.7628000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7628000Z 
2025-02-24T16:12:46.7628060Z >   ???
2025-02-24T16:12:46.7628140Z E   AssertionError: Series are different
2025-02-24T16:12:46.7628200Z E   
2025-02-24T16:12:46.7628470Z E   Series values are different (1.3025 %)
2025-02-24T16:12:46.7628830Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.7634050Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:12:46.7639020Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:12:46.7639330Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:12:46.7639340Z 
2025-02-24T16:12:46.7639410Z testing.pyx:173: AssertionError
2025-02-24T16:12:46.7639570Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T16:12:46.7639570Z 
2025-02-24T16:12:46.7639790Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a0ad160>
2025-02-24T16:12:46.7639950Z simulation = <tardis.simulation.base.Simulation object at 0x31144afc0>
2025-02-24T16:12:46.7639960Z 
2025-02-24T16:12:46.7640060Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T16:12:46.7640190Z         transport_state = simulation.transport.transport_state
2025-02-24T16:12:46.7640350Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:12:46.7640400Z     
2025-02-24T16:12:46.7640560Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:12:46.7640670Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T16:12:46.7640810Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:12:46.7640900Z         expected = self.get_expected_data(key)
2025-02-24T16:12:46.7640950Z     
2025-02-24T16:12:46.7641040Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7641090Z     
2025-02-24T16:12:46.7641160Z >       assert_quantity_allclose(
2025-02-24T16:12:46.7641220Z             result,
2025-02-24T16:12:46.7641270Z             luminosity,
2025-02-24T16:12:46.7641330Z         )
2025-02-24T16:12:46.7641330Z 
2025-02-24T16:12:46.7641540Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T16:12:46.7641640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7641930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7642010Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7642110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7642110Z 
2025-02-24T16:12:46.7642490Z args = (<function assert_allclose.<locals>.compare at 0x15dc919e0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:12:46.7642580Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7642800Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7642800Z 
2025-02-24T16:12:46.7642870Z     @wraps(func)
2025-02-24T16:12:46.7642930Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7643160Z         with self._recreate_cm():
2025-02-24T16:12:46.7643270Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7643350Z E           AssertionError: 
2025-02-24T16:12:46.7643520Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7643580Z E           
2025-02-24T16:12:46.7643730Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:12:46.7643910Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:12:46.7644000Z E           Max relative difference: 1.
2025-02-24T16:12:46.7644200Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.7644290Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7644410Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.7644610Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7644620Z 
2025-02-24T16:12:46.7644800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7645010Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T16:12:46.7645030Z 
2025-02-24T16:12:46.7645250Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a0ac350>
2025-02-24T16:12:46.7645410Z simulation = <tardis.simulation.base.Simulation object at 0x31144afc0>
2025-02-24T16:12:46.7645410Z 
2025-02-24T16:12:46.7645590Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T16:12:46.7645780Z         transport_state = simulation.transport.transport_state
2025-02-24T16:12:46.7645970Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:12:46.7646030Z     
2025-02-24T16:12:46.7646190Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:12:46.7646370Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T16:12:46.7646600Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T16:12:46.7646700Z         expected = self.get_expected_data(key)
2025-02-24T16:12:46.7656040Z     
2025-02-24T16:12:46.7656170Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7656220Z     
2025-02-24T16:12:46.7656290Z >       assert_quantity_allclose(
2025-02-24T16:12:46.7656350Z             result,
2025-02-24T16:12:46.7656420Z             luminosity,
2025-02-24T16:12:46.7656480Z         )
2025-02-24T16:12:46.7656480Z 
2025-02-24T16:12:46.7656590Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T16:12:46.7656690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7656970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7657040Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7657140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7657150Z 
2025-02-24T16:12:46.7657520Z args = (<function assert_allclose.<locals>.compare at 0x14ed685e0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, .....), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T16:12:46.7657610Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7657820Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7657820Z 
2025-02-24T16:12:46.7657880Z     @wraps(func)
2025-02-24T16:12:46.7657940Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7658020Z         with self._recreate_cm():
2025-02-24T16:12:46.7658090Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7658150Z E           AssertionError: 
2025-02-24T16:12:46.7658250Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7658300Z E           
2025-02-24T16:12:46.7658390Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:12:46.7658660Z E           Max absolute difference: 4.15247374e+37
2025-02-24T16:12:46.7658730Z E           Max relative difference: 1.
2025-02-24T16:12:46.7658860Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.7659030Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7659160Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.7659230Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7659230Z 
2025-02-24T16:12:46.7659410Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7659540Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T16:12:46.7659550Z 
2025-02-24T16:12:46.7659760Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x11a0acbf0>
2025-02-24T16:12:46.7659910Z simulation = <tardis.simulation.base.Simulation object at 0x31144afc0>
2025-02-24T16:12:46.7659920Z 
2025-02-24T16:12:46.7659990Z     def test_solve(self, simulation):
2025-02-24T16:12:46.7660120Z         transport_state = simulation.transport.transport_state
2025-02-24T16:12:46.7660280Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:12:46.7660330Z     
2025-02-24T16:12:46.7660490Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:12:46.7660620Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T16:12:46.7660690Z             transport_state
2025-02-24T16:12:46.7660740Z         )
2025-02-24T16:12:46.7660900Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:12:46.7660990Z         expected_real = self.get_expected_data(key_real)
2025-02-24T16:12:46.7661050Z     
2025-02-24T16:12:46.7661160Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T16:12:46.7661210Z     
2025-02-24T16:12:46.7661280Z >       assert_quantity_allclose(
2025-02-24T16:12:46.7661350Z             result_real.luminosity,
2025-02-24T16:12:46.7661420Z             luminosity_real,
2025-02-24T16:12:46.7661470Z         )
2025-02-24T16:12:46.7661470Z 
2025-02-24T16:12:46.7661580Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T16:12:46.7661690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7661960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7662030Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7662130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7662130Z 
2025-02-24T16:12:46.7662500Z args = (<function assert_allclose.<locals>.compare at 0x15cda56c0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:12:46.7662600Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7662800Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7662810Z 
2025-02-24T16:12:46.7662870Z     @wraps(func)
2025-02-24T16:12:46.7662930Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7663000Z         with self._recreate_cm():
2025-02-24T16:12:46.7663080Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7663150Z E           AssertionError: 
2025-02-24T16:12:46.7663240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7663290Z E           
2025-02-24T16:12:46.7663460Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:12:46.7663540Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:12:46.7663620Z E           Max relative difference: 1.
2025-02-24T16:12:46.7663750Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.7663870Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7664000Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.7664120Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7664120Z 
2025-02-24T16:12:46.7664290Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7664450Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T16:12:46.7664450Z 
2025-02-24T16:12:46.7664620Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11a0acfe0>
2025-02-24T16:12:46.7664780Z simulation = <tardis.simulation.base.Simulation object at 0x135382f90>
2025-02-24T16:12:46.7664780Z 
2025-02-24T16:12:46.7664870Z     def test_j_blue_estimators(self, simulation):
2025-02-24T16:12:46.7665000Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T16:12:46.7665090Z         expected = self.get_expected_data(key)
2025-02-24T16:12:46.7665140Z     
2025-02-24T16:12:46.7665210Z >       npt.assert_allclose(
2025-02-24T16:12:46.7665390Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T16:12:46.7665470Z             expected.values,
2025-02-24T16:12:46.7665520Z         )
2025-02-24T16:12:46.7665520Z 
2025-02-24T16:12:46.7665590Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T16:12:46.7665700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7665700Z 
2025-02-24T16:12:46.7665910Z args = (<function assert_allclose.<locals>.compare at 0x31e301120>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7665970Z        [0., 0., 0.,.....,
2025-02-24T16:12:46.7666040Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7666100Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7666170Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:12:46.7666370Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7666380Z 
2025-02-24T16:12:46.7666440Z     @wraps(func)
2025-02-24T16:12:46.7666500Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7666580Z         with self._recreate_cm():
2025-02-24T16:12:46.7666640Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7666710Z E           AssertionError: 
2025-02-24T16:12:46.7666800Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7666860Z E           
2025-02-24T16:12:46.7666950Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:12:46.7667030Z E           Max absolute difference: 5.32418652e-19
2025-02-24T16:12:46.7667120Z E           Max relative difference: 12.23359055
2025-02-24T16:12:46.7667200Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7667270Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7667350Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7667420Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7667500Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7667570Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7667580Z 
2025-02-24T16:12:46.7667750Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7667890Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.7668170Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7668950Z 	
2025-02-24T16:12:46.7669410Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T16:12:46.7669550Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7669890Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T16:12:46.7670120Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7670510Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T16:12:46.7670760Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.7671110Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.7671250Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7671420Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:12:46.7671550Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7671610Z 	
2025-02-24T16:12:46.7671730Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T16:12:46.7671850Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7671910Z 	
2025-02-24T16:12:46.7671980Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:12:46.7672060Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:12:46.7672130Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7672220Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.7672350Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7672400Z 	
2025-02-24T16:12:46.7672520Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:12:46.7672650Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7672690Z 	
2025-02-24T16:12:46.7672780Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:12:46.7672860Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:12:46.7672930Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:12:46.7673000Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:12:46.7673080Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:12:46.7673160Z  ([1mbase.py[0m:650)
2025-02-24T16:12:46.7673290Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7673350Z 	
2025-02-24T16:12:46.7673420Z 	Current t_inner = 9974.969 K
2025-02-24T16:12:46.7673520Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:12:46.7673600Z  ([1mbase.py[0m:652)
2025-02-24T16:12:46.7673730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7673790Z 	
2025-02-24T16:12:46.7673900Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T16:12:46.7674030Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7674420Z 	
2025-02-24T16:12:46.7674500Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:12:46.7674580Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:12:46.7674650Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7674730Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.7674860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7674910Z 	
2025-02-24T16:12:46.7675020Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:12:46.7675160Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7675210Z 	
2025-02-24T16:12:46.7675300Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:12:46.7675370Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:12:46.7675440Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:12:46.7675520Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:12:46.7675590Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:12:46.7675670Z  ([1mbase.py[0m:650)
2025-02-24T16:12:46.7675790Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7675850Z 	
2025-02-24T16:12:46.7675910Z 	Current t_inner = 10736.790 K
2025-02-24T16:12:46.7676010Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:12:46.7676090Z  ([1mbase.py[0m:652)
2025-02-24T16:12:46.7676210Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7676260Z 	
2025-02-24T16:12:46.7676380Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T16:12:46.7676570Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7676620Z 	
2025-02-24T16:12:46.7676700Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:12:46.7676820Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:12:46.7676890Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7676970Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.7677100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7677280Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:12:46.7677410Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7677460Z 	
2025-02-24T16:12:46.7677580Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:12:46.7677730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7677790Z 	
2025-02-24T16:12:46.7677870Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:12:46.7677950Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:12:46.7678020Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:12:46.7678100Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:12:46.7678180Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:12:46.7678250Z  ([1mbase.py[0m:650)
2025-02-24T16:12:46.7678380Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7678430Z 	
2025-02-24T16:12:46.7678500Z 	Current t_inner = 10718.574 K
2025-02-24T16:12:46.7678600Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:12:46.7678670Z  ([1mbase.py[0m:652)
2025-02-24T16:12:46.7678800Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7678850Z 	
2025-02-24T16:12:46.7678970Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T16:12:46.7679100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7679150Z 	
2025-02-24T16:12:46.7679220Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:12:46.7679300Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:12:46.7679370Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7679490Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.7679680Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7679900Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:12:46.7680100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7680170Z 	
2025-02-24T16:12:46.7680300Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:12:46.7680460Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7680540Z 	
2025-02-24T16:12:46.7680640Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:12:46.7680710Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:12:46.7680780Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:12:46.7681250Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:12:46.7681360Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:12:46.7681510Z  ([1mbase.py[0m:650)
2025-02-24T16:12:46.7681740Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7681810Z 	
2025-02-24T16:12:46.7681910Z 	Current t_inner = 10696.150 K
2025-02-24T16:12:46.7682040Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:12:46.7682190Z  ([1mbase.py[0m:652)
2025-02-24T16:12:46.7682390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7682450Z 	
2025-02-24T16:12:46.7682530Z 	Simulation finished in 4 iterations 
2025-02-24T16:12:46.7682620Z 	Simulation took 17.38 s
2025-02-24T16:12:46.7682750Z  ([1mbase.py[0m:542)
2025-02-24T16:12:46.7682980Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7683030Z 	
2025-02-24T16:12:46.7683190Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T16:12:46.7683390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.7683460Z 	
2025-02-24T16:12:46.7683570Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:12:46.7683890Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:12:46.7683970Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7684230Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.7684400Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:12:46.7684410Z 
2025-02-24T16:12:46.7684410Z 
2025-02-24T16:12:46.7684690Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:12:46.7684710Z 
2025-02-24T16:12:46.7684970Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T16:12:46.7684980Z 
2025-02-24T16:12:46.7685280Z Packets:   ███▏                                                                            7928/200000 [00:00<00:02, 79276.67it/s][A
2025-02-24T16:12:46.7685290Z 
2025-02-24T16:12:46.7685530Z Packets:   ███████▌                                                                        18927/200000 [00:00<00:01, 97340.21it/s][A
2025-02-24T16:12:46.7685560Z 
2025-02-24T16:12:46.7685820Z Packets:   ███████████▍                                                                    28662/200000 [00:00<00:01, 93913.60it/s][A
2025-02-24T16:12:46.7685840Z 
2025-02-24T16:12:46.7686100Z Packets:   ███████████████▍                                                                38450/200000 [00:00<00:01, 95441.94it/s][A
2025-02-24T16:12:46.7686110Z 
2025-02-24T16:12:46.7686370Z Packets:   ███████████████████▏                                                            48006/200000 [00:00<00:01, 93653.45it/s][A
2025-02-24T16:12:46.7686380Z 
2025-02-24T16:12:46.7686630Z Packets:   ██████████████████████▉                                                         57383/200000 [00:00<00:01, 89816.84it/s][A
2025-02-24T16:12:46.7686630Z 
2025-02-24T16:12:46.7686870Z Packets:   ██████████████████████████▌                                                     66394/200000 [00:00<00:01, 85558.70it/s][A
2025-02-24T16:12:46.7686890Z 
2025-02-24T16:12:46.7687190Z Packets:   ██████████████████████████████▏                                                 75513/200000 [00:00<00:01, 87215.84it/s][A
2025-02-24T16:12:46.7687220Z 
2025-02-24T16:12:46.7687480Z Packets:   █████████████████████████████████▋                                              84275/200000 [00:00<00:01, 79666.21it/s][A
2025-02-24T16:12:46.7687490Z 
2025-02-24T16:12:46.7687750Z Packets:   █████████████████████████████████████▊                                          94539/200000 [00:01<00:01, 86105.26it/s][A
2025-02-24T16:12:46.7687760Z 
2025-02-24T16:12:46.7688030Z Packets:   █████████████████████████████████████████▎                                      103304/200000 [00:01<00:01, 84808.59it/s][A
2025-02-24T16:12:46.7688050Z 
2025-02-24T16:12:46.7688340Z Packets:   █████████████████████████████████████████████                                   112594/200000 [00:01<00:01, 87119.75it/s][A
2025-02-24T16:12:46.7688530Z 
2025-02-24T16:12:46.7690910Z Packets:   ████████████████████████████████████████████████▉                               122259/200000 [00:01<00:00, 89878.28it/s][A
2025-02-24T16:12:46.7691100Z 
2025-02-24T16:12:46.7691500Z Packets:   ████████████████████████████████████████████████████▌                           131321/200000 [00:01<00:00, 85271.04it/s][A
2025-02-24T16:12:46.7691510Z 
2025-02-24T16:12:46.7691820Z Packets:   ███████████████████████████████████████████████████████▉                        139940/200000 [00:01<00:00, 76313.07it/s][A
2025-02-24T16:12:46.7691830Z 
2025-02-24T16:12:46.7692140Z Packets:   ███████████████████████████████████████████████████████████                     147783/200000 [00:01<00:00, 74289.38it/s][A
2025-02-24T16:12:46.7692150Z 
2025-02-24T16:12:46.7692450Z Packets:   ██████████████████████████████████████████████████████████████▊                 156904/200000 [00:01<00:00, 78827.95it/s][A
2025-02-24T16:12:46.7692460Z 
2025-02-24T16:12:46.7692750Z Packets:   ██████████████████████████████████████████████████████████████████▎             165888/200000 [00:01<00:00, 81878.13it/s][A
2025-02-24T16:12:46.7692780Z 
2025-02-24T16:12:46.7693230Z Packets:   █████████████████████████████████████████████████████████████████████▊          174638/200000 [00:02<00:00, 80969.69it/s][A
2025-02-24T16:12:46.7693240Z 
2025-02-24T16:12:46.7695170Z Packets:   █████████████████████████████████████████████████████████████████████████▊      184640/200000 [00:02<00:00, 86314.42it/s][A
2025-02-24T16:12:46.7695180Z 
2025-02-24T16:12:46.7695590Z Packets:   █████████████████████████████████████████████████████████████████████████████▋  194262/200000 [00:02<00:00, 89157.40it/s][A
2025-02-24T16:12:46.7695730Z Iterations:                                                                                13/? [06:29<00:00, 16.30s/it]
2025-02-24T16:12:46.7695740Z 
2025-02-24T16:12:46.7696040Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 89157.40it/s][A
2025-02-24T16:12:46.7696070Z 
2025-02-24T16:12:46.7696270Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:12:46.7696290Z 
2025-02-24T16:12:46.7696480Z Packets:   ████▌                                                                           11408/200000 [00:00<00:01, 114073.04it/s][A
2025-02-24T16:12:46.7696490Z 
2025-02-24T16:12:46.7696680Z Packets:   █████████▏                                                                      22816/200000 [00:00<00:02, 85893.99it/s] [A
2025-02-24T16:12:46.7696690Z 
2025-02-24T16:12:46.7696900Z Packets:   ████████████▋                                                                   31821/200000 [00:00<00:02, 81095.39it/s][A
2025-02-24T16:12:46.7696910Z 
2025-02-24T16:12:46.7697120Z Packets:   ████████████████▎                                                               40908/200000 [00:00<00:01, 84404.93it/s][A
2025-02-24T16:12:46.7697220Z 
2025-02-24T16:12:46.7697430Z Packets:   ███████████████████▊                                                            49524/200000 [00:00<00:01, 82231.79it/s][A
2025-02-24T16:12:46.7697500Z 
2025-02-24T16:12:46.7697750Z Packets:   ████████████████████████▎                                                       60735/200000 [00:00<00:01, 91518.91it/s][A
2025-02-24T16:12:46.7697770Z 
2025-02-24T16:12:46.7698100Z Packets:   ████████████████████████████                                                    70043/200000 [00:00<00:01, 86877.30it/s][A
2025-02-24T16:12:46.7698110Z 
2025-02-24T16:12:46.7698390Z Packets:   ███████████████████████████████▌                                                78862/200000 [00:00<00:01, 83416.23it/s][A
2025-02-24T16:12:46.7698420Z 
2025-02-24T16:12:46.7698700Z Packets:   ████████████████████████████████████▍                                           90950/200000 [00:01<00:01, 94128.18it/s][A
2025-02-24T16:12:46.7698710Z 
2025-02-24T16:12:46.7698990Z Packets:   ████████████████████████████████████████▏                                       100529/200000 [00:01<00:01, 71147.13it/s][A
2025-02-24T16:12:46.7699010Z 
2025-02-24T16:12:46.7699250Z Packets:   ████████████████████████████████████████████▌                                   111394/200000 [00:01<00:01, 79755.88it/s][A
2025-02-24T16:12:46.7699260Z 
2025-02-24T16:12:46.7699570Z Packets:   ████████████████████████████████████████████████                                120223/200000 [00:01<00:01, 76145.58it/s][A
2025-02-24T16:12:46.7699580Z 
2025-02-24T16:12:46.7699870Z Packets:   ███████████████████████████████████████████████████▎                            128433/200000 [00:01<00:00, 74160.89it/s][A
2025-02-24T16:12:46.7699880Z 
2025-02-24T16:12:46.7700170Z Packets:   ███████████████████████████████████████████████████████▉                        139828/200000 [00:01<00:00, 84318.72it/s][A
2025-02-24T16:12:46.7700180Z 
2025-02-24T16:12:46.7700470Z Packets:   ███████████████████████████████████████████████████████████▍                    148727/200000 [00:01<00:00, 83117.28it/s][A
2025-02-24T16:12:46.7700500Z 
2025-02-24T16:12:46.7700790Z Packets:   ██████████████████████████████████████████████████████████████▉                 157360/200000 [00:01<00:00, 77540.34it/s][A
2025-02-24T16:12:46.7700810Z 
2025-02-24T16:12:46.7701120Z Packets:   ██████████████████████████████████████████████████████████████████▏             165382/200000 [00:02<00:00, 72361.39it/s][A
2025-02-24T16:12:46.7701150Z 
2025-02-24T16:12:46.7701470Z Packets:   █████████████████████████████████████████████████████████████████████▏          172835/200000 [00:02<00:00, 70623.41it/s][A
2025-02-24T16:12:46.7701490Z 
2025-02-24T16:12:46.7701800Z Packets:   ████████████████████████████████████████████████████████████████████████▎       180705/200000 [00:02<00:00, 72744.00it/s][A
2025-02-24T16:12:46.7701810Z 
2025-02-24T16:12:46.7702100Z Packets:   ███████████████████████████████████████████████████████████████████████████▌    188930/200000 [00:02<00:00, 75338.63it/s][A
2025-02-24T16:12:46.7702200Z 
2025-02-24T16:12:46.7702480Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 196579/200000 [00:02<00:00, 75315.72it/s][A
2025-02-24T16:12:46.7702740Z Iterations:                                                                                14/? [06:33<00:00, 12.60s/it]
2025-02-24T16:12:46.7702750Z 
2025-02-24T16:12:46.7703050Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 75315.72it/s][A
2025-02-24T16:12:46.7703070Z 
2025-02-24T16:12:46.7703310Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:12:46.7703320Z 
2025-02-24T16:12:46.7703600Z Packets:   ███▎                                                                            8256/200000 [00:00<00:02, 82558.31it/s][A
2025-02-24T16:12:46.7703610Z 
2025-02-24T16:12:46.7703840Z Packets:   ██████▋                                                                         16641/200000 [00:00<00:02, 83305.32it/s][A
2025-02-24T16:12:46.7703860Z 
2025-02-24T16:12:46.7704090Z Packets:   █████████▉                                                                      24972/200000 [00:00<00:02, 79070.49it/s][A
2025-02-24T16:12:46.7704110Z 
2025-02-24T16:12:46.7704330Z Packets:   █████████████▉                                                                  34849/200000 [00:00<00:01, 86601.55it/s][A
2025-02-24T16:12:46.7704340Z 
2025-02-24T16:12:46.7704580Z Packets:   █████████████████▍                                                              43549/200000 [00:00<00:01, 83238.16it/s][A
2025-02-24T16:12:46.7704590Z 
2025-02-24T16:12:46.7704840Z Packets:   █████████████████████▍                                                          53517/200000 [00:00<00:01, 88599.18it/s][A
2025-02-24T16:12:46.7704850Z 
2025-02-24T16:12:46.7705100Z Packets:   █████████████████████████▍                                                      63483/200000 [00:00<00:01, 92114.38it/s][A
2025-02-24T16:12:46.7705130Z 
2025-02-24T16:12:46.7705390Z Packets:   █████████████████████████████▉                                                  74874/200000 [00:00<00:01, 98918.99it/s][A
2025-02-24T16:12:46.7705410Z 
2025-02-24T16:12:46.7705680Z Packets:   █████████████████████████████████▉                                              84809/200000 [00:00<00:01, 96334.91it/s][A
2025-02-24T16:12:46.7705690Z 
2025-02-24T16:12:46.7705950Z Packets:   █████████████████████████████████████▊                                          94484/200000 [00:01<00:01, 94390.38it/s][A
2025-02-24T16:12:46.7705970Z 
2025-02-24T16:12:46.7706250Z Packets:   █████████████████████████████████████████▌                                      103956/200000 [00:01<00:01, 81032.36it/s][A
2025-02-24T16:12:46.7706260Z 
2025-02-24T16:12:46.7706520Z Packets:   ████████████████████████████████████████████▉                                   112385/200000 [00:01<00:01, 79757.17it/s][A
2025-02-24T16:12:46.7706730Z 
2025-02-24T16:12:46.7707020Z Packets:   ████████████████████████████████████████████████▉                               122254/200000 [00:01<00:00, 84851.71it/s][A
2025-02-24T16:12:46.7707300Z 
2025-02-24T16:12:46.7707580Z Packets:   ████████████████████████████████████████████████████▍                           130953/200000 [00:01<00:00, 84479.08it/s][A
2025-02-24T16:12:46.7707600Z 
2025-02-24T16:12:46.7707900Z Packets:   ████████████████████████████████████████████████████████▏                       140347/200000 [00:01<00:00, 87146.23it/s][A
2025-02-24T16:12:46.7707910Z 
2025-02-24T16:12:46.7708200Z Packets:   ████████████████████████████████████████████████████████████                    150004/200000 [00:01<00:00, 89841.47it/s][A
2025-02-24T16:12:46.7708210Z 
2025-02-24T16:12:46.7708480Z Packets:   ████████████████████████████████████████████████████████████████▋               161686/200000 [00:01<00:00, 97689.97it/s][A
2025-02-24T16:12:46.7708490Z 
2025-02-24T16:12:46.7708790Z Packets:   █████████████████████████████████████████████████████████████████████▎          173264/200000 [00:01<00:00, 102999.12it/s][A
2025-02-24T16:12:46.7708810Z 
2025-02-24T16:12:46.7709130Z Packets:   █████████████████████████████████████████████████████████████████████████▍      183643/200000 [00:02<00:00, 96008.62it/s] [A
2025-02-24T16:12:46.7709140Z 
2025-02-24T16:12:46.7709450Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193389/200000 [00:02<00:00, 77124.37it/s][A
2025-02-24T16:12:46.7709620Z Iterations:                                                                                15/? [06:38<00:00, 10.12s/it]
2025-02-24T16:12:46.7709630Z 
2025-02-24T16:12:46.7709930Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 77124.37it/s][A
2025-02-24T16:12:46.7709950Z 
2025-02-24T16:12:46.7710220Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:12:46.7710330Z 
2025-02-24T16:12:46.7710560Z Packets:   ███▎                                                                            8371/200000 [00:00<00:02, 83533.82it/s][A
2025-02-24T16:12:46.7710570Z 
2025-02-24T16:12:46.7710810Z Packets:   ██████▋                                                                         16725/200000 [00:00<00:02, 82824.33it/s][A
2025-02-24T16:12:46.7710820Z 
2025-02-24T16:12:46.7711040Z Packets:   ██████████▎                                                                     25864/200000 [00:00<00:02, 86712.85it/s][A
2025-02-24T16:12:46.7711060Z 
2025-02-24T16:12:46.7711300Z Packets:   █████████████▊                                                                  34538/200000 [00:00<00:01, 83055.42it/s][A
2025-02-24T16:12:46.7711310Z 
2025-02-24T16:12:46.7711570Z Packets:   █████████████████▎                                                              43243/200000 [00:00<00:01, 84452.38it/s][A
2025-02-24T16:12:46.7711600Z 
2025-02-24T16:12:46.7711860Z Packets:   ████████████████████▋                                                           51707/200000 [00:00<00:02, 66529.91it/s][A
2025-02-24T16:12:46.7711980Z 
2025-02-24T16:12:46.7712240Z Packets:   ████████████████████████▏                                                       60453/200000 [00:00<00:01, 72235.81it/s][A
2025-02-24T16:12:46.7712250Z 
2025-02-24T16:12:46.7712520Z Packets:   ███████████████████████████▎                                                    68142/200000 [00:00<00:01, 71997.72it/s][A
2025-02-24T16:12:46.7712550Z 
2025-02-24T16:12:46.7712800Z Packets:   ██████████████████████████████▍                                                 76188/200000 [00:01<00:01, 74380.75it/s][A
2025-02-24T16:12:46.7712810Z 
2025-02-24T16:12:46.7713080Z Packets:   █████████████████████████████████▌                                              83869/200000 [00:01<00:01, 71534.31it/s][A
2025-02-24T16:12:46.7713090Z 
2025-02-24T16:12:46.7713370Z Packets:   ████████████████████████████████████▊                                           91961/200000 [00:01<00:01, 74155.63it/s][A
2025-02-24T16:12:46.7713380Z 
2025-02-24T16:12:46.7713680Z Packets:   ███████████████████████████████████████▊                                        99524/200000 [00:01<00:01, 64546.64it/s][A
2025-02-24T16:12:46.7713690Z 
2025-02-24T16:12:46.7713960Z Packets:   ██████████████████████████████████████████▌                                     106278/200000 [00:01<00:01, 65031.21it/s][A
2025-02-24T16:12:46.7713970Z 
2025-02-24T16:12:46.7714240Z Packets:   █████████████████████████████████████████████▏                                  112997/200000 [00:01<00:01, 64026.13it/s][A
2025-02-24T16:12:46.7714250Z 
2025-02-24T16:12:46.7714530Z Packets:   ███████████████████████████████████████████████▊                                119546/200000 [00:01<00:01, 61968.37it/s][A
2025-02-24T16:12:46.7714540Z 
2025-02-24T16:12:46.7714820Z Packets:   ██████████████████████████████████████████████████▎                             125878/200000 [00:01<00:01, 62338.10it/s][A
2025-02-24T16:12:46.7714840Z 
2025-02-24T16:12:46.7715140Z Packets:   ██████████████████████████████████████████████████████▎                         135748/200000 [00:01<00:00, 72556.37it/s][A
2025-02-24T16:12:46.7715170Z 
2025-02-24T16:12:46.7715430Z Packets:   █████████████████████████████████████████████████████████▋                      144226/200000 [00:01<00:00, 76058.02it/s][A
2025-02-24T16:12:46.7715440Z 
2025-02-24T16:12:46.7715720Z Packets:   ████████████████████████████████████████████████████████████▊                   151936/200000 [00:02<00:00, 72624.44it/s][A
2025-02-24T16:12:46.7715730Z 
2025-02-24T16:12:46.7716020Z Packets:   ███████████████████████████████████████████████████████████████▋                159298/200000 [00:02<00:00, 71714.83it/s][A
2025-02-24T16:12:46.7716030Z 
2025-02-24T16:12:46.7716330Z Packets:   ██████████████████████████████████████████████████████████████████▋             166817/200000 [00:02<00:00, 72699.76it/s][A
2025-02-24T16:12:46.7716460Z 
2025-02-24T16:12:46.7716770Z Packets:   █████████████████████████████████████████████████████████████████████▋          174140/200000 [00:02<00:00, 61823.91it/s][A
2025-02-24T16:12:46.7716860Z 
2025-02-24T16:12:46.7717160Z Packets:   ████████████████████████████████████████████████████████████████████████▏       180624/200000 [00:02<00:00, 61511.82it/s][A
2025-02-24T16:12:46.7717170Z 
2025-02-24T16:12:46.7717470Z Packets:   ██████████████████████████████████████████████████████████████████████████▊     186983/200000 [00:02<00:00, 60846.78it/s][A
2025-02-24T16:12:46.7717480Z 
2025-02-24T16:12:46.7717780Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193209/200000 [00:02<00:00, 54965.76it/s][A
2025-02-24T16:12:46.7717920Z Iterations:                                                                                16/? [06:42<00:00,  8.51s/it]
2025-02-24T16:12:46.7717920Z 
2025-02-24T16:12:46.7718230Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:03<00:00, 54965.76it/s][A
2025-02-24T16:12:46.7718260Z 
2025-02-24T16:12:46.7718450Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                [A
2025-02-24T16:12:46.7718460Z 
2025-02-24T16:12:46.7718670Z Packets:   ▉                                                                               5675/500000 [00:00<00:20, 24574.00it/s][A
2025-02-24T16:12:46.7718680Z 
2025-02-24T16:12:46.7718920Z Packets:   █▎                                                                              8133/500000 [00:00<00:20, 24375.25it/s][A
2025-02-24T16:12:46.7718930Z 
2025-02-24T16:12:46.7719170Z Packets:   █▊                                                                              11704/500000 [00:00<00:17, 28350.13it/s][A
2025-02-24T16:12:46.7719180Z 
2025-02-24T16:12:46.7719410Z Packets:   ██▍                                                                             14847/500000 [00:00<00:16, 29374.57it/s][A
2025-02-24T16:12:46.7719500Z 
2025-02-24T16:12:46.7719760Z Packets:   ██▊                                                                             17878/500000 [00:00<00:16, 29676.45it/s][A
2025-02-24T16:12:46.7719880Z 
2025-02-24T16:12:46.7720130Z Packets:   ███▎                                                                            20905/500000 [00:00<00:16, 29472.57it/s][A
2025-02-24T16:12:46.7720140Z 
2025-02-24T16:12:46.7720360Z Packets:   ███▉                                                                            24319/500000 [00:00<00:15, 30907.87it/s][A
2025-02-24T16:12:46.7720370Z 
2025-02-24T16:12:46.7720590Z Packets:   ████▍                                                                           27613/500000 [00:00<00:14, 31528.81it/s][A
2025-02-24T16:12:46.7720600Z 
2025-02-24T16:12:46.7720830Z Packets:   ████▉                                                                           30932/500000 [00:01<00:14, 32032.64it/s][A
2025-02-24T16:12:46.7720850Z 
2025-02-24T16:12:46.7721130Z Packets:   █████▍                                                                          34209/500000 [00:01<00:14, 32255.24it/s][A
2025-02-24T16:12:46.7721140Z 
2025-02-24T16:12:46.7721370Z Packets:   ██████                                                                          37566/500000 [00:01<00:14, 32651.35it/s][A
2025-02-24T16:12:46.7721380Z 
2025-02-24T16:12:46.7721620Z Packets:   ██████▌                                                                         40842/500000 [00:01<00:14, 31641.01it/s][A
2025-02-24T16:12:46.7721630Z 
2025-02-24T16:12:46.7721870Z Packets:   ███████                                                                         44301/500000 [00:01<00:14, 32505.76it/s][A
2025-02-24T16:12:46.7721880Z 
2025-02-24T16:12:46.7722130Z Packets:   ███████▋                                                                        47893/500000 [00:01<00:13, 33515.46it/s][A
2025-02-24T16:12:46.7722150Z 
2025-02-24T16:12:46.7722370Z Packets:   ████████▏                                                                       51471/500000 [00:01<00:13, 33004.55it/s][A
2025-02-24T16:12:46.7722400Z 
2025-02-24T16:12:46.7722620Z Packets:   ████████▊                                                                       55293/500000 [00:01<00:12, 34520.13it/s][A
2025-02-24T16:12:46.7722630Z 
2025-02-24T16:12:46.7722840Z Packets:   █████████▍                                                                      58758/500000 [00:01<00:13, 33330.74it/s][A
2025-02-24T16:12:46.7722840Z 
2025-02-24T16:12:46.7723030Z Packets:   █████████▉                                                                      62107/500000 [00:02<00:22, 19611.98it/s][A
2025-02-24T16:12:46.7723040Z 
2025-02-24T16:12:46.7723280Z Packets:   ██████████▎                                                                     64743/500000 [00:02<00:25, 17311.31it/s][A
2025-02-24T16:12:46.7723290Z 
2025-02-24T16:12:46.7723540Z Packets:   ██████████▋                                                                     66969/500000 [00:02<00:25, 17084.07it/s][A
2025-02-24T16:12:46.7723550Z 
2025-02-24T16:12:46.7723900Z Packets:   ███████████▏                                                                    69651/500000 [00:02<00:22, 19031.63it/s][A
2025-02-24T16:12:46.7723910Z 
2025-02-24T16:12:46.7724140Z Packets:   ███████████▌                                                                    71890/500000 [00:02<00:23, 18072.55it/s][A
2025-02-24T16:12:46.7724150Z 
2025-02-24T16:12:46.7724380Z Packets:   ███████████▊                                                                    73929/500000 [00:02<00:23, 17937.36it/s][A
2025-02-24T16:12:46.7724390Z 
2025-02-24T16:12:46.7724670Z Packets:   ████████████▏                                                                   75882/500000 [00:03<00:24, 17295.93it/s][A
2025-02-24T16:12:46.7724680Z 
2025-02-24T16:12:46.7724920Z Packets:   ████████████▍                                                                   77719/500000 [00:03<00:24, 17317.36it/s][A
2025-02-24T16:12:46.7725120Z 
2025-02-24T16:12:46.7725420Z Packets:   ████████████▉                                                                   80563/500000 [00:03<00:20, 20138.99it/s][A
2025-02-24T16:12:46.7725680Z 
2025-02-24T16:12:46.7725920Z Packets:   █████████████▎                                                                  82880/500000 [00:03<00:19, 20945.42it/s][A
2025-02-24T16:12:46.7725940Z 
2025-02-24T16:12:46.7726190Z Packets:   █████████████▋                                                                  85399/500000 [00:03<00:18, 22091.92it/s][A
2025-02-24T16:12:46.7726200Z 
2025-02-24T16:12:46.7726460Z Packets:   ██████████████                                                                  87676/500000 [00:03<00:21, 19306.72it/s][A
2025-02-24T16:12:46.7726470Z 
2025-02-24T16:12:46.7726710Z Packets:   ██████████████▍                                                                 89984/500000 [00:03<00:20, 20282.99it/s][A
2025-02-24T16:12:46.7726730Z 
2025-02-24T16:12:46.7727000Z Packets:   ██████████████▊                                                                 92554/500000 [00:03<00:18, 21740.33it/s][A
2025-02-24T16:12:46.7727010Z 
2025-02-24T16:12:46.7727250Z Packets:   ███████████████▏                                                                95145/500000 [00:03<00:17, 22899.83it/s][A
2025-02-24T16:12:46.7727260Z 
2025-02-24T16:12:46.7727500Z Packets:   ███████████████▌                                                                97499/500000 [00:04<00:18, 22129.89it/s][A
2025-02-24T16:12:46.7727510Z 
2025-02-24T16:12:46.7727730Z Packets:   ███████████████▉                                                                99761/500000 [00:04<00:18, 21807.73it/s][A
2025-02-24T16:12:46.7727740Z 
2025-02-24T16:12:46.7727980Z Packets:   ████████████████▎                                                               101975/500000 [00:04<00:18, 20964.57it/s][A
2025-02-24T16:12:46.7727990Z 
2025-02-24T16:12:46.7728230Z Packets:   ████████████████▋                                                               104683/500000 [00:04<00:17, 22665.08it/s][A
2025-02-24T16:12:46.7728240Z 
2025-02-24T16:12:46.7728480Z Packets:   █████████████████▍                                                              109060/500000 [00:04<00:13, 28664.00it/s][A
2025-02-24T16:12:46.7728500Z 
2025-02-24T16:12:46.7728750Z Packets:   █████████████████▉                                                              111982/500000 [00:04<00:13, 28066.59it/s][A
2025-02-24T16:12:46.7728750Z 
2025-02-24T16:12:46.7728990Z Packets:   ██████████████████▍                                                             114896/500000 [00:04<00:13, 28372.29it/s][A
2025-02-24T16:12:46.7729000Z 
2025-02-24T16:12:46.7729240Z Packets:   ███████████████████                                                             119180/500000 [00:04<00:11, 32537.81it/s][A
2025-02-24T16:12:46.7729250Z 
2025-02-24T16:12:46.7729510Z Packets:   ███████████████████▋                                                            122738/500000 [00:04<00:11, 33427.77it/s][A
2025-02-24T16:12:46.7729630Z 
2025-02-24T16:12:46.7729860Z Packets:   ████████████████████▍                                                           127544/500000 [00:04<00:09, 37745.25it/s][A
2025-02-24T16:12:46.7729870Z 
2025-02-24T16:12:46.7763570Z Packets:   █████████████████████▏                                                          132255/500000 [00:05<00:09, 40520.41it/s][A
2025-02-24T16:12:46.7763640Z 
2025-02-24T16:12:46.7763960Z Packets:   █████████████████████▊                                                          136328/500000 [00:05<00:09, 37009.62it/s][A
2025-02-24T16:12:46.7763970Z 
2025-02-24T16:12:46.7764220Z Packets:   ██████████████████████▍                                                         140102/500000 [00:05<00:09, 37200.56it/s][A
2025-02-24T16:12:46.7764230Z 
2025-02-24T16:12:46.7764480Z Packets:   ███████████████████████                                                         143875/500000 [00:05<00:09, 36855.87it/s][A
2025-02-24T16:12:46.7764520Z 
2025-02-24T16:12:46.7764780Z Packets:   ███████████████████████▋                                                        148214/500000 [00:05<00:09, 38729.03it/s][A
2025-02-24T16:12:46.7765110Z 
2025-02-24T16:12:46.7765350Z Packets:   ████████████████████████▍                                                       152753/500000 [00:05<00:08, 40663.79it/s][A
2025-02-24T16:12:46.7765360Z 
2025-02-24T16:12:46.7765620Z Packets:   █████████████████████████▏                                                      157136/500000 [00:05<00:08, 41590.84it/s][A
2025-02-24T16:12:46.7765630Z 
2025-02-24T16:12:46.7765870Z Packets:   █████████████████████████▉                                                      161956/500000 [00:05<00:07, 43536.25it/s][A
2025-02-24T16:12:46.7765880Z 
2025-02-24T16:12:46.7766170Z Packets:   ██████████████████████████▋                                                     166891/500000 [00:05<00:07, 45260.48it/s][A
2025-02-24T16:12:46.7766190Z 
2025-02-24T16:12:46.7766450Z Packets:   ███████████████████████████▍                                                    171433/500000 [00:06<00:08, 37645.67it/s][A
2025-02-24T16:12:46.7766470Z 
2025-02-24T16:12:46.7766740Z Packets:   ████████████████████████████                                                    175422/500000 [00:06<00:09, 33239.37it/s][A
2025-02-24T16:12:46.7766750Z 
2025-02-24T16:12:46.7767010Z Packets:   ████████████████████████████▋                                                   179247/500000 [00:06<00:09, 34466.02it/s][A
2025-02-24T16:12:46.7767020Z 
2025-02-24T16:12:46.7767300Z Packets:   █████████████████████████████▎                                                  182881/500000 [00:06<00:09, 34513.51it/s][A
2025-02-24T16:12:46.7767320Z 
2025-02-24T16:12:46.7767580Z Packets:   █████████████████████████████▉                                                  187255/500000 [00:06<00:08, 36977.55it/s][A
2025-02-24T16:12:46.7767600Z 
2025-02-24T16:12:46.7767860Z Packets:   ██████████████████████████████▋                                                 191662/500000 [00:06<00:07, 38937.67it/s][A
2025-02-24T16:12:46.7767880Z 
2025-02-24T16:12:46.7768130Z Packets:   ███████████████████████████████▍                                                196378/500000 [00:06<00:07, 41266.30it/s][A
2025-02-24T16:12:46.7768140Z 
2025-02-24T16:12:46.7779390Z Packets:   ████████████████████████████████▏                                               201099/500000 [00:06<00:06, 42977.04it/s][A
2025-02-24T16:12:46.7779440Z 
2025-02-24T16:12:46.7779700Z Packets:   ████████████████████████████████▊                                               205464/500000 [00:06<00:07, 38593.95it/s][A
2025-02-24T16:12:46.7779710Z 
2025-02-24T16:12:46.7779960Z Packets:   █████████████████████████████████▌                                              209450/500000 [00:07<00:08, 35184.21it/s][A
2025-02-24T16:12:46.7779970Z 
2025-02-24T16:12:46.7780220Z Packets:   ██████████████████████████████████                                              213120/500000 [00:07<00:08, 35572.84it/s][A
2025-02-24T16:12:46.7780500Z 
2025-02-24T16:12:46.7780780Z Packets:   ██████████████████████████████████▋                                             216775/500000 [00:07<00:08, 32628.38it/s][A
2025-02-24T16:12:46.7780920Z 
2025-02-24T16:12:46.7781180Z Packets:   ███████████████████████████████████▎                                            220643/500000 [00:07<00:08, 34202.29it/s][A
2025-02-24T16:12:46.7781190Z 
2025-02-24T16:12:46.7781440Z Packets:   ███████████████████████████████████▉                                            224549/500000 [00:07<00:07, 35518.35it/s][A
2025-02-24T16:12:46.7781460Z 
2025-02-24T16:12:46.7781730Z Packets:   ████████████████████████████████████▌                                           228265/500000 [00:07<00:07, 35972.23it/s][A
2025-02-24T16:12:46.7781740Z 
2025-02-24T16:12:46.7782000Z Packets:   █████████████████████████████████████                                           231922/500000 [00:07<00:08, 32595.87it/s][A
2025-02-24T16:12:46.7782020Z 
2025-02-24T16:12:46.7782260Z Packets:   █████████████████████████████████████▋                                          235276/500000 [00:07<00:09, 28118.35it/s][A
2025-02-24T16:12:46.7782290Z 
2025-02-24T16:12:46.7782560Z Packets:   ██████████████████████████████████████                                          238243/500000 [00:08<00:09, 27645.77it/s][A
2025-02-24T16:12:46.7782570Z 
2025-02-24T16:12:46.7782850Z Packets:   ██████████████████████████████████████▋                                         241440/500000 [00:08<00:08, 28743.12it/s][A
2025-02-24T16:12:46.7782870Z 
2025-02-24T16:12:46.7783130Z Packets:   ███████████████████████████████████████▏                                        245028/500000 [00:08<00:08, 30648.21it/s][A
2025-02-24T16:12:46.7783140Z 
2025-02-24T16:12:46.7783400Z Packets:   ███████████████████████████████████████▋                                        248181/500000 [00:08<00:08, 30336.18it/s][A
2025-02-24T16:12:46.7783520Z 
2025-02-24T16:12:46.7783790Z Packets:   ████████████████████████████████████████▎                                       251640/500000 [00:08<00:07, 31508.14it/s][A
2025-02-24T16:12:46.7783810Z 
2025-02-24T16:12:46.7784050Z Packets:   ████████████████████████████████████████▉                                       255530/500000 [00:08<00:07, 33613.65it/s][A
2025-02-24T16:12:46.7784050Z 
2025-02-24T16:12:46.7784280Z Packets:   █████████████████████████████████████████▌                                      259449/500000 [00:08<00:06, 35226.79it/s][A
2025-02-24T16:12:46.7784290Z 
2025-02-24T16:12:46.7784560Z Packets:   ██████████████████████████████████████████                                      263021/500000 [00:08<00:06, 34750.15it/s][A
2025-02-24T16:12:46.7784570Z 
2025-02-24T16:12:46.7784920Z Packets:   ██████████████████████████████████████████▋                                     266548/500000 [00:08<00:06, 34841.83it/s][A
2025-02-24T16:12:46.7784940Z 
2025-02-24T16:12:46.7785330Z Packets:   ███████████████████████████████████████████▏                                    270052/500000 [00:08<00:06, 34698.86it/s][A
2025-02-24T16:12:46.7785470Z 
2025-02-24T16:12:46.7785830Z Packets:   ███████████████████████████████████████████▊                                    273536/500000 [00:09<00:06, 33117.51it/s][A
2025-02-24T16:12:46.7785860Z 
2025-02-24T16:12:46.7786240Z Packets:   ████████████████████████████████████████████▎                                   276907/500000 [00:09<00:06, 33286.93it/s][A
2025-02-24T16:12:46.7786250Z 
2025-02-24T16:12:46.7786620Z Packets:   ████████████████████████████████████████████▊                                   280374/500000 [00:09<00:06, 33685.33it/s][A
2025-02-24T16:12:46.7786630Z 
2025-02-24T16:12:46.7786910Z Packets:   █████████████████████████████████████████████▍                                  284043/500000 [00:09<00:06, 34564.80it/s][A
2025-02-24T16:12:46.7786960Z 
2025-02-24T16:12:46.7787230Z Packets:   ██████████████████████████████████████████████                                  287511/500000 [00:09<00:06, 32900.49it/s][A
2025-02-24T16:12:46.7787250Z 
2025-02-24T16:12:46.7787530Z Packets:   ██████████████████████████████████████████████▌                                 290824/500000 [00:09<00:06, 31627.89it/s][A
2025-02-24T16:12:46.7787550Z 
2025-02-24T16:12:46.7787850Z Packets:   ███████████████████████████████████████████████▏                                294554/500000 [00:09<00:06, 33225.53it/s][A
2025-02-24T16:12:46.7787860Z 
2025-02-24T16:12:46.7788160Z Packets:   ███████████████████████████████████████████████▋                                297903/500000 [00:09<00:06, 32969.71it/s][A
2025-02-24T16:12:46.7788170Z 
2025-02-24T16:12:46.7788470Z Packets:   ████████████████████████████████████████████████▎                               302164/500000 [00:09<00:05, 35749.83it/s][A
2025-02-24T16:12:46.7788480Z 
2025-02-24T16:12:46.7788760Z Packets:   ████████████████████████████████████████████████▉                               305763/500000 [00:10<00:05, 35245.85it/s][A
2025-02-24T16:12:46.7788980Z 
2025-02-24T16:12:46.7789300Z Packets:   █████████████████████████████████████████████████▍                              309305/500000 [00:10<00:05, 33776.85it/s][A
2025-02-24T16:12:46.7789570Z 
2025-02-24T16:12:46.7789910Z Packets:   ██████████████████████████████████████████████████▏                             313936/500000 [00:10<00:04, 37343.41it/s][A
2025-02-24T16:12:46.7789920Z 
2025-02-24T16:12:46.7790250Z Packets:   ██████████████████████████████████████████████████▊                             317705/500000 [00:10<00:04, 36838.56it/s][A
2025-02-24T16:12:46.7790260Z 
2025-02-24T16:12:46.7790640Z Packets:   ███████████████████████████████████████████████████▍                            321414/500000 [00:10<00:05, 35312.07it/s][A
2025-02-24T16:12:46.7790650Z 
2025-02-24T16:12:46.7790980Z Packets:   ███████████████████████████████████████████████████▉                            324972/500000 [00:10<00:05, 31896.56it/s][A
2025-02-24T16:12:46.7791010Z 
2025-02-24T16:12:46.7791280Z Packets:   ████████████████████████████████████████████████████▌                           328233/500000 [00:10<00:05, 31842.91it/s][A
2025-02-24T16:12:46.7791300Z 
2025-02-24T16:12:46.7791620Z Packets:   █████████████████████████████████████████████████████                           331467/500000 [00:10<00:05, 29601.36it/s][A
2025-02-24T16:12:46.7791620Z 
2025-02-24T16:12:46.7791920Z Packets:   █████████████████████████████████████████████████████▌                          334481/500000 [00:10<00:05, 29543.68it/s][A
2025-02-24T16:12:46.7791930Z 
2025-02-24T16:12:46.7792170Z Packets:   ██████████████████████████████████████████████████████▏                         338840/500000 [00:11<00:04, 33397.11it/s][A
2025-02-24T16:12:46.7792290Z 
2025-02-24T16:12:46.7792570Z Packets:   ██████████████████████████████████████████████████████▊                         342242/500000 [00:11<00:04, 32407.80it/s][A
2025-02-24T16:12:46.7792590Z 
2025-02-24T16:12:46.7792930Z Packets:   ███████████████████████████████████████████████████████▍                        346826/500000 [00:11<00:04, 36162.24it/s][A
2025-02-24T16:12:46.7792950Z 
2025-02-24T16:12:46.7793220Z Packets:   ████████████████████████████████████████████████████████                        350502/500000 [00:11<00:04, 31748.67it/s][A
2025-02-24T16:12:46.7793250Z 
2025-02-24T16:12:46.7793500Z Packets:   ████████████████████████████████████████████████████████▌                       353808/500000 [00:11<00:05, 28361.18it/s][A
2025-02-24T16:12:46.7793510Z 
2025-02-24T16:12:46.7793810Z Packets:   █████████████████████████████████████████████████████████▏                      357268/500000 [00:11<00:04, 29914.06it/s][A
2025-02-24T16:12:46.7793820Z 
2025-02-24T16:12:46.7794130Z Packets:   █████████████████████████████████████████████████████████▊                      360997/500000 [00:11<00:04, 31846.15it/s][A
2025-02-24T16:12:46.7794140Z 
2025-02-24T16:12:46.7794450Z Packets:   ██████████████████████████████████████████████████████████▎                     364653/500000 [00:11<00:04, 33130.76it/s][A
2025-02-24T16:12:46.7794560Z 
2025-02-24T16:12:46.7794860Z Packets:   ██████████████████████████████████████████████████████████▉                     368062/500000 [00:11<00:04, 32342.63it/s][A
2025-02-24T16:12:46.7794950Z 
2025-02-24T16:12:46.7795220Z Packets:   ███████████████████████████████████████████████████████████▍                    371423/500000 [00:12<00:03, 32690.63it/s][A
2025-02-24T16:12:46.7795220Z 
2025-02-24T16:12:46.7795510Z Packets:   ████████████████████████████████████████████████████████████                    375452/500000 [00:12<00:03, 34858.28it/s][A
2025-02-24T16:12:46.7795520Z 
2025-02-24T16:12:46.7795820Z Packets:   ████████████████████████████████████████████████████████████▊                   380127/500000 [00:12<00:03, 38300.67it/s][A
2025-02-24T16:12:46.7795830Z 
2025-02-24T16:12:46.7796120Z Packets:   █████████████████████████████████████████████████████████████▍                  384002/500000 [00:12<00:03, 35302.06it/s][A
2025-02-24T16:12:46.7796150Z 
2025-02-24T16:12:46.7796450Z Packets:   ██████████████████████████████████████████████████████████████                  387607/500000 [00:12<00:03, 34461.08it/s][A
2025-02-24T16:12:46.7796470Z 
2025-02-24T16:12:46.7796790Z Packets:   ██████████████████████████████████████████████████████████████▌                 391105/500000 [00:12<00:03, 32940.00it/s][A
2025-02-24T16:12:46.7796800Z 
2025-02-24T16:12:46.7797070Z Packets:   ███████████████████████████████████████████████████████████████                 394442/500000 [00:12<00:03, 31414.49it/s][A
2025-02-24T16:12:46.7797080Z 
2025-02-24T16:12:46.7797410Z Packets:   ███████████████████████████████████████████████████████████████▋                397989/500000 [00:12<00:03, 32500.42it/s][A
2025-02-24T16:12:46.7797420Z 
2025-02-24T16:12:46.7797750Z Packets:   ████████████████████████████████████████████████████████████████▏               401275/500000 [00:12<00:03, 28595.56it/s][A
2025-02-24T16:12:46.7797850Z 
2025-02-24T16:12:46.7798180Z Packets:   ████████████████████████████████████████████████████████████████▋               404232/500000 [00:13<00:03, 26015.39it/s][A
2025-02-24T16:12:46.7798280Z 
2025-02-24T16:12:46.7798550Z Packets:   █████████████████████████████████████████████████████████████████▏              407468/500000 [00:13<00:03, 27602.32it/s][A
2025-02-24T16:12:46.7798560Z 
2025-02-24T16:12:46.7798900Z Packets:   █████████████████████████████████████████████████████████████████▋              410325/500000 [00:13<00:03, 26941.17it/s][A
2025-02-24T16:12:46.7798910Z 
2025-02-24T16:12:46.7799200Z Packets:   ██████████████████████████████████████████████████████████████████              413084/500000 [00:13<00:03, 27025.58it/s][A
2025-02-24T16:12:46.7799240Z 
2025-02-24T16:12:46.7799520Z Packets:   ██████████████████████████████████████████████████████████████████▌             415925/500000 [00:13<00:03, 27392.57it/s][A
2025-02-24T16:12:46.7799540Z 
2025-02-24T16:12:46.7799850Z Packets:   ██████████████████████████████████████████████████████████████████▉             418700/500000 [00:13<00:02, 27308.17it/s][A
2025-02-24T16:12:46.7799870Z 
2025-02-24T16:12:46.7800230Z Packets:   ███████████████████████████████████████████████████████████████████▍            421456/500000 [00:13<00:03, 25086.70it/s][A
2025-02-24T16:12:46.7800240Z 
2025-02-24T16:12:46.7800550Z Packets:   ███████████████████████████████████████████████████████████████████▊            424012/500000 [00:13<00:03, 21955.52it/s][A
2025-02-24T16:12:46.7800560Z 
2025-02-24T16:12:46.7800860Z Packets:   ████████████████████████████████████████████████████████████████████▏           426481/500000 [00:14<00:03, 22630.52it/s][A
2025-02-24T16:12:46.7800870Z 
2025-02-24T16:12:46.7801160Z Packets:   ████████████████████████████████████████████████████████████████████▋           429548/500000 [00:14<00:02, 24762.18it/s][A
2025-02-24T16:12:46.7801170Z 
2025-02-24T16:12:46.7801460Z Packets:   █████████████████████████████████████████████████████████████████████▏          432553/500000 [00:14<00:02, 26213.00it/s][A
2025-02-24T16:12:46.7801490Z 
2025-02-24T16:12:46.7801800Z Packets:   █████████████████████████████████████████████████████████████████████▋          435574/500000 [00:14<00:02, 27339.19it/s][A
2025-02-24T16:12:46.7801820Z 
2025-02-24T16:12:46.7802110Z Packets:   ██████████████████████████████████████████████████████████████████████▎         439680/500000 [00:14<00:01, 31277.53it/s][A
2025-02-24T16:12:46.7802120Z 
2025-02-24T16:12:46.7802490Z Packets:   ██████████████████████████████████████████████████████████████████████▉         443252/500000 [00:14<00:01, 32568.98it/s][A
2025-02-24T16:12:46.7802490Z 
2025-02-24T16:12:46.7802810Z Packets:   ███████████████████████████████████████████████████████████████████████▍        446553/500000 [00:14<00:01, 32583.74it/s][A
2025-02-24T16:12:46.7802820Z 
2025-02-24T16:12:46.7803100Z Packets:   ████████████████████████████████████████████████████████████████████████        450210/500000 [00:14<00:01, 33758.03it/s][A
2025-02-24T16:12:46.7803240Z 
2025-02-24T16:12:46.7803640Z Packets:   ████████████████████████████████████████████████████████████████████████▌       453610/500000 [00:14<00:01, 28526.78it/s][A
2025-02-24T16:12:46.7803740Z 
2025-02-24T16:12:46.7810700Z Packets:   █████████████████████████████████████████████████████████████████████████       456617/500000 [00:15<00:01, 28460.34it/s][A
2025-02-24T16:12:46.7810720Z 
2025-02-24T16:12:46.7811070Z Packets:   █████████████████████████████████████████████████████████████████████████▋      460374/500000 [00:15<00:01, 30918.03it/s][A
2025-02-24T16:12:46.7811090Z 
2025-02-24T16:12:46.7811360Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     464842/500000 [00:15<00:01, 34745.37it/s][A
2025-02-24T16:12:46.7811380Z 
2025-02-24T16:12:46.7811650Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    469550/500000 [00:15<00:00, 38252.23it/s][A
2025-02-24T16:12:46.7811680Z 
2025-02-24T16:12:46.7811970Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    473466/500000 [00:15<00:00, 33482.39it/s][A
2025-02-24T16:12:46.7811990Z 
2025-02-24T16:12:46.7812310Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   476980/500000 [00:15<00:00, 28654.06it/s][A
2025-02-24T16:12:46.7812320Z 
2025-02-24T16:12:46.7812630Z Packets:   ████████████████████████████████████████████████████████████████████████████▊   480062/500000 [00:15<00:00, 25852.95it/s][A
2025-02-24T16:12:46.7812640Z 
2025-02-24T16:12:46.7812920Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  482823/500000 [00:15<00:00, 25957.46it/s][A
2025-02-24T16:12:46.7812930Z 
2025-02-24T16:12:46.7813220Z Packets:   █████████████████████████████████████████████████████████████████████████████▋  485910/500000 [00:15<00:00, 27150.21it/s][A
2025-02-24T16:12:46.7813840Z 
2025-02-24T16:12:46.7814160Z Packets:   ██████████████████████████████████████████████████████████████████████████████▍ 489949/500000 [00:16<00:00, 30615.84it/s][A
2025-02-24T16:12:46.7814330Z 
2025-02-24T16:12:46.7814620Z Packets:   ███████████████████████████████████████████████████████████████████████████████▏494735/500000 [00:16<00:00, 35303.04it/s][A
2025-02-24T16:12:46.7814630Z 
2025-02-24T16:12:46.7814930Z Packets:   ███████████████████████████████████████████████████████████████████████████████▋498417/500000 [00:16<00:00, 35726.81it/s][A
2025-02-24T16:12:46.7815070Z Iterations:                                                                                17/? [07:08<00:00, 13.62s/it]
2025-02-24T16:12:46.7815070Z 
2025-02-24T16:12:46.7815330Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:22<00:00, 35726.81it/s][A
2025-02-24T16:12:46.7815480Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.7815650Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T16:12:46.7815950Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T16:12:46.7816290Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T16:12:46.7816650Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T16:12:46.7817070Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.7817260Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:12:46.7817350Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.7817420Z 	Starting iteration 1 of 5
2025-02-24T16:12:46.7817510Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.7817590Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:12:46.7817670Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:12:46.7817750Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7817760Z 
2025-02-24T16:12:46.7817860Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:12:46.7817920Z 	Plasma stratification:
2025-02-24T16:12:46.7818010Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:12:46.7818100Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:12:46.7818170Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:12:46.7818250Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:12:46.7818320Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:12:46.7818400Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:12:46.7818400Z 
2025-02-24T16:12:46.7818480Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:12:46.7819430Z 	Current t_inner = 9974.969 K
2025-02-24T16:12:46.7819550Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:12:46.7819550Z 
2025-02-24T16:12:46.7819840Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.7819910Z 	Starting iteration 2 of 5
2025-02-24T16:12:46.7819990Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.7820070Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:12:46.7820140Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:12:46.7820220Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7820220Z 
2025-02-24T16:12:46.7820300Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:12:46.7820370Z 	Plasma stratification:
2025-02-24T16:12:46.7820450Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:12:46.7820540Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:12:46.7820610Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:12:46.7820680Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:12:46.7820760Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:12:46.7820830Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:12:46.7820840Z 
2025-02-24T16:12:46.7820920Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:12:46.7820990Z 	Current t_inner = 10736.790 K
2025-02-24T16:12:46.7821080Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:12:46.7821090Z 
2025-02-24T16:12:46.7821340Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.7821410Z 	Starting iteration 3 of 5
2025-02-24T16:12:46.7821510Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.7821590Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:12:46.7821670Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:12:46.7821870Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7821870Z 
2025-02-24T16:12:46.7822170Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T16:12:46.7822380Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:12:46.7822450Z 	Plasma stratification:
2025-02-24T16:12:46.7822530Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:12:46.7822630Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:12:46.7822700Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:12:46.7822770Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:12:46.7822840Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:12:46.7822920Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:12:46.7822920Z 
2025-02-24T16:12:46.7823300Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:12:46.7823390Z 	Current t_inner = 10718.574 K
2025-02-24T16:12:46.7823480Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:12:46.7823490Z 
2025-02-24T16:12:46.7823570Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.7823640Z 	Starting iteration 4 of 5
2025-02-24T16:12:46.7823730Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.7823810Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:12:46.7823880Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:12:46.7823960Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7823960Z 
2025-02-24T16:12:46.7824160Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T16:12:46.7824270Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:12:46.7824360Z 	Plasma stratification:
2025-02-24T16:12:46.7824470Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:12:46.7824580Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:12:46.7824670Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:12:46.7824760Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:12:46.7824860Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:12:46.7824940Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:12:46.7825070Z 
2025-02-24T16:12:46.7825170Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:12:46.7825240Z 	Current t_inner = 10696.150 K
2025-02-24T16:12:46.7825330Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:12:46.7825400Z 
2025-02-24T16:12:46.7825500Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:12:46.7825590Z 	Simulation finished in 4 iterations 
2025-02-24T16:12:46.7825660Z 	Simulation took 17.38 s
2025-02-24T16:12:46.7825660Z 
2025-02-24T16:12:46.7825740Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.7825810Z 	Starting iteration 5 of 5
2025-02-24T16:12:46.7825980Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.7826070Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:12:46.7826150Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:12:46.7826250Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.7826450Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T16:12:46.7826470Z 
2025-02-24T16:12:46.7826650Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11a0ad400>
2025-02-24T16:12:46.7826830Z simulation = <tardis.simulation.base.Simulation object at 0x135382f90>
2025-02-24T16:12:46.7826840Z 
2025-02-24T16:12:46.7826940Z     def test_spectrum(self, simulation):
2025-02-24T16:12:46.7827120Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:12:46.7827240Z         expected = self.get_expected_data(key)
2025-02-24T16:12:46.7827300Z     
2025-02-24T16:12:46.7827410Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7827480Z     
2025-02-24T16:12:46.7827590Z >       assert_quantity_allclose(
2025-02-24T16:12:46.7827760Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T16:12:46.7827840Z             luminosity,
2025-02-24T16:12:46.7827900Z         )
2025-02-24T16:12:46.7827910Z 
2025-02-24T16:12:46.7828000Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T16:12:46.7828130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7828460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7828560Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7828700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7828710Z 
2025-02-24T16:12:46.7829110Z args = (<function assert_allclose.<locals>.compare at 0x1765142c0>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, .....), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T16:12:46.7829230Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7829480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7829490Z 
2025-02-24T16:12:46.7829570Z     @wraps(func)
2025-02-24T16:12:46.7829660Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7829750Z         with self._recreate_cm():
2025-02-24T16:12:46.7829850Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7829940Z E           AssertionError: 
2025-02-24T16:12:46.7830050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7830140Z E           
2025-02-24T16:12:46.7830250Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:12:46.7830340Z E           Max absolute difference: 1.38672909e+39
2025-02-24T16:12:46.7830430Z E           Max relative difference: 5.25284451
2025-02-24T16:12:46.7830570Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7830660Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7830790Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7830890Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7830890Z 
2025-02-24T16:12:46.7831080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7831370Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T16:12:46.7831480Z 
2025-02-24T16:12:46.7831670Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x11a0ad670>
2025-02-24T16:12:46.7831850Z simulation = <tardis.simulation.base.Simulation object at 0x135382f90>
2025-02-24T16:12:46.7831860Z 
2025-02-24T16:12:46.7831970Z     def test_virtual_spectrum(self, simulation):
2025-02-24T16:12:46.7832150Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T16:12:46.7832260Z         expected = self.get_expected_data(key)
2025-02-24T16:12:46.7832320Z     
2025-02-24T16:12:46.7832430Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7832520Z     
2025-02-24T16:12:46.7832610Z >       assert_quantity_allclose(
2025-02-24T16:12:46.7832790Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T16:12:46.7832890Z             luminosity,
2025-02-24T16:12:46.7832970Z         )
2025-02-24T16:12:46.7832970Z 
2025-02-24T16:12:46.7833080Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T16:12:46.7833200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7833560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7833670Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7833800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7833820Z 
2025-02-24T16:12:46.7834280Z args = (<function assert_allclose.<locals>.compare at 0x317fac900>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, .....), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T16:12:46.7834390Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7834670Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7834690Z 
2025-02-24T16:12:46.7834770Z     @wraps(func)
2025-02-24T16:12:46.7834860Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7834950Z         with self._recreate_cm():
2025-02-24T16:12:46.7835040Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7835140Z E           AssertionError: 
2025-02-24T16:12:46.7835260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7835350Z E           
2025-02-24T16:12:46.7835460Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:12:46.7835580Z E           Max absolute difference: 5.26760031e+38
2025-02-24T16:12:46.7835690Z E           Max relative difference: 35562.41947434
2025-02-24T16:12:46.7835850Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7835960Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7836120Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7836240Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7836250Z 
2025-02-24T16:12:46.7836460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7836750Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T16:12:46.7836760Z 
2025-02-24T16:12:46.7837070Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0ae030>
2025-02-24T16:12:46.7837270Z simulation = <tardis.simulation.base.Simulation object at 0x1291b7560>
2025-02-24T16:12:46.7837470Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T16:12:46.7837480Z 
2025-02-24T16:12:46.7837610Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:12:46.7837710Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7837800Z         j_blue_estimator = (
2025-02-24T16:12:46.7838000Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:12:46.7838220Z         )
2025-02-24T16:12:46.7838380Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:12:46.7838720Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:12:46.7838720Z 
2025-02-24T16:12:46.7838870Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:12:46.7838980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7838990Z 
2025-02-24T16:12:46.7839250Z args = (<function assert_allclose.<locals>.compare at 0x3133f5940>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7839340Z        [0., 0., 0.,.....,
2025-02-24T16:12:46.7839420Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7839510Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7839600Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:12:46.7839830Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7839850Z 
2025-02-24T16:12:46.7839910Z     @wraps(func)
2025-02-24T16:12:46.7839990Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7840080Z         with self._recreate_cm():
2025-02-24T16:12:46.7840180Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7840260Z E           AssertionError: 
2025-02-24T16:12:46.7840370Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7840440Z E           
2025-02-24T16:12:46.7840570Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:12:46.7840690Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:12:46.7840790Z E           Max relative difference: 7.72237896
2025-02-24T16:12:46.7840880Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7840960Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7841040Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7841140Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7841210Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7841280Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7841290Z 
2025-02-24T16:12:46.7841470Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7841650Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T16:12:46.7841650Z 
2025-02-24T16:12:46.7841940Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0ae690>
2025-02-24T16:12:46.7842120Z simulation = <tardis.simulation.base.Simulation object at 0x1291b7560>
2025-02-24T16:12:46.7842270Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T16:12:46.7842280Z 
2025-02-24T16:12:46.7842370Z     def test_spectrum(self, simulation, request):
2025-02-24T16:12:46.7842470Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7842680Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:12:46.7842830Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7842920Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7843020Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7843020Z 
2025-02-24T16:12:46.7843150Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:12:46.7843270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7843590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7843680Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7843800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7843810Z 
2025-02-24T16:12:46.7844220Z args = (<function assert_allclose.<locals>.compare at 0x11acb20c0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:12:46.7844450Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7844770Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7844770Z 
2025-02-24T16:12:46.7844830Z     @wraps(func)
2025-02-24T16:12:46.7844890Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7844970Z         with self._recreate_cm():
2025-02-24T16:12:46.7845070Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7845140Z E           AssertionError: 
2025-02-24T16:12:46.7845240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7845290Z E           
2025-02-24T16:12:46.7845400Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:12:46.7845510Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:12:46.7845600Z E           Max relative difference: 4.0036592
2025-02-24T16:12:46.7845770Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7845870Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7846030Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7846130Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7846140Z 
2025-02-24T16:12:46.7846340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7846560Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T16:12:46.7846570Z 
2025-02-24T16:12:46.7846860Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0aede0>
2025-02-24T16:12:46.7847050Z simulation = <tardis.simulation.base.Simulation object at 0x1291b7560>
2025-02-24T16:12:46.7847260Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T16:12:46.7847270Z 
2025-02-24T16:12:46.7847410Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:12:46.7847500Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7847690Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:12:46.7847840Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7847960Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7848080Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7848090Z 
2025-02-24T16:12:46.7848220Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:12:46.7848330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7848620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7848710Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7848810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7848820Z 
2025-02-24T16:12:46.7849230Z args = (<function assert_allclose.<locals>.compare at 0x31e3d6ac0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, .....), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T16:12:46.7849340Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T16:12:46.7849540Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7849550Z 
2025-02-24T16:12:46.7849620Z     @wraps(func)
2025-02-24T16:12:46.7849700Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7849820Z         with self._recreate_cm():
2025-02-24T16:12:46.7849900Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7849990Z E           AssertionError: 
2025-02-24T16:12:46.7850080Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7850240Z E           
2025-02-24T16:12:46.7850370Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.7850460Z E           Max absolute difference: 5.00661745e+37
2025-02-24T16:12:46.7850620Z E           Max relative difference: 17.51202125
2025-02-24T16:12:46.7850770Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:12:46.7850860Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T16:12:46.7851020Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:12:46.7851110Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T16:12:46.7851120Z 
2025-02-24T16:12:46.7851310Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7851540Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T16:12:46.7851550Z 
2025-02-24T16:12:46.7851820Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0ae840>
2025-02-24T16:12:46.7852020Z simulation = <tardis.simulation.base.Simulation object at 0x317b7dc40>
2025-02-24T16:12:46.7852210Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T16:12:46.7852220Z 
2025-02-24T16:12:46.7852330Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:12:46.7852420Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7852500Z         j_blue_estimator = (
2025-02-24T16:12:46.7852720Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:12:46.7852790Z         )
2025-02-24T16:12:46.7852950Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:12:46.7853060Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:12:46.7853060Z 
2025-02-24T16:12:46.7853200Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:12:46.7853330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7853340Z 
2025-02-24T16:12:46.7853560Z args = (<function assert_allclose.<locals>.compare at 0x1257f8fe0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7853670Z        [0., 0., 0.,.....,
2025-02-24T16:12:46.7853750Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7853830Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7853890Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:12:46.7854090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7854100Z 
2025-02-24T16:12:46.7854160Z     @wraps(func)
2025-02-24T16:12:46.7854250Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7854330Z         with self._recreate_cm():
2025-02-24T16:12:46.7854410Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7854510Z E           AssertionError: 
2025-02-24T16:12:46.7854620Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7854680Z E           
2025-02-24T16:12:46.7854790Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:12:46.7855240Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:12:46.7855380Z E           Max relative difference: 3.25828651
2025-02-24T16:12:46.7855490Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7855590Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7855680Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7855770Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7855870Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7855970Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7855970Z 
2025-02-24T16:12:46.7856160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7856380Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T16:12:46.7856480Z 
2025-02-24T16:12:46.7856780Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0aef90>
2025-02-24T16:12:46.7856950Z simulation = <tardis.simulation.base.Simulation object at 0x317b7dc40>
2025-02-24T16:12:46.7857180Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T16:12:46.7857190Z 
2025-02-24T16:12:46.7857290Z     def test_spectrum(self, simulation, request):
2025-02-24T16:12:46.7857390Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7857580Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:12:46.7857730Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7857830Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7857950Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7857960Z 
2025-02-24T16:12:46.7858090Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:12:46.7858220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7858530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7858610Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7858740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7858750Z 
2025-02-24T16:12:46.7859170Z args = (<function assert_allclose.<locals>.compare at 0x176517600>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:12:46.7859280Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7859520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7859530Z 
2025-02-24T16:12:46.7859590Z     @wraps(func)
2025-02-24T16:12:46.7859660Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7859740Z         with self._recreate_cm():
2025-02-24T16:12:46.7859810Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7859890Z E           AssertionError: 
2025-02-24T16:12:46.7860000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7860080Z E           
2025-02-24T16:12:46.7860170Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:12:46.7860260Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:12:46.7860350Z E           Max relative difference: 1.86186015
2025-02-24T16:12:46.7860510Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7860620Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7860760Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7860840Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7860840Z 
2025-02-24T16:12:46.7861030Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7861260Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T16:12:46.7861280Z 
2025-02-24T16:12:46.7861560Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0af5c0>
2025-02-24T16:12:46.7861750Z simulation = <tardis.simulation.base.Simulation object at 0x317b7dc40>
2025-02-24T16:12:46.7861940Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T16:12:46.7861950Z 
2025-02-24T16:12:46.7862090Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:12:46.7862190Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7862360Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:12:46.7862510Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7862610Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7862870Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7862880Z 
2025-02-24T16:12:46.7862990Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:12:46.7863240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7863550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7863630Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7863720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7863720Z 
2025-02-24T16:12:46.7864150Z args = (<function assert_allclose.<locals>.compare at 0x30dcf98a0>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, .....), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T16:12:46.7864250Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T16:12:46.7864480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7864500Z 
2025-02-24T16:12:46.7864560Z     @wraps(func)
2025-02-24T16:12:46.7864620Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7864700Z         with self._recreate_cm():
2025-02-24T16:12:46.7864790Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7864860Z E           AssertionError: 
2025-02-24T16:12:46.7864950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7865000Z E           
2025-02-24T16:12:46.7865110Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.7865200Z E           Max absolute difference: 2.90101642e+37
2025-02-24T16:12:46.7865320Z E           Max relative difference: 0.98973757
2025-02-24T16:12:46.7865470Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:12:46.7865530Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T16:12:46.7865750Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:12:46.7865860Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T16:12:46.7865870Z 
2025-02-24T16:12:46.7866080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7866240Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:12:46.7866250Z 
2025-02-24T16:12:46.7866250Z 
2025-02-24T16:12:46.7866700Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 121358.66it/s][A
2025-02-24T16:12:46.7866940Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T16:12:46.7866950Z 
2025-02-24T16:12:46.7867250Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0aeb10>
2025-02-24T16:12:46.7867430Z simulation = <tardis.simulation.base.Simulation object at 0x173bc21e0>
2025-02-24T16:12:46.7867650Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T16:12:46.7867660Z 
2025-02-24T16:12:46.7867770Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:12:46.7867880Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7867970Z         j_blue_estimator = (
2025-02-24T16:12:46.7868170Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:12:46.7868240Z         )
2025-02-24T16:12:46.7868370Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:12:46.7868490Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:12:46.7868500Z 
2025-02-24T16:12:46.7868620Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:12:46.7868740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7868750Z 
2025-02-24T16:12:46.7869000Z args = (<function assert_allclose.<locals>.compare at 0x16dab9440>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7869200Z        [0., 0., 0.,.....,
2025-02-24T16:12:46.7869280Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7869480Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7869540Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:12:46.7869770Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7869790Z 
2025-02-24T16:12:46.7869850Z     @wraps(func)
2025-02-24T16:12:46.7869940Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7870010Z         with self._recreate_cm():
2025-02-24T16:12:46.7870120Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7870190Z E           AssertionError: 
2025-02-24T16:12:46.7870300Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7870360Z E           
2025-02-24T16:12:46.7870450Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:12:46.7870560Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:12:46.7870650Z E           Max relative difference: 3.25828651
2025-02-24T16:12:46.7870760Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7870850Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7870930Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7871010Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7871080Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7871160Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7871160Z 
2025-02-24T16:12:46.7871330Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7871510Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T16:12:46.7871510Z 
2025-02-24T16:12:46.7871770Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0af1d0>
2025-02-24T16:12:46.7871930Z simulation = <tardis.simulation.base.Simulation object at 0x173bc21e0>
2025-02-24T16:12:46.7872080Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T16:12:46.7872080Z 
2025-02-24T16:12:46.7872170Z     def test_spectrum(self, simulation, request):
2025-02-24T16:12:46.7872270Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7872450Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:12:46.7872600Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7872710Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7872840Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7872840Z 
2025-02-24T16:12:46.7872980Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:12:46.7873110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7873410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7873510Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7873620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7873630Z 
2025-02-24T16:12:46.7874030Z args = (<function assert_allclose.<locals>.compare at 0x14ed56ca0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:12:46.7874140Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7874360Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7874360Z 
2025-02-24T16:12:46.7874420Z     @wraps(func)
2025-02-24T16:12:46.7874490Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7874580Z         with self._recreate_cm():
2025-02-24T16:12:46.7874660Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7874860Z E           AssertionError: 
2025-02-24T16:12:46.7874970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7875040Z E           
2025-02-24T16:12:46.7875290Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:12:46.7875380Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:12:46.7875470Z E           Max relative difference: 1.86186015
2025-02-24T16:12:46.7875620Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7875710Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7875870Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7875980Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7875980Z 
2025-02-24T16:12:46.7876190Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7876420Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T16:12:46.7876430Z 
2025-02-24T16:12:46.7876770Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0af7d0>
2025-02-24T16:12:46.7876960Z simulation = <tardis.simulation.base.Simulation object at 0x173bc21e0>
2025-02-24T16:12:46.7877150Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T16:12:46.7877160Z 
2025-02-24T16:12:46.7877310Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:12:46.7877430Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7877600Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:12:46.7877760Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7877850Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7877960Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7877970Z 
2025-02-24T16:12:46.7878090Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:12:46.7878200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7878520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7878600Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7878730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7878740Z 
2025-02-24T16:12:46.7879160Z args = (<function assert_allclose.<locals>.compare at 0x14ed55620>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, .....), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T16:12:46.7879260Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T16:12:46.7879490Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7879510Z 
2025-02-24T16:12:46.7879580Z     @wraps(func)
2025-02-24T16:12:46.7879650Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7879720Z         with self._recreate_cm():
2025-02-24T16:12:46.7879810Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7879900Z E           AssertionError: 
2025-02-24T16:12:46.7880000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7880050Z E           
2025-02-24T16:12:46.7880140Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.7880250Z E           Max absolute difference: 2.99183385e+37
2025-02-24T16:12:46.7880350Z E           Max relative difference: 0.98992197
2025-02-24T16:12:46.7880480Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:12:46.7880640Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T16:12:46.7880790Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:12:46.7880880Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T16:12:46.7880970Z 
2025-02-24T16:12:46.7881170Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7891140Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:12:46.7891350Z 
2025-02-24T16:12:46.7891350Z 
2025-02-24T16:12:46.7891730Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:18<00:00, 115494.26it/s][A
2025-02-24T16:12:46.7891970Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T16:12:46.7891980Z 
2025-02-24T16:12:46.7892280Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0ae9f0>
2025-02-24T16:12:46.7892480Z simulation = <tardis.simulation.base.Simulation object at 0x17ce3f290>
2025-02-24T16:12:46.7892680Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T16:12:46.7892690Z 
2025-02-24T16:12:46.7892830Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:12:46.7892960Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7893060Z         j_blue_estimator = (
2025-02-24T16:12:46.7893280Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:12:46.7893340Z         )
2025-02-24T16:12:46.7893460Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:12:46.7893570Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:12:46.7893580Z 
2025-02-24T16:12:46.7893700Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:12:46.7893810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7893830Z 
2025-02-24T16:12:46.7894040Z args = (<function assert_allclose.<locals>.compare at 0x31a5a9f80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7894110Z        [0., 0., 0.,.....,
2025-02-24T16:12:46.7894180Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7894260Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7894340Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:12:46.7894580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7894590Z 
2025-02-24T16:12:46.7894670Z     @wraps(func)
2025-02-24T16:12:46.7894740Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7894830Z         with self._recreate_cm():
2025-02-24T16:12:46.7894900Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7894980Z E           AssertionError: 
2025-02-24T16:12:46.7895070Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7895140Z E           
2025-02-24T16:12:46.7895240Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:12:46.7895390Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:12:46.7895480Z E           Max relative difference: 7.72237896
2025-02-24T16:12:46.7895570Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7895660Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7895740Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7895840Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7895920Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.7896010Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.7896010Z 
2025-02-24T16:12:46.7896200Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7896400Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T16:12:46.7896420Z 
2025-02-24T16:12:46.7896700Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0af110>
2025-02-24T16:12:46.7896890Z simulation = <tardis.simulation.base.Simulation object at 0x17ce3f290>
2025-02-24T16:12:46.7897060Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T16:12:46.7897260Z 
2025-02-24T16:12:46.7897380Z     def test_spectrum(self, simulation, request):
2025-02-24T16:12:46.7897480Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7897770Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:12:46.7897950Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7898050Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7898170Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7898180Z 
2025-02-24T16:12:46.7898290Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:12:46.7898430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7898730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7898830Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7898980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7898990Z 
2025-02-24T16:12:46.7899410Z args = (<function assert_allclose.<locals>.compare at 0x31a526fc0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:12:46.7899520Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.7899740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.7899760Z 
2025-02-24T16:12:46.7899840Z     @wraps(func)
2025-02-24T16:12:46.7899920Z     def inner(*args, **kwds):
2025-02-24T16:12:46.7899990Z         with self._recreate_cm():
2025-02-24T16:12:46.7900080Z >           return func(*args, **kwds)
2025-02-24T16:12:46.7900170Z E           AssertionError: 
2025-02-24T16:12:46.7900270Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.7900330Z E           
2025-02-24T16:12:46.7900410Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:12:46.7900510Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:12:46.7900600Z E           Max relative difference: 4.0036592
2025-02-24T16:12:46.7900770Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7900850Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7900990Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.7901080Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.7901080Z 
2025-02-24T16:12:46.7901260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.7901490Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T16:12:46.7901510Z 
2025-02-24T16:12:46.7901960Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x11a0af710>
2025-02-24T16:12:46.7902150Z simulation = <tardis.simulation.base.Simulation object at 0x17ce3f290>
2025-02-24T16:12:46.7902350Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T16:12:46.7902490Z 
2025-02-24T16:12:46.7902630Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:12:46.7902730Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.7902910Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:12:46.7903050Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:12:46.7903140Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:12:46.7903260Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:12:46.7903270Z 
2025-02-24T16:12:46.7903410Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:12:46.7903530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7903990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:12:46.7904090Z     np.testing.assert_allclose(
2025-02-24T16:12:46.7904280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.7904280Z 
2025-02-24T16:12:46.7904660Z args = (<function assert_allclose.<locals>.compare at 0x11c5d1ee0>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, .....), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T16:12:46.8091140Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T16:12:46.8091730Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8091900Z 
2025-02-24T16:12:46.8092010Z     @wraps(func)
2025-02-24T16:12:46.8092130Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8092240Z         with self._recreate_cm():
2025-02-24T16:12:46.8092380Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8092490Z E           AssertionError: 
2025-02-24T16:12:46.8092610Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8092830Z E           
2025-02-24T16:12:46.8092950Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.8093040Z E           Max absolute difference: 5.0153284e+37
2025-02-24T16:12:46.8093130Z E           Max relative difference: 4.90769503
2025-02-24T16:12:46.8093430Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:12:46.8093520Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T16:12:46.8093680Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:12:46.8093770Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T16:12:46.8093770Z 
2025-02-24T16:12:46.8093980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8094140Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T16:12:46.8094160Z 
2025-02-24T16:12:46.8094890Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:12:46.8095160Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30b88df70>
2025-02-24T16:12:46.8095450Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:12:46.8095460Z 
2025-02-24T16:12:46.8095540Z     def test_montecarlo_main_loop(
2025-02-24T16:12:46.8095610Z         montecarlo_main_loop_config,
2025-02-24T16:12:46.8095670Z         regression_data,
2025-02-24T16:12:46.8095880Z         atomic_dataset,
2025-02-24T16:12:46.8095940Z     ):
2025-02-24T16:12:46.8096040Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:12:46.8096330Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:12:46.8096430Z             montecarlo_main_loop_config,
2025-02-24T16:12:46.8096520Z             atom_data=atomic_dataset,
2025-02-24T16:12:46.8096720Z             virtual_packet_logging=False,
2025-02-24T16:12:46.8096800Z             legacy_mode_enabled=True,
2025-02-24T16:12:46.8096850Z         )
2025-02-24T16:12:46.8096980Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:12:46.8097100Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:12:46.8097160Z     
2025-02-24T16:12:46.8097280Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:12:46.8097380Z             montecarlo_main_loop_simulation
2025-02-24T16:12:46.8097440Z         )
2025-02-24T16:12:46.8097490Z     
2025-02-24T16:12:46.8097690Z         # Load compare data from refdata
2025-02-24T16:12:46.8097740Z     
2025-02-24T16:12:46.8098140Z         expected_nu = expected_hdf_store[
2025-02-24T16:12:46.8098250Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:12:46.8098300Z         ]
2025-02-24T16:12:46.8098550Z         expected_energy = expected_hdf_store[
2025-02-24T16:12:46.8098670Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:12:46.8098740Z         ]
2025-02-24T16:12:46.8098850Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:12:46.8098970Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:12:46.8099040Z         ]
2025-02-24T16:12:46.8099200Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:12:46.8099430Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:12:46.8099480Z         ]
2025-02-24T16:12:46.8099560Z         expected_hdf_store.close()
2025-02-24T16:12:46.8099880Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T16:12:46.8100040Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:12:46.8100290Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:12:46.8100380Z         actual_nu_bar_estimator = (
2025-02-24T16:12:46.8100520Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:12:46.8100580Z         )
2025-02-24T16:12:46.8100750Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:12:46.8100830Z     
2025-02-24T16:12:46.8100890Z         # Compare
2025-02-24T16:12:46.8100980Z >       npt.assert_allclose(
2025-02-24T16:12:46.8101130Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T16:12:46.8101190Z         )
2025-02-24T16:12:46.8101200Z 
2025-02-24T16:12:46.8101350Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T16:12:46.8101590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8101590Z 
2025-02-24T16:12:46.8101960Z args = (<function assert_allclose.<locals>.compare at 0x15cde67a0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28, 6.....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T16:12:46.8102090Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T16:12:46.8102330Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T16:12:46.8102340Z 
2025-02-24T16:12:46.8102890Z     @wraps(func)
2025-02-24T16:12:46.8102980Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8103070Z         with self._recreate_cm():
2025-02-24T16:12:46.8103170Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8103260Z E           AssertionError: 
2025-02-24T16:12:46.8103350Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:12:46.8103410Z E           
2025-02-24T16:12:46.8103490Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:12:46.8103640Z E           Max absolute difference: 2.25821059e+25
2025-02-24T16:12:46.8103740Z E           Max relative difference: 0.00054426
2025-02-24T16:12:46.8103860Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:12:46.8103980Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:12:46.8104080Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:12:46.8104220Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:12:46.8104330Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:12:46.8104440Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:12:46.8104440Z 
2025-02-24T16:12:46.8104620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8104760Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:12:46.8105240Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.8105650Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.8105920Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8106300Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:12:46.8106500Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8106580Z 	
2025-02-24T16:12:46.8106670Z 	Simulation finished in 0 iterations 
2025-02-24T16:12:46.8106740Z 	Simulation took 0.00 s
2025-02-24T16:12:46.8106840Z  ([1mbase.py[0m:542)
2025-02-24T16:12:46.8106980Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8107030Z 	
2025-02-24T16:12:46.8107160Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:12:46.8107330Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8107400Z 	
2025-02-24T16:12:46.8107510Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:12:46.8107590Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:12:46.8107680Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.8107810Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.8107960Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:12:46.8107960Z 
2025-02-24T16:12:46.8107970Z 
2025-02-24T16:12:46.8108180Z Packets:                                                                                   4204/? [00:07<00:00, 432.04it/s] [A
2025-02-24T16:12:46.8108180Z 
2025-02-24T16:12:46.8108370Z Packets:                                                                                   17393/? [00:07<00:00, 3078.56it/s][A
2025-02-24T16:12:46.8108380Z 
2025-02-24T16:12:46.8108560Z Packets:                                                                                   30453/? [00:07<00:00, 6643.57it/s][A
2025-02-24T16:12:46.8108570Z 
2025-02-24T16:12:46.8108770Z Packets:                                                                                   41870/? [00:07<00:00, 10772.94it/s][A
2025-02-24T16:12:46.8108790Z 
2025-02-24T16:12:46.8109010Z Packets:                                                                                   55042/? [00:07<00:00, 17063.18it/s][A
2025-02-24T16:12:46.8109020Z 
2025-02-24T16:12:46.8109250Z Packets:                                                                                   68280/? [00:08<00:00, 25038.26it/s][A
2025-02-24T16:12:46.8109270Z 
2025-02-24T16:12:46.8109500Z Packets:                                                                                   82240/? [00:08<00:00, 35338.94it/s][A
2025-02-24T16:12:46.8109500Z 
2025-02-24T16:12:46.8109700Z Packets:                                                                                   94645/? [00:08<00:00, 45415.21it/s][A
2025-02-24T16:12:46.8109820Z Iterations:                                                                                40/? [09:09<00:00,  6.29s/it]
2025-02-24T16:12:46.8109830Z 
2025-02-24T16:12:46.8110010Z Packets:                                                                                   104009/? [00:08<00:00, 45415.21it/s][A
2025-02-24T16:12:46.8110160Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:12:46.8110570Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.8110790Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:12:46.8110900Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:12:46.8110980Z 	Simulation finished in 0 iterations 
2025-02-24T16:12:46.8111050Z 	Simulation took 0.00 s
2025-02-24T16:12:46.8111050Z 
2025-02-24T16:12:46.8111150Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.8111230Z 	Starting iteration 1 of 1
2025-02-24T16:12:46.8111330Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.8111610Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:12:46.8111700Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:12:46.8111890Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.8112030Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T16:12:46.8112040Z 
2025-02-24T16:12:46.8114210Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:12:46.8114590Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1353964b0>
2025-02-24T16:12:46.8114990Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:12:46.8115000Z 
2025-02-24T16:12:46.8115110Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T16:12:46.8115190Z         montecarlo_main_loop_config,
2025-02-24T16:12:46.8115250Z         regression_data,
2025-02-24T16:12:46.8115320Z         atomic_dataset,
2025-02-24T16:12:46.8115370Z     ):
2025-02-24T16:12:46.8115460Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:12:46.8115610Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T16:12:46.8115780Z     
2025-02-24T16:12:46.8115930Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:12:46.8116020Z             montecarlo_main_loop_config,
2025-02-24T16:12:46.8116110Z             atom_data=atomic_dataset,
2025-02-24T16:12:46.8116190Z             virtual_packet_logging=True,
2025-02-24T16:12:46.8116260Z             legacy_mode_enabled=True,
2025-02-24T16:12:46.8116310Z         )
2025-02-24T16:12:46.8116420Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:12:46.8116530Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:12:46.8116720Z     
2025-02-24T16:12:46.8116880Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T16:12:46.8116940Z     
2025-02-24T16:12:46.8117240Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T16:12:46.8117300Z     
2025-02-24T16:12:46.8117530Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:12:46.8117610Z             montecarlo_main_loop_simulation
2025-02-24T16:12:46.8117660Z         )
2025-02-24T16:12:46.8117720Z     
2025-02-24T16:12:46.8117790Z         expected_nu = expected_hdf_store[
2025-02-24T16:12:46.8117900Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:12:46.8117950Z         ]
2025-02-24T16:12:46.8118050Z         expected_energy = expected_hdf_store[
2025-02-24T16:12:46.8118280Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:12:46.8118340Z         ]
2025-02-24T16:12:46.8118460Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:12:46.8118590Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:12:46.8118650Z         ]
2025-02-24T16:12:46.8118750Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:12:46.8118860Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:12:46.8118910Z         ]
2025-02-24T16:12:46.8119010Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T16:12:46.8119130Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T16:12:46.8119180Z         ]
2025-02-24T16:12:46.8119290Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T16:12:46.8119450Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T16:12:46.8119510Z         ]
2025-02-24T16:12:46.8119570Z     
2025-02-24T16:12:46.8119670Z         transport_state = transport.transport_state
2025-02-24T16:12:46.8119730Z     
2025-02-24T16:12:46.8119880Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:12:46.8120140Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:12:46.8120330Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T16:12:46.8120440Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T16:12:46.8120580Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T16:12:46.8120730Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T16:12:46.8120790Z     
2025-02-24T16:12:46.8120880Z         expected_hdf_store.close()
2025-02-24T16:12:46.8120940Z         # Compare
2025-02-24T16:12:46.8121010Z >       npt.assert_allclose(
2025-02-24T16:12:46.8121080Z             actual_nu_bar_estimator,
2025-02-24T16:12:46.8121160Z             expected_nu_bar_estimator,
2025-02-24T16:12:46.8121210Z             rtol=1e-12,
2025-02-24T16:12:46.8121280Z             atol=1e-15,
2025-02-24T16:12:46.8121330Z         )
2025-02-24T16:12:46.8121330Z 
2025-02-24T16:12:46.8121490Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T16:12:46.8121600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8121610Z 
2025-02-24T16:12:46.8121970Z args = (<function assert_allclose.<locals>.compare at 0x158826480>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28, 6.....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T16:12:46.8122090Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T16:12:46.8122300Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T16:12:46.8122310Z 
2025-02-24T16:12:46.8122360Z     @wraps(func)
2025-02-24T16:12:46.8122440Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8122500Z         with self._recreate_cm():
2025-02-24T16:12:46.8122600Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8122670Z E           AssertionError: 
2025-02-24T16:12:46.8122800Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:12:46.8122850Z E           
2025-02-24T16:12:46.8122930Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:12:46.8123020Z E           Max absolute difference: 1.93283629e+25
2025-02-24T16:12:46.8123100Z E           Max relative difference: 0.00029148
2025-02-24T16:12:46.8123230Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:12:46.8123330Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:12:46.8123450Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:12:46.8123580Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:12:46.8123680Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:12:46.8123800Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:12:46.8123800Z 
2025-02-24T16:12:46.8124000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8124150Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:12:46.8124420Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.8124800Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.8124970Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8125160Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:12:46.8125310Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8125370Z 	
2025-02-24T16:12:46.8125440Z 	Simulation finished in 0 iterations 
2025-02-24T16:12:46.8125510Z 	Simulation took 0.00 s
2025-02-24T16:12:46.8125590Z  ([1mbase.py[0m:542)
2025-02-24T16:12:46.8125810Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8125860Z 	
2025-02-24T16:12:46.8125990Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:12:46.8126180Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8126240Z 	
2025-02-24T16:12:46.8126310Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:12:46.8126390Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:12:46.8126460Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.8126540Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.8126670Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:12:46.8126680Z 
2025-02-24T16:12:46.8126680Z 
2025-02-24T16:12:46.8126870Z Packets:                                                                                   107034/? [00:10<00:00, 14014.70it/s][A
2025-02-24T16:12:46.8126880Z 
2025-02-24T16:12:46.8127050Z Packets:                                                                                   115767/? [00:10<00:00, 16726.26it/s][A
2025-02-24T16:12:46.8127060Z 
2025-02-24T16:12:46.8127240Z Packets:                                                                                   123194/? [00:10<00:00, 19517.54it/s][A
2025-02-24T16:12:46.8127250Z 
2025-02-24T16:12:46.8127420Z Packets:                                                                                   129781/? [00:11<00:00, 21920.90it/s][A
2025-02-24T16:12:46.8127430Z 
2025-02-24T16:12:46.8127600Z Packets:                                                                                   135549/? [00:11<00:00, 24454.64it/s][A
2025-02-24T16:12:46.8127610Z 
2025-02-24T16:12:46.8127780Z Packets:                                                                                   140847/? [00:11<00:00, 27384.53it/s][A
2025-02-24T16:12:46.8127790Z 
2025-02-24T16:12:46.8127960Z Packets:                                                                                   145978/? [00:11<00:00, 28241.40it/s][A
2025-02-24T16:12:46.8127970Z 
2025-02-24T16:12:46.8128140Z Packets:                                                                                   150512/? [00:11<00:00, 30768.03it/s][A
2025-02-24T16:12:46.8128150Z 
2025-02-24T16:12:46.8128340Z Packets:                                                                                   155010/? [00:11<00:00, 33168.37it/s][A
2025-02-24T16:12:46.8128340Z 
2025-02-24T16:12:46.8128510Z Packets:                                                                                   159470/? [00:11<00:00, 35197.34it/s][A
2025-02-24T16:12:46.8128520Z 
2025-02-24T16:12:46.8128690Z Packets:                                                                                   163875/? [00:11<00:00, 33878.24it/s][A
2025-02-24T16:12:46.8128690Z 
2025-02-24T16:12:46.8128870Z Packets:                                                                                   168642/? [00:11<00:00, 36997.24it/s][A
2025-02-24T16:12:46.8128870Z 
2025-02-24T16:12:46.8129050Z Packets:                                                                                   173025/? [00:12<00:00, 38665.25it/s][A
2025-02-24T16:12:46.8129050Z 
2025-02-24T16:12:46.8129230Z Packets:                                                                                   177303/? [00:12<00:00, 38635.99it/s][A
2025-02-24T16:12:46.8129230Z 
2025-02-24T16:12:46.8129410Z Packets:                                                                                   181455/? [00:12<00:00, 37885.05it/s][A
2025-02-24T16:12:46.8129410Z 
2025-02-24T16:12:46.8129590Z Packets:                                                                                   185443/? [00:12<00:00, 37980.04it/s][A
2025-02-24T16:12:46.8129590Z 
2025-02-24T16:12:46.8129770Z Packets:                                                                                   189699/? [00:12<00:00, 39231.45it/s][A
2025-02-24T16:12:46.8129770Z 
2025-02-24T16:12:46.8129950Z Packets:                                                                                   194152/? [00:12<00:00, 40717.34it/s][A
2025-02-24T16:12:46.8130000Z 
2025-02-24T16:12:46.8130180Z Packets:                                                                                   198312/? [00:12<00:00, 39442.38it/s][A
2025-02-24T16:12:46.8130230Z 
2025-02-24T16:12:46.8130410Z Packets:                                                                                   203114/? [00:12<00:00, 41865.71it/s][A
2025-02-24T16:12:46.8130540Z Iterations:                                                                                41/? [09:14<00:00,  5.82s/it]
2025-02-24T16:12:46.8130550Z 
2025-02-24T16:12:46.8130740Z Packets:                                                                                   204009/? [00:13<00:00, 41865.71it/s][A
2025-02-24T16:12:46.8130880Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:12:46.8131300Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.8131500Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:12:46.8131590Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:12:46.8131670Z 	Simulation finished in 0 iterations 
2025-02-24T16:12:46.8131730Z 	Simulation took 0.00 s
2025-02-24T16:12:46.8131730Z 
2025-02-24T16:12:46.8131820Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.8131890Z 	Starting iteration 1 of 1
2025-02-24T16:12:46.8132050Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.8132130Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:12:46.8132210Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:12:46.8132330Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.8132470Z __________________________ test_boundary_interactions __________________________
2025-02-24T16:12:46.8132470Z 
2025-02-24T16:12:46.8133320Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#117710110<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float64,...xing.RPacketTracker object at 0x31b0d53f0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x3166d5e70>])
2025-02-24T16:12:46.8133620Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x17cec96a0>
2025-02-24T16:12:46.8133630Z 
2025-02-24T16:12:46.8133800Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T16:12:46.8133890Z         no_of_packets = len(rpacket_tracker)
2025-02-24T16:12:46.8133950Z     
2025-02-24T16:12:46.8134030Z         # Hard coding the number of columns
2025-02-24T16:12:46.8134170Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T16:12:46.8134310Z         obtained_boundary_interaction = np.full(
2025-02-24T16:12:46.8134400Z             (no_of_packets, 64),
2025-02-24T16:12:46.8134480Z             [-1],
2025-02-24T16:12:46.8134630Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T16:12:46.8134700Z         )
2025-02-24T16:12:46.8134750Z     
2025-02-24T16:12:46.8134840Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T16:12:46.8134920Z             obtained_boundary_interaction[
2025-02-24T16:12:46.8135020Z                 i, : tracker.boundary_interaction.size
2025-02-24T16:12:46.8135100Z             ] = tracker.boundary_interaction
2025-02-24T16:12:46.8135150Z     
2025-02-24T16:12:46.8135280Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T16:12:46.8135360Z             obtained_boundary_interaction
2025-02-24T16:12:46.8135410Z         )
2025-02-24T16:12:46.8135480Z >       npt.assert_array_equal(
2025-02-24T16:12:46.8135610Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T16:12:46.8135670Z         )
2025-02-24T16:12:46.8135670Z 
2025-02-24T16:12:46.8135830Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T16:12:46.8135970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8136250Z 
2025-02-24T16:12:46.8136500Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:12:46.8136750Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T16:12:46.8136930Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T16:12:46.8137310Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T16:12:46.8137320Z 
2025-02-24T16:12:46.8137420Z     @wraps(func)
2025-02-24T16:12:46.8137510Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8137580Z         with self._recreate_cm():
2025-02-24T16:12:46.8137670Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8137730Z E           AssertionError: 
2025-02-24T16:12:46.8137800Z E           Arrays are not equal
2025-02-24T16:12:46.8137860Z E           
2025-02-24T16:12:46.8137940Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:12:46.8138070Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:12:46.8138160Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:12:46.8138280Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:12:46.8138410Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:12:46.8138500Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:12:46.8138610Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:12:46.8138610Z 
2025-02-24T16:12:46.8138780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8138920Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T16:12:46.8138930Z 
2025-02-24T16:12:46.8139570Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:12:46.8139820Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x305e36900>
2025-02-24T16:12:46.8140130Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:12:46.8140480Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x13e042a50>
2025-02-24T16:12:46.8140500Z 
2025-02-24T16:12:46.8140610Z     def test_montecarlo_main_loop_weighted(
2025-02-24T16:12:46.8140680Z         montecarlo_main_loop_config,
2025-02-24T16:12:46.8140740Z         regression_data,
2025-02-24T16:12:46.8140800Z         atomic_dataset,
2025-02-24T16:12:46.8140890Z         simple_weighted_packet_source,
2025-02-24T16:12:46.8140970Z     ):
2025-02-24T16:12:46.8141080Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:12:46.8141250Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T16:12:46.8141340Z             montecarlo_main_loop_config,
2025-02-24T16:12:46.8141430Z             atom_data=atomic_dataset,
2025-02-24T16:12:46.8141520Z             virtual_packet_logging=False,
2025-02-24T16:12:46.8141590Z             legacy_mode_enabled=True,
2025-02-24T16:12:46.8141650Z         )
2025-02-24T16:12:46.8141810Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T16:12:46.8141900Z             simple_weighted_packet_source
2025-02-24T16:12:46.8141950Z         )
2025-02-24T16:12:46.8142100Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T16:12:46.8142250Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T16:12:46.8142300Z     
2025-02-24T16:12:46.8142410Z         # Get the montecarlo simple regression data
2025-02-24T16:12:46.8142480Z         regression_data_dir = (
2025-02-24T16:12:46.8142770Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T16:12:46.8142940Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T16:12:46.8143090Z         )
2025-02-24T16:12:46.8143240Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T16:12:46.8143290Z     
2025-02-24T16:12:46.8143370Z         # Load compare data from refdata
2025-02-24T16:12:46.8143420Z     
2025-02-24T16:12:46.8143520Z         expected_nu = expected_hdf_store[
2025-02-24T16:12:46.8143670Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:12:46.8143730Z         ]
2025-02-24T16:12:46.8143830Z         expected_energy = expected_hdf_store[
2025-02-24T16:12:46.8143950Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:12:46.8144010Z         ]
2025-02-24T16:12:46.8144110Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:12:46.8144240Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:12:46.8144320Z         ]
2025-02-24T16:12:46.8144410Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:12:46.8144550Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:12:46.8144610Z         ]
2025-02-24T16:12:46.8144680Z         expected_hdf_store.close()
2025-02-24T16:12:46.8144750Z         transport_state = (
2025-02-24T16:12:46.8144920Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T16:12:46.8145000Z         )
2025-02-24T16:12:46.8145160Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:12:46.8145300Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:12:46.8145370Z         actual_nu_bar_estimator = (
2025-02-24T16:12:46.8145500Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:12:46.8145550Z         )
2025-02-24T16:12:46.8145730Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:12:46.8145800Z     
2025-02-24T16:12:46.8145870Z         # Compare
2025-02-24T16:12:46.8145960Z         npt.assert_allclose(
2025-02-24T16:12:46.8146110Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T16:12:46.8146170Z         )
2025-02-24T16:12:46.8146320Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T16:12:46.8146480Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T16:12:46.8146490Z 
2025-02-24T16:12:46.8146720Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T16:12:46.8146820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8146830Z 
2025-02-24T16:12:46.8147240Z args = (<function assert_allclose.<locals>.compare at 0x14faf8540>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05,...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T16:12:46.8147360Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T16:12:46.8147590Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T16:12:46.8147610Z 
2025-02-24T16:12:46.8147670Z     @wraps(func)
2025-02-24T16:12:46.8147750Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8147850Z         with self._recreate_cm():
2025-02-24T16:12:46.8147930Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8148020Z E           AssertionError: 
2025-02-24T16:12:46.8148130Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:12:46.8167130Z E           
2025-02-24T16:12:46.8167420Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:12:46.8167510Z E           Max absolute difference: 2.00640487e-05
2025-02-24T16:12:46.8167600Z E           Max relative difference: 2.06329455
2025-02-24T16:12:46.8167740Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:12:46.8168230Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:12:46.8168370Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:12:46.8168620Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:12:46.8168620Z 
2025-02-24T16:12:46.8168800Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8168980Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:12:46.8169290Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:12:46.8169650Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:12:46.8169800Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8169980Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:12:46.8170120Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8170190Z 	
2025-02-24T16:12:46.8170260Z 	Simulation finished in 0 iterations 
2025-02-24T16:12:46.8170330Z 	Simulation took 0.00 s
2025-02-24T16:12:46.8170410Z  ([1mbase.py[0m:542)
2025-02-24T16:12:46.8170550Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8170600Z 	
2025-02-24T16:12:46.8170720Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:12:46.8170860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8170910Z 	
2025-02-24T16:12:46.8170980Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:12:46.8171060Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:12:46.8171130Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.8171210Z  ([1mbase.py[0m:657)
2025-02-24T16:12:46.8171350Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:12:46.8171350Z 
2025-02-24T16:12:46.8171350Z 
2025-02-24T16:12:46.8171540Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T16:12:46.8171550Z 
2025-02-24T16:12:46.8171730Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T16:12:46.8171730Z 
2025-02-24T16:12:46.8171940Z Packets:   █████████▉                                                                      12391/100000 [00:00<00:00, 123384.43it/s][A
2025-02-24T16:12:46.8171950Z 
2025-02-24T16:12:46.8172250Z Packets:   ████████████████████▊                                                           25984/100000 [00:00<00:00, 130747.49it/s][A
2025-02-24T16:12:46.8172260Z 
2025-02-24T16:12:46.8172480Z Packets:   ████████████████████████████████▍                                               40482/100000 [00:00<00:00, 137239.97it/s][A
2025-02-24T16:12:46.8172480Z 
2025-02-24T16:12:46.8172700Z Packets:   ███████████████████████████████████████████▎                                    54208/100000 [00:00<00:00, 130604.08it/s][A
2025-02-24T16:12:46.8172780Z 
2025-02-24T16:12:46.8173030Z Packets:   ██████████████████████████████████████████████████████▍                         67995/100000 [00:00<00:00, 133140.32it/s][A
2025-02-24T16:12:46.8173060Z 
2025-02-24T16:12:46.8173480Z Packets:   █████████████████████████████████████████████████████████████████               81347/100000 [00:00<00:00, 111136.14it/s][A
2025-02-24T16:12:46.8173490Z 
2025-02-24T16:12:46.8173740Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    94011/100000 [00:00<00:00, 115535.99it/s][A
2025-02-24T16:12:46.8173870Z Iterations:                                                                                45/? [09:32<00:00,  4.24s/it]
2025-02-24T16:12:46.8173870Z 
2025-02-24T16:12:46.8174140Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 115535.99it/s][A
2025-02-24T16:12:46.8174300Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:12:46.8174710Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:12:46.8174990Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:12:46.8175090Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:12:46.8175170Z 	Simulation finished in 0 iterations 
2025-02-24T16:12:46.8175230Z 	Simulation took 0.00 s
2025-02-24T16:12:46.8175230Z 
2025-02-24T16:12:46.8175320Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:12:46.8175390Z 	Starting iteration 1 of 1
2025-02-24T16:12:46.8175470Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:12:46.8175550Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:12:46.8175620Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:12:46.8175690Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:12:46.8175870Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T16:12:46.8175880Z 
2025-02-24T16:12:46.8176200Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a243f20>
2025-02-24T16:12:46.8176580Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8176880Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T16:12:46.8176940Z attribute = 'plot_data'
2025-02-24T16:12:46.8176950Z 
2025-02-24T16:12:46.8177020Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8177080Z         "attribute",
2025-02-24T16:12:46.8177130Z         [
2025-02-24T16:12:46.8177250Z             "plot_data",
2025-02-24T16:12:46.8177310Z             "plot_colors",
2025-02-24T16:12:46.8177370Z             "new_bin_edges",
2025-02-24T16:12:46.8177420Z         ],
2025-02-24T16:12:46.8177480Z     )
2025-02-24T16:12:46.8177550Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8177600Z         self,
2025-02-24T16:12:46.8177680Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8177730Z         request,
2025-02-24T16:12:46.8177790Z         attribute,
2025-02-24T16:12:46.8177840Z     ):
2025-02-24T16:12:46.8177940Z         """
2025-02-24T16:12:46.8178060Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8178110Z     
2025-02-24T16:12:46.8178170Z         Parameters:
2025-02-24T16:12:46.8178340Z         -----------
2025-02-24T16:12:46.8178510Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8178600Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8178790Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8178850Z         """
2025-02-24T16:12:46.8178940Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8179110Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8179370Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8179560Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8179840Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8179940Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8180050Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8180140Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8180150Z 
2025-02-24T16:12:46.8180270Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8180380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8180380Z 
2025-02-24T16:12:46.8180760Z args = (<function assert_allclose.<locals>.compare at 0x30301cea0>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:12:46.8180850Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:12:46.8181060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8181070Z 
2025-02-24T16:12:46.8181120Z     @wraps(func)
2025-02-24T16:12:46.8181190Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8181260Z         with self._recreate_cm():
2025-02-24T16:12:46.8181330Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8181400Z E           AssertionError: 
2025-02-24T16:12:46.8181490Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8181550Z E           
2025-02-24T16:12:46.8181620Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:12:46.8181740Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:12:46.8181840Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:12:46.8181950Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:12:46.8182060Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:12:46.8182160Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:12:46.8182270Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:12:46.8182270Z 
2025-02-24T16:12:46.8182440Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8182570Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8182800Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8183000Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8183130Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8183380Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8183560Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T16:12:46.8183570Z 
2025-02-24T16:12:46.8183780Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a370260>
2025-02-24T16:12:46.8184010Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8184230Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T16:12:46.8184300Z attribute = 'plot_data'
2025-02-24T16:12:46.8184300Z 
2025-02-24T16:12:46.8184370Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8184440Z         "attribute",
2025-02-24T16:12:46.8184490Z         [
2025-02-24T16:12:46.8184550Z             "plot_data",
2025-02-24T16:12:46.8184610Z             "plot_colors",
2025-02-24T16:12:46.8184740Z             "new_bin_edges",
2025-02-24T16:12:46.8184790Z         ],
2025-02-24T16:12:46.8184840Z     )
2025-02-24T16:12:46.8184910Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8185010Z         self,
2025-02-24T16:12:46.8185090Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8185140Z         request,
2025-02-24T16:12:46.8185190Z         attribute,
2025-02-24T16:12:46.8185240Z     ):
2025-02-24T16:12:46.8185300Z         """
2025-02-24T16:12:46.8185410Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8185460Z     
2025-02-24T16:12:46.8185520Z         Parameters:
2025-02-24T16:12:46.8185570Z         -----------
2025-02-24T16:12:46.8185720Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8185800Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8185940Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8185990Z         """
2025-02-24T16:12:46.8186080Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8186200Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8186330Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8186470Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8186600Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8186700Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8186810Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8186900Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8186910Z 
2025-02-24T16:12:46.8187030Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8187130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8187130Z 
2025-02-24T16:12:46.8187480Z args = (<function assert_allclose.<locals>.compare at 0x15dd50a40>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T16:12:46.8187610Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:12:46.8187820Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8187820Z 
2025-02-24T16:12:46.8187880Z     @wraps(func)
2025-02-24T16:12:46.8187950Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8188010Z         with self._recreate_cm():
2025-02-24T16:12:46.8188080Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8188150Z E           AssertionError: 
2025-02-24T16:12:46.8188240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8188290Z E           
2025-02-24T16:12:46.8188360Z E           (shapes (558,), (560,) mismatch)
2025-02-24T16:12:46.8188480Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:12:46.8188580Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:12:46.8188700Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:12:46.8188820Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:12:46.8188910Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:12:46.8189020Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:12:46.8189030Z 
2025-02-24T16:12:46.8189190Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8189370Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T16:12:46.8189370Z 
2025-02-24T16:12:46.8189590Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a3704a0>
2025-02-24T16:12:46.8189880Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8190170Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T16:12:46.8190280Z attribute = 'plot_data'
2025-02-24T16:12:46.8190290Z 
2025-02-24T16:12:46.8190360Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8190420Z         "attribute",
2025-02-24T16:12:46.8190470Z         [
2025-02-24T16:12:46.8190540Z             "plot_data",
2025-02-24T16:12:46.8190590Z             "plot_colors",
2025-02-24T16:12:46.8190660Z             "new_bin_edges",
2025-02-24T16:12:46.8190710Z         ],
2025-02-24T16:12:46.8190760Z     )
2025-02-24T16:12:46.8190830Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8190890Z         self,
2025-02-24T16:12:46.8190960Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8191010Z         request,
2025-02-24T16:12:46.8191070Z         attribute,
2025-02-24T16:12:46.8191120Z     ):
2025-02-24T16:12:46.8191230Z         """
2025-02-24T16:12:46.8191350Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8191400Z     
2025-02-24T16:12:46.8191460Z         Parameters:
2025-02-24T16:12:46.8191510Z         -----------
2025-02-24T16:12:46.8191670Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8191740Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8191880Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8191930Z         """
2025-02-24T16:12:46.8192020Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8192140Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8192260Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8192400Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8192520Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8192630Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8192730Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8192840Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8192840Z 
2025-02-24T16:12:46.8192960Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8193060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8193060Z 
2025-02-24T16:12:46.8193410Z args = (<function assert_allclose.<locals>.compare at 0x129a9f2e0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:12:46.8193540Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:12:46.8193740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8193740Z 
2025-02-24T16:12:46.8193800Z     @wraps(func)
2025-02-24T16:12:46.8193870Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8193930Z         with self._recreate_cm():
2025-02-24T16:12:46.8194000Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8194080Z E           AssertionError: 
2025-02-24T16:12:46.8194170Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8194220Z E           
2025-02-24T16:12:46.8194300Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:12:46.8194410Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:12:46.8194510Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:12:46.8194610Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:12:46.8194810Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:12:46.8194940Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:12:46.8195040Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:12:46.8195170Z 
2025-02-24T16:12:46.8195340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8195570Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8195810Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8196010Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8196140Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8196390Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8196570Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T16:12:46.8196580Z 
2025-02-24T16:12:46.8196790Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a3706e0>
2025-02-24T16:12:46.8197030Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8197250Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T16:12:46.8197320Z attribute = 'plot_data'
2025-02-24T16:12:46.8197330Z 
2025-02-24T16:12:46.8197400Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8197450Z         "attribute",
2025-02-24T16:12:46.8197510Z         [
2025-02-24T16:12:46.8197570Z             "plot_data",
2025-02-24T16:12:46.8197630Z             "plot_colors",
2025-02-24T16:12:46.8197690Z             "new_bin_edges",
2025-02-24T16:12:46.8197740Z         ],
2025-02-24T16:12:46.8197790Z     )
2025-02-24T16:12:46.8197870Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8197920Z         self,
2025-02-24T16:12:46.8197990Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8198040Z         request,
2025-02-24T16:12:46.8198090Z         attribute,
2025-02-24T16:12:46.8198150Z     ):
2025-02-24T16:12:46.8198200Z         """
2025-02-24T16:12:46.8198310Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8198370Z     
2025-02-24T16:12:46.8198420Z         Parameters:
2025-02-24T16:12:46.8198480Z         -----------
2025-02-24T16:12:46.8198620Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8198700Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8198830Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8198890Z         """
2025-02-24T16:12:46.8198970Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8199090Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8199220Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8199350Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8199490Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8199590Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8199700Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8199800Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8199800Z 
2025-02-24T16:12:46.8199920Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8200020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8200020Z 
2025-02-24T16:12:46.8200330Z args = (<function assert_allclose.<locals>.compare at 0x129a9c400>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...210447, 12126.50399598,
2025-02-24T16:12:46.8200450Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:12:46.8200510Z        11042.97481792]))
2025-02-24T16:12:46.8200710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8200820Z 
2025-02-24T16:12:46.8200890Z     @wraps(func)
2025-02-24T16:12:46.8200960Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8201110Z         with self._recreate_cm():
2025-02-24T16:12:46.8201180Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8201250Z E           AssertionError: 
2025-02-24T16:12:46.8201340Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8201390Z E           
2025-02-24T16:12:46.8201470Z E           (shapes (159,), (153,) mismatch)
2025-02-24T16:12:46.8201590Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:12:46.8201690Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:12:46.8201800Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:12:46.8201910Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:12:46.8202010Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:12:46.8202120Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:12:46.8202120Z 
2025-02-24T16:12:46.8202290Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8202470Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T16:12:46.8202470Z 
2025-02-24T16:12:46.8202680Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a370920>
2025-02-24T16:12:46.8202910Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8203130Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T16:12:46.8203200Z attribute = 'plot_data'
2025-02-24T16:12:46.8203200Z 
2025-02-24T16:12:46.8203280Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8203330Z         "attribute",
2025-02-24T16:12:46.8203390Z         [
2025-02-24T16:12:46.8203450Z             "plot_data",
2025-02-24T16:12:46.8203510Z             "plot_colors",
2025-02-24T16:12:46.8203570Z             "new_bin_edges",
2025-02-24T16:12:46.8203620Z         ],
2025-02-24T16:12:46.8203680Z     )
2025-02-24T16:12:46.8203750Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8203800Z         self,
2025-02-24T16:12:46.8203870Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8203920Z         request,
2025-02-24T16:12:46.8203980Z         attribute,
2025-02-24T16:12:46.8204030Z     ):
2025-02-24T16:12:46.8204080Z         """
2025-02-24T16:12:46.8204190Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8204240Z     
2025-02-24T16:12:46.8204290Z         Parameters:
2025-02-24T16:12:46.8204350Z         -----------
2025-02-24T16:12:46.8204500Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8204580Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8204720Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8204770Z         """
2025-02-24T16:12:46.8204870Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8204980Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8205110Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8205240Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8205370Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8205480Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8205580Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8205680Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8205690Z 
2025-02-24T16:12:46.8205800Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8205970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8205970Z 
2025-02-24T16:12:46.8206350Z args = (<function assert_allclose.<locals>.compare at 0x129a9ee80>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:12:46.8206490Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:12:46.8206690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8206690Z 
2025-02-24T16:12:46.8206750Z     @wraps(func)
2025-02-24T16:12:46.8206820Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8206880Z         with self._recreate_cm():
2025-02-24T16:12:46.8206950Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8207020Z E           AssertionError: 
2025-02-24T16:12:46.8207100Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8207160Z E           
2025-02-24T16:12:46.8207230Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:12:46.8207390Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:12:46.8207520Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:12:46.8207630Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:12:46.8207740Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:12:46.8207840Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:12:46.8207950Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:12:46.8207950Z 
2025-02-24T16:12:46.8208120Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8208250Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8208460Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8208660Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8208800Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8209050Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8209230Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T16:12:46.8209230Z 
2025-02-24T16:12:46.8209450Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a370b90>
2025-02-24T16:12:46.8209670Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8209900Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T16:12:46.8209960Z attribute = 'plot_data'
2025-02-24T16:12:46.8209970Z 
2025-02-24T16:12:46.8210040Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8210100Z         "attribute",
2025-02-24T16:12:46.8210140Z         [
2025-02-24T16:12:46.8210210Z             "plot_data",
2025-02-24T16:12:46.8210270Z             "plot_colors",
2025-02-24T16:12:46.8210330Z             "new_bin_edges",
2025-02-24T16:12:46.8210390Z         ],
2025-02-24T16:12:46.8210430Z     )
2025-02-24T16:12:46.8210500Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8210550Z         self,
2025-02-24T16:12:46.8210630Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8210680Z         request,
2025-02-24T16:12:46.8210740Z         attribute,
2025-02-24T16:12:46.8210790Z     ):
2025-02-24T16:12:46.8210840Z         """
2025-02-24T16:12:46.8210950Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8211000Z     
2025-02-24T16:12:46.8211060Z         Parameters:
2025-02-24T16:12:46.8211110Z         -----------
2025-02-24T16:12:46.8211260Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8211480Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8211620Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8211760Z         """
2025-02-24T16:12:46.8211850Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8211970Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8212090Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8212230Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8212360Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8212460Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8212560Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8212660Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8212660Z 
2025-02-24T16:12:46.8212780Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8212880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8212890Z 
2025-02-24T16:12:46.8213270Z args = (<function assert_allclose.<locals>.compare at 0x30301c7c0>, array([13692.75973672, 11362.93720064, 12466.53861691, .....), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T16:12:46.8213360Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:12:46.8213990Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8214000Z 
2025-02-24T16:12:46.8214210Z     @wraps(func)
2025-02-24T16:12:46.8214330Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8214400Z         with self._recreate_cm():
2025-02-24T16:12:46.8214720Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8214960Z E           AssertionError: 
2025-02-24T16:12:46.8215080Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8215180Z E           
2025-02-24T16:12:46.8215270Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T16:12:46.8215420Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:12:46.8215490Z E                  11152.962595, 11172.044815])
2025-02-24T16:12:46.8215620Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:12:46.8215690Z E                  11398.237865, 11111.204868])
2025-02-24T16:12:46.8215700Z 
2025-02-24T16:12:46.8215880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8216020Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8216300Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8216580Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8216720Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8217240Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8217430Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T16:12:46.8217430Z 
2025-02-24T16:12:46.8217650Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a370dd0>
2025-02-24T16:12:46.8217880Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8218110Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T16:12:46.8218180Z attribute = 'plot_data'
2025-02-24T16:12:46.8218180Z 
2025-02-24T16:12:46.8218260Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8218580Z         "attribute",
2025-02-24T16:12:46.8218630Z         [
2025-02-24T16:12:46.8218690Z             "plot_data",
2025-02-24T16:12:46.8218760Z             "plot_colors",
2025-02-24T16:12:46.8218890Z             "new_bin_edges",
2025-02-24T16:12:46.8218950Z         ],
2025-02-24T16:12:46.8219110Z     )
2025-02-24T16:12:46.8219190Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8219240Z         self,
2025-02-24T16:12:46.8219310Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8219370Z         request,
2025-02-24T16:12:46.8219420Z         attribute,
2025-02-24T16:12:46.8219470Z     ):
2025-02-24T16:12:46.8219520Z         """
2025-02-24T16:12:46.8219640Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8219690Z     
2025-02-24T16:12:46.8219740Z         Parameters:
2025-02-24T16:12:46.8219850Z         -----------
2025-02-24T16:12:46.8220100Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8220190Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8220330Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8220390Z         """
2025-02-24T16:12:46.8220590Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8220710Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8221000Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8221140Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8221270Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8221380Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8221790Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8221940Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8221940Z 
2025-02-24T16:12:46.8222130Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8222250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8222260Z 
2025-02-24T16:12:46.8222620Z args = (<function assert_allclose.<locals>.compare at 0x129a9ea20>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:12:46.8222740Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:12:46.8222950Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8222950Z 
2025-02-24T16:12:46.8223000Z     @wraps(func)
2025-02-24T16:12:46.8223080Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8223150Z         with self._recreate_cm():
2025-02-24T16:12:46.8223220Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8223290Z E           AssertionError: 
2025-02-24T16:12:46.8223380Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8223430Z E           
2025-02-24T16:12:46.8223510Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:12:46.8223640Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:12:46.8223740Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:12:46.8223850Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:12:46.8224430Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:12:46.8224560Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:12:46.8224670Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:12:46.8224670Z 
2025-02-24T16:12:46.8224840Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8224970Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8225370Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8225680Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8226070Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8226330Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8226510Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T16:12:46.8226510Z 
2025-02-24T16:12:46.8226720Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a370fb0>
2025-02-24T16:12:46.8226940Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>
2025-02-24T16:12:46.8227170Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T16:12:46.8227240Z attribute = 'plot_data'
2025-02-24T16:12:46.8227240Z 
2025-02-24T16:12:46.8227370Z     @pytest.mark.parametrize(
2025-02-24T16:12:46.8227440Z         "attribute",
2025-02-24T16:12:46.8227490Z         [
2025-02-24T16:12:46.8227550Z             "plot_data",
2025-02-24T16:12:46.8227610Z             "plot_colors",
2025-02-24T16:12:46.8227670Z             "new_bin_edges",
2025-02-24T16:12:46.8227720Z         ],
2025-02-24T16:12:46.8227780Z     )
2025-02-24T16:12:46.8227900Z     def test_prepare_plot_data(
2025-02-24T16:12:46.8227950Z         self,
2025-02-24T16:12:46.8233360Z         plotter_prepare_plot_data,
2025-02-24T16:12:46.8233460Z         request,
2025-02-24T16:12:46.8233510Z         attribute,
2025-02-24T16:12:46.8233560Z     ):
2025-02-24T16:12:46.8233610Z         """
2025-02-24T16:12:46.8233740Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:12:46.8233790Z     
2025-02-24T16:12:46.8233840Z         Parameters:
2025-02-24T16:12:46.8233900Z         -----------
2025-02-24T16:12:46.8234060Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:12:46.8234150Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8234290Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:12:46.8234350Z         """
2025-02-24T16:12:46.8234440Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8234550Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:12:46.8234690Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:12:46.8234830Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:12:46.8234960Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:12:46.8235070Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:12:46.8235160Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:12:46.8235260Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:12:46.8235270Z 
2025-02-24T16:12:46.8235390Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:12:46.8235500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8235500Z 
2025-02-24T16:12:46.8235870Z args = (<function assert_allclose.<locals>.compare at 0x129a9e340>, array([12466.53861691, 14269.7609746 , 11910.79400472, 11...210447, 12126.50399598,
2025-02-24T16:12:46.8236690Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:12:46.8236760Z        11042.97481792]))
2025-02-24T16:12:46.8236970Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8236970Z 
2025-02-24T16:12:46.8237030Z     @wraps(func)
2025-02-24T16:12:46.8237140Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8237220Z         with self._recreate_cm():
2025-02-24T16:12:46.8237470Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8237860Z E           AssertionError: 
2025-02-24T16:12:46.8237970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8238020Z E           
2025-02-24T16:12:46.8238250Z E           (shapes (379,), (381,) mismatch)
2025-02-24T16:12:46.8238370Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:12:46.8238480Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:12:46.8238580Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:12:46.8238700Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:12:46.8238800Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:12:46.8238900Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:12:46.8238910Z 
2025-02-24T16:12:46.8239080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8239220Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8239520Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8239760Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8239900Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8240160Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8240340Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T16:12:46.8240340Z 
2025-02-24T16:12:46.8240550Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a371430>
2025-02-24T16:12:46.8240870Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30acdb9e0>
2025-02-24T16:12:46.8241280Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8241480Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T16:12:46.8241490Z 
2025-02-24T16:12:46.8241560Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8241690Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:12:46.8241740Z     ):
2025-02-24T16:12:46.8241790Z         """
2025-02-24T16:12:46.8241960Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8242010Z     
2025-02-24T16:12:46.8242120Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8242170Z     
2025-02-24T16:12:46.8242230Z         Parameters:
2025-02-24T16:12:46.8242280Z         -----------
2025-02-24T16:12:46.8242420Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:12:46.8242600Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:12:46.8242860Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8243000Z         """
2025-02-24T16:12:46.8243080Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:12:46.8243210Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8243360Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:12:46.8243480Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8243610Z             expected_values = expected.get(
2025-02-24T16:12:46.8243690Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8243760Z             ).values.flatten()
2025-02-24T16:12:46.8243870Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:12:46.8243920Z     
2025-02-24T16:12:46.8244030Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8244260Z                 np.testing.assert_allclose(
2025-02-24T16:12:46.8244330Z                     expected_values,
2025-02-24T16:12:46.8244390Z                     actual_values,
2025-02-24T16:12:46.8244530Z                     rtol=0.3,
2025-02-24T16:12:46.8244600Z                     atol=3,
2025-02-24T16:12:46.8244650Z                 )
2025-02-24T16:12:46.8244700Z             else:
2025-02-24T16:12:46.8244820Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:12:46.8244860Z     
2025-02-24T16:12:46.8244960Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:12:46.8245060Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:12:46.8245140Z             if isinstance(data.get_label(), str):
2025-02-24T16:12:46.8245250Z                 assert (
2025-02-24T16:12:46.8245360Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:12:46.8245430Z                     == data.get_label()
2025-02-24T16:12:46.8245540Z                 )
2025-02-24T16:12:46.8245620Z             if isinstance(data, Line2D):
2025-02-24T16:12:46.8245690Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8245760Z                     data.get_xydata(),
2025-02-24T16:12:46.8245880Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:12:46.8245950Z                     rtol=0.3,
2025-02-24T16:12:46.8246010Z                     atol=3,
2025-02-24T16:12:46.8246060Z                 )
2025-02-24T16:12:46.8246070Z 
2025-02-24T16:12:46.8246190Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:12:46.8246290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8246300Z 
2025-02-24T16:12:46.8246490Z args = (<function assert_allclose.<locals>.compare at 0x175204720>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:12:46.8246560Z        [1.19e+04, 1.67e+02],...,
2025-02-24T16:12:46.8246620Z        [1.82e+04, 0.00e+00],
2025-02-24T16:12:46.8246680Z        [1.91e+04, 0.00e+00],
2025-02-24T16:12:46.8246740Z        [1.91e+04, 0.00e+00],
2025-02-24T16:12:46.8246800Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:12:46.8247000Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8247010Z 
2025-02-24T16:12:46.8247060Z     @wraps(func)
2025-02-24T16:12:46.8247130Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8247200Z         with self._recreate_cm():
2025-02-24T16:12:46.8247260Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8247330Z E           AssertionError: 
2025-02-24T16:12:46.8247410Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8247470Z E           
2025-02-24T16:12:46.8247550Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:12:46.8247630Z E           Max absolute difference: 22.
2025-02-24T16:12:46.8247700Z E           Max relative difference: 0.8
2025-02-24T16:12:46.8247770Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:12:46.8247840Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:12:46.8247900Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:12:46.8247980Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:12:46.8248050Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:12:46.8248120Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:12:46.8248120Z 
2025-02-24T16:12:46.8248290Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8248430Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8248810Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8249160Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T16:12:46.8249300Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8249650Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:12:46.8249950Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T16:12:46.8250010Z 
2025-02-24T16:12:46.8250230Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a3714f0>
2025-02-24T16:12:46.8250480Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x11c4fb8f0>
2025-02-24T16:12:46.8250870Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8251070Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T16:12:46.8251080Z 
2025-02-24T16:12:46.8251150Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8251350Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:12:46.8251410Z     ):
2025-02-24T16:12:46.8251460Z         """
2025-02-24T16:12:46.8251570Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8251620Z     
2025-02-24T16:12:46.8251730Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8251780Z     
2025-02-24T16:12:46.8251840Z         Parameters:
2025-02-24T16:12:46.8251900Z         -----------
2025-02-24T16:12:46.8252030Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:12:46.8252160Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:12:46.8252240Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8252290Z         """
2025-02-24T16:12:46.8252360Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:12:46.8252450Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8252580Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:12:46.8252720Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8252800Z             expected_values = expected.get(
2025-02-24T16:12:46.8252870Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8252930Z             ).values.flatten()
2025-02-24T16:12:46.8253040Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:12:46.8253100Z     
2025-02-24T16:12:46.8253210Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8253280Z                 np.testing.assert_allclose(
2025-02-24T16:12:46.8253350Z                     expected_values,
2025-02-24T16:12:46.8253410Z                     actual_values,
2025-02-24T16:12:46.8253480Z                     rtol=0.3,
2025-02-24T16:12:46.8253530Z                     atol=3,
2025-02-24T16:12:46.8253590Z                 )
2025-02-24T16:12:46.8253640Z             else:
2025-02-24T16:12:46.8253760Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:12:46.8253810Z     
2025-02-24T16:12:46.8253900Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:12:46.8254000Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:12:46.8254080Z             if isinstance(data.get_label(), str):
2025-02-24T16:12:46.8254150Z                 assert (
2025-02-24T16:12:46.8254250Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:12:46.8254320Z                     == data.get_label()
2025-02-24T16:12:46.8254370Z                 )
2025-02-24T16:12:46.8254450Z             if isinstance(data, Line2D):
2025-02-24T16:12:46.8254600Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8254670Z                     data.get_xydata(),
2025-02-24T16:12:46.8254780Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:12:46.8254840Z                     rtol=0.3,
2025-02-24T16:12:46.8254900Z                     atol=3,
2025-02-24T16:12:46.8254960Z                 )
2025-02-24T16:12:46.8255080Z 
2025-02-24T16:12:46.8255210Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:12:46.8255310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8255390Z 
2025-02-24T16:12:46.8255590Z args = (<function assert_allclose.<locals>.compare at 0x30f1d5620>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:12:46.8255710Z        [1.19e+04, 1.67e+02],...,
2025-02-24T16:12:46.8255770Z        [1.82e+04, 0.00e+00],
2025-02-24T16:12:46.8255840Z        [1.91e+04, 0.00e+00],
2025-02-24T16:12:46.8255900Z        [1.91e+04, 0.00e+00],
2025-02-24T16:12:46.8255960Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:12:46.8256160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8256170Z 
2025-02-24T16:12:46.8256220Z     @wraps(func)
2025-02-24T16:12:46.8256290Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8256350Z         with self._recreate_cm():
2025-02-24T16:12:46.8256440Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8256500Z E           AssertionError: 
2025-02-24T16:12:46.8256590Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8256660Z E           
2025-02-24T16:12:46.8256760Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:12:46.8256840Z E           Max absolute difference: 22.
2025-02-24T16:12:46.8256910Z E           Max relative difference: 0.8
2025-02-24T16:12:46.8256980Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:12:46.8257050Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:12:46.8257110Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:12:46.8257180Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:12:46.8257260Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:12:46.8257340Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:12:46.8257350Z 
2025-02-24T16:12:46.8257520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8257700Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T16:12:46.8257700Z 
2025-02-24T16:12:46.8257910Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a3718e0>
2025-02-24T16:12:46.8258600Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x158aa4500>
2025-02-24T16:12:46.8259010Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8259220Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T16:12:46.8259220Z 
2025-02-24T16:12:46.8259290Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8259480Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:12:46.8259530Z     ):
2025-02-24T16:12:46.8259590Z         """
2025-02-24T16:12:46.8259700Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8259760Z     
2025-02-24T16:12:46.8259870Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8259920Z     
2025-02-24T16:12:46.8259970Z         Parameters:
2025-02-24T16:12:46.8260030Z         -----------
2025-02-24T16:12:46.8260160Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:12:46.8260290Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:12:46.8260370Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8260420Z         """
2025-02-24T16:12:46.8262770Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:12:46.8262900Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8263040Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:12:46.8263170Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8263240Z             expected_values = expected.get(
2025-02-24T16:12:46.8263530Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8263600Z             ).values.flatten()
2025-02-24T16:12:46.8263810Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:12:46.8263870Z     
2025-02-24T16:12:46.8263980Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8264060Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8264150Z                     expected_values,
2025-02-24T16:12:46.8264220Z                     actual_values,
2025-02-24T16:12:46.8268630Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8268640Z 
2025-02-24T16:12:46.8269240Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T16:12:46.8269250Z 
2025-02-24T16:12:46.8269530Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8269530Z 
2025-02-24T16:12:46.8270520Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T16:12:46.8270540Z 
2025-02-24T16:12:46.8270850Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8270850Z 
2025-02-24T16:12:46.8271410Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T16:12:46.8271420Z 
2025-02-24T16:12:46.8271690Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8271700Z 
2025-02-24T16:12:46.8272290Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T16:12:46.8272290Z 
2025-02-24T16:12:46.8272560Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8272570Z 
2025-02-24T16:12:46.8273120Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T16:12:46.8273130Z 
2025-02-24T16:12:46.8273390Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8273400Z 
2025-02-24T16:12:46.8273930Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T16:12:46.8273940Z 
2025-02-24T16:12:46.8274200Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8274210Z 
2025-02-24T16:12:46.8274750Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T16:12:46.8274750Z 
2025-02-24T16:12:46.8275020Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8275020Z 
2025-02-24T16:12:46.8275610Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T16:12:46.8275620Z 
2025-02-24T16:12:46.8276190Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8276200Z 
2025-02-24T16:12:46.8276970Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T16:12:46.8276980Z 
2025-02-24T16:12:46.8277240Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8277240Z 
2025-02-24T16:12:46.8278060Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T16:12:46.8278080Z 
2025-02-24T16:12:46.8278380Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8278390Z 
2025-02-24T16:12:46.8279030Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T16:12:46.8279040Z 
2025-02-24T16:12:46.8279390Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8279400Z 
2025-02-24T16:12:46.8280080Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T16:12:46.8280090Z 
2025-02-24T16:12:46.8280420Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8280430Z 
2025-02-24T16:12:46.8281080Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T16:12:46.8281100Z 
2025-02-24T16:12:46.8281440Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8281450Z 
2025-02-24T16:12:46.8282070Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T16:12:46.8282080Z 
2025-02-24T16:12:46.8282380Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8282390Z 
2025-02-24T16:12:46.8282990Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T16:12:46.8283000Z 
2025-02-24T16:12:46.8283290Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8283300Z 
2025-02-24T16:12:46.8283920Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T16:12:46.8283930Z 
2025-02-24T16:12:46.8284270Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8284280Z 
2025-02-24T16:12:46.8284910Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T16:12:46.8284930Z 
2025-02-24T16:12:46.8287340Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8287580Z 
2025-02-24T16:12:46.8288230Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T16:12:46.8288380Z 
2025-02-24T16:12:46.8288710Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8288740Z 
2025-02-24T16:12:46.8289380Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T16:12:46.8289390Z 
2025-02-24T16:12:46.8289710Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8289730Z 
2025-02-24T16:12:46.8290390Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T16:12:46.8290400Z 
2025-02-24T16:12:46.8290740Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8290760Z 
2025-02-24T16:12:46.8291380Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T16:12:46.8291400Z 
2025-02-24T16:12:46.8291720Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8291730Z 
2025-02-24T16:12:46.8292390Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T16:12:46.8292400Z 
2025-02-24T16:12:46.8293030Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8293050Z 
2025-02-24T16:12:46.8293950Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T16:12:46.8293970Z 
2025-02-24T16:12:46.8294250Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8294250Z 
2025-02-24T16:12:46.8295020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T16:12:46.8295030Z 
2025-02-24T16:12:46.8295420Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8295440Z 
2025-02-24T16:12:46.8296020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T16:12:46.8296030Z 
2025-02-24T16:12:46.8296340Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8296350Z 
2025-02-24T16:12:46.8296960Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T16:12:46.8296980Z 
2025-02-24T16:12:46.8328840Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8328930Z 
2025-02-24T16:12:46.8329630Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T16:12:46.8330040Z 
2025-02-24T16:12:46.8330330Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8330490Z 
2025-02-24T16:12:46.8331050Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T16:12:46.8331060Z 
2025-02-24T16:12:46.8331340Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8331340Z 
2025-02-24T16:12:46.8331870Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T16:12:46.8331870Z 
2025-02-24T16:12:46.8332130Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8332140Z 
2025-02-24T16:12:46.8332700Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T16:12:46.8332710Z 
2025-02-24T16:12:46.8332970Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8332980Z 
2025-02-24T16:12:46.8333510Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T16:12:46.8333520Z 
2025-02-24T16:12:46.8333810Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8333820Z 
2025-02-24T16:12:46.8334370Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T16:12:46.8334390Z 
2025-02-24T16:12:46.8334650Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8334650Z 
2025-02-24T16:12:46.8335210Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T16:12:46.8335220Z 
2025-02-24T16:12:46.8335500Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8335510Z 
2025-02-24T16:12:46.8336060Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T16:12:46.8336080Z 
2025-02-24T16:12:46.8336400Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8336420Z 
2025-02-24T16:12:46.8337010Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T16:12:46.8337020Z 
2025-02-24T16:12:46.8337330Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8337350Z 
2025-02-24T16:12:46.8344630Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T16:12:46.8344670Z 
2025-02-24T16:12:46.8344970Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8345190Z 
2025-02-24T16:12:46.8345770Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T16:12:46.8345880Z 
2025-02-24T16:12:46.8346150Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8346160Z 
2025-02-24T16:12:46.8346690Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T16:12:46.8346700Z 
2025-02-24T16:12:46.8346960Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8346970Z 
2025-02-24T16:12:46.8347500Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T16:12:46.8347510Z 
2025-02-24T16:12:46.8347780Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8347780Z 
2025-02-24T16:12:46.8348340Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T16:12:46.8348350Z 
2025-02-24T16:12:46.8348610Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:12:46.8348610Z 
2025-02-24T16:12:46.8349180Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T16:12:46.8349190Z 
2025-02-24T16:12:46.8349260Z                     rtol=0.3,
2025-02-24T16:12:46.8349320Z                     atol=3,
2025-02-24T16:12:46.8349370Z                 )
2025-02-24T16:12:46.8349380Z 
2025-02-24T16:12:46.8349500Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T16:12:46.8349610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8349610Z 
2025-02-24T16:12:46.8349940Z args = (<function assert_allclose.<locals>.compare at 0x15888aac0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.8350020Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:12:46.8350230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8350240Z 
2025-02-24T16:12:46.8350290Z     @wraps(func)
2025-02-24T16:12:46.8350360Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8350430Z         with self._recreate_cm():
2025-02-24T16:12:46.8350500Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8350570Z E           AssertionError: 
2025-02-24T16:12:46.8350680Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8350730Z E           
2025-02-24T16:12:46.8350810Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.8350890Z E           Max absolute difference: 34
2025-02-24T16:12:46.8350970Z E           Max relative difference: 0.71428571
2025-02-24T16:12:46.8351100Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.8351180Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.8351300Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.8351370Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.8351380Z 
2025-02-24T16:12:46.8351610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8351750Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8352120Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8352330Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8352470Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8352720Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8352900Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T16:12:46.8352900Z 
2025-02-24T16:12:46.8353110Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a3719a0>
2025-02-24T16:12:46.8353360Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x3183ae7e0>
2025-02-24T16:12:46.8353760Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8353970Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T16:12:46.8353970Z 
2025-02-24T16:12:46.8354040Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8354180Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:12:46.8354230Z     ):
2025-02-24T16:12:46.8354290Z         """
2025-02-24T16:12:46.8354390Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8354450Z     
2025-02-24T16:12:46.8354550Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8354600Z     
2025-02-24T16:12:46.8354660Z         Parameters:
2025-02-24T16:12:46.8354710Z         -----------
2025-02-24T16:12:46.8354850Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:12:46.8354970Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:12:46.8355050Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8355110Z         """
2025-02-24T16:12:46.8355190Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:12:46.8355280Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8355410Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:12:46.8355540Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8355610Z             expected_values = expected.get(
2025-02-24T16:12:46.8355690Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8355750Z             ).values.flatten()
2025-02-24T16:12:46.8355870Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:12:46.8355920Z     
2025-02-24T16:12:46.8356760Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8358850Z                 np.testing.assert_allclose(
2025-02-24T16:12:46.8358970Z                     expected_values,
2025-02-24T16:12:46.8359030Z                     actual_values,
2025-02-24T16:12:46.8359100Z                     rtol=0.3,
2025-02-24T16:12:46.8359170Z                     atol=3,
2025-02-24T16:12:46.8359220Z                 )
2025-02-24T16:12:46.8359620Z             else:
2025-02-24T16:12:46.8359740Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:12:46.8359800Z     
2025-02-24T16:12:46.8359890Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:12:46.8359990Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:12:46.8360070Z             if isinstance(data.get_label(), str):
2025-02-24T16:12:46.8360130Z                 assert (
2025-02-24T16:12:46.8360270Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:12:46.8360350Z                     == data.get_label()
2025-02-24T16:12:46.8360600Z                 )
2025-02-24T16:12:46.8360680Z             if isinstance(data, Line2D):
2025-02-24T16:12:46.8360760Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8360910Z                     data.get_xydata(),
2025-02-24T16:12:46.8361020Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:12:46.8361090Z                     rtol=0.3,
2025-02-24T16:12:46.8361150Z                     atol=3,
2025-02-24T16:12:46.8361200Z                 )
2025-02-24T16:12:46.8361200Z 
2025-02-24T16:12:46.8361320Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:12:46.8361420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8361430Z 
2025-02-24T16:12:46.8361640Z args = (<function assert_allclose.<locals>.compare at 0x1589ac040>, array([[1.10e+04, 2.72e+02],
2025-02-24T16:12:46.8361710Z        [1.19e+04, 2.72e+02],...,
2025-02-24T16:12:46.8361780Z        [1.82e+04, 5.00e+00],
2025-02-24T16:12:46.8361870Z        [1.91e+04, 5.00e+00],
2025-02-24T16:12:46.8361950Z        [1.91e+04, 0.00e+00],
2025-02-24T16:12:46.8362020Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:12:46.8362240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8362250Z 
2025-02-24T16:12:46.8362310Z     @wraps(func)
2025-02-24T16:12:46.8362380Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8362440Z         with self._recreate_cm():
2025-02-24T16:12:46.8362530Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8362600Z E           AssertionError: 
2025-02-24T16:12:46.8362690Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8362740Z E           
2025-02-24T16:12:46.8362810Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:12:46.8362890Z E           Max absolute difference: 34.
2025-02-24T16:12:46.8362960Z E           Max relative difference: 0.65
2025-02-24T16:12:46.8363040Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:12:46.8363110Z E                  [1.19e+04, 2.72e+02],
2025-02-24T16:12:46.8363180Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T16:12:46.8363250Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:12:46.8363310Z E                  [1.19e+04, 3.06e+02],
2025-02-24T16:12:46.8363380Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T16:12:46.8363380Z 
2025-02-24T16:12:46.8363570Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8363720Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8363950Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8364210Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8364350Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8364660Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8364840Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T16:12:46.8364840Z 
2025-02-24T16:12:46.8365070Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a372810>
2025-02-24T16:12:46.8365320Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30ace6900>
2025-02-24T16:12:46.8365400Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8365540Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:12:46.8365690Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:12:46.8365860Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8366080Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T16:12:46.8366230Z 
2025-02-24T16:12:46.8366310Z     def test_generate_plot_ply(
2025-02-24T16:12:46.8366470Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8366690Z     ):
2025-02-24T16:12:46.8366770Z         """
2025-02-24T16:12:46.8366900Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8366970Z     
2025-02-24T16:12:46.8367070Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8367130Z     
2025-02-24T16:12:46.8367180Z         Parameters:
2025-02-24T16:12:46.8367240Z         ----------
2025-02-24T16:12:46.8367390Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:12:46.8367560Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:12:46.8367660Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8367710Z         """
2025-02-24T16:12:46.8367780Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8367870Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8368020Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8368070Z     
2025-02-24T16:12:46.8368230Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8368320Z             expected_values = expected.get(
2025-02-24T16:12:46.8368390Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8368470Z             ).values.flatten()
2025-02-24T16:12:46.8368610Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:12:46.8368670Z     
2025-02-24T16:12:46.8368790Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8368900Z                 np.testing.assert_allclose(
2025-02-24T16:12:46.8368970Z                     expected_values,
2025-02-24T16:12:46.8369050Z                     actual_values,
2025-02-24T16:12:46.8374770Z                     rtol=0.3,
2025-02-24T16:12:46.8375320Z                     atol=3,
2025-02-24T16:12:46.8376380Z                 )
2025-02-24T16:12:46.8376720Z             else:
2025-02-24T16:12:46.8377080Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:12:46.8377310Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8377550Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8377740Z             if data.stackgroup:
2025-02-24T16:12:46.8377920Z                 assert (
2025-02-24T16:12:46.8378130Z                     data.stackgroup
2025-02-24T16:12:46.8378320Z                     == getattr(
2025-02-24T16:12:46.8378560Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8378780Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8378960Z                     ).decode()
2025-02-24T16:12:46.8379120Z                 )
2025-02-24T16:12:46.8379310Z             if data.name:
2025-02-24T16:12:46.8379500Z                 assert (
2025-02-24T16:12:46.8379670Z                     data.name
2025-02-24T16:12:46.8379840Z                     == getattr(
2025-02-24T16:12:46.8380080Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8380320Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8380510Z                     ).decode()
2025-02-24T16:12:46.8380690Z                 )
2025-02-24T16:12:46.8380930Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8381130Z                 data.x,
2025-02-24T16:12:46.8383330Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:12:46.8384290Z                 rtol=0.3,
2025-02-24T16:12:46.8384510Z                 atol=3,
2025-02-24T16:12:46.8384670Z             )
2025-02-24T16:12:46.8384890Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8385050Z                 data.y,
2025-02-24T16:12:46.8385310Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:12:46.8385990Z                 rtol=0.3,
2025-02-24T16:12:46.8386150Z                 atol=3,
2025-02-24T16:12:46.8386340Z             )
2025-02-24T16:12:46.8386360Z 
2025-02-24T16:12:46.8387040Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:12:46.8387330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8387350Z 
2025-02-24T16:12:46.8388510Z args = (<function assert_allclose.<locals>.compare at 0x1301ebb00>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:12:46.8388740Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:12:46.8389350Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8389370Z 
2025-02-24T16:12:46.8389550Z     @wraps(func)
2025-02-24T16:12:46.8389760Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8389970Z         with self._recreate_cm():
2025-02-24T16:12:46.8390180Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8390380Z E           AssertionError: 
2025-02-24T16:12:46.8390610Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8390780Z E           
2025-02-24T16:12:46.8391000Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.8391210Z E           Max absolute difference: 22
2025-02-24T16:12:46.8391420Z E           Max relative difference: 0.8
2025-02-24T16:12:46.8391720Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:12:46.8391920Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.8392220Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:12:46.8392420Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.8392430Z 
2025-02-24T16:12:46.8392880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8396660Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8397660Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8399060Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T16:12:46.8399480Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8400490Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:12:46.8400980Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T16:12:46.8400990Z 
2025-02-24T16:12:46.8401580Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a372900>
2025-02-24T16:12:46.8402310Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x158c6bb60>
2025-02-24T16:12:46.8402590Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8402970Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:12:46.8403340Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:12:46.8403840Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8404490Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T16:12:46.8404530Z 
2025-02-24T16:12:46.8404800Z     def test_generate_plot_ply(
2025-02-24T16:12:46.8405230Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8405410Z     ):
2025-02-24T16:12:46.8405600Z         """
2025-02-24T16:12:46.8405900Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8406090Z     
2025-02-24T16:12:46.8406390Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8407040Z     
2025-02-24T16:12:46.8407230Z         Parameters:
2025-02-24T16:12:46.8407400Z         ----------
2025-02-24T16:12:46.8407800Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:12:46.8408350Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:12:46.8408570Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8408730Z         """
2025-02-24T16:12:46.8408940Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8409180Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8409600Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8409780Z     
2025-02-24T16:12:46.8410100Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8410320Z             expected_values = expected.get(
2025-02-24T16:12:46.8410520Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8410730Z             ).values.flatten()
2025-02-24T16:12:46.8411110Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:12:46.8411300Z     
2025-02-24T16:12:46.8411630Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8411860Z                 np.testing.assert_allclose(
2025-02-24T16:12:46.8412050Z                     expected_values,
2025-02-24T16:12:46.8412230Z                     actual_values,
2025-02-24T16:12:46.8412430Z                     rtol=0.3,
2025-02-24T16:12:46.8412640Z                     atol=3,
2025-02-24T16:12:46.8412810Z                 )
2025-02-24T16:12:46.8412980Z             else:
2025-02-24T16:12:46.8413300Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:12:46.8413590Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8413840Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8414040Z             if data.stackgroup:
2025-02-24T16:12:46.8414280Z                 assert (
2025-02-24T16:12:46.8414520Z                     data.stackgroup
2025-02-24T16:12:46.8414740Z                     == getattr(
2025-02-24T16:12:46.8415010Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8415260Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8416630Z                     ).decode()
2025-02-24T16:12:46.8416820Z                 )
2025-02-24T16:12:46.8416910Z             if data.name:
2025-02-24T16:12:46.8416990Z                 assert (
2025-02-24T16:12:46.8417060Z                     data.name
2025-02-24T16:12:46.8417120Z                     == getattr(
2025-02-24T16:12:46.8417230Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8417330Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8417410Z                     ).decode()
2025-02-24T16:12:46.8417470Z                 )
2025-02-24T16:12:46.8417550Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8417620Z                 data.x,
2025-02-24T16:12:46.8417760Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:12:46.8417840Z                 rtol=0.3,
2025-02-24T16:12:46.8417900Z                 atol=3,
2025-02-24T16:12:46.8417970Z             )
2025-02-24T16:12:46.8418060Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8418140Z                 data.y,
2025-02-24T16:12:46.8418240Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:12:46.8418310Z                 rtol=0.3,
2025-02-24T16:12:46.8418390Z                 atol=3,
2025-02-24T16:12:46.8418460Z             )
2025-02-24T16:12:46.8418470Z 
2025-02-24T16:12:46.8418620Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:12:46.8418740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8418740Z 
2025-02-24T16:12:46.8419100Z args = (<function assert_allclose.<locals>.compare at 0x1301eb7e0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:12:46.8419510Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:12:46.8419720Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8419850Z 
2025-02-24T16:12:46.8419920Z     @wraps(func)
2025-02-24T16:12:46.8419990Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8420050Z         with self._recreate_cm():
2025-02-24T16:12:46.8420130Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8420190Z E           AssertionError: 
2025-02-24T16:12:46.8420280Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8420340Z E           
2025-02-24T16:12:46.8420410Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.8420490Z E           Max absolute difference: 22
2025-02-24T16:12:46.8420560Z E           Max relative difference: 0.8
2025-02-24T16:12:46.8420690Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:12:46.8420790Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.8420910Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:12:46.8421000Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.8421010Z 
2025-02-24T16:12:46.8421180Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8421350Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T16:12:46.8421350Z 
2025-02-24T16:12:46.8421580Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a372d20>
2025-02-24T16:12:46.8421870Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x12a5ad5b0>
2025-02-24T16:12:46.8421950Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8422090Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:12:46.8422220Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:12:46.8422380Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8422600Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T16:12:46.8422610Z 
2025-02-24T16:12:46.8422690Z     def test_generate_plot_ply(
2025-02-24T16:12:46.8422820Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8422880Z     ):
2025-02-24T16:12:46.8422930Z         """
2025-02-24T16:12:46.8423040Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8423090Z     
2025-02-24T16:12:46.8423200Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8423250Z     
2025-02-24T16:12:46.8423310Z         Parameters:
2025-02-24T16:12:46.8423370Z         ----------
2025-02-24T16:12:46.8423500Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:12:46.8423620Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:12:46.8423690Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8423750Z         """
2025-02-24T16:12:46.8423830Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8423930Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8424080Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8424130Z     
2025-02-24T16:12:46.8424270Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8424360Z             expected_values = expected.get(
2025-02-24T16:12:46.8424430Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8424500Z             ).values.flatten()
2025-02-24T16:12:46.8424610Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:12:46.8424670Z     
2025-02-24T16:12:46.8424780Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8425130Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8425200Z                     expected_values,
2025-02-24T16:12:46.8425370Z                     actual_values,
2025-02-24T16:12:46.8425440Z                     rtol=0.3,
2025-02-24T16:12:46.8425500Z                     atol=3,
2025-02-24T16:12:46.8425550Z                 )
2025-02-24T16:12:46.8425560Z 
2025-02-24T16:12:46.8425700Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T16:12:46.8425820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8425820Z 
2025-02-24T16:12:46.8426170Z args = (<function assert_allclose.<locals>.compare at 0x1301eafc0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.8426240Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:12:46.8426450Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8426460Z 
2025-02-24T16:12:46.8426510Z     @wraps(func)
2025-02-24T16:12:46.8426570Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8426650Z         with self._recreate_cm():
2025-02-24T16:12:46.8426710Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8426780Z E           AssertionError: 
2025-02-24T16:12:46.8426870Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8426920Z E           
2025-02-24T16:12:46.8427020Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.8427110Z E           Max absolute difference: 34
2025-02-24T16:12:46.8427230Z E           Max relative difference: 0.71428571
2025-02-24T16:12:46.8427370Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.8427500Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.8427650Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.8427760Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.8427770Z 
2025-02-24T16:12:46.8428080Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8428250Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8428620Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8429030Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8429170Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8429440Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8429610Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T16:12:46.8429620Z 
2025-02-24T16:12:46.8429830Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x11a372de0>
2025-02-24T16:12:46.8430080Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x1714912e0>
2025-02-24T16:12:46.8430160Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8430290Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:12:46.8430420Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:12:46.8430600Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x11b1cce00>)
2025-02-24T16:12:46.8430810Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T16:12:46.8430810Z 
2025-02-24T16:12:46.8430900Z     def test_generate_plot_ply(
2025-02-24T16:12:46.8431060Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8431110Z     ):
2025-02-24T16:12:46.8431170Z         """
2025-02-24T16:12:46.8431270Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:12:46.8431450Z     
2025-02-24T16:12:46.8431570Z         Compares generated plot data with regression data.
2025-02-24T16:12:46.8431720Z     
2025-02-24T16:12:46.8431790Z         Parameters:
2025-02-24T16:12:46.8431850Z         ----------
2025-02-24T16:12:46.8431990Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:12:46.8432100Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:12:46.8432180Z         request: Pytest's request fixture.
2025-02-24T16:12:46.8432230Z         """
2025-02-24T16:12:46.8432310Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8432400Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8432540Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8432590Z     
2025-02-24T16:12:46.8432710Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:12:46.8432800Z             expected_values = expected.get(
2025-02-24T16:12:46.8432870Z                 "plot_data_hdf/" + item
2025-02-24T16:12:46.8432940Z             ).values.flatten()
2025-02-24T16:12:46.8433060Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:12:46.8433110Z     
2025-02-24T16:12:46.8433220Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:12:46.8433310Z                 np.testing.assert_allclose(
2025-02-24T16:12:46.8433390Z                     expected_values,
2025-02-24T16:12:46.8433450Z                     actual_values,
2025-02-24T16:12:46.8433510Z                     rtol=0.3,
2025-02-24T16:12:46.8433580Z                     atol=3,
2025-02-24T16:12:46.8433630Z                 )
2025-02-24T16:12:46.8433680Z             else:
2025-02-24T16:12:46.8433790Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:12:46.8433880Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8433970Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8434050Z             if data.stackgroup:
2025-02-24T16:12:46.8434100Z                 assert (
2025-02-24T16:12:46.8434170Z                     data.stackgroup
2025-02-24T16:12:46.8434230Z                     == getattr(
2025-02-24T16:12:46.8434320Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8434410Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8434470Z                     ).decode()
2025-02-24T16:12:46.8434520Z                 )
2025-02-24T16:12:46.8434580Z             if data.name:
2025-02-24T16:12:46.8434640Z                 assert (
2025-02-24T16:12:46.8434700Z                     data.name
2025-02-24T16:12:46.8434760Z                     == getattr(
2025-02-24T16:12:46.8434850Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8434920Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8434980Z                     ).decode()
2025-02-24T16:12:46.8435040Z                 )
2025-02-24T16:12:46.8435110Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8435160Z                 data.x,
2025-02-24T16:12:46.8435260Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:12:46.8435320Z                 rtol=0.3,
2025-02-24T16:12:46.8435370Z                 atol=3,
2025-02-24T16:12:46.8435420Z             )
2025-02-24T16:12:46.8435500Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8435550Z                 data.y,
2025-02-24T16:12:46.8435640Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:12:46.8435700Z                 rtol=0.3,
2025-02-24T16:12:46.8435760Z                 atol=3,
2025-02-24T16:12:46.8435810Z             )
2025-02-24T16:12:46.8435810Z 
2025-02-24T16:12:46.8435920Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:12:46.8436030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8436100Z 
2025-02-24T16:12:46.8436440Z args = (<function assert_allclose.<locals>.compare at 0x1301ea5c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.8436570Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:12:46.8436770Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:12:46.8436780Z 
2025-02-24T16:12:46.8436830Z     @wraps(func)
2025-02-24T16:12:46.8436900Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8436960Z         with self._recreate_cm():
2025-02-24T16:12:46.8437040Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8437100Z E           AssertionError: 
2025-02-24T16:12:46.8437200Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.8437260Z E           
2025-02-24T16:12:46.8437340Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.8437420Z E           Max absolute difference: 34
2025-02-24T16:12:46.8437520Z E           Max relative difference: 0.65
2025-02-24T16:12:46.8437640Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.8437730Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.8437860Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.8437950Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.8437950Z 
2025-02-24T16:12:46.8438130Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8438280Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:12:46.8438470Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:12:46.8438750Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:12:46.8438920Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:12:46.8439210Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:12:46.8439410Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T16:12:46.8439410Z 
2025-02-24T16:12:46.8439620Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37a660>
2025-02-24T16:12:46.8439880Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8440140Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12b6e0ad0>
2025-02-24T16:12:46.8440370Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T16:12:46.8440370Z 
2025-02-24T16:12:46.8440460Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8440510Z         self,
2025-02-24T16:12:46.8440580Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8440660Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8440720Z         request,
2025-02-24T16:12:46.8440770Z     ):
2025-02-24T16:12:46.8440860Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8441010Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8441080Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8441250Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8441320Z             plot_object = getattr(
2025-02-24T16:12:46.8441440Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8441510Z             )
2025-02-24T16:12:46.8441610Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8441760Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8441940Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8442020Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8442180Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8442230Z                 )
2025-02-24T16:12:46.8442240Z 
2025-02-24T16:12:46.8442360Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8442460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8442460Z 
2025-02-24T16:12:46.8442860Z args = (<function assert_allclose.<locals>.compare at 0x17710c540>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:12:46.8442960Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8443520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8443550Z 
2025-02-24T16:12:46.8443630Z     @wraps(func)
2025-02-24T16:12:46.8443690Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8443760Z         with self._recreate_cm():
2025-02-24T16:12:46.8444060Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8444180Z E           AssertionError: 
2025-02-24T16:12:46.8444290Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8444340Z E           
2025-02-24T16:12:46.8444430Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8444520Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.8444600Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8444740Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8444810Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8444940Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8445010Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8445020Z 
2025-02-24T16:12:46.8445210Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8445400Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T16:12:46.8445400Z 
2025-02-24T16:12:46.8445620Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37ade0>
2025-02-24T16:12:46.8445870Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8446130Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12b6e2720>
2025-02-24T16:12:46.8446370Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T16:12:46.8446370Z 
2025-02-24T16:12:46.8446450Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8446500Z         self,
2025-02-24T16:12:46.8446580Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8446660Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8446710Z         request,
2025-02-24T16:12:46.8446780Z     ):
2025-02-24T16:12:46.8446890Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8447050Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8447120Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8447270Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8447340Z             plot_object = getattr(
2025-02-24T16:12:46.8447450Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8447500Z             )
2025-02-24T16:12:46.8447580Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8447720Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8447810Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8448150Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8448270Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8448400Z                 )
2025-02-24T16:12:46.8448410Z 
2025-02-24T16:12:46.8448530Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8448630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8448630Z 
2025-02-24T16:12:46.8449020Z args = (<function assert_allclose.<locals>.compare at 0x17710eca0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:12:46.8449120Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8449330Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8449330Z 
2025-02-24T16:12:46.8449390Z     @wraps(func)
2025-02-24T16:12:46.8449460Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8449530Z         with self._recreate_cm():
2025-02-24T16:12:46.8449600Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8449670Z E           AssertionError: 
2025-02-24T16:12:46.8449780Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8449840Z E           
2025-02-24T16:12:46.8449920Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8450000Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.8450080Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8450210Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8450280Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8450410Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8450480Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8450480Z 
2025-02-24T16:12:46.8450650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8450840Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T16:12:46.8450850Z 
2025-02-24T16:12:46.8451070Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b200>
2025-02-24T16:12:46.8451320Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8451590Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31b17c770>
2025-02-24T16:12:46.8451830Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T16:12:46.8451840Z 
2025-02-24T16:12:46.8451910Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8451960Z         self,
2025-02-24T16:12:46.8452040Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8452110Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8452170Z         request,
2025-02-24T16:12:46.8452220Z     ):
2025-02-24T16:12:46.8452310Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8452460Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8452530Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8452680Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8452750Z             plot_object = getattr(
2025-02-24T16:12:46.8452860Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8452910Z             )
2025-02-24T16:12:46.8453000Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8453140Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8453220Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8453300Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8453410Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8453550Z                 )
2025-02-24T16:12:46.8453550Z 
2025-02-24T16:12:46.8453690Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8453910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8453910Z 
2025-02-24T16:12:46.8454300Z args = (<function assert_allclose.<locals>.compare at 0x17710c900>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:12:46.8454400Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8454600Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8454610Z 
2025-02-24T16:12:46.8454660Z     @wraps(func)
2025-02-24T16:12:46.8454740Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8454820Z         with self._recreate_cm():
2025-02-24T16:12:46.8454910Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8455010Z E           AssertionError: 
2025-02-24T16:12:46.8455110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8455170Z E           
2025-02-24T16:12:46.8455250Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8455340Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.8455460Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8455610Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8455690Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8455820Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8455920Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8455930Z 
2025-02-24T16:12:46.8456110Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8456320Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T16:12:46.8456330Z 
2025-02-24T16:12:46.8456580Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b350>
2025-02-24T16:12:46.8456840Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8457140Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31b0e3aa0>
2025-02-24T16:12:46.8457370Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T16:12:46.8457380Z 
2025-02-24T16:12:46.8457450Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8457500Z         self,
2025-02-24T16:12:46.8457590Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8457670Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8457730Z         request,
2025-02-24T16:12:46.8457780Z     ):
2025-02-24T16:12:46.8457910Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8458070Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8458140Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8458300Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8458400Z             plot_object = getattr(
2025-02-24T16:12:46.8458540Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8458590Z             )
2025-02-24T16:12:46.8458680Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8458830Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8458930Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8459000Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8459140Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8459210Z                 )
2025-02-24T16:12:46.8459290Z 
2025-02-24T16:12:46.8459440Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8459550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8459710Z 
2025-02-24T16:12:46.8460090Z args = (<function assert_allclose.<locals>.compare at 0x177128180>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:12:46.8460190Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8460410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8460420Z 
2025-02-24T16:12:46.8460480Z     @wraps(func)
2025-02-24T16:12:46.8460560Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8460630Z         with self._recreate_cm():
2025-02-24T16:12:46.8460720Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8460790Z E           AssertionError: 
2025-02-24T16:12:46.8460900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8460960Z E           
2025-02-24T16:12:46.8461050Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8461130Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.8461210Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8461360Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8461440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8466600Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8466700Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8466700Z 
2025-02-24T16:12:46.8466880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8467070Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T16:12:46.8467080Z 
2025-02-24T16:12:46.8467300Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b440>
2025-02-24T16:12:46.8467550Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8467840Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31b0e2390>
2025-02-24T16:12:46.8468100Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T16:12:46.8468110Z 
2025-02-24T16:12:46.8468190Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8468240Z         self,
2025-02-24T16:12:46.8468320Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8468390Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8468440Z         request,
2025-02-24T16:12:46.8468490Z     ):
2025-02-24T16:12:46.8468580Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8468740Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8468810Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8468960Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8469030Z             plot_object = getattr(
2025-02-24T16:12:46.8469140Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8469190Z             )
2025-02-24T16:12:46.8469270Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8469410Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8469500Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8469580Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8469690Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8469740Z                 )
2025-02-24T16:12:46.8469740Z 
2025-02-24T16:12:46.8469870Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8470140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8470150Z 
2025-02-24T16:12:46.8470580Z args = (<function assert_allclose.<locals>.compare at 0x177129620>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:12:46.8470670Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8470880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8470880Z 
2025-02-24T16:12:46.8470940Z     @wraps(func)
2025-02-24T16:12:46.8471000Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8471080Z         with self._recreate_cm():
2025-02-24T16:12:46.8471150Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8471210Z E           AssertionError: 
2025-02-24T16:12:46.8471300Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8471360Z E           
2025-02-24T16:12:46.8471440Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8471530Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.8471610Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8471740Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8471810Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8471940Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8472020Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8472030Z 
2025-02-24T16:12:46.8472200Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8472390Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T16:12:46.8472390Z 
2025-02-24T16:12:46.8472600Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b500>
2025-02-24T16:12:46.8472860Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8473120Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1749fa990>
2025-02-24T16:12:46.8473350Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T16:12:46.8473360Z 
2025-02-24T16:12:46.8473430Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8473480Z         self,
2025-02-24T16:12:46.8473560Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8473630Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8473690Z         request,
2025-02-24T16:12:46.8473740Z     ):
2025-02-24T16:12:46.8473840Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8474000Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8474070Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8474220Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8474280Z             plot_object = getattr(
2025-02-24T16:12:46.8474400Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8474450Z             )
2025-02-24T16:12:46.8474530Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8474670Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8474760Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8474840Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8474940Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8475000Z                 )
2025-02-24T16:12:46.8475000Z 
2025-02-24T16:12:46.8475120Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8475220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8475340Z 
2025-02-24T16:12:46.8475720Z args = (<function assert_allclose.<locals>.compare at 0x17712a700>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:12:46.8475890Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8476090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8476100Z 
2025-02-24T16:12:46.8476150Z     @wraps(func)
2025-02-24T16:12:46.8476220Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8476290Z         with self._recreate_cm():
2025-02-24T16:12:46.8476360Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8476420Z E           AssertionError: 
2025-02-24T16:12:46.8476510Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8476580Z E           
2025-02-24T16:12:46.8476680Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8476770Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.8476860Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8476990Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8477060Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8477180Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8477260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8477270Z 
2025-02-24T16:12:46.8477440Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8477630Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T16:12:46.8477630Z 
2025-02-24T16:12:46.8477850Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b5c0>
2025-02-24T16:12:46.8478090Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8478360Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x317aca120>
2025-02-24T16:12:46.8478600Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T16:12:46.8478610Z 
2025-02-24T16:12:46.8478700Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8478750Z         self,
2025-02-24T16:12:46.8478840Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8478930Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8478990Z         request,
2025-02-24T16:12:46.8479040Z     ):
2025-02-24T16:12:46.8479130Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8479280Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8479350Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8479500Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8479580Z             plot_object = getattr(
2025-02-24T16:12:46.8479700Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8479800Z             )
2025-02-24T16:12:46.8479900Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8480080Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8480180Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8480260Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8480380Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8480430Z                 )
2025-02-24T16:12:46.8480440Z 
2025-02-24T16:12:46.8480560Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8480660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8480670Z 
2025-02-24T16:12:46.8481060Z args = (<function assert_allclose.<locals>.compare at 0x17712ae80>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:12:46.8481290Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8481510Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8481520Z 
2025-02-24T16:12:46.8481580Z     @wraps(func)
2025-02-24T16:12:46.8481640Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8481710Z         with self._recreate_cm():
2025-02-24T16:12:46.8481780Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8481840Z E           AssertionError: 
2025-02-24T16:12:46.8481940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8481990Z E           
2025-02-24T16:12:46.8482070Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8482150Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.8482240Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8482360Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8482440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8482570Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8482630Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8482640Z 
2025-02-24T16:12:46.8482810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8483000Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T16:12:46.8483010Z 
2025-02-24T16:12:46.8483230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b680>
2025-02-24T16:12:46.8483480Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8483850Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3990eac60>
2025-02-24T16:12:46.8484090Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T16:12:46.8484090Z 
2025-02-24T16:12:46.8484200Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8484270Z         self,
2025-02-24T16:12:46.8484350Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8484420Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8484480Z         request,
2025-02-24T16:12:46.8484530Z     ):
2025-02-24T16:12:46.8484620Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8484780Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8484840Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8485000Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8485080Z             plot_object = getattr(
2025-02-24T16:12:46.8485210Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8485260Z             )
2025-02-24T16:12:46.8485350Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8485490Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8485610Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8485700Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8485800Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8485860Z                 )
2025-02-24T16:12:46.8485860Z 
2025-02-24T16:12:46.8485980Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8486080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8486080Z 
2025-02-24T16:12:46.8486450Z args = (<function assert_allclose.<locals>.compare at 0x177128860>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:12:46.8486650Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8486910Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8486920Z 
2025-02-24T16:12:46.8486970Z     @wraps(func)
2025-02-24T16:12:46.8487050Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8487140Z         with self._recreate_cm():
2025-02-24T16:12:46.8487230Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8487310Z E           AssertionError: 
2025-02-24T16:12:46.8487400Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8487450Z E           
2025-02-24T16:12:46.8487530Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8487610Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.8487700Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8487830Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8487900Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8488030Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.8488120Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8488130Z 
2025-02-24T16:12:46.8488300Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8488480Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T16:12:46.8488480Z 
2025-02-24T16:12:46.8488710Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b740>
2025-02-24T16:12:46.8488980Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8489240Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3990ebf20>
2025-02-24T16:12:46.8489470Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T16:12:46.8489480Z 
2025-02-24T16:12:46.8489550Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8489610Z         self,
2025-02-24T16:12:46.8489690Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8489760Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8489810Z         request,
2025-02-24T16:12:46.8489860Z     ):
2025-02-24T16:12:46.8489950Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8490100Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8490170Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8490310Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8490380Z             plot_object = getattr(
2025-02-24T16:12:46.8490490Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8490540Z             )
2025-02-24T16:12:46.8490620Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8490760Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8490850Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8490930Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8491040Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8491090Z                 )
2025-02-24T16:12:46.8491100Z 
2025-02-24T16:12:46.8491210Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8491320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8491320Z 
2025-02-24T16:12:46.8491700Z args = (<function assert_allclose.<locals>.compare at 0x17712a3e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:12:46.8491860Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8492070Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8492120Z 
2025-02-24T16:12:46.8492170Z     @wraps(func)
2025-02-24T16:12:46.8492250Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8492310Z         with self._recreate_cm():
2025-02-24T16:12:46.8492380Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8492450Z E           AssertionError: 
2025-02-24T16:12:46.8492540Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8492600Z E           
2025-02-24T16:12:46.8492680Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8492770Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.8492840Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8492980Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8493050Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8493170Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8493260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8493260Z 
2025-02-24T16:12:46.8493420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8493600Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T16:12:46.8493610Z 
2025-02-24T16:12:46.8493820Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b800>
2025-02-24T16:12:46.8494060Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8494330Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x11b2fac90>
2025-02-24T16:12:46.8494560Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T16:12:46.8494580Z 
2025-02-24T16:12:46.8494660Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8494710Z         self,
2025-02-24T16:12:46.8494790Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8494870Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8494930Z         request,
2025-02-24T16:12:46.8494980Z     ):
2025-02-24T16:12:46.8495070Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8495220Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8495290Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8495430Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8495500Z             plot_object = getattr(
2025-02-24T16:12:46.8495600Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8495660Z             )
2025-02-24T16:12:46.8495740Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8495880Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8495970Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8496050Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8496160Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8496210Z                 )
2025-02-24T16:12:46.8496210Z 
2025-02-24T16:12:46.8496350Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8496460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8496460Z 
2025-02-24T16:12:46.8496830Z args = (<function assert_allclose.<locals>.compare at 0x177128220>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:12:46.8496920Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8497120Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8497240Z 
2025-02-24T16:12:46.8497300Z     @wraps(func)
2025-02-24T16:12:46.8497550Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8497630Z         with self._recreate_cm():
2025-02-24T16:12:46.8497710Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8497780Z E           AssertionError: 
2025-02-24T16:12:46.8497870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8497930Z E           
2025-02-24T16:12:46.8498010Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8498110Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.8498190Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8498340Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8498440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8498570Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8498650Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8498650Z 
2025-02-24T16:12:46.8498820Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8499010Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T16:12:46.8499010Z 
2025-02-24T16:12:46.8499240Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b8c0>
2025-02-24T16:12:46.8499500Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8499760Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x11b2f9f10>
2025-02-24T16:12:46.8499990Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T16:12:46.8500000Z 
2025-02-24T16:12:46.8500070Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8500130Z         self,
2025-02-24T16:12:46.8500210Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8500290Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8500370Z         request,
2025-02-24T16:12:46.8500440Z     ):
2025-02-24T16:12:46.8500530Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8500680Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8500750Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8500890Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8500960Z             plot_object = getattr(
2025-02-24T16:12:46.8501080Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8501160Z             )
2025-02-24T16:12:46.8501270Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8501410Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8501510Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8501600Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8501710Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8501760Z                 )
2025-02-24T16:12:46.8501760Z 
2025-02-24T16:12:46.8501890Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8501980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8501990Z 
2025-02-24T16:12:46.8502390Z args = (<function assert_allclose.<locals>.compare at 0x1771299e0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:12:46.8502510Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8502740Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8502830Z 
2025-02-24T16:12:46.8502900Z     @wraps(func)
2025-02-24T16:12:46.8503000Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8503100Z         with self._recreate_cm():
2025-02-24T16:12:46.8503340Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8503430Z E           AssertionError: 
2025-02-24T16:12:46.8503560Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8503640Z E           
2025-02-24T16:12:46.8503730Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8503810Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.8503910Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8504080Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8504160Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8504320Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8504410Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8504430Z 
2025-02-24T16:12:46.8504640Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8504870Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T16:12:46.8504880Z 
2025-02-24T16:12:46.8505110Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37b980>
2025-02-24T16:12:46.8505410Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8505690Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31b0e2a50>
2025-02-24T16:12:46.8505960Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T16:12:46.8505970Z 
2025-02-24T16:12:46.8506070Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8506130Z         self,
2025-02-24T16:12:46.8506210Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8506280Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8506330Z         request,
2025-02-24T16:12:46.8506390Z     ):
2025-02-24T16:12:46.8506470Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8506850Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8506920Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8507080Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8507160Z             plot_object = getattr(
2025-02-24T16:12:46.8507260Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8507310Z             )
2025-02-24T16:12:46.8507400Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8507660Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8507770Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8507870Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8507980Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8508030Z                 )
2025-02-24T16:12:46.8508040Z 
2025-02-24T16:12:46.8508380Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8508530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8508540Z 
2025-02-24T16:12:46.8508910Z args = (<function assert_allclose.<locals>.compare at 0x17712be20>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:12:46.8509000Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8509320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8509330Z 
2025-02-24T16:12:46.8509390Z     @wraps(func)
2025-02-24T16:12:46.8509620Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8509690Z         with self._recreate_cm():
2025-02-24T16:12:46.8509760Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8509890Z E           AssertionError: 
2025-02-24T16:12:46.8509990Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8510040Z E           
2025-02-24T16:12:46.8510120Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.8510210Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.8510280Z E           Max relative difference: 4.76021355
2025-02-24T16:12:46.8510410Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8510500Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8510620Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8510690Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8510690Z 
2025-02-24T16:12:46.8510860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8511050Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T16:12:46.8511060Z 
2025-02-24T16:12:46.8511280Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37ba40>
2025-02-24T16:12:46.8511550Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8511840Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31b0e1130>
2025-02-24T16:12:46.8512080Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T16:12:46.8512080Z 
2025-02-24T16:12:46.8512150Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8512210Z         self,
2025-02-24T16:12:46.8512280Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8512370Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8512430Z         request,
2025-02-24T16:12:46.8512480Z     ):
2025-02-24T16:12:46.8512580Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8512740Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8512800Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8512970Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8513040Z             plot_object = getattr(
2025-02-24T16:12:46.8513150Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8513200Z             )
2025-02-24T16:12:46.8513280Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8513420Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8513530Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8513630Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8513740Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8513800Z                 )
2025-02-24T16:12:46.8513800Z 
2025-02-24T16:12:46.8513920Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8514020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8514030Z 
2025-02-24T16:12:46.8514390Z args = (<function assert_allclose.<locals>.compare at 0x17710cf40>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:12:46.8514480Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8514700Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8514710Z 
2025-02-24T16:12:46.8514760Z     @wraps(func)
2025-02-24T16:12:46.8514840Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8514920Z         with self._recreate_cm():
2025-02-24T16:12:46.8515060Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8515130Z E           AssertionError: 
2025-02-24T16:12:46.8515220Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8515340Z E           
2025-02-24T16:12:46.8515440Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8515530Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.8515610Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8515740Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8515810Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8515940Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8516010Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8516010Z 
2025-02-24T16:12:46.8516180Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8516370Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T16:12:46.8516370Z 
2025-02-24T16:12:46.8516590Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37bb90>
2025-02-24T16:12:46.8516840Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8517110Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1751d9100>
2025-02-24T16:12:46.8517340Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T16:12:46.8517340Z 
2025-02-24T16:12:46.8517410Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8517470Z         self,
2025-02-24T16:12:46.8517550Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8517620Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8517670Z         request,
2025-02-24T16:12:46.8517720Z     ):
2025-02-24T16:12:46.8517810Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8517960Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8518040Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8518180Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8518250Z             plot_object = getattr(
2025-02-24T16:12:46.8518360Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8518410Z             )
2025-02-24T16:12:46.8518500Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8518630Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8518720Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8518800Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8518910Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8518960Z                 )
2025-02-24T16:12:46.8519030Z 
2025-02-24T16:12:46.8519150Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8519400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8519420Z 
2025-02-24T16:12:46.8519850Z args = (<function assert_allclose.<locals>.compare at 0x17710ede0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:12:46.8519960Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8520760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8520770Z 
2025-02-24T16:12:46.8520840Z     @wraps(func)
2025-02-24T16:12:46.8520930Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8521010Z         with self._recreate_cm():
2025-02-24T16:12:46.8521120Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8521190Z E           AssertionError: 
2025-02-24T16:12:46.8521550Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8521630Z E           
2025-02-24T16:12:46.8521730Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8521960Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.8522040Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8522170Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8522240Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8522370Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8522440Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8522440Z 
2025-02-24T16:12:46.8522610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8522800Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T16:12:46.8522810Z 
2025-02-24T16:12:46.8523020Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37bce0>
2025-02-24T16:12:46.8523320Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8523600Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1751dbad0>
2025-02-24T16:12:46.8523870Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T16:12:46.8523880Z 
2025-02-24T16:12:46.8523990Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8524050Z         self,
2025-02-24T16:12:46.8524120Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8524190Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8524240Z         request,
2025-02-24T16:12:46.8524300Z     ):
2025-02-24T16:12:46.8524390Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8524560Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8524630Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8524780Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8525680Z             plot_object = getattr(
2025-02-24T16:12:46.8525800Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8525850Z             )
2025-02-24T16:12:46.8525930Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8526070Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8526160Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8526240Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8526350Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8526400Z                 )
2025-02-24T16:12:46.8526400Z 
2025-02-24T16:12:46.8526530Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8526640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8526640Z 
2025-02-24T16:12:46.8527040Z args = (<function assert_allclose.<locals>.compare at 0x17712a7a0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:12:46.8527130Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8527760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8527780Z 
2025-02-24T16:12:46.8527850Z     @wraps(func)
2025-02-24T16:12:46.8527930Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8528020Z         with self._recreate_cm():
2025-02-24T16:12:46.8528100Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8528170Z E           AssertionError: 
2025-02-24T16:12:46.8528260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8528420Z E           
2025-02-24T16:12:46.8528500Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8528590Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.8528740Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8537480Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8537980Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8538130Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8538200Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8538200Z 
2025-02-24T16:12:46.8538370Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8538710Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T16:12:46.8538720Z 
2025-02-24T16:12:46.8538960Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37bda0>
2025-02-24T16:12:46.8539620Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>
2025-02-24T16:12:46.8540060Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17e73e360>
2025-02-24T16:12:46.8540570Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T16:12:46.8540680Z 
2025-02-24T16:12:46.8540770Z     def test_calculate_plotting_data(
2025-02-24T16:12:46.8540830Z         self,
2025-02-24T16:12:46.8541160Z         plotter_calculate_plotting_data,
2025-02-24T16:12:46.8541250Z         calculate_plotting_data_hdf,
2025-02-24T16:12:46.8541310Z         request,
2025-02-24T16:12:46.8541360Z     ):
2025-02-24T16:12:46.8541450Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8541600Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:12:46.8541670Z         group = "plot_data_hdf/"
2025-02-24T16:12:46.8541820Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:12:46.8541890Z             plot_object = getattr(
2025-02-24T16:12:46.8542000Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:12:46.8542050Z             )
2025-02-24T16:12:46.8542140Z             if attribute_type == "attributes_np":
2025-02-24T16:12:46.8542290Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:12:46.8542410Z                     plot_object = plot_object.cgs.value
2025-02-24T16:12:46.8542490Z >               np.testing.assert_allclose(
2025-02-24T16:12:46.8542600Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:12:46.8542660Z                 )
2025-02-24T16:12:46.8542660Z 
2025-02-24T16:12:46.8542780Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:12:46.8542880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8542880Z 
2025-02-24T16:12:46.8543270Z args = (<function assert_allclose.<locals>.compare at 0x177128860>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:12:46.8543360Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8543570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8543580Z 
2025-02-24T16:12:46.8543630Z     @wraps(func)
2025-02-24T16:12:46.8543690Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8543780Z         with self._recreate_cm():
2025-02-24T16:12:46.8543850Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8543920Z E           AssertionError: 
2025-02-24T16:12:46.8544020Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8544090Z E           
2025-02-24T16:12:46.8544200Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.8544420Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.8544530Z E           Max relative difference: 178.93768705
2025-02-24T16:12:46.8544800Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8544900Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8545040Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.8545150Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8545160Z 
2025-02-24T16:12:46.8545340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8545540Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T16:12:46.8545550Z 
2025-02-24T16:12:46.8545830Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2acbf0>
2025-02-24T16:12:46.8546110Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15f576a80>
2025-02-24T16:12:46.8546220Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8546300Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8546400Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8546640Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8546810Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8547030Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T16:12:46.8547040Z 
2025-02-24T16:12:46.8547110Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8547260Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8547320Z     ):
2025-02-24T16:12:46.8547400Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8547490Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8547630Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8547690Z     
2025-02-24T16:12:46.8547800Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8547890Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8548040Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8548240Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8548430Z             )
2025-02-24T16:12:46.8548480Z     
2025-02-24T16:12:46.8548560Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8548650Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8548720Z             if data.stackgroup:
2025-02-24T16:12:46.8548780Z                 assert (
2025-02-24T16:12:46.8548840Z                     data.stackgroup
2025-02-24T16:12:46.8548920Z                     == getattr(
2025-02-24T16:12:46.8549020Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8549110Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8549180Z                     ).decode()
2025-02-24T16:12:46.8549230Z                 )
2025-02-24T16:12:46.8549290Z             if data.name:
2025-02-24T16:12:46.8549340Z                 assert (
2025-02-24T16:12:46.8549410Z                     data.name
2025-02-24T16:12:46.8549470Z                     == getattr(
2025-02-24T16:12:46.8549550Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8549640Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8549690Z                     ).decode()
2025-02-24T16:12:46.8549750Z                 )
2025-02-24T16:12:46.8549820Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8549930Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8550000Z             )
2025-02-24T16:12:46.8550080Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8550200Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8550350Z             )
2025-02-24T16:12:46.8550350Z 
2025-02-24T16:12:46.8550480Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8550630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8550640Z 
2025-02-24T16:12:46.8551010Z args = (<function assert_allclose.<locals>.compare at 0x17668fc40>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:12:46.8551110Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8551320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8551330Z 
2025-02-24T16:12:46.8551380Z     @wraps(func)
2025-02-24T16:12:46.8551440Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8551510Z         with self._recreate_cm():
2025-02-24T16:12:46.8551600Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8551670Z E           AssertionError: 
2025-02-24T16:12:46.8551770Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8551830Z E           
2025-02-24T16:12:46.8551900Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8551990Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.8552070Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8552280Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8552360Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8552480Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8552550Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8552550Z 
2025-02-24T16:12:46.8552740Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8552940Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T16:12:46.8552950Z 
2025-02-24T16:12:46.8553170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2aed20>
2025-02-24T16:12:46.8553430Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x317a8d040>
2025-02-24T16:12:46.8553520Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8553590Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8553680Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8553770Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8553940Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8554130Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T16:12:46.8554140Z 
2025-02-24T16:12:46.8554200Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8554350Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8554400Z     ):
2025-02-24T16:12:46.8554480Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8554570Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8554720Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8554770Z     
2025-02-24T16:12:46.8554860Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8554940Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8555060Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8555150Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8555200Z             )
2025-02-24T16:12:46.8555240Z     
2025-02-24T16:12:46.8555330Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8555410Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8555480Z             if data.stackgroup:
2025-02-24T16:12:46.8555660Z                 assert (
2025-02-24T16:12:46.8555740Z                     data.stackgroup
2025-02-24T16:12:46.8555800Z                     == getattr(
2025-02-24T16:12:46.8556040Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8556120Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8556180Z                     ).decode()
2025-02-24T16:12:46.8556240Z                 )
2025-02-24T16:12:46.8556300Z             if data.name:
2025-02-24T16:12:46.8556360Z                 assert (
2025-02-24T16:12:46.8556420Z                     data.name
2025-02-24T16:12:46.8556470Z                     == getattr(
2025-02-24T16:12:46.8556570Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8556640Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8556700Z                     ).decode()
2025-02-24T16:12:46.8556760Z                 )
2025-02-24T16:12:46.8556840Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8556970Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8557020Z             )
2025-02-24T16:12:46.8557100Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8557200Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8557250Z             )
2025-02-24T16:12:46.8557250Z 
2025-02-24T16:12:46.8557370Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8557500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8557510Z 
2025-02-24T16:12:46.8557930Z args = (<function assert_allclose.<locals>.compare at 0x17712bec0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:12:46.8558020Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8558250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8558260Z 
2025-02-24T16:12:46.8558320Z     @wraps(func)
2025-02-24T16:12:46.8558600Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8558740Z         with self._recreate_cm():
2025-02-24T16:12:46.8558810Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8558930Z E           AssertionError: 
2025-02-24T16:12:46.8559190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8559250Z E           
2025-02-24T16:12:46.8559330Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8559410Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.8559500Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8559630Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8559710Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8559840Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8559910Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8559920Z 
2025-02-24T16:12:46.8560090Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8560270Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T16:12:46.8560270Z 
2025-02-24T16:12:46.8560500Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac170>
2025-02-24T16:12:46.8560780Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16c913440>
2025-02-24T16:12:46.8560860Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8560940Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8561040Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8561140Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8561310Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8561650Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T16:12:46.8561650Z 
2025-02-24T16:12:46.8561780Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8561920Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8561980Z     ):
2025-02-24T16:12:46.8562050Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8562150Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8562290Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8562340Z     
2025-02-24T16:12:46.8562440Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8562510Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8562650Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8562750Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8562810Z             )
2025-02-24T16:12:46.8562860Z     
2025-02-24T16:12:46.8562940Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8563040Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8563110Z             if data.stackgroup:
2025-02-24T16:12:46.8563160Z                 assert (
2025-02-24T16:12:46.8563230Z                     data.stackgroup
2025-02-24T16:12:46.8563290Z                     == getattr(
2025-02-24T16:12:46.8563380Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8563460Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8563530Z                     ).decode()
2025-02-24T16:12:46.8563580Z                 )
2025-02-24T16:12:46.8563640Z             if data.name:
2025-02-24T16:12:46.8563690Z                 assert (
2025-02-24T16:12:46.8563760Z                     data.name
2025-02-24T16:12:46.8563810Z                     == getattr(
2025-02-24T16:12:46.8563900Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8563980Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8564040Z                     ).decode()
2025-02-24T16:12:46.8564100Z                 )
2025-02-24T16:12:46.8564170Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8564280Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8564350Z             )
2025-02-24T16:12:46.8564430Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8564540Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8564590Z             )
2025-02-24T16:12:46.8564590Z 
2025-02-24T16:12:46.8564710Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8564810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8564820Z 
2025-02-24T16:12:46.8565380Z args = (<function assert_allclose.<locals>.compare at 0x1766e0860>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:12:46.8565480Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8565690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8565690Z 
2025-02-24T16:12:46.8565750Z     @wraps(func)
2025-02-24T16:12:46.8565810Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8565880Z         with self._recreate_cm():
2025-02-24T16:12:46.8565960Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8566020Z E           AssertionError: 
2025-02-24T16:12:46.8566120Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8566170Z E           
2025-02-24T16:12:46.8566250Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8566350Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.8566440Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8566680Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8566750Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8566960Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8567030Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8567030Z 
2025-02-24T16:12:46.8567210Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8567390Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T16:12:46.8567400Z 
2025-02-24T16:12:46.8567620Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac260>
2025-02-24T16:12:46.8567870Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16dad9700>
2025-02-24T16:12:46.8567950Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8568020Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8568110Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8568200Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8568370Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8568570Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T16:12:46.8568570Z 
2025-02-24T16:12:46.8568640Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8568780Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8568830Z     ):
2025-02-24T16:12:46.8568910Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8569000Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8569150Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8569210Z     
2025-02-24T16:12:46.8569320Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8569410Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8569530Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8569630Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8569680Z             )
2025-02-24T16:12:46.8569730Z     
2025-02-24T16:12:46.8569830Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8569930Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8570000Z             if data.stackgroup:
2025-02-24T16:12:46.8570070Z                 assert (
2025-02-24T16:12:46.8570150Z                     data.stackgroup
2025-02-24T16:12:46.8570220Z                     == getattr(
2025-02-24T16:12:46.8570310Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8570380Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8570450Z                     ).decode()
2025-02-24T16:12:46.8570500Z                 )
2025-02-24T16:12:46.8570580Z             if data.name:
2025-02-24T16:12:46.8570650Z                 assert (
2025-02-24T16:12:46.8570700Z                     data.name
2025-02-24T16:12:46.8570770Z                     == getattr(
2025-02-24T16:12:46.8570850Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8570940Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8570990Z                     ).decode()
2025-02-24T16:12:46.8571040Z                 )
2025-02-24T16:12:46.8571120Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8571230Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8571300Z             )
2025-02-24T16:12:46.8571370Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8571480Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8571520Z             )
2025-02-24T16:12:46.8571530Z 
2025-02-24T16:12:46.8571650Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8571830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8571830Z 
2025-02-24T16:12:46.8572200Z args = (<function assert_allclose.<locals>.compare at 0x1766e0e00>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:12:46.8572390Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8572610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8572620Z 
2025-02-24T16:12:46.8572680Z     @wraps(func)
2025-02-24T16:12:46.8572750Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8572810Z         with self._recreate_cm():
2025-02-24T16:12:46.8572890Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8572960Z E           AssertionError: 
2025-02-24T16:12:46.8573050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8573100Z E           
2025-02-24T16:12:46.8573180Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8573430Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.8573590Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8573890Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8573970Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8574100Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8574170Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8574170Z 
2025-02-24T16:12:46.8574350Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8574530Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T16:12:46.8574530Z 
2025-02-24T16:12:46.8574740Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a37aab0>
2025-02-24T16:12:46.8575010Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16dada540>
2025-02-24T16:12:46.8575090Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8575160Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8575250Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8575340Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8575560Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8575760Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T16:12:46.8575770Z 
2025-02-24T16:12:46.8575830Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8575980Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8576030Z     ):
2025-02-24T16:12:46.8576110Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8576200Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8576350Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8576400Z     
2025-02-24T16:12:46.8576500Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8576580Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8576690Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8576790Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8576840Z             )
2025-02-24T16:12:46.8576890Z     
2025-02-24T16:12:46.8576970Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8577060Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8577130Z             if data.stackgroup:
2025-02-24T16:12:46.8577190Z                 assert (
2025-02-24T16:12:46.8577250Z                     data.stackgroup
2025-02-24T16:12:46.8577360Z                     == getattr(
2025-02-24T16:12:46.8577630Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8577720Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8577900Z                     ).decode()
2025-02-24T16:12:46.8577950Z                 )
2025-02-24T16:12:46.8578010Z             if data.name:
2025-02-24T16:12:46.8578070Z                 assert (
2025-02-24T16:12:46.8578130Z                     data.name
2025-02-24T16:12:46.8578190Z                     == getattr(
2025-02-24T16:12:46.8578550Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8578630Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8578700Z                     ).decode()
2025-02-24T16:12:46.8578750Z                 )
2025-02-24T16:12:46.8578820Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8578930Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8578980Z             )
2025-02-24T16:12:46.8579050Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8579160Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8579220Z             )
2025-02-24T16:12:46.8579220Z 
2025-02-24T16:12:46.8579340Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8579440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8579450Z 
2025-02-24T16:12:46.8580030Z args = (<function assert_allclose.<locals>.compare at 0x1766b5800>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:12:46.8580260Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8580680Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8580680Z 
2025-02-24T16:12:46.8580740Z     @wraps(func)
2025-02-24T16:12:46.8581220Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8581310Z         with self._recreate_cm():
2025-02-24T16:12:46.8581540Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8581620Z E           AssertionError: 
2025-02-24T16:12:46.8581710Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8581760Z E           
2025-02-24T16:12:46.8581850Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8581940Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.8582020Z E           Max relative difference: 15766.1580412
2025-02-24T16:12:46.8582140Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8582220Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8582340Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8582410Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8582420Z 
2025-02-24T16:12:46.8582610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8582790Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T16:12:46.8582800Z 
2025-02-24T16:12:46.8583020Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a378b60>
2025-02-24T16:12:46.8583270Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31666ff20>
2025-02-24T16:12:46.8583360Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8583430Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8583520Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8583600Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8583770Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8583970Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T16:12:46.8583980Z 
2025-02-24T16:12:46.8584160Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8584350Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8584410Z     ):
2025-02-24T16:12:46.8584550Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8584640Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8584780Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8584830Z     
2025-02-24T16:12:46.8585290Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8585370Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8585490Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8585580Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8585640Z             )
2025-02-24T16:12:46.8585690Z     
2025-02-24T16:12:46.8585770Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8585860Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8585930Z             if data.stackgroup:
2025-02-24T16:12:46.8585990Z                 assert (
2025-02-24T16:12:46.8586050Z                     data.stackgroup
2025-02-24T16:12:46.8586120Z                     == getattr(
2025-02-24T16:12:46.8586200Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8586300Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8586370Z                     ).decode()
2025-02-24T16:12:46.8586420Z                 )
2025-02-24T16:12:46.8586480Z             if data.name:
2025-02-24T16:12:46.8586540Z                 assert (
2025-02-24T16:12:46.8586590Z                     data.name
2025-02-24T16:12:46.8586650Z                     == getattr(
2025-02-24T16:12:46.8586740Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8586820Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8586880Z                     ).decode()
2025-02-24T16:12:46.8586940Z                 )
2025-02-24T16:12:46.8587010Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8587120Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8587170Z             )
2025-02-24T16:12:46.8587250Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8587350Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8587400Z             )
2025-02-24T16:12:46.8587400Z 
2025-02-24T16:12:46.8587530Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8587620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8587630Z 
2025-02-24T16:12:46.8588000Z args = (<function assert_allclose.<locals>.compare at 0x1766e0860>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:12:46.8588100Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8588320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8588320Z 
2025-02-24T16:12:46.8588400Z     @wraps(func)
2025-02-24T16:12:46.8588460Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8588530Z         with self._recreate_cm():
2025-02-24T16:12:46.8588600Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8588670Z E           AssertionError: 
2025-02-24T16:12:46.8588760Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8588810Z E           
2025-02-24T16:12:46.8588890Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8588980Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.8589060Z E           Max relative difference: 15766.1580412
2025-02-24T16:12:46.8589190Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8589260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8589510Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8589580Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8589660Z 
2025-02-24T16:12:46.8589830Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8590020Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T16:12:46.8590030Z 
2025-02-24T16:12:46.8590240Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac3e0>
2025-02-24T16:12:46.8590500Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x317a8c7d0>
2025-02-24T16:12:46.8590570Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8590650Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8590730Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8590820Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8590990Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8591260Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T16:12:46.8591260Z 
2025-02-24T16:12:46.8591340Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8591470Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8591530Z     ):
2025-02-24T16:12:46.8591600Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8591690Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8591840Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8591890Z     
2025-02-24T16:12:46.8591980Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8592060Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8592180Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8592280Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8592330Z             )
2025-02-24T16:12:46.8592380Z     
2025-02-24T16:12:46.8592460Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8592550Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8592620Z             if data.stackgroup:
2025-02-24T16:12:46.8592680Z                 assert (
2025-02-24T16:12:46.8592740Z                     data.stackgroup
2025-02-24T16:12:46.8592800Z                     == getattr(
2025-02-24T16:12:46.8592890Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8592970Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8593040Z                     ).decode()
2025-02-24T16:12:46.8593090Z                 )
2025-02-24T16:12:46.8593150Z             if data.name:
2025-02-24T16:12:46.8593200Z                 assert (
2025-02-24T16:12:46.8593260Z                     data.name
2025-02-24T16:12:46.8593330Z                     == getattr(
2025-02-24T16:12:46.8593420Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8593490Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8593560Z                     ).decode()
2025-02-24T16:12:46.8597690Z                 )
2025-02-24T16:12:46.8597800Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8597910Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8597970Z             )
2025-02-24T16:12:46.8598040Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8598140Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8598190Z             )
2025-02-24T16:12:46.8598200Z 
2025-02-24T16:12:46.8598320Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8598420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8598420Z 
2025-02-24T16:12:46.8598800Z args = (<function assert_allclose.<locals>.compare at 0x1766e19e0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:12:46.8599060Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8599270Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8599270Z 
2025-02-24T16:12:46.8599330Z     @wraps(func)
2025-02-24T16:12:46.8599390Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8599550Z         with self._recreate_cm():
2025-02-24T16:12:46.8599620Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8599680Z E           AssertionError: 
2025-02-24T16:12:46.8599780Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8599840Z E           
2025-02-24T16:12:46.8599940Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8600020Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.8600110Z E           Max relative difference: 15766.1580412
2025-02-24T16:12:46.8600240Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8600380Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8600510Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8600630Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8600630Z 
2025-02-24T16:12:46.8600810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8600980Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T16:12:46.8600990Z 
2025-02-24T16:12:46.8601200Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac4a0>
2025-02-24T16:12:46.8601460Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12b6e0590>
2025-02-24T16:12:46.8601560Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8601640Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8601720Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8601820Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:12:46.8602030Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8602230Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T16:12:46.8602240Z 
2025-02-24T16:12:46.8602310Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8602460Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8602520Z     ):
2025-02-24T16:12:46.8602600Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8602690Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8602840Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8602890Z     
2025-02-24T16:12:46.8603050Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8603130Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8603250Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8603340Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8603390Z             )
2025-02-24T16:12:46.8603440Z     
2025-02-24T16:12:46.8603530Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8603610Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8603680Z             if data.stackgroup:
2025-02-24T16:12:46.8603740Z                 assert (
2025-02-24T16:12:46.8603860Z                     data.stackgroup
2025-02-24T16:12:46.8603920Z                     == getattr(
2025-02-24T16:12:46.8604010Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8604100Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8604390Z                     ).decode()
2025-02-24T16:12:46.8604440Z                 )
2025-02-24T16:12:46.8604510Z             if data.name:
2025-02-24T16:12:46.8604560Z                 assert (
2025-02-24T16:12:46.8604750Z                     data.name
2025-02-24T16:12:46.8604880Z                     == getattr(
2025-02-24T16:12:46.8604980Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8605060Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8605120Z                     ).decode()
2025-02-24T16:12:46.8605170Z                 )
2025-02-24T16:12:46.8605250Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8605350Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8605410Z             )
2025-02-24T16:12:46.8605480Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8605580Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8605630Z             )
2025-02-24T16:12:46.8605650Z 
2025-02-24T16:12:46.8605770Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8606150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8606170Z 
2025-02-24T16:12:46.8606630Z args = (<function assert_allclose.<locals>.compare at 0x1766b6f20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:12:46.8606720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8607000Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8607000Z 
2025-02-24T16:12:46.8607060Z     @wraps(func)
2025-02-24T16:12:46.8607130Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8607200Z         with self._recreate_cm():
2025-02-24T16:12:46.8607280Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8607340Z E           AssertionError: 
2025-02-24T16:12:46.8607440Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8607500Z E           
2025-02-24T16:12:46.8607580Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8607670Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.8607750Z E           Max relative difference: 15766.1580412
2025-02-24T16:12:46.8607890Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8607960Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8608110Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.8608190Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8608190Z 
2025-02-24T16:12:46.8608370Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8608540Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T16:12:46.8608550Z 
2025-02-24T16:12:46.8608770Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac560>
2025-02-24T16:12:46.8609080Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x12b6e3230>
2025-02-24T16:12:46.8609170Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8609240Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8609380Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8609470Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8609640Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8609840Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T16:12:46.8609840Z 
2025-02-24T16:12:46.8609910Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8610060Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8610250Z     ):
2025-02-24T16:12:46.8610330Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8610420Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8610620Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8610680Z     
2025-02-24T16:12:46.8610770Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8610850Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8610970Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8611060Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8611120Z             )
2025-02-24T16:12:46.8611160Z     
2025-02-24T16:12:46.8611250Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8611340Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8611400Z             if data.stackgroup:
2025-02-24T16:12:46.8611460Z                 assert (
2025-02-24T16:12:46.8611530Z                     data.stackgroup
2025-02-24T16:12:46.8611590Z                     == getattr(
2025-02-24T16:12:46.8611690Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8611790Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8611850Z                     ).decode()
2025-02-24T16:12:46.8611900Z                 )
2025-02-24T16:12:46.8611960Z             if data.name:
2025-02-24T16:12:46.8612020Z                 assert (
2025-02-24T16:12:46.8612080Z                     data.name
2025-02-24T16:12:46.8612140Z                     == getattr(
2025-02-24T16:12:46.8612230Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8612370Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8612430Z                     ).decode()
2025-02-24T16:12:46.8612480Z                 )
2025-02-24T16:12:46.8612550Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8612670Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8612720Z             )
2025-02-24T16:12:46.8612800Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8612910Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8612960Z             )
2025-02-24T16:12:46.8612960Z 
2025-02-24T16:12:46.8613140Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8613240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8613240Z 
2025-02-24T16:12:46.8613860Z args = (<function assert_allclose.<locals>.compare at 0x1766b7420>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:12:46.8613970Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8614230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8614230Z 
2025-02-24T16:12:46.8614290Z     @wraps(func)
2025-02-24T16:12:46.8614360Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8614430Z         with self._recreate_cm():
2025-02-24T16:12:46.8614500Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8614580Z E           AssertionError: 
2025-02-24T16:12:46.8614670Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8614720Z E           
2025-02-24T16:12:46.8614800Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8614890Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.8614970Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8615100Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8615170Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8615300Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8615370Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8615470Z 
2025-02-24T16:12:46.8615650Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8615830Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T16:12:46.8615950Z 
2025-02-24T16:12:46.8616340Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac650>
2025-02-24T16:12:46.8616670Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3005825a0>
2025-02-24T16:12:46.8616740Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8616820Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8616950Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8617050Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8617210Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8617410Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T16:12:46.8617420Z 
2025-02-24T16:12:46.8617490Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8617620Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8617680Z     ):
2025-02-24T16:12:46.8617810Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8617890Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8618040Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8618090Z     
2025-02-24T16:12:46.8618190Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8618260Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8618380Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8618470Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8618520Z             )
2025-02-24T16:12:46.8618580Z     
2025-02-24T16:12:46.8618660Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8618750Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8618820Z             if data.stackgroup:
2025-02-24T16:12:46.8618880Z                 assert (
2025-02-24T16:12:46.8618950Z                     data.stackgroup
2025-02-24T16:12:46.8619060Z                     == getattr(
2025-02-24T16:12:46.8619150Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8619240Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8619300Z                     ).decode()
2025-02-24T16:12:46.8619360Z                 )
2025-02-24T16:12:46.8619420Z             if data.name:
2025-02-24T16:12:46.8619470Z                 assert (
2025-02-24T16:12:46.8619530Z                     data.name
2025-02-24T16:12:46.8619600Z                     == getattr(
2025-02-24T16:12:46.8619680Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8619760Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8619820Z                     ).decode()
2025-02-24T16:12:46.8619870Z                 )
2025-02-24T16:12:46.8619950Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8620060Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8620110Z             )
2025-02-24T16:12:46.8620180Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8620290Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8620340Z             )
2025-02-24T16:12:46.8620340Z 
2025-02-24T16:12:46.8620460Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8620570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8620570Z 
2025-02-24T16:12:46.8620940Z args = (<function assert_allclose.<locals>.compare at 0x1771299e0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:12:46.8621110Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8621310Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8621370Z 
2025-02-24T16:12:46.8621430Z     @wraps(func)
2025-02-24T16:12:46.8621490Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8621610Z         with self._recreate_cm():
2025-02-24T16:12:46.8621690Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8621750Z E           AssertionError: 
2025-02-24T16:12:46.8621840Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8621900Z E           
2025-02-24T16:12:46.8621970Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8622060Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.8622190Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8622430Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8622580Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8622770Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8622850Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8622850Z 
2025-02-24T16:12:46.8623020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8623240Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T16:12:46.8623240Z 
2025-02-24T16:12:46.8623460Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac710>
2025-02-24T16:12:46.8623840Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1751dbad0>
2025-02-24T16:12:46.8623940Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8624010Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8624090Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8624180Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8624360Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8624730Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T16:12:46.8624730Z 
2025-02-24T16:12:46.8624990Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8625160Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8625390Z     ):
2025-02-24T16:12:46.8625470Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8625560Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8625710Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8626360Z     
2025-02-24T16:12:46.8626480Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8626570Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8626700Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8626790Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8626850Z             )
2025-02-24T16:12:46.8626920Z     
2025-02-24T16:12:46.8627020Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8627240Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8627330Z             if data.stackgroup:
2025-02-24T16:12:46.8627390Z                 assert (
2025-02-24T16:12:46.8627460Z                     data.stackgroup
2025-02-24T16:12:46.8627510Z                     == getattr(
2025-02-24T16:12:46.8627750Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8627860Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8627940Z                     ).decode()
2025-02-24T16:12:46.8628190Z                 )
2025-02-24T16:12:46.8628290Z             if data.name:
2025-02-24T16:12:46.8628380Z                 assert (
2025-02-24T16:12:46.8629070Z                     data.name
2025-02-24T16:12:46.8629140Z                     == getattr(
2025-02-24T16:12:46.8629230Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8629460Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8629530Z                     ).decode()
2025-02-24T16:12:46.8629580Z                 )
2025-02-24T16:12:46.8629680Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8629820Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8629880Z             )
2025-02-24T16:12:46.8629950Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8630050Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8630110Z             )
2025-02-24T16:12:46.8630110Z 
2025-02-24T16:12:46.8630230Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8630330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8630340Z 
2025-02-24T16:12:46.8630720Z args = (<function assert_allclose.<locals>.compare at 0x1766b7ec0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:12:46.8630810Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8631020Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8631020Z 
2025-02-24T16:12:46.8631070Z     @wraps(func)
2025-02-24T16:12:46.8631140Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8631220Z         with self._recreate_cm():
2025-02-24T16:12:46.8631300Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8631380Z E           AssertionError: 
2025-02-24T16:12:46.8631470Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8631520Z E           
2025-02-24T16:12:46.8631600Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8631690Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.8631770Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8631900Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8631980Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8632100Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8632240Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8632240Z 
2025-02-24T16:12:46.8632420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8632590Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T16:12:46.8632600Z 
2025-02-24T16:12:46.8632880Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac7d0>
2025-02-24T16:12:46.8633330Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31666d580>
2025-02-24T16:12:46.8633430Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8633560Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8633650Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8633740Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8633950Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8634160Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T16:12:46.8634160Z 
2025-02-24T16:12:46.8634230Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8634480Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8634560Z     ):
2025-02-24T16:12:46.8634640Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8634730Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8634880Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8635050Z     
2025-02-24T16:12:46.8635160Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8635530Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8635660Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8635900Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8635960Z             )
2025-02-24T16:12:46.8636010Z     
2025-02-24T16:12:46.8636250Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8636340Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8636420Z             if data.stackgroup:
2025-02-24T16:12:46.8636490Z                 assert (
2025-02-24T16:12:46.8636550Z                     data.stackgroup
2025-02-24T16:12:46.8636730Z                     == getattr(
2025-02-24T16:12:46.8636970Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8637060Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8637200Z                     ).decode()
2025-02-24T16:12:46.8637260Z                 )
2025-02-24T16:12:46.8637330Z             if data.name:
2025-02-24T16:12:46.8637390Z                 assert (
2025-02-24T16:12:46.8637450Z                     data.name
2025-02-24T16:12:46.8637500Z                     == getattr(
2025-02-24T16:12:46.8637600Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8637670Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8637730Z                     ).decode()
2025-02-24T16:12:46.8637780Z                 )
2025-02-24T16:12:46.8637860Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8637970Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8638020Z             )
2025-02-24T16:12:46.8638090Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8638190Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8638250Z             )
2025-02-24T16:12:46.8638250Z 
2025-02-24T16:12:46.8638380Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8638480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8638490Z 
2025-02-24T16:12:46.8638870Z args = (<function assert_allclose.<locals>.compare at 0x1766e1260>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:12:46.8638950Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8639160Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8639160Z 
2025-02-24T16:12:46.8639220Z     @wraps(func)
2025-02-24T16:12:46.8639290Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8639360Z         with self._recreate_cm():
2025-02-24T16:12:46.8639430Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8639500Z E           AssertionError: 
2025-02-24T16:12:46.8639590Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8639650Z E           
2025-02-24T16:12:46.8639730Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.8639820Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.8640030Z E           Max relative difference: 3.01858991
2025-02-24T16:12:46.8640160Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8640230Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8640360Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8640430Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8640430Z 
2025-02-24T16:12:46.8640610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8640940Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T16:12:46.8641050Z 
2025-02-24T16:12:46.8641430Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac890>
2025-02-24T16:12:46.8642170Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x129c4f8c0>
2025-02-24T16:12:46.8642380Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8642480Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8642570Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8642660Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8642820Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8643040Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T16:12:46.8643050Z 
2025-02-24T16:12:46.8643120Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8643260Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8643320Z     ):
2025-02-24T16:12:46.8643400Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8643490Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8643630Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8643680Z     
2025-02-24T16:12:46.8643840Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8644040Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8644170Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8644270Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8644330Z             )
2025-02-24T16:12:46.8644440Z     
2025-02-24T16:12:46.8644670Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8644770Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8644840Z             if data.stackgroup:
2025-02-24T16:12:46.8644930Z                 assert (
2025-02-24T16:12:46.8645010Z                     data.stackgroup
2025-02-24T16:12:46.8645070Z                     == getattr(
2025-02-24T16:12:46.8645170Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8645260Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8645350Z                     ).decode()
2025-02-24T16:12:46.8645420Z                 )
2025-02-24T16:12:46.8645500Z             if data.name:
2025-02-24T16:12:46.8645560Z                 assert (
2025-02-24T16:12:46.8645620Z                     data.name
2025-02-24T16:12:46.8645690Z                     == getattr(
2025-02-24T16:12:46.8645780Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8645860Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8645920Z                     ).decode()
2025-02-24T16:12:46.8645980Z                 )
2025-02-24T16:12:46.8646070Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8646180Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8646230Z             )
2025-02-24T16:12:46.8646300Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8646430Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8646490Z             )
2025-02-24T16:12:46.8646500Z 
2025-02-24T16:12:46.8646640Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8646750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8646760Z 
2025-02-24T16:12:46.8647170Z args = (<function assert_allclose.<locals>.compare at 0x1766e0860>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:12:46.8647290Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8647600Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8647720Z 
2025-02-24T16:12:46.8647800Z     @wraps(func)
2025-02-24T16:12:46.8647900Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8648110Z         with self._recreate_cm():
2025-02-24T16:12:46.8648190Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8648250Z E           AssertionError: 
2025-02-24T16:12:46.8648380Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8648460Z E           
2025-02-24T16:12:46.8648570Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8648670Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.8648770Z E           Max relative difference: 15766.15804934
2025-02-24T16:12:46.8648940Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8649040Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8649210Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8649320Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8649330Z 
2025-02-24T16:12:46.8649520Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8649740Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T16:12:46.8649750Z 
2025-02-24T16:12:46.8650020Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2ac950>
2025-02-24T16:12:46.8650320Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x13ca0d2e0>
2025-02-24T16:12:46.8650430Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8650530Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8650630Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8650750Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8650950Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8651200Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T16:12:46.8651220Z 
2025-02-24T16:12:46.8651340Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8651520Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8651610Z     ):
2025-02-24T16:12:46.8651710Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8651830Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8652020Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8652100Z     
2025-02-24T16:12:46.8652200Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8652320Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8652470Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8652600Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8652680Z             )
2025-02-24T16:12:46.8652740Z     
2025-02-24T16:12:46.8652860Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8652960Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8653060Z             if data.stackgroup:
2025-02-24T16:12:46.8653140Z                 assert (
2025-02-24T16:12:46.8653240Z                     data.stackgroup
2025-02-24T16:12:46.8653310Z                     == getattr(
2025-02-24T16:12:46.8653400Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8653530Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8653610Z                     ).decode()
2025-02-24T16:12:46.8653690Z                 )
2025-02-24T16:12:46.8653770Z             if data.name:
2025-02-24T16:12:46.8653860Z                 assert (
2025-02-24T16:12:46.8653950Z                     data.name
2025-02-24T16:12:46.8654030Z                     == getattr(
2025-02-24T16:12:46.8654150Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8654560Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8654650Z                     ).decode()
2025-02-24T16:12:46.8654890Z                 )
2025-02-24T16:12:46.8655000Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8655130Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8655220Z             )
2025-02-24T16:12:46.8655320Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8655450Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8655520Z             )
2025-02-24T16:12:46.8655530Z 
2025-02-24T16:12:46.8655690Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8655830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8655840Z 
2025-02-24T16:12:46.8656270Z args = (<function assert_allclose.<locals>.compare at 0x1766b6de0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:12:46.8656380Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8656630Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8656640Z 
2025-02-24T16:12:46.8656710Z     @wraps(func)
2025-02-24T16:12:46.8656810Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8656890Z         with self._recreate_cm():
2025-02-24T16:12:46.8656980Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8657080Z E           AssertionError: 
2025-02-24T16:12:46.8657210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8657290Z E           
2025-02-24T16:12:46.8657380Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8657500Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.8657610Z E           Max relative difference: 15766.15804934
2025-02-24T16:12:46.8663160Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8663260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8663390Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8663470Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8663470Z 
2025-02-24T16:12:46.8663660Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8663830Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T16:12:46.8663840Z 
2025-02-24T16:12:46.8664050Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2aca10>
2025-02-24T16:12:46.8664300Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1715522d0>
2025-02-24T16:12:46.8664380Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8664450Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8664540Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8664630Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8664810Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8665060Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T16:12:46.8665070Z 
2025-02-24T16:12:46.8665140Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8665280Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8665330Z     ):
2025-02-24T16:12:46.8665410Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8665490Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8665640Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8665690Z     
2025-02-24T16:12:46.8665780Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8665970Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8666090Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8666290Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8666350Z             )
2025-02-24T16:12:46.8666400Z     
2025-02-24T16:12:46.8666480Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8666560Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8666630Z             if data.stackgroup:
2025-02-24T16:12:46.8666680Z                 assert (
2025-02-24T16:12:46.8666750Z                     data.stackgroup
2025-02-24T16:12:46.8666810Z                     == getattr(
2025-02-24T16:12:46.8666920Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8667010Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8667070Z                     ).decode()
2025-02-24T16:12:46.8667120Z                 )
2025-02-24T16:12:46.8667180Z             if data.name:
2025-02-24T16:12:46.8667240Z                 assert (
2025-02-24T16:12:46.8667300Z                     data.name
2025-02-24T16:12:46.8667370Z                     == getattr(
2025-02-24T16:12:46.8667480Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8667570Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8667650Z                     ).decode()
2025-02-24T16:12:46.8667700Z                 )
2025-02-24T16:12:46.8667780Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8667880Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8667930Z             )
2025-02-24T16:12:46.8668010Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8668110Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8668160Z             )
2025-02-24T16:12:46.8668170Z 
2025-02-24T16:12:46.8668280Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8668390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8668390Z 
2025-02-24T16:12:46.8668770Z args = (<function assert_allclose.<locals>.compare at 0x1766e0720>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:12:46.8668860Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8669060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8669070Z 
2025-02-24T16:12:46.8669120Z     @wraps(func)
2025-02-24T16:12:46.8669190Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8669260Z         with self._recreate_cm():
2025-02-24T16:12:46.8669330Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8669390Z E           AssertionError: 
2025-02-24T16:12:46.8669480Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8669540Z E           
2025-02-24T16:12:46.8669620Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8669710Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.8669790Z E           Max relative difference: 15766.15804934
2025-02-24T16:12:46.8669920Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8670000Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8670120Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8670200Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8670200Z 
2025-02-24T16:12:46.8670370Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8670540Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T16:12:46.8670550Z 
2025-02-24T16:12:46.8670760Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11a2acad0>
2025-02-24T16:12:46.8671100Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x11c3c0530>
2025-02-24T16:12:46.8671240Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:12:46.8671310Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:12:46.8671400Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:12:46.8671490Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:12:46.8671650Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x3116b76e0>)
2025-02-24T16:12:46.8671860Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T16:12:46.8671860Z 
2025-02-24T16:12:46.8671930Z     def test_generate_plot_mpl(
2025-02-24T16:12:46.8672070Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:12:46.8672120Z     ):
2025-02-24T16:12:46.8672200Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:12:46.8672290Z         regression_data = RegressionData(request)
2025-02-24T16:12:46.8672430Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:12:46.8672480Z     
2025-02-24T16:12:46.8672580Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:12:46.8672650Z             np.testing.assert_array_equal(
2025-02-24T16:12:46.8672770Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:12:46.8672860Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:12:46.8672910Z             )
2025-02-24T16:12:46.8672960Z     
2025-02-24T16:12:46.8673040Z         for index, data in enumerate(fig.data):
2025-02-24T16:12:46.8673130Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:12:46.8673200Z             if data.stackgroup:
2025-02-24T16:12:46.8673260Z                 assert (
2025-02-24T16:12:46.8673320Z                     data.stackgroup
2025-02-24T16:12:46.8673380Z                     == getattr(
2025-02-24T16:12:46.8673470Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8673550Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:12:46.8673610Z                     ).decode()
2025-02-24T16:12:46.8673660Z                 )
2025-02-24T16:12:46.8673730Z             if data.name:
2025-02-24T16:12:46.8673790Z                 assert (
2025-02-24T16:12:46.8673850Z                     data.name
2025-02-24T16:12:46.8673910Z                     == getattr(
2025-02-24T16:12:46.8673990Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:12:46.8674070Z                         "_" + str(index) + "name",
2025-02-24T16:12:46.8674130Z                     ).decode()
2025-02-24T16:12:46.8674180Z                 )
2025-02-24T16:12:46.8674250Z             np.testing.assert_allclose(
2025-02-24T16:12:46.8674360Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:12:46.8674410Z             )
2025-02-24T16:12:46.8674490Z >           np.testing.assert_allclose(
2025-02-24T16:12:46.8674590Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:12:46.8674640Z             )
2025-02-24T16:12:46.8674650Z 
2025-02-24T16:12:46.8674770Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:12:46.8674870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:12:46.8674870Z 
2025-02-24T16:12:46.8675240Z args = (<function assert_allclose.<locals>.compare at 0x1766e14e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:12:46.8675330Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:12:46.8675530Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:12:46.8675540Z 
2025-02-24T16:12:46.8675590Z     @wraps(func)
2025-02-24T16:12:46.8675660Z     def inner(*args, **kwds):
2025-02-24T16:12:46.8675780Z         with self._recreate_cm():
2025-02-24T16:12:46.8675850Z >           return func(*args, **kwds)
2025-02-24T16:12:46.8675920Z E           AssertionError: 
2025-02-24T16:12:46.8676050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8676100Z E           
2025-02-24T16:12:46.8676190Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.8676270Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.8676350Z E           Max relative difference: 15766.15804934
2025-02-24T16:12:46.8676490Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8676550Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8676680Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.8676750Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.8676760Z 
2025-02-24T16:12:46.8676920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:12:46.8677020Z =============================== warnings summary ===============================
2025-02-24T16:12:46.8677120Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:12:46.8677220Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:12:46.8677470Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T16:12:46.8677540Z   
2025-02-24T16:12:46.8678610Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T16:12:46.8678620Z 
2025-02-24T16:12:46.8678820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T16:12:46.8679120Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T16:12:46.8679170Z   
2025-02-24T16:12:46.8679300Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T16:12:46.8679430Z   given by the platformdirs library.  To remove this warning and
2025-02-24T16:12:46.8679570Z   see the appropriate new directories, set the environment variable
2025-02-24T16:12:46.8679690Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T16:12:46.8679820Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T16:12:46.8679820Z 
2025-02-24T16:12:46.8684930Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T16:12:46.8685160Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:12:46.8685340Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T16:12:46.8685410Z   
2025-02-24T16:12:46.8685450Z   
2025-02-24T16:12:46.8685630Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:12:46.8685850Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:12:46.8685860Z 
2025-02-24T16:12:46.8686010Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T16:12:46.8686200Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T16:12:46.8686390Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T16:12:46.8686560Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T16:12:46.8686830Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T16:12:46.8686900Z   
2025-02-24T16:12:46.8687000Z   The current CMFGEN model parser is deprecated
2025-02-24T16:12:46.8687000Z 
2025-02-24T16:12:46.8687350Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T16:12:46.8687610Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T16:12:46.8688030Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T16:12:46.8688090Z   
2025-02-24T16:12:46.8688180Z   The current CMFGEN model parser is deprecated
2025-02-24T16:12:46.8688180Z 
2025-02-24T16:12:46.8688350Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T16:12:46.8688660Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T16:12:46.8688720Z   
2025-02-24T16:12:46.8689070Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T16:12:46.8689080Z 
2025-02-24T16:12:46.8689160Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:12:46.8689280Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:12:46.8689460Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:12:46.8689690Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T16:12:46.8689750Z   
2025-02-24T16:12:46.8689850Z   v_inner_boundary < 0, assuming default value
2025-02-24T16:12:46.8689860Z 
2025-02-24T16:12:46.8689940Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:12:46.8690050Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:12:46.8690210Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:12:46.8690460Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T16:12:46.8690520Z   
2025-02-24T16:12:46.8690600Z   v_outer_boundary < 0, assuming default value
2025-02-24T16:12:46.8690600Z 
2025-02-24T16:12:46.8690990Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T16:12:46.8691280Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T16:12:46.8691590Z   
2025-02-24T16:12:46.8691900Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T16:12:46.8692310Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T16:12:46.8692380Z   
2025-02-24T16:12:46.8692800Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T16:12:46.8692810Z 
2025-02-24T16:12:46.8693000Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T16:12:46.8693180Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T16:12:46.8693360Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T16:12:46.8693560Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T16:12:46.8693620Z   
2025-02-24T16:12:46.8693780Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T16:12:46.8693790Z 
2025-02-24T16:12:46.8693970Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:12:46.8694140Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T16:12:46.8694210Z   
2025-02-24T16:12:46.8694480Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T16:12:46.8694480Z 
2025-02-24T16:12:46.8694660Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:12:46.8694840Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T16:12:46.8695030Z   
2025-02-24T16:12:46.8695370Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T16:12:46.8695460Z 
2025-02-24T16:12:46.8695650Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T16:12:46.8695750Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T16:12:46.8695800Z   
2025-02-24T16:12:46.8696700Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T16:12:46.8696790Z   Exception origin:
2025-02-24T16:12:46.8697010Z     File "/Users/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T16:12:46.8697090Z       raise TypeError(msg) from None
2025-02-24T16:12:46.8697170Z   [0m[0m
2025-02-24T16:12:46.8697180Z 
2025-02-24T16:12:46.8697470Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T16:12:46.8697760Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T16:12:46.8697820Z   
2025-02-24T16:12:46.8698520Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T16:12:46.8698530Z 
2025-02-24T16:12:46.8698830Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8699140Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8699460Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8699780Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8700090Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8700410Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8700700Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:12:46.8700760Z   
2025-02-24T16:12:46.8700920Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T16:12:46.8701070Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:12:46.8701270Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:12:46.8701270Z 
2025-02-24T16:12:46.8701570Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8701880Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8702170Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:12:46.8702220Z   
2025-02-24T16:12:46.8702390Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T16:12:46.8702540Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:12:46.8702740Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:12:46.8702740Z 
2025-02-24T16:12:46.8703030Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:12:46.8703400Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:12:46.8703510Z   
2025-02-24T16:12:46.8703660Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T16:12:46.8703810Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:12:46.8704000Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:12:46.8704000Z 
2025-02-24T16:12:46.8704350Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T16:12:46.8704620Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-02-24T16:12:46.8704670Z   
2025-02-24T16:12:46.8704880Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T16:12:46.8704880Z 
2025-02-24T16:12:46.8705090Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:12:46.8705270Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T16:12:46.8705320Z   
2025-02-24T16:12:46.8705370Z   
2025-02-24T16:12:46.8705550Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:12:46.8705770Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:12:46.8705770Z 
2025-02-24T16:12:46.8705980Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:12:46.8706160Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T16:12:46.8706220Z   
2025-02-24T16:12:46.8706280Z   
2025-02-24T16:12:46.8706460Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:12:46.8706630Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T16:12:46.8706630Z 
2025-02-24T16:12:46.8706840Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:12:46.8707050Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T16:12:46.8707120Z   
2025-02-24T16:12:46.8707280Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T16:12:46.8707280Z 
2025-02-24T16:12:46.8707440Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T16:12:46.8707440Z 
2025-02-24T16:12:46.8707580Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-02-24T16:12:46.8707700Z Coverage HTML written to dir coverage_html_report
2025-02-24T16:12:46.8707790Z Coverage XML written to file coverage.xml
2025-02-24T16:12:46.8707800Z 
2025-02-24T16:12:46.8707900Z =========================== short test summary info ============================
2025-02-24T16:12:46.8708260Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T16:12:46.8708270Z 
2025-02-24T16:12:46.8708390Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:12:46.8708480Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:12:46.8708540Z        ...
2025-02-24T16:12:46.8708610Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:12:46.8708710Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:12:46.8708800Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:12:46.8708860Z        ...
2025-02-24T16:12:46.8708930Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:12:46.8709020Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:12:46.8709110Z At positional index 54, first diff: 14 != 12
2025-02-24T16:12:46.8709340Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T16:12:46.8709500Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.8709510Z 
2025-02-24T16:12:46.8709580Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:12:46.8709710Z Max absolute difference: 0.99984222
2025-02-24T16:12:46.8709790Z Max relative difference: 6337.12154973
2025-02-24T16:12:46.8709860Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.8709920Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.8709990Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.8710050Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.8710110Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.8710170Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.8710660Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:12:46.8711060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8711060Z 
2025-02-24T16:12:46.8711170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8711270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8711320Z        ...
2025-02-24T16:12:46.8711390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8711500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8711600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8711640Z        ...
2025-02-24T16:12:46.8711720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8711820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8711900Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8712310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8712320Z 
2025-02-24T16:12:46.8712390Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8712710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8712980Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8713260Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8713680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8713680Z 
2025-02-24T16:12:46.8713760Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8714060Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8714470Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8714950Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8715500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8715510Z 
2025-02-24T16:12:46.8715620Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8715710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8715770Z        ...
2025-02-24T16:12:46.8715840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8715940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8716040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8716090Z        ...
2025-02-24T16:12:46.8716160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8716270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8716350Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8716770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8716770Z 
2025-02-24T16:12:46.8716880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8716980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8717030Z        ...
2025-02-24T16:12:46.8717100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8717200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8717300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8717350Z        ...
2025-02-24T16:12:46.8717420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8717520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8717610Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8718000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8718000Z 
2025-02-24T16:12:46.8718110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8718210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8718260Z        ...
2025-02-24T16:12:46.8718330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8718430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8718530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8718580Z        ...
2025-02-24T16:12:46.8718650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8718750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8718830Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8719250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8719350Z 
2025-02-24T16:12:46.8719460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8719550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8719660Z        ...
2025-02-24T16:12:46.8719730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8719830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8719920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8719980Z        ...
2025-02-24T16:12:46.8720050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8720150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8720230Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8720640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8720650Z 
2025-02-24T16:12:46.8720760Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8720850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8720900Z        ...
2025-02-24T16:12:46.8720980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8721080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8721170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8721220Z        ...
2025-02-24T16:12:46.8721290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8721390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8721470Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8721870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8721870Z 
2025-02-24T16:12:46.8721970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8722070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8722130Z        ...
2025-02-24T16:12:46.8722190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8722300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8722390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8722450Z        ...
2025-02-24T16:12:46.8722520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8722620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8722700Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8723070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8723080Z 
2025-02-24T16:12:46.8723190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8723280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8723330Z        ...
2025-02-24T16:12:46.8723400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8723870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8724030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8724090Z        ...
2025-02-24T16:12:46.8724260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8724370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8724450Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8724870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8724880Z 
2025-02-24T16:12:46.8724950Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8725270Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8725740Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8726020Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8726430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8726440Z 
2025-02-24T16:12:46.8726520Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8726820Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8727130Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8727450Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8727840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8727840Z 
2025-02-24T16:12:46.8727950Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8728040Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8728100Z        ...
2025-02-24T16:12:46.8728170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8728270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8728370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8728420Z        ...
2025-02-24T16:12:46.8728490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8728600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8728680Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8729090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8729090Z 
2025-02-24T16:12:46.8729200Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8729290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8729340Z        ...
2025-02-24T16:12:46.8729460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8729570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8729660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8729760Z        ...
2025-02-24T16:12:46.8729830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8729930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8730010Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8730380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8730390Z 
2025-02-24T16:12:46.8730500Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8730590Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8730640Z        ...
2025-02-24T16:12:46.8730710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8730810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8730910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8730960Z        ...
2025-02-24T16:12:46.8731030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8731130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8731210Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8731610Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8731620Z 
2025-02-24T16:12:46.8731720Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8731890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8731940Z        ...
2025-02-24T16:12:46.8732010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8732110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8732210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8732260Z        ...
2025-02-24T16:12:46.8732340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8732440Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8732520Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8733170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8733180Z 
2025-02-24T16:12:46.8733290Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8733380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8733440Z        ...
2025-02-24T16:12:46.8733510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8733610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8733810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8733860Z        ...
2025-02-24T16:12:46.8733930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8734040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8734120Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8734640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8734640Z 
2025-02-24T16:12:46.8734750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8734840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8734970Z        ...
2025-02-24T16:12:46.8735040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8735140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8735230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8735480Z        ...
2025-02-24T16:12:46.8735550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8735710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8735870Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8736340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8736340Z 
2025-02-24T16:12:46.8736450Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8736540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8736600Z        ...
2025-02-24T16:12:46.8736670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8736850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8736940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8737040Z        ...
2025-02-24T16:12:46.8737120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8737220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8737380Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8737770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8737780Z 
2025-02-24T16:12:46.8737930Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8738320Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8738700Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8744670Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8745210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8745220Z 
2025-02-24T16:12:46.8745300Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8745690Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8746010Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8746400Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8746940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8746940Z 
2025-02-24T16:12:46.8747050Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8747140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8747200Z        ...
2025-02-24T16:12:46.8747270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8747380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8747480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8747540Z        ...
2025-02-24T16:12:46.8747720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8747840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8747920Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8748330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8748330Z 
2025-02-24T16:12:46.8748440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8748530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8748580Z        ...
2025-02-24T16:12:46.8748660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8748760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8748850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8748900Z        ...
2025-02-24T16:12:46.8748970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8749080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8749160Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8749530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8749540Z 
2025-02-24T16:12:46.8749650Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8749740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8749800Z        ...
2025-02-24T16:12:46.8749860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8749970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8750060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8750110Z        ...
2025-02-24T16:12:46.8750180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8750280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8750370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8750770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8750780Z 
2025-02-24T16:12:46.8750880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8750980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8751020Z        ...
2025-02-24T16:12:46.8751100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8751200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8751290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8751340Z        ...
2025-02-24T16:12:46.8751410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8751510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8751590Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8752080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8752150Z 
2025-02-24T16:12:46.8752260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8752350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8752410Z        ...
2025-02-24T16:12:46.8752470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8752580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8752670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8752720Z        ...
2025-02-24T16:12:46.8752790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8752890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8752980Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8753360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8753370Z 
2025-02-24T16:12:46.8753480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8753570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8753620Z        ...
2025-02-24T16:12:46.8753690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8753790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8753890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8753940Z        ...
2025-02-24T16:12:46.8754010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8754110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8754190Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8754590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8754600Z 
2025-02-24T16:12:46.8754700Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8754800Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8754850Z        ...
2025-02-24T16:12:46.8754920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8755020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8755110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8755170Z        ...
2025-02-24T16:12:46.8755230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8755330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8755430Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8755870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8755880Z 
2025-02-24T16:12:46.8755970Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8756320Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8756630Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8756970Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8757700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8757720Z 
2025-02-24T16:12:46.8757820Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8758220Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8758610Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8758960Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8759380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8759400Z 
2025-02-24T16:12:46.8759530Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8759660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8759720Z        ...
2025-02-24T16:12:46.8759840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8759950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8760080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8760140Z        ...
2025-02-24T16:12:46.8760230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8760380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8760460Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8760950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8760960Z 
2025-02-24T16:12:46.8761090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8761200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8761260Z        ...
2025-02-24T16:12:46.8761370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8761490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8761620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8761700Z        ...
2025-02-24T16:12:46.8761770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8761920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8762020Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8762470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8762650Z 
2025-02-24T16:12:46.8762790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8762930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8763090Z        ...
2025-02-24T16:12:46.8763160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8763260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8763370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8763430Z        ...
2025-02-24T16:12:46.8763500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8763620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8763710Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8764170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8764180Z 
2025-02-24T16:12:46.8764300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8764420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8764470Z        ...
2025-02-24T16:12:46.8764560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8764690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8764800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8764860Z        ...
2025-02-24T16:12:46.8764960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8765070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8765150Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8765600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8765610Z 
2025-02-24T16:12:46.8765730Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8765830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8765890Z        ...
2025-02-24T16:12:46.8765970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8766090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8766220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8766270Z        ...
2025-02-24T16:12:46.8766340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8766450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8766530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8766950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8766960Z 
2025-02-24T16:12:46.8767060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8767150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8767210Z        ...
2025-02-24T16:12:46.8767280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8767380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8767480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8767530Z        ...
2025-02-24T16:12:46.8767600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8767700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8767780Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8768240Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8768250Z 
2025-02-24T16:12:46.8768350Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8768460Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8768640Z        ...
2025-02-24T16:12:46.8768710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8768820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8769000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8769060Z        ...
2025-02-24T16:12:46.8769130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8769230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8769310Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8769770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8769780Z 
2025-02-24T16:12:46.8769850Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8770160Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8770440Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8770740Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8771370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8771390Z 
2025-02-24T16:12:46.8771480Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8771800Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8772130Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8772480Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8773480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8773510Z 
2025-02-24T16:12:46.8773650Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8773970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8774020Z        ...
2025-02-24T16:12:46.8774120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8774360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8774470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8774530Z        ...
2025-02-24T16:12:46.8774610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8774740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8774850Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8775510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8775520Z 
2025-02-24T16:12:46.8775660Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8775760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8775820Z        ...
2025-02-24T16:12:46.8775900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8776020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8776130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8776180Z        ...
2025-02-24T16:12:46.8776250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8776370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8776490Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8776960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8776970Z 
2025-02-24T16:12:46.8777080Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8777180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8777250Z        ...
2025-02-24T16:12:46.8777320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8777420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8777540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8777590Z        ...
2025-02-24T16:12:46.8777670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8777790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8777880Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8778390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8778390Z 
2025-02-24T16:12:46.8778510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8778630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8778690Z        ...
2025-02-24T16:12:46.8778780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8778890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8779000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8779080Z        ...
2025-02-24T16:12:46.8779160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8779260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8779340Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8779860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8779870Z 
2025-02-24T16:12:46.8779990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8780090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8780150Z        ...
2025-02-24T16:12:46.8780320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8780430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8780570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8780620Z        ...
2025-02-24T16:12:46.8780690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8780790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8780870Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8781330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8781330Z 
2025-02-24T16:12:46.8781440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8781530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8781580Z        ...
2025-02-24T16:12:46.8781660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8781880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8781980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8782040Z        ...
2025-02-24T16:12:46.8782100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8782210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8782290Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8782710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8782710Z 
2025-02-24T16:12:46.8782820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8782910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8782960Z        ...
2025-02-24T16:12:46.8783030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8783130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8783230Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8783280Z        ...
2025-02-24T16:12:46.8783350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8783450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8783530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8783970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8783970Z 
2025-02-24T16:12:46.8784050Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8784350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8784640Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8784910Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8785390Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8785490Z 
2025-02-24T16:12:46.8785640Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8786040Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8786350Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8786670Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8787090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8787100Z 
2025-02-24T16:12:46.8787210Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8787300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8787350Z        ...
2025-02-24T16:12:46.8787420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8787530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8787630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8787680Z        ...
2025-02-24T16:12:46.8787780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8787900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8787980Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8788430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8788440Z 
2025-02-24T16:12:46.8788550Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8788640Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8788690Z        ...
2025-02-24T16:12:46.8788760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8788870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8788970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8789020Z        ...
2025-02-24T16:12:46.8789090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8789200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8789280Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8789700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8789710Z 
2025-02-24T16:12:46.8789820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8789910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8789960Z        ...
2025-02-24T16:12:46.8790030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8790130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8790320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8790370Z        ...
2025-02-24T16:12:46.8790440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8790600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8790680Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8791120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8791120Z 
2025-02-24T16:12:46.8791220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8791310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8791360Z        ...
2025-02-24T16:12:46.8791440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8791540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8791640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8791690Z        ...
2025-02-24T16:12:46.8791760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8791860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8791940Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8792500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8792500Z 
2025-02-24T16:12:46.8792620Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8792710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8792760Z        ...
2025-02-24T16:12:46.8792820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8792930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8793020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8793080Z        ...
2025-02-24T16:12:46.8793150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8793250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8793330Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8793760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8793770Z 
2025-02-24T16:12:46.8793870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8793970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8794020Z        ...
2025-02-24T16:12:46.8794090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8794190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8794280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8794330Z        ...
2025-02-24T16:12:46.8794400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8794500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8794580Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8795010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8795010Z 
2025-02-24T16:12:46.8795580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8795690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8795740Z        ...
2025-02-24T16:12:46.8795810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8795910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8796000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8796050Z        ...
2025-02-24T16:12:46.8796210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8796310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8796390Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8796880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8796880Z 
2025-02-24T16:12:46.8796970Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8797270Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8797540Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8797850Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8798290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8798300Z 
2025-02-24T16:12:46.8798370Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8798680Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8799150Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8799470Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8799890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8799900Z 
2025-02-24T16:12:46.8800020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8800120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8800170Z        ...
2025-02-24T16:12:46.8800250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8800350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8800440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8800490Z        ...
2025-02-24T16:12:46.8800660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8800760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8800900Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8801360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8801370Z 
2025-02-24T16:12:46.8801480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8801580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8801630Z        ...
2025-02-24T16:12:46.8801700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8801810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8801900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8801950Z        ...
2025-02-24T16:12:46.8802020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8802130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8802210Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8802760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8802760Z 
2025-02-24T16:12:46.8802870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8802970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8803020Z        ...
2025-02-24T16:12:46.8803090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8803200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8803290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8803340Z        ...
2025-02-24T16:12:46.8803410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8803520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8803600Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8804040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8804040Z 
2025-02-24T16:12:46.8804150Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8804240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8804290Z        ...
2025-02-24T16:12:46.8804370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8804470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8804560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8804610Z        ...
2025-02-24T16:12:46.8804680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8804780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8804860Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8805300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8805310Z 
2025-02-24T16:12:46.8805420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8805510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8805560Z        ...
2025-02-24T16:12:46.8805630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8805730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8805830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8805870Z        ...
2025-02-24T16:12:46.8805950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8806040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8806370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8806790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8806890Z 
2025-02-24T16:12:46.8807010Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8807100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8807150Z        ...
2025-02-24T16:12:46.8807220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8807320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8807420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8807470Z        ...
2025-02-24T16:12:46.8807530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8807640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8807710Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8808160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8808160Z 
2025-02-24T16:12:46.8808280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8808370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8808420Z        ...
2025-02-24T16:12:46.8808490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8808710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8808810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8808860Z        ...
2025-02-24T16:12:46.8808930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8809030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8809110Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8809570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8809580Z 
2025-02-24T16:12:46.8809650Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8809970Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8810240Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8810520Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8811100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8811100Z 
2025-02-24T16:12:46.8811180Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8811490Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8811910Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8812220Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8812660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8812670Z 
2025-02-24T16:12:46.8812780Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8812870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8812920Z        ...
2025-02-24T16:12:46.8813000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8813100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8813200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8813240Z        ...
2025-02-24T16:12:46.8813390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8813490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8813570Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8814050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8814050Z 
2025-02-24T16:12:46.8814160Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8814250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8814300Z        ...
2025-02-24T16:12:46.8814370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8814470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8814560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8814620Z        ...
2025-02-24T16:12:46.8814680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8814790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8814870Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8815310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8815310Z 
2025-02-24T16:12:46.8815420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8815510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8815570Z        ...
2025-02-24T16:12:46.8815630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8815730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8815830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8815880Z        ...
2025-02-24T16:12:46.8815950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8816050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8816130Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8816590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8816700Z 
2025-02-24T16:12:46.8817130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8817260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8817310Z        ...
2025-02-24T16:12:46.8817380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8822030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8822170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8822220Z        ...
2025-02-24T16:12:46.8822290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8822390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8822470Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8822930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8822950Z 
2025-02-24T16:12:46.8823060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8823150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8823210Z        ...
2025-02-24T16:12:46.8823280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8823380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8823470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8823520Z        ...
2025-02-24T16:12:46.8823590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8823700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8823780Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8824220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8824230Z 
2025-02-24T16:12:46.8824340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8824760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8824810Z        ...
2025-02-24T16:12:46.8824880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8824990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8825080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8825130Z        ...
2025-02-24T16:12:46.8825200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8825300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8825380Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8826010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8826040Z 
2025-02-24T16:12:46.8826600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8826710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8826760Z        ...
2025-02-24T16:12:46.8826850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8826970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8827060Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8827110Z        ...
2025-02-24T16:12:46.8827680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8827810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8827910Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8828380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8828610Z 
2025-02-24T16:12:46.8828700Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8829020Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8829450Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8829770Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8830410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8830430Z 
2025-02-24T16:12:46.8830770Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8831100Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8831450Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8831800Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8832340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8832350Z 
2025-02-24T16:12:46.8832460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8832560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8832610Z        ...
2025-02-24T16:12:46.8832700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8832810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8832920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8832970Z        ...
2025-02-24T16:12:46.8833050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8833460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8833590Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8834420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8834680Z 
2025-02-24T16:12:46.8834850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8835360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8835430Z        ...
2025-02-24T16:12:46.8835500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8835620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8835760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8835840Z        ...
2025-02-24T16:12:46.8835920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8836030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8836110Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8836980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8836990Z 
2025-02-24T16:12:46.8837110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8837210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8837280Z        ...
2025-02-24T16:12:46.8837370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8837830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8837950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8838000Z        ...
2025-02-24T16:12:46.8838080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8838190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8838270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8839010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8839020Z 
2025-02-24T16:12:46.8839160Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8839270Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8839340Z        ...
2025-02-24T16:12:46.8839410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8839520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8839620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8839680Z        ...
2025-02-24T16:12:46.8839770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8839900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8839980Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8840460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8840470Z 
2025-02-24T16:12:46.8840580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8840670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8840730Z        ...
2025-02-24T16:12:46.8840790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8840920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8841040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8841120Z        ...
2025-02-24T16:12:46.8841520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8841690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8841810Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8842300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8842310Z 
2025-02-24T16:12:46.8842450Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8842720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8842790Z        ...
2025-02-24T16:12:46.8842900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8843130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8843250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8843300Z        ...
2025-02-24T16:12:46.8843380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8843500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8843590Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8844100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8844110Z 
2025-02-24T16:12:46.8844200Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8844780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8845110Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8845430Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8845910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8845920Z 
2025-02-24T16:12:46.8846010Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8846360Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8846680Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8847090Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8847530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8847540Z 
2025-02-24T16:12:46.8847670Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8848530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8848590Z        ...
2025-02-24T16:12:46.8848670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8848910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8849010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8849070Z        ...
2025-02-24T16:12:46.8849140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8849290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8849380Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8850150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8850160Z 
2025-02-24T16:12:46.8850290Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8850400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8850460Z        ...
2025-02-24T16:12:46.8850530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8850640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8850730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8850780Z        ...
2025-02-24T16:12:46.8850850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8850960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8851040Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8851470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8851480Z 
2025-02-24T16:12:46.8851580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8851690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8851750Z        ...
2025-02-24T16:12:46.8851830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8851950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8852050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8852100Z        ...
2025-02-24T16:12:46.8852170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8852290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8852390Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8852850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8852850Z 
2025-02-24T16:12:46.8852960Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8853050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8853100Z        ...
2025-02-24T16:12:46.8853170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8853280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8853410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8853470Z        ...
2025-02-24T16:12:46.8853540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8853640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8853720Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8854190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8854200Z 
2025-02-24T16:12:46.8854310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8854400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8854450Z        ...
2025-02-24T16:12:46.8854530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8854740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8854840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8854950Z        ...
2025-02-24T16:12:46.8855020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8855480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8855580Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8856020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8856030Z 
2025-02-24T16:12:46.8856150Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8856250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8856300Z        ...
2025-02-24T16:12:46.8856370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8856480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8856570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8856620Z        ...
2025-02-24T16:12:46.8856700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8856800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8856880Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8857350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8857370Z 
2025-02-24T16:12:46.8857510Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8857610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8857660Z        ...
2025-02-24T16:12:46.8857740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8857860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8857960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8858010Z        ...
2025-02-24T16:12:46.8858080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8858190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8858390Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8858870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8858870Z 
2025-02-24T16:12:46.8858950Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8859340Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8859640Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8859920Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8860370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8860590Z 
2025-02-24T16:12:46.8860690Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8861120Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8861440Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8861830Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8862310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8862320Z 
2025-02-24T16:12:46.8862440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8862570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8862650Z        ...
2025-02-24T16:12:46.8862740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8862870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8862990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8863080Z        ...
2025-02-24T16:12:46.8863180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8863290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8863510Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8864020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8864020Z 
2025-02-24T16:12:46.8864130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8864230Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8864290Z        ...
2025-02-24T16:12:46.8864370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8864470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8864570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8864630Z        ...
2025-02-24T16:12:46.8864700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8864810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8864890Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8865330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8865330Z 
2025-02-24T16:12:46.8865440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8865540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8865590Z        ...
2025-02-24T16:12:46.8865670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8865780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8866090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8866170Z        ...
2025-02-24T16:12:46.8866270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8866530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8866630Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8867080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8867090Z 
2025-02-24T16:12:46.8867200Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8867290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8867340Z        ...
2025-02-24T16:12:46.8867410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8867520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8867630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8869750Z        ...
2025-02-24T16:12:46.8869840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8869940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8870040Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8870520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8870530Z 
2025-02-24T16:12:46.8870660Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8870770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8870820Z        ...
2025-02-24T16:12:46.8870890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8870990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8871080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8871150Z        ...
2025-02-24T16:12:46.8871260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8871370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8871460Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8872250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8872260Z 
2025-02-24T16:12:46.8872380Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8872480Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8872540Z        ...
2025-02-24T16:12:46.8872610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8872710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8872800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8872860Z        ...
2025-02-24T16:12:46.8872930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8873030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8873120Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8873970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8873970Z 
2025-02-24T16:12:46.8874080Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8874180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8874230Z        ...
2025-02-24T16:12:46.8874300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8874420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8874550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8874610Z        ...
2025-02-24T16:12:46.8874680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8877140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8877250Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8878180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8878190Z 
2025-02-24T16:12:46.8878280Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8878620Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8878920Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8879210Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8879650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8879660Z 
2025-02-24T16:12:46.8879740Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8880040Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8880360Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8881280Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8881740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8881740Z 
2025-02-24T16:12:46.8881860Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8881980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8882070Z        ...
2025-02-24T16:12:46.8882170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8882330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8882430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8882480Z        ...
2025-02-24T16:12:46.8882700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8882800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8882890Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8883510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8883530Z 
2025-02-24T16:12:46.8883650Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8883740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8883800Z        ...
2025-02-24T16:12:46.8883870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8883980Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8884120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8884180Z        ...
2025-02-24T16:12:46.8884250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8884360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8884460Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8887110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8887130Z 
2025-02-24T16:12:46.8887240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8887340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8887390Z        ...
2025-02-24T16:12:46.8887460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8887570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8887670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8887740Z        ...
2025-02-24T16:12:46.8887800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8887920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8887990Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8888450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8888450Z 
2025-02-24T16:12:46.8888580Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8888700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8888760Z        ...
2025-02-24T16:12:46.8889080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8889200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8889310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8889360Z        ...
2025-02-24T16:12:46.8889430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8889530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8889620Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8890810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8890850Z 
2025-02-24T16:12:46.8890990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8891110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8891170Z        ...
2025-02-24T16:12:46.8891260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8891400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8891530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8891590Z        ...
2025-02-24T16:12:46.8891660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8891790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8892420Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8892920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8893110Z 
2025-02-24T16:12:46.8893240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8893350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8893410Z        ...
2025-02-24T16:12:46.8893520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8893630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8893720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8893780Z        ...
2025-02-24T16:12:46.8893850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8899970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8900100Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8900580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8900590Z 
2025-02-24T16:12:46.8900700Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8900830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8900930Z        ...
2025-02-24T16:12:46.8901040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8901200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8901350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8901430Z        ...
2025-02-24T16:12:46.8901550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8901710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8901830Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8902400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8902430Z 
2025-02-24T16:12:46.8902530Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8902910Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8903250Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8903600Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8904100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8904110Z 
2025-02-24T16:12:46.8904220Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8904710Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8905580Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8905950Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8906440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8906460Z 
2025-02-24T16:12:46.8906610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8906740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8906820Z        ...
2025-02-24T16:12:46.8906940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8907090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8907220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8907310Z        ...
2025-02-24T16:12:46.8907410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8907520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8907600Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8908130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8908150Z 
2025-02-24T16:12:46.8908270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8908360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8908410Z        ...
2025-02-24T16:12:46.8908480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8908590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8908680Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8908730Z        ...
2025-02-24T16:12:46.8908830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8908960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8909080Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8909590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8909610Z 
2025-02-24T16:12:46.8909740Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8909870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8909930Z        ...
2025-02-24T16:12:46.8910000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8910110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8910210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8910270Z        ...
2025-02-24T16:12:46.8910360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8910500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8910590Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8911100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8911210Z 
2025-02-24T16:12:46.8911490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8911610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8911700Z        ...
2025-02-24T16:12:46.8911800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8911940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8912070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8912160Z        ...
2025-02-24T16:12:46.8912260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8912420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8912530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8913030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8913050Z 
2025-02-24T16:12:46.8913190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8913310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8913380Z        ...
2025-02-24T16:12:46.8913500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8913630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8914250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8914340Z        ...
2025-02-24T16:12:46.8914450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8914560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8914640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8915100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8915120Z 
2025-02-24T16:12:46.8915240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8915340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8915420Z        ...
2025-02-24T16:12:46.8915520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8915680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8915790Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8915850Z        ...
2025-02-24T16:12:46.8915920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8916060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8916170Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8916720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8916750Z 
2025-02-24T16:12:46.8916890Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8917020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8917100Z        ...
2025-02-24T16:12:46.8917210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8917330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8917470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8917550Z        ...
2025-02-24T16:12:46.8917660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8917800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8917930Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8918570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8918820Z 
2025-02-24T16:12:46.8918940Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8919350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8919800Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8920200Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8920810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8920830Z 
2025-02-24T16:12:46.8920930Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8921310Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8921720Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8922170Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8922720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8922730Z 
2025-02-24T16:12:46.8922860Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8922990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8923080Z        ...
2025-02-24T16:12:46.8923180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8923340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8931550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8931660Z        ...
2025-02-24T16:12:46.8931730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8931840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8931930Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8932440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8932910Z 
2025-02-24T16:12:46.8933170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8933280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8933330Z        ...
2025-02-24T16:12:46.8933400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8933520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8933620Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8933680Z        ...
2025-02-24T16:12:46.8933770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8934300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8934450Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8935040Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8935060Z 
2025-02-24T16:12:46.8935240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8935380Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8935440Z        ...
2025-02-24T16:12:46.8935520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8935660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8935770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8935820Z        ...
2025-02-24T16:12:46.8935920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8936060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8936180Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8936810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.8936830Z 
2025-02-24T16:12:46.8937010Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:12:46.8937370Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8941360Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-24T16:12:46.8949600Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:12:46.8949810Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:12:46.8950370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8950380Z 
2025-02-24T16:12:46.8950500Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8950600Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8950670Z        ...
2025-02-24T16:12:46.8950760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8950900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8951040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8951110Z        ...
2025-02-24T16:12:46.8951200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8951350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8951440Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8951940Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8951950Z 
2025-02-24T16:12:46.8952050Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8952180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8952240Z        ...
2025-02-24T16:12:46.8952330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8952430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8952540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8952800Z        ...
2025-02-24T16:12:46.8952880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8953110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8953220Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8953750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8953770Z 
2025-02-24T16:12:46.8953920Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8954030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8954110Z        ...
2025-02-24T16:12:46.8954220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8954350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8954500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8954590Z        ...
2025-02-24T16:12:46.8954700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8954930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8955030Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8955570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8955590Z 
2025-02-24T16:12:46.8955710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8955840Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8955900Z        ...
2025-02-24T16:12:46.8955990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8956110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8956240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8956300Z        ...
2025-02-24T16:12:46.8956370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8956480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8956560Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8960440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8960470Z 
2025-02-24T16:12:46.8960590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8960680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8960730Z        ...
2025-02-24T16:12:46.8960810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8960910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8961000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8961070Z        ...
2025-02-24T16:12:46.8961140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8961240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8961350Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8961860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8961870Z 
2025-02-24T16:12:46.8961950Z Series values are different (4.04858 %)
2025-02-24T16:12:46.8962290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8962870Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8963360Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.8963910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.8963920Z 
2025-02-24T16:12:46.8964040Z Series values are different (6.47773 %)
2025-02-24T16:12:46.8966350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8966750Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8967170Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.8967770Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8967790Z 
2025-02-24T16:12:46.8967950Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8968070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8968160Z        ...
2025-02-24T16:12:46.8968270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8968400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8968540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8968640Z        ...
2025-02-24T16:12:46.8968730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8968910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8969070Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8969630Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8969640Z 
2025-02-24T16:12:46.8969770Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8969860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8969920Z        ...
2025-02-24T16:12:46.8970000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8970120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8970560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8970620Z        ...
2025-02-24T16:12:46.8970690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8971130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8971220Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8971700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8971710Z 
2025-02-24T16:12:46.8971830Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8971930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8971980Z        ...
2025-02-24T16:12:46.8972060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8972170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8972260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8972320Z        ...
2025-02-24T16:12:46.8972390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8972510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8972610Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8975460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.8975500Z 
2025-02-24T16:12:46.8975680Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:12:46.8976000Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.8985520Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:12:46.8990370Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:12:46.8990800Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:12:46.8991430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8991450Z 
2025-02-24T16:12:46.8991560Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8991670Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8991720Z        ...
2025-02-24T16:12:46.8991810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8991940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8992040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8992090Z        ...
2025-02-24T16:12:46.8992170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8992270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8992360Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8992860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8992880Z 
2025-02-24T16:12:46.8992990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8993090Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8993140Z        ...
2025-02-24T16:12:46.8993210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8993320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8993420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8993470Z        ...
2025-02-24T16:12:46.8993550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8993650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8993740Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8994210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8995830Z 
2025-02-24T16:12:46.8995990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8996120Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8996210Z        ...
2025-02-24T16:12:46.8996320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8996470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8996600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8996660Z        ...
2025-02-24T16:12:46.8996750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8997260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8997440Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8997980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8997990Z 
2025-02-24T16:12:46.8998120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8998240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8998320Z        ...
2025-02-24T16:12:46.8998400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8998510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8998630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8998700Z        ...
2025-02-24T16:12:46.8998800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.8998910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.8999020Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.8999470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.8999480Z 
2025-02-24T16:12:46.8999600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.8999720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.8999780Z        ...
2025-02-24T16:12:46.8999870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9000000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9000130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9000200Z        ...
2025-02-24T16:12:46.9000310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9000450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9000570Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9001060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9001070Z 
2025-02-24T16:12:46.9001180Z Series values are different (4.04858 %)
2025-02-24T16:12:46.9001550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9001950Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9002580Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9003400Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9003410Z 
2025-02-24T16:12:46.9003500Z Series values are different (6.47773 %)
2025-02-24T16:12:46.9003880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9004250Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9004640Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9005130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9005150Z 
2025-02-24T16:12:46.9005260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9005390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9005470Z        ...
2025-02-24T16:12:46.9005580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9005730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9005870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9005960Z        ...
2025-02-24T16:12:46.9006050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9006190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9006320Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9006810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9006830Z 
2025-02-24T16:12:46.9006980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9007100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9007180Z        ...
2025-02-24T16:12:46.9007280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9007410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9007540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9007620Z        ...
2025-02-24T16:12:46.9007730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9007860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9007990Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9008470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9008700Z 
2025-02-24T16:12:46.9008850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9008960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9009210Z        ...
2025-02-24T16:12:46.9009290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9009390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9009490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9009550Z        ...
2025-02-24T16:12:46.9009620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9009750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9009870Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9010450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.9010460Z 
2025-02-24T16:12:46.9010630Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:12:46.9010990Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9015590Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T16:12:46.9019850Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:12:46.9020390Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:12:46.9020860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9020880Z 
2025-02-24T16:12:46.9020980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9021080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9021140Z        ...
2025-02-24T16:12:46.9021210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9021340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9021470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9021550Z        ...
2025-02-24T16:12:46.9021650Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9021800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9021920Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9022330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9022340Z 
2025-02-24T16:12:46.9022460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9022570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9022640Z        ...
2025-02-24T16:12:46.9022730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9022870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9023000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9023090Z        ...
2025-02-24T16:12:46.9023200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9023340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9023440Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9023910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9023930Z 
2025-02-24T16:12:46.9024060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9024170Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9024240Z        ...
2025-02-24T16:12:46.9024340Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9024460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9024580Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9024810Z        ...
2025-02-24T16:12:46.9024910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9025060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9025290Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9025760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9025770Z 
2025-02-24T16:12:46.9025900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9026010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9026060Z        ...
2025-02-24T16:12:46.9026130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9026260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9026350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9026430Z        ...
2025-02-24T16:12:46.9026520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9026630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9026730Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9027180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9027190Z 
2025-02-24T16:12:46.9027300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9027410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9027480Z        ...
2025-02-24T16:12:46.9027580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9027700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9027830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9027910Z        ...
2025-02-24T16:12:46.9028000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9028120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9028230Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9029200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9029240Z 
2025-02-24T16:12:46.9029350Z Series values are different (4.04858 %)
2025-02-24T16:12:46.9029760Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9030110Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9030480Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9031110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9031120Z 
2025-02-24T16:12:46.9031210Z Series values are different (6.47773 %)
2025-02-24T16:12:46.9031560Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9032360Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9032720Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9033140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9033140Z 
2025-02-24T16:12:46.9033270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9033390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9033460Z        ...
2025-02-24T16:12:46.9033570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9033720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9033850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9033910Z        ...
2025-02-24T16:12:46.9033990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9034150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9034270Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9034810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9034830Z 
2025-02-24T16:12:46.9035000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9035110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9035200Z        ...
2025-02-24T16:12:46.9035310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9035460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9035630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9035710Z        ...
2025-02-24T16:12:46.9035840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9036370Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9036500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9036960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9036990Z 
2025-02-24T16:12:46.9037140Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9037300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9037380Z        ...
2025-02-24T16:12:46.9037490Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9037640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9037800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9037880Z        ...
2025-02-24T16:12:46.9037980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9038160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9038640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9039180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9039440Z 
2025-02-24T16:12:46.9039610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9039740Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9039840Z        ...
2025-02-24T16:12:46.9039940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9040070Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9040200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9040300Z        ...
2025-02-24T16:12:46.9040410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9040560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9040690Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9041230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9041260Z 
2025-02-24T16:12:46.9041420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9041560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9041630Z        ...
2025-02-24T16:12:46.9041710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9041830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9041950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9042010Z        ...
2025-02-24T16:12:46.9042110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9042250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9042380Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9042920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9042940Z 
2025-02-24T16:12:46.9043060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9043160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9043220Z        ...
2025-02-24T16:12:46.9043300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9043460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9043600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9043680Z        ...
2025-02-24T16:12:46.9043800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9043940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9044060Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9044550Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9044570Z 
2025-02-24T16:12:46.9044750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9044860Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9044940Z        ...
2025-02-24T16:12:46.9045060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9045200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9045320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9045380Z        ...
2025-02-24T16:12:46.9045470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9045610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9045740Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9046190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9046320Z 
2025-02-24T16:12:46.9046420Z Series values are different (4.04858 %)
2025-02-24T16:12:46.9047350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9047710Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9048470Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9049060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9049070Z 
2025-02-24T16:12:46.9049170Z Series values are different (6.47773 %)
2025-02-24T16:12:46.9049620Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9050040Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9050490Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9051000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9051010Z 
2025-02-24T16:12:46.9051160Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9051310Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9051450Z        ...
2025-02-24T16:12:46.9051560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9051700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9051800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9051860Z        ...
2025-02-24T16:12:46.9051950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9052110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9052230Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9052750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9052950Z 
2025-02-24T16:12:46.9053110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9053410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9053480Z        ...
2025-02-24T16:12:46.9053560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9053710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9053870Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9053960Z        ...
2025-02-24T16:12:46.9054080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9054230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9054350Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9054840Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9054870Z 
2025-02-24T16:12:46.9055030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9055160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9055250Z        ...
2025-02-24T16:12:46.9055360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9055500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9055970Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9056050Z        ...
2025-02-24T16:12:46.9056170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9056310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9056400Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9056870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9056890Z 
2025-02-24T16:12:46.9057070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9057210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9057300Z        ...
2025-02-24T16:12:46.9057390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9057540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9057700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9057820Z        ...
2025-02-24T16:12:46.9057950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9058090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9058210Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9058710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9058720Z 
2025-02-24T16:12:46.9059410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9059560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9059630Z        ...
2025-02-24T16:12:46.9059730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9059870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9059980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9060040Z        ...
2025-02-24T16:12:46.9060150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9060290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9060390Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9060890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9060900Z 
2025-02-24T16:12:46.9061440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9061750Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9061810Z        ...
2025-02-24T16:12:46.9061880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9062100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9062200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9062260Z        ...
2025-02-24T16:12:46.9062370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9062520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9062640Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9063140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9063160Z 
2025-02-24T16:12:46.9063660Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9063810Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9063950Z        ...
2025-02-24T16:12:46.9064030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9064150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9064260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9064350Z        ...
2025-02-24T16:12:46.9064450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9064570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9064690Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9065660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9065680Z 
2025-02-24T16:12:46.9065770Z Series values are different (4.04858 %)
2025-02-24T16:12:46.9066130Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9066790Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9067240Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9075510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9075530Z 
2025-02-24T16:12:46.9075640Z Series values are different (6.47773 %)
2025-02-24T16:12:46.9075990Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9076340Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9078440Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9079120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9079140Z 
2025-02-24T16:12:46.9079300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9079420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9079500Z        ...
2025-02-24T16:12:46.9079630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9079740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9079860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9079940Z        ...
2025-02-24T16:12:46.9080070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9080230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9080360Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9080930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9080940Z 
2025-02-24T16:12:46.9081070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9081250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9081330Z        ...
2025-02-24T16:12:46.9081750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9081900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9082050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9082140Z        ...
2025-02-24T16:12:46.9082220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9082330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9082430Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9082930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9082940Z 
2025-02-24T16:12:46.9083060Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9083180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9083260Z        ...
2025-02-24T16:12:46.9083370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9083530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9083700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9083780Z        ...
2025-02-24T16:12:46.9083900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9084050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9084170Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9084720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9084740Z 
2025-02-24T16:12:46.9084890Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9085030Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9085120Z        ...
2025-02-24T16:12:46.9085230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9085620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9085760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9086030Z        ...
2025-02-24T16:12:46.9086140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9086310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9086440Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9086960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9086970Z 
2025-02-24T16:12:46.9087110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9087240Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9087330Z        ...
2025-02-24T16:12:46.9087430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9087620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9087770Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9088020Z        ...
2025-02-24T16:12:46.9088190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9088360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9088530Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9089070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9089080Z 
2025-02-24T16:12:46.9089220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9089350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9089440Z        ...
2025-02-24T16:12:46.9089570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9089710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9089840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9089940Z        ...
2025-02-24T16:12:46.9090040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9090180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9090320Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9090930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9090940Z 
2025-02-24T16:12:46.9091110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9091290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9091370Z        ...
2025-02-24T16:12:46.9091470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9091620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9091760Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9091860Z        ...
2025-02-24T16:12:46.9091970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9092120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9092240Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9093590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9093610Z 
2025-02-24T16:12:46.9093720Z Series values are different (4.04858 %)
2025-02-24T16:12:46.9094080Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9095220Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9107840Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:12:46.9109480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:12:46.9109560Z 
2025-02-24T16:12:46.9109870Z Series values are different (6.47773 %)
2025-02-24T16:12:46.9110870Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9112010Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9113110Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:12:46.9114590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9114630Z 
2025-02-24T16:12:46.9114950Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9115280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9115500Z        ...
2025-02-24T16:12:46.9115770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9116140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9116510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9116760Z        ...
2025-02-24T16:12:46.9117310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9117890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9118180Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9119750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9119780Z 
2025-02-24T16:12:46.9120190Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9120490Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9120670Z        ...
2025-02-24T16:12:46.9120860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9121150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9122120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9122290Z        ...
2025-02-24T16:12:46.9134460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9135030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9135350Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9142220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9142280Z 
2025-02-24T16:12:46.9142480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9142620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9142700Z        ...
2025-02-24T16:12:46.9142830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9142980Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9143150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9143220Z        ...
2025-02-24T16:12:46.9143320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9143480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9143600Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9144230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9144240Z 
2025-02-24T16:12:46.9144380Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9144520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9144620Z        ...
2025-02-24T16:12:46.9144730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9144870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9145010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9145110Z        ...
2025-02-24T16:12:46.9145210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9145360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9145500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9146110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9146130Z 
2025-02-24T16:12:46.9146270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9146400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9146490Z        ...
2025-02-24T16:12:46.9146590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9146730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9146880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9146970Z        ...
2025-02-24T16:12:46.9147100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9147250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9147370Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9147970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:12:46.9147980Z 
2025-02-24T16:12:46.9148130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:12:46.9148260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9148320Z        ...
2025-02-24T16:12:46.9148450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9148590Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9148720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:12:46.9149340Z        ...
2025-02-24T16:12:46.9149450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:12:46.9149610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:12:46.9149970Z At positional index 75, first diff: 6 != 7
2025-02-24T16:12:46.9150290Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T16:12:46.9150410Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9150420Z 
2025-02-24T16:12:46.9150510Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:12:46.9150590Z Max absolute difference: 1.
2025-02-24T16:12:46.9150660Z Max relative difference: 1.
2025-02-24T16:12:46.9150830Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.9150950Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.9151070Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:12:46.9151190Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.9151290Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:12:46.9151430Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:12:46.9151740Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T16:12:46.9151860Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9151880Z 
2025-02-24T16:12:46.9151980Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:12:46.9152070Z Max absolute difference: 4005
2025-02-24T16:12:46.9152170Z Max relative difference: 26.00649351
2025-02-24T16:12:46.9152280Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:12:46.9152390Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:12:46.9152680Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T16:12:46.9152790Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9152800Z 
2025-02-24T16:12:46.9152880Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:12:46.9152950Z Max absolute difference: 4046
2025-02-24T16:12:46.9153040Z Max relative difference: 24.82208589
2025-02-24T16:12:46.9153140Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:12:46.9153240Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:12:46.9153510Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T16:12:46.9153620Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9153630Z 
2025-02-24T16:12:46.9153740Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:12:46.9153850Z Max absolute difference: 0.99984222
2025-02-24T16:12:46.9153940Z Max relative difference: 6337.12154973
2025-02-24T16:12:46.9154020Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.9154100Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.9154190Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.9154270Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.9154370Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:12:46.9154460Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:12:46.9154700Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T16:12:46.9154810Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9154820Z 
2025-02-24T16:12:46.9154920Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:12:46.9155030Z Max absolute difference: 4.25260542e+12
2025-02-24T16:12:46.9155130Z Max relative difference: 18196.0085861
2025-02-24T16:12:46.9155290Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:12:46.9155380Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:12:46.9155510Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:12:46.9155790Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:12:46.9155870Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:12:46.9156190Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:12:46.9156420Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T16:12:46.9156530Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9156540Z 
2025-02-24T16:12:46.9156630Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:12:46.9156730Z Max absolute difference: 2.92713618
2025-02-24T16:12:46.9156820Z Max relative difference: 18196.0085861
2025-02-24T16:12:46.9156980Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:12:46.9157060Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:12:46.9157330Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:12:46.9157420Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:12:46.9157680Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T16:12:46.9157780Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9157790Z 
2025-02-24T16:12:46.9157880Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:12:46.9157960Z Max absolute difference: 282815.33818472
2025-02-24T16:12:46.9158030Z Max relative difference: 4.12352828e+47
2025-02-24T16:12:46.9158160Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:12:46.9158220Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:12:46.9158340Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:12:46.9158460Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:12:46.9158530Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:12:46.9158650Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:12:46.9159060Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.9159070Z 
2025-02-24T16:12:46.9159220Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:12:46.9159280Z [index]: [0, 1]
2025-02-24T16:12:46.9159360Z [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-24T16:12:46.9159450Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:12:46.9159620Z At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:12:46.9160090Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.9160100Z 
2025-02-24T16:12:46.9160260Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:12:46.9160330Z [index]: [0, 1]
2025-02-24T16:12:46.9160430Z [left]:  [9967.488442185557, 10091.396322818851]
2025-02-24T16:12:46.9160550Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:12:46.9160740Z At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:12:46.9161240Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:12:46.9161260Z 
2025-02-24T16:12:46.9161400Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:12:46.9161460Z [index]: [0, 1]
2025-02-24T16:12:46.9161580Z [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-24T16:12:46.9161690Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:12:46.9161860Z At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-24T16:12:46.9162220Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T16:12:46.9162390Z 
2025-02-24T16:12:46.9162510Z Series values are different (100.0 %)
2025-02-24T16:12:46.9162660Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.9163890Z [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-24T16:12:46.9164980Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:12:46.9165210Z At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-24T16:12:46.9165590Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T16:12:46.9165600Z 
2025-02-24T16:12:46.9165720Z Series values are different (100.0 %)
2025-02-24T16:12:46.9165860Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.9166720Z [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-24T16:12:46.9167620Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:12:46.9167820Z At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-24T16:12:46.9168160Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T16:12:46.9168170Z 
2025-02-24T16:12:46.9168250Z Series values are different (90.0 %)
2025-02-24T16:12:46.9168350Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.9169210Z [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-24T16:12:46.9170090Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:12:46.9170260Z At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T16:12:46.9170590Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T16:12:46.9170700Z 
2025-02-24T16:12:46.9170780Z Series values are different (95.0 %)
2025-02-24T16:12:46.9170930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:12:46.9172020Z [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-24T16:12:46.9208350Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:12:46.9208720Z At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T16:12:46.9209140Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T16:12:46.9209150Z 
2025-02-24T16:12:46.9209270Z Series values are different (5.1125 %)
2025-02-24T16:12:46.9209680Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9214210Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:12:46.9218730Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:12:46.9219770Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:12:46.9220150Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T16:12:46.9220160Z 
2025-02-24T16:12:46.9220250Z Series values are different (1.3025 %)
2025-02-24T16:12:46.9220700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:12:46.9244270Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:12:46.9296100Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:12:46.9296720Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:12:46.9297720Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T16:12:46.9298050Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9298070Z 
2025-02-24T16:12:46.9298330Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:12:46.9298610Z Max absolute difference: 4.30543741e+37
2025-02-24T16:12:46.9298870Z Max relative difference: 1.
2025-02-24T16:12:46.9299270Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9299490Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9300220Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9300520Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9301560Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T16:12:46.9302260Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9302280Z 
2025-02-24T16:12:46.9302860Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:12:46.9303170Z Max absolute difference: 4.15247374e+37
2025-02-24T16:12:46.9303450Z Max relative difference: 1.
2025-02-24T16:12:46.9303860Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9304170Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9304560Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9304800Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9305540Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T16:12:46.9305880Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9305910Z 
2025-02-24T16:12:46.9306190Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:12:46.9306470Z Max absolute difference: 4.30543741e+37
2025-02-24T16:12:46.9306710Z Max relative difference: 1.
2025-02-24T16:12:46.9311470Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9311850Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9312360Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9312620Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9313490Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T16:12:46.9319990Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9320060Z 
2025-02-24T16:12:46.9320390Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:12:46.9320690Z Max absolute difference: 5.32418652e-19
2025-02-24T16:12:46.9321010Z Max relative difference: 12.23359055
2025-02-24T16:12:46.9321300Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9321550Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9321810Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9322080Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9330710Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9331070Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9331790Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T16:12:46.9332060Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9332100Z 
2025-02-24T16:12:46.9332620Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:12:46.9332900Z Max absolute difference: 1.38672909e+39
2025-02-24T16:12:46.9333140Z Max relative difference: 5.25284451
2025-02-24T16:12:46.9333480Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9333700Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9334040Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9334300Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9335010Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T16:12:46.9335270Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9335290Z 
2025-02-24T16:12:46.9335550Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:12:46.9335810Z Max absolute difference: 5.26760031e+38
2025-02-24T16:12:46.9336080Z Max relative difference: 35562.41947434
2025-02-24T16:12:46.9336460Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9336690Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9337040Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9337260Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9339060Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T16:12:46.9339660Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9339680Z 
2025-02-24T16:12:46.9339960Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:12:46.9340210Z Max absolute difference: 7.03072887e-19
2025-02-24T16:12:46.9340420Z Max relative difference: 7.72237896
2025-02-24T16:12:46.9340640Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9340840Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9341040Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9341250Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9341470Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9342020Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9343120Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T16:12:46.9343390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9343400Z 
2025-02-24T16:12:46.9343620Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:12:46.9343890Z Max absolute difference: 2.09719426e+39
2025-02-24T16:12:46.9344150Z Max relative difference: 4.0036592
2025-02-24T16:12:46.9344530Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9344760Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9345130Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9345350Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9346570Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T16:12:46.9346890Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9346900Z 
2025-02-24T16:12:46.9347170Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.9347440Z Max absolute difference: 5.00661745e+37
2025-02-24T16:12:46.9347700Z Max relative difference: 17.51202125
2025-02-24T16:12:46.9348110Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:12:46.9348370Z        2.279436e+31, 2.243943e+31])
2025-02-24T16:12:46.9348750Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:12:46.9348940Z        2.292907e+31, 2.257206e+31])
2025-02-24T16:12:46.9349940Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T16:12:46.9350190Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9350200Z 
2025-02-24T16:12:46.9350470Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:12:46.9350720Z Max absolute difference: 4.67863561e-19
2025-02-24T16:12:46.9350980Z Max relative difference: 3.25828651
2025-02-24T16:12:46.9351430Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9351670Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9351910Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9352160Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9352390Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9352610Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9353680Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T16:12:46.9353980Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9354000Z 
2025-02-24T16:12:46.9354250Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:12:46.9354500Z Max absolute difference: 8.5486318e+38
2025-02-24T16:12:46.9354760Z Max relative difference: 1.86186015
2025-02-24T16:12:46.9355170Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9355400Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9356710Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9356930Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9358050Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T16:12:46.9365780Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9365810Z 
2025-02-24T16:12:46.9366090Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.9366340Z Max absolute difference: 2.90101642e+37
2025-02-24T16:12:46.9366620Z Max relative difference: 0.98973757
2025-02-24T16:12:46.9367080Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:12:46.9367360Z        1.330497e+31, 1.294462e+31])
2025-02-24T16:12:46.9368130Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:12:46.9368400Z        1.375141e+31, 1.337928e+31])
2025-02-24T16:12:46.9371560Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T16:12:46.9371890Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9371920Z 
2025-02-24T16:12:46.9372230Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:12:46.9372460Z Max absolute difference: 4.67863561e-19
2025-02-24T16:12:46.9372690Z Max relative difference: 3.25828651
2025-02-24T16:12:46.9374440Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9374680Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9374760Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9374860Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9374940Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9375000Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9375420Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T16:12:46.9375550Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9375560Z 
2025-02-24T16:12:46.9375630Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:12:46.9375720Z Max absolute difference: 8.5486318e+38
2025-02-24T16:12:46.9375820Z Max relative difference: 1.86186015
2025-02-24T16:12:46.9375960Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9376030Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9376150Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9376220Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9376600Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T16:12:46.9376690Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9376690Z 
2025-02-24T16:12:46.9376770Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.9376840Z Max absolute difference: 2.99183385e+37
2025-02-24T16:12:46.9376920Z Max relative difference: 0.98992197
2025-02-24T16:12:46.9377060Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:12:46.9377150Z        1.260980e+31, 1.222587e+31])
2025-02-24T16:12:46.9377280Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:12:46.9377340Z        1.193005e+31, 1.164854e+31])
2025-02-24T16:12:46.9377960Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T16:12:46.9378050Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9378050Z 
2025-02-24T16:12:46.9378140Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:12:46.9378210Z Max absolute difference: 7.03072887e-19
2025-02-24T16:12:46.9378280Z Max relative difference: 7.72237896
2025-02-24T16:12:46.9378340Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9378410Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9378890Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9378970Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9379060Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:12:46.9379260Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:12:46.9379620Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T16:12:46.9379700Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9379700Z 
2025-02-24T16:12:46.9379770Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:12:46.9379850Z Max absolute difference: 2.09719426e+39
2025-02-24T16:12:46.9379920Z Max relative difference: 4.0036592
2025-02-24T16:12:46.9380040Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9380120Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9380270Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:12:46.9380340Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9380740Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T16:12:46.9380860Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9380860Z 
2025-02-24T16:12:46.9380940Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:12:46.9381010Z Max absolute difference: 5.0153284e+37
2025-02-24T16:12:46.9381080Z Max relative difference: 4.90769503
2025-02-24T16:12:46.9381200Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:12:46.9381270Z        2.088676e+31, 2.060278e+31])
2025-02-24T16:12:46.9381380Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:12:46.9381460Z        2.124305e+31, 2.101081e+31])
2025-02-24T16:12:46.9381770Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T16:12:46.9381860Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:12:46.9381870Z 
2025-02-24T16:12:46.9381940Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:12:46.9382010Z Max absolute difference: 2.25821059e+25
2025-02-24T16:12:46.9382100Z Max relative difference: 0.00054426
2025-02-24T16:12:46.9382220Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:12:46.9382350Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:12:46.9382470Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:12:46.9382610Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:12:46.9382730Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:12:46.9382850Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:12:46.9383210Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T16:12:46.9383340Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:12:46.9383350Z 
2025-02-24T16:12:46.9383440Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:12:46.9383550Z Max absolute difference: 1.93283629e+25
2025-02-24T16:12:46.9383740Z Max relative difference: 0.00029148
2025-02-24T16:12:46.9383880Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:12:46.9383990Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:12:46.9384110Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:12:46.9384220Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:12:46.9384310Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:12:46.9385320Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:12:46.9385700Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T16:12:46.9386010Z Arrays are not equal
2025-02-24T16:12:46.9386010Z 
2025-02-24T16:12:46.9386090Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:12:46.9386210Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:12:46.9386400Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:12:46.9392220Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:12:46.9392390Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:12:46.9392480Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:12:46.9392600Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:12:46.9392980Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T16:12:46.9393070Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:12:46.9393080Z 
2025-02-24T16:12:46.9393160Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:12:46.9393270Z Max absolute difference: 2.00640487e-05
2025-02-24T16:12:46.9393360Z Max relative difference: 2.06329455
2025-02-24T16:12:46.9393510Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:12:46.9393610Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:12:46.9393760Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:12:46.9393860Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:12:46.9394260Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T16:12:46.9394360Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9394370Z 
2025-02-24T16:12:46.9394460Z (shapes (508,), (515,) mismatch)
2025-02-24T16:12:46.9394590Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:12:46.9394710Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:12:46.9394860Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:12:46.9394970Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:12:46.9395070Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:12:46.9395190Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:12:46.9395620Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T16:12:46.9397690Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9397710Z 
2025-02-24T16:12:46.9397790Z (shapes (558,), (560,) mismatch)
2025-02-24T16:12:46.9397900Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:12:46.9398000Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:12:46.9398150Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:12:46.9398270Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:12:46.9398370Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:12:46.9398490Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:12:46.9398890Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T16:12:46.9398980Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9398980Z 
2025-02-24T16:12:46.9399040Z (shapes (147,), (136,) mismatch)
2025-02-24T16:12:46.9399170Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:12:46.9399290Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:12:46.9399400Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:12:46.9399520Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:12:46.9399610Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:12:46.9399970Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:12:46.9400390Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T16:12:46.9400620Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9400630Z 
2025-02-24T16:12:46.9400710Z (shapes (159,), (153,) mismatch)
2025-02-24T16:12:46.9400840Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:12:46.9400950Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:12:46.9401090Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:12:46.9401210Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:12:46.9401310Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:12:46.9401400Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:12:46.9401790Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T16:12:46.9401890Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9401900Z 
2025-02-24T16:12:46.9401970Z (shapes (508,), (515,) mismatch)
2025-02-24T16:12:46.9402080Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:12:46.9402170Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:12:46.9402300Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:12:46.9402440Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:12:46.9402550Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:12:46.9402650Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:12:46.9403060Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T16:12:46.9403160Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9403180Z 
2025-02-24T16:12:46.9403250Z (shapes (1466,), (1481,) mismatch)
2025-02-24T16:12:46.9403390Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:12:46.9403460Z        11152.962595, 11172.044815])
2025-02-24T16:12:46.9403590Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:12:46.9403670Z        11398.237865, 11111.204868])
2025-02-24T16:12:46.9404080Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T16:12:46.9404200Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9404210Z 
2025-02-24T16:12:46.9404300Z (shapes (147,), (136,) mismatch)
2025-02-24T16:12:46.9404420Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:12:46.9404540Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:12:46.9404640Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:12:46.9404760Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:12:46.9404850Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:12:46.9404950Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:12:46.9405350Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T16:12:46.9405440Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9405440Z 
2025-02-24T16:12:46.9405510Z (shapes (379,), (381,) mismatch)
2025-02-24T16:12:46.9405620Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:12:46.9405730Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:12:46.9406070Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:12:46.9406210Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:12:46.9406460Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:12:46.9406590Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:12:46.9406980Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T16:12:46.9407070Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9407070Z 
2025-02-24T16:12:46.9407150Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:12:46.9407230Z Max absolute difference: 22.
2025-02-24T16:12:46.9407300Z Max relative difference: 0.8
2025-02-24T16:12:46.9407580Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:12:46.9407650Z        [1.19e+04, 1.67e+02],
2025-02-24T16:12:46.9407710Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:12:46.9407800Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:12:46.9407870Z        [1.19e+04, 1.89e+02],
2025-02-24T16:12:46.9407940Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:12:46.9408320Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T16:12:46.9408410Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9408410Z 
2025-02-24T16:12:46.9408480Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:12:46.9408560Z Max absolute difference: 22.
2025-02-24T16:12:46.9408630Z Max relative difference: 0.8
2025-02-24T16:12:46.9408700Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:12:46.9408760Z        [1.19e+04, 1.67e+02],
2025-02-24T16:12:46.9408820Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:12:46.9408880Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:12:46.9408940Z        [1.19e+04, 1.89e+02],
2025-02-24T16:12:46.9409000Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:12:46.9409370Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T16:12:46.9409480Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9409490Z 
2025-02-24T16:12:46.9409570Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.9409650Z Max absolute difference: 34
2025-02-24T16:12:46.9409730Z Max relative difference: 0.71428571
2025-02-24T16:12:46.9409860Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.9409940Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.9410050Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.9410120Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.9410470Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T16:12:46.9410590Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9410600Z 
2025-02-24T16:12:46.9410700Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:12:46.9410810Z Max absolute difference: 34.
2025-02-24T16:12:46.9410920Z Max relative difference: 0.65
2025-02-24T16:12:46.9411020Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:12:46.9411120Z        [1.19e+04, 2.72e+02],
2025-02-24T16:12:46.9411210Z        [1.19e+04, 1.10e+02],...
2025-02-24T16:12:46.9411310Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:12:46.9411410Z        [1.19e+04, 3.06e+02],
2025-02-24T16:12:46.9411510Z        [1.19e+04, 1.18e+02],...
2025-02-24T16:12:46.9411950Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:12:46.9412070Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9412080Z 
2025-02-24T16:12:46.9412190Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.9412290Z Max absolute difference: 22
2025-02-24T16:12:46.9412400Z Max relative difference: 0.8
2025-02-24T16:12:46.9412840Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:12:46.9412970Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.9413120Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:12:46.9413490Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.9413950Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:12:46.9414070Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9414090Z 
2025-02-24T16:12:46.9414190Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.9414300Z Max absolute difference: 22
2025-02-24T16:12:46.9414410Z Max relative difference: 0.8
2025-02-24T16:12:46.9414580Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:12:46.9414680Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.9414840Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:12:46.9414960Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:12:46.9415400Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:12:46.9415520Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9415540Z 
2025-02-24T16:12:46.9415640Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.9415750Z Max absolute difference: 34
2025-02-24T16:12:46.9415860Z Max relative difference: 0.71428571
2025-02-24T16:12:46.9416040Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.9416150Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.9416310Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.9416430Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.9416850Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:12:46.9416980Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:12:46.9416990Z 
2025-02-24T16:12:46.9417100Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:12:46.9417200Z Max absolute difference: 34
2025-02-24T16:12:46.9417320Z Max relative difference: 0.65
2025-02-24T16:12:46.9417490Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:12:46.9417600Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.9417750Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:12:46.9417860Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:12:46.9418360Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T16:12:46.9418480Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9418490Z 
2025-02-24T16:12:46.9418610Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9418730Z Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.9418860Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9419040Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9419150Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9419320Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9419420Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9419910Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T16:12:46.9420040Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9420050Z 
2025-02-24T16:12:46.9420170Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9420290Z Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.9420390Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9420570Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9420830Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9421020Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9421280Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9421770Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T16:12:46.9421900Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9421910Z 
2025-02-24T16:12:46.9422020Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9422150Z Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.9422270Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9422450Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9422560Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9422740Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9422860Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9423330Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T16:12:46.9423460Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9423470Z 
2025-02-24T16:12:46.9423580Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9423690Z Max absolute difference: 4.3299331e-05
2025-02-24T16:12:46.9423800Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9423970Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9424080Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9424250Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9424350Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9424850Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T16:12:46.9424970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9424990Z 
2025-02-24T16:12:46.9425110Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9425220Z Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.9425340Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9425610Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9425710Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9425890Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9425990Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9426470Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T16:12:46.9426590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9426610Z 
2025-02-24T16:12:46.9426710Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9426820Z Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.9426930Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9427120Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9429750Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9429940Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9430040Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9430530Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T16:12:46.9430640Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9430660Z 
2025-02-24T16:12:46.9430750Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9430870Z Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.9430990Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9431410Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9431510Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9431830Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9431940Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9432430Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T16:12:46.9432550Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9432560Z 
2025-02-24T16:12:46.9432670Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9432780Z Max absolute difference: 3.16368526e-05
2025-02-24T16:12:46.9432900Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9433070Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9433170Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9433350Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:12:46.9433450Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9433940Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T16:12:46.9434060Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9434070Z 
2025-02-24T16:12:46.9434190Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9434300Z Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.9434410Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9434600Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9434700Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9434870Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9434980Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9435460Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T16:12:46.9435590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9435610Z 
2025-02-24T16:12:46.9435720Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9435840Z Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.9435950Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9436120Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9436230Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9436400Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9436500Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9436990Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T16:12:46.9437110Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9437120Z 
2025-02-24T16:12:46.9437230Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9437340Z Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.9437460Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9437650Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9437750Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9437930Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9438030Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9438500Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T16:12:46.9438610Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9438630Z 
2025-02-24T16:12:46.9438730Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:12:46.9438840Z Max absolute difference: 5.1807441e+47
2025-02-24T16:12:46.9438950Z Max relative difference: 4.76021355
2025-02-24T16:12:46.9439500Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9439610Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9440000Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9440090Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9440590Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T16:12:46.9440710Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9440710Z 
2025-02-24T16:12:46.9440810Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9440930Z Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.9441050Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9441210Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9441280Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9441400Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9441470Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9441850Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T16:12:46.9441930Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9441940Z 
2025-02-24T16:12:46.9442020Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9442110Z Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.9442180Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9442320Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9442390Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9442520Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9442590Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9442990Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T16:12:46.9443090Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9443090Z 
2025-02-24T16:12:46.9443170Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9443240Z Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.9443320Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9443430Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9443510Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9443620Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9443700Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9444100Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T16:12:46.9444180Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9444180Z 
2025-02-24T16:12:46.9444270Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:12:46.9444360Z Max absolute difference: 3.78533417e+47
2025-02-24T16:12:46.9444450Z Max relative difference: 178.93768705
2025-02-24T16:12:46.9444600Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9444680Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9444830Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:12:46.9444910Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9445290Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:12:46.9445370Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9445380Z 
2025-02-24T16:12:46.9445450Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9445520Z Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.9445590Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9445820Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9451260Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9451710Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9451780Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9452140Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:12:46.9452230Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9452230Z 
2025-02-24T16:12:46.9452300Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9452390Z Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.9452470Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9452600Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9452660Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9452780Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9452840Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9453200Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T16:12:46.9453300Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9453300Z 
2025-02-24T16:12:46.9453380Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9453450Z Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.9453520Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9453640Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9453710Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9453840Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9453910Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9454290Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T16:12:46.9454390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9454400Z 
2025-02-24T16:12:46.9454490Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9454580Z Max absolute difference: 2.08771842e-13
2025-02-24T16:12:46.9454680Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9454830Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9454890Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9455040Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9455110Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9455500Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:12:46.9455600Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9455610Z 
2025-02-24T16:12:46.9455680Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9455760Z Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.9455830Z Max relative difference: 15766.1580412
2025-02-24T16:12:46.9455970Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9456040Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9456160Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9456240Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9456620Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:12:46.9456710Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9456710Z 
2025-02-24T16:12:46.9456810Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9456900Z Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.9456990Z Max relative difference: 15766.1580412
2025-02-24T16:12:46.9457260Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9457350Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9457500Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9457750Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9458110Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T16:12:46.9458210Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9458220Z 
2025-02-24T16:12:46.9458310Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9458410Z Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.9458520Z Max relative difference: 15766.1580412
2025-02-24T16:12:46.9458670Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9458740Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9458870Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9458940Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9459350Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T16:12:46.9459450Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9459460Z 
2025-02-24T16:12:46.9459530Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9459610Z Max absolute difference: 3.02728422e-13
2025-02-24T16:12:46.9459680Z Max relative difference: 15766.1580412
2025-02-24T16:12:46.9459800Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9459860Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9459980Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:12:46.9460050Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9460410Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T16:12:46.9460500Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9460500Z 
2025-02-24T16:12:46.9460580Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9460650Z Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.9460750Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9460910Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9460980Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9461130Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9461210Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9461630Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T16:12:46.9461740Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9461750Z 
2025-02-24T16:12:46.9461830Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9461930Z Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.9462010Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9462130Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9462190Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9462320Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9462370Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9462750Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T16:12:46.9462830Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9462840Z 
2025-02-24T16:12:46.9462920Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9463010Z Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.9463090Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9463220Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9463390Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9463520Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9463710Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9464100Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T16:12:46.9464180Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9464190Z 
2025-02-24T16:12:46.9464260Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:12:46.9464330Z Max absolute difference: 2.49794504e+39
2025-02-24T16:12:46.9464410Z Max relative difference: 3.01858991
2025-02-24T16:12:46.9464540Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9464620Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9464750Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9464810Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9465190Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T16:12:46.9465280Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9465290Z 
2025-02-24T16:12:46.9465360Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9465440Z Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.9465510Z Max relative difference: 15766.15804934
2025-02-24T16:12:46.9465630Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9465710Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9465850Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9465920Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9466290Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T16:12:46.9466390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9466390Z 
2025-02-24T16:12:46.9466480Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9466580Z Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.9466680Z Max relative difference: 15766.15804934
2025-02-24T16:12:46.9466810Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9466880Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9467040Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9467110Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9467480Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T16:12:46.9467590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9467600Z 
2025-02-24T16:12:46.9467690Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9467790Z Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.9467870Z Max relative difference: 15766.15804934
2025-02-24T16:12:46.9468010Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9468080Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9468220Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9468290Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9468640Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T16:12:46.9468730Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:12:46.9468740Z 
2025-02-24T16:12:46.9468820Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:12:46.9468920Z Max absolute difference: 3.62213099e+39
2025-02-24T16:12:46.9469020Z Max relative difference: 15766.15804934
2025-02-24T16:12:46.9469140Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9469480Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9469730Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:12:46.9470010Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:12:46.9470260Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 890.23s (0:14:50) =
2025-02-24T16:12:49.1623730Z ##[error]Process completed with exit code 1.
