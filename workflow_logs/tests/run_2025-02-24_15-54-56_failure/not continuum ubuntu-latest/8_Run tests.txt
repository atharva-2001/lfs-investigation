2025-02-24T15:56:50.1131972Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T15:56:50.1133284Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T15:56:50.1188924Z shell: /usr/bin/bash -l {0}
2025-02-24T15:56:50.1189212Z env:
2025-02-24T15:56:50.1189392Z   CACHE_NUMBER: 0
2025-02-24T15:56:50.1190027Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:56:50.1190870Z   CODECOV_TOKEN: ***
2025-02-24T15:56:50.1191127Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:56:50.1191437Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:56:50.1191794Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:56:50.1192154Z ##[endgroup]
2025-02-24T15:57:00.2245244Z ============================= test session starts ==============================
2025-02-24T15:57:00.2246039Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T15:57:00.2246957Z rootdir: /home/runner/work/tardis/tardis
2025-02-24T15:57:00.2247513Z configfile: pyproject.toml
2025-02-24T15:57:00.2248177Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-24T15:57:00.2248932Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T15:57:00.2249317Z 
2025-02-24T15:57:05.5120175Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T15:57:08.4455879Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T15:57:10.1661886Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T15:57:11.8918920Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T15:57:11.9009267Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T15:57:13.1593561Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T15:57:13.4998683Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T15:57:13.5013695Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T15:57:16.9159021Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T15:57:16.9287922Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T15:57:16.9556569Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T15:57:54.6666160Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T15:57:54.6810577Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T15:57:54.6916970Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T15:57:54.7226246Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T15:57:54.7431321Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T15:57:55.0426133Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T15:57:55.3645366Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T15:57:55.3838241Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T15:57:55.5801084Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T15:57:55.5867312Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T15:58:53.0217400Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T15:58:54.0189509Z ............                                                             [ 10%]
2025-02-24T15:58:57.0911725Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T15:58:57.1378545Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T15:58:58.4480452Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T15:58:59.7723390Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T15:59:01.9531240Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T15:59:04.6813627Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T15:59:51.2185081Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T16:00:03.2523632Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T16:00:04.9712442Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T16:00:08.3714769Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T16:00:10.6606733Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T16:00:14.0820139Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T16:00:17.4708379Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T16:00:18.7101032Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T16:00:22.7491275Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T16:00:26.1106640Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T16:00:29.7448450Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T16:00:32.2374976Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T16:00:35.5667722Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T16:00:39.2482272Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T16:00:39.8537285Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T16:00:40.0796977Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T16:00:40.0910755Z ......                                                                   [ 62%]
2025-02-24T16:00:40.2338386Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T16:02:57.6278599Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T16:02:57.6305212Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T16:03:20.9676741Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T16:03:34.1197527Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T16:03:34.8834671Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T16:03:43.5965766Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T16:03:43.6170173Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T16:03:44.1067834Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T16:03:44.1139362Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T16:03:46.3177352Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T16:03:46.3369074Z ..........                                                               [ 69%]
2025-02-24T16:03:46.5073518Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T16:03:46.5400571Z .........                                                                [ 72%]
2025-02-24T16:04:05.2228429Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T16:05:07.8281860Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T16:06:32.3061857Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T16:06:32.3774408Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T16:06:35.5894237Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T16:06:42.7508649Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T16:06:42.9731560Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T16:06:42.9907904Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T16:06:43.0330866Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T16:06:51.9489367Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T16:06:51.9554502Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T16:06:58.2208216Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T16:06:58.7100912Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T16:06:59.7427442Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T16:06:59.8768604Z XX.........                                                              [ 84%]
2025-02-24T16:06:59.9050374Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T16:07:00.2152323Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T16:07:00.6364523Z .....                                                                    [ 85%]
2025-02-24T16:07:35.4605672Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T16:07:35.4895001Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T16:07:35.4927531Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T16:07:37.9596067Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T16:07:37.9771118Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T16:07:41.3942357Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T16:07:41.3943293Z                                                                          [ 86%]
2025-02-24T16:07:42.1240804Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T16:07:43.4735065Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T16:07:45.7222798Z ......                                                                   [ 88%]
2025-02-24T16:07:51.1795374Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T16:07:54.3166657Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T16:07:57.1654309Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T16:08:04.2123034Z ....                                                                     [ 92%]
2025-02-24T16:08:10.3725900Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T16:08:19.3589881Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T16:08:19.7972280Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T16:08:19.8702611Z ....                                                                     [ 96%]
2025-02-24T16:08:20.9207388Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T16:08:21.5801808Z ..................                                                       [ 98%]
2025-02-24T16:09:25.0041090Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T16:09:32.2128415Z ......                                                                   [100%]
2025-02-24T16:09:32.2128916Z 
2025-02-24T16:09:32.2129146Z =================================== FAILURES ===================================
2025-02-24T16:09:32.2130002Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T16:09:32.2130616Z 
2025-02-24T16:09:32.2130889Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T16:09:32.2131628Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T16:09:32.2132139Z 
2025-02-24T16:09:32.2132439Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2132966Z         if err_msg is None:
2025-02-24T16:09:32.2133376Z             if left.shape != right.shape:
2025-02-24T16:09:32.2133847Z                 raise_assert_detail(
2025-02-24T16:09:32.2134294Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2134654Z                 )
2025-02-24T16:09:32.2134864Z     
2025-02-24T16:09:32.2135053Z             diff = 0
2025-02-24T16:09:32.2135315Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2135638Z                 # count up differences
2025-02-24T16:09:32.2136024Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2136616Z                     diff += 1
2025-02-24T16:09:32.2137022Z     
2025-02-24T16:09:32.2137227Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2137578Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2138020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2138449Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2138750Z E           
2025-02-24T16:09:32.2138993Z E           numpy array values are different (0.09581 %)
2025-02-24T16:09:32.2139716Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:09:32.2140718Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T16:09:32.2141260Z 
2025-02-24T16:09:32.2141620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2142074Z 
2025-02-24T16:09:32.2142269Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2142565Z 
2025-02-24T16:09:32.2142846Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05f85d6cc0>
2025-02-24T16:09:32.2143915Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f85da330>
2025-02-24T16:09:32.2144907Z 
2025-02-24T16:09:32.2145110Z     def test_calculate_sobolev_line_opacity(
2025-02-24T16:09:32.2145631Z         nb_simulation_verysimple, regression_data
2025-02-24T16:09:32.2146101Z     ):
2025-02-24T16:09:32.2146663Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:09:32.2147138Z     
2025-02-24T16:09:32.2147468Z         actual = calculate_sobolev_line_opacity(
2025-02-24T16:09:32.2147974Z             legacy_plasma.lines,
2025-02-24T16:09:32.2148407Z             legacy_plasma.level_number_density,
2025-02-24T16:09:32.2148908Z             legacy_plasma.time_explosion,
2025-02-24T16:09:32.2149212Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:09:32.2149487Z         )
2025-02-24T16:09:32.2149724Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.2150052Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2150252Z 
2025-02-24T16:09:32.2150379Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T16:09:32.2150695Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2151055Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2151359Z     ???
2025-02-24T16:09:32.2151565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2151772Z 
2025-02-24T16:09:32.2151846Z >   ???
2025-02-24T16:09:32.2152068Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T16:09:32.2152350Z E   
2025-02-24T16:09:32.2152570Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:09:32.2152891Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.2153156Z E          ...
2025-02-24T16:09:32.2153353Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.2153650Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.2153978Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.2154255Z E          ...
2025-02-24T16:09:32.2154448Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.2154734Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.2155044Z E   At positional index 54, first diff: 14 != 12
2025-02-24T16:09:32.2155237Z 
2025-02-24T16:09:32.2155329Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2155642Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.2156530Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.2157290Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.2157905Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:09:32.2158146Z 
2025-02-24T16:09:32.2158474Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.83s/it]
2025-02-24T16:09:32.2158754Z 
2025-02-24T16:09:32.2158994Z Packets:                                                                                   4030/? [00:12<00:00, 33978.25it/s][A
2025-02-24T16:09:32.2159375Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.2160136Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.2161187Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T16:09:32.2161616Z 
2025-02-24T16:09:32.2162035Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05f85d6cc0>
2025-02-24T16:09:32.2162649Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05ff43b9e0>
2025-02-24T16:09:32.2163020Z 
2025-02-24T16:09:32.2163383Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T16:09:32.2163805Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T16:09:32.2164081Z     
2025-02-24T16:09:32.2164293Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T16:09:32.2164587Z             legacy_plasma.lines,
2025-02-24T16:09:32.2164843Z             legacy_plasma.level_number_density,
2025-02-24T16:09:32.2165126Z             legacy_plasma.time_explosion,
2025-02-24T16:09:32.2165414Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T16:09:32.2165795Z         )
2025-02-24T16:09:32.2166002Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T16:09:32.2166508Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.2166885Z >       npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.2167075Z 
2025-02-24T16:09:32.2167196Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T16:09:32.2167510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2167722Z 
2025-02-24T16:09:32.2168001Z args = (<function assert_allclose.<locals>.compare at 0x7f05d576c720>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2168434Z        [1., 1., .....,
2025-02-24T16:09:32.2168635Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2168869Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2169095Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:09:32.2169501Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.2169847Z 
2025-02-24T16:09:32.2169928Z     @wraps(func)
2025-02-24T16:09:32.2170129Z     def inner(*args, **kwds):
2025-02-24T16:09:32.2170365Z         with self._recreate_cm():
2025-02-24T16:09:32.2170609Z >           return func(*args, **kwds)
2025-02-24T16:09:32.2170859Z E           AssertionError: 
2025-02-24T16:09:32.2171111Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.2171382Z E           
2025-02-24T16:09:32.2171590Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.2171881Z E           Max absolute difference: 0.99984222
2025-02-24T16:09:32.2172170Z E           Max relative difference: 6337.12154973
2025-02-24T16:09:32.2172446Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2172706Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2172964Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.2173222Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2173480Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.2173731Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.2173906Z 
2025-02-24T16:09:32.2174119Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.2174622Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T16:09:32.2174919Z 
2025-02-24T16:09:32.2175147Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T16:09:32.2176434Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7f05fa379c70>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7f05c5a0de50>, 'electron')]
2025-02-24T16:09:32.2177652Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7f05d5b18590>
2025-02-24T16:09:32.2178272Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f887fc50>
2025-02-24T16:09:32.2178650Z 
2025-02-24T16:09:32.2178743Z     def test_rate_matrix_solver(
2025-02-24T16:09:32.2178990Z         new_chianti_atomic_dataset_si,
2025-02-24T16:09:32.2179268Z         rate_solver_list,
2025-02-24T16:09:32.2179674Z         collisional_simulation_state,
2025-02-24T16:09:32.2180106Z         regression_data,
2025-02-24T16:09:32.2180626Z     ):
2025-02-24T16:09:32.2180896Z         rate_matrix_solver = RateMatrix(
2025-02-24T16:09:32.2181214Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T16:09:32.2181512Z         )
2025-02-24T16:09:32.2181679Z     
2025-02-24T16:09:32.2181898Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T16:09:32.2182225Z             collisional_simulation_state.t_radiative,
2025-02-24T16:09:32.2182621Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T16:09:32.2182976Z         )
2025-02-24T16:09:32.2183339Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T16:09:32.2183731Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T16:09:32.2184054Z         )
2025-02-24T16:09:32.2184226Z     
2025-02-24T16:09:32.2184467Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T16:09:32.2184773Z     
2025-02-24T16:09:32.2184998Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.2185207Z 
2025-02-24T16:09:32.2185429Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T16:09:32.2185777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2186149Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T16:09:32.2186666Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T16:09:32.2187131Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T16:09:32.2187582Z     return store.select(
2025-02-24T16:09:32.2188219Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T16:09:32.2188946Z     return it.get_result()
2025-02-24T16:09:32.2189548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T16:09:32.2190048Z     results = self.func(self.start, self.stop, where)
2025-02-24T16:09:32.2190511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T16:09:32.2191034Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T16:09:32.2191548Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T16:09:32.2192086Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T16:09:32.2192641Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T16:09:32.2193104Z     ret = node[0][start:stop]
2025-02-24T16:09:32.2193523Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T16:09:32.2193973Z     return self.read(start, stop, step)[0]
2025-02-24T16:09:32.2194390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T16:09:32.2194853Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T16:09:32.2195191Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2195403Z 
2025-02-24T16:09:32.2195485Z self = ObjectAtom()
2025-02-24T16:09:32.2195743Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T16:09:32.2195967Z 
2025-02-24T16:09:32.2196058Z     def fromarray(self, array):
2025-02-24T16:09:32.2196486Z         # We have to check for an empty array because of a possible
2025-02-24T16:09:32.2196858Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T16:09:32.2197192Z         # record when in fact it is empty.
2025-02-24T16:09:32.2197449Z         if array.size == 0:
2025-02-24T16:09:32.2197670Z             return None
2025-02-24T16:09:32.2197900Z >       return pickle.loads(array.tobytes())
2025-02-24T16:09:32.2198249Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:09:32.2198497Z 
2025-02-24T16:09:32.2198782Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T16:09:32.2199765Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.2200698Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.2201678Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.2202294Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.2203227Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.2204029Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T16:09:32.2204320Z 
2025-02-24T16:09:32.2204456Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2204818Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2205144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2205467Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2205821Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2206135Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2206545Z err_msg = None
2025-02-24T16:09:32.2206672Z 
2025-02-24T16:09:32.2206790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2207068Z         if err_msg is None:
2025-02-24T16:09:32.2207315Z             if left.shape != right.shape:
2025-02-24T16:09:32.2207579Z                 raise_assert_detail(
2025-02-24T16:09:32.2207894Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2208207Z                 )
2025-02-24T16:09:32.2208389Z     
2025-02-24T16:09:32.2208556Z             diff = 0
2025-02-24T16:09:32.2208794Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2209079Z                 # count up differences
2025-02-24T16:09:32.2209421Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2209773Z                     diff += 1
2025-02-24T16:09:32.2209982Z     
2025-02-24T16:09:32.2210163Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2210474Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2210879Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2211257Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2211526Z E           
2025-02-24T16:09:32.2211746Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2212212Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2212852Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2213214Z 
2025-02-24T16:09:32.2213532Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2213938Z 
2025-02-24T16:09:32.2214110Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2214374Z 
2025-02-24T16:09:32.2214727Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed520>
2025-02-24T16:09:32.2215215Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2215548Z attr = 'lines'
2025-02-24T16:09:32.2215656Z 
2025-02-24T16:09:32.2215804Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2216146Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2216529Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2216751Z         try:
2025-02-24T16:09:32.2216999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2217428Z         except KeyError:
2025-02-24T16:09:32.2217701Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2217997Z     
2025-02-24T16:09:32.2218178Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2218425Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2218775Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2219334Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2219882Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2220309Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2220610Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2220879Z             else:
2025-02-24T16:09:32.2221093Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2221380Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2221576Z 
2025-02-24T16:09:32.2221705Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2222040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2222406Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2222719Z     ???
2025-02-24T16:09:32.2222938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2223141Z 
2025-02-24T16:09:32.2223221Z >   ???
2025-02-24T16:09:32.2223445Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2223726Z E   
2025-02-24T16:09:32.2223955Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2224286Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2224556Z E          ...
2025-02-24T16:09:32.2224756Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2225069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2225402Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2225681Z E          ...
2025-02-24T16:09:32.2225879Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2226181Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2226623Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2226818Z 
2025-02-24T16:09:32.2226910Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2227295Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T16:09:32.2227607Z 
2025-02-24T16:09:32.2227838Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed010>
2025-02-24T16:09:32.2228324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2228673Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2228829Z 
2025-02-24T16:09:32.2228976Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2229315Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2229604Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2229822Z         try:
2025-02-24T16:09:32.2230074Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2230390Z         except KeyError:
2025-02-24T16:09:32.2230661Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2230957Z     
2025-02-24T16:09:32.2231139Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2231527Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2231788Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2232093Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2232402Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2232651Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2232937Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2233132Z 
2025-02-24T16:09:32.2233263Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2233691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2233899Z 
2025-02-24T16:09:32.2234038Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2234354Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2234633Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2234924Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2235221Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2235539Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2235809Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2236083Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2236506Z err_msg = None
2025-02-24T16:09:32.2236715Z 
2025-02-24T16:09:32.2236906Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2237393Z         if err_msg is None:
2025-02-24T16:09:32.2237799Z             if left.shape != right.shape:
2025-02-24T16:09:32.2238133Z                 raise_assert_detail(
2025-02-24T16:09:32.2238451Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2238764Z                 )
2025-02-24T16:09:32.2238945Z     
2025-02-24T16:09:32.2239108Z             diff = 0
2025-02-24T16:09:32.2239346Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2239636Z                 # count up differences
2025-02-24T16:09:32.2239976Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2240353Z                     diff += 1
2025-02-24T16:09:32.2240564Z     
2025-02-24T16:09:32.2240744Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2241053Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2241453Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2241832Z E           AssertionError: Series are different
2025-02-24T16:09:32.2242090Z E           
2025-02-24T16:09:32.2242296Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2242863Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2243667Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2244420Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2244989Z 
2025-02-24T16:09:32.2245311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2245935Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T16:09:32.2246244Z 
2025-02-24T16:09:32.2246614Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aefad0>
2025-02-24T16:09:32.2247104Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2247564Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2247760Z 
2025-02-24T16:09:32.2247902Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2248251Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2248534Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2248752Z         try:
2025-02-24T16:09:32.2249000Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2249316Z         except KeyError:
2025-02-24T16:09:32.2249589Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2249888Z     
2025-02-24T16:09:32.2250070Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2250322Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2250600Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2250910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2251228Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2251480Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2251773Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2251976Z 
2025-02-24T16:09:32.2252103Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2252428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2252641Z 
2025-02-24T16:09:32.2252777Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2253108Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2253385Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2253678Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2253983Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2254408Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2254902Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2255259Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2255513Z err_msg = None
2025-02-24T16:09:32.2255621Z 
2025-02-24T16:09:32.2255743Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2256019Z         if err_msg is None:
2025-02-24T16:09:32.2256361Z             if left.shape != right.shape:
2025-02-24T16:09:32.2267424Z                 raise_assert_detail(
2025-02-24T16:09:32.2267962Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2268442Z                 )
2025-02-24T16:09:32.2268723Z     
2025-02-24T16:09:32.2268980Z             diff = 0
2025-02-24T16:09:32.2269348Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2269793Z                 # count up differences
2025-02-24T16:09:32.2270327Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2270865Z                     diff += 1
2025-02-24T16:09:32.2271199Z     
2025-02-24T16:09:32.2271483Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2271966Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2272571Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2273163Z E           AssertionError: Series are different
2025-02-24T16:09:32.2273591Z E           
2025-02-24T16:09:32.2274183Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2275099Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2276628Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2278185Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2278982Z 
2025-02-24T16:09:32.2279495Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2280450Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T16:09:32.2280921Z 
2025-02-24T16:09:32.2281129Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2281692Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2282187Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2282706Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2283256Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2283735Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2284132Z err_msg = None
2025-02-24T16:09:32.2284310Z 
2025-02-24T16:09:32.2284488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2284935Z         if err_msg is None:
2025-02-24T16:09:32.2285300Z             if left.shape != right.shape:
2025-02-24T16:09:32.2285591Z                 raise_assert_detail(
2025-02-24T16:09:32.2285920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2286230Z                 )
2025-02-24T16:09:32.2286548Z     
2025-02-24T16:09:32.2286840Z             diff = 0
2025-02-24T16:09:32.2287237Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2287720Z                 # count up differences
2025-02-24T16:09:32.2288130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2288480Z                     diff += 1
2025-02-24T16:09:32.2288700Z     
2025-02-24T16:09:32.2288881Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2289197Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2289594Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2289974Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2290247Z E           
2025-02-24T16:09:32.2290474Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2290940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2292247Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2292615Z 
2025-02-24T16:09:32.2292947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2293474Z 
2025-02-24T16:09:32.2293659Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2293919Z 
2025-02-24T16:09:32.2294151Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aef0b0>
2025-02-24T16:09:32.2294687Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>, attr = 'nu'
2025-02-24T16:09:32.2294995Z 
2025-02-24T16:09:32.2295138Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2295488Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2295776Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2295999Z         try:
2025-02-24T16:09:32.2296256Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2296718Z         except KeyError:
2025-02-24T16:09:32.2296999Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2297297Z     
2025-02-24T16:09:32.2297479Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2297737Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2298004Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2298312Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2298614Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2298867Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2299159Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2299354Z 
2025-02-24T16:09:32.2299488Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2299852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2300214Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2300514Z     ???
2025-02-24T16:09:32.2300723Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2300933Z 
2025-02-24T16:09:32.2301007Z >   ???
2025-02-24T16:09:32.2301242Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2301529Z E   
2025-02-24T16:09:32.2301759Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2302083Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2302364Z E          ...
2025-02-24T16:09:32.2302564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2302874Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2303211Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2303489Z E          ...
2025-02-24T16:09:32.2303687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2303985Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2304301Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2304495Z 
2025-02-24T16:09:32.2304587Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2304950Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T16:09:32.2305255Z 
2025-02-24T16:09:32.2305387Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2305751Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2306070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2306633Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2306992Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2307305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2307561Z err_msg = None
2025-02-24T16:09:32.2307678Z 
2025-02-24T16:09:32.2307795Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2308073Z         if err_msg is None:
2025-02-24T16:09:32.2308311Z             if left.shape != right.shape:
2025-02-24T16:09:32.2308691Z                 raise_assert_detail(
2025-02-24T16:09:32.2309001Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2309310Z                 )
2025-02-24T16:09:32.2309490Z     
2025-02-24T16:09:32.2309653Z             diff = 0
2025-02-24T16:09:32.2309891Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2310181Z                 # count up differences
2025-02-24T16:09:32.2310523Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2310869Z                     diff += 1
2025-02-24T16:09:32.2311080Z     
2025-02-24T16:09:32.2311263Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2311569Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2311969Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2312350Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2312625Z E           
2025-02-24T16:09:32.2312849Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2313315Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2313934Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2314288Z 
2025-02-24T16:09:32.2314607Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2315017Z 
2025-02-24T16:09:32.2315188Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2315453Z 
2025-02-24T16:09:32.2315806Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aeeed0>
2025-02-24T16:09:32.2316781Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2317355Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2317585Z 
2025-02-24T16:09:32.2317821Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2318399Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2318893Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2319133Z         try:
2025-02-24T16:09:32.2319391Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2319704Z         except KeyError:
2025-02-24T16:09:32.2319979Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2320275Z     
2025-02-24T16:09:32.2320463Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2320716Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2320986Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2321296Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2321599Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2321845Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2322265Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2322467Z 
2025-02-24T16:09:32.2322598Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2322922Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2323278Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2323588Z     ???
2025-02-24T16:09:32.2323797Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2323997Z 
2025-02-24T16:09:32.2324205Z >   ???
2025-02-24T16:09:32.2324431Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2324707Z E   
2025-02-24T16:09:32.2324927Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2325253Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2325521Z E          ...
2025-02-24T16:09:32.2325728Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2326043Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2326509Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2326779Z E          ...
2025-02-24T16:09:32.2326974Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2327273Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2327590Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2327785Z 
2025-02-24T16:09:32.2327876Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2328232Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T16:09:32.2328513Z 
2025-02-24T16:09:32.2328651Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2329001Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2329322Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2329645Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2329996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2330310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2330569Z err_msg = None
2025-02-24T16:09:32.2330677Z 
2025-02-24T16:09:32.2330798Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2331073Z         if err_msg is None:
2025-02-24T16:09:32.2331307Z             if left.shape != right.shape:
2025-02-24T16:09:32.2331575Z                 raise_assert_detail(
2025-02-24T16:09:32.2331886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2332192Z                 )
2025-02-24T16:09:32.2332371Z     
2025-02-24T16:09:32.2332539Z             diff = 0
2025-02-24T16:09:32.2332778Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2333065Z                 # count up differences
2025-02-24T16:09:32.2333465Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2334057Z                     diff += 1
2025-02-24T16:09:32.2334410Z     
2025-02-24T16:09:32.2334659Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2334975Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2335380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2335768Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2336040Z E           
2025-02-24T16:09:32.2336381Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2336850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2337599Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2337957Z 
2025-02-24T16:09:32.2338280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2338778Z 
2025-02-24T16:09:32.2338958Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2339215Z 
2025-02-24T16:09:32.2339450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aeee10>
2025-02-24T16:09:32.2340121Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>, attr = 'f_lu'
2025-02-24T16:09:32.2340427Z 
2025-02-24T16:09:32.2340572Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2340916Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2341211Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2341435Z         try:
2025-02-24T16:09:32.2341687Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2341999Z         except KeyError:
2025-02-24T16:09:32.2342275Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2342570Z     
2025-02-24T16:09:32.2342759Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2343016Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2343285Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2343604Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2343911Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2344159Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2344452Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2344655Z 
2025-02-24T16:09:32.2344783Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2345110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2345462Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2345769Z     ???
2025-02-24T16:09:32.2345980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2346178Z 
2025-02-24T16:09:32.2346252Z >   ???
2025-02-24T16:09:32.2346600Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2346875Z E   
2025-02-24T16:09:32.2347095Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2347419Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2347713Z E          ...
2025-02-24T16:09:32.2347913Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2348228Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2348562Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2348827Z E          ...
2025-02-24T16:09:32.2349021Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2349318Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2349635Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2349825Z 
2025-02-24T16:09:32.2349913Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2350268Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T16:09:32.2350568Z 
2025-02-24T16:09:32.2350705Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2351055Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2351373Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2352095Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2352692Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2353137Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2353403Z err_msg = None
2025-02-24T16:09:32.2353511Z 
2025-02-24T16:09:32.2353632Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2353908Z         if err_msg is None:
2025-02-24T16:09:32.2354141Z             if left.shape != right.shape:
2025-02-24T16:09:32.2354536Z                 raise_assert_detail(
2025-02-24T16:09:32.2354846Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2355149Z                 )
2025-02-24T16:09:32.2355328Z     
2025-02-24T16:09:32.2355492Z             diff = 0
2025-02-24T16:09:32.2355732Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2356025Z                 # count up differences
2025-02-24T16:09:32.2356502Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2356847Z                     diff += 1
2025-02-24T16:09:32.2357060Z     
2025-02-24T16:09:32.2357239Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2357549Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2357946Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2358325Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2358602Z E           
2025-02-24T16:09:32.2358823Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2359281Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2359902Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2360255Z 
2025-02-24T16:09:32.2360577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2360979Z 
2025-02-24T16:09:32.2361155Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2361411Z 
2025-02-24T16:09:32.2361641Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed7c0>
2025-02-24T16:09:32.2362126Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2362460Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2362591Z 
2025-02-24T16:09:32.2362733Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2363073Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2363366Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2363585Z         try:
2025-02-24T16:09:32.2363833Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2364142Z         except KeyError:
2025-02-24T16:09:32.2364413Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2364707Z     
2025-02-24T16:09:32.2364890Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2365142Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2365411Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2365723Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2366031Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2366394Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2366818Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2367085Z             else:
2025-02-24T16:09:32.2367294Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2367588Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2367782Z 
2025-02-24T16:09:32.2367912Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2368234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2368596Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2369007Z     ???
2025-02-24T16:09:32.2369217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2369424Z 
2025-02-24T16:09:32.2369494Z >   ???
2025-02-24T16:09:32.2369741Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2370246Z E   
2025-02-24T16:09:32.2370640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2371211Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2371669Z E          ...
2025-02-24T16:09:32.2371997Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2372512Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2373069Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2373516Z E          ...
2025-02-24T16:09:32.2373717Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2374030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2374362Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2374560Z 
2025-02-24T16:09:32.2374659Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2375024Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T16:09:32.2375327Z 
2025-02-24T16:09:32.2375464Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2375832Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2376156Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2376620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2376974Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2377291Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2377553Z err_msg = None
2025-02-24T16:09:32.2377663Z 
2025-02-24T16:09:32.2377783Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2378063Z         if err_msg is None:
2025-02-24T16:09:32.2378293Z             if left.shape != right.shape:
2025-02-24T16:09:32.2378559Z                 raise_assert_detail(
2025-02-24T16:09:32.2378871Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2379181Z                 )
2025-02-24T16:09:32.2379367Z     
2025-02-24T16:09:32.2379530Z             diff = 0
2025-02-24T16:09:32.2379768Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2380051Z                 # count up differences
2025-02-24T16:09:32.2380387Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2380728Z                     diff += 1
2025-02-24T16:09:32.2380940Z     
2025-02-24T16:09:32.2381120Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2381441Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2381857Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2382525Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2382967Z E           
2025-02-24T16:09:32.2383186Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2383893Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2384511Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2385133Z 
2025-02-24T16:09:32.2385463Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2385858Z 
2025-02-24T16:09:32.2386037Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2386423Z 
2025-02-24T16:09:32.2386662Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aedd00>
2025-02-24T16:09:32.2387160Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2387494Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2387626Z 
2025-02-24T16:09:32.2387773Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2388132Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2388637Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2389001Z         try:
2025-02-24T16:09:32.2389412Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2389736Z         except KeyError:
2025-02-24T16:09:32.2390012Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2390301Z     
2025-02-24T16:09:32.2390483Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2390743Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2391010Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2391318Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2391627Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2391870Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2392152Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2392418Z             else:
2025-02-24T16:09:32.2392627Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2392912Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2393106Z 
2025-02-24T16:09:32.2393245Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2393571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2393926Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2394228Z     ???
2025-02-24T16:09:32.2394438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2394649Z 
2025-02-24T16:09:32.2394718Z >   ???
2025-02-24T16:09:32.2394938Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2395217Z E   
2025-02-24T16:09:32.2395442Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2395771Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2396040Z E          ...
2025-02-24T16:09:32.2396238Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2396686Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2397017Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2397290Z E          ...
2025-02-24T16:09:32.2397486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2397789Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2398110Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2398302Z 
2025-02-24T16:09:32.2398398Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2398895Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T16:09:32.2399189Z 
2025-02-24T16:09:32.2399323Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2399674Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2399993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2400311Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2400774Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2401086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2401339Z err_msg = None
2025-02-24T16:09:32.2401456Z 
2025-02-24T16:09:32.2401571Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2401841Z         if err_msg is None:
2025-02-24T16:09:32.2402083Z             if left.shape != right.shape:
2025-02-24T16:09:32.2402354Z                 raise_assert_detail(
2025-02-24T16:09:32.2402667Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2402972Z                 )
2025-02-24T16:09:32.2403153Z     
2025-02-24T16:09:32.2403321Z             diff = 0
2025-02-24T16:09:32.2403555Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2403838Z                 # count up differences
2025-02-24T16:09:32.2404176Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2404526Z                     diff += 1
2025-02-24T16:09:32.2404744Z     
2025-02-24T16:09:32.2404924Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2405234Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2405813Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2406586Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2406931Z E           
2025-02-24T16:09:32.2407150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2407610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2408227Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2408585Z 
2025-02-24T16:09:32.2408906Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2409308Z 
2025-02-24T16:09:32.2409479Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2409741Z 
2025-02-24T16:09:32.2409970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aef350>
2025-02-24T16:09:32.2410462Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f89d8680>
2025-02-24T16:09:32.2410794Z attr = 'j_blues'
2025-02-24T16:09:32.2410908Z 
2025-02-24T16:09:32.2411056Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2411401Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2411684Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2411907Z         try:
2025-02-24T16:09:32.2412151Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2412463Z         except KeyError:
2025-02-24T16:09:32.2412743Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2413176Z     
2025-02-24T16:09:32.2413356Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2413600Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2413856Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2414159Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2414465Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2414713Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2414997Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2415272Z             else:
2025-02-24T16:09:32.2415595Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2415880Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2416070Z 
2025-02-24T16:09:32.2416203Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2416656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2417012Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2417313Z     ???
2025-02-24T16:09:32.2417524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2417733Z 
2025-02-24T16:09:32.2417806Z >   ???
2025-02-24T16:09:32.2418029Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2418305Z E   
2025-02-24T16:09:32.2418529Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2418852Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2419122Z E          ...
2025-02-24T16:09:32.2419326Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2419631Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2419969Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2420241Z E          ...
2025-02-24T16:09:32.2420437Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2420746Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2421066Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2421259Z 
2025-02-24T16:09:32.2421349Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2421690Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T16:09:32.2421971Z 
2025-02-24T16:09:32.2422105Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2422461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2422780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2423095Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2423446Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2423898Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2424339Z err_msg = None
2025-02-24T16:09:32.2424527Z 
2025-02-24T16:09:32.2424713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2425176Z         if err_msg is None:
2025-02-24T16:09:32.2425563Z             if left.shape != right.shape:
2025-02-24T16:09:32.2425999Z                 raise_assert_detail(
2025-02-24T16:09:32.2426641Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2427056Z                 )
2025-02-24T16:09:32.2427241Z     
2025-02-24T16:09:32.2427403Z             diff = 0
2025-02-24T16:09:32.2427645Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2427928Z                 # count up differences
2025-02-24T16:09:32.2428274Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2428613Z                     diff += 1
2025-02-24T16:09:32.2428830Z     
2025-02-24T16:09:32.2429011Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2429472Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2429875Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2430250Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2430518Z E           
2025-02-24T16:09:32.2430742Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2431214Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2431935Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2432297Z 
2025-02-24T16:09:32.2432612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2433020Z 
2025-02-24T16:09:32.2433197Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2433455Z 
2025-02-24T16:09:32.2433687Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aef9e0>
2025-02-24T16:09:32.2434187Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2434516Z attr = 'lines'
2025-02-24T16:09:32.2434628Z 
2025-02-24T16:09:32.2434770Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2435111Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2435396Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2435618Z         try:
2025-02-24T16:09:32.2435870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2436176Z         except KeyError:
2025-02-24T16:09:32.2436570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2436860Z     
2025-02-24T16:09:32.2437034Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2437285Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2437549Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2437856Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2438173Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2438429Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2438716Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2438985Z             else:
2025-02-24T16:09:32.2439194Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2439480Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2439681Z 
2025-02-24T16:09:32.2439809Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2440136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2440497Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2440799Z     ???
2025-02-24T16:09:32.2441009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2441211Z 
2025-02-24T16:09:32.2441286Z >   ???
2025-02-24T16:09:32.2441511Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2441882Z E   
2025-02-24T16:09:32.2442260Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2442814Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2443214Z E          ...
2025-02-24T16:09:32.2443415Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2443721Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2444211Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2444481Z E          ...
2025-02-24T16:09:32.2444673Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2444969Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2445283Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2445474Z 
2025-02-24T16:09:32.2445565Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2445936Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T16:09:32.2446497Z 
2025-02-24T16:09:32.2446730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aec350>
2025-02-24T16:09:32.2447222Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2447573Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2447758Z 
2025-02-24T16:09:32.2447899Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2448243Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2448525Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2448750Z         try:
2025-02-24T16:09:32.2448997Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2449310Z         except KeyError:
2025-02-24T16:09:32.2449584Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2449872Z     
2025-02-24T16:09:32.2450046Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2450293Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2450557Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2450872Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2451184Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2451432Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2451712Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2451906Z 
2025-02-24T16:09:32.2452037Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2452365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2452572Z 
2025-02-24T16:09:32.2452710Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2453025Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2453308Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2453589Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2453892Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2454216Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2454487Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2454765Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2455001Z err_msg = None
2025-02-24T16:09:32.2455118Z 
2025-02-24T16:09:32.2455232Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2455513Z         if err_msg is None:
2025-02-24T16:09:32.2455748Z             if left.shape != right.shape:
2025-02-24T16:09:32.2456011Z                 raise_assert_detail(
2025-02-24T16:09:32.2456434Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2456743Z                 )
2025-02-24T16:09:32.2456922Z     
2025-02-24T16:09:32.2457089Z             diff = 0
2025-02-24T16:09:32.2457320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2457607Z                 # count up differences
2025-02-24T16:09:32.2457956Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2458298Z                     diff += 1
2025-02-24T16:09:32.2458509Z     
2025-02-24T16:09:32.2458689Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2458994Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2459515Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2459885Z E           AssertionError: Series are different
2025-02-24T16:09:32.2460259Z E           
2025-02-24T16:09:32.2460620Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2461625Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2463216Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2464268Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2464697Z 
2025-02-24T16:09:32.2465017Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2465633Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T16:09:32.2465935Z 
2025-02-24T16:09:32.2466162Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aec230>
2025-02-24T16:09:32.2466761Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2467112Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2467278Z 
2025-02-24T16:09:32.2467427Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2467764Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2468047Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2468264Z         try:
2025-02-24T16:09:32.2468513Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2468828Z         except KeyError:
2025-02-24T16:09:32.2469104Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2469404Z     
2025-02-24T16:09:32.2469591Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2469845Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2470109Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2470418Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2470725Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2470976Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2471261Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2471461Z 
2025-02-24T16:09:32.2471589Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2471918Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2472121Z 
2025-02-24T16:09:32.2472262Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2472633Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2472934Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2473224Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2473522Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2473842Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2474115Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2474527Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2474763Z err_msg = None
2025-02-24T16:09:32.2474873Z 
2025-02-24T16:09:32.2474991Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2475262Z         if err_msg is None:
2025-02-24T16:09:32.2475496Z             if left.shape != right.shape:
2025-02-24T16:09:32.2475751Z                 raise_assert_detail(
2025-02-24T16:09:32.2476057Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2476599Z                 )
2025-02-24T16:09:32.2476787Z     
2025-02-24T16:09:32.2476952Z             diff = 0
2025-02-24T16:09:32.2477184Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2477468Z                 # count up differences
2025-02-24T16:09:32.2477803Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2478142Z                     diff += 1
2025-02-24T16:09:32.2478457Z     
2025-02-24T16:09:32.2478759Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2479278Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2479956Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2480578Z E           AssertionError: Series are different
2025-02-24T16:09:32.2481015Z E           
2025-02-24T16:09:32.2481359Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2482134Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2482974Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2483825Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2484298Z 
2025-02-24T16:09:32.2484612Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2485207Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T16:09:32.2485487Z 
2025-02-24T16:09:32.2485626Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2485983Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2486403Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2486721Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2487081Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2487394Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2487657Z err_msg = None
2025-02-24T16:09:32.2487771Z 
2025-02-24T16:09:32.2487890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2488165Z         if err_msg is None:
2025-02-24T16:09:32.2488545Z             if left.shape != right.shape:
2025-02-24T16:09:32.2488811Z                 raise_assert_detail(
2025-02-24T16:09:32.2489125Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2489431Z                 )
2025-02-24T16:09:32.2489611Z     
2025-02-24T16:09:32.2489781Z             diff = 0
2025-02-24T16:09:32.2490023Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2490316Z                 # count up differences
2025-02-24T16:09:32.2490653Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2491176Z                     diff += 1
2025-02-24T16:09:32.2501808Z     
2025-02-24T16:09:32.2502142Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2502704Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2503346Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2503776Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2504061Z E           
2025-02-24T16:09:32.2504297Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2504781Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2505408Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2505771Z 
2025-02-24T16:09:32.2506105Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2506661Z 
2025-02-24T16:09:32.2506849Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2507116Z 
2025-02-24T16:09:32.2507354Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aed040>
2025-02-24T16:09:32.2507898Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>, attr = 'nu'
2025-02-24T16:09:32.2508194Z 
2025-02-24T16:09:32.2508344Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2508698Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2508992Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2509220Z         try:
2025-02-24T16:09:32.2509474Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2509792Z         except KeyError:
2025-02-24T16:09:32.2510070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2510372Z     
2025-02-24T16:09:32.2510560Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2510817Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2511085Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2511391Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2511700Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2511948Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2512230Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2512427Z 
2025-02-24T16:09:32.2512563Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2512895Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2513252Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2513567Z     ???
2025-02-24T16:09:32.2513942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2514507Z 
2025-02-24T16:09:32.2514623Z >   ???
2025-02-24T16:09:32.2514945Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2515231Z E   
2025-02-24T16:09:32.2515455Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2515782Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2516052Z E          ...
2025-02-24T16:09:32.2516253Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2516711Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2517047Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2517451Z E          ...
2025-02-24T16:09:32.2517653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2517949Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2518267Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2518454Z 
2025-02-24T16:09:32.2518552Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2518912Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T16:09:32.2519203Z 
2025-02-24T16:09:32.2519333Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2519693Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2520019Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2520334Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2520700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2521015Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2521272Z err_msg = None
2025-02-24T16:09:32.2521387Z 
2025-02-24T16:09:32.2521504Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2521785Z         if err_msg is None:
2025-02-24T16:09:32.2522036Z             if left.shape != right.shape:
2025-02-24T16:09:32.2522307Z                 raise_assert_detail(
2025-02-24T16:09:32.2522620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2522941Z                 )
2025-02-24T16:09:32.2523121Z     
2025-02-24T16:09:32.2523286Z             diff = 0
2025-02-24T16:09:32.2523522Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2523809Z                 # count up differences
2025-02-24T16:09:32.2524148Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2524501Z                     diff += 1
2025-02-24T16:09:32.2524713Z     
2025-02-24T16:09:32.2524893Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2525201Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2525599Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2525991Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2526383Z E           
2025-02-24T16:09:32.2526604Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2527068Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2527689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2528050Z 
2025-02-24T16:09:32.2528366Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2528891Z 
2025-02-24T16:09:32.2529063Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2529329Z 
2025-02-24T16:09:32.2529559Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aecaa0>
2025-02-24T16:09:32.2530048Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2530384Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2530514Z 
2025-02-24T16:09:32.2530662Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2531109Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2531397Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2531624Z         try:
2025-02-24T16:09:32.2532068Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2532605Z         except KeyError:
2025-02-24T16:09:32.2532995Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2533301Z     
2025-02-24T16:09:32.2533484Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2533733Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2533996Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2534299Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2534606Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2534846Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2535128Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2535323Z 
2025-02-24T16:09:32.2535461Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2535790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2536144Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2536677Z     ???
2025-02-24T16:09:32.2536890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2537103Z 
2025-02-24T16:09:32.2537170Z >   ???
2025-02-24T16:09:32.2537396Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2537674Z E   
2025-02-24T16:09:32.2537893Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2538218Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2538487Z E          ...
2025-02-24T16:09:32.2538688Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2538996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2539334Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2539605Z E          ...
2025-02-24T16:09:32.2539801Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2540121Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2540443Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2540630Z 
2025-02-24T16:09:32.2540726Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2541068Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T16:09:32.2541352Z 
2025-02-24T16:09:32.2541483Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2541835Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2542152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2542464Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2542820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2543133Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2543387Z err_msg = None
2025-02-24T16:09:32.2543505Z 
2025-02-24T16:09:32.2543619Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2544066Z         if err_msg is None:
2025-02-24T16:09:32.2544305Z             if left.shape != right.shape:
2025-02-24T16:09:32.2544576Z                 raise_assert_detail(
2025-02-24T16:09:32.2544888Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2545195Z                 )
2025-02-24T16:09:32.2545373Z     
2025-02-24T16:09:32.2545538Z             diff = 0
2025-02-24T16:09:32.2545771Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2546055Z                 # count up differences
2025-02-24T16:09:32.2546539Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2547002Z                     diff += 1
2025-02-24T16:09:32.2547214Z     
2025-02-24T16:09:32.2547395Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2547734Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2548134Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2548514Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2548782Z E           
2025-02-24T16:09:32.2548997Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2549462Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2550375Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2551003Z 
2025-02-24T16:09:32.2551334Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2551738Z 
2025-02-24T16:09:32.2551913Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2552174Z 
2025-02-24T16:09:32.2552404Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600aeccb0>
2025-02-24T16:09:32.2552935Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>, attr = 'f_lu'
2025-02-24T16:09:32.2553234Z 
2025-02-24T16:09:32.2553373Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2553724Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2554007Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2554230Z         try:
2025-02-24T16:09:32.2554482Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2554792Z         except KeyError:
2025-02-24T16:09:32.2555062Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2555360Z     
2025-02-24T16:09:32.2555542Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2555795Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2556057Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2556496Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2556805Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2557044Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2557321Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2557518Z 
2025-02-24T16:09:32.2557654Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2557980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2558337Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2558639Z     ???
2025-02-24T16:09:32.2558845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2559191Z 
2025-02-24T16:09:32.2559264Z >   ???
2025-02-24T16:09:32.2559488Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2559768Z E   
2025-02-24T16:09:32.2559989Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2560309Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2560577Z E          ...
2025-02-24T16:09:32.2560772Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2561077Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2561405Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2562015Z E          ...
2025-02-24T16:09:32.2562315Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2562762Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2563085Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2563276Z 
2025-02-24T16:09:32.2563368Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2563730Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T16:09:32.2564020Z 
2025-02-24T16:09:32.2564150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2564654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2565193Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2565696Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2566240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2566761Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2567018Z err_msg = None
2025-02-24T16:09:32.2567133Z 
2025-02-24T16:09:32.2567253Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2567526Z         if err_msg is None:
2025-02-24T16:09:32.2567765Z             if left.shape != right.shape:
2025-02-24T16:09:32.2568025Z                 raise_assert_detail(
2025-02-24T16:09:32.2568531Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2569042Z                 )
2025-02-24T16:09:32.2569324Z     
2025-02-24T16:09:32.2569491Z             diff = 0
2025-02-24T16:09:32.2569727Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2570015Z                 # count up differences
2025-02-24T16:09:32.2570349Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2570693Z                     diff += 1
2025-02-24T16:09:32.2570902Z     
2025-02-24T16:09:32.2571081Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2571395Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2571575Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2571694Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2571774Z E           
2025-02-24T16:09:32.2571888Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2572158Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2572433Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2572439Z 
2025-02-24T16:09:32.2572753Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2572924Z 
2025-02-24T16:09:32.2573104Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2573109Z 
2025-02-24T16:09:32.2573340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7fb0>
2025-02-24T16:09:32.2573514Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2573596Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2573600Z 
2025-02-24T16:09:32.2573745Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2573972Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2574062Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2574131Z         try:
2025-02-24T16:09:32.2574282Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2574361Z         except KeyError:
2025-02-24T16:09:32.2574507Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2574581Z     
2025-02-24T16:09:32.2574667Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2574765Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2574853Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2574992Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2575078Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2575174Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2575293Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2575369Z             else:
2025-02-24T16:09:32.2575471Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2575585Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2575589Z 
2025-02-24T16:09:32.2575723Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2575840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2575998Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2576073Z     ???
2025-02-24T16:09:32.2576185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2576189Z 
2025-02-24T16:09:32.2576416Z >   ???
2025-02-24T16:09:32.2576585Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2576659Z E   
2025-02-24T16:09:32.2576791Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2576908Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2576989Z E          ...
2025-02-24T16:09:32.2577079Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2577216Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2577328Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2577404Z E          ...
2025-02-24T16:09:32.2577494Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2577624Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2577739Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2577743Z 
2025-02-24T16:09:32.2577832Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2578033Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T16:09:32.2578038Z 
2025-02-24T16:09:32.2578173Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2578306Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2578415Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2578550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2578679Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2578774Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2578977Z err_msg = None
2025-02-24T16:09:32.2578982Z 
2025-02-24T16:09:32.2579100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2579181Z         if err_msg is None:
2025-02-24T16:09:32.2579282Z             if left.shape != right.shape:
2025-02-24T16:09:32.2579368Z                 raise_assert_detail(
2025-02-24T16:09:32.2579520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2579597Z                 )
2025-02-24T16:09:32.2579664Z     
2025-02-24T16:09:32.2579846Z             diff = 0
2025-02-24T16:09:32.2579959Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2580052Z                 # count up differences
2025-02-24T16:09:32.2580221Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2580304Z                     diff += 1
2025-02-24T16:09:32.2580377Z     
2025-02-24T16:09:32.2580466Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2580617Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2580787Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2580908Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2580978Z E           
2025-02-24T16:09:32.2581099Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2581368Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2581638Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2581647Z 
2025-02-24T16:09:32.2581966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2581971Z 
2025-02-24T16:09:32.2582149Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2582154Z 
2025-02-24T16:09:32.2582379Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7fe0>
2025-02-24T16:09:32.2582560Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2582638Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2582647Z 
2025-02-24T16:09:32.2582786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2582905Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2582990Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2583068Z         try:
2025-02-24T16:09:32.2583206Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2583292Z         except KeyError:
2025-02-24T16:09:32.2583436Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2583503Z     
2025-02-24T16:09:32.2583594Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2583689Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2583782Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2583914Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2584007Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2584099Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2584208Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2584282Z             else:
2025-02-24T16:09:32.2584376Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2584486Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2584600Z 
2025-02-24T16:09:32.2584729Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2584850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2585002Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2585069Z     ???
2025-02-24T16:09:32.2585182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2585186Z 
2025-02-24T16:09:32.2585252Z >   ???
2025-02-24T16:09:32.2585381Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2585533Z E   
2025-02-24T16:09:32.2585664Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2585780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2585857Z E          ...
2025-02-24T16:09:32.2585943Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2586077Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2586389Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2586517Z E          ...
2025-02-24T16:09:32.2586668Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2586882Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2587063Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2587070Z 
2025-02-24T16:09:32.2587219Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2587554Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T16:09:32.2587570Z 
2025-02-24T16:09:32.2587793Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2588014Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2588179Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2588405Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2588631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2588793Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2588921Z err_msg = None
2025-02-24T16:09:32.2588926Z 
2025-02-24T16:09:32.2589114Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2589248Z         if err_msg is None:
2025-02-24T16:09:32.2589410Z             if left.shape != right.shape:
2025-02-24T16:09:32.2589543Z                 raise_assert_detail(
2025-02-24T16:09:32.2589701Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2589777Z                 )
2025-02-24T16:09:32.2589845Z     
2025-02-24T16:09:32.2589921Z             diff = 0
2025-02-24T16:09:32.2590032Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2590127Z                 # count up differences
2025-02-24T16:09:32.2590310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2590387Z                     diff += 1
2025-02-24T16:09:32.2590459Z     
2025-02-24T16:09:32.2590546Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2590693Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2590863Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2590982Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2591057Z E           
2025-02-24T16:09:32.2591172Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2591442Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2591846Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2591857Z 
2025-02-24T16:09:32.2592169Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2592174Z 
2025-02-24T16:09:32.2592452Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2592457Z 
2025-02-24T16:09:32.2592686Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af79b0>
2025-02-24T16:09:32.2592863Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f8870c50>
2025-02-24T16:09:32.2592948Z attr = 'j_blues'
2025-02-24T16:09:32.2592952Z 
2025-02-24T16:09:32.2593094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2593213Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2593299Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2593375Z         try:
2025-02-24T16:09:32.2593517Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2593605Z         except KeyError:
2025-02-24T16:09:32.2593748Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2593821Z     
2025-02-24T16:09:32.2593910Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2594014Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2594110Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2594248Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2594339Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2594428Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2594548Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2594631Z             else:
2025-02-24T16:09:32.2594730Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2594846Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2594850Z 
2025-02-24T16:09:32.2594978Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2595102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2595255Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2595328Z     ???
2025-02-24T16:09:32.2595445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2595450Z 
2025-02-24T16:09:32.2595517Z >   ???
2025-02-24T16:09:32.2595653Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2595720Z E   
2025-02-24T16:09:32.2595856Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2595967Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2596045Z E          ...
2025-02-24T16:09:32.2596144Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2596436Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2596568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2596640Z E          ...
2025-02-24T16:09:32.2596730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2596861Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2596968Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2596977Z 
2025-02-24T16:09:32.2597072Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2597264Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T16:09:32.2597269Z 
2025-02-24T16:09:32.2597405Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2597544Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2597773Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2597916Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2598042Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2598141Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2598216Z err_msg = None
2025-02-24T16:09:32.2598224Z 
2025-02-24T16:09:32.2598449Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2598536Z         if err_msg is None:
2025-02-24T16:09:32.2598632Z             if left.shape != right.shape:
2025-02-24T16:09:32.2598720Z                 raise_assert_detail(
2025-02-24T16:09:32.2598868Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2598941Z                 )
2025-02-24T16:09:32.2599018Z     
2025-02-24T16:09:32.2599090Z             diff = 0
2025-02-24T16:09:32.2599206Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2599294Z                 # count up differences
2025-02-24T16:09:32.2599470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2599548Z                     diff += 1
2025-02-24T16:09:32.2599621Z     
2025-02-24T16:09:32.2599711Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2599855Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2600038Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2600153Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2600227Z E           
2025-02-24T16:09:32.2600339Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2600609Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2600881Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2600890Z 
2025-02-24T16:09:32.2601197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2601207Z 
2025-02-24T16:09:32.2601381Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2601386Z 
2025-02-24T16:09:32.2601618Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6810>
2025-02-24T16:09:32.2601798Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2601876Z attr = 'lines'
2025-02-24T16:09:32.2601881Z 
2025-02-24T16:09:32.2602019Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2602142Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2602233Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2602303Z         try:
2025-02-24T16:09:32.2602451Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2602531Z         except KeyError:
2025-02-24T16:09:32.2602679Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2602752Z     
2025-02-24T16:09:32.2602838Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2602940Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2603030Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2603165Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2603337Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2603430Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2603543Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2603614Z             else:
2025-02-24T16:09:32.2603708Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2603816Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2603820Z 
2025-02-24T16:09:32.2603954Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2604066Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2604312Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2604386Z     ???
2025-02-24T16:09:32.2604494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2604499Z 
2025-02-24T16:09:32.2604570Z >   ???
2025-02-24T16:09:32.2604726Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2604861Z E   
2025-02-24T16:09:32.2605084Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2605277Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2605403Z E          ...
2025-02-24T16:09:32.2605547Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2605769Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2605958Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2606084Z E          ...
2025-02-24T16:09:32.2606241Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2606601Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2606789Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2606796Z 
2025-02-24T16:09:32.2606947Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2607312Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T16:09:32.2607325Z 
2025-02-24T16:09:32.2607711Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5fd0>
2025-02-24T16:09:32.2607953Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2608050Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2608055Z 
2025-02-24T16:09:32.2608193Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2608313Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2608397Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2608477Z         try:
2025-02-24T16:09:32.2608621Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2608701Z         except KeyError:
2025-02-24T16:09:32.2608843Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2608910Z     
2025-02-24T16:09:32.2609001Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2609094Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2609192Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2609331Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2609416Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2609510Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2609618Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2609623Z 
2025-02-24T16:09:32.2609757Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2609864Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2609876Z 
2025-02-24T16:09:32.2610013Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2610102Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2610211Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2610296Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2610578Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2610666Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2610776Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2610853Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2610936Z err_msg = None
2025-02-24T16:09:32.2610941Z 
2025-02-24T16:09:32.2611052Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2611139Z         if err_msg is None:
2025-02-24T16:09:32.2611344Z             if left.shape != right.shape:
2025-02-24T16:09:32.2611430Z                 raise_assert_detail(
2025-02-24T16:09:32.2611579Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2611649Z                 )
2025-02-24T16:09:32.2611720Z     
2025-02-24T16:09:32.2611792Z             diff = 0
2025-02-24T16:09:32.2611906Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2612004Z                 # count up differences
2025-02-24T16:09:32.2612181Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2612262Z                     diff += 1
2025-02-24T16:09:32.2612331Z     
2025-02-24T16:09:32.2612422Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2612559Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2612736Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2612850Z E           AssertionError: Series are different
2025-02-24T16:09:32.2612920Z E           
2025-02-24T16:09:32.2613026Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2613402Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2613746Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2614091Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2614100Z 
2025-02-24T16:09:32.2614419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2614630Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T16:09:32.2614634Z 
2025-02-24T16:09:32.2614864Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6870>
2025-02-24T16:09:32.2615036Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2615131Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2615135Z 
2025-02-24T16:09:32.2615286Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2615403Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2615491Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2615562Z         try:
2025-02-24T16:09:32.2615706Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2615786Z         except KeyError:
2025-02-24T16:09:32.2616019Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2616093Z     
2025-02-24T16:09:32.2616178Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2616430Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2616543Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2616683Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2616768Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2616865Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2616980Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2617100Z 
2025-02-24T16:09:32.2617232Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2617348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2617353Z 
2025-02-24T16:09:32.2617488Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2617584Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2617696Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2617776Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2617920Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2618003Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2618113Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2618193Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2618274Z err_msg = None
2025-02-24T16:09:32.2618278Z 
2025-02-24T16:09:32.2618393Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2618476Z         if err_msg is None:
2025-02-24T16:09:32.2618576Z             if left.shape != right.shape:
2025-02-24T16:09:32.2618661Z                 raise_assert_detail(
2025-02-24T16:09:32.2618813Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2618893Z                 )
2025-02-24T16:09:32.2618961Z     
2025-02-24T16:09:32.2619039Z             diff = 0
2025-02-24T16:09:32.2619153Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2619243Z                 # count up differences
2025-02-24T16:09:32.2619411Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2619497Z                     diff += 1
2025-02-24T16:09:32.2619566Z     
2025-02-24T16:09:32.2619651Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2619796Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2619968Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2620076Z E           AssertionError: Series are different
2025-02-24T16:09:32.2620148Z E           
2025-02-24T16:09:32.2620255Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2620639Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2621019Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2621409Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2621528Z 
2025-02-24T16:09:32.2621848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2622035Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T16:09:32.2622114Z 
2025-02-24T16:09:32.2622243Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2622375Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2622472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2622610Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2622742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2622837Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2622916Z err_msg = None
2025-02-24T16:09:32.2622921Z 
2025-02-24T16:09:32.2623028Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2623112Z         if err_msg is None:
2025-02-24T16:09:32.2623208Z             if left.shape != right.shape:
2025-02-24T16:09:32.2623296Z                 raise_assert_detail(
2025-02-24T16:09:32.2623446Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2623518Z                 )
2025-02-24T16:09:32.2623588Z     
2025-02-24T16:09:32.2623658Z             diff = 0
2025-02-24T16:09:32.2623773Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2623860Z                 # count up differences
2025-02-24T16:09:32.2624036Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2624117Z                     diff += 1
2025-02-24T16:09:32.2624185Z     
2025-02-24T16:09:32.2624275Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2624411Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2624586Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2624701Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2624776Z E           
2025-02-24T16:09:32.2624897Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2625158Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2625429Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2625435Z 
2025-02-24T16:09:32.2625744Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2625749Z 
2025-02-24T16:09:32.2625923Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2625927Z 
2025-02-24T16:09:32.2626156Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5040>
2025-02-24T16:09:32.2626527Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>, attr = 'nu'
2025-02-24T16:09:32.2626533Z 
2025-02-24T16:09:32.2626674Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2626920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2627004Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2627079Z         try:
2025-02-24T16:09:32.2627221Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2627307Z         except KeyError:
2025-02-24T16:09:32.2627449Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2627517Z     
2025-02-24T16:09:32.2627606Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2627698Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2627917Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2628050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2628140Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2628232Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2628341Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2628352Z 
2025-02-24T16:09:32.2628485Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2628597Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2628752Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2628826Z     ???
2025-02-24T16:09:32.2628935Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2628939Z 
2025-02-24T16:09:32.2629011Z >   ???
2025-02-24T16:09:32.2629137Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2629215Z E   
2025-02-24T16:09:32.2629344Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2629464Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2629540Z E          ...
2025-02-24T16:09:32.2629626Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2629811Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2630017Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2630145Z E          ...
2025-02-24T16:09:32.2630288Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2630509Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2630692Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2630698Z 
2025-02-24T16:09:32.2630848Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2631197Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T16:09:32.2631211Z 
2025-02-24T16:09:32.2631428Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2631649Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2631813Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2632478Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2632705Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2632863Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2632997Z err_msg = None
2025-02-24T16:09:32.2633002Z 
2025-02-24T16:09:32.2633121Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2633203Z         if err_msg is None:
2025-02-24T16:09:32.2633302Z             if left.shape != right.shape:
2025-02-24T16:09:32.2633386Z                 raise_assert_detail(
2025-02-24T16:09:32.2633537Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2633609Z                 )
2025-02-24T16:09:32.2633681Z     
2025-02-24T16:09:32.2633755Z             diff = 0
2025-02-24T16:09:32.2633866Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2633957Z                 # count up differences
2025-02-24T16:09:32.2634253Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2634333Z                     diff += 1
2025-02-24T16:09:32.2634405Z     
2025-02-24T16:09:32.2634492Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2634632Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2634803Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2634924Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2634995Z E           
2025-02-24T16:09:32.2635189Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2635462Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2635729Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2635734Z 
2025-02-24T16:09:32.2636045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2636049Z 
2025-02-24T16:09:32.2636225Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2636234Z 
2025-02-24T16:09:32.2636634Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5100>
2025-02-24T16:09:32.2636814Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2636894Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2636903Z 
2025-02-24T16:09:32.2637047Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2637165Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2637251Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2637329Z         try:
2025-02-24T16:09:32.2637472Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2637556Z         except KeyError:
2025-02-24T16:09:32.2637701Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2637770Z     
2025-02-24T16:09:32.2637863Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2637961Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2638054Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2638184Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2638273Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2638368Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2638477Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2638485Z 
2025-02-24T16:09:32.2638618Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2638732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2638882Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2638951Z     ???
2025-02-24T16:09:32.2639063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2639068Z 
2025-02-24T16:09:32.2639139Z >   ???
2025-02-24T16:09:32.2639266Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2639342Z E   
2025-02-24T16:09:32.2639473Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2639592Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2639666Z E          ...
2025-02-24T16:09:32.2639752Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2639884Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2640127Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2640201Z E          ...
2025-02-24T16:09:32.2640285Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2640415Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2640524Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2640528Z 
2025-02-24T16:09:32.2640621Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2640812Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T16:09:32.2640918Z 
2025-02-24T16:09:32.2641050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2641180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2641280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2641411Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2641545Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2641638Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2641719Z err_msg = None
2025-02-24T16:09:32.2641723Z 
2025-02-24T16:09:32.2641839Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2641920Z         if err_msg is None:
2025-02-24T16:09:32.2642020Z             if left.shape != right.shape:
2025-02-24T16:09:32.2642109Z                 raise_assert_detail(
2025-02-24T16:09:32.2642266Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2642337Z                 )
2025-02-24T16:09:32.2642410Z     
2025-02-24T16:09:32.2642488Z             diff = 0
2025-02-24T16:09:32.2642601Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2642693Z                 # count up differences
2025-02-24T16:09:32.2642867Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2642952Z                     diff += 1
2025-02-24T16:09:32.2643027Z     
2025-02-24T16:09:32.2643122Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2643265Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2643437Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2643554Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2643629Z E           
2025-02-24T16:09:32.2643747Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2644016Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2644287Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2644292Z 
2025-02-24T16:09:32.2644602Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2644606Z 
2025-02-24T16:09:32.2644784Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2644788Z 
2025-02-24T16:09:32.2645013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5460>
2025-02-24T16:09:32.2645223Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>, attr = 'f_lu'
2025-02-24T16:09:32.2645227Z 
2025-02-24T16:09:32.2645367Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2645578Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2645665Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2645733Z         try:
2025-02-24T16:09:32.2645875Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2645954Z         except KeyError:
2025-02-24T16:09:32.2646098Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2646165Z     
2025-02-24T16:09:32.2646257Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2646519Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2646727Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2646866Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2646953Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2647047Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2647157Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2647167Z 
2025-02-24T16:09:32.2647348Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2647552Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2647843Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2647960Z     ???
2025-02-24T16:09:32.2648140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2648146Z 
2025-02-24T16:09:32.2648259Z >   ???
2025-02-24T16:09:32.2648466Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2648586Z E   
2025-02-24T16:09:32.2648808Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2648983Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2649105Z E          ...
2025-02-24T16:09:32.2649242Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2649465Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2649687Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2649809Z E          ...
2025-02-24T16:09:32.2649972Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2650205Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2650401Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2650414Z 
2025-02-24T16:09:32.2650574Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2650935Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T16:09:32.2650952Z 
2025-02-24T16:09:32.2651190Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2651422Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2651608Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2651831Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2652070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2652242Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2652372Z err_msg = None
2025-02-24T16:09:32.2652379Z 
2025-02-24T16:09:32.2652576Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2652714Z         if err_msg is None:
2025-02-24T16:09:32.2652882Z             if left.shape != right.shape:
2025-02-24T16:09:32.2653031Z                 raise_assert_detail(
2025-02-24T16:09:32.2653289Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2653414Z                 )
2025-02-24T16:09:32.2653534Z     
2025-02-24T16:09:32.2653662Z             diff = 0
2025-02-24T16:09:32.2653858Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2654016Z                 # count up differences
2025-02-24T16:09:32.2654561Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2654696Z                     diff += 1
2025-02-24T16:09:32.2654817Z     
2025-02-24T16:09:32.2654967Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2655208Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2655507Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2655704Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2655831Z E           
2025-02-24T16:09:32.2656137Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2656808Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2657309Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2657325Z 
2025-02-24T16:09:32.2657862Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2657870Z 
2025-02-24T16:09:32.2658181Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2658188Z 
2025-02-24T16:09:32.2658582Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6e70>
2025-02-24T16:09:32.2658881Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2659021Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2659028Z 
2025-02-24T16:09:32.2659273Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2659483Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2659593Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2659668Z         try:
2025-02-24T16:09:32.2659819Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2659900Z         except KeyError:
2025-02-24T16:09:32.2660045Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2660114Z     
2025-02-24T16:09:32.2660208Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2660308Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2660404Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2660546Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2660634Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2660729Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2660841Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2660923Z             else:
2025-02-24T16:09:32.2661019Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2661133Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2661138Z 
2025-02-24T16:09:32.2661270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2661386Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2661539Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2661610Z     ???
2025-02-24T16:09:32.2661731Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2661735Z 
2025-02-24T16:09:32.2661808Z >   ???
2025-02-24T16:09:32.2661940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2662013Z E   
2025-02-24T16:09:32.2662142Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2662259Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2662477Z E          ...
2025-02-24T16:09:32.2662571Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2662708Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2662822Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2662898Z E          ...
2025-02-24T16:09:32.2662983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2663116Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2663221Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2663334Z 
2025-02-24T16:09:32.2663430Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2663638Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T16:09:32.2663643Z 
2025-02-24T16:09:32.2663774Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2663914Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2664022Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2664166Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2664298Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2664391Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2664470Z err_msg = None
2025-02-24T16:09:32.2664474Z 
2025-02-24T16:09:32.2664593Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2664677Z         if err_msg is None:
2025-02-24T16:09:32.2664781Z             if left.shape != right.shape:
2025-02-24T16:09:32.2664867Z                 raise_assert_detail(
2025-02-24T16:09:32.2665025Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2665095Z                 )
2025-02-24T16:09:32.2665172Z     
2025-02-24T16:09:32.2665243Z             diff = 0
2025-02-24T16:09:32.2665366Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2665458Z                 # count up differences
2025-02-24T16:09:32.2665634Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2665718Z                     diff += 1
2025-02-24T16:09:32.2665786Z     
2025-02-24T16:09:32.2665882Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2666021Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2666208Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2666524Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2666600Z E           
2025-02-24T16:09:32.2666721Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2666985Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2667259Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2667269Z 
2025-02-24T16:09:32.2667610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2667620Z 
2025-02-24T16:09:32.2667909Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2667927Z 
2025-02-24T16:09:32.2668316Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6c00>
2025-02-24T16:09:32.2668779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2668901Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2668906Z 
2025-02-24T16:09:32.2669053Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2669170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2669261Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2669337Z         try:
2025-02-24T16:09:32.2669479Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2669676Z         except KeyError:
2025-02-24T16:09:32.2669817Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2669891Z     
2025-02-24T16:09:32.2669978Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2670075Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2670169Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2670305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2670399Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2670489Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2670604Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2670674Z             else:
2025-02-24T16:09:32.2670774Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2670886Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2670890Z 
2025-02-24T16:09:32.2671015Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2671138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2671287Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2671360Z     ???
2025-02-24T16:09:32.2671473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2671478Z 
2025-02-24T16:09:32.2671545Z >   ???
2025-02-24T16:09:32.2671683Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2671750Z E   
2025-02-24T16:09:32.2671885Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2671997Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2672073Z E          ...
2025-02-24T16:09:32.2672168Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2672301Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2672418Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2672493Z E          ...
2025-02-24T16:09:32.2672583Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2672708Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2672818Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2672823Z 
2025-02-24T16:09:32.2672917Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2673114Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T16:09:32.2673122Z 
2025-02-24T16:09:32.2673255Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2673388Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2673488Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2673625Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2673749Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2673851Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2673926Z err_msg = None
2025-02-24T16:09:32.2673930Z 
2025-02-24T16:09:32.2674048Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2674132Z         if err_msg is None:
2025-02-24T16:09:32.2674227Z             if left.shape != right.shape:
2025-02-24T16:09:32.2674407Z                 raise_assert_detail(
2025-02-24T16:09:32.2674554Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2674630Z                 )
2025-02-24T16:09:32.2674697Z     
2025-02-24T16:09:32.2674774Z             diff = 0
2025-02-24T16:09:32.2674891Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2674979Z                 # count up differences
2025-02-24T16:09:32.2675157Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2675317Z                     diff += 1
2025-02-24T16:09:32.2675389Z     
2025-02-24T16:09:32.2675479Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2675622Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2675799Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2675913Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2675993Z E           
2025-02-24T16:09:32.2676106Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2676552Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2676828Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2676838Z 
2025-02-24T16:09:32.2677150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2677158Z 
2025-02-24T16:09:32.2677338Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2677342Z 
2025-02-24T16:09:32.2677574Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6990>
2025-02-24T16:09:32.2677746Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0dc8080>
2025-02-24T16:09:32.2677825Z attr = 'j_blues'
2025-02-24T16:09:32.2677829Z 
2025-02-24T16:09:32.2677970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2678090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2678182Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2678252Z         try:
2025-02-24T16:09:32.2678394Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2678474Z         except KeyError:
2025-02-24T16:09:32.2678616Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2678683Z     
2025-02-24T16:09:32.2678776Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2678870Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2678958Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2679094Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2679179Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2679273Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2679387Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2679463Z             else:
2025-02-24T16:09:32.2679563Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2679677Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2679682Z 
2025-02-24T16:09:32.2679811Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2679923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2680075Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2680293Z     ???
2025-02-24T16:09:32.2680403Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2680407Z 
2025-02-24T16:09:32.2680480Z >   ???
2025-02-24T16:09:32.2680608Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2680679Z E   
2025-02-24T16:09:32.2680808Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2680921Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2680996Z E          ...
2025-02-24T16:09:32.2681084Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2681324Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2681438Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2681515Z E          ...
2025-02-24T16:09:32.2681600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2681729Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2681843Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2681848Z 
2025-02-24T16:09:32.2681935Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2682143Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T16:09:32.2682148Z 
2025-02-24T16:09:32.2682285Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2682419Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2682522Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2682663Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2682791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2682886Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2682964Z err_msg = None
2025-02-24T16:09:32.2682972Z 
2025-02-24T16:09:32.2683087Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2683167Z         if err_msg is None:
2025-02-24T16:09:32.2683269Z             if left.shape != right.shape:
2025-02-24T16:09:32.2683356Z                 raise_assert_detail(
2025-02-24T16:09:32.2683512Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2683584Z                 )
2025-02-24T16:09:32.2683659Z     
2025-02-24T16:09:32.2683736Z             diff = 0
2025-02-24T16:09:32.2683852Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2683954Z                 # count up differences
2025-02-24T16:09:32.2684132Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2684217Z                     diff += 1
2025-02-24T16:09:32.2684285Z     
2025-02-24T16:09:32.2684381Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2684522Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2684700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2684821Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2684892Z E           
2025-02-24T16:09:32.2685012Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2685272Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2685549Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2685648Z 
2025-02-24T16:09:32.2686069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2686077Z 
2025-02-24T16:09:32.2686527Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2686539Z 
2025-02-24T16:09:32.2686929Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af4080>
2025-02-24T16:09:32.2687230Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2687530Z attr = 'lines'
2025-02-24T16:09:32.2687537Z 
2025-02-24T16:09:32.2687780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2687982Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2688125Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2688249Z         try:
2025-02-24T16:09:32.2688486Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2688637Z         except KeyError:
2025-02-24T16:09:32.2688919Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2689134Z     
2025-02-24T16:09:32.2689372Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2689504Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2689756Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2689944Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2690099Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2690238Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2690425Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2690516Z             else:
2025-02-24T16:09:32.2690752Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2690948Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2690952Z 
2025-02-24T16:09:32.2691113Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2691304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2691472Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2691671Z     ???
2025-02-24T16:09:32.2691869Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2691873Z 
2025-02-24T16:09:32.2691973Z >   ???
2025-02-24T16:09:32.2692169Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2692258Z E   
2025-02-24T16:09:32.2692520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2692683Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2692825Z E          ...
2025-02-24T16:09:32.2692981Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2693130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2693356Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2704094Z E          ...
2025-02-24T16:09:32.2704227Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2704386Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2704510Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2704516Z 
2025-02-24T16:09:32.2704682Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2705109Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T16:09:32.2705118Z 
2025-02-24T16:09:32.2705506Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af5ac0>
2025-02-24T16:09:32.2705821Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2705942Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2705947Z 
2025-02-24T16:09:32.2706094Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2706223Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2706680Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2706760Z         try:
2025-02-24T16:09:32.2706911Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2707000Z         except KeyError:
2025-02-24T16:09:32.2707150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2707218Z     
2025-02-24T16:09:32.2707312Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2707412Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2707507Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2707648Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2707852Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2707948Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2708064Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2708069Z 
2025-02-24T16:09:32.2708205Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2708330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2708335Z 
2025-02-24T16:09:32.2708479Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2708570Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2708681Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2708767Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2708910Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2709005Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2709117Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2709198Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2709278Z err_msg = None
2025-02-24T16:09:32.2709282Z 
2025-02-24T16:09:32.2709397Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2709489Z         if err_msg is None:
2025-02-24T16:09:32.2709585Z             if left.shape != right.shape:
2025-02-24T16:09:32.2709676Z                 raise_assert_detail(
2025-02-24T16:09:32.2709832Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2709904Z                 )
2025-02-24T16:09:32.2709976Z     
2025-02-24T16:09:32.2710047Z             diff = 0
2025-02-24T16:09:32.2710166Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2710253Z                 # count up differences
2025-02-24T16:09:32.2710438Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2710524Z                     diff += 1
2025-02-24T16:09:32.2710592Z     
2025-02-24T16:09:32.2710684Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2710823Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2710999Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2711110Z E           AssertionError: Series are different
2025-02-24T16:09:32.2711184Z E           
2025-02-24T16:09:32.2711292Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2711667Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2712015Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2712464Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2712470Z 
2025-02-24T16:09:32.2712793Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2713112Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T16:09:32.2713117Z 
2025-02-24T16:09:32.2713352Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af58b0>
2025-02-24T16:09:32.2713525Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2713621Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2713625Z 
2025-02-24T16:09:32.2713766Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2713886Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2713969Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2714037Z         try:
2025-02-24T16:09:32.2714188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2714267Z         except KeyError:
2025-02-24T16:09:32.2714409Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2714480Z     
2025-02-24T16:09:32.2714568Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2714669Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2714758Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2714895Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2714979Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2715071Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2715187Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2715198Z 
2025-02-24T16:09:32.2715325Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2715446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2715451Z 
2025-02-24T16:09:32.2715587Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2715677Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2715784Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2715872Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2716019Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2716101Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2716213Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2716430Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2716516Z err_msg = None
2025-02-24T16:09:32.2716520Z 
2025-02-24T16:09:32.2716637Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2716720Z         if err_msg is None:
2025-02-24T16:09:32.2716818Z             if left.shape != right.shape:
2025-02-24T16:09:32.2716902Z                 raise_assert_detail(
2025-02-24T16:09:32.2717053Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2717123Z                 )
2025-02-24T16:09:32.2717199Z     
2025-02-24T16:09:32.2717271Z             diff = 0
2025-02-24T16:09:32.2717381Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2717472Z                 # count up differences
2025-02-24T16:09:32.2717643Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2717725Z                     diff += 1
2025-02-24T16:09:32.2717791Z     
2025-02-24T16:09:32.2718004Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2718147Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2718319Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2718429Z E           AssertionError: Series are different
2025-02-24T16:09:32.2718498Z E           
2025-02-24T16:09:32.2718605Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2718979Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2719493Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2719884Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2719895Z 
2025-02-24T16:09:32.2720229Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2720429Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T16:09:32.2720437Z 
2025-02-24T16:09:32.2720577Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2720713Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2720813Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2720954Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2721075Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2721176Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2721256Z err_msg = None
2025-02-24T16:09:32.2721260Z 
2025-02-24T16:09:32.2721371Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2721456Z         if err_msg is None:
2025-02-24T16:09:32.2721550Z             if left.shape != right.shape:
2025-02-24T16:09:32.2721643Z                 raise_assert_detail(
2025-02-24T16:09:32.2721792Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2721866Z                 )
2025-02-24T16:09:32.2721939Z     
2025-02-24T16:09:32.2722009Z             diff = 0
2025-02-24T16:09:32.2722125Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2722213Z                 # count up differences
2025-02-24T16:09:32.2722390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2722471Z                     diff += 1
2025-02-24T16:09:32.2722545Z     
2025-02-24T16:09:32.2722635Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2722873Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2723180Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2723372Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2723626Z E           
2025-02-24T16:09:32.2723822Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2724304Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2724792Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2724903Z 
2025-02-24T16:09:32.2725438Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2725454Z 
2025-02-24T16:09:32.2725747Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2725754Z 
2025-02-24T16:09:32.2726156Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7b30>
2025-02-24T16:09:32.2726520Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>, attr = 'nu'
2025-02-24T16:09:32.2726532Z 
2025-02-24T16:09:32.2726675Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2726797Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2726886Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2726959Z         try:
2025-02-24T16:09:32.2727103Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2727188Z         except KeyError:
2025-02-24T16:09:32.2727329Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2727401Z     
2025-02-24T16:09:32.2727491Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2727591Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2727684Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2727819Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2727910Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2728002Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2728113Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2728118Z 
2025-02-24T16:09:32.2728249Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2728367Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2728522Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2728591Z     ???
2025-02-24T16:09:32.2728705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2728710Z 
2025-02-24T16:09:32.2728782Z >   ???
2025-02-24T16:09:32.2728915Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2728984Z E   
2025-02-24T16:09:32.2729110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2729224Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2729291Z E          ...
2025-02-24T16:09:32.2729383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2729521Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2729633Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2729714Z E          ...
2025-02-24T16:09:32.2729798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2729931Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2730042Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2730047Z 
2025-02-24T16:09:32.2730136Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2730355Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T16:09:32.2730521Z 
2025-02-24T16:09:32.2730656Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2730794Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2730897Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2731027Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2731156Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2731357Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2731436Z err_msg = None
2025-02-24T16:09:32.2731441Z 
2025-02-24T16:09:32.2731555Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2731642Z         if err_msg is None:
2025-02-24T16:09:32.2731746Z             if left.shape != right.shape:
2025-02-24T16:09:32.2731837Z                 raise_assert_detail(
2025-02-24T16:09:32.2731987Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2732056Z                 )
2025-02-24T16:09:32.2732127Z     
2025-02-24T16:09:32.2732201Z             diff = 0
2025-02-24T16:09:32.2732314Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2732407Z                 # count up differences
2025-02-24T16:09:32.2732579Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2732665Z                     diff += 1
2025-02-24T16:09:32.2732731Z     
2025-02-24T16:09:32.2732824Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2732962Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2733140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2733258Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2733332Z E           
2025-02-24T16:09:32.2733449Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2733713Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2733980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2733992Z 
2025-02-24T16:09:32.2734311Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2734319Z 
2025-02-24T16:09:32.2734494Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2734498Z 
2025-02-24T16:09:32.2734725Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af6f30>
2025-02-24T16:09:32.2734903Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2734983Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2734987Z 
2025-02-24T16:09:32.2735136Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2735263Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2735348Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2735423Z         try:
2025-02-24T16:09:32.2735567Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2735650Z         except KeyError:
2025-02-24T16:09:32.2735791Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2735864Z     
2025-02-24T16:09:32.2736042Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2736143Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2736239Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2736487Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2736579Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2736668Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2736783Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2736788Z 
2025-02-24T16:09:32.2736921Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2737160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2737313Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2737382Z     ???
2025-02-24T16:09:32.2737494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2737499Z 
2025-02-24T16:09:32.2737566Z >   ???
2025-02-24T16:09:32.2737704Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2737774Z E   
2025-02-24T16:09:32.2737902Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2738019Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2738087Z E          ...
2025-02-24T16:09:32.2738181Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2738315Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2738431Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2738512Z E          ...
2025-02-24T16:09:32.2738597Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2738725Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2738831Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2738835Z 
2025-02-24T16:09:32.2738930Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2739136Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T16:09:32.2739145Z 
2025-02-24T16:09:32.2739280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2739418Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2739518Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2739659Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2739790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2739888Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2739973Z err_msg = None
2025-02-24T16:09:32.2739978Z 
2025-02-24T16:09:32.2740160Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2740312Z         if err_msg is None:
2025-02-24T16:09:32.2740478Z             if left.shape != right.shape:
2025-02-24T16:09:32.2740626Z                 raise_assert_detail(
2025-02-24T16:09:32.2740879Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2741004Z                 )
2025-02-24T16:09:32.2741126Z     
2025-02-24T16:09:32.2741262Z             diff = 0
2025-02-24T16:09:32.2741389Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2741478Z                 # count up differences
2025-02-24T16:09:32.2741653Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2741739Z                     diff += 1
2025-02-24T16:09:32.2741810Z     
2025-02-24T16:09:32.2741900Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2742043Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2742221Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2742340Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2742544Z E           
2025-02-24T16:09:32.2742665Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2742932Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2743195Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2743278Z 
2025-02-24T16:09:32.2743605Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2743614Z 
2025-02-24T16:09:32.2743793Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2743798Z 
2025-02-24T16:09:32.2744028Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600af7350>
2025-02-24T16:09:32.2744242Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>, attr = 'f_lu'
2025-02-24T16:09:32.2744246Z 
2025-02-24T16:09:32.2744387Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2744505Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2744597Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2744665Z         try:
2025-02-24T16:09:32.2744811Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2744889Z         except KeyError:
2025-02-24T16:09:32.2745031Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2745098Z     
2025-02-24T16:09:32.2745187Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2745281Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2745367Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2745501Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2745585Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2745677Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2745790Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2745794Z 
2025-02-24T16:09:32.2745919Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2746039Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2746186Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2746256Z     ???
2025-02-24T16:09:32.2746558Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2746563Z 
2025-02-24T16:09:32.2746627Z >   ???
2025-02-24T16:09:32.2746763Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2746837Z E   
2025-02-24T16:09:32.2746970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2747079Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2747150Z E          ...
2025-02-24T16:09:32.2747239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2747372Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2747489Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2747560Z E          ...
2025-02-24T16:09:32.2747650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2747806Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2747914Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2747919Z 
2025-02-24T16:09:32.2748008Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2748215Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T16:09:32.2748337Z 
2025-02-24T16:09:32.2748476Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2748607Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2748706Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2748842Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2748966Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2749183Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2749255Z err_msg = None
2025-02-24T16:09:32.2749259Z 
2025-02-24T16:09:32.2749372Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2749452Z         if err_msg is None:
2025-02-24T16:09:32.2749545Z             if left.shape != right.shape:
2025-02-24T16:09:32.2749635Z                 raise_assert_detail(
2025-02-24T16:09:32.2749778Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2749848Z                 )
2025-02-24T16:09:32.2749914Z     
2025-02-24T16:09:32.2749991Z             diff = 0
2025-02-24T16:09:32.2750108Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2750195Z                 # count up differences
2025-02-24T16:09:32.2750375Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2750459Z                     diff += 1
2025-02-24T16:09:32.2750532Z     
2025-02-24T16:09:32.2750622Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2750766Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2750943Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2751055Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2751132Z E           
2025-02-24T16:09:32.2751244Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2751512Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2751780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2751789Z 
2025-02-24T16:09:32.2752097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2752105Z 
2025-02-24T16:09:32.2752283Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2752287Z 
2025-02-24T16:09:32.2752521Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37da0>
2025-02-24T16:09:32.2752693Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2752775Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2752780Z 
2025-02-24T16:09:32.2752917Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2753034Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2753125Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2753194Z         try:
2025-02-24T16:09:32.2753339Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2753419Z         except KeyError:
2025-02-24T16:09:32.2753563Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2753631Z     
2025-02-24T16:09:32.2753814Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2753914Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2754004Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2754139Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2754224Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2754320Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2754429Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2754505Z             else:
2025-02-24T16:09:32.2754606Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2754793Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2754797Z 
2025-02-24T16:09:32.2754930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2755042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2755193Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2755270Z     ???
2025-02-24T16:09:32.2755380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2755384Z 
2025-02-24T16:09:32.2755455Z >   ???
2025-02-24T16:09:32.2755583Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2755654Z E   
2025-02-24T16:09:32.2755783Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2755896Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2755972Z E          ...
2025-02-24T16:09:32.2756060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2756200Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2756472Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2756550Z E          ...
2025-02-24T16:09:32.2756639Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2756771Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2756886Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2756891Z 
2025-02-24T16:09:32.2756978Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2757192Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T16:09:32.2757197Z 
2025-02-24T16:09:32.2757327Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2757459Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2757565Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2757698Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2757826Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2757921Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2758003Z err_msg = None
2025-02-24T16:09:32.2758008Z 
2025-02-24T16:09:32.2758122Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2758202Z         if err_msg is None:
2025-02-24T16:09:32.2758302Z             if left.shape != right.shape:
2025-02-24T16:09:32.2758387Z                 raise_assert_detail(
2025-02-24T16:09:32.2758537Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2758615Z                 )
2025-02-24T16:09:32.2758749Z     
2025-02-24T16:09:32.2758888Z             diff = 0
2025-02-24T16:09:32.2759075Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2759234Z                 # count up differences
2025-02-24T16:09:32.2759526Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2759660Z                     diff += 1
2025-02-24T16:09:32.2759777Z     
2025-02-24T16:09:32.2759927Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2760209Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2760388Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2760505Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2760575Z E           
2025-02-24T16:09:32.2760695Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2760961Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2761336Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2761347Z 
2025-02-24T16:09:32.2761661Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2761665Z 
2025-02-24T16:09:32.2761844Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2761848Z 
2025-02-24T16:09:32.2762076Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b36f90>
2025-02-24T16:09:32.2762253Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2762339Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2762344Z 
2025-02-24T16:09:32.2762489Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2762612Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2762695Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2762769Z         try:
2025-02-24T16:09:32.2762909Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2762998Z         except KeyError:
2025-02-24T16:09:32.2763138Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2763217Z     
2025-02-24T16:09:32.2763312Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2763407Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2763502Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2763634Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2763726Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2763822Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2763937Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2764013Z             else:
2025-02-24T16:09:32.2764110Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2764224Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2764229Z 
2025-02-24T16:09:32.2764358Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2764475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2764627Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2764695Z     ???
2025-02-24T16:09:32.2764808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2764813Z 
2025-02-24T16:09:32.2764880Z >   ???
2025-02-24T16:09:32.2765012Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2765080Z E   
2025-02-24T16:09:32.2765220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2765336Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2765406Z E          ...
2025-02-24T16:09:32.2765496Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2765626Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2765743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2765905Z E          ...
2025-02-24T16:09:32.2765996Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2766129Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2766233Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2766237Z 
2025-02-24T16:09:32.2766444Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2766650Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T16:09:32.2766654Z 
2025-02-24T16:09:32.2766789Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2767035Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2767133Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2767272Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2767401Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2767502Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2767579Z err_msg = None
2025-02-24T16:09:32.2767584Z 
2025-02-24T16:09:32.2767696Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2767782Z         if err_msg is None:
2025-02-24T16:09:32.2767875Z             if left.shape != right.shape:
2025-02-24T16:09:32.2767968Z                 raise_assert_detail(
2025-02-24T16:09:32.2768112Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2768191Z                 )
2025-02-24T16:09:32.2768262Z     
2025-02-24T16:09:32.2768334Z             diff = 0
2025-02-24T16:09:32.2768448Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2768535Z                 # count up differences
2025-02-24T16:09:32.2768713Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2768792Z                     diff += 1
2025-02-24T16:09:32.2768865Z     
2025-02-24T16:09:32.2768956Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2769092Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2769273Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2769386Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2769461Z E           
2025-02-24T16:09:32.2769573Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2769843Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2770112Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2770121Z 
2025-02-24T16:09:32.2770431Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2770436Z 
2025-02-24T16:09:32.2770604Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2770612Z 
2025-02-24T16:09:32.2770844Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b35310>
2025-02-24T16:09:32.2771015Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3ab3b0>
2025-02-24T16:09:32.2771097Z attr = 'j_blues'
2025-02-24T16:09:32.2771101Z 
2025-02-24T16:09:32.2771245Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2771479Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2771566Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2771635Z         try:
2025-02-24T16:09:32.2771777Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2771857Z         except KeyError:
2025-02-24T16:09:32.2771998Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2772070Z     
2025-02-24T16:09:32.2772157Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2772258Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2772446Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2772583Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2772667Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2772761Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2772874Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2772943Z             else:
2025-02-24T16:09:32.2773047Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2773152Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2773157Z 
2025-02-24T16:09:32.2773289Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2773406Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2773553Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2773625Z     ???
2025-02-24T16:09:32.2773734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2773743Z 
2025-02-24T16:09:32.2773815Z >   ???
2025-02-24T16:09:32.2773943Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2774015Z E   
2025-02-24T16:09:32.2774148Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2774259Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2774335Z E          ...
2025-02-24T16:09:32.2774424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2774559Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2774671Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2774747Z E          ...
2025-02-24T16:09:32.2774836Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2774961Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2775071Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2775076Z 
2025-02-24T16:09:32.2775170Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2775425Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T16:09:32.2775430Z 
2025-02-24T16:09:32.2775568Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2775695Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2775800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2775932Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2776060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2776158Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2776232Z err_msg = None
2025-02-24T16:09:32.2776237Z 
2025-02-24T16:09:32.2776572Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2776731Z         if err_msg is None:
2025-02-24T16:09:32.2776905Z             if left.shape != right.shape:
2025-02-24T16:09:32.2777050Z                 raise_assert_detail(
2025-02-24T16:09:32.2777302Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2777427Z                 )
2025-02-24T16:09:32.2777546Z     
2025-02-24T16:09:32.2777677Z             diff = 0
2025-02-24T16:09:32.2778038Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2778192Z                 # count up differences
2025-02-24T16:09:32.2778487Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2778623Z                     diff += 1
2025-02-24T16:09:32.2778743Z     
2025-02-24T16:09:32.2778893Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2779128Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2779423Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2779809Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2779890Z E           
2025-02-24T16:09:32.2780005Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2780275Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2780547Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2780558Z 
2025-02-24T16:09:32.2780876Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2780882Z 
2025-02-24T16:09:32.2781059Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2781063Z 
2025-02-24T16:09:32.2781295Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37e60>
2025-02-24T16:09:32.2781474Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2781551Z attr = 'lines'
2025-02-24T16:09:32.2781555Z 
2025-02-24T16:09:32.2781695Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2781815Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2781898Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2781973Z         try:
2025-02-24T16:09:32.2782111Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2782198Z         except KeyError:
2025-02-24T16:09:32.2782339Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2782413Z     
2025-02-24T16:09:32.2782504Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2782596Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2782688Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2782820Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2782918Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2783012Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2783122Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2783197Z             else:
2025-02-24T16:09:32.2783293Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2783406Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2783411Z 
2025-02-24T16:09:32.2783542Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2783656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2783813Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2783881Z     ???
2025-02-24T16:09:32.2783993Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2783998Z 
2025-02-24T16:09:32.2784070Z >   ???
2025-02-24T16:09:32.2784199Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2784361Z E   
2025-02-24T16:09:32.2784488Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2784604Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2784675Z E          ...
2025-02-24T16:09:32.2784769Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2784904Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2785016Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2785093Z E          ...
2025-02-24T16:09:32.2785179Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2785386Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2785493Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2785497Z 
2025-02-24T16:09:32.2785591Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2785904Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T16:09:32.2785915Z 
2025-02-24T16:09:32.2786142Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b358e0>
2025-02-24T16:09:32.2786471Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2786565Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2786570Z 
2025-02-24T16:09:32.2786710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2786826Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2786908Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2786981Z         try:
2025-02-24T16:09:32.2787126Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2787210Z         except KeyError:
2025-02-24T16:09:32.2787347Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2787424Z     
2025-02-24T16:09:32.2787516Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2787610Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2787707Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2787837Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2787928Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2788017Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2788132Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2788136Z 
2025-02-24T16:09:32.2788262Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2788373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2788381Z 
2025-02-24T16:09:32.2788527Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2788611Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2788725Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2788809Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2788952Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2789039Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2789145Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2789229Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2789308Z err_msg = None
2025-02-24T16:09:32.2789313Z 
2025-02-24T16:09:32.2789424Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2789508Z         if err_msg is None:
2025-02-24T16:09:32.2789601Z             if left.shape != right.shape:
2025-02-24T16:09:32.2789706Z                 raise_assert_detail(
2025-02-24T16:09:32.2789855Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2789929Z                 )
2025-02-24T16:09:32.2789996Z     
2025-02-24T16:09:32.2790075Z             diff = 0
2025-02-24T16:09:32.2790190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2790403Z                 # count up differences
2025-02-24T16:09:32.2790582Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2790657Z                     diff += 1
2025-02-24T16:09:32.2790728Z     
2025-02-24T16:09:32.2790814Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2790957Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2791129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2791237Z E           AssertionError: Series are different
2025-02-24T16:09:32.2791419Z E           
2025-02-24T16:09:32.2791519Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2791899Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2792241Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2792586Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2792595Z 
2025-02-24T16:09:32.2792914Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2793219Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T16:09:32.2793223Z 
2025-02-24T16:09:32.2793450Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b365d0>
2025-02-24T16:09:32.2793627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2793717Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2793725Z 
2025-02-24T16:09:32.2793867Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2793985Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2794068Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2794141Z         try:
2025-02-24T16:09:32.2794279Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2794364Z         except KeyError:
2025-02-24T16:09:32.2794506Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2794579Z     
2025-02-24T16:09:32.2794669Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2794761Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2794867Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2795111Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2795268Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2795419Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2795610Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2795625Z 
2025-02-24T16:09:32.2795837Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2796029Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2796036Z 
2025-02-24T16:09:32.2796223Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2796582Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2796699Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2796783Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2796928Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2797015Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2797122Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2797205Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2797390Z err_msg = None
2025-02-24T16:09:32.2797395Z 
2025-02-24T16:09:32.2797509Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2797593Z         if err_msg is None:
2025-02-24T16:09:32.2797689Z             if left.shape != right.shape:
2025-02-24T16:09:32.2797777Z                 raise_assert_detail(
2025-02-24T16:09:32.2797923Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2798003Z                 )
2025-02-24T16:09:32.2798075Z     
2025-02-24T16:09:32.2798146Z             diff = 0
2025-02-24T16:09:32.2798261Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2798350Z                 # count up differences
2025-02-24T16:09:32.2798527Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2798603Z                     diff += 1
2025-02-24T16:09:32.2798677Z     
2025-02-24T16:09:32.2798768Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2798907Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2799086Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2799190Z E           AssertionError: Series are different
2025-02-24T16:09:32.2799264Z E           
2025-02-24T16:09:32.2799367Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2799753Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2800136Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2800525Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2800535Z 
2025-02-24T16:09:32.2800848Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2801091Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T16:09:32.2801102Z 
2025-02-24T16:09:32.2801241Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2801371Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2801473Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2801608Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2801841Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2801934Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2802005Z err_msg = None
2025-02-24T16:09:32.2802009Z 
2025-02-24T16:09:32.2802122Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2802202Z         if err_msg is None:
2025-02-24T16:09:32.2802301Z             if left.shape != right.shape:
2025-02-24T16:09:32.2802387Z                 raise_assert_detail(
2025-02-24T16:09:32.2802641Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2802714Z                 )
2025-02-24T16:09:32.2802780Z     
2025-02-24T16:09:32.2802853Z             diff = 0
2025-02-24T16:09:32.2802965Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2803056Z                 # count up differences
2025-02-24T16:09:32.2803230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2803310Z                     diff += 1
2025-02-24T16:09:32.2803381Z     
2025-02-24T16:09:32.2803470Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2803612Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2803781Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2803901Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2803979Z E           
2025-02-24T16:09:32.2804094Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2804361Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2804629Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2804639Z 
2025-02-24T16:09:32.2804947Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2804951Z 
2025-02-24T16:09:32.2805131Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2805136Z 
2025-02-24T16:09:32.2805362Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37ec0>
2025-02-24T16:09:32.2805575Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>, attr = 'nu'
2025-02-24T16:09:32.2805580Z 
2025-02-24T16:09:32.2805725Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2805844Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2805931Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2806000Z         try:
2025-02-24T16:09:32.2806144Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2806228Z         except KeyError:
2025-02-24T16:09:32.2806468Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2806540Z     
2025-02-24T16:09:32.2806627Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2806722Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2806814Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2806950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2807039Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2807129Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2807246Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2807368Z 
2025-02-24T16:09:32.2807497Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2807615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2807764Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2807839Z     ???
2025-02-24T16:09:32.2807953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2807959Z 
2025-02-24T16:09:32.2808024Z >   ???
2025-02-24T16:09:32.2808154Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2808326Z E   
2025-02-24T16:09:32.2808461Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2808572Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2808646Z E          ...
2025-02-24T16:09:32.2808735Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2808865Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2808992Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2809061Z E          ...
2025-02-24T16:09:32.2809151Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2809280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2809383Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2809387Z 
2025-02-24T16:09:32.2809481Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2809764Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T16:09:32.2809778Z 
2025-02-24T16:09:32.2809916Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2810050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2810149Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2810286Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2810412Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2810509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2810582Z err_msg = None
2025-02-24T16:09:32.2810590Z 
2025-02-24T16:09:32.2810701Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2810785Z         if err_msg is None:
2025-02-24T16:09:32.2810879Z             if left.shape != right.shape:
2025-02-24T16:09:32.2810973Z                 raise_assert_detail(
2025-02-24T16:09:32.2811123Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2811197Z                 )
2025-02-24T16:09:32.2811269Z     
2025-02-24T16:09:32.2811339Z             diff = 0
2025-02-24T16:09:32.2811455Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2811542Z                 # count up differences
2025-02-24T16:09:32.2811726Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2811802Z                     diff += 1
2025-02-24T16:09:32.2811874Z     
2025-02-24T16:09:32.2812017Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2812252Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2812552Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2812738Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2812867Z E           
2025-02-24T16:09:32.2813057Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2813368Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2813735Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2813740Z 
2025-02-24T16:09:32.2814054Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2814064Z 
2025-02-24T16:09:32.2814311Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2814316Z 
2025-02-24T16:09:32.2814548Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b378f0>
2025-02-24T16:09:32.2814720Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2814803Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2814808Z 
2025-02-24T16:09:32.2814954Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2815071Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2815159Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2815230Z         try:
2025-02-24T16:09:32.2815374Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2815452Z         except KeyError:
2025-02-24T16:09:32.2815592Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2815662Z     
2025-02-24T16:09:32.2815746Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2815847Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2815935Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2816075Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2816159Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2816253Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2816481Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2816492Z 
2025-02-24T16:09:32.2816618Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2816735Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2816882Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2816954Z     ???
2025-02-24T16:09:32.2817062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2817071Z 
2025-02-24T16:09:32.2817138Z >   ???
2025-02-24T16:09:32.2817269Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2817341Z E   
2025-02-24T16:09:32.2817472Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2817581Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2817655Z E          ...
2025-02-24T16:09:32.2817747Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2817878Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2817998Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2818066Z E          ...
2025-02-24T16:09:32.2818154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2818280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2818389Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2818393Z 
2025-02-24T16:09:32.2818483Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2818727Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T16:09:32.2818736Z 
2025-02-24T16:09:32.2818870Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2818996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2819097Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2819379Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2819500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2819596Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2819668Z err_msg = None
2025-02-24T16:09:32.2819673Z 
2025-02-24T16:09:32.2819790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2819871Z         if err_msg is None:
2025-02-24T16:09:32.2819963Z             if left.shape != right.shape:
2025-02-24T16:09:32.2820155Z                 raise_assert_detail(
2025-02-24T16:09:32.2820301Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2820373Z                 )
2025-02-24T16:09:32.2820438Z     
2025-02-24T16:09:32.2820512Z             diff = 0
2025-02-24T16:09:32.2820628Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2820717Z                 # count up differences
2025-02-24T16:09:32.2820891Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2820966Z                     diff += 1
2025-02-24T16:09:32.2821036Z     
2025-02-24T16:09:32.2821124Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2821264Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2821440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2821550Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2821627Z E           
2025-02-24T16:09:32.2821739Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2822003Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2822278Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2822283Z 
2025-02-24T16:09:32.2822593Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2822601Z 
2025-02-24T16:09:32.2822775Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2822780Z 
2025-02-24T16:09:32.2823011Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b368a0>
2025-02-24T16:09:32.2823220Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>, attr = 'f_lu'
2025-02-24T16:09:32.2823225Z 
2025-02-24T16:09:32.2823368Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2823484Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2823572Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2823648Z         try:
2025-02-24T16:09:32.2823788Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2823872Z         except KeyError:
2025-02-24T16:09:32.2824009Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2824079Z     
2025-02-24T16:09:32.2824164Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2824262Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2824356Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2824485Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2824572Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2824659Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2824770Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2824930Z 
2025-02-24T16:09:32.2825058Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2825175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2825326Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2825394Z     ???
2025-02-24T16:09:32.2825505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2825509Z 
2025-02-24T16:09:32.2825575Z >   ???
2025-02-24T16:09:32.2825705Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2825856Z E   
2025-02-24T16:09:32.2825986Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2826099Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2826168Z E          ...
2025-02-24T16:09:32.2826258Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2826514Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2826636Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2826712Z E          ...
2025-02-24T16:09:32.2826795Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2826924Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2827030Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2827036Z 
2025-02-24T16:09:32.2827128Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2827402Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T16:09:32.2827420Z 
2025-02-24T16:09:32.2827547Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2827676Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2827770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2827909Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2828030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2828129Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2828205Z err_msg = None
2025-02-24T16:09:32.2828209Z 
2025-02-24T16:09:32.2828319Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2828404Z         if err_msg is None:
2025-02-24T16:09:32.2828497Z             if left.shape != right.shape:
2025-02-24T16:09:32.2828589Z                 raise_assert_detail(
2025-02-24T16:09:32.2828735Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2828803Z                 )
2025-02-24T16:09:32.2828873Z     
2025-02-24T16:09:32.2828944Z             diff = 0
2025-02-24T16:09:32.2829057Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2829146Z                 # count up differences
2025-02-24T16:09:32.2829322Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2829401Z                     diff += 1
2025-02-24T16:09:32.2829469Z     
2025-02-24T16:09:32.2829561Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2829697Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2829872Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2829984Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2830062Z E           
2025-02-24T16:09:32.2830183Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2830668Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2831312Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2831322Z 
2025-02-24T16:09:32.2831691Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2831808Z 
2025-02-24T16:09:32.2831981Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2831985Z 
2025-02-24T16:09:32.2832214Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b375c0>
2025-02-24T16:09:32.2832393Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2832469Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2832479Z 
2025-02-24T16:09:32.2832620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2832735Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2832821Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2832890Z         try:
2025-02-24T16:09:32.2833033Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2833122Z         except KeyError:
2025-02-24T16:09:32.2833260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2833332Z     
2025-02-24T16:09:32.2833423Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2833520Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2833609Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2833745Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2833833Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2833922Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2834039Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2834108Z             else:
2025-02-24T16:09:32.2834212Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2834319Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2834329Z 
2025-02-24T16:09:32.2834454Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2834574Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2834718Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2834794Z     ???
2025-02-24T16:09:32.2834903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2834907Z 
2025-02-24T16:09:32.2834978Z >   ???
2025-02-24T16:09:32.2835112Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2835179Z E   
2025-02-24T16:09:32.2835312Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2835423Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2835496Z E          ...
2025-02-24T16:09:32.2835584Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2835721Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2835839Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2835908Z E          ...
2025-02-24T16:09:32.2835997Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2836123Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2836242Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2836246Z 
2025-02-24T16:09:32.2836472Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2836750Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T16:09:32.2836754Z 
2025-02-24T16:09:32.2836889Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2837155Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2837255Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2837387Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2837518Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2837614Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2837809Z err_msg = None
2025-02-24T16:09:32.2837813Z 
2025-02-24T16:09:32.2837928Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2838006Z         if err_msg is None:
2025-02-24T16:09:32.2838102Z             if left.shape != right.shape:
2025-02-24T16:09:32.2838190Z                 raise_assert_detail(
2025-02-24T16:09:32.2838335Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2838412Z                 )
2025-02-24T16:09:32.2838479Z     
2025-02-24T16:09:32.2838552Z             diff = 0
2025-02-24T16:09:32.2838661Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2838753Z                 # count up differences
2025-02-24T16:09:32.2838928Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2839003Z                     diff += 1
2025-02-24T16:09:32.2839073Z     
2025-02-24T16:09:32.2839163Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2839307Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2839479Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2839594Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2839668Z E           
2025-02-24T16:09:32.2839779Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2840052Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2840317Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2840332Z 
2025-02-24T16:09:32.2840639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2840644Z 
2025-02-24T16:09:32.2840818Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2840826Z 
2025-02-24T16:09:32.2841052Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37830>
2025-02-24T16:09:32.2841227Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2841311Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2841315Z 
2025-02-24T16:09:32.2841452Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2841571Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2841654Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2841728Z         try:
2025-02-24T16:09:32.2841872Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2841956Z         except KeyError:
2025-02-24T16:09:32.2842098Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2842165Z     
2025-02-24T16:09:32.2842256Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2842349Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2842440Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2842663Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2842745Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2842836Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2842943Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2843017Z             else:
2025-02-24T16:09:32.2843111Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2843220Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2843224Z 
2025-02-24T16:09:32.2843433Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2843548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2843701Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2843769Z     ???
2025-02-24T16:09:32.2843884Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2843894Z 
2025-02-24T16:09:32.2843964Z >   ???
2025-02-24T16:09:32.2844090Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2844161Z E   
2025-02-24T16:09:32.2844286Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2844400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2844472Z E          ...
2025-02-24T16:09:32.2844563Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2844697Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2844809Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2844886Z E          ...
2025-02-24T16:09:32.2844971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2845102Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2845208Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2845217Z 
2025-02-24T16:09:32.2845307Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2845572Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T16:09:32.2845578Z 
2025-02-24T16:09:32.2845710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2845844Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2845941Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2846084Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2846218Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2846409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2846489Z err_msg = None
2025-02-24T16:09:32.2846494Z 
2025-02-24T16:09:32.2846604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2846688Z         if err_msg is None:
2025-02-24T16:09:32.2846791Z             if left.shape != right.shape:
2025-02-24T16:09:32.2846874Z                 raise_assert_detail(
2025-02-24T16:09:32.2847024Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2847093Z                 )
2025-02-24T16:09:32.2847164Z     
2025-02-24T16:09:32.2847234Z             diff = 0
2025-02-24T16:09:32.2847350Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2847439Z                 # count up differences
2025-02-24T16:09:32.2847607Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2847693Z                     diff += 1
2025-02-24T16:09:32.2847787Z     
2025-02-24T16:09:32.2847882Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2848020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2848194Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2848555Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2848678Z E           
2025-02-24T16:09:32.2848874Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2849345Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2849803Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2849808Z 
2025-02-24T16:09:32.2850125Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2850135Z 
2025-02-24T16:09:32.2850307Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2850316Z 
2025-02-24T16:09:32.2850543Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b37350>
2025-02-24T16:09:32.2850722Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe297b60>
2025-02-24T16:09:32.2850799Z attr = 'j_blues'
2025-02-24T16:09:32.2850803Z 
2025-02-24T16:09:32.2850947Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2851068Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2851156Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2851231Z         try:
2025-02-24T16:09:32.2851370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2851455Z         except KeyError:
2025-02-24T16:09:32.2851592Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2851669Z     
2025-02-24T16:09:32.2851755Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2851853Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2851947Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2852078Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2852167Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2852255Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2852370Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2852445Z             else:
2025-02-24T16:09:32.2852545Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2852655Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2852660Z 
2025-02-24T16:09:32.2852782Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2852898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2853048Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2853121Z     ???
2025-02-24T16:09:32.2853234Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2853238Z 
2025-02-24T16:09:32.2853303Z >   ???
2025-02-24T16:09:32.2853439Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2853505Z E   
2025-02-24T16:09:32.2853640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2853751Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2853830Z E          ...
2025-02-24T16:09:32.2853923Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2854053Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2854168Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2854240Z E          ...
2025-02-24T16:09:32.2854331Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2854547Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2854656Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2854660Z 
2025-02-24T16:09:32.2854752Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2854962Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T16:09:32.2854966Z 
2025-02-24T16:09:32.2855100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2855229Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2855411Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2855547Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2855669Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2855766Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2855843Z err_msg = None
2025-02-24T16:09:32.2855848Z 
2025-02-24T16:09:32.2855963Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2856050Z         if err_msg is None:
2025-02-24T16:09:32.2856141Z             if left.shape != right.shape:
2025-02-24T16:09:32.2856230Z                 raise_assert_detail(
2025-02-24T16:09:32.2856515Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2856591Z                 )
2025-02-24T16:09:32.2856659Z     
2025-02-24T16:09:32.2856739Z             diff = 0
2025-02-24T16:09:32.2856856Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2856943Z                 # count up differences
2025-02-24T16:09:32.2857118Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2857193Z                     diff += 1
2025-02-24T16:09:32.2857264Z     
2025-02-24T16:09:32.2857352Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2857498Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2857672Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2857784Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2857858Z E           
2025-02-24T16:09:32.2857970Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2858240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2858511Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2858520Z 
2025-02-24T16:09:32.2858826Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2858831Z 
2025-02-24T16:09:32.2859004Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2859009Z 
2025-02-24T16:09:32.2859242Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b36450>
2025-02-24T16:09:32.2859423Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2859502Z attr = 'lines'
2025-02-24T16:09:32.2859506Z 
2025-02-24T16:09:32.2859647Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2859769Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2859856Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2859926Z         try:
2025-02-24T16:09:32.2860196Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2860276Z         except KeyError:
2025-02-24T16:09:32.2860417Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2860485Z     
2025-02-24T16:09:32.2860577Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2860673Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2860761Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2860897Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2861104Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2861198Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2861310Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2861387Z             else:
2025-02-24T16:09:32.2861485Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2861593Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2861602Z 
2025-02-24T16:09:32.2861733Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2861849Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2862005Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2862077Z     ???
2025-02-24T16:09:32.2862186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2862190Z 
2025-02-24T16:09:32.2862262Z >   ???
2025-02-24T16:09:32.2862389Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2862468Z E   
2025-02-24T16:09:32.2862598Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2862714Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2862788Z E          ...
2025-02-24T16:09:32.2862876Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2863014Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2863130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2863204Z E          ...
2025-02-24T16:09:32.2863290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2863417Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2863523Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2863528Z 
2025-02-24T16:09:32.2863618Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2863885Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T16:09:32.2863893Z 
2025-02-24T16:09:32.2864118Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b35790>
2025-02-24T16:09:32.2864296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2864393Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2864398Z 
2025-02-24T16:09:32.2864535Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2864657Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2864740Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2864814Z         try:
2025-02-24T16:09:32.2864959Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2865038Z         except KeyError:
2025-02-24T16:09:32.2865179Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2865247Z     
2025-02-24T16:09:32.2865340Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2865438Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2865535Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2865672Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2865756Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2865848Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2865954Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2865959Z 
2025-02-24T16:09:32.2866176Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2866404Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2866416Z 
2025-02-24T16:09:32.2866558Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2866646Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2866756Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2866839Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2867095Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2867181Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2867290Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2867369Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2867447Z err_msg = None
2025-02-24T16:09:32.2867452Z 
2025-02-24T16:09:32.2867565Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2867651Z         if err_msg is None:
2025-02-24T16:09:32.2867742Z             if left.shape != right.shape:
2025-02-24T16:09:32.2867831Z                 raise_assert_detail(
2025-02-24T16:09:32.2867980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2868048Z                 )
2025-02-24T16:09:32.2868118Z     
2025-02-24T16:09:32.2868189Z             diff = 0
2025-02-24T16:09:32.2868304Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2868394Z                 # count up differences
2025-02-24T16:09:32.2868566Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2868645Z                     diff += 1
2025-02-24T16:09:32.2868711Z     
2025-02-24T16:09:32.2868801Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2868938Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2869120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2869228Z E           AssertionError: Series are different
2025-02-24T16:09:32.2869299Z E           
2025-02-24T16:09:32.2869406Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2869782Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2870126Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2870473Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2870478Z 
2025-02-24T16:09:32.2870798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2871052Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T16:09:32.2871057Z 
2025-02-24T16:09:32.2871288Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b35610>
2025-02-24T16:09:32.2871580Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2871675Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2871679Z 
2025-02-24T16:09:32.2871821Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2871937Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2872023Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2872092Z         try:
2025-02-24T16:09:32.2872236Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2872316Z         except KeyError:
2025-02-24T16:09:32.2872537Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2872608Z     
2025-02-24T16:09:32.2872694Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2872788Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2872922Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2873168Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2873324Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2873480Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2873676Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2873684Z 
2025-02-24T16:09:32.2881357Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2881609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2881618Z 
2025-02-24T16:09:32.2881862Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2882029Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2882194Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2882277Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2882434Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2882521Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2882646Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2882731Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2882818Z err_msg = None
2025-02-24T16:09:32.2882823Z 
2025-02-24T16:09:32.2882952Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2883036Z         if err_msg is None:
2025-02-24T16:09:32.2883142Z             if left.shape != right.shape:
2025-02-24T16:09:32.2883229Z                 raise_assert_detail(
2025-02-24T16:09:32.2883400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2883476Z                 )
2025-02-24T16:09:32.2883549Z     
2025-02-24T16:09:32.2883626Z             diff = 0
2025-02-24T16:09:32.2883748Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2883846Z                 # count up differences
2025-02-24T16:09:32.2884025Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2884114Z                     diff += 1
2025-02-24T16:09:32.2884182Z     
2025-02-24T16:09:32.2884277Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2884424Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2884601Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2884715Z E           AssertionError: Series are different
2025-02-24T16:09:32.2884786Z E           
2025-02-24T16:09:32.2884898Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2885289Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2885849Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2886237Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2886475Z 
2025-02-24T16:09:32.2886815Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2887034Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T16:09:32.2887045Z 
2025-02-24T16:09:32.2887179Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2887317Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2887420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2887560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2887685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2887783Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2887865Z err_msg = None
2025-02-24T16:09:32.2887869Z 
2025-02-24T16:09:32.2887982Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2888079Z         if err_msg is None:
2025-02-24T16:09:32.2888176Z             if left.shape != right.shape:
2025-02-24T16:09:32.2888267Z                 raise_assert_detail(
2025-02-24T16:09:32.2888422Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2888493Z                 )
2025-02-24T16:09:32.2888565Z     
2025-02-24T16:09:32.2888637Z             diff = 0
2025-02-24T16:09:32.2888756Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2888842Z                 # count up differences
2025-02-24T16:09:32.2889024Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2889105Z                     diff += 1
2025-02-24T16:09:32.2889175Z     
2025-02-24T16:09:32.2889268Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2889404Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2889579Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2889699Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2889775Z E           
2025-02-24T16:09:32.2889896Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2890161Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2890434Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2890440Z 
2025-02-24T16:09:32.2890902Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2890907Z 
2025-02-24T16:09:32.2891186Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2891196Z 
2025-02-24T16:09:32.2891593Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b346b0>
2025-02-24T16:09:32.2891945Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>, attr = 'nu'
2025-02-24T16:09:32.2891961Z 
2025-02-24T16:09:32.2892198Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2892552Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2892692Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2892816Z         try:
2025-02-24T16:09:32.2893058Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2893202Z         except KeyError:
2025-02-24T16:09:32.2893452Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2893576Z     
2025-02-24T16:09:32.2893731Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2893891Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2894046Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2894275Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2894426Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2894585Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2894773Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2894789Z 
2025-02-24T16:09:32.2895018Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2895180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2895343Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2895414Z     ???
2025-02-24T16:09:32.2895531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2895540Z 
2025-02-24T16:09:32.2895614Z >   ???
2025-02-24T16:09:32.2895745Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2895818Z E   
2025-02-24T16:09:32.2895950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2896066Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2896143Z E          ...
2025-02-24T16:09:32.2896232Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2896490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2896611Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2896688Z E          ...
2025-02-24T16:09:32.2896775Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2896907Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2897019Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2897023Z 
2025-02-24T16:09:32.2897120Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2897357Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T16:09:32.2897362Z 
2025-02-24T16:09:32.2897494Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2897630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2897737Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2897871Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2898005Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2898099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2898179Z err_msg = None
2025-02-24T16:09:32.2898183Z 
2025-02-24T16:09:32.2898305Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2898515Z         if err_msg is None:
2025-02-24T16:09:32.2898618Z             if left.shape != right.shape:
2025-02-24T16:09:32.2898706Z                 raise_assert_detail(
2025-02-24T16:09:32.2898861Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2898934Z                 )
2025-02-24T16:09:32.2899007Z     
2025-02-24T16:09:32.2899084Z             diff = 0
2025-02-24T16:09:32.2899198Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2899293Z                 # count up differences
2025-02-24T16:09:32.2899468Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2899657Z                     diff += 1
2025-02-24T16:09:32.2899726Z     
2025-02-24T16:09:32.2899821Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2899970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2900144Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2900269Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2900340Z E           
2025-02-24T16:09:32.2900458Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2900728Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2900995Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2901001Z 
2025-02-24T16:09:32.2901322Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2901330Z 
2025-02-24T16:09:32.2901506Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2901511Z 
2025-02-24T16:09:32.2901738Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b340e0>
2025-02-24T16:09:32.2901918Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2901997Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2902001Z 
2025-02-24T16:09:32.2902147Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2902276Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2902364Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2902440Z         try:
2025-02-24T16:09:32.2902583Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2902668Z         except KeyError:
2025-02-24T16:09:32.2902809Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2902885Z     
2025-02-24T16:09:32.2902978Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2903088Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2903188Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2903325Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2903415Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2903505Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2903623Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2903631Z 
2025-02-24T16:09:32.2903761Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2903877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2904031Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2904101Z     ???
2025-02-24T16:09:32.2904217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2904327Z 
2025-02-24T16:09:32.2904404Z >   ???
2025-02-24T16:09:32.2904536Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2904613Z E   
2025-02-24T16:09:32.2904743Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2904860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2904931Z E          ...
2025-02-24T16:09:32.2905026Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2905164Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2905355Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2905431Z E          ...
2025-02-24T16:09:32.2905516Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2905646Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2905753Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2905761Z 
2025-02-24T16:09:32.2905855Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2906070Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T16:09:32.2906075Z 
2025-02-24T16:09:32.2906205Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2906465Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2906566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2906706Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2906839Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2906932Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2907011Z err_msg = None
2025-02-24T16:09:32.2907015Z 
2025-02-24T16:09:32.2907127Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2907220Z         if err_msg is None:
2025-02-24T16:09:32.2907318Z             if left.shape != right.shape:
2025-02-24T16:09:32.2907402Z                 raise_assert_detail(
2025-02-24T16:09:32.2907558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2907628Z                 )
2025-02-24T16:09:32.2907703Z     
2025-02-24T16:09:32.2907776Z             diff = 0
2025-02-24T16:09:32.2907897Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2907993Z                 # count up differences
2025-02-24T16:09:32.2908169Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2908253Z                     diff += 1
2025-02-24T16:09:32.2908323Z     
2025-02-24T16:09:32.2908418Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2908561Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2908739Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2908863Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2908934Z E           
2025-02-24T16:09:32.2909053Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2909318Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2909592Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2909596Z 
2025-02-24T16:09:32.2910309Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2910321Z 
2025-02-24T16:09:32.2910615Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2910622Z 
2025-02-24T16:09:32.2911020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6de80>
2025-02-24T16:09:32.2911383Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>, attr = 'f_lu'
2025-02-24T16:09:32.2911391Z 
2025-02-24T16:09:32.2911626Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2911983Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2912125Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2912252Z         try:
2025-02-24T16:09:32.2912504Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2912639Z         except KeyError:
2025-02-24T16:09:32.2912885Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2913017Z     
2025-02-24T16:09:32.2913115Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2913212Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2913305Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2913447Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2913532Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2913627Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2913740Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2913748Z 
2025-02-24T16:09:32.2913882Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2913995Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2914148Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2914225Z     ???
2025-02-24T16:09:32.2914335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2914343Z 
2025-02-24T16:09:32.2914418Z >   ???
2025-02-24T16:09:32.2914545Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2914619Z E   
2025-02-24T16:09:32.2914752Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2914867Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2914942Z E          ...
2025-02-24T16:09:32.2915029Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2915168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2915285Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2915360Z E          ...
2025-02-24T16:09:32.2915449Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2915575Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2915685Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2915690Z 
2025-02-24T16:09:32.2915783Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2916009Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T16:09:32.2916014Z 
2025-02-24T16:09:32.2916150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2916390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2916500Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2916633Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2916767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2916867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2916941Z err_msg = None
2025-02-24T16:09:32.2916946Z 
2025-02-24T16:09:32.2917065Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2917291Z         if err_msg is None:
2025-02-24T16:09:32.2917395Z             if left.shape != right.shape:
2025-02-24T16:09:32.2917481Z                 raise_assert_detail(
2025-02-24T16:09:32.2917630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2917704Z                 )
2025-02-24T16:09:32.2917774Z     
2025-02-24T16:09:32.2917849Z             diff = 0
2025-02-24T16:09:32.2917960Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2918050Z                 # count up differences
2025-02-24T16:09:32.2918330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2918414Z                     diff += 1
2025-02-24T16:09:32.2918489Z     
2025-02-24T16:09:32.2918578Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2918718Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2918899Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2919014Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2919090Z E           
2025-02-24T16:09:32.2919201Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2919467Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2919737Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2919742Z 
2025-02-24T16:09:32.2920052Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2920057Z 
2025-02-24T16:09:32.2920229Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2920235Z 
2025-02-24T16:09:32.2920466Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6f800>
2025-02-24T16:09:32.2920633Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2920713Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.2920718Z 
2025-02-24T16:09:32.2920856Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2920980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2921064Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2921139Z         try:
2025-02-24T16:09:32.2921283Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2921363Z         except KeyError:
2025-02-24T16:09:32.2921507Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2921573Z     
2025-02-24T16:09:32.2921667Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2921764Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2921854Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2921990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2922076Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2922176Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2922293Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2922376Z             else:
2025-02-24T16:09:32.2922477Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2922589Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2922594Z 
2025-02-24T16:09:32.2922724Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2922843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2923087Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2923162Z     ???
2025-02-24T16:09:32.2923273Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2923277Z 
2025-02-24T16:09:32.2923347Z >   ???
2025-02-24T16:09:32.2923476Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2923547Z E   
2025-02-24T16:09:32.2923677Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2923791Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2923939Z E          ...
2025-02-24T16:09:32.2924029Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2924163Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2924274Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2924347Z E          ...
2025-02-24T16:09:32.2924432Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2924562Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2924672Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2924676Z 
2025-02-24T16:09:32.2924767Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2924991Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T16:09:32.2924995Z 
2025-02-24T16:09:32.2925124Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2925258Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2925365Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2925500Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2925635Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2925733Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2925814Z err_msg = None
2025-02-24T16:09:32.2925818Z 
2025-02-24T16:09:32.2925938Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2926021Z         if err_msg is None:
2025-02-24T16:09:32.2926124Z             if left.shape != right.shape:
2025-02-24T16:09:32.2926210Z                 raise_assert_detail(
2025-02-24T16:09:32.2926461Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2926537Z                 )
2025-02-24T16:09:32.2926612Z     
2025-02-24T16:09:32.2926689Z             diff = 0
2025-02-24T16:09:32.2926802Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2926896Z                 # count up differences
2025-02-24T16:09:32.2927068Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2927154Z                     diff += 1
2025-02-24T16:09:32.2927224Z     
2025-02-24T16:09:32.2927318Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2927461Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2927632Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2927776Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2927907Z E           
2025-02-24T16:09:32.2928115Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2928597Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2929087Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2929255Z 
2025-02-24T16:09:32.2929798Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2929805Z 
2025-02-24T16:09:32.2930103Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2930110Z 
2025-02-24T16:09:32.2930499Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6f8c0>
2025-02-24T16:09:32.2930941Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2931075Z attr = 'beta_sobolev'
2025-02-24T16:09:32.2931082Z 
2025-02-24T16:09:32.2931325Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2931527Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2931671Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2931802Z         try:
2025-02-24T16:09:32.2932044Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2932185Z         except KeyError:
2025-02-24T16:09:32.2932422Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2932545Z     
2025-02-24T16:09:32.2932701Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2932864Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2933017Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2933155Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2933253Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2933344Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2933460Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2933535Z             else:
2025-02-24T16:09:32.2933633Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2933746Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2933754Z 
2025-02-24T16:09:32.2933882Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2934002Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2934153Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2934223Z     ???
2025-02-24T16:09:32.2934339Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2934344Z 
2025-02-24T16:09:32.2934411Z >   ???
2025-02-24T16:09:32.2934543Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2934615Z E   
2025-02-24T16:09:32.2934751Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2934867Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2934938Z E          ...
2025-02-24T16:09:32.2935030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2935161Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2935281Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2935352Z E          ...
2025-02-24T16:09:32.2935443Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2935574Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2935679Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2935683Z 
2025-02-24T16:09:32.2935776Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2935986Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T16:09:32.2935993Z 
2025-02-24T16:09:32.2936125Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2936257Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2936501Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2936770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2936899Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2936998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2937076Z err_msg = None
2025-02-24T16:09:32.2937080Z 
2025-02-24T16:09:32.2937193Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2937277Z         if err_msg is None:
2025-02-24T16:09:32.2937372Z             if left.shape != right.shape:
2025-02-24T16:09:32.2937584Z                 raise_assert_detail(
2025-02-24T16:09:32.2937730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2937806Z                 )
2025-02-24T16:09:32.2937877Z     
2025-02-24T16:09:32.2937949Z             diff = 0
2025-02-24T16:09:32.2938063Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2938151Z                 # count up differences
2025-02-24T16:09:32.2938332Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2938408Z                     diff += 1
2025-02-24T16:09:32.2938481Z     
2025-02-24T16:09:32.2938573Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2938710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2938887Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2939001Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2939080Z E           
2025-02-24T16:09:32.2939196Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2939456Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2939726Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2939732Z 
2025-02-24T16:09:32.2940046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2940054Z 
2025-02-24T16:09:32.2940226Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2940230Z 
2025-02-24T16:09:32.2940460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6e390>
2025-02-24T16:09:32.2940628Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cd0584d0>
2025-02-24T16:09:32.2940708Z attr = 'j_blues'
2025-02-24T16:09:32.2940716Z 
2025-02-24T16:09:32.2940859Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2940974Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2941064Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2941135Z         try:
2025-02-24T16:09:32.2941281Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2941364Z         except KeyError:
2025-02-24T16:09:32.2941509Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2941582Z     
2025-02-24T16:09:32.2941671Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2941775Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2941865Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2942001Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2942088Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2942183Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2942387Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2942458Z             else:
2025-02-24T16:09:32.2942560Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2942666Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2942670Z 
2025-02-24T16:09:32.2942800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2942913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2943058Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2943204Z     ???
2025-02-24T16:09:32.2943316Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2943321Z 
2025-02-24T16:09:32.2943392Z >   ???
2025-02-24T16:09:32.2943518Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2943591Z E   
2025-02-24T16:09:32.2943725Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2943839Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2943918Z E          ...
2025-02-24T16:09:32.2944005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2944142Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2944254Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2944328Z E          ...
2025-02-24T16:09:32.2944418Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2944544Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2944657Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2944662Z 
2025-02-24T16:09:32.2944751Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2944966Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T16:09:32.2944970Z 
2025-02-24T16:09:32.2945105Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2945234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2945337Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2945471Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2945600Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2945699Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2945773Z err_msg = None
2025-02-24T16:09:32.2945780Z 
2025-02-24T16:09:32.2945896Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2945976Z         if err_msg is None:
2025-02-24T16:09:32.2946075Z             if left.shape != right.shape:
2025-02-24T16:09:32.2946204Z                 raise_assert_detail(
2025-02-24T16:09:32.2946822Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2946959Z                 )
2025-02-24T16:09:32.2947077Z     
2025-02-24T16:09:32.2947207Z             diff = 0
2025-02-24T16:09:32.2947397Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2947553Z                 # count up differences
2025-02-24T16:09:32.2947891Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2948029Z                     diff += 1
2025-02-24T16:09:32.2948150Z     
2025-02-24T16:09:32.2948299Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2948537Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2948839Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2949036Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2949165Z E           
2025-02-24T16:09:32.2949355Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2949732Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2950145Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2950254Z 
2025-02-24T16:09:32.2950579Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2950584Z 
2025-02-24T16:09:32.2950764Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2950769Z 
2025-02-24T16:09:32.2951003Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6e780>
2025-02-24T16:09:32.2951180Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2951259Z attr = 'lines'
2025-02-24T16:09:32.2951263Z 
2025-02-24T16:09:32.2951405Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2951528Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2951617Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2951693Z         try:
2025-02-24T16:09:32.2951839Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2951930Z         except KeyError:
2025-02-24T16:09:32.2952077Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2952147Z     
2025-02-24T16:09:32.2952240Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2952336Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2952432Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2952569Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2952659Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2952755Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2952866Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2952942Z             else:
2025-02-24T16:09:32.2953039Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.2953150Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.2953155Z 
2025-02-24T16:09:32.2953289Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.2953410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2953566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2953644Z     ???
2025-02-24T16:09:32.2953760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2953764Z 
2025-02-24T16:09:32.2953832Z >   ???
2025-02-24T16:09:32.2953970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2954043Z E   
2025-02-24T16:09:32.2954173Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2954291Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2954361Z E          ...
2025-02-24T16:09:32.2954453Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2954584Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2954703Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2954776Z E          ...
2025-02-24T16:09:32.2954860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2954989Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2955092Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2955096Z 
2025-02-24T16:09:32.2955193Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2955756Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T16:09:32.2955846Z 
2025-02-24T16:09:32.2956077Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6ec30>
2025-02-24T16:09:32.2956251Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2956482Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.2956488Z 
2025-02-24T16:09:32.2956633Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2956753Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2956951Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2957024Z         try:
2025-02-24T16:09:32.2957167Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2957252Z         except KeyError:
2025-02-24T16:09:32.2957390Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2957464Z     
2025-02-24T16:09:32.2957555Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2957654Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2957747Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2957879Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2957968Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2958056Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2958171Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2958176Z 
2025-02-24T16:09:32.2958305Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2958419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2958424Z 
2025-02-24T16:09:32.2958566Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2958655Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2958768Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2958857Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2958996Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.2959082Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.2959187Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2959270Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.2959350Z err_msg = None
2025-02-24T16:09:32.2959354Z 
2025-02-24T16:09:32.2959468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2959557Z         if err_msg is None:
2025-02-24T16:09:32.2959651Z             if left.shape != right.shape:
2025-02-24T16:09:32.2959742Z                 raise_assert_detail(
2025-02-24T16:09:32.2959894Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2959969Z                 )
2025-02-24T16:09:32.2960044Z     
2025-02-24T16:09:32.2960117Z             diff = 0
2025-02-24T16:09:32.2960239Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2960328Z                 # count up differences
2025-02-24T16:09:32.2960501Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2960583Z                     diff += 1
2025-02-24T16:09:32.2960651Z     
2025-02-24T16:09:32.2960743Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2960881Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2961060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2961169Z E           AssertionError: Series are different
2025-02-24T16:09:32.2961244Z E           
2025-02-24T16:09:32.2961351Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.2961727Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2962187Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2962637Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2962646Z 
2025-02-24T16:09:32.2962959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2963223Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T16:09:32.2963228Z 
2025-02-24T16:09:32.2963457Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6e630>
2025-02-24T16:09:32.2963625Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2963722Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.2963735Z 
2025-02-24T16:09:32.2963985Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2964196Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2964345Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2964466Z         try:
2025-02-24T16:09:32.2964708Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2964849Z         except KeyError:
2025-02-24T16:09:32.2965090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2965206Z     
2025-02-24T16:09:32.2965360Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2965524Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2965674Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2965908Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2966054Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2966212Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2966532Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2966547Z 
2025-02-24T16:09:32.2966761Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2966961Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2966969Z 
2025-02-24T16:09:32.2967200Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2967353Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2967535Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2967674Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2967918Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.2968058Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.2968248Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.2968383Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.2968516Z err_msg = None
2025-02-24T16:09:32.2968523Z 
2025-02-24T16:09:32.2968712Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2968850Z         if err_msg is None:
2025-02-24T16:09:32.2969021Z             if left.shape != right.shape:
2025-02-24T16:09:32.2969184Z                 raise_assert_detail(
2025-02-24T16:09:32.2969479Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2969552Z                 )
2025-02-24T16:09:32.2969624Z     
2025-02-24T16:09:32.2969696Z             diff = 0
2025-02-24T16:09:32.2969812Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2969900Z                 # count up differences
2025-02-24T16:09:32.2970075Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2970157Z                     diff += 1
2025-02-24T16:09:32.2970225Z     
2025-02-24T16:09:32.2970426Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2970565Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2970742Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2970847Z E           AssertionError: Series are different
2025-02-24T16:09:32.2970921Z E           
2025-02-24T16:09:32.2971028Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.2971399Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.2971779Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2972166Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.2972175Z 
2025-02-24T16:09:32.2972487Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2972697Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T16:09:32.2972704Z 
2025-02-24T16:09:32.2972839Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2972967Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2973068Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2973204Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2973330Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2973428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2973502Z err_msg = None
2025-02-24T16:09:32.2973506Z 
2025-02-24T16:09:32.2973623Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2973727Z         if err_msg is None:
2025-02-24T16:09:32.2973843Z             if left.shape != right.shape:
2025-02-24T16:09:32.2973935Z                 raise_assert_detail(
2025-02-24T16:09:32.2974081Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2974156Z                 )
2025-02-24T16:09:32.2974223Z     
2025-02-24T16:09:32.2974300Z             diff = 0
2025-02-24T16:09:32.2974411Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2974590Z                 # count up differences
2025-02-24T16:09:32.2974763Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2974840Z                     diff += 1
2025-02-24T16:09:32.2974912Z     
2025-02-24T16:09:32.2974998Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2975138Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2975311Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2975428Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2975584Z E           
2025-02-24T16:09:32.2975695Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2975962Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2976228Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2976238Z 
2025-02-24T16:09:32.2976678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2976687Z 
2025-02-24T16:09:32.2976867Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2976872Z 
2025-02-24T16:09:32.2977105Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6eae0>
2025-02-24T16:09:32.2977309Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>, attr = 'nu'
2025-02-24T16:09:32.2977317Z 
2025-02-24T16:09:32.2977462Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2977580Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2977668Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2977737Z         try:
2025-02-24T16:09:32.2977884Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2977968Z         except KeyError:
2025-02-24T16:09:32.2978108Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2978180Z     
2025-02-24T16:09:32.2978268Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2978369Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2978460Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2978601Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2978693Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2978784Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2978903Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2978908Z 
2025-02-24T16:09:32.2979036Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2979156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2979309Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2979380Z     ???
2025-02-24T16:09:32.2979493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2979498Z 
2025-02-24T16:09:32.2979566Z >   ???
2025-02-24T16:09:32.2979703Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2979772Z E   
2025-02-24T16:09:32.2979907Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2980022Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2980094Z E          ...
2025-02-24T16:09:32.2980187Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2980435Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2980551Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2980620Z E          ...
2025-02-24T16:09:32.2980710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2980840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2980945Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2980950Z 
2025-02-24T16:09:32.2981042Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2981273Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T16:09:32.2981380Z 
2025-02-24T16:09:32.2981517Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2981648Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2981746Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2981885Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2982008Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2982109Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2982187Z err_msg = None
2025-02-24T16:09:32.2982191Z 
2025-02-24T16:09:32.2982357Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2982506Z         if err_msg is None:
2025-02-24T16:09:32.2982668Z             if left.shape != right.shape:
2025-02-24T16:09:32.2982821Z                 raise_assert_detail(
2025-02-24T16:09:32.2983066Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2983193Z                 )
2025-02-24T16:09:32.2983314Z     
2025-02-24T16:09:32.2983436Z             diff = 0
2025-02-24T16:09:32.2983636Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2983796Z                 # count up differences
2025-02-24T16:09:32.2984095Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2984228Z                     diff += 1
2025-02-24T16:09:32.2984350Z     
2025-02-24T16:09:32.2984500Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2984730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2985029Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2985218Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2985351Z E           
2025-02-24T16:09:32.2985549Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2985835Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2986106Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2986112Z 
2025-02-24T16:09:32.2986534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2986543Z 
2025-02-24T16:09:32.2986714Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2986719Z 
2025-02-24T16:09:32.2986951Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6fb60>
2025-02-24T16:09:32.2987124Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.2987208Z attr = 'wavelength_cm'
2025-02-24T16:09:32.2987360Z 
2025-02-24T16:09:32.2987507Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2987624Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2987708Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2987779Z         try:
2025-02-24T16:09:32.2987921Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2987999Z         except KeyError:
2025-02-24T16:09:32.2988140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2988212Z     
2025-02-24T16:09:32.2988405Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2988503Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2988590Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2988726Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2988812Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2988905Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2989021Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2989026Z 
2025-02-24T16:09:32.2989154Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2989268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2989416Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2989488Z     ???
2025-02-24T16:09:32.2989600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2989604Z 
2025-02-24T16:09:32.2989675Z >   ???
2025-02-24T16:09:32.2989807Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2989875Z E   
2025-02-24T16:09:32.2990009Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2990120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2990195Z E          ...
2025-02-24T16:09:32.2990285Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2990418Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2990537Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2990606Z E          ...
2025-02-24T16:09:32.2990696Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2990822Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2990932Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2990936Z 
2025-02-24T16:09:32.2991029Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2991239Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T16:09:32.2991243Z 
2025-02-24T16:09:32.2991375Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2991504Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2991604Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2991744Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.2991867Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.2991964Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.2992038Z err_msg = None
2025-02-24T16:09:32.2992042Z 
2025-02-24T16:09:32.2992157Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.2992240Z         if err_msg is None:
2025-02-24T16:09:32.2992336Z             if left.shape != right.shape:
2025-02-24T16:09:32.2992429Z                 raise_assert_detail(
2025-02-24T16:09:32.2992575Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.2992649Z                 )
2025-02-24T16:09:32.2992717Z     
2025-02-24T16:09:32.2992793Z             diff = 0
2025-02-24T16:09:32.2992906Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.2993080Z                 # count up differences
2025-02-24T16:09:32.2993260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.2993337Z                     diff += 1
2025-02-24T16:09:32.2993409Z     
2025-02-24T16:09:32.2993499Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.2993640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.2993817Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.2993937Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.2994085Z E           
2025-02-24T16:09:32.2994197Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.2994462Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2994733Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.2994738Z 
2025-02-24T16:09:32.2995048Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.2995056Z 
2025-02-24T16:09:32.2995228Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.2995233Z 
2025-02-24T16:09:32.2995465Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600b6f0e0>
2025-02-24T16:09:32.2995672Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>, attr = 'f_lu'
2025-02-24T16:09:32.2995679Z 
2025-02-24T16:09:32.2995823Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.2995939Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.2996026Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.2996100Z         try:
2025-02-24T16:09:32.2996239Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.2996446Z         except KeyError:
2025-02-24T16:09:32.2996588Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.2996661Z     
2025-02-24T16:09:32.2996752Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.2996850Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.2996942Z             if attr == "selected_atoms":
2025-02-24T16:09:32.2997072Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.2997161Z             elif actual.ndim == 1:
2025-02-24T16:09:32.2997249Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.2997368Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.2997372Z 
2025-02-24T16:09:32.2997502Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.2997615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2997764Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.2997833Z     ???
2025-02-24T16:09:32.2997945Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.2997950Z 
2025-02-24T16:09:32.2998018Z >   ???
2025-02-24T16:09:32.2998153Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.2998224Z E   
2025-02-24T16:09:32.2998351Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.2998464Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2998534Z E          ...
2025-02-24T16:09:32.2998624Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2998877Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2998993Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.2999066Z E          ...
2025-02-24T16:09:32.2999150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.2999279Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.2999385Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.2999389Z 
2025-02-24T16:09:32.2999480Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.2999706Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T16:09:32.2999812Z 
2025-02-24T16:09:32.2999946Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3000081Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3000180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3000431Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3000657Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3000814Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3000946Z err_msg = None
2025-02-24T16:09:32.3000952Z 
2025-02-24T16:09:32.3001138Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3001279Z         if err_msg is None:
2025-02-24T16:09:32.3001438Z             if left.shape != right.shape:
2025-02-24T16:09:32.3001594Z                 raise_assert_detail(
2025-02-24T16:09:32.3001848Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3001969Z                 )
2025-02-24T16:09:32.3002093Z     
2025-02-24T16:09:32.3002218Z             diff = 0
2025-02-24T16:09:32.3002410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3002563Z                 # count up differences
2025-02-24T16:09:32.3002863Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3003002Z                     diff += 1
2025-02-24T16:09:32.3003118Z     
2025-02-24T16:09:32.3003273Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3003510Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3003708Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3003831Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3003905Z E           
2025-02-24T16:09:32.3004021Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3004281Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3004556Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3004560Z 
2025-02-24T16:09:32.3004879Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3004887Z 
2025-02-24T16:09:32.3005056Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3005060Z 
2025-02-24T16:09:32.3005297Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4eae0>
2025-02-24T16:09:32.3005474Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.3005649Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3005654Z 
2025-02-24T16:09:32.3005798Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3005914Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3006002Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3006072Z         try:
2025-02-24T16:09:32.3006216Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3006409Z         except KeyError:
2025-02-24T16:09:32.3006552Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3006624Z     
2025-02-24T16:09:32.3006829Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3006927Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3007017Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3007152Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3007239Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3007330Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3007448Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3007520Z             else:
2025-02-24T16:09:32.3007622Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3007730Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3007735Z 
2025-02-24T16:09:32.3007865Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3007983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3008133Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3008209Z     ???
2025-02-24T16:09:32.3008317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3008325Z 
2025-02-24T16:09:32.3008393Z >   ???
2025-02-24T16:09:32.3008524Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3008591Z E   
2025-02-24T16:09:32.3008724Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3008838Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3008915Z E          ...
2025-02-24T16:09:32.3009004Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3009139Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3009255Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3009326Z E          ...
2025-02-24T16:09:32.3009415Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3009542Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3009655Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3009659Z 
2025-02-24T16:09:32.3009752Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3009978Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T16:09:32.3009982Z 
2025-02-24T16:09:32.3010116Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3010248Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3010347Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3010480Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3010604Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3010702Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3010777Z err_msg = None
2025-02-24T16:09:32.3010781Z 
2025-02-24T16:09:32.3010897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3010976Z         if err_msg is None:
2025-02-24T16:09:32.3011075Z             if left.shape != right.shape:
2025-02-24T16:09:32.3011163Z                 raise_assert_detail(
2025-02-24T16:09:32.3011309Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3011517Z                 )
2025-02-24T16:09:32.3011585Z     
2025-02-24T16:09:32.3011660Z             diff = 0
2025-02-24T16:09:32.3011769Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3011858Z                 # count up differences
2025-02-24T16:09:32.3012031Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3012107Z                     diff += 1
2025-02-24T16:09:32.3012178Z     
2025-02-24T16:09:32.3012264Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3012484Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3012670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3012790Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3012867Z E           
2025-02-24T16:09:32.3012979Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3013250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3013518Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3013526Z 
2025-02-24T16:09:32.3013842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3013846Z 
2025-02-24T16:09:32.3014021Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3014029Z 
2025-02-24T16:09:32.3014261Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4eba0>
2025-02-24T16:09:32.3014432Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.3014518Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3014522Z 
2025-02-24T16:09:32.3014660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3014782Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3014871Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3014942Z         try:
2025-02-24T16:09:32.3015091Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3015177Z         except KeyError:
2025-02-24T16:09:32.3015322Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3015391Z     
2025-02-24T16:09:32.3015485Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3015583Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3015676Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3015818Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3015902Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3016001Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3016113Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3016190Z             else:
2025-02-24T16:09:32.3016417Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3016529Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3016533Z 
2025-02-24T16:09:32.3016668Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3016782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3016935Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3017007Z     ???
2025-02-24T16:09:32.3017124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3017242Z 
2025-02-24T16:09:32.3017317Z >   ???
2025-02-24T16:09:32.3017444Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3017515Z E   
2025-02-24T16:09:32.3017644Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3017761Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3017832Z E          ...
2025-02-24T16:09:32.3017926Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3018064Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3018177Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3018429Z E          ...
2025-02-24T16:09:32.3018585Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3018812Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3018997Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3019004Z 
2025-02-24T16:09:32.3019158Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3019536Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T16:09:32.3019543Z 
2025-02-24T16:09:32.3019765Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3019993Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3020161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3020390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3020616Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3020775Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3020908Z err_msg = None
2025-02-24T16:09:32.3020915Z 
2025-02-24T16:09:32.3021106Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3021241Z         if err_msg is None:
2025-02-24T16:09:32.3021411Z             if left.shape != right.shape:
2025-02-24T16:09:32.3021554Z                 raise_assert_detail(
2025-02-24T16:09:32.3021806Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3021926Z                 )
2025-02-24T16:09:32.3022047Z     
2025-02-24T16:09:32.3022175Z             diff = 0
2025-02-24T16:09:32.3022361Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3022513Z                 # count up differences
2025-02-24T16:09:32.3022812Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3022955Z                     diff += 1
2025-02-24T16:09:32.3023074Z     
2025-02-24T16:09:32.3023232Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3023473Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3023652Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3023773Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3023846Z E           
2025-02-24T16:09:32.3023965Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3024227Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3024499Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3024505Z 
2025-02-24T16:09:32.3024825Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3024922Z 
2025-02-24T16:09:32.3025099Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3025104Z 
2025-02-24T16:09:32.3025333Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4ed50>
2025-02-24T16:09:32.3025508Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c54d40>
2025-02-24T16:09:32.3025585Z attr = 'j_blues'
2025-02-24T16:09:32.3025590Z 
2025-02-24T16:09:32.3025734Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3025949Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3026037Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3026111Z         try:
2025-02-24T16:09:32.3026253Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3026450Z         except KeyError:
2025-02-24T16:09:32.3026593Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3026669Z     
2025-02-24T16:09:32.3026759Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3026858Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3026952Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3027085Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3027175Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3027266Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3027385Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3027460Z             else:
2025-02-24T16:09:32.3027559Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3027670Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3027675Z 
2025-02-24T16:09:32.3027804Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3027923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3028074Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3028148Z     ???
2025-02-24T16:09:32.3028262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3028268Z 
2025-02-24T16:09:32.3028338Z >   ???
2025-02-24T16:09:32.3028469Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3028538Z E   
2025-02-24T16:09:32.3028668Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3028779Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3028859Z E          ...
2025-02-24T16:09:32.3028950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3029082Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3029201Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3029272Z E          ...
2025-02-24T16:09:32.3029362Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3029496Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3029604Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3029608Z 
2025-02-24T16:09:32.3029701Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3029928Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T16:09:32.3029933Z 
2025-02-24T16:09:32.3030067Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3030201Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3030301Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3030438Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3030561Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3030661Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3030863Z err_msg = None
2025-02-24T16:09:32.3030871Z 
2025-02-24T16:09:32.3030984Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3031069Z         if err_msg is None:
2025-02-24T16:09:32.3031165Z             if left.shape != right.shape:
2025-02-24T16:09:32.3031257Z                 raise_assert_detail(
2025-02-24T16:09:32.3031405Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3031480Z                 )
2025-02-24T16:09:32.3031554Z     
2025-02-24T16:09:32.3031627Z             diff = 0
2025-02-24T16:09:32.3031865Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3031952Z                 # count up differences
2025-02-24T16:09:32.3032127Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3032204Z                     diff += 1
2025-02-24T16:09:32.3032277Z     
2025-02-24T16:09:32.3032368Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3032508Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3032687Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3032800Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3032876Z E           
2025-02-24T16:09:32.3032988Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3033254Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3033523Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3033532Z 
2025-02-24T16:09:32.3033842Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3033850Z 
2025-02-24T16:09:32.3034020Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3034025Z 
2025-02-24T16:09:32.3034259Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4fb60>
2025-02-24T16:09:32.3034432Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3034511Z attr = 'lines'
2025-02-24T16:09:32.3034515Z 
2025-02-24T16:09:32.3034652Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3034769Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3034858Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3034929Z         try:
2025-02-24T16:09:32.3035079Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3035160Z         except KeyError:
2025-02-24T16:09:32.3035304Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3035378Z     
2025-02-24T16:09:32.3035467Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3035565Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3035653Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3035791Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3035883Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3035978Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3036168Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3036417Z             else:
2025-02-24T16:09:32.3036592Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3036775Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3036943Z 
2025-02-24T16:09:32.3037175Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3037373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3037632Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3037756Z     ???
2025-02-24T16:09:32.3037947Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3037954Z 
2025-02-24T16:09:32.3038076Z >   ???
2025-02-24T16:09:32.3038292Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3038554Z E   
2025-02-24T16:09:32.3038774Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3038968Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3039095Z E          ...
2025-02-24T16:09:32.3039239Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3039380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3039496Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3039572Z E          ...
2025-02-24T16:09:32.3039663Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3039789Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3039899Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3039904Z 
2025-02-24T16:09:32.3039996Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3040290Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T16:09:32.3040299Z 
2025-02-24T16:09:32.3040532Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4fc50>
2025-02-24T16:09:32.3040707Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3040803Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3040808Z 
2025-02-24T16:09:32.3040951Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3041078Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3041164Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3041241Z         try:
2025-02-24T16:09:32.3041391Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3041474Z         except KeyError:
2025-02-24T16:09:32.3041619Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3041688Z     
2025-02-24T16:09:32.3041781Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3041875Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3041974Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3042115Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3042205Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3042301Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3042413Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3042418Z 
2025-02-24T16:09:32.3042553Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3042674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3042679Z 
2025-02-24T16:09:32.3042820Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3042912Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3043022Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3043108Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3043253Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3043342Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3043448Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3043528Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3043608Z err_msg = None
2025-02-24T16:09:32.3043612Z 
2025-02-24T16:09:32.3043818Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3043905Z         if err_msg is None:
2025-02-24T16:09:32.3044004Z             if left.shape != right.shape:
2025-02-24T16:09:32.3044091Z                 raise_assert_detail(
2025-02-24T16:09:32.3044245Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3044317Z                 )
2025-02-24T16:09:32.3044390Z     
2025-02-24T16:09:32.3044463Z             diff = 0
2025-02-24T16:09:32.3044580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3044748Z                 # count up differences
2025-02-24T16:09:32.3044922Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3045004Z                     diff += 1
2025-02-24T16:09:32.3045073Z     
2025-02-24T16:09:32.3045164Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3045301Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3045483Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3045593Z E           AssertionError: Series are different
2025-02-24T16:09:32.3045664Z E           
2025-02-24T16:09:32.3045771Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3046149Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3046632Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3046983Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3046988Z 
2025-02-24T16:09:32.3047508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3047825Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T16:09:32.3047830Z 
2025-02-24T16:09:32.3048067Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4fd10>
2025-02-24T16:09:32.3048244Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3048341Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3048346Z 
2025-02-24T16:09:32.3048491Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3048607Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3048697Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3048768Z         try:
2025-02-24T16:09:32.3048916Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3048997Z         except KeyError:
2025-02-24T16:09:32.3049144Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3049217Z     
2025-02-24T16:09:32.3049302Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3049402Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3049492Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3049630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3049868Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3049963Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3050077Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3050082Z 
2025-02-24T16:09:32.3050210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3050328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3050333Z 
2025-02-24T16:09:32.3050470Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3050665Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3050775Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3050856Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3051001Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3051083Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3051199Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3051282Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3051356Z err_msg = None
2025-02-24T16:09:32.3051360Z 
2025-02-24T16:09:32.3051476Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3051558Z         if err_msg is None:
2025-02-24T16:09:32.3051657Z             if left.shape != right.shape:
2025-02-24T16:09:32.3051742Z                 raise_assert_detail(
2025-02-24T16:09:32.3051893Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3051971Z                 )
2025-02-24T16:09:32.3052040Z     
2025-02-24T16:09:32.3052116Z             diff = 0
2025-02-24T16:09:32.3052232Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3052326Z                 # count up differences
2025-02-24T16:09:32.3052498Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3052583Z                     diff += 1
2025-02-24T16:09:32.3052655Z     
2025-02-24T16:09:32.3052742Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3052886Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3053059Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3053169Z E           AssertionError: Series are different
2025-02-24T16:09:32.3053240Z E           
2025-02-24T16:09:32.3053379Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3054090Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3054787Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3055486Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3055499Z 
2025-02-24T16:09:32.3056036Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3056672Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T16:09:32.3056684Z 
2025-02-24T16:09:32.3056850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3056983Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3057082Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3057217Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3057489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3057586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3057665Z err_msg = None
2025-02-24T16:09:32.3057669Z 
2025-02-24T16:09:32.3057783Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3057872Z         if err_msg is None:
2025-02-24T16:09:32.3057969Z             if left.shape != right.shape:
2025-02-24T16:09:32.3058060Z                 raise_assert_detail(
2025-02-24T16:09:32.3058210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3058281Z                 )
2025-02-24T16:09:32.3058351Z     
2025-02-24T16:09:32.3058424Z             diff = 0
2025-02-24T16:09:32.3058539Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3058628Z                 # count up differences
2025-02-24T16:09:32.3058815Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3058901Z                     diff += 1
2025-02-24T16:09:32.3058972Z     
2025-02-24T16:09:32.3059066Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3059203Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3059400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3059527Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3059600Z E           
2025-02-24T16:09:32.3059745Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3060022Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3060300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3060306Z 
2025-02-24T16:09:32.3060632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3060637Z 
2025-02-24T16:09:32.3060814Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3060819Z 
2025-02-24T16:09:32.3061054Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600a4ff80>
2025-02-24T16:09:32.3061266Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>, attr = 'nu'
2025-02-24T16:09:32.3061270Z 
2025-02-24T16:09:32.3067813Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3067999Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3068092Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3068170Z         try:
2025-02-24T16:09:32.3068327Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3068413Z         except KeyError:
2025-02-24T16:09:32.3068563Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3068798Z     
2025-02-24T16:09:32.3068895Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3068993Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3069087Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3069231Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3069325Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3069415Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3069537Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3069644Z 
2025-02-24T16:09:32.3069786Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3069908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3070071Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3070142Z     ???
2025-02-24T16:09:32.3070259Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3070268Z 
2025-02-24T16:09:32.3070340Z >   ???
2025-02-24T16:09:32.3070472Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3070545Z E   
2025-02-24T16:09:32.3070677Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3070795Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3070866Z E          ...
2025-02-24T16:09:32.3070959Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3071095Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3071211Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3071286Z E          ...
2025-02-24T16:09:32.3071371Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3071503Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3071615Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3071620Z 
2025-02-24T16:09:32.3071767Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3072239Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T16:09:32.3072249Z 
2025-02-24T16:09:32.3072474Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3072700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3072867Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3073094Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3073321Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3073476Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3073613Z err_msg = None
2025-02-24T16:09:32.3073619Z 
2025-02-24T16:09:32.3073813Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3073955Z         if err_msg is None:
2025-02-24T16:09:32.3074122Z             if left.shape != right.shape:
2025-02-24T16:09:32.3074264Z                 raise_assert_detail(
2025-02-24T16:09:32.3074519Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3074639Z                 )
2025-02-24T16:09:32.3074763Z     
2025-02-24T16:09:32.3074884Z             diff = 0
2025-02-24T16:09:32.3075083Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3075207Z                 # count up differences
2025-02-24T16:09:32.3075389Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3075475Z                     diff += 1
2025-02-24T16:09:32.3075543Z     
2025-02-24T16:09:32.3075638Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3075778Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3075958Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3076176Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3076249Z E           
2025-02-24T16:09:32.3076486Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3076756Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3077140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3077146Z 
2025-02-24T16:09:32.3077473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3077478Z 
2025-02-24T16:09:32.3077653Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3077658Z 
2025-02-24T16:09:32.3077884Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934080>
2025-02-24T16:09:32.3078058Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3078136Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3078141Z 
2025-02-24T16:09:32.3078282Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3078407Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3078491Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3078563Z         try:
2025-02-24T16:09:32.3078706Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3078791Z         except KeyError:
2025-02-24T16:09:32.3078938Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3079010Z     
2025-02-24T16:09:32.3079099Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3079196Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3079290Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3079425Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3079517Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3079608Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3079725Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3079733Z 
2025-02-24T16:09:32.3079866Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3079984Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3080138Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3080207Z     ???
2025-02-24T16:09:32.3080322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3080329Z 
2025-02-24T16:09:32.3080401Z >   ???
2025-02-24T16:09:32.3080531Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3080605Z E   
2025-02-24T16:09:32.3080734Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3080852Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3080924Z E          ...
2025-02-24T16:09:32.3081020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3081154Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3081273Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3081349Z E          ...
2025-02-24T16:09:32.3081436Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3081568Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3081673Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3081797Z 
2025-02-24T16:09:32.3081901Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3082132Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T16:09:32.3082138Z 
2025-02-24T16:09:32.3082266Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3082401Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3082499Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3082641Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3082849Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3082942Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3083021Z err_msg = None
2025-02-24T16:09:32.3083025Z 
2025-02-24T16:09:32.3083137Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3083228Z         if err_msg is None:
2025-02-24T16:09:32.3083327Z             if left.shape != right.shape:
2025-02-24T16:09:32.3083412Z                 raise_assert_detail(
2025-02-24T16:09:32.3083565Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3083635Z                 )
2025-02-24T16:09:32.3083708Z     
2025-02-24T16:09:32.3083780Z             diff = 0
2025-02-24T16:09:32.3083898Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3083986Z                 # count up differences
2025-02-24T16:09:32.3084162Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3084245Z                     diff += 1
2025-02-24T16:09:32.3084312Z     
2025-02-24T16:09:32.3084406Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3084542Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3084721Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3084842Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3084913Z E           
2025-02-24T16:09:32.3085032Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3085297Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3085571Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3085579Z 
2025-02-24T16:09:32.3085893Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3085898Z 
2025-02-24T16:09:32.3086069Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3086075Z 
2025-02-24T16:09:32.3086437Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934140>
2025-02-24T16:09:32.3086644Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>, attr = 'f_lu'
2025-02-24T16:09:32.3086649Z 
2025-02-24T16:09:32.3086786Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3086905Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3086990Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3087065Z         try:
2025-02-24T16:09:32.3087209Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3087288Z         except KeyError:
2025-02-24T16:09:32.3087431Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3087640Z     
2025-02-24T16:09:32.3087731Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3087825Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3087923Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3088058Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3088142Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3088234Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3088342Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3088448Z 
2025-02-24T16:09:32.3088580Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3088690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3088844Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3088919Z     ???
2025-02-24T16:09:32.3089028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3089035Z 
2025-02-24T16:09:32.3089106Z >   ???
2025-02-24T16:09:32.3089233Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3089304Z E   
2025-02-24T16:09:32.3089433Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3089548Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3089623Z E          ...
2025-02-24T16:09:32.3089711Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3089846Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3089960Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3090035Z E          ...
2025-02-24T16:09:32.3090123Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3090248Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3090358Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3090366Z 
2025-02-24T16:09:32.3090514Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3090955Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T16:09:32.3090964Z 
2025-02-24T16:09:32.3091191Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3091404Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3091565Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3091758Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3091892Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3091987Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3092067Z err_msg = None
2025-02-24T16:09:32.3092071Z 
2025-02-24T16:09:32.3092187Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3092272Z         if err_msg is None:
2025-02-24T16:09:32.3092372Z             if left.shape != right.shape:
2025-02-24T16:09:32.3092457Z                 raise_assert_detail(
2025-02-24T16:09:32.3092608Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3092682Z                 )
2025-02-24T16:09:32.3092749Z     
2025-02-24T16:09:32.3092823Z             diff = 0
2025-02-24T16:09:32.3092937Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3093029Z                 # count up differences
2025-02-24T16:09:32.3093203Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3093286Z                     diff += 1
2025-02-24T16:09:32.3093358Z     
2025-02-24T16:09:32.3093446Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3093589Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3093877Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3093995Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3094065Z E           
2025-02-24T16:09:32.3094183Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3094450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3094787Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3094795Z 
2025-02-24T16:09:32.3095107Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3095111Z 
2025-02-24T16:09:32.3095284Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3095289Z 
2025-02-24T16:09:32.3095511Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009348c0>
2025-02-24T16:09:32.3095676Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3095753Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3095760Z 
2025-02-24T16:09:32.3095901Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3096021Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3096105Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3096178Z         try:
2025-02-24T16:09:32.3096432Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3096519Z         except KeyError:
2025-02-24T16:09:32.3096666Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3096734Z     
2025-02-24T16:09:32.3096824Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3096920Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3097012Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3097144Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3097232Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3097324Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3097435Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3097511Z             else:
2025-02-24T16:09:32.3097604Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3097714Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3097719Z 
2025-02-24T16:09:32.3097843Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3097962Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3098116Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3098186Z     ???
2025-02-24T16:09:32.3098299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3098304Z 
2025-02-24T16:09:32.3098371Z >   ???
2025-02-24T16:09:32.3098504Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3098575Z E   
2025-02-24T16:09:32.3098702Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3098820Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3098894Z E          ...
2025-02-24T16:09:32.3098983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3099116Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3099231Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3099303Z E          ...
2025-02-24T16:09:32.3099514Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3099641Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3099743Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3099747Z 
2025-02-24T16:09:32.3099839Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3100088Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T16:09:32.3100097Z 
2025-02-24T16:09:32.3100223Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3100457Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3100554Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3100689Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3100810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3100911Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3100988Z err_msg = None
2025-02-24T16:09:32.3100993Z 
2025-02-24T16:09:32.3101103Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3101187Z         if err_msg is None:
2025-02-24T16:09:32.3101281Z             if left.shape != right.shape:
2025-02-24T16:09:32.3101370Z                 raise_assert_detail(
2025-02-24T16:09:32.3101524Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3101594Z                 )
2025-02-24T16:09:32.3101668Z     
2025-02-24T16:09:32.3101739Z             diff = 0
2025-02-24T16:09:32.3101852Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3101938Z                 # count up differences
2025-02-24T16:09:32.3102112Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3102192Z                     diff += 1
2025-02-24T16:09:32.3102262Z     
2025-02-24T16:09:32.3102355Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3102495Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3102666Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3102785Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3102854Z E           
2025-02-24T16:09:32.3102969Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3103233Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3103510Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3103517Z 
2025-02-24T16:09:32.3103832Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3103837Z 
2025-02-24T16:09:32.3104007Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3104012Z 
2025-02-24T16:09:32.3104234Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934980>
2025-02-24T16:09:32.3104406Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3104484Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3104488Z 
2025-02-24T16:09:32.3104630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3104751Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3104921Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3104992Z         try:
2025-02-24T16:09:32.3105128Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3105210Z         except KeyError:
2025-02-24T16:09:32.3105344Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3105413Z     
2025-02-24T16:09:32.3105500Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3105590Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3105682Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3105821Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3105987Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3106079Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3106195Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3106366Z             else:
2025-02-24T16:09:32.3106463Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3106582Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3106587Z 
2025-02-24T16:09:32.3106714Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3106836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3106988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3107058Z     ???
2025-02-24T16:09:32.3107172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3107177Z 
2025-02-24T16:09:32.3107244Z >   ???
2025-02-24T16:09:32.3107382Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3107451Z E   
2025-02-24T16:09:32.3107589Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3107702Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3107774Z E          ...
2025-02-24T16:09:32.3107868Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3108000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3108116Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3108188Z E          ...
2025-02-24T16:09:32.3108277Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3108404Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3108508Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3108513Z 
2025-02-24T16:09:32.3108644Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3109059Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T16:09:32.3109073Z 
2025-02-24T16:09:32.3109296Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3109518Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3109677Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3109884Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3110010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3110106Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3110182Z err_msg = None
2025-02-24T16:09:32.3110186Z 
2025-02-24T16:09:32.3110301Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3110389Z         if err_msg is None:
2025-02-24T16:09:32.3110485Z             if left.shape != right.shape:
2025-02-24T16:09:32.3110577Z                 raise_assert_detail(
2025-02-24T16:09:32.3110724Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3110801Z                 )
2025-02-24T16:09:32.3110871Z     
2025-02-24T16:09:32.3110944Z             diff = 0
2025-02-24T16:09:32.3111062Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3111303Z                 # count up differences
2025-02-24T16:09:32.3111480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3111557Z                     diff += 1
2025-02-24T16:09:32.3111630Z     
2025-02-24T16:09:32.3111722Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3111859Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3112036Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3112152Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3112330Z E           
2025-02-24T16:09:32.3112444Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3112715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3112987Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3112992Z 
2025-02-24T16:09:32.3113307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3113314Z 
2025-02-24T16:09:32.3113488Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3113493Z 
2025-02-24T16:09:32.3113720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600934b00>
2025-02-24T16:09:32.3113890Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8c56720>
2025-02-24T16:09:32.3113974Z attr = 'j_blues'
2025-02-24T16:09:32.3113979Z 
2025-02-24T16:09:32.3114118Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3114234Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3114322Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3114391Z         try:
2025-02-24T16:09:32.3114537Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3114618Z         except KeyError:
2025-02-24T16:09:32.3114761Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3114832Z     
2025-02-24T16:09:32.3114923Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3115020Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3115108Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3115244Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3115328Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3115422Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3115537Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3115607Z             else:
2025-02-24T16:09:32.3115705Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3115814Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3115819Z 
2025-02-24T16:09:32.3115946Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3116063Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3116210Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3116396Z     ???
2025-02-24T16:09:32.3116508Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3116512Z 
2025-02-24T16:09:32.3116583Z >   ???
2025-02-24T16:09:32.3116710Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3116783Z E   
2025-02-24T16:09:32.3116913Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3117145Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3117219Z E          ...
2025-02-24T16:09:32.3117308Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3117442Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3117553Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3117626Z E          ...
2025-02-24T16:09:32.3117714Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3117840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3118050Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3118055Z 
2025-02-24T16:09:32.3118143Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3118358Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T16:09:32.3118362Z 
2025-02-24T16:09:32.3118493Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3118626Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3118727Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3118859Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3118985Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3119084Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3119160Z err_msg = None
2025-02-24T16:09:32.3119165Z 
2025-02-24T16:09:32.3119280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3119362Z         if err_msg is None:
2025-02-24T16:09:32.3119461Z             if left.shape != right.shape:
2025-02-24T16:09:32.3119545Z                 raise_assert_detail(
2025-02-24T16:09:32.3119694Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3119771Z                 )
2025-02-24T16:09:32.3119838Z     
2025-02-24T16:09:32.3119915Z             diff = 0
2025-02-24T16:09:32.3120026Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3120119Z                 # count up differences
2025-02-24T16:09:32.3120288Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3120370Z                     diff += 1
2025-02-24T16:09:32.3120444Z     
2025-02-24T16:09:32.3120532Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3120678Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3120848Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3120964Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3121038Z E           
2025-02-24T16:09:32.3121150Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3121419Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3121680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3121692Z 
2025-02-24T16:09:32.3122000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3122005Z 
2025-02-24T16:09:32.3122175Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3122180Z 
2025-02-24T16:09:32.3122492Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935880>
2025-02-24T16:09:32.3122659Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3122734Z attr = 'lines'
2025-02-24T16:09:32.3122738Z 
2025-02-24T16:09:32.3122875Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3122997Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3123080Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3123153Z         try:
2025-02-24T16:09:32.3123293Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3123451Z         except KeyError:
2025-02-24T16:09:32.3123593Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3123661Z     
2025-02-24T16:09:32.3123751Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3123845Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3123935Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3124068Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3124156Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3124250Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3124359Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3124434Z             else:
2025-02-24T16:09:32.3124528Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3124637Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3124641Z 
2025-02-24T16:09:32.3124771Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3124889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3125038Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3125106Z     ???
2025-02-24T16:09:32.3125218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3125225Z 
2025-02-24T16:09:32.3125293Z >   ???
2025-02-24T16:09:32.3125423Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3125536Z E   
2025-02-24T16:09:32.3125764Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3125950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3126068Z E          ...
2025-02-24T16:09:32.3126219Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3126574Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3126776Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3126868Z E          ...
2025-02-24T16:09:32.3126954Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3127085Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3127349Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3127359Z 
2025-02-24T16:09:32.3127486Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3127756Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T16:09:32.3127761Z 
2025-02-24T16:09:32.3127984Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935940>
2025-02-24T16:09:32.3128158Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3128246Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3128251Z 
2025-02-24T16:09:32.3128391Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3128508Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3128598Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3128671Z         try:
2025-02-24T16:09:32.3128812Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3128894Z         except KeyError:
2025-02-24T16:09:32.3129034Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3129104Z     
2025-02-24T16:09:32.3129333Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3129426Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3129517Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3129648Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3129735Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3129823Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3129933Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3129938Z 
2025-02-24T16:09:32.3130067Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3130304Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3130308Z 
2025-02-24T16:09:32.3130448Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3130534Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3130647Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3130733Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3130872Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3130957Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3131060Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3131142Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3131216Z err_msg = None
2025-02-24T16:09:32.3131225Z 
2025-02-24T16:09:32.3131337Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3131424Z         if err_msg is None:
2025-02-24T16:09:32.3131517Z             if left.shape != right.shape:
2025-02-24T16:09:32.3131606Z                 raise_assert_detail(
2025-02-24T16:09:32.3131750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3131824Z                 )
2025-02-24T16:09:32.3131895Z     
2025-02-24T16:09:32.3131970Z             diff = 0
2025-02-24T16:09:32.3132086Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3132178Z                 # count up differences
2025-02-24T16:09:32.3132353Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3132430Z                     diff += 1
2025-02-24T16:09:32.3132501Z     
2025-02-24T16:09:32.3132591Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3132727Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3132905Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3133010Z E           AssertionError: Series are different
2025-02-24T16:09:32.3133083Z E           
2025-02-24T16:09:32.3133184Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3133565Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3133907Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3134247Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3134341Z 
2025-02-24T16:09:32.3134657Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3134910Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T16:09:32.3134915Z 
2025-02-24T16:09:32.3135137Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935a00>
2025-02-24T16:09:32.3135305Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3135479Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3135483Z 
2025-02-24T16:09:32.3135620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3135739Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3135822Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3135894Z         try:
2025-02-24T16:09:32.3136036Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3136118Z         except KeyError:
2025-02-24T16:09:32.3136396Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3136468Z     
2025-02-24T16:09:32.3136561Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3136653Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3136745Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3136880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3136965Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3137062Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3137171Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3137175Z 
2025-02-24T16:09:32.3137304Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3137417Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3137426Z 
2025-02-24T16:09:32.3137566Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3137651Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3137757Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3137840Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3137978Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3138062Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3138170Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3138250Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3138327Z err_msg = None
2025-02-24T16:09:32.3138332Z 
2025-02-24T16:09:32.3138441Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3138525Z         if err_msg is None:
2025-02-24T16:09:32.3138619Z             if left.shape != right.shape:
2025-02-24T16:09:32.3138706Z                 raise_assert_detail(
2025-02-24T16:09:32.3138853Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3138923Z                 )
2025-02-24T16:09:32.3138996Z     
2025-02-24T16:09:32.3139068Z             diff = 0
2025-02-24T16:09:32.3139185Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3139278Z                 # count up differences
2025-02-24T16:09:32.3139449Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3139531Z                     diff += 1
2025-02-24T16:09:32.3139603Z     
2025-02-24T16:09:32.3139691Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3139826Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3140002Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3140111Z E           AssertionError: Series are different
2025-02-24T16:09:32.3140300Z E           
2025-02-24T16:09:32.3140407Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3140780Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3141160Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3141645Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3141651Z 
2025-02-24T16:09:32.3141962Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3142170Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T16:09:32.3142174Z 
2025-02-24T16:09:32.3142305Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3142430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3142531Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3142668Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3142789Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3142886Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3142959Z err_msg = None
2025-02-24T16:09:32.3142963Z 
2025-02-24T16:09:32.3143072Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3143155Z         if err_msg is None:
2025-02-24T16:09:32.3143253Z             if left.shape != right.shape:
2025-02-24T16:09:32.3143343Z                 raise_assert_detail(
2025-02-24T16:09:32.3143487Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3143562Z                 )
2025-02-24T16:09:32.3143632Z     
2025-02-24T16:09:32.3143709Z             diff = 0
2025-02-24T16:09:32.3143825Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3143918Z                 # count up differences
2025-02-24T16:09:32.3144094Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3144171Z                     diff += 1
2025-02-24T16:09:32.3144279Z     
2025-02-24T16:09:32.3144439Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3144684Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3144983Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3145176Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3145305Z E           
2025-02-24T16:09:32.3145442Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3145712Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3146072Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3146077Z 
2025-02-24T16:09:32.3146500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3146621Z 
2025-02-24T16:09:32.3146800Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3146804Z 
2025-02-24T16:09:32.3147036Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935c40>
2025-02-24T16:09:32.3147239Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>, attr = 'nu'
2025-02-24T16:09:32.3147247Z 
2025-02-24T16:09:32.3147401Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3147520Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3147611Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3147682Z         try:
2025-02-24T16:09:32.3147859Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3147941Z         except KeyError:
2025-02-24T16:09:32.3148081Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3148153Z     
2025-02-24T16:09:32.3148244Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3148341Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3148431Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3148572Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3148659Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3148751Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3148867Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3148872Z 
2025-02-24T16:09:32.3149000Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3149117Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3149266Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3149339Z     ???
2025-02-24T16:09:32.3149452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3149456Z 
2025-02-24T16:09:32.3149528Z >   ???
2025-02-24T16:09:32.3149659Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3149726Z E   
2025-02-24T16:09:32.3149857Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3149968Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3150042Z E          ...
2025-02-24T16:09:32.3150133Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3150267Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3150381Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3150450Z E          ...
2025-02-24T16:09:32.3150537Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3150661Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3150770Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3150775Z 
2025-02-24T16:09:32.3150868Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3151097Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T16:09:32.3151102Z 
2025-02-24T16:09:32.3151233Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3151361Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3151460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3151730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3151852Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3151946Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3152021Z err_msg = None
2025-02-24T16:09:32.3152025Z 
2025-02-24T16:09:32.3152141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3152227Z         if err_msg is None:
2025-02-24T16:09:32.3152416Z             if left.shape != right.shape:
2025-02-24T16:09:32.3152503Z                 raise_assert_detail(
2025-02-24T16:09:32.3152650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3152721Z                 )
2025-02-24T16:09:32.3152791Z     
2025-02-24T16:09:32.3152867Z             diff = 0
2025-02-24T16:09:32.3152980Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3153071Z                 # count up differences
2025-02-24T16:09:32.3153245Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3153320Z                     diff += 1
2025-02-24T16:09:32.3153396Z     
2025-02-24T16:09:32.3153483Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3153623Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3153795Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3153910Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3153985Z E           
2025-02-24T16:09:32.3154096Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3154362Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3154635Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3154640Z 
2025-02-24T16:09:32.3154945Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3154954Z 
2025-02-24T16:09:32.3155127Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3155132Z 
2025-02-24T16:09:32.3155360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935d00>
2025-02-24T16:09:32.3155526Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3155611Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3155615Z 
2025-02-24T16:09:32.3155752Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3155868Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3155955Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3156025Z         try:
2025-02-24T16:09:32.3156173Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3156252Z         except KeyError:
2025-02-24T16:09:32.3156491Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3156563Z     
2025-02-24T16:09:32.3156653Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3156751Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3156839Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3156975Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3157059Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3157151Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3157379Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3157390Z 
2025-02-24T16:09:32.3157515Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3157633Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3157779Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3157851Z     ???
2025-02-24T16:09:32.3157958Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3158062Z 
2025-02-24T16:09:32.3158134Z >   ???
2025-02-24T16:09:32.3158264Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3158330Z E   
2025-02-24T16:09:32.3158460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3158569Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3158643Z E          ...
2025-02-24T16:09:32.3158730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3158865Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3158981Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3159052Z E          ...
2025-02-24T16:09:32.3159140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3159264Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3159372Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3159376Z 
2025-02-24T16:09:32.3159468Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3159679Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T16:09:32.3159683Z 
2025-02-24T16:09:32.3159819Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3159947Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3160050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3160186Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3160307Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3160409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3160483Z err_msg = None
2025-02-24T16:09:32.3160487Z 
2025-02-24T16:09:32.3160604Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3160685Z         if err_msg is None:
2025-02-24T16:09:32.3160788Z             if left.shape != right.shape:
2025-02-24T16:09:32.3160875Z                 raise_assert_detail(
2025-02-24T16:09:32.3161019Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3161092Z                 )
2025-02-24T16:09:32.3161159Z     
2025-02-24T16:09:32.3161234Z             diff = 0
2025-02-24T16:09:32.3161344Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3161438Z                 # count up differences
2025-02-24T16:09:32.3161611Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3161688Z                     diff += 1
2025-02-24T16:09:32.3161758Z     
2025-02-24T16:09:32.3161846Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3162018Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3162325Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3162525Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3162650Z E           
2025-02-24T16:09:32.3162837Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3163316Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3163916Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3163924Z 
2025-02-24T16:09:32.3164444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3164551Z 
2025-02-24T16:09:32.3164844Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3164851Z 
2025-02-24T16:09:32.3165241Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600935dc0>
2025-02-24T16:09:32.3165553Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>, attr = 'f_lu'
2025-02-24T16:09:32.3165563Z 
2025-02-24T16:09:32.3165708Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3165823Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3165911Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3165981Z         try:
2025-02-24T16:09:32.3166125Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3166206Z         except KeyError:
2025-02-24T16:09:32.3166472Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3166549Z     
2025-02-24T16:09:32.3166638Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3166733Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3166820Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3166956Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3167044Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3167135Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3167250Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3167254Z 
2025-02-24T16:09:32.3167378Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3167490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3167638Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3167706Z     ???
2025-02-24T16:09:32.3167815Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3167820Z 
2025-02-24T16:09:32.3167891Z >   ???
2025-02-24T16:09:32.3168019Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3168086Z E   
2025-02-24T16:09:32.3168215Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3168328Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3168398Z E          ...
2025-02-24T16:09:32.3168487Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3168619Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3168734Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3168805Z E          ...
2025-02-24T16:09:32.3168892Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3169019Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3169125Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3169129Z 
2025-02-24T16:09:32.3169218Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3169438Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T16:09:32.3169442Z 
2025-02-24T16:09:32.3169570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3169697Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3169922Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3170055Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3170177Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3170272Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3170349Z err_msg = None
2025-02-24T16:09:32.3170353Z 
2025-02-24T16:09:32.3170462Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3170545Z         if err_msg is None:
2025-02-24T16:09:32.3170747Z             if left.shape != right.shape:
2025-02-24T16:09:32.3170837Z                 raise_assert_detail(
2025-02-24T16:09:32.3170978Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3171051Z                 )
2025-02-24T16:09:32.3171120Z     
2025-02-24T16:09:32.3171192Z             diff = 0
2025-02-24T16:09:32.3171305Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3171396Z                 # count up differences
2025-02-24T16:09:32.3171568Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3171648Z                     diff += 1
2025-02-24T16:09:32.3171716Z     
2025-02-24T16:09:32.3171807Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3171941Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3172115Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3172231Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3172305Z E           
2025-02-24T16:09:32.3172417Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3172678Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3172944Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3172949Z 
2025-02-24T16:09:32.3173260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3173268Z 
2025-02-24T16:09:32.3173434Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3173439Z 
2025-02-24T16:09:32.3173665Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600936540>
2025-02-24T16:09:32.3173833Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3173919Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3173924Z 
2025-02-24T16:09:32.3174063Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3174177Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3174263Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3174332Z         try:
2025-02-24T16:09:32.3174476Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3174560Z         except KeyError:
2025-02-24T16:09:32.3174698Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3174772Z     
2025-02-24T16:09:32.3174858Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3174953Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3175041Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3175178Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3175265Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3175459Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3175571Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3175641Z             else:
2025-02-24T16:09:32.3175739Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3175843Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3175847Z 
2025-02-24T16:09:32.3175974Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3176088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3176236Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3176531Z     ???
2025-02-24T16:09:32.3176643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3176647Z 
2025-02-24T16:09:32.3176717Z >   ???
2025-02-24T16:09:32.3176843Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3176914Z E   
2025-02-24T16:09:32.3177054Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3177171Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3177244Z E          ...
2025-02-24T16:09:32.3177332Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3177469Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3177587Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3177655Z E          ...
2025-02-24T16:09:32.3177747Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3177874Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3177982Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3177986Z 
2025-02-24T16:09:32.3178075Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3178293Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T16:09:32.3178297Z 
2025-02-24T16:09:32.3178431Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3178566Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3178667Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3178802Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3178931Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3179027Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3179105Z err_msg = None
2025-02-24T16:09:32.3179110Z 
2025-02-24T16:09:32.3179227Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3179309Z         if err_msg is None:
2025-02-24T16:09:32.3179408Z             if left.shape != right.shape:
2025-02-24T16:09:32.3179494Z                 raise_assert_detail(
2025-02-24T16:09:32.3179639Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3179719Z                 )
2025-02-24T16:09:32.3179787Z     
2025-02-24T16:09:32.3179864Z             diff = 0
2025-02-24T16:09:32.3179976Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3180067Z                 # count up differences
2025-02-24T16:09:32.3180375Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3180521Z                     diff += 1
2025-02-24T16:09:32.3180641Z     
2025-02-24T16:09:32.3180789Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3181027Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3181322Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3181516Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3181640Z E           
2025-02-24T16:09:32.3181827Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3182469Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3182950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3183079Z 
2025-02-24T16:09:32.3183544Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3183550Z 
2025-02-24T16:09:32.3183725Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3183732Z 
2025-02-24T16:09:32.3183960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600936780>
2025-02-24T16:09:32.3184131Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d6f4c980>
2025-02-24T16:09:32.3184208Z attr = 'j_blues'
2025-02-24T16:09:32.3184212Z 
2025-02-24T16:09:32.3184353Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3184470Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3184555Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3184627Z         try:
2025-02-24T16:09:32.3184771Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3184852Z         except KeyError:
2025-02-24T16:09:32.3184995Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3185062Z     
2025-02-24T16:09:32.3185153Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3185246Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3185342Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3185474Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3185563Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3185657Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3185766Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3185841Z             else:
2025-02-24T16:09:32.3185936Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3186046Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3186054Z 
2025-02-24T16:09:32.3186184Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3186409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3186564Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3186632Z     ???
2025-02-24T16:09:32.3186747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3186755Z 
2025-02-24T16:09:32.3186828Z >   ???
2025-02-24T16:09:32.3186957Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3187027Z E   
2025-02-24T16:09:32.3187154Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3187268Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3187338Z E          ...
2025-02-24T16:09:32.3187426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3187557Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3187676Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3187749Z E          ...
2025-02-24T16:09:32.3187832Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3187960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3188065Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3188070Z 
2025-02-24T16:09:32.3188289Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3188501Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T16:09:32.3188506Z 
2025-02-24T16:09:32.3188637Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3188769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3188863Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3189001Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3189234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3189329Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3189406Z err_msg = None
2025-02-24T16:09:32.3189410Z 
2025-02-24T16:09:32.3189521Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3189612Z         if err_msg is None:
2025-02-24T16:09:32.3189710Z             if left.shape != right.shape:
2025-02-24T16:09:32.3189796Z                 raise_assert_detail(
2025-02-24T16:09:32.3189943Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3190013Z                 )
2025-02-24T16:09:32.3190083Z     
2025-02-24T16:09:32.3190154Z             diff = 0
2025-02-24T16:09:32.3190271Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3190366Z                 # count up differences
2025-02-24T16:09:32.3190535Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3190619Z                     diff += 1
2025-02-24T16:09:32.3190687Z     
2025-02-24T16:09:32.3190779Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3190916Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3191090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3191208Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3191279Z E           
2025-02-24T16:09:32.3191395Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3191656Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3191927Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3191933Z 
2025-02-24T16:09:32.3192246Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3192253Z 
2025-02-24T16:09:32.3192420Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3192425Z 
2025-02-24T16:09:32.3192652Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937500>
2025-02-24T16:09:32.3192823Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3192896Z attr = 'lines'
2025-02-24T16:09:32.3192900Z 
2025-02-24T16:09:32.3193042Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3193161Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3193249Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3193323Z         try:
2025-02-24T16:09:32.3193463Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3193549Z         except KeyError:
2025-02-24T16:09:32.3193688Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3193844Z     
2025-02-24T16:09:32.3193934Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3194038Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3194132Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3194263Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3194351Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3194440Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3194550Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3194697Z             else:
2025-02-24T16:09:32.3194796Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3194907Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3194911Z 
2025-02-24T16:09:32.3195039Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3195158Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3195316Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3195394Z     ???
2025-02-24T16:09:32.3195505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3195513Z 
2025-02-24T16:09:32.3195579Z >   ???
2025-02-24T16:09:32.3195710Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3195778Z E   
2025-02-24T16:09:32.3195911Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3196023Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3196101Z E          ...
2025-02-24T16:09:32.3196188Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3196416Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3196534Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3196603Z E          ...
2025-02-24T16:09:32.3196690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3196817Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3196925Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3196929Z 
2025-02-24T16:09:32.3197023Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3197289Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T16:09:32.3197294Z 
2025-02-24T16:09:32.3197524Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009375c0>
2025-02-24T16:09:32.3197693Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3197790Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3197795Z 
2025-02-24T16:09:32.3197937Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3198055Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3198141Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3198209Z         try:
2025-02-24T16:09:32.3198360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3198439Z         except KeyError:
2025-02-24T16:09:32.3198580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3198652Z     
2025-02-24T16:09:32.3198738Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3198837Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3198923Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3199061Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3199144Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3199240Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3199351Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3199355Z 
2025-02-24T16:09:32.3199483Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3199598Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3199737Z 
2025-02-24T16:09:32.3199879Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3199967Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3200080Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3200161Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3200305Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3200387Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3200494Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3200678Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3200755Z err_msg = None
2025-02-24T16:09:32.3200759Z 
2025-02-24T16:09:32.3200875Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3200954Z         if err_msg is None:
2025-02-24T16:09:32.3201050Z             if left.shape != right.shape:
2025-02-24T16:09:32.3201137Z                 raise_assert_detail(
2025-02-24T16:09:32.3201285Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3201355Z                 )
2025-02-24T16:09:32.3201423Z     
2025-02-24T16:09:32.3201501Z             diff = 0
2025-02-24T16:09:32.3201612Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3201705Z                 # count up differences
2025-02-24T16:09:32.3201884Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3201967Z                     diff += 1
2025-02-24T16:09:32.3202042Z     
2025-02-24T16:09:32.3202128Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3202271Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3202442Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3202553Z E           AssertionError: Series are different
2025-02-24T16:09:32.3202626Z E           
2025-02-24T16:09:32.3202732Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3203110Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3203455Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3203798Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3203807Z 
2025-02-24T16:09:32.3204184Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3204653Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T16:09:32.3204673Z 
2025-02-24T16:09:32.3205058Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937680>
2025-02-24T16:09:32.3205351Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3205503Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3205509Z 
2025-02-24T16:09:32.3205748Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3206057Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3206202Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3206448Z         try:
2025-02-24T16:09:32.3206690Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3206829Z         except KeyError:
2025-02-24T16:09:32.3207062Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3207183Z     
2025-02-24T16:09:32.3207328Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3207494Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3207786Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3207931Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3208025Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3208116Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3208232Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3208240Z 
2025-02-24T16:09:32.3208376Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3208490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3208495Z 
2025-02-24T16:09:32.3208633Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3208718Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3208828Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3208917Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3209060Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3209146Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3209250Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3209332Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3209407Z err_msg = None
2025-02-24T16:09:32.3209414Z 
2025-02-24T16:09:32.3209534Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3209617Z         if err_msg is None:
2025-02-24T16:09:32.3209710Z             if left.shape != right.shape:
2025-02-24T16:09:32.3209798Z                 raise_assert_detail(
2025-02-24T16:09:32.3209946Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3210024Z                 )
2025-02-24T16:09:32.3210091Z     
2025-02-24T16:09:32.3210165Z             diff = 0
2025-02-24T16:09:32.3210279Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3210369Z                 # count up differences
2025-02-24T16:09:32.3210546Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3210623Z                     diff += 1
2025-02-24T16:09:32.3210695Z     
2025-02-24T16:09:32.3210782Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3210922Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3211103Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3211207Z E           AssertionError: Series are different
2025-02-24T16:09:32.3211280Z E           
2025-02-24T16:09:32.3211384Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3211762Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3212148Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3212649Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3212729Z 
2025-02-24T16:09:32.3213043Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3213253Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T16:09:32.3213258Z 
2025-02-24T16:09:32.3213390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3213520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3213622Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3213757Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3213881Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3213973Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3214055Z err_msg = None
2025-02-24T16:09:32.3214059Z 
2025-02-24T16:09:32.3214177Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3214256Z         if err_msg is None:
2025-02-24T16:09:32.3214354Z             if left.shape != right.shape:
2025-02-24T16:09:32.3214438Z                 raise_assert_detail(
2025-02-24T16:09:32.3214587Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3214655Z                 )
2025-02-24T16:09:32.3214725Z     
2025-02-24T16:09:32.3214799Z             diff = 0
2025-02-24T16:09:32.3214909Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3215004Z                 # count up differences
2025-02-24T16:09:32.3215173Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3215257Z                     diff += 1
2025-02-24T16:09:32.3215343Z     
2025-02-24T16:09:32.3215474Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3215621Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3215792Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3215907Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3215980Z E           
2025-02-24T16:09:32.3216096Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3216477Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3216741Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3216750Z 
2025-02-24T16:09:32.3217058Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3217062Z 
2025-02-24T16:09:32.3217240Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3217357Z 
2025-02-24T16:09:32.3217589Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009378c0>
2025-02-24T16:09:32.3217797Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>, attr = 'nu'
2025-02-24T16:09:32.3217801Z 
2025-02-24T16:09:32.3217942Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3218061Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3218151Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3218220Z         try:
2025-02-24T16:09:32.3218486Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3218567Z         except KeyError:
2025-02-24T16:09:32.3218707Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3218780Z     
2025-02-24T16:09:32.3218868Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3218964Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3219056Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3219192Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3219279Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3219373Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3219486Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3219491Z 
2025-02-24T16:09:32.3219617Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3219733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3219888Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3219960Z     ???
2025-02-24T16:09:32.3220069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3220077Z 
2025-02-24T16:09:32.3220144Z >   ???
2025-02-24T16:09:32.3220275Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3220342Z E   
2025-02-24T16:09:32.3220478Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3220588Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3220660Z E          ...
2025-02-24T16:09:32.3220748Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3220883Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3221000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3221068Z E          ...
2025-02-24T16:09:32.3221157Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3221286Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3221396Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3221400Z 
2025-02-24T16:09:32.3221493Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3221724Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T16:09:32.3221729Z 
2025-02-24T16:09:32.3221865Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3221996Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3222100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3222266Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3222489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3222656Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3222788Z err_msg = None
2025-02-24T16:09:32.3222794Z 
2025-02-24T16:09:32.3222983Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3223122Z         if err_msg is None:
2025-02-24T16:09:32.3223280Z             if left.shape != right.shape:
2025-02-24T16:09:32.3223428Z                 raise_assert_detail(
2025-02-24T16:09:32.3223792Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3223915Z                 )
2025-02-24T16:09:32.3224030Z     
2025-02-24T16:09:32.3224160Z             diff = 0
2025-02-24T16:09:32.3224346Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3224506Z                 # count up differences
2025-02-24T16:09:32.3224805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3224934Z                     diff += 1
2025-02-24T16:09:32.3225057Z     
2025-02-24T16:09:32.3225203Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3225546Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3225782Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3225898Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3225972Z E           
2025-02-24T16:09:32.3226082Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3226455Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3226724Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3226732Z 
2025-02-24T16:09:32.3227040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3227045Z 
2025-02-24T16:09:32.3227220Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3227228Z 
2025-02-24T16:09:32.3227456Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937980>
2025-02-24T16:09:32.3227625Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3227707Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3227712Z 
2025-02-24T16:09:32.3227851Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3227972Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3228059Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3228131Z         try:
2025-02-24T16:09:32.3228275Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3228358Z         except KeyError:
2025-02-24T16:09:32.3228501Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3228568Z     
2025-02-24T16:09:32.3228661Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3228754Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3228848Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3228985Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3229070Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3229165Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3229275Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3229279Z 
2025-02-24T16:09:32.3229406Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3229523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3229672Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3229746Z     ???
2025-02-24T16:09:32.3229855Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3229860Z 
2025-02-24T16:09:32.3229931Z >   ???
2025-02-24T16:09:32.3230059Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3230259Z E   
2025-02-24T16:09:32.3230390Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3230499Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3230572Z E          ...
2025-02-24T16:09:32.3230658Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3230791Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3230910Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3230980Z E          ...
2025-02-24T16:09:32.3231071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3231301Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3231408Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3231412Z 
2025-02-24T16:09:32.3231501Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3231716Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T16:09:32.3231724Z 
2025-02-24T16:09:32.3231854Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3231980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3232078Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3232208Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3232334Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3232482Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3232612Z err_msg = None
2025-02-24T16:09:32.3232619Z 
2025-02-24T16:09:32.3232814Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3232957Z         if err_msg is None:
2025-02-24T16:09:32.3233120Z             if left.shape != right.shape:
2025-02-24T16:09:32.3233267Z                 raise_assert_detail(
2025-02-24T16:09:32.3233517Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3233641Z                 )
2025-02-24T16:09:32.3233756Z     
2025-02-24T16:09:32.3233885Z             diff = 0
2025-02-24T16:09:32.3234074Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3234228Z                 # count up differences
2025-02-24T16:09:32.3234532Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3234664Z                     diff += 1
2025-02-24T16:09:32.3234787Z     
2025-02-24T16:09:32.3234940Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3235173Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3235465Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3235660Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3235795Z E           
2025-02-24T16:09:32.3235964Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3236237Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3236605Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3236623Z 
2025-02-24T16:09:32.3236936Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3236942Z 
2025-02-24T16:09:32.3237119Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3237251Z 
2025-02-24T16:09:32.3237485Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600937a40>
2025-02-24T16:09:32.3237695Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>, attr = 'f_lu'
2025-02-24T16:09:32.3237700Z 
2025-02-24T16:09:32.3237849Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3237967Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3238057Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3238130Z         try:
2025-02-24T16:09:32.3238384Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3238469Z         except KeyError:
2025-02-24T16:09:32.3238610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3238687Z     
2025-02-24T16:09:32.3238776Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3238877Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3238969Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3239108Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3239198Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3239289Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3246015Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3246033Z 
2025-02-24T16:09:32.3246200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3246473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3246646Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3246724Z     ???
2025-02-24T16:09:32.3246842Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3246847Z 
2025-02-24T16:09:32.3246916Z >   ???
2025-02-24T16:09:32.3247053Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3247125Z E   
2025-02-24T16:09:32.3247269Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3247384Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3247463Z E          ...
2025-02-24T16:09:32.3247564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3247698Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3247815Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3247915Z E          ...
2025-02-24T16:09:32.3248005Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3248135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3248248Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3248253Z 
2025-02-24T16:09:32.3248349Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3248580Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T16:09:32.3248585Z 
2025-02-24T16:09:32.3248728Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3248866Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3248972Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3249111Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3249234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3249353Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3249500Z err_msg = None
2025-02-24T16:09:32.3249509Z 
2025-02-24T16:09:32.3249713Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3249866Z         if err_msg is None:
2025-02-24T16:09:32.3250026Z             if left.shape != right.shape:
2025-02-24T16:09:32.3250180Z                 raise_assert_detail(
2025-02-24T16:09:32.3250630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3250754Z                 )
2025-02-24T16:09:32.3250869Z     
2025-02-24T16:09:32.3250998Z             diff = 0
2025-02-24T16:09:32.3251194Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3251342Z                 # count up differences
2025-02-24T16:09:32.3251642Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3251774Z                     diff += 1
2025-02-24T16:09:32.3251895Z     
2025-02-24T16:09:32.3252215Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3252454Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3252760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3252960Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3253073Z E           
2025-02-24T16:09:32.3253197Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3253471Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3253738Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3253747Z 
2025-02-24T16:09:32.3254070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3254079Z 
2025-02-24T16:09:32.3254256Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3254263Z 
2025-02-24T16:09:32.3254494Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600960200>
2025-02-24T16:09:32.3254669Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3254753Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3254757Z 
2025-02-24T16:09:32.3254901Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3255023Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3255113Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3255186Z         try:
2025-02-24T16:09:32.3255337Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3255418Z         except KeyError:
2025-02-24T16:09:32.3255560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3255626Z     
2025-02-24T16:09:32.3255715Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3255812Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3255904Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3256040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3256124Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3256216Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3256474Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3256551Z             else:
2025-02-24T16:09:32.3256649Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3256763Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3256772Z 
2025-02-24T16:09:32.3256908Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3257026Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3257179Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3257252Z     ???
2025-02-24T16:09:32.3257361Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3257490Z 
2025-02-24T16:09:32.3257564Z >   ???
2025-02-24T16:09:32.3257693Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3257766Z E   
2025-02-24T16:09:32.3257895Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3258010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3258086Z E          ...
2025-02-24T16:09:32.3258244Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3258450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3258735Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3258812Z E          ...
2025-02-24T16:09:32.3258901Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3259040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3259154Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3259163Z 
2025-02-24T16:09:32.3259256Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3259494Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T16:09:32.3259499Z 
2025-02-24T16:09:32.3259632Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3259771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3259877Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3260010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3260142Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3260233Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3260311Z err_msg = None
2025-02-24T16:09:32.3260315Z 
2025-02-24T16:09:32.3260435Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3260521Z         if err_msg is None:
2025-02-24T16:09:32.3260626Z             if left.shape != right.shape:
2025-02-24T16:09:32.3260713Z                 raise_assert_detail(
2025-02-24T16:09:32.3260871Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3260946Z                 )
2025-02-24T16:09:32.3261013Z     
2025-02-24T16:09:32.3261093Z             diff = 0
2025-02-24T16:09:32.3261206Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3261298Z                 # count up differences
2025-02-24T16:09:32.3261478Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3261561Z                     diff += 1
2025-02-24T16:09:32.3261631Z     
2025-02-24T16:09:32.3261722Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3261867Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3262041Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3262159Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3262230Z E           
2025-02-24T16:09:32.3262347Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3262616Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3262882Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3262972Z 
2025-02-24T16:09:32.3263293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3263298Z 
2025-02-24T16:09:32.3263479Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3263484Z 
2025-02-24T16:09:32.3263713Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009602c0>
2025-02-24T16:09:32.3263885Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3263962Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3264038Z 
2025-02-24T16:09:32.3264185Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3264305Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3264389Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3264462Z         try:
2025-02-24T16:09:32.3264604Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3264686Z         except KeyError:
2025-02-24T16:09:32.3264830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3264902Z     
2025-02-24T16:09:32.3264992Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3265084Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3265176Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3265305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3265394Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3265482Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3265594Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3265671Z             else:
2025-02-24T16:09:32.3265766Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3265878Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3265882Z 
2025-02-24T16:09:32.3266009Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3266126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3266396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3266469Z     ???
2025-02-24T16:09:32.3266581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3266586Z 
2025-02-24T16:09:32.3266651Z >   ???
2025-02-24T16:09:32.3266780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3266846Z E   
2025-02-24T16:09:32.3266977Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3267091Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3267169Z E          ...
2025-02-24T16:09:32.3267258Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3267389Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3267502Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3267633Z E          ...
2025-02-24T16:09:32.3267808Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3268036Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3268211Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3268218Z 
2025-02-24T16:09:32.3268374Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3268744Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T16:09:32.3268755Z 
2025-02-24T16:09:32.3268911Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3269055Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3269156Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3269295Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3269420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3269647Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3269729Z err_msg = None
2025-02-24T16:09:32.3269734Z 
2025-02-24T16:09:32.3269849Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3269937Z         if err_msg is None:
2025-02-24T16:09:32.3270034Z             if left.shape != right.shape:
2025-02-24T16:09:32.3270123Z                 raise_assert_detail(
2025-02-24T16:09:32.3270273Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3270348Z                 )
2025-02-24T16:09:32.3270525Z     
2025-02-24T16:09:32.3270599Z             diff = 0
2025-02-24T16:09:32.3270721Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3270811Z                 # count up differences
2025-02-24T16:09:32.3270989Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3271072Z                     diff += 1
2025-02-24T16:09:32.3271144Z     
2025-02-24T16:09:32.3271234Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3271376Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3271552Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3271668Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3271744Z E           
2025-02-24T16:09:32.3271862Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3272128Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3272400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3272408Z 
2025-02-24T16:09:32.3272728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3272733Z 
2025-02-24T16:09:32.3272905Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3272910Z 
2025-02-24T16:09:32.3273138Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600960440>
2025-02-24T16:09:32.3273310Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05e8889880>
2025-02-24T16:09:32.3273389Z attr = 'j_blues'
2025-02-24T16:09:32.3273394Z 
2025-02-24T16:09:32.3273538Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3273658Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3273751Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3273821Z         try:
2025-02-24T16:09:32.3273967Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3274048Z         except KeyError:
2025-02-24T16:09:32.3274190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3274261Z     
2025-02-24T16:09:32.3274349Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3274448Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3274538Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3274678Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3274765Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3274857Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3274971Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3275041Z             else:
2025-02-24T16:09:32.3275140Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3275359Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3275364Z 
2025-02-24T16:09:32.3275495Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3275612Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3275758Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3275830Z     ???
2025-02-24T16:09:32.3275939Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3275944Z 
2025-02-24T16:09:32.3276013Z >   ???
2025-02-24T16:09:32.3276239Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3276422Z E   
2025-02-24T16:09:32.3276557Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3276667Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3276743Z E          ...
2025-02-24T16:09:32.3276831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3276970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3277080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3277153Z E          ...
2025-02-24T16:09:32.3277242Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3277365Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3277475Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3277480Z 
2025-02-24T16:09:32.3277570Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3277790Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T16:09:32.3277797Z 
2025-02-24T16:09:32.3277932Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3278062Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3278162Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3278299Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3278429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3278527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3278602Z err_msg = None
2025-02-24T16:09:32.3278606Z 
2025-02-24T16:09:32.3278720Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3278803Z         if err_msg is None:
2025-02-24T16:09:32.3278903Z             if left.shape != right.shape:
2025-02-24T16:09:32.3278991Z                 raise_assert_detail(
2025-02-24T16:09:32.3279143Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3279217Z                 )
2025-02-24T16:09:32.3279287Z     
2025-02-24T16:09:32.3279363Z             diff = 0
2025-02-24T16:09:32.3279475Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3279571Z                 # count up differences
2025-02-24T16:09:32.3279744Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3279826Z                     diff += 1
2025-02-24T16:09:32.3279899Z     
2025-02-24T16:09:32.3279988Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3280129Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3280300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3280419Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3280496Z E           
2025-02-24T16:09:32.3280608Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3280876Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3281260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3281269Z 
2025-02-24T16:09:32.3281580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3281682Z 
2025-02-24T16:09:32.3281858Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3281863Z 
2025-02-24T16:09:32.3282098Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009611c0>
2025-02-24T16:09:32.3282268Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3282344Z attr = 'lines'
2025-02-24T16:09:32.3282352Z 
2025-02-24T16:09:32.3282492Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3282608Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3282694Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3282764Z         try:
2025-02-24T16:09:32.3282906Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3282985Z         except KeyError:
2025-02-24T16:09:32.3283126Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3283197Z     
2025-02-24T16:09:32.3283287Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3283382Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3283470Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3283603Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3283689Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3283781Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3283898Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3283968Z             else:
2025-02-24T16:09:32.3284067Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3284175Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3284179Z 
2025-02-24T16:09:32.3284310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3284423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3284575Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3284653Z     ???
2025-02-24T16:09:32.3284760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3284765Z 
2025-02-24T16:09:32.3284836Z >   ???
2025-02-24T16:09:32.3284964Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3285038Z E   
2025-02-24T16:09:32.3285170Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3285285Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3285359Z E          ...
2025-02-24T16:09:32.3285444Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3285573Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3285682Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3285754Z E          ...
2025-02-24T16:09:32.3285844Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3286022Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3286223Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3286232Z 
2025-02-24T16:09:32.3286506Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3286978Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T16:09:32.3286986Z 
2025-02-24T16:09:32.3287371Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961280>
2025-02-24T16:09:32.3287710Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3287807Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3287812Z 
2025-02-24T16:09:32.3287952Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3288072Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3288156Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3288231Z         try:
2025-02-24T16:09:32.3288382Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3288567Z         except KeyError:
2025-02-24T16:09:32.3288711Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3288780Z     
2025-02-24T16:09:32.3288872Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3288966Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3289061Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3289201Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3289577Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3289672Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3289780Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3289784Z 
2025-02-24T16:09:32.3289916Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3290032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3290037Z 
2025-02-24T16:09:32.3290175Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3290267Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3290375Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3290460Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3290606Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3290692Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3290801Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3290879Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3290957Z err_msg = None
2025-02-24T16:09:32.3290961Z 
2025-02-24T16:09:32.3291074Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3291157Z         if err_msg is None:
2025-02-24T16:09:32.3291254Z             if left.shape != right.shape:
2025-02-24T16:09:32.3291338Z                 raise_assert_detail(
2025-02-24T16:09:32.3291488Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3291563Z                 )
2025-02-24T16:09:32.3291639Z     
2025-02-24T16:09:32.3291710Z             diff = 0
2025-02-24T16:09:32.3291824Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3291918Z                 # count up differences
2025-02-24T16:09:32.3292086Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3292169Z                     diff += 1
2025-02-24T16:09:32.3292240Z     
2025-02-24T16:09:32.3292332Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3292466Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3292643Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3292751Z E           AssertionError: Series are different
2025-02-24T16:09:32.3292822Z E           
2025-02-24T16:09:32.3292928Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3293306Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3293734Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3294072Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3294154Z 
2025-02-24T16:09:32.3294473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3294740Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T16:09:32.3294745Z 
2025-02-24T16:09:32.3294972Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961340>
2025-02-24T16:09:32.3295146Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3295235Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3295240Z 
2025-02-24T16:09:32.3295383Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3295497Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3295586Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3295655Z         try:
2025-02-24T16:09:32.3295802Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3295886Z         except KeyError:
2025-02-24T16:09:32.3296024Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3296101Z     
2025-02-24T16:09:32.3296190Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3296434Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3296533Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3296679Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3296770Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3296862Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3296981Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3296986Z 
2025-02-24T16:09:32.3297114Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3297238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3297243Z 
2025-02-24T16:09:32.3297385Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3297473Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3297587Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3297673Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3297818Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3297899Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3298007Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3298091Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3298165Z err_msg = None
2025-02-24T16:09:32.3298170Z 
2025-02-24T16:09:32.3298284Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3298370Z         if err_msg is None:
2025-02-24T16:09:32.3298470Z             if left.shape != right.shape:
2025-02-24T16:09:32.3298558Z                 raise_assert_detail(
2025-02-24T16:09:32.3298704Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3298778Z                 )
2025-02-24T16:09:32.3298848Z     
2025-02-24T16:09:32.3299061Z             diff = 0
2025-02-24T16:09:32.3299177Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3299274Z                 # count up differences
2025-02-24T16:09:32.3299452Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3299529Z                     diff += 1
2025-02-24T16:09:32.3299600Z     
2025-02-24T16:09:32.3299685Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3299825Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3300102Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3300214Z E           AssertionError: Series are different
2025-02-24T16:09:32.3300288Z E           
2025-02-24T16:09:32.3300393Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3300772Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3301154Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3301539Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3301547Z 
2025-02-24T16:09:32.3301863Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3302078Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T16:09:32.3302083Z 
2025-02-24T16:09:32.3302212Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3302348Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3302450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3302589Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3302714Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3302812Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3302891Z err_msg = None
2025-02-24T16:09:32.3302895Z 
2025-02-24T16:09:32.3303005Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3303162Z         if err_msg is None:
2025-02-24T16:09:32.3303334Z             if left.shape != right.shape:
2025-02-24T16:09:32.3303475Z                 raise_assert_detail(
2025-02-24T16:09:32.3303729Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3303854Z                 )
2025-02-24T16:09:32.3303974Z     
2025-02-24T16:09:32.3304096Z             diff = 0
2025-02-24T16:09:32.3304291Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3304444Z                 # count up differences
2025-02-24T16:09:32.3304738Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3304986Z                     diff += 1
2025-02-24T16:09:32.3305102Z     
2025-02-24T16:09:32.3305255Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3305485Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3305786Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3305984Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3306105Z E           
2025-02-24T16:09:32.3306427Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3306874Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3307275Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3307285Z 
2025-02-24T16:09:32.3307597Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3307602Z 
2025-02-24T16:09:32.3307776Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3307784Z 
2025-02-24T16:09:32.3308017Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961580>
2025-02-24T16:09:32.3308225Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>, attr = 'nu'
2025-02-24T16:09:32.3308230Z 
2025-02-24T16:09:32.3308372Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3308494Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3308584Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3308660Z         try:
2025-02-24T16:09:32.3308806Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3308887Z         except KeyError:
2025-02-24T16:09:32.3309030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3309098Z     
2025-02-24T16:09:32.3309191Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3309286Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3309381Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3309519Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3309606Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3309701Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3309813Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3309817Z 
2025-02-24T16:09:32.3309950Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3310073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3310222Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3310300Z     ???
2025-02-24T16:09:32.3310412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3310416Z 
2025-02-24T16:09:32.3310488Z >   ???
2025-02-24T16:09:32.3310615Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3310688Z E   
2025-02-24T16:09:32.3310823Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3310936Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3311012Z E          ...
2025-02-24T16:09:32.3311100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3311239Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3311351Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3311427Z E          ...
2025-02-24T16:09:32.3311634Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3311761Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3311871Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3311876Z 
2025-02-24T16:09:32.3311966Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3312209Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T16:09:32.3312213Z 
2025-02-24T16:09:32.3312346Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3312550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3312650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3312783Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3312910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3313011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3313086Z err_msg = None
2025-02-24T16:09:32.3313090Z 
2025-02-24T16:09:32.3313203Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3313285Z         if err_msg is None:
2025-02-24T16:09:32.3313380Z             if left.shape != right.shape:
2025-02-24T16:09:32.3313464Z                 raise_assert_detail(
2025-02-24T16:09:32.3313615Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3313695Z                 )
2025-02-24T16:09:32.3313763Z     
2025-02-24T16:09:32.3313837Z             diff = 0
2025-02-24T16:09:32.3313948Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3314040Z                 # count up differences
2025-02-24T16:09:32.3314210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3314297Z                     diff += 1
2025-02-24T16:09:32.3314369Z     
2025-02-24T16:09:32.3314456Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3314599Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3314768Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3314884Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3314954Z E           
2025-02-24T16:09:32.3315069Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3315333Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3315598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3315610Z 
2025-02-24T16:09:32.3315920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3315925Z 
2025-02-24T16:09:32.3316099Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3316104Z 
2025-02-24T16:09:32.3316445Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961640>
2025-02-24T16:09:32.3316619Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3316703Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3316708Z 
2025-02-24T16:09:32.3316848Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3316968Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3317168Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3317241Z         try:
2025-02-24T16:09:32.3317383Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3317465Z         except KeyError:
2025-02-24T16:09:32.3317604Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3317672Z     
2025-02-24T16:09:32.3317765Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3317858Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3317949Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3318208Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3318300Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3318389Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3318508Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3318512Z 
2025-02-24T16:09:32.3318642Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3318760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3318909Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3318980Z     ???
2025-02-24T16:09:32.3319093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3319098Z 
2025-02-24T16:09:32.3319164Z >   ???
2025-02-24T16:09:32.3319298Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3319369Z E   
2025-02-24T16:09:32.3319497Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3319613Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3319684Z E          ...
2025-02-24T16:09:32.3319774Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3319903Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3320019Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3320095Z E          ...
2025-02-24T16:09:32.3320179Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3320308Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3320412Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3320417Z 
2025-02-24T16:09:32.3320512Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3320732Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T16:09:32.3320737Z 
2025-02-24T16:09:32.3320868Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3321005Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3321099Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3321235Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3321466Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3321634Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3321767Z err_msg = None
2025-02-24T16:09:32.3321774Z 
2025-02-24T16:09:32.3321960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3322100Z         if err_msg is None:
2025-02-24T16:09:32.3322261Z             if left.shape != right.shape:
2025-02-24T16:09:32.3322406Z                 raise_assert_detail(
2025-02-24T16:09:32.3322655Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3322779Z                 )
2025-02-24T16:09:32.3322900Z     
2025-02-24T16:09:32.3323023Z             diff = 0
2025-02-24T16:09:32.3323213Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3323359Z                 # count up differences
2025-02-24T16:09:32.3323659Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3323912Z                     diff += 1
2025-02-24T16:09:32.3324026Z     
2025-02-24T16:09:32.3324179Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3324406Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3324697Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3324818Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3324887Z E           
2025-02-24T16:09:32.3325001Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3325347Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3325616Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3325625Z 
2025-02-24T16:09:32.3325949Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3325954Z 
2025-02-24T16:09:32.3326130Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3326134Z 
2025-02-24T16:09:32.3326567Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961700>
2025-02-24T16:09:32.3326784Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>, attr = 'f_lu'
2025-02-24T16:09:32.3326788Z 
2025-02-24T16:09:32.3326933Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3327050Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3327141Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3327212Z         try:
2025-02-24T16:09:32.3327350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3327434Z         except KeyError:
2025-02-24T16:09:32.3327571Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3327646Z     
2025-02-24T16:09:32.3327733Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3327830Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3327922Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3328060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3328148Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3328235Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3328348Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3328352Z 
2025-02-24T16:09:32.3328482Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3328596Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3328748Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3328818Z     ???
2025-02-24T16:09:32.3328930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3328935Z 
2025-02-24T16:09:32.3329002Z >   ???
2025-02-24T16:09:32.3329131Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3329202Z E   
2025-02-24T16:09:32.3329330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3329448Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3329522Z E          ...
2025-02-24T16:09:32.3329614Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3329743Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3329860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3330063Z E          ...
2025-02-24T16:09:32.3330150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3330278Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3330385Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3330389Z 
2025-02-24T16:09:32.3330484Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3330716Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T16:09:32.3330721Z 
2025-02-24T16:09:32.3330850Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3331085Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3331183Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3331317Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3331445Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3331540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3331619Z err_msg = None
2025-02-24T16:09:32.3331623Z 
2025-02-24T16:09:32.3331735Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3331823Z         if err_msg is None:
2025-02-24T16:09:32.3331918Z             if left.shape != right.shape:
2025-02-24T16:09:32.3332008Z                 raise_assert_detail(
2025-02-24T16:09:32.3332157Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3332230Z                 )
2025-02-24T16:09:32.3332302Z     
2025-02-24T16:09:32.3332374Z             diff = 0
2025-02-24T16:09:32.3332487Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3332576Z                 # count up differences
2025-02-24T16:09:32.3332748Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3332830Z                     diff += 1
2025-02-24T16:09:32.3332897Z     
2025-02-24T16:09:32.3332986Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3333123Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3333297Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3333409Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3333483Z E           
2025-02-24T16:09:32.3333595Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3333857Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3334127Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3334135Z 
2025-02-24T16:09:32.3334451Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3334457Z 
2025-02-24T16:09:32.3334626Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3334631Z 
2025-02-24T16:09:32.3334864Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961e80>
2025-02-24T16:09:32.3335047Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3335126Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3335130Z 
2025-02-24T16:09:32.3335275Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3335394Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3335588Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3335658Z         try:
2025-02-24T16:09:32.3335803Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3335886Z         except KeyError:
2025-02-24T16:09:32.3336027Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3336102Z     
2025-02-24T16:09:32.3336188Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3336448Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3336603Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3336869Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3336959Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3337048Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3337162Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3337232Z             else:
2025-02-24T16:09:32.3337331Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3337445Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3337453Z 
2025-02-24T16:09:32.3337580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3337697Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3337846Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3337917Z     ???
2025-02-24T16:09:32.3338027Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3338035Z 
2025-02-24T16:09:32.3338107Z >   ???
2025-02-24T16:09:32.3338236Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3338305Z E   
2025-02-24T16:09:32.3338436Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3338545Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3338620Z E          ...
2025-02-24T16:09:32.3338708Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3338848Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3338965Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3339035Z E          ...
2025-02-24T16:09:32.3339124Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3339250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3339362Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3339366Z 
2025-02-24T16:09:32.3339458Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3339691Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T16:09:32.3339695Z 
2025-02-24T16:09:32.3339830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3339958Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3340063Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3340202Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3340324Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3340421Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3340496Z err_msg = None
2025-02-24T16:09:32.3340501Z 
2025-02-24T16:09:32.3340619Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3340698Z         if err_msg is None:
2025-02-24T16:09:32.3340799Z             if left.shape != right.shape:
2025-02-24T16:09:32.3340889Z                 raise_assert_detail(
2025-02-24T16:09:32.3341036Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3341109Z                 )
2025-02-24T16:09:32.3341178Z     
2025-02-24T16:09:32.3341255Z             diff = 0
2025-02-24T16:09:32.3341366Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3341576Z                 # count up differences
2025-02-24T16:09:32.3341753Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3341828Z                     diff += 1
2025-02-24T16:09:32.3341898Z     
2025-02-24T16:09:32.3341985Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3342124Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3342295Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3342510Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3342584Z E           
2025-02-24T16:09:32.3342695Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3342960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3343227Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3343236Z 
2025-02-24T16:09:32.3343550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3343557Z 
2025-02-24T16:09:32.3343732Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3343737Z 
2025-02-24T16:09:32.3343964Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600961f40>
2025-02-24T16:09:32.3344136Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3344220Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3344224Z 
2025-02-24T16:09:32.3344363Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3344484Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3344570Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3344652Z         try:
2025-02-24T16:09:32.3344795Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3344875Z         except KeyError:
2025-02-24T16:09:32.3345016Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3345091Z     
2025-02-24T16:09:32.3345180Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3345274Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3345368Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3345504Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3345589Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3345686Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3345798Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3345873Z             else:
2025-02-24T16:09:32.3345967Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3346077Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3346082Z 
2025-02-24T16:09:32.3346211Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3346426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3346659Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3346776Z     ???
2025-02-24T16:09:32.3346984Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3346992Z 
2025-02-24T16:09:32.3347116Z >   ???
2025-02-24T16:09:32.3347336Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3347455Z E   
2025-02-24T16:09:32.3347887Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3348084Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3348204Z E          ...
2025-02-24T16:09:32.3348361Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3348585Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3348773Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3348898Z E          ...
2025-02-24T16:09:32.3349043Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3349416Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3349591Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3349603Z 
2025-02-24T16:09:32.3349755Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3350129Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T16:09:32.3350137Z 
2025-02-24T16:09:32.3350348Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3350487Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3350590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3350726Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3350855Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3350949Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3351031Z err_msg = None
2025-02-24T16:09:32.3351035Z 
2025-02-24T16:09:32.3351148Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3351236Z         if err_msg is None:
2025-02-24T16:09:32.3351339Z             if left.shape != right.shape:
2025-02-24T16:09:32.3351423Z                 raise_assert_detail(
2025-02-24T16:09:32.3351575Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3351649Z                 )
2025-02-24T16:09:32.3351721Z     
2025-02-24T16:09:32.3351795Z             diff = 0
2025-02-24T16:09:32.3351909Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3352000Z                 # count up differences
2025-02-24T16:09:32.3352173Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3352251Z                     diff += 1
2025-02-24T16:09:32.3352319Z     
2025-02-24T16:09:32.3352411Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3352552Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3352729Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3352848Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3352918Z E           
2025-02-24T16:09:32.3353032Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3353299Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3353568Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3353576Z 
2025-02-24T16:09:32.3353896Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3353900Z 
2025-02-24T16:09:32.3354071Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3354166Z 
2025-02-24T16:09:32.3354397Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009620c0>
2025-02-24T16:09:32.3354569Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d0fc9f10>
2025-02-24T16:09:32.3354644Z attr = 'j_blues'
2025-02-24T16:09:32.3354648Z 
2025-02-24T16:09:32.3354793Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3354907Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3354993Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3355066Z         try:
2025-02-24T16:09:32.3355277Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3355359Z         except KeyError:
2025-02-24T16:09:32.3355497Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3355569Z     
2025-02-24T16:09:32.3355656Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3355753Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3355848Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3355979Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3356068Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3356157Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3356412Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3356488Z             else:
2025-02-24T16:09:32.3356587Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3356697Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3356705Z 
2025-02-24T16:09:32.3356829Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3356943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3357089Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3357161Z     ???
2025-02-24T16:09:32.3357278Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3357285Z 
2025-02-24T16:09:32.3357353Z >   ???
2025-02-24T16:09:32.3357484Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3357552Z E   
2025-02-24T16:09:32.3357685Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3357796Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3357868Z E          ...
2025-02-24T16:09:32.3357957Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3358087Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3358204Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3358275Z E          ...
2025-02-24T16:09:32.3358368Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3358499Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3358610Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3358615Z 
2025-02-24T16:09:32.3358711Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3358928Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T16:09:32.3358933Z 
2025-02-24T16:09:32.3359069Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3359201Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3359306Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3359445Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3359574Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3359673Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3359749Z err_msg = None
2025-02-24T16:09:32.3359754Z 
2025-02-24T16:09:32.3359871Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3360077Z         if err_msg is None:
2025-02-24T16:09:32.3360176Z             if left.shape != right.shape:
2025-02-24T16:09:32.3360265Z                 raise_assert_detail(
2025-02-24T16:09:32.3360414Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3360490Z                 )
2025-02-24T16:09:32.3360558Z     
2025-02-24T16:09:32.3360634Z             diff = 0
2025-02-24T16:09:32.3360749Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3360837Z                 # count up differences
2025-02-24T16:09:32.3361121Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3361199Z                     diff += 1
2025-02-24T16:09:32.3361271Z     
2025-02-24T16:09:32.3361359Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3361502Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3361680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3361799Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3361874Z E           
2025-02-24T16:09:32.3361986Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3362253Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3362746Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3362757Z 
2025-02-24T16:09:32.3363292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3363299Z 
2025-02-24T16:09:32.3363572Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3363578Z 
2025-02-24T16:09:32.3363812Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600962e40>
2025-02-24T16:09:32.3363983Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3364060Z attr = 'lines'
2025-02-24T16:09:32.3364065Z 
2025-02-24T16:09:32.3364205Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3364329Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3364417Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3364487Z         try:
2025-02-24T16:09:32.3364631Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3364712Z         except KeyError:
2025-02-24T16:09:32.3364854Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3364926Z     
2025-02-24T16:09:32.3365015Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3365113Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3365203Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3365340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3365425Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3365521Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3365633Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3365711Z             else:
2025-02-24T16:09:32.3365810Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3365917Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3365922Z 
2025-02-24T16:09:32.3366053Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3366167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3366585Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3366656Z     ???
2025-02-24T16:09:32.3366766Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3366771Z 
2025-02-24T16:09:32.3366841Z >   ???
2025-02-24T16:09:32.3366971Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3367042Z E   
2025-02-24T16:09:32.3367172Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3367285Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3367478Z E          ...
2025-02-24T16:09:32.3367565Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3367701Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3367825Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3367897Z E          ...
2025-02-24T16:09:32.3367987Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3368121Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3368232Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3368236Z 
2025-02-24T16:09:32.3368327Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3368601Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T16:09:32.3368606Z 
2025-02-24T16:09:32.3368836Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600962f00>
2025-02-24T16:09:32.3369008Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3369105Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3369110Z 
2025-02-24T16:09:32.3369247Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3369366Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3369455Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3369525Z         try:
2025-02-24T16:09:32.3369675Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3369755Z         except KeyError:
2025-02-24T16:09:32.3369901Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3369969Z     
2025-02-24T16:09:32.3370063Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3370162Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3370253Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3370393Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3370480Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3370579Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3370689Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3370696Z 
2025-02-24T16:09:32.3370821Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3370938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3370946Z 
2025-02-24T16:09:32.3371085Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3371175Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3371282Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3371368Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3371512Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3371594Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3371720Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3371827Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3371907Z err_msg = None
2025-02-24T16:09:32.3371911Z 
2025-02-24T16:09:32.3372027Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3372108Z         if err_msg is None:
2025-02-24T16:09:32.3372207Z             if left.shape != right.shape:
2025-02-24T16:09:32.3372412Z                 raise_assert_detail(
2025-02-24T16:09:32.3372560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3372630Z                 )
2025-02-24T16:09:32.3372701Z     
2025-02-24T16:09:32.3372780Z             diff = 0
2025-02-24T16:09:32.3372892Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3373006Z                 # count up differences
2025-02-24T16:09:32.3373182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3373339Z                     diff += 1
2025-02-24T16:09:32.3373409Z     
2025-02-24T16:09:32.3373501Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3373642Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3373815Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3373927Z E           AssertionError: Series are different
2025-02-24T16:09:32.3374001Z E           
2025-02-24T16:09:32.3374108Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3374484Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3374826Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3375166Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3375174Z 
2025-02-24T16:09:32.3375494Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3375761Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T16:09:32.3375769Z 
2025-02-24T16:09:32.3376002Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600962fc0>
2025-02-24T16:09:32.3376188Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3376397Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3376403Z 
2025-02-24T16:09:32.3376554Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3376668Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3376757Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3376826Z         try:
2025-02-24T16:09:32.3376971Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3377055Z         except KeyError:
2025-02-24T16:09:32.3377193Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3377265Z     
2025-02-24T16:09:32.3377353Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3377454Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3377543Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3377683Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3377770Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3377859Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3377973Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3378093Z 
2025-02-24T16:09:32.3378222Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3378340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3378344Z 
2025-02-24T16:09:32.3378487Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3378571Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3378682Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3378761Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3379010Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3379097Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3379204Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3379284Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3379362Z err_msg = None
2025-02-24T16:09:32.3379366Z 
2025-02-24T16:09:32.3379479Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3379559Z         if err_msg is None:
2025-02-24T16:09:32.3379656Z             if left.shape != right.shape:
2025-02-24T16:09:32.3379744Z                 raise_assert_detail(
2025-02-24T16:09:32.3379889Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3379962Z                 )
2025-02-24T16:09:32.3380031Z     
2025-02-24T16:09:32.3380108Z             diff = 0
2025-02-24T16:09:32.3380220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3380315Z                 # count up differences
2025-02-24T16:09:32.3380490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3380567Z                     diff += 1
2025-02-24T16:09:32.3380641Z     
2025-02-24T16:09:32.3380729Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3380953Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3381257Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3381440Z E           AssertionError: Series are different
2025-02-24T16:09:32.3381565Z E           
2025-02-24T16:09:32.3381733Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3382259Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3382646Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3383027Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3383040Z 
2025-02-24T16:09:32.3383353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3383566Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T16:09:32.3383570Z 
2025-02-24T16:09:32.3383796Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3383928Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3384030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3384164Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3384294Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3384461Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3384541Z err_msg = None
2025-02-24T16:09:32.3384545Z 
2025-02-24T16:09:32.3384657Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3384743Z         if err_msg is None:
2025-02-24T16:09:32.3384839Z             if left.shape != right.shape:
2025-02-24T16:09:32.3384922Z                 raise_assert_detail(
2025-02-24T16:09:32.3385079Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3385149Z                 )
2025-02-24T16:09:32.3385221Z     
2025-02-24T16:09:32.3385294Z             diff = 0
2025-02-24T16:09:32.3385408Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3385502Z                 # count up differences
2025-02-24T16:09:32.3385674Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3385755Z                     diff += 1
2025-02-24T16:09:32.3385824Z     
2025-02-24T16:09:32.3385917Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3386051Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3386226Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3386494Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3386569Z E           
2025-02-24T16:09:32.3386690Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3386951Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3387219Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3387227Z 
2025-02-24T16:09:32.3387534Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3387538Z 
2025-02-24T16:09:32.3387710Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3387721Z 
2025-02-24T16:09:32.3387946Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963200>
2025-02-24T16:09:32.3388156Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>, attr = 'nu'
2025-02-24T16:09:32.3388160Z 
2025-02-24T16:09:32.3388303Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3388423Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3388508Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3388581Z         try:
2025-02-24T16:09:32.3388729Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3388810Z         except KeyError:
2025-02-24T16:09:32.3388953Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3389022Z     
2025-02-24T16:09:32.3389113Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3389208Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3389443Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3389579Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3389664Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3389759Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3389869Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3389874Z 
2025-02-24T16:09:32.3390007Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3390126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3390378Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3390451Z     ???
2025-02-24T16:09:32.3390564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3390568Z 
2025-02-24T16:09:32.3390641Z >   ???
2025-02-24T16:09:32.3390771Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3390843Z E   
2025-02-24T16:09:32.3390982Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3391094Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3391169Z E          ...
2025-02-24T16:09:32.3391258Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3391396Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3391508Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3391582Z E          ...
2025-02-24T16:09:32.3391674Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3391803Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3391913Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3391918Z 
2025-02-24T16:09:32.3392008Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3392250Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T16:09:32.3392255Z 
2025-02-24T16:09:32.3392391Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3392517Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3392618Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3392750Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3392877Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3392980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3393054Z err_msg = None
2025-02-24T16:09:32.3393059Z 
2025-02-24T16:09:32.3393175Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3393257Z         if err_msg is None:
2025-02-24T16:09:32.3393357Z             if left.shape != right.shape:
2025-02-24T16:09:32.3393442Z                 raise_assert_detail(
2025-02-24T16:09:32.3393593Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3393668Z                 )
2025-02-24T16:09:32.3393737Z     
2025-02-24T16:09:32.3393815Z             diff = 0
2025-02-24T16:09:32.3393927Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3394019Z                 # count up differences
2025-02-24T16:09:32.3394189Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3394270Z                     diff += 1
2025-02-24T16:09:32.3394344Z     
2025-02-24T16:09:32.3394435Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3394576Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3394757Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3394874Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3394952Z E           
2025-02-24T16:09:32.3395169Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3395432Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3395695Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3395775Z 
2025-02-24T16:09:32.3396086Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3396090Z 
2025-02-24T16:09:32.3396369Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3396377Z 
2025-02-24T16:09:32.3396604Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009632c0>
2025-02-24T16:09:32.3396779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3396868Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3396873Z 
2025-02-24T16:09:32.3397010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3397129Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3397212Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3397292Z         try:
2025-02-24T16:09:32.3397431Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3397515Z         except KeyError:
2025-02-24T16:09:32.3397658Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3397725Z     
2025-02-24T16:09:32.3397816Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3397910Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3398008Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3398140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3398231Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3398325Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3398433Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3398437Z 
2025-02-24T16:09:32.3398566Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3398677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3398831Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3398967Z     ???
2025-02-24T16:09:32.3399163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3399171Z 
2025-02-24T16:09:32.3399291Z >   ???
2025-02-24T16:09:32.3399508Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3399632Z E   
2025-02-24T16:09:32.3399850Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3400041Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3400150Z E          ...
2025-02-24T16:09:32.3400240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3400375Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3400488Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3400564Z E          ...
2025-02-24T16:09:32.3400653Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3400783Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3400893Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3400898Z 
2025-02-24T16:09:32.3400986Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3401198Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T16:09:32.3401328Z 
2025-02-24T16:09:32.3401461Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3401593Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3401697Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3401827Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3401953Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3402152Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3402231Z err_msg = None
2025-02-24T16:09:32.3402235Z 
2025-02-24T16:09:32.3402347Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3402427Z         if err_msg is None:
2025-02-24T16:09:32.3402524Z             if left.shape != right.shape:
2025-02-24T16:09:32.3402608Z                 raise_assert_detail(
2025-02-24T16:09:32.3402758Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3402832Z                 )
2025-02-24T16:09:32.3402900Z     
2025-02-24T16:09:32.3402976Z             diff = 0
2025-02-24T16:09:32.3403085Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3403177Z                 # count up differences
2025-02-24T16:09:32.3403347Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3403430Z                     diff += 1
2025-02-24T16:09:32.3403506Z     
2025-02-24T16:09:32.3403594Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3403733Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3403907Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3404023Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3404095Z E           
2025-02-24T16:09:32.3404215Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3404482Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3404745Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3404754Z 
2025-02-24T16:09:32.3405063Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3405068Z 
2025-02-24T16:09:32.3405246Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3405251Z 
2025-02-24T16:09:32.3405476Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963380>
2025-02-24T16:09:32.3405690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>, attr = 'f_lu'
2025-02-24T16:09:32.3405694Z 
2025-02-24T16:09:32.3405838Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3405954Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3406042Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3406116Z         try:
2025-02-24T16:09:32.3406398Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3406487Z         except KeyError:
2025-02-24T16:09:32.3406629Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3406702Z     
2025-02-24T16:09:32.3406790Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3406888Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3407094Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3407230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3407315Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3407410Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3407522Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3407527Z 
2025-02-24T16:09:32.3407654Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3407767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3408034Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3408110Z     ???
2025-02-24T16:09:32.3408219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3408227Z 
2025-02-24T16:09:32.3408296Z >   ???
2025-02-24T16:09:32.3408428Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3408499Z E   
2025-02-24T16:09:32.3408633Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3408743Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3408818Z E          ...
2025-02-24T16:09:32.3408908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3409040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3409156Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3409227Z E          ...
2025-02-24T16:09:32.3409317Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3409445Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3409554Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3409558Z 
2025-02-24T16:09:32.3409650Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3409878Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T16:09:32.3409886Z 
2025-02-24T16:09:32.3410020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3410144Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3410252Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3410393Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3410518Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3410621Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3410697Z err_msg = None
2025-02-24T16:09:32.3410700Z 
2025-02-24T16:09:32.3410817Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3410905Z         if err_msg is None:
2025-02-24T16:09:32.3411000Z             if left.shape != right.shape:
2025-02-24T16:09:32.3411090Z                 raise_assert_detail(
2025-02-24T16:09:32.3411242Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3411319Z                 )
2025-02-24T16:09:32.3411391Z     
2025-02-24T16:09:32.3411467Z             diff = 0
2025-02-24T16:09:32.3411580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3411669Z                 # count up differences
2025-02-24T16:09:32.3411849Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3411927Z                     diff += 1
2025-02-24T16:09:32.3412004Z     
2025-02-24T16:09:32.3412096Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3412241Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3412416Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3412528Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3412606Z E           
2025-02-24T16:09:32.3412805Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3413072Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3413342Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3413419Z 
2025-02-24T16:09:32.3413728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3413733Z 
2025-02-24T16:09:32.3413907Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3413914Z 
2025-02-24T16:09:32.3414147Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963b00>
2025-02-24T16:09:32.3414317Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3414401Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3414405Z 
2025-02-24T16:09:32.3414546Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3414669Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3414763Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3414837Z         try:
2025-02-24T16:09:32.3414981Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3415063Z         except KeyError:
2025-02-24T16:09:32.3415205Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3415274Z     
2025-02-24T16:09:32.3415371Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3415476Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3415565Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3415708Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3415793Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3415889Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3415999Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3416077Z             else:
2025-02-24T16:09:32.3416179Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3416443Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3416460Z 
2025-02-24T16:09:32.3416608Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3423790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3424038Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3424175Z     ???
2025-02-24T16:09:32.3424371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3424385Z 
2025-02-24T16:09:32.3424462Z >   ???
2025-02-24T16:09:32.3424601Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3424675Z E   
2025-02-24T16:09:32.3424817Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3424935Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3425010Z E          ...
2025-02-24T16:09:32.3425101Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3425239Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3425360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3425440Z E          ...
2025-02-24T16:09:32.3425530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3425654Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3425767Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3425937Z 
2025-02-24T16:09:32.3426035Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3426416Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T16:09:32.3426422Z 
2025-02-24T16:09:32.3426568Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3426704Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3426808Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3427061Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3427188Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3427285Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3427359Z err_msg = None
2025-02-24T16:09:32.3427364Z 
2025-02-24T16:09:32.3427488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3427567Z         if err_msg is None:
2025-02-24T16:09:32.3427669Z             if left.shape != right.shape:
2025-02-24T16:09:32.3427755Z                 raise_assert_detail(
2025-02-24T16:09:32.3427912Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3427987Z                 )
2025-02-24T16:09:32.3428054Z     
2025-02-24T16:09:32.3428130Z             diff = 0
2025-02-24T16:09:32.3428245Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3428339Z                 # count up differences
2025-02-24T16:09:32.3428519Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3428602Z                     diff += 1
2025-02-24T16:09:32.3428672Z     
2025-02-24T16:09:32.3428761Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3428904Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3429079Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3429200Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3429270Z E           
2025-02-24T16:09:32.3429392Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3429662Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3429934Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3429948Z 
2025-02-24T16:09:32.3430274Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3430279Z 
2025-02-24T16:09:32.3430461Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3430466Z 
2025-02-24T16:09:32.3430695Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963bc0>
2025-02-24T16:09:32.3430870Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3430953Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3430961Z 
2025-02-24T16:09:32.3431101Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3431223Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3431310Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3431385Z         try:
2025-02-24T16:09:32.3431527Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3431615Z         except KeyError:
2025-02-24T16:09:32.3431881Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3431948Z     
2025-02-24T16:09:32.3432039Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3432133Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3432227Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3432360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3432449Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3432541Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3432727Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3432801Z             else:
2025-02-24T16:09:32.3432898Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3433008Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3433013Z 
2025-02-24T16:09:32.3433141Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3433264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3433418Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3433485Z     ???
2025-02-24T16:09:32.3433599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3433604Z 
2025-02-24T16:09:32.3433671Z >   ???
2025-02-24T16:09:32.3433804Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3433873Z E   
2025-02-24T16:09:32.3434002Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3434119Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3434189Z E          ...
2025-02-24T16:09:32.3434285Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3434416Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3434532Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3434606Z E          ...
2025-02-24T16:09:32.3434695Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3434821Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3434930Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3434934Z 
2025-02-24T16:09:32.3435031Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3435246Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T16:09:32.3435256Z 
2025-02-24T16:09:32.3435418Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3435663Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3435830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3436058Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3436396Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3436563Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3436699Z err_msg = None
2025-02-24T16:09:32.3436705Z 
2025-02-24T16:09:32.3436831Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3436918Z         if err_msg is None:
2025-02-24T16:09:32.3437016Z             if left.shape != right.shape:
2025-02-24T16:09:32.3437105Z                 raise_assert_detail(
2025-02-24T16:09:32.3437257Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3437331Z                 )
2025-02-24T16:09:32.3437405Z     
2025-02-24T16:09:32.3437477Z             diff = 0
2025-02-24T16:09:32.3437590Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3437679Z                 # count up differences
2025-02-24T16:09:32.3437856Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3437939Z                     diff += 1
2025-02-24T16:09:32.3438141Z     
2025-02-24T16:09:32.3438234Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3438371Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3438546Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3438661Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3438734Z E           
2025-02-24T16:09:32.3438852Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3439116Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3439513Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3439522Z 
2025-02-24T16:09:32.3439839Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3439844Z 
2025-02-24T16:09:32.3440016Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3440021Z 
2025-02-24T16:09:32.3440252Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600963d40>
2025-02-24T16:09:32.3440428Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05d698d820>
2025-02-24T16:09:32.3440501Z attr = 'j_blues'
2025-02-24T16:09:32.3440506Z 
2025-02-24T16:09:32.3440648Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3440763Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3440855Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3440924Z         try:
2025-02-24T16:09:32.3441068Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3441153Z         except KeyError:
2025-02-24T16:09:32.3441291Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3441362Z     
2025-02-24T16:09:32.3441449Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3441551Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3441641Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3441778Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3441868Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3441956Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3442072Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3442142Z             else:
2025-02-24T16:09:32.3442243Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3442350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3442358Z 
2025-02-24T16:09:32.3442484Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3442603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3442754Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3442827Z     ???
2025-02-24T16:09:32.3442937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3442942Z 
2025-02-24T16:09:32.3443014Z >   ???
2025-02-24T16:09:32.3443149Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3443216Z E   
2025-02-24T16:09:32.3443353Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3443465Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3443543Z E          ...
2025-02-24T16:09:32.3443633Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3443857Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3443972Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3444040Z E          ...
2025-02-24T16:09:32.3444127Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3444251Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3444357Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3444362Z 
2025-02-24T16:09:32.3444454Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3444666Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T16:09:32.3444746Z 
2025-02-24T16:09:32.3444882Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3445017Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3445121Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3445258Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3445390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3445486Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3445561Z err_msg = None
2025-02-24T16:09:32.3445566Z 
2025-02-24T16:09:32.3445684Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3445765Z         if err_msg is None:
2025-02-24T16:09:32.3445866Z             if left.shape != right.shape:
2025-02-24T16:09:32.3445958Z                 raise_assert_detail(
2025-02-24T16:09:32.3446107Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3446180Z                 )
2025-02-24T16:09:32.3446247Z     
2025-02-24T16:09:32.3446449Z             diff = 0
2025-02-24T16:09:32.3446566Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3446663Z                 # count up differences
2025-02-24T16:09:32.3446839Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3446917Z                     diff += 1
2025-02-24T16:09:32.3446990Z     
2025-02-24T16:09:32.3447077Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3447220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3447396Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3447514Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3447595Z E           
2025-02-24T16:09:32.3447707Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3448005Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3448275Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3448284Z 
2025-02-24T16:09:32.3448594Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3448601Z 
2025-02-24T16:09:32.3448780Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3448784Z 
2025-02-24T16:09:32.3449013Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990b00>
2025-02-24T16:09:32.3449182Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3449376Z attr = 'lines'
2025-02-24T16:09:32.3449380Z 
2025-02-24T16:09:32.3449521Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3449639Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3449721Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3449795Z         try:
2025-02-24T16:09:32.3449945Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3450026Z         except KeyError:
2025-02-24T16:09:32.3450168Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3450237Z     
2025-02-24T16:09:32.3450436Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3450528Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3450621Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3450761Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3450845Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3450939Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3451055Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3451130Z             else:
2025-02-24T16:09:32.3451225Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3451336Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3451340Z 
2025-02-24T16:09:32.3451469Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3451584Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3451735Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3451807Z     ???
2025-02-24T16:09:32.3451920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3451924Z 
2025-02-24T16:09:32.3452048Z >   ???
2025-02-24T16:09:32.3452267Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3452385Z E   
2025-02-24T16:09:32.3452599Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3452793Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3452918Z E          ...
2025-02-24T16:09:32.3453030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3453165Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3453278Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3453351Z E          ...
2025-02-24T16:09:32.3453437Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3453565Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3453674Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3453682Z 
2025-02-24T16:09:32.3453772Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3454049Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T16:09:32.3454054Z 
2025-02-24T16:09:32.3454279Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990bc0>
2025-02-24T16:09:32.3454455Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3454544Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3454553Z 
2025-02-24T16:09:32.3454689Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3454806Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3454886Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3454958Z         try:
2025-02-24T16:09:32.3455097Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3455183Z         except KeyError:
2025-02-24T16:09:32.3455324Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3455390Z     
2025-02-24T16:09:32.3455481Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3455573Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3455665Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3455795Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3455995Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3456091Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3456198Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3456203Z 
2025-02-24T16:09:32.3456466Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3456580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3456585Z 
2025-02-24T16:09:32.3456730Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3456968Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3457076Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3457161Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3457299Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3457389Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3457492Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3457573Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3457655Z err_msg = None
2025-02-24T16:09:32.3457659Z 
2025-02-24T16:09:32.3457770Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3457857Z         if err_msg is None:
2025-02-24T16:09:32.3457952Z             if left.shape != right.shape:
2025-02-24T16:09:32.3458040Z                 raise_assert_detail(
2025-02-24T16:09:32.3458193Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3458262Z                 )
2025-02-24T16:09:32.3458330Z     
2025-02-24T16:09:32.3458401Z             diff = 0
2025-02-24T16:09:32.3458511Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3458601Z                 # count up differences
2025-02-24T16:09:32.3458772Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3458854Z                     diff += 1
2025-02-24T16:09:32.3458922Z     
2025-02-24T16:09:32.3459012Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3459152Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3459324Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3459431Z E           AssertionError: Series are different
2025-02-24T16:09:32.3459500Z E           
2025-02-24T16:09:32.3459603Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3459983Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3460326Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3460665Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3460673Z 
2025-02-24T16:09:32.3460997Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3461407Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T16:09:32.3461412Z 
2025-02-24T16:09:32.3461649Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990c80>
2025-02-24T16:09:32.3461827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3461918Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3461922Z 
2025-02-24T16:09:32.3462065Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3462257Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3462344Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3462415Z         try:
2025-02-24T16:09:32.3462560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3462644Z         except KeyError:
2025-02-24T16:09:32.3462782Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3462855Z     
2025-02-24T16:09:32.3462941Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3463037Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3463124Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3463263Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3463350Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3463439Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3463552Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3463557Z 
2025-02-24T16:09:32.3463687Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3463808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3463813Z 
2025-02-24T16:09:32.3463955Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3464040Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3464149Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3464232Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3464374Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3464457Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3464558Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3464638Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3464714Z err_msg = None
2025-02-24T16:09:32.3464718Z 
2025-02-24T16:09:32.3464835Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3464919Z         if err_msg is None:
2025-02-24T16:09:32.3465019Z             if left.shape != right.shape:
2025-02-24T16:09:32.3465106Z                 raise_assert_detail(
2025-02-24T16:09:32.3465253Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3465327Z                 )
2025-02-24T16:09:32.3465398Z     
2025-02-24T16:09:32.3465476Z             diff = 0
2025-02-24T16:09:32.3465589Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3465684Z                 # count up differences
2025-02-24T16:09:32.3465861Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3465937Z                     diff += 1
2025-02-24T16:09:32.3466008Z     
2025-02-24T16:09:32.3466095Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3466234Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3466512Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3466622Z E           AssertionError: Series are different
2025-02-24T16:09:32.3466692Z E           
2025-02-24T16:09:32.3466794Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3467169Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3467665Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3468147Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3468161Z 
2025-02-24T16:09:32.3468477Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3468692Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T16:09:32.3468697Z 
2025-02-24T16:09:32.3468827Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3468960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3469062Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3469199Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3469324Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3469421Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3469501Z err_msg = None
2025-02-24T16:09:32.3469505Z 
2025-02-24T16:09:32.3469614Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3469698Z         if err_msg is None:
2025-02-24T16:09:32.3469795Z             if left.shape != right.shape:
2025-02-24T16:09:32.3469880Z                 raise_assert_detail(
2025-02-24T16:09:32.3470030Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3470102Z                 )
2025-02-24T16:09:32.3470174Z     
2025-02-24T16:09:32.3470245Z             diff = 0
2025-02-24T16:09:32.3470364Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3470456Z                 # count up differences
2025-02-24T16:09:32.3470685Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3470834Z                     diff += 1
2025-02-24T16:09:32.3470948Z     
2025-02-24T16:09:32.3471097Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3471320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3471619Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3471764Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3471834Z E           
2025-02-24T16:09:32.3471951Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3472219Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3472492Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3472589Z 
2025-02-24T16:09:32.3472900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3472905Z 
2025-02-24T16:09:32.3473077Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3473087Z 
2025-02-24T16:09:32.3473388Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990ec0>
2025-02-24T16:09:32.3473601Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>, attr = 'nu'
2025-02-24T16:09:32.3473605Z 
2025-02-24T16:09:32.3473746Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3473867Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3473957Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3474026Z         try:
2025-02-24T16:09:32.3474168Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3474248Z         except KeyError:
2025-02-24T16:09:32.3474394Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3474463Z     
2025-02-24T16:09:32.3474555Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3474650Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3474743Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3474881Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3474964Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3475058Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3475168Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3475172Z 
2025-02-24T16:09:32.3475301Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3475422Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3475571Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3475649Z     ???
2025-02-24T16:09:32.3475757Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3475761Z 
2025-02-24T16:09:32.3475832Z >   ???
2025-02-24T16:09:32.3475962Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3476033Z E   
2025-02-24T16:09:32.3476167Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3476394Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3476472Z E          ...
2025-02-24T16:09:32.3476558Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3476691Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3476803Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3476881Z E          ...
2025-02-24T16:09:32.3476968Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3477092Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3477201Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3477206Z 
2025-02-24T16:09:32.3477294Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3477532Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T16:09:32.3477537Z 
2025-02-24T16:09:32.3477670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3477800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3477901Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3478034Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3478160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3478379Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3478453Z err_msg = None
2025-02-24T16:09:32.3478457Z 
2025-02-24T16:09:32.3478569Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3478649Z         if err_msg is None:
2025-02-24T16:09:32.3478748Z             if left.shape != right.shape:
2025-02-24T16:09:32.3478834Z                 raise_assert_detail(
2025-02-24T16:09:32.3478978Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3479154Z                 )
2025-02-24T16:09:32.3479221Z     
2025-02-24T16:09:32.3479295Z             diff = 0
2025-02-24T16:09:32.3479406Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3479501Z                 # count up differences
2025-02-24T16:09:32.3479670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3479753Z                     diff += 1
2025-02-24T16:09:32.3479826Z     
2025-02-24T16:09:32.3479913Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3480051Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3480222Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3480339Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3480412Z E           
2025-02-24T16:09:32.3480522Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3480791Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3481053Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3481064Z 
2025-02-24T16:09:32.3481371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3481376Z 
2025-02-24T16:09:32.3481553Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3481558Z 
2025-02-24T16:09:32.3481784Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600990f80>
2025-02-24T16:09:32.3481957Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3482039Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3482043Z 
2025-02-24T16:09:32.3482180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3482298Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3482385Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3482458Z         try:
2025-02-24T16:09:32.3482598Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3482680Z         except KeyError:
2025-02-24T16:09:32.3482822Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3482892Z     
2025-02-24T16:09:32.3482981Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3483074Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3483167Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3483300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3483388Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3483479Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3483590Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3483594Z 
2025-02-24T16:09:32.3483726Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3483942Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3484091Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3484164Z     ???
2025-02-24T16:09:32.3484270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3484275Z 
2025-02-24T16:09:32.3484344Z >   ???
2025-02-24T16:09:32.3484469Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3484539Z E   
2025-02-24T16:09:32.3484664Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3484863Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3484935Z E          ...
2025-02-24T16:09:32.3485019Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3485151Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3485261Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3485338Z E          ...
2025-02-24T16:09:32.3485425Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3485549Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3485656Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3485660Z 
2025-02-24T16:09:32.3485748Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3485957Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T16:09:32.3485962Z 
2025-02-24T16:09:32.3486089Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3486223Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3486444Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3486578Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3486705Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3486803Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3486880Z err_msg = None
2025-02-24T16:09:32.3486884Z 
2025-02-24T16:09:32.3486996Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3487075Z         if err_msg is None:
2025-02-24T16:09:32.3487170Z             if left.shape != right.shape:
2025-02-24T16:09:32.3487253Z                 raise_assert_detail(
2025-02-24T16:09:32.3487400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3487476Z                 )
2025-02-24T16:09:32.3487543Z     
2025-02-24T16:09:32.3487619Z             diff = 0
2025-02-24T16:09:32.3487728Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3487822Z                 # count up differences
2025-02-24T16:09:32.3487993Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3488077Z                     diff += 1
2025-02-24T16:09:32.3488148Z     
2025-02-24T16:09:32.3488235Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3488375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3488545Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3488662Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3488732Z E           
2025-02-24T16:09:32.3488846Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3489124Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3489616Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3489776Z 
2025-02-24T16:09:32.3490271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3490278Z 
2025-02-24T16:09:32.3490455Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3490567Z 
2025-02-24T16:09:32.3490791Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600991040>
2025-02-24T16:09:32.3491004Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>, attr = 'f_lu'
2025-02-24T16:09:32.3491009Z 
2025-02-24T16:09:32.3491150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3491266Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3491356Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3491430Z         try:
2025-02-24T16:09:32.3491574Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3491654Z         except KeyError:
2025-02-24T16:09:32.3491795Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3491865Z     
2025-02-24T16:09:32.3491951Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3492047Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3492135Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3492278Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3492362Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3492454Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3492567Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3492572Z 
2025-02-24T16:09:32.3492697Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3492816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3492964Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3493036Z     ???
2025-02-24T16:09:32.3493142Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3493149Z 
2025-02-24T16:09:32.3493215Z >   ???
2025-02-24T16:09:32.3493345Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3493413Z E   
2025-02-24T16:09:32.3493543Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3493654Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3493730Z E          ...
2025-02-24T16:09:32.3493818Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3493944Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3494062Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3494140Z E          ...
2025-02-24T16:09:32.3494223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3494351Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3494457Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3494462Z 
2025-02-24T16:09:32.3494555Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3494788Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T16:09:32.3494793Z 
2025-02-24T16:09:32.3494921Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3495055Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3495150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3495286Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3495411Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3495592Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3495673Z err_msg = None
2025-02-24T16:09:32.3495677Z 
2025-02-24T16:09:32.3495786Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3495873Z         if err_msg is None:
2025-02-24T16:09:32.3495972Z             if left.shape != right.shape:
2025-02-24T16:09:32.3496055Z                 raise_assert_detail(
2025-02-24T16:09:32.3496202Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3496487Z                 )
2025-02-24T16:09:32.3496557Z     
2025-02-24T16:09:32.3496630Z             diff = 0
2025-02-24T16:09:32.3496747Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3496841Z                 # count up differences
2025-02-24T16:09:32.3497011Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3497096Z                     diff += 1
2025-02-24T16:09:32.3497163Z     
2025-02-24T16:09:32.3497253Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3497390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3497562Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3497677Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3497748Z E           
2025-02-24T16:09:32.3497869Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3498135Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3498403Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3498411Z 
2025-02-24T16:09:32.3498726Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3498731Z 
2025-02-24T16:09:32.3498899Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3498907Z 
2025-02-24T16:09:32.3499131Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009917c0>
2025-02-24T16:09:32.3499306Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3499384Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3499388Z 
2025-02-24T16:09:32.3499529Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3499648Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3499735Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3499808Z         try:
2025-02-24T16:09:32.3499946Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3500029Z         except KeyError:
2025-02-24T16:09:32.3500166Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3500236Z     
2025-02-24T16:09:32.3500322Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3500418Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3500511Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3500643Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3500727Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3500827Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3500943Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3501015Z             else:
2025-02-24T16:09:32.3501237Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3501353Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3501357Z 
2025-02-24T16:09:32.3501490Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3501605Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3501759Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3501834Z     ???
2025-02-24T16:09:32.3501943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3502064Z 
2025-02-24T16:09:32.3502138Z >   ???
2025-02-24T16:09:32.3502267Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3502339Z E   
2025-02-24T16:09:32.3502470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3502585Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3502659Z E          ...
2025-02-24T16:09:32.3502751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3502886Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3502996Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3503072Z E          ...
2025-02-24T16:09:32.3503163Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3503290Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3503401Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3503406Z 
2025-02-24T16:09:32.3503496Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3503739Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T16:09:32.3503744Z 
2025-02-24T16:09:32.3503873Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3504007Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3504114Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3504249Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3504379Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3504471Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3504551Z err_msg = None
2025-02-24T16:09:32.3504555Z 
2025-02-24T16:09:32.3504669Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3504749Z         if err_msg is None:
2025-02-24T16:09:32.3504854Z             if left.shape != right.shape:
2025-02-24T16:09:32.3504939Z                 raise_assert_detail(
2025-02-24T16:09:32.3505093Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3505168Z                 )
2025-02-24T16:09:32.3505235Z     
2025-02-24T16:09:32.3505310Z             diff = 0
2025-02-24T16:09:32.3505425Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3505517Z                 # count up differences
2025-02-24T16:09:32.3505688Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3505770Z                     diff += 1
2025-02-24T16:09:32.3505841Z     
2025-02-24T16:09:32.3505929Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3506071Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3506241Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3506464Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3506537Z E           
2025-02-24T16:09:32.3506657Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3507038Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3507682Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3507692Z 
2025-02-24T16:09:32.3508074Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3508188Z 
2025-02-24T16:09:32.3508365Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3508369Z 
2025-02-24T16:09:32.3508595Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600991880>
2025-02-24T16:09:32.3508770Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3508851Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3508859Z 
2025-02-24T16:09:32.3509000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3509121Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3509206Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3509278Z         try:
2025-02-24T16:09:32.3509421Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3509505Z         except KeyError:
2025-02-24T16:09:32.3509647Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3509718Z     
2025-02-24T16:09:32.3509809Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3509904Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3509999Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3510133Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3510224Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3510401Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3510586Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3510701Z             else:
2025-02-24T16:09:32.3510869Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3511058Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3511065Z 
2025-02-24T16:09:32.3511274Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3511471Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3511723Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3511795Z     ???
2025-02-24T16:09:32.3511908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3511913Z 
2025-02-24T16:09:32.3511984Z >   ???
2025-02-24T16:09:32.3512116Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3512189Z E   
2025-02-24T16:09:32.3512321Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3512433Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3512504Z E          ...
2025-02-24T16:09:32.3512593Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3512724Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3512841Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3512913Z E          ...
2025-02-24T16:09:32.3512997Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3513132Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3513235Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3513239Z 
2025-02-24T16:09:32.3513332Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3513545Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T16:09:32.3513553Z 
2025-02-24T16:09:32.3513783Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3513915Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3514015Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3514154Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3514276Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3514371Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3514538Z err_msg = None
2025-02-24T16:09:32.3514543Z 
2025-02-24T16:09:32.3514654Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3514742Z         if err_msg is None:
2025-02-24T16:09:32.3514837Z             if left.shape != right.shape:
2025-02-24T16:09:32.3514924Z                 raise_assert_detail(
2025-02-24T16:09:32.3515076Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3515145Z                 )
2025-02-24T16:09:32.3515215Z     
2025-02-24T16:09:32.3515285Z             diff = 0
2025-02-24T16:09:32.3515403Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3515491Z                 # count up differences
2025-02-24T16:09:32.3515665Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3515748Z                     diff += 1
2025-02-24T16:09:32.3515816Z     
2025-02-24T16:09:32.3515911Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3516049Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3516223Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3516482Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3516559Z E           
2025-02-24T16:09:32.3516673Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3516937Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3517203Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3517211Z 
2025-02-24T16:09:32.3517524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3517528Z 
2025-02-24T16:09:32.3517701Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3517708Z 
2025-02-24T16:09:32.3517937Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600991a00>
2025-02-24T16:09:32.3518105Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddbd610>
2025-02-24T16:09:32.3518182Z attr = 'j_blues'
2025-02-24T16:09:32.3518187Z 
2025-02-24T16:09:32.3518329Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3518446Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3518533Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3518606Z         try:
2025-02-24T16:09:32.3518749Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3518834Z         except KeyError:
2025-02-24T16:09:32.3518972Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3519042Z     
2025-02-24T16:09:32.3519130Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3519230Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3519445Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3519581Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3519670Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3519758Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3519872Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3519942Z             else:
2025-02-24T16:09:32.3520042Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3520146Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3520251Z 
2025-02-24T16:09:32.3520383Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3520500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3520647Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3520717Z     ???
2025-02-24T16:09:32.3520825Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3520833Z 
2025-02-24T16:09:32.3520905Z >   ???
2025-02-24T16:09:32.3521035Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3521103Z E   
2025-02-24T16:09:32.3521231Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3521339Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3521412Z E          ...
2025-02-24T16:09:32.3521498Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3521632Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3521751Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3521821Z E          ...
2025-02-24T16:09:32.3521908Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3522032Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3522141Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3522148Z 
2025-02-24T16:09:32.3522235Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3522510Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T16:09:32.3522515Z 
2025-02-24T16:09:32.3522646Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3522772Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3522873Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3523006Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3523136Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3523234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3523307Z err_msg = None
2025-02-24T16:09:32.3523311Z 
2025-02-24T16:09:32.3523424Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3523505Z         if err_msg is None:
2025-02-24T16:09:32.3523604Z             if left.shape != right.shape:
2025-02-24T16:09:32.3523690Z                 raise_assert_detail(
2025-02-24T16:09:32.3523836Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3523913Z                 )
2025-02-24T16:09:32.3523980Z     
2025-02-24T16:09:32.3524055Z             diff = 0
2025-02-24T16:09:32.3524164Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3524259Z                 # count up differences
2025-02-24T16:09:32.3524434Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3524510Z                     diff += 1
2025-02-24T16:09:32.3524580Z     
2025-02-24T16:09:32.3524668Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3524814Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3525080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3525196Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3525272Z E           
2025-02-24T16:09:32.3525383Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3525784Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3526527Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3526548Z 
2025-02-24T16:09:32.3526933Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3526939Z 
2025-02-24T16:09:32.3527114Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3527119Z 
2025-02-24T16:09:32.3527344Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992780>
2025-02-24T16:09:32.3527518Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3527595Z attr = 'lines'
2025-02-24T16:09:32.3527600Z 
2025-02-24T16:09:32.3527742Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3527860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3527944Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3528016Z         try:
2025-02-24T16:09:32.3528171Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3528254Z         except KeyError:
2025-02-24T16:09:32.3528398Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3528466Z     
2025-02-24T16:09:32.3528555Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3528648Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3528741Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3528878Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3528963Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3529054Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3529162Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3529238Z             else:
2025-02-24T16:09:32.3529331Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3529439Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3529443Z 
2025-02-24T16:09:32.3529568Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3529680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3529834Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3529904Z     ???
2025-02-24T16:09:32.3530018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3530022Z 
2025-02-24T16:09:32.3530092Z >   ???
2025-02-24T16:09:32.3530221Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3530291Z E   
2025-02-24T16:09:32.3530418Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3530533Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3530606Z E          ...
2025-02-24T16:09:32.3530697Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3530829Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3530940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3531010Z E          ...
2025-02-24T16:09:32.3531224Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3531350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3531453Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3531457Z 
2025-02-24T16:09:32.3531548Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3531869Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T16:09:32.3531874Z 
2025-02-24T16:09:32.3532099Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992840>
2025-02-24T16:09:32.3532378Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3532467Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3532472Z 
2025-02-24T16:09:32.3532611Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3532726Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3532807Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3532883Z         try:
2025-02-24T16:09:32.3533024Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3533106Z         except KeyError:
2025-02-24T16:09:32.3533243Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3533314Z     
2025-02-24T16:09:32.3533402Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3533494Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3533588Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3533718Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3533811Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3533901Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3534010Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3534015Z 
2025-02-24T16:09:32.3534139Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3534249Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3534257Z 
2025-02-24T16:09:32.3534396Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3534480Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3534593Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3534678Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3534820Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3534916Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3535024Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3535105Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3535182Z err_msg = None
2025-02-24T16:09:32.3535186Z 
2025-02-24T16:09:32.3535294Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3535376Z         if err_msg is None:
2025-02-24T16:09:32.3535473Z             if left.shape != right.shape:
2025-02-24T16:09:32.3535559Z                 raise_assert_detail(
2025-02-24T16:09:32.3535703Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3535777Z                 )
2025-02-24T16:09:32.3535848Z     
2025-02-24T16:09:32.3535919Z             diff = 0
2025-02-24T16:09:32.3536033Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3536120Z                 # count up differences
2025-02-24T16:09:32.3536423Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3536507Z                     diff += 1
2025-02-24T16:09:32.3536578Z     
2025-02-24T16:09:32.3536670Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3536810Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3536984Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3537208Z E           AssertionError: Series are different
2025-02-24T16:09:32.3537281Z E           
2025-02-24T16:09:32.3537383Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3537763Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3538210Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3538551Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3538556Z 
2025-02-24T16:09:32.3538868Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3539186Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T16:09:32.3539191Z 
2025-02-24T16:09:32.3539420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992900>
2025-02-24T16:09:32.3539592Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3539689Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3539693Z 
2025-02-24T16:09:32.3539830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3539949Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3540037Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3540108Z         try:
2025-02-24T16:09:32.3540252Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3540334Z         except KeyError:
2025-02-24T16:09:32.3540476Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3540546Z     
2025-02-24T16:09:32.3540636Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3540734Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3540823Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3540960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3541043Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3541135Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3541247Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3541251Z 
2025-02-24T16:09:32.3541377Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3541492Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3541497Z 
2025-02-24T16:09:32.3541631Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3541718Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3541824Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3541908Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3542048Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3542129Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3542245Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3542410Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3542487Z err_msg = None
2025-02-24T16:09:32.3542491Z 
2025-02-24T16:09:32.3542599Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3542685Z         if err_msg is None:
2025-02-24T16:09:32.3542781Z             if left.shape != right.shape:
2025-02-24T16:09:32.3542864Z                 raise_assert_detail(
2025-02-24T16:09:32.3543016Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3543085Z                 )
2025-02-24T16:09:32.3543158Z     
2025-02-24T16:09:32.3543306Z             diff = 0
2025-02-24T16:09:32.3543424Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3543517Z                 # count up differences
2025-02-24T16:09:32.3543688Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3543769Z                     diff += 1
2025-02-24T16:09:32.3543836Z     
2025-02-24T16:09:32.3543931Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3544067Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3544314Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3544497Z E           AssertionError: Series are different
2025-02-24T16:09:32.3544616Z E           
2025-02-24T16:09:32.3544789Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3545394Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3545781Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3546167Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3546177Z 
2025-02-24T16:09:32.3546590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3546851Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T16:09:32.3546860Z 
2025-02-24T16:09:32.3546992Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3547122Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3547218Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3547352Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3547475Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3547575Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3547654Z err_msg = None
2025-02-24T16:09:32.3547658Z 
2025-02-24T16:09:32.3547768Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3547853Z         if err_msg is None:
2025-02-24T16:09:32.3547972Z             if left.shape != right.shape:
2025-02-24T16:09:32.3548211Z                 raise_assert_detail(
2025-02-24T16:09:32.3548359Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3548433Z                 )
2025-02-24T16:09:32.3548508Z     
2025-02-24T16:09:32.3548579Z             diff = 0
2025-02-24T16:09:32.3548693Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3548781Z                 # count up differences
2025-02-24T16:09:32.3548955Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3549138Z                     diff += 1
2025-02-24T16:09:32.3549209Z     
2025-02-24T16:09:32.3549298Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3549431Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3549607Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3549720Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3549798Z E           
2025-02-24T16:09:32.3549910Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3550178Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3550444Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3550452Z 
2025-02-24T16:09:32.3550761Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3550776Z 
2025-02-24T16:09:32.3550947Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3550952Z 
2025-02-24T16:09:32.3551177Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992b40>
2025-02-24T16:09:32.3551382Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>, attr = 'nu'
2025-02-24T16:09:32.3551387Z 
2025-02-24T16:09:32.3551528Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3551650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3551736Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3551809Z         try:
2025-02-24T16:09:32.3551951Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3552035Z         except KeyError:
2025-02-24T16:09:32.3552174Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3552245Z     
2025-02-24T16:09:32.3552340Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3552432Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3552526Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3552659Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3552748Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3552836Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3552952Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3552957Z 
2025-02-24T16:09:32.3553086Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3553204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3553359Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3553429Z     ???
2025-02-24T16:09:32.3553542Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3553546Z 
2025-02-24T16:09:32.3553617Z >   ???
2025-02-24T16:09:32.3553835Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3553908Z E   
2025-02-24T16:09:32.3554035Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3554149Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3554219Z E          ...
2025-02-24T16:09:32.3554310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3554446Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3554557Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3554712Z E          ...
2025-02-24T16:09:32.3554795Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3554924Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3555032Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3555037Z 
2025-02-24T16:09:32.3555130Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3555420Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T16:09:32.3555429Z 
2025-02-24T16:09:32.3555558Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3555685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3555781Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3555916Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3556041Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3556138Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3556215Z err_msg = None
2025-02-24T16:09:32.3556219Z 
2025-02-24T16:09:32.3556429Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3556516Z         if err_msg is None:
2025-02-24T16:09:32.3556618Z             if left.shape != right.shape:
2025-02-24T16:09:32.3556703Z                 raise_assert_detail(
2025-02-24T16:09:32.3556852Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3556920Z                 )
2025-02-24T16:09:32.3556992Z     
2025-02-24T16:09:32.3557063Z             diff = 0
2025-02-24T16:09:32.3557178Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3557269Z                 # count up differences
2025-02-24T16:09:32.3557437Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3557521Z                     diff += 1
2025-02-24T16:09:32.3557589Z     
2025-02-24T16:09:32.3557681Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3557816Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3557995Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3558116Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3558186Z E           
2025-02-24T16:09:32.3558306Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3558566Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3558833Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3558842Z 
2025-02-24T16:09:32.3559151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3559271Z 
2025-02-24T16:09:32.3559445Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3559453Z 
2025-02-24T16:09:32.3559680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992c00>
2025-02-24T16:09:32.3559857Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3559936Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3559940Z 
2025-02-24T16:09:32.3560083Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3560304Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3560390Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3560463Z         try:
2025-02-24T16:09:32.3560603Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3560686Z         except KeyError:
2025-02-24T16:09:32.3560825Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3560900Z     
2025-02-24T16:09:32.3560988Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3561085Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3561180Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3561312Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3561399Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3561489Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3561601Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3561606Z 
2025-02-24T16:09:32.3561734Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3561851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3562001Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3562071Z     ???
2025-02-24T16:09:32.3562182Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3562190Z 
2025-02-24T16:09:32.3562267Z >   ???
2025-02-24T16:09:32.3562399Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3562470Z E   
2025-02-24T16:09:32.3562645Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3562843Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3562964Z E          ...
2025-02-24T16:09:32.3563112Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3563327Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3563520Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3563658Z E          ...
2025-02-24T16:09:32.3563745Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3563873Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3563977Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3563982Z 
2025-02-24T16:09:32.3564074Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3564350Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T16:09:32.3564355Z 
2025-02-24T16:09:32.3564483Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3564612Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3564708Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3564849Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3564979Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3565073Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3565153Z err_msg = None
2025-02-24T16:09:32.3565157Z 
2025-02-24T16:09:32.3565268Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3565447Z         if err_msg is None:
2025-02-24T16:09:32.3565548Z             if left.shape != right.shape:
2025-02-24T16:09:32.3565636Z                 raise_assert_detail(
2025-02-24T16:09:32.3565788Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3565858Z                 )
2025-02-24T16:09:32.3565932Z     
2025-02-24T16:09:32.3566003Z             diff = 0
2025-02-24T16:09:32.3566121Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3566210Z                 # count up differences
2025-02-24T16:09:32.3566525Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3566726Z                     diff += 1
2025-02-24T16:09:32.3566794Z     
2025-02-24T16:09:32.3566885Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3567026Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3567205Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3567325Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3567403Z E           
2025-02-24T16:09:32.3567523Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3567785Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3568059Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3568064Z 
2025-02-24T16:09:32.3568380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3568387Z 
2025-02-24T16:09:32.3568562Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3568567Z 
2025-02-24T16:09:32.3568803Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600992cc0>
2025-02-24T16:09:32.3569021Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>, attr = 'f_lu'
2025-02-24T16:09:32.3569025Z 
2025-02-24T16:09:32.3569166Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3569293Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3569378Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3569455Z         try:
2025-02-24T16:09:32.3569597Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3569684Z         except KeyError:
2025-02-24T16:09:32.3569829Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3569902Z     
2025-02-24T16:09:32.3569997Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3570098Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3570192Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3570327Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3570416Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3570509Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3570622Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3570626Z 
2025-02-24T16:09:32.3570759Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3570872Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3571022Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3571096Z     ???
2025-02-24T16:09:32.3571206Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3571366Z 
2025-02-24T16:09:32.3571441Z >   ???
2025-02-24T16:09:32.3571571Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3571641Z E   
2025-02-24T16:09:32.3571769Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3571885Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3571958Z E          ...
2025-02-24T16:09:32.3572045Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3572185Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3572372Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3572446Z E          ...
2025-02-24T16:09:32.3572532Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3572660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3572772Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3572776Z 
2025-02-24T16:09:32.3572866Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3573196Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T16:09:32.3573201Z 
2025-02-24T16:09:32.3573424Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009932c0>
2025-02-24T16:09:32.3573599Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3573695Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.3573699Z 
2025-02-24T16:09:32.3573837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3573957Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3574039Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3574115Z         try:
2025-02-24T16:09:32.3574259Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3574339Z         except KeyError:
2025-02-24T16:09:32.3574483Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3574552Z     
2025-02-24T16:09:32.3574643Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3574736Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3574829Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3574964Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3575050Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3575141Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3575249Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3575326Z             else:
2025-02-24T16:09:32.3575425Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3575539Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3575543Z 
2025-02-24T16:09:32.3575673Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3575784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3575937Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3576006Z     ???
2025-02-24T16:09:32.3576119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3576124Z 
2025-02-24T16:09:32.3576195Z >   ???
2025-02-24T16:09:32.3576502Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.3576578Z E   
2025-02-24T16:09:32.3576747Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:09:32.3577124Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3582312Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.3587291Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.3587492Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:09:32.3587504Z 
2025-02-24T16:09:32.3587596Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3587908Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T16:09:32.3587914Z 
2025-02-24T16:09:32.3588042Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3588178Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3588393Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3588528Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3588655Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3588750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3588831Z err_msg = None
2025-02-24T16:09:32.3588836Z 
2025-02-24T16:09:32.3589052Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3589136Z         if err_msg is None:
2025-02-24T16:09:32.3589234Z             if left.shape != right.shape:
2025-02-24T16:09:32.3589320Z                 raise_assert_detail(
2025-02-24T16:09:32.3589473Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3589542Z                 )
2025-02-24T16:09:32.3589618Z     
2025-02-24T16:09:32.3589690Z             diff = 0
2025-02-24T16:09:32.3589807Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3589898Z                 # count up differences
2025-02-24T16:09:32.3590069Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3590154Z                     diff += 1
2025-02-24T16:09:32.3590222Z     
2025-02-24T16:09:32.3590314Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3590454Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3590633Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3590752Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3590824Z E           
2025-02-24T16:09:32.3590942Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3591207Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3591478Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3591486Z 
2025-02-24T16:09:32.3591801Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3591806Z 
2025-02-24T16:09:32.3591979Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3591987Z 
2025-02-24T16:09:32.3592213Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993380>
2025-02-24T16:09:32.3592392Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3592480Z attr = 'previous_beta_sobolev'
2025-02-24T16:09:32.3592485Z 
2025-02-24T16:09:32.3592629Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3592746Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3592832Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3592906Z         try:
2025-02-24T16:09:32.3593048Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3593138Z         except KeyError:
2025-02-24T16:09:32.3593275Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3593349Z     
2025-02-24T16:09:32.3593436Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3593538Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3593629Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3593762Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3593939Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3594031Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3594149Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3594225Z             else:
2025-02-24T16:09:32.3594328Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3594439Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3594444Z 
2025-02-24T16:09:32.3594571Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3594782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3594931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3595009Z     ???
2025-02-24T16:09:32.3595123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3595128Z 
2025-02-24T16:09:32.3595198Z >   ???
2025-02-24T16:09:32.3595336Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3595404Z E   
2025-02-24T16:09:32.3595541Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3595651Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3595727Z E          ...
2025-02-24T16:09:32.3595821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3595953Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3596071Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3596146Z E          ...
2025-02-24T16:09:32.3596237Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3596464Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3596578Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3596583Z 
2025-02-24T16:09:32.3596692Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3596979Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T16:09:32.3596987Z 
2025-02-24T16:09:32.3597123Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3597250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3597358Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3597498Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3597622Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3597724Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3597799Z err_msg = None
2025-02-24T16:09:32.3597807Z 
2025-02-24T16:09:32.3597922Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3598010Z         if err_msg is None:
2025-02-24T16:09:32.3598111Z             if left.shape != right.shape:
2025-02-24T16:09:32.3598202Z                 raise_assert_detail(
2025-02-24T16:09:32.3598348Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3598423Z                 )
2025-02-24T16:09:32.3598509Z     
2025-02-24T16:09:32.3598646Z             diff = 0
2025-02-24T16:09:32.3598854Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3599005Z                 # count up differences
2025-02-24T16:09:32.3599301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3599435Z                     diff += 1
2025-02-24T16:09:32.3599558Z     
2025-02-24T16:09:32.3599705Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3599905Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3600085Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3607514Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3607622Z E           
2025-02-24T16:09:32.3607761Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3608037Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3608308Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3608477Z 
2025-02-24T16:09:32.3608822Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3608832Z 
2025-02-24T16:09:32.3609017Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3609022Z 
2025-02-24T16:09:32.3609254Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993440>
2025-02-24T16:09:32.3609429Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3609512Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3609517Z 
2025-02-24T16:09:32.3609670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3609798Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3609885Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3609961Z         try:
2025-02-24T16:09:32.3610109Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3610196Z         except KeyError:
2025-02-24T16:09:32.3610340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3610417Z     
2025-02-24T16:09:32.3610510Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3610607Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3610702Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3610841Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3610931Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3611024Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3611140Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3611216Z             else:
2025-02-24T16:09:32.3611314Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3611427Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3611432Z 
2025-02-24T16:09:32.3611561Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3611684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3611840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3611915Z     ???
2025-02-24T16:09:32.3612029Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3612034Z 
2025-02-24T16:09:32.3612103Z >   ???
2025-02-24T16:09:32.3612239Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3612307Z E   
2025-02-24T16:09:32.3612446Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3612560Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3612631Z E          ...
2025-02-24T16:09:32.3612724Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3612854Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3612971Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3613043Z E          ...
2025-02-24T16:09:32.3613131Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3613259Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3613486Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3613490Z 
2025-02-24T16:09:32.3613587Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3613876Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T16:09:32.3613881Z 
2025-02-24T16:09:32.3614023Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3614158Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3614347Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3614490Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3614611Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3614709Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3614792Z err_msg = None
2025-02-24T16:09:32.3614796Z 
2025-02-24T16:09:32.3614909Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3615001Z         if err_msg is None:
2025-02-24T16:09:32.3615097Z             if left.shape != right.shape:
2025-02-24T16:09:32.3615188Z                 raise_assert_detail(
2025-02-24T16:09:32.3615340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3615412Z                 )
2025-02-24T16:09:32.3615484Z     
2025-02-24T16:09:32.3615554Z             diff = 0
2025-02-24T16:09:32.3615672Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3615759Z                 # count up differences
2025-02-24T16:09:32.3615939Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3616028Z                     diff += 1
2025-02-24T16:09:32.3616114Z     
2025-02-24T16:09:32.3616212Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3616469Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3616646Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3616759Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3616833Z E           
2025-02-24T16:09:32.3616949Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3617327Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3617821Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3617834Z 
2025-02-24T16:09:32.3618371Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3618380Z 
2025-02-24T16:09:32.3618563Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3618568Z 
2025-02-24T16:09:32.3618799Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993500>
2025-02-24T16:09:32.3618974Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3619058Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3619063Z 
2025-02-24T16:09:32.3619207Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3619324Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3619412Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3619482Z         try:
2025-02-24T16:09:32.3619760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3619839Z         except KeyError:
2025-02-24T16:09:32.3619980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3620052Z     
2025-02-24T16:09:32.3620140Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3620240Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3620329Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3620465Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3620659Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3620749Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3620863Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3620934Z             else:
2025-02-24T16:09:32.3621034Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3621143Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3621151Z 
2025-02-24T16:09:32.3621282Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3621402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3621550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3621624Z     ???
2025-02-24T16:09:32.3621734Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3621739Z 
2025-02-24T16:09:32.3621811Z >   ???
2025-02-24T16:09:32.3621938Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3622014Z E   
2025-02-24T16:09:32.3622149Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3622260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3622335Z E          ...
2025-02-24T16:09:32.3622421Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3622553Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3622666Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3622741Z E          ...
2025-02-24T16:09:32.3622830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3622955Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3623064Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3623068Z 
2025-02-24T16:09:32.3623157Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3623436Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T16:09:32.3623444Z 
2025-02-24T16:09:32.3623577Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3623713Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3623822Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3623963Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3624100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3624200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3624278Z err_msg = None
2025-02-24T16:09:32.3624282Z 
2025-02-24T16:09:32.3624399Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3624482Z         if err_msg is None:
2025-02-24T16:09:32.3624584Z             if left.shape != right.shape:
2025-02-24T16:09:32.3624671Z                 raise_assert_detail(
2025-02-24T16:09:32.3624825Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3624900Z                 )
2025-02-24T16:09:32.3624967Z     
2025-02-24T16:09:32.3625044Z             diff = 0
2025-02-24T16:09:32.3625166Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3625259Z                 # count up differences
2025-02-24T16:09:32.3625521Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3625606Z                     diff += 1
2025-02-24T16:09:32.3625679Z     
2025-02-24T16:09:32.3625770Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3625917Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3626093Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3626211Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3626526Z E           
2025-02-24T16:09:32.3626646Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3626916Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3627184Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3627193Z 
2025-02-24T16:09:32.3627506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3627512Z 
2025-02-24T16:09:32.3627691Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3627696Z 
2025-02-24T16:09:32.3627924Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600993680>
2025-02-24T16:09:32.3628097Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05fe3be330>
2025-02-24T16:09:32.3628175Z attr = 'j_blues'
2025-02-24T16:09:32.3628180Z 
2025-02-24T16:09:32.3628322Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3628444Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3628529Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3628603Z         try:
2025-02-24T16:09:32.3628745Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3628830Z         except KeyError:
2025-02-24T16:09:32.3628974Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3629043Z     
2025-02-24T16:09:32.3629134Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3629235Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3629330Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3629464Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3629553Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3629651Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3629763Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3629842Z             else:
2025-02-24T16:09:32.3629939Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3630055Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3630060Z 
2025-02-24T16:09:32.3630191Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3630309Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3630460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3630530Z     ???
2025-02-24T16:09:32.3630647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3630651Z 
2025-02-24T16:09:32.3630733Z >   ???
2025-02-24T16:09:32.3630875Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3630946Z E   
2025-02-24T16:09:32.3631079Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3631212Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3631435Z E          ...
2025-02-24T16:09:32.3631529Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3631660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3631780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3631853Z E          ...
2025-02-24T16:09:32.3631940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3632071Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3632177Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3632269Z 
2025-02-24T16:09:32.3632367Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3632632Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T16:09:32.3632638Z 
2025-02-24T16:09:32.3632770Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3632911Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3633010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3633149Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3633280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3633372Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3633449Z err_msg = None
2025-02-24T16:09:32.3633457Z 
2025-02-24T16:09:32.3633570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3633661Z         if err_msg is None:
2025-02-24T16:09:32.3633760Z             if left.shape != right.shape:
2025-02-24T16:09:32.3633848Z                 raise_assert_detail(
2025-02-24T16:09:32.3634000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3634075Z                 )
2025-02-24T16:09:32.3634148Z     
2025-02-24T16:09:32.3634220Z             diff = 0
2025-02-24T16:09:32.3634338Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3634432Z                 # count up differences
2025-02-24T16:09:32.3634604Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3634689Z                     diff += 1
2025-02-24T16:09:32.3634756Z     
2025-02-24T16:09:32.3634851Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3634988Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3635171Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3635287Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3635356Z E           
2025-02-24T16:09:32.3635474Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3635957Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3636574Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3636589Z 
2025-02-24T16:09:32.3637025Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3637031Z 
2025-02-24T16:09:32.3637205Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3637210Z 
2025-02-24T16:09:32.3637444Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0440>
2025-02-24T16:09:32.3637820Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3637894Z attr = 'lines'
2025-02-24T16:09:32.3637898Z 
2025-02-24T16:09:32.3638044Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3638161Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3638251Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3638323Z         try:
2025-02-24T16:09:32.3638466Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3638657Z         except KeyError:
2025-02-24T16:09:32.3638799Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3638873Z     
2025-02-24T16:09:32.3638962Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3639058Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3639149Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3639280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3639375Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3639465Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3639579Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3639649Z             else:
2025-02-24T16:09:32.3639749Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3639859Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3639864Z 
2025-02-24T16:09:32.3639991Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3640114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3640262Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3640336Z     ???
2025-02-24T16:09:32.3640446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3640455Z 
2025-02-24T16:09:32.3640523Z >   ???
2025-02-24T16:09:32.3640658Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3640725Z E   
2025-02-24T16:09:32.3640858Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3640971Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3641047Z E          ...
2025-02-24T16:09:32.3641142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3641274Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3641393Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3641467Z E          ...
2025-02-24T16:09:32.3641558Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3641684Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3641794Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3641798Z 
2025-02-24T16:09:32.3641894Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3642194Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T16:09:32.3642204Z 
2025-02-24T16:09:32.3642435Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0500>
2025-02-24T16:09:32.3642603Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3642694Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3642699Z 
2025-02-24T16:09:32.3642845Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3642963Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3643047Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3643119Z         try:
2025-02-24T16:09:32.3643259Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3643346Z         except KeyError:
2025-02-24T16:09:32.3643482Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3643554Z     
2025-02-24T16:09:32.3643642Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3643843Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3643936Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3644070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3644158Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3644246Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3644359Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3644363Z 
2025-02-24T16:09:32.3644491Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3644679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3644684Z 
2025-02-24T16:09:32.3644821Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3644905Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3645018Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3645107Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3645246Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3645331Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3645435Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3645516Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3645590Z err_msg = None
2025-02-24T16:09:32.3645602Z 
2025-02-24T16:09:32.3645714Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3645800Z         if err_msg is None:
2025-02-24T16:09:32.3645894Z             if left.shape != right.shape:
2025-02-24T16:09:32.3645979Z                 raise_assert_detail(
2025-02-24T16:09:32.3646124Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3646198Z                 )
2025-02-24T16:09:32.3646384Z     
2025-02-24T16:09:32.3646459Z             diff = 0
2025-02-24T16:09:32.3646580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3646668Z                 # count up differences
2025-02-24T16:09:32.3646840Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3646918Z                     diff += 1
2025-02-24T16:09:32.3646989Z     
2025-02-24T16:09:32.3647075Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3647496Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3647670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3647778Z E           AssertionError: Series are different
2025-02-24T16:09:32.3647853Z E           
2025-02-24T16:09:32.3647983Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3648360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3648703Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3649040Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3649184Z 
2025-02-24T16:09:32.3649504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3649801Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T16:09:32.3649806Z 
2025-02-24T16:09:32.3650036Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b05c0>
2025-02-24T16:09:32.3650206Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3650402Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3650406Z 
2025-02-24T16:09:32.3650543Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3650662Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3650745Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3650818Z         try:
2025-02-24T16:09:32.3650963Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3651047Z         except KeyError:
2025-02-24T16:09:32.3651187Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3651254Z     
2025-02-24T16:09:32.3651343Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3651435Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3651524Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3651662Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3651747Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3651843Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3651951Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3651956Z 
2025-02-24T16:09:32.3652082Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3652197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3652202Z 
2025-02-24T16:09:32.3652339Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3652424Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3652532Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3652619Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3652758Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3652845Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3652954Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3653035Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3653114Z err_msg = None
2025-02-24T16:09:32.3653118Z 
2025-02-24T16:09:32.3653228Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3653314Z         if err_msg is None:
2025-02-24T16:09:32.3653411Z             if left.shape != right.shape:
2025-02-24T16:09:32.3653500Z                 raise_assert_detail(
2025-02-24T16:09:32.3653648Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3653742Z                 )
2025-02-24T16:09:32.3653873Z     
2025-02-24T16:09:32.3653998Z             diff = 0
2025-02-24T16:09:32.3654196Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3654358Z                 # count up differences
2025-02-24T16:09:32.3654654Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3654786Z                     diff += 1
2025-02-24T16:09:32.3654907Z     
2025-02-24T16:09:32.3655057Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3655271Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3655453Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3655564Z E           AssertionError: Series are different
2025-02-24T16:09:32.3655732Z E           
2025-02-24T16:09:32.3655838Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3656213Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3656775Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3657289Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3657295Z 
2025-02-24T16:09:32.3657625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3657885Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T16:09:32.3657890Z 
2025-02-24T16:09:32.3658026Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3658155Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3658261Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3658398Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3658520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3658618Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3658693Z err_msg = None
2025-02-24T16:09:32.3658700Z 
2025-02-24T16:09:32.3658815Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3658900Z         if err_msg is None:
2025-02-24T16:09:32.3658999Z             if left.shape != right.shape:
2025-02-24T16:09:32.3659088Z                 raise_assert_detail(
2025-02-24T16:09:32.3659237Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3659312Z                 )
2025-02-24T16:09:32.3659380Z     
2025-02-24T16:09:32.3659454Z             diff = 0
2025-02-24T16:09:32.3659570Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3659661Z                 # count up differences
2025-02-24T16:09:32.3659834Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3659911Z                     diff += 1
2025-02-24T16:09:32.3659982Z     
2025-02-24T16:09:32.3660070Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3660211Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3660387Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3660503Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3660577Z E           
2025-02-24T16:09:32.3660689Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3660960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3661352Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3661358Z 
2025-02-24T16:09:32.3661669Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3661749Z 
2025-02-24T16:09:32.3661920Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3661925Z 
2025-02-24T16:09:32.3662152Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0800>
2025-02-24T16:09:32.3662355Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>, attr = 'nu'
2025-02-24T16:09:32.3662363Z 
2025-02-24T16:09:32.3662508Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3662624Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3662713Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3662788Z         try:
2025-02-24T16:09:32.3662933Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3663019Z         except KeyError:
2025-02-24T16:09:32.3663161Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3663236Z     
2025-02-24T16:09:32.3663324Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3663423Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3663518Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3663652Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3663742Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3663831Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3663947Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3663952Z 
2025-02-24T16:09:32.3664079Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3664192Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3664343Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3664413Z     ???
2025-02-24T16:09:32.3664524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3664529Z 
2025-02-24T16:09:32.3664599Z >   ???
2025-02-24T16:09:32.3664733Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3664806Z E   
2025-02-24T16:09:32.3664934Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3665047Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3665119Z E          ...
2025-02-24T16:09:32.3665211Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3665347Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3665465Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3665539Z E          ...
2025-02-24T16:09:32.3665624Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3665757Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3665864Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3665869Z 
2025-02-24T16:09:32.3665963Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3666251Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T16:09:32.3666257Z 
2025-02-24T16:09:32.3666488Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3666621Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3666834Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3666971Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3667101Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3667196Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3667272Z err_msg = None
2025-02-24T16:09:32.3667276Z 
2025-02-24T16:09:32.3667389Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3667473Z         if err_msg is None:
2025-02-24T16:09:32.3667674Z             if left.shape != right.shape:
2025-02-24T16:09:32.3667758Z                 raise_assert_detail(
2025-02-24T16:09:32.3667907Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3667977Z                 )
2025-02-24T16:09:32.3668048Z     
2025-02-24T16:09:32.3668119Z             diff = 0
2025-02-24T16:09:32.3668237Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3668329Z                 # count up differences
2025-02-24T16:09:32.3668501Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3668581Z                     diff += 1
2025-02-24T16:09:32.3668649Z     
2025-02-24T16:09:32.3668745Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3668882Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3669058Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3669181Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3669253Z E           
2025-02-24T16:09:32.3669368Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3669633Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3669904Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3669909Z 
2025-02-24T16:09:32.3670222Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3670230Z 
2025-02-24T16:09:32.3670400Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3670405Z 
2025-02-24T16:09:32.3670635Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b08c0>
2025-02-24T16:09:32.3670806Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3670907Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3670914Z 
2025-02-24T16:09:32.3671166Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3671361Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3671505Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3671628Z         try:
2025-02-24T16:09:32.3671864Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3672009Z         except KeyError:
2025-02-24T16:09:32.3672163Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3672240Z     
2025-02-24T16:09:32.3672326Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3672423Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3672513Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3672643Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3672731Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3672936Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3673050Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3673055Z 
2025-02-24T16:09:32.3673182Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3673299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3673450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3673520Z     ???
2025-02-24T16:09:32.3673632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3673708Z 
2025-02-24T16:09:32.3673778Z >   ???
2025-02-24T16:09:32.3673910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3673982Z E   
2025-02-24T16:09:32.3674111Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3674225Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3674296Z E          ...
2025-02-24T16:09:32.3674390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3674519Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3674636Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3674710Z E          ...
2025-02-24T16:09:32.3674798Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3674928Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3675036Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3675040Z 
2025-02-24T16:09:32.3675134Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3675392Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T16:09:32.3675401Z 
2025-02-24T16:09:32.3675533Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3675668Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3675768Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3675904Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3676027Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3676127Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3676205Z err_msg = None
2025-02-24T16:09:32.3676209Z 
2025-02-24T16:09:32.3676432Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3676523Z         if err_msg is None:
2025-02-24T16:09:32.3676618Z             if left.shape != right.shape:
2025-02-24T16:09:32.3676707Z                 raise_assert_detail(
2025-02-24T16:09:32.3676859Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3676929Z                 )
2025-02-24T16:09:32.3677000Z     
2025-02-24T16:09:32.3677077Z             diff = 0
2025-02-24T16:09:32.3677194Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3677282Z                 # count up differences
2025-02-24T16:09:32.3677456Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3677539Z                     diff += 1
2025-02-24T16:09:32.3677607Z     
2025-02-24T16:09:32.3677700Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3677837Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3678013Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3678130Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3678206Z E           
2025-02-24T16:09:32.3678320Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3678581Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3678970Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3678976Z 
2025-02-24T16:09:32.3679387Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3679392Z 
2025-02-24T16:09:32.3679564Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3679568Z 
2025-02-24T16:09:32.3679801Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0980>
2025-02-24T16:09:32.3680011Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>, attr = 'f_lu'
2025-02-24T16:09:32.3680016Z 
2025-02-24T16:09:32.3680155Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3680275Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3680362Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3680435Z         try:
2025-02-24T16:09:32.3680577Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3680664Z         except KeyError:
2025-02-24T16:09:32.3680805Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3680874Z     
2025-02-24T16:09:32.3680965Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3681059Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3681152Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3681284Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3681372Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3681470Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3681583Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3681587Z 
2025-02-24T16:09:32.3681715Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3681827Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3681978Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3682051Z     ???
2025-02-24T16:09:32.3682160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3682167Z 
2025-02-24T16:09:32.3682240Z >   ???
2025-02-24T16:09:32.3682367Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3682438Z E   
2025-02-24T16:09:32.3682565Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3682679Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3682757Z E          ...
2025-02-24T16:09:32.3682844Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3682976Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3683086Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3683159Z E          ...
2025-02-24T16:09:32.3683243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3683379Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3683485Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3683489Z 
2025-02-24T16:09:32.3683586Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3683902Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T16:09:32.3683912Z 
2025-02-24T16:09:32.3684143Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b0f80>
2025-02-24T16:09:32.3684321Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3684500Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.3684504Z 
2025-02-24T16:09:32.3684647Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3684761Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3684849Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3684926Z         try:
2025-02-24T16:09:32.3685070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3685155Z         except KeyError:
2025-02-24T16:09:32.3685298Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3685446Z     
2025-02-24T16:09:32.3685534Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3685629Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3685720Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3685854Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3685940Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3686033Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3686146Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3686217Z             else:
2025-02-24T16:09:32.3686411Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3686524Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3686528Z 
2025-02-24T16:09:32.3686655Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3686768Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3686920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3686994Z     ???
2025-02-24T16:09:32.3687106Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3687111Z 
2025-02-24T16:09:32.3687179Z >   ???
2025-02-24T16:09:32.3687365Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.3687437Z E   
2025-02-24T16:09:32.3687610Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.3687987Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3693575Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3698870Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3699195Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.3699200Z 
2025-02-24T16:09:32.3699297Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3699594Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T16:09:32.3699603Z 
2025-02-24T16:09:32.3699743Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3699877Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3699978Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3700121Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3700247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3700345Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3700425Z err_msg = None
2025-02-24T16:09:32.3700429Z 
2025-02-24T16:09:32.3700544Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3700630Z         if err_msg is None:
2025-02-24T16:09:32.3700726Z             if left.shape != right.shape:
2025-02-24T16:09:32.3700821Z                 raise_assert_detail(
2025-02-24T16:09:32.3700970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3701044Z                 )
2025-02-24T16:09:32.3701115Z     
2025-02-24T16:09:32.3701187Z             diff = 0
2025-02-24T16:09:32.3701303Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3701507Z                 # count up differences
2025-02-24T16:09:32.3701684Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3701765Z                     diff += 1
2025-02-24T16:09:32.3701833Z     
2025-02-24T16:09:32.3701927Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3702065Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3702241Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3702355Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3702529Z E           
2025-02-24T16:09:32.3702646Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3702907Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3703178Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3703183Z 
2025-02-24T16:09:32.3703509Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3703516Z 
2025-02-24T16:09:32.3703692Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3703697Z 
2025-02-24T16:09:32.3703930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b1040>
2025-02-24T16:09:32.3704097Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3704192Z attr = 'previous_beta_sobolev'
2025-02-24T16:09:32.3704200Z 
2025-02-24T16:09:32.3704349Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3704466Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3704551Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3704621Z         try:
2025-02-24T16:09:32.3704765Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3704845Z         except KeyError:
2025-02-24T16:09:32.3704989Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3705063Z     
2025-02-24T16:09:32.3705154Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3705252Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3705342Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3705477Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3705567Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3705659Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3705776Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3705848Z             else:
2025-02-24T16:09:32.3705948Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3706056Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3706061Z 
2025-02-24T16:09:32.3706193Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3706416Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3706567Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3706644Z     ???
2025-02-24T16:09:32.3706752Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3706757Z 
2025-02-24T16:09:32.3706826Z >   ???
2025-02-24T16:09:32.3706954Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3707026Z E   
2025-02-24T16:09:32.3707158Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3707387Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3707463Z E          ...
2025-02-24T16:09:32.3707580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3707811Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3708009Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3708127Z E          ...
2025-02-24T16:09:32.3708274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3708486Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3708830Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3708840Z 
2025-02-24T16:09:32.3708945Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3709224Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T16:09:32.3709229Z 
2025-02-24T16:09:32.3709364Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3709495Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3709595Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3709729Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3709857Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3709953Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3710030Z err_msg = None
2025-02-24T16:09:32.3710034Z 
2025-02-24T16:09:32.3710147Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3710227Z         if err_msg is None:
2025-02-24T16:09:32.3710329Z             if left.shape != right.shape:
2025-02-24T16:09:32.3710418Z                 raise_assert_detail(
2025-02-24T16:09:32.3710565Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3710639Z                 )
2025-02-24T16:09:32.3710706Z     
2025-02-24T16:09:32.3710782Z             diff = 0
2025-02-24T16:09:32.3710894Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3710984Z                 # count up differences
2025-02-24T16:09:32.3711164Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3711240Z                     diff += 1
2025-02-24T16:09:32.3711315Z     
2025-02-24T16:09:32.3711404Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3711549Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3711722Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3711841Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3711914Z E           
2025-02-24T16:09:32.3712028Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3712295Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3712554Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3712566Z 
2025-02-24T16:09:32.3712878Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3712883Z 
2025-02-24T16:09:32.3713056Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3713061Z 
2025-02-24T16:09:32.3713373Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b1100>
2025-02-24T16:09:32.3713546Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3713629Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3713634Z 
2025-02-24T16:09:32.3713767Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3713887Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3713971Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3714043Z         try:
2025-02-24T16:09:32.3714186Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3714346Z         except KeyError:
2025-02-24T16:09:32.3714486Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3714552Z     
2025-02-24T16:09:32.3714641Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3714735Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3714826Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3714970Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3715054Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3715152Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3715265Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3715339Z             else:
2025-02-24T16:09:32.3715433Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3715543Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3715547Z 
2025-02-24T16:09:32.3715676Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3715790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3715942Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3716011Z     ???
2025-02-24T16:09:32.3716125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3716133Z 
2025-02-24T16:09:32.3716204Z >   ???
2025-02-24T16:09:32.3716450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3716525Z E   
2025-02-24T16:09:32.3716653Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3716768Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3716837Z E          ...
2025-02-24T16:09:32.3716929Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3717062Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3717174Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3717252Z E          ...
2025-02-24T16:09:32.3717336Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3717464Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3717567Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3717571Z 
2025-02-24T16:09:32.3717668Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3717950Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T16:09:32.3717955Z 
2025-02-24T16:09:32.3718083Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3718214Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3718311Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3718449Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3718579Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3718674Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3718752Z err_msg = None
2025-02-24T16:09:32.3718756Z 
2025-02-24T16:09:32.3718869Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3719076Z         if err_msg is None:
2025-02-24T16:09:32.3719174Z             if left.shape != right.shape:
2025-02-24T16:09:32.3719259Z                 raise_assert_detail(
2025-02-24T16:09:32.3719409Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3719477Z                 )
2025-02-24T16:09:32.3719553Z     
2025-02-24T16:09:32.3719624Z             diff = 0
2025-02-24T16:09:32.3719738Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3719830Z                 # count up differences
2025-02-24T16:09:32.3720000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3720207Z                     diff += 1
2025-02-24T16:09:32.3720276Z     
2025-02-24T16:09:32.3720371Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3720509Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3720686Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3720805Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3720875Z E           
2025-02-24T16:09:32.3720995Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3721256Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3721527Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3721532Z 
2025-02-24T16:09:32.3721845Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3721853Z 
2025-02-24T16:09:32.3722021Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3722026Z 
2025-02-24T16:09:32.3722257Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b11c0>
2025-02-24T16:09:32.3722430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3722507Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3722512Z 
2025-02-24T16:09:32.3722650Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3722768Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3722856Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3722927Z         try:
2025-02-24T16:09:32.3723066Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3723147Z         except KeyError:
2025-02-24T16:09:32.3723286Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3723360Z     
2025-02-24T16:09:32.3723448Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3723545Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3723637Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3723768Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3723858Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3723948Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3724060Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3724133Z             else:
2025-02-24T16:09:32.3724233Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3724344Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3724348Z 
2025-02-24T16:09:32.3724474Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3724587Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3724825Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3724898Z     ???
2025-02-24T16:09:32.3725005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3725014Z 
2025-02-24T16:09:32.3725082Z >   ???
2025-02-24T16:09:32.3725213Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3725283Z E   
2025-02-24T16:09:32.3725420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3725617Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3725850Z E          ...
2025-02-24T16:09:32.3725999Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3726213Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3726532Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3726652Z E          ...
2025-02-24T16:09:32.3726782Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3726915Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3727024Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3727029Z 
2025-02-24T16:09:32.3727124Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3727387Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T16:09:32.3727392Z 
2025-02-24T16:09:32.3727523Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3727648Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3727752Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3727889Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3728009Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3728109Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3728181Z err_msg = None
2025-02-24T16:09:32.3728185Z 
2025-02-24T16:09:32.3728298Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3728384Z         if err_msg is None:
2025-02-24T16:09:32.3728478Z             if left.shape != right.shape:
2025-02-24T16:09:32.3728566Z                 raise_assert_detail(
2025-02-24T16:09:32.3728713Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3728787Z                 )
2025-02-24T16:09:32.3728857Z     
2025-02-24T16:09:32.3728933Z             diff = 0
2025-02-24T16:09:32.3729048Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3729135Z                 # count up differences
2025-02-24T16:09:32.3729310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3729386Z                     diff += 1
2025-02-24T16:09:32.3729456Z     
2025-02-24T16:09:32.3729547Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3729687Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3729857Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3729971Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3730045Z E           
2025-02-24T16:09:32.3730156Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3730422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3730691Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3730820Z 
2025-02-24T16:09:32.3731129Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3731134Z 
2025-02-24T16:09:32.3731307Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3731312Z 
2025-02-24T16:09:32.3731541Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b1340>
2025-02-24T16:09:32.3731807Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f85b3800>
2025-02-24T16:09:32.3731883Z attr = 'j_blues'
2025-02-24T16:09:32.3731887Z 
2025-02-24T16:09:32.3732023Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3732141Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3732228Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3732300Z         try:
2025-02-24T16:09:32.3732443Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3732523Z         except KeyError:
2025-02-24T16:09:32.3732663Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3732730Z     
2025-02-24T16:09:32.3732820Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3732916Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3733003Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3733139Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3733226Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3733320Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3733428Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3733500Z             else:
2025-02-24T16:09:32.3733600Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3733705Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3733713Z 
2025-02-24T16:09:32.3733842Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3733952Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3734103Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3734174Z     ???
2025-02-24T16:09:32.3734283Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3734287Z 
2025-02-24T16:09:32.3734356Z >   ???
2025-02-24T16:09:32.3734483Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3734556Z E   
2025-02-24T16:09:32.3734688Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3734811Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3734892Z E          ...
2025-02-24T16:09:32.3734980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3735116Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3735237Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3735312Z E          ...
2025-02-24T16:09:32.3735401Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3735534Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3735646Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3735651Z 
2025-02-24T16:09:32.3735742Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3735954Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T16:09:32.3735961Z 
2025-02-24T16:09:32.3736094Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3736231Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3736472Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3736729Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3736860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3736954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3737033Z err_msg = None
2025-02-24T16:09:32.3737038Z 
2025-02-24T16:09:32.3737157Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3737237Z         if err_msg is None:
2025-02-24T16:09:32.3737340Z             if left.shape != right.shape:
2025-02-24T16:09:32.3737529Z                 raise_assert_detail(
2025-02-24T16:09:32.3737682Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3737753Z                 )
2025-02-24T16:09:32.3737826Z     
2025-02-24T16:09:32.3737901Z             diff = 0
2025-02-24T16:09:32.3738014Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3738106Z                 # count up differences
2025-02-24T16:09:32.3738283Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3738365Z                     diff += 1
2025-02-24T16:09:32.3738435Z     
2025-02-24T16:09:32.3738527Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3738672Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3738847Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3738968Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3739042Z E           
2025-02-24T16:09:32.3739159Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3739425Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3739697Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3739702Z 
2025-02-24T16:09:32.3740023Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3740031Z 
2025-02-24T16:09:32.3740212Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3740217Z 
2025-02-24T16:09:32.3740444Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b20c0>
2025-02-24T16:09:32.3740617Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3740691Z attr = 'lines'
2025-02-24T16:09:32.3740699Z 
2025-02-24T16:09:32.3740843Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3740966Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3741052Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3741127Z         try:
2025-02-24T16:09:32.3741269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3741353Z         except KeyError:
2025-02-24T16:09:32.3741493Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3741567Z     
2025-02-24T16:09:32.3741660Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3741758Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3741851Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3741990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3742079Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3742171Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3742285Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3742467Z             else:
2025-02-24T16:09:32.3742561Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3742672Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3742677Z 
2025-02-24T16:09:32.3742803Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3742920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3743066Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3743139Z     ???
2025-02-24T16:09:32.3743326Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3743330Z 
2025-02-24T16:09:32.3743397Z >   ???
2025-02-24T16:09:32.3743532Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3743600Z E   
2025-02-24T16:09:32.3743734Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3743850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3743925Z E          ...
2025-02-24T16:09:32.3744020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3744153Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3744267Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3744336Z E          ...
2025-02-24T16:09:32.3744426Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3744556Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3744664Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3744669Z 
2025-02-24T16:09:32.3744761Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3744999Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T16:09:32.3745004Z 
2025-02-24T16:09:32.3745234Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2180>
2025-02-24T16:09:32.3745410Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3745501Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3745506Z 
2025-02-24T16:09:32.3745647Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3745761Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3745850Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3745920Z         try:
2025-02-24T16:09:32.3746064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3746146Z         except KeyError:
2025-02-24T16:09:32.3746383Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3746458Z     
2025-02-24T16:09:32.3746546Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3746644Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3746733Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3746870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3746964Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3747052Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3747163Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3747167Z 
2025-02-24T16:09:32.3747292Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3747406Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3747411Z 
2025-02-24T16:09:32.3747552Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3747642Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3747754Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3747835Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3748009Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3748097Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3748318Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3748401Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3748476Z err_msg = None
2025-02-24T16:09:32.3748480Z 
2025-02-24T16:09:32.3748596Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3748677Z         if err_msg is None:
2025-02-24T16:09:32.3748774Z             if left.shape != right.shape:
2025-02-24T16:09:32.3748863Z                 raise_assert_detail(
2025-02-24T16:09:32.3749010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3749188Z                 )
2025-02-24T16:09:32.3749256Z     
2025-02-24T16:09:32.3749335Z             diff = 0
2025-02-24T16:09:32.3749446Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3749537Z                 # count up differences
2025-02-24T16:09:32.3749838Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3749976Z                     diff += 1
2025-02-24T16:09:32.3750098Z     
2025-02-24T16:09:32.3750243Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3750477Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3750752Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3750864Z E           AssertionError: Series are different
2025-02-24T16:09:32.3750936Z E           
2025-02-24T16:09:32.3751037Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3751419Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3751761Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3752097Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3752105Z 
2025-02-24T16:09:32.3752422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3752661Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T16:09:32.3752665Z 
2025-02-24T16:09:32.3752890Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2240>
2025-02-24T16:09:32.3753061Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3753151Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3753160Z 
2025-02-24T16:09:32.3753299Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3753419Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3753507Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3753581Z         try:
2025-02-24T16:09:32.3753723Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3753808Z         except KeyError:
2025-02-24T16:09:32.3753949Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3754018Z     
2025-02-24T16:09:32.3754110Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3754297Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3754389Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3754522Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3754610Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3754704Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3754815Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3754820Z 
2025-02-24T16:09:32.3754949Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3755138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3755142Z 
2025-02-24T16:09:32.3755282Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3755369Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3755476Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3755563Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3755703Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3755789Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3755893Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3755977Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3756056Z err_msg = None
2025-02-24T16:09:32.3756061Z 
2025-02-24T16:09:32.3756172Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3756366Z         if err_msg is None:
2025-02-24T16:09:32.3756463Z             if left.shape != right.shape:
2025-02-24T16:09:32.3756555Z                 raise_assert_detail(
2025-02-24T16:09:32.3756701Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3756778Z                 )
2025-02-24T16:09:32.3756849Z     
2025-02-24T16:09:32.3756921Z             diff = 0
2025-02-24T16:09:32.3757042Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3757130Z                 # count up differences
2025-02-24T16:09:32.3757305Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3757382Z                     diff += 1
2025-02-24T16:09:32.3757453Z     
2025-02-24T16:09:32.3757544Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3757678Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3757854Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3757961Z E           AssertionError: Series are different
2025-02-24T16:09:32.3758037Z E           
2025-02-24T16:09:32.3758142Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3758512Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3758899Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3759290Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3759413Z 
2025-02-24T16:09:32.3759727Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3759928Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T16:09:32.3759933Z 
2025-02-24T16:09:32.3760067Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3760195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3760417Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3760553Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3760679Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3760781Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3760856Z err_msg = None
2025-02-24T16:09:32.3760860Z 
2025-02-24T16:09:32.3760973Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3761054Z         if err_msg is None:
2025-02-24T16:09:32.3761152Z             if left.shape != right.shape:
2025-02-24T16:09:32.3761241Z                 raise_assert_detail(
2025-02-24T16:09:32.3761382Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3761456Z                 )
2025-02-24T16:09:32.3761527Z     
2025-02-24T16:09:32.3761605Z             diff = 0
2025-02-24T16:09:32.3761716Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3761808Z                 # count up differences
2025-02-24T16:09:32.3761981Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3762058Z                     diff += 1
2025-02-24T16:09:32.3762135Z     
2025-02-24T16:09:32.3762221Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3762361Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3762532Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3762649Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3762725Z E           
2025-02-24T16:09:32.3762837Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3763104Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3763370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3763383Z 
2025-02-24T16:09:32.3763684Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3763689Z 
2025-02-24T16:09:32.3763864Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3763868Z 
2025-02-24T16:09:32.3764092Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2480>
2025-02-24T16:09:32.3764305Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>, attr = 'nu'
2025-02-24T16:09:32.3764310Z 
2025-02-24T16:09:32.3764450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3764564Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3764651Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3764824Z         try:
2025-02-24T16:09:32.3764968Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3765050Z         except KeyError:
2025-02-24T16:09:32.3765189Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3765261Z     
2025-02-24T16:09:32.3765349Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3765446Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3765531Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3765667Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3765832Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3765922Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3766034Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3766039Z 
2025-02-24T16:09:32.3766162Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3766375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3766530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3766602Z     ???
2025-02-24T16:09:32.3766715Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3766720Z 
2025-02-24T16:09:32.3766787Z >   ???
2025-02-24T16:09:32.3766917Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3766986Z E   
2025-02-24T16:09:32.3767118Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3767235Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3767309Z E          ...
2025-02-24T16:09:32.3767402Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3767596Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3767802Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3767921Z E          ...
2025-02-24T16:09:32.3768071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3768295Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3768470Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3768477Z 
2025-02-24T16:09:32.3768638Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3768856Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T16:09:32.3768861Z 
2025-02-24T16:09:32.3768996Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3769128Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3769229Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3769365Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3769490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3769591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3769666Z err_msg = None
2025-02-24T16:09:32.3769674Z 
2025-02-24T16:09:32.3769783Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3769867Z         if err_msg is None:
2025-02-24T16:09:32.3769962Z             if left.shape != right.shape:
2025-02-24T16:09:32.3770050Z                 raise_assert_detail(
2025-02-24T16:09:32.3770190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3770266Z                 )
2025-02-24T16:09:32.3770341Z     
2025-02-24T16:09:32.3770412Z             diff = 0
2025-02-24T16:09:32.3770529Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3770617Z                 # count up differences
2025-02-24T16:09:32.3770790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3770867Z                     diff += 1
2025-02-24T16:09:32.3771070Z     
2025-02-24T16:09:32.3771163Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3771298Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3771469Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3771582Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3771655Z E           
2025-02-24T16:09:32.3771767Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3772030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3772402Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3772411Z 
2025-02-24T16:09:32.3772722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3772731Z 
2025-02-24T16:09:32.3772899Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3772903Z 
2025-02-24T16:09:32.3773131Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2540>
2025-02-24T16:09:32.3773300Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3773385Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3773390Z 
2025-02-24T16:09:32.3773530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3773642Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3773730Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3773803Z         try:
2025-02-24T16:09:32.3773971Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3774050Z         except KeyError:
2025-02-24T16:09:32.3774194Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3774267Z     
2025-02-24T16:09:32.3774356Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3774454Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3774543Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3774678Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3774767Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3774860Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3774977Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3774981Z 
2025-02-24T16:09:32.3775107Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3775223Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3775372Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3775446Z     ???
2025-02-24T16:09:32.3775554Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3775562Z 
2025-02-24T16:09:32.3775631Z >   ???
2025-02-24T16:09:32.3775764Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3775834Z E   
2025-02-24T16:09:32.3775966Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3776078Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3776154Z E          ...
2025-02-24T16:09:32.3776243Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3776521Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3776639Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3776716Z E          ...
2025-02-24T16:09:32.3776924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3777052Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3777163Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3777167Z 
2025-02-24T16:09:32.3777259Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3777457Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T16:09:32.3777461Z 
2025-02-24T16:09:32.3777598Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3777826Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3777928Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3778069Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3778193Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3778294Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3778371Z err_msg = None
2025-02-24T16:09:32.3778375Z 
2025-02-24T16:09:32.3778488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3778572Z         if err_msg is None:
2025-02-24T16:09:32.3778667Z             if left.shape != right.shape:
2025-02-24T16:09:32.3778756Z                 raise_assert_detail(
2025-02-24T16:09:32.3778900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3778976Z                 )
2025-02-24T16:09:32.3779049Z     
2025-02-24T16:09:32.3779124Z             diff = 0
2025-02-24T16:09:32.3779240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3779330Z                 # count up differences
2025-02-24T16:09:32.3779505Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3779585Z                     diff += 1
2025-02-24T16:09:32.3779662Z     
2025-02-24T16:09:32.3779751Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3779895Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3780072Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3780185Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3780260Z E           
2025-02-24T16:09:32.3780374Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3780641Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3780913Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3780921Z 
2025-02-24T16:09:32.3781227Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3781231Z 
2025-02-24T16:09:32.3781405Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3781410Z 
2025-02-24T16:09:32.3781644Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2600>
2025-02-24T16:09:32.3781849Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>, attr = 'f_lu'
2025-02-24T16:09:32.3781854Z 
2025-02-24T16:09:32.3781997Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3782111Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3782202Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3782362Z         try:
2025-02-24T16:09:32.3782504Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3782589Z         except KeyError:
2025-02-24T16:09:32.3782728Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3782801Z     
2025-02-24T16:09:32.3782889Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3782988Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3783081Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3783212Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3783403Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3783494Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3783605Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3783610Z 
2025-02-24T16:09:32.3783733Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3783851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3784007Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3784080Z     ???
2025-02-24T16:09:32.3784195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3784199Z 
2025-02-24T16:09:32.3784268Z >   ???
2025-02-24T16:09:32.3784403Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3784477Z E   
2025-02-24T16:09:32.3784608Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3791814Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3791936Z E          ...
2025-02-24T16:09:32.3792079Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3792323Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3792530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3792652Z E          ...
2025-02-24T16:09:32.3792809Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3793026Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3793210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3793219Z 
2025-02-24T16:09:32.3793351Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3793618Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T16:09:32.3793624Z 
2025-02-24T16:09:32.3793863Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2c00>
2025-02-24T16:09:32.3794042Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3794136Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.3794140Z 
2025-02-24T16:09:32.3794288Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3794411Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3794503Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3794583Z         try:
2025-02-24T16:09:32.3794737Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3794824Z         except KeyError:
2025-02-24T16:09:32.3794967Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3795042Z     
2025-02-24T16:09:32.3795131Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3795233Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3795328Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3795463Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3795557Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3795646Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3795764Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3795837Z             else:
2025-02-24T16:09:32.3795940Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3796057Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3796232Z 
2025-02-24T16:09:32.3796500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3796626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3796781Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3796855Z     ???
2025-02-24T16:09:32.3796966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3796975Z 
2025-02-24T16:09:32.3797045Z >   ???
2025-02-24T16:09:32.3797239Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.3797439Z E   
2025-02-24T16:09:32.3797618Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.3797992Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3802970Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3808602Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.3809018Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.3809027Z 
2025-02-24T16:09:32.3809125Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3809360Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T16:09:32.3809366Z 
2025-02-24T16:09:32.3809503Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3809643Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3809744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3809886Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3810009Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3810105Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3810188Z err_msg = None
2025-02-24T16:09:32.3810193Z 
2025-02-24T16:09:32.3810312Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3810399Z         if err_msg is None:
2025-02-24T16:09:32.3810494Z             if left.shape != right.shape:
2025-02-24T16:09:32.3810584Z                 raise_assert_detail(
2025-02-24T16:09:32.3810736Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3810810Z                 )
2025-02-24T16:09:32.3810881Z     
2025-02-24T16:09:32.3810952Z             diff = 0
2025-02-24T16:09:32.3811069Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3811162Z                 # count up differences
2025-02-24T16:09:32.3811338Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3811416Z                     diff += 1
2025-02-24T16:09:32.3811487Z     
2025-02-24T16:09:32.3811579Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3811719Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3811896Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3812015Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3812086Z E           
2025-02-24T16:09:32.3812198Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3812467Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3812742Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3812926Z 
2025-02-24T16:09:32.3813252Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3813261Z 
2025-02-24T16:09:32.3813432Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3813437Z 
2025-02-24T16:09:32.3813669Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2cc0>
2025-02-24T16:09:32.3813840Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3813934Z attr = 'previous_beta_sobolev'
2025-02-24T16:09:32.3814010Z 
2025-02-24T16:09:32.3814158Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3814276Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3814361Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3814431Z         try:
2025-02-24T16:09:32.3814576Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3814660Z         except KeyError:
2025-02-24T16:09:32.3814802Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3814874Z     
2025-02-24T16:09:32.3814962Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3815061Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3815151Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3815289Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3815375Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3815466Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3815583Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3815654Z             else:
2025-02-24T16:09:32.3815756Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3815865Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3815869Z 
2025-02-24T16:09:32.3816002Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3816121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3816396Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3816474Z     ???
2025-02-24T16:09:32.3816586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3816591Z 
2025-02-24T16:09:32.3816665Z >   ???
2025-02-24T16:09:32.3816794Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3816868Z E   
2025-02-24T16:09:32.3817002Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3817117Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3817193Z E          ...
2025-02-24T16:09:32.3817281Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3817422Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3817533Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3817610Z E          ...
2025-02-24T16:09:32.3817697Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3817821Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3817928Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3817933Z 
2025-02-24T16:09:32.3818022Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3818233Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T16:09:32.3818238Z 
2025-02-24T16:09:32.3818374Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3818503Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3818606Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3818740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3818867Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3819081Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3819156Z err_msg = None
2025-02-24T16:09:32.3819161Z 
2025-02-24T16:09:32.3819277Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3819357Z         if err_msg is None:
2025-02-24T16:09:32.3819458Z             if left.shape != right.shape:
2025-02-24T16:09:32.3819543Z                 raise_assert_detail(
2025-02-24T16:09:32.3819693Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3819888Z                 )
2025-02-24T16:09:32.3819955Z     
2025-02-24T16:09:32.3820027Z             diff = 0
2025-02-24T16:09:32.3820138Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3820229Z                 # count up differences
2025-02-24T16:09:32.3820405Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3820491Z                     diff += 1
2025-02-24T16:09:32.3820563Z     
2025-02-24T16:09:32.3820651Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3820800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3820972Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3821090Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3821160Z E           
2025-02-24T16:09:32.3821276Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3821545Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3821809Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3821817Z 
2025-02-24T16:09:32.3822132Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3822137Z 
2025-02-24T16:09:32.3822308Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3822313Z 
2025-02-24T16:09:32.3822543Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2d80>
2025-02-24T16:09:32.3822716Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3822799Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3822803Z 
2025-02-24T16:09:32.3822941Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3823058Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3823143Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3823216Z         try:
2025-02-24T16:09:32.3823357Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3823444Z         except KeyError:
2025-02-24T16:09:32.3823588Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3823657Z     
2025-02-24T16:09:32.3823747Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3823842Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3823936Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3824071Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3824161Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3824253Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3824364Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3824438Z             else:
2025-02-24T16:09:32.3824535Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3824734Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3824739Z 
2025-02-24T16:09:32.3824865Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3824982Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3825133Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3825202Z     ???
2025-02-24T16:09:32.3825314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3825391Z 
2025-02-24T16:09:32.3825460Z >   ???
2025-02-24T16:09:32.3825591Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3825665Z E   
2025-02-24T16:09:32.3825793Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3825906Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3825976Z E          ...
2025-02-24T16:09:32.3826068Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3826197Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3826408Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3826485Z E          ...
2025-02-24T16:09:32.3826570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3826698Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3826804Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3826809Z 
2025-02-24T16:09:32.3826904Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3827110Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T16:09:32.3827119Z 
2025-02-24T16:09:32.3827246Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3827377Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3827475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3827617Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3827742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3827842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3827920Z err_msg = None
2025-02-24T16:09:32.3827924Z 
2025-02-24T16:09:32.3828038Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3828122Z         if err_msg is None:
2025-02-24T16:09:32.3828221Z             if left.shape != right.shape:
2025-02-24T16:09:32.3828313Z                 raise_assert_detail(
2025-02-24T16:09:32.3828466Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3828534Z                 )
2025-02-24T16:09:32.3828606Z     
2025-02-24T16:09:32.3828678Z             diff = 0
2025-02-24T16:09:32.3828794Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3828884Z                 # count up differences
2025-02-24T16:09:32.3829066Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3829147Z                     diff += 1
2025-02-24T16:09:32.3829213Z     
2025-02-24T16:09:32.3829307Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3829448Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3829625Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3829743Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3829815Z E           
2025-02-24T16:09:32.3829932Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3830196Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3830602Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3830608Z 
2025-02-24T16:09:32.3830929Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3831033Z 
2025-02-24T16:09:32.3831213Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3831217Z 
2025-02-24T16:09:32.3831447Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2e40>
2025-02-24T16:09:32.3831613Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3831700Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3831705Z 
2025-02-24T16:09:32.3831850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3831969Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3832058Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3832128Z         try:
2025-02-24T16:09:32.3832273Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3832359Z         except KeyError:
2025-02-24T16:09:32.3832499Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3832573Z     
2025-02-24T16:09:32.3832664Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3832761Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3832851Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3832987Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3833075Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3833167Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3833283Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3833353Z             else:
2025-02-24T16:09:32.3833453Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3833561Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3833566Z 
2025-02-24T16:09:32.3833697Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3833817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3833971Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3834043Z     ???
2025-02-24T16:09:32.3834155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3834160Z 
2025-02-24T16:09:32.3834231Z >   ???
2025-02-24T16:09:32.3834363Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3834430Z E   
2025-02-24T16:09:32.3834565Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3834674Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3834749Z E          ...
2025-02-24T16:09:32.3834839Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3834978Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3835093Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3835161Z E          ...
2025-02-24T16:09:32.3835250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3835378Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3835485Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3835490Z 
2025-02-24T16:09:32.3835579Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3835789Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T16:09:32.3835794Z 
2025-02-24T16:09:32.3836024Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3836488Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3836660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3836885Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3837105Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3837216Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3837412Z err_msg = None
2025-02-24T16:09:32.3837416Z 
2025-02-24T16:09:32.3837532Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3837611Z         if err_msg is None:
2025-02-24T16:09:32.3837709Z             if left.shape != right.shape:
2025-02-24T16:09:32.3837794Z                 raise_assert_detail(
2025-02-24T16:09:32.3837939Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3838014Z                 )
2025-02-24T16:09:32.3838079Z     
2025-02-24T16:09:32.3838151Z             diff = 0
2025-02-24T16:09:32.3838259Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3838350Z                 # count up differences
2025-02-24T16:09:32.3838525Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3838601Z                     diff += 1
2025-02-24T16:09:32.3838671Z     
2025-02-24T16:09:32.3838759Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3838905Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3839077Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3839195Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3839267Z E           
2025-02-24T16:09:32.3839378Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3839649Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3839913Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3839925Z 
2025-02-24T16:09:32.3840236Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3840241Z 
2025-02-24T16:09:32.3840419Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3840426Z 
2025-02-24T16:09:32.3840653Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b2fc0>
2025-02-24T16:09:32.3840825Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f0600af5520>
2025-02-24T16:09:32.3840902Z attr = 'j_blues'
2025-02-24T16:09:32.3840906Z 
2025-02-24T16:09:32.3841044Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3841161Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3841246Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3841319Z         try:
2025-02-24T16:09:32.3841466Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3841546Z         except KeyError:
2025-02-24T16:09:32.3841691Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3841758Z     
2025-02-24T16:09:32.3841848Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3841941Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3842167Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3842305Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3842390Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3842481Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3842589Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3842664Z             else:
2025-02-24T16:09:32.3842762Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3842873Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3842951Z 
2025-02-24T16:09:32.3843082Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3843194Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3843344Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3843413Z     ???
2025-02-24T16:09:32.3843527Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3843534Z 
2025-02-24T16:09:32.3843604Z >   ???
2025-02-24T16:09:32.3843732Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3843800Z E   
2025-02-24T16:09:32.3843926Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3844039Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3844109Z E          ...
2025-02-24T16:09:32.3844200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3844333Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3844447Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3844519Z E          ...
2025-02-24T16:09:32.3844601Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3844729Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3844833Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3844838Z 
2025-02-24T16:09:32.3844937Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3845165Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T16:09:32.3845169Z 
2025-02-24T16:09:32.3845297Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3845427Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3845523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3845659Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3845787Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3845882Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3845961Z err_msg = None
2025-02-24T16:09:32.3845965Z 
2025-02-24T16:09:32.3846075Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3846162Z         if err_msg is None:
2025-02-24T16:09:32.3846384Z             if left.shape != right.shape:
2025-02-24T16:09:32.3846471Z                 raise_assert_detail(
2025-02-24T16:09:32.3846620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3846690Z                 )
2025-02-24T16:09:32.3846763Z     
2025-02-24T16:09:32.3846832Z             diff = 0
2025-02-24T16:09:32.3846947Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3847037Z                 # count up differences
2025-02-24T16:09:32.3847210Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3847286Z                     diff += 1
2025-02-24T16:09:32.3847355Z     
2025-02-24T16:09:32.3847446Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3847582Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3847757Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3848019Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3848090Z E           
2025-02-24T16:09:32.3848206Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3848466Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3848837Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3848842Z 
2025-02-24T16:09:32.3849159Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3849163Z 
2025-02-24T16:09:32.3849334Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3849338Z 
2025-02-24T16:09:32.3849565Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b3d40>
2025-02-24T16:09:32.3849737Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3849809Z attr = 'lines'
2025-02-24T16:09:32.3849813Z 
2025-02-24T16:09:32.3849955Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3850071Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3850159Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3850233Z         try:
2025-02-24T16:09:32.3850374Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3850454Z         except KeyError:
2025-02-24T16:09:32.3850590Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3850663Z     
2025-02-24T16:09:32.3850749Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3850846Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3850937Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3851069Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3851159Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3851249Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3851363Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3851436Z             else:
2025-02-24T16:09:32.3851534Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3851641Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3851645Z 
2025-02-24T16:09:32.3851769Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3851886Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3852034Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3852108Z     ???
2025-02-24T16:09:32.3852216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3852225Z 
2025-02-24T16:09:32.3852292Z >   ???
2025-02-24T16:09:32.3852423Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3852491Z E   
2025-02-24T16:09:32.3852622Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3852732Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3852811Z E          ...
2025-02-24T16:09:32.3852901Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3853029Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3853147Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3853216Z E          ...
2025-02-24T16:09:32.3853305Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3853516Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3853630Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3853635Z 
2025-02-24T16:09:32.3853733Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3853964Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T16:09:32.3853968Z 
2025-02-24T16:09:32.3854197Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b3e00>
2025-02-24T16:09:32.3854362Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3854529Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3854534Z 
2025-02-24T16:09:32.3854678Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3854796Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3854883Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3854952Z         try:
2025-02-24T16:09:32.3855101Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3855179Z         except KeyError:
2025-02-24T16:09:32.3855319Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3855391Z     
2025-02-24T16:09:32.3855477Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3855572Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3855659Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3855795Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3855878Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3855975Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3856085Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3856089Z 
2025-02-24T16:09:32.3856217Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3856456Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3856466Z 
2025-02-24T16:09:32.3856603Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3856693Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3856806Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3856885Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3857031Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3857113Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3857222Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3857341Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3857420Z err_msg = None
2025-02-24T16:09:32.3857425Z 
2025-02-24T16:09:32.3857537Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3857618Z         if err_msg is None:
2025-02-24T16:09:32.3857715Z             if left.shape != right.shape:
2025-02-24T16:09:32.3857801Z                 raise_assert_detail(
2025-02-24T16:09:32.3857949Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3858024Z                 )
2025-02-24T16:09:32.3858090Z     
2025-02-24T16:09:32.3858164Z             diff = 0
2025-02-24T16:09:32.3858275Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3858364Z                 # count up differences
2025-02-24T16:09:32.3858533Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3858613Z                     diff += 1
2025-02-24T16:09:32.3858686Z     
2025-02-24T16:09:32.3858771Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3858911Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3859082Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3859191Z E           AssertionError: Series are different
2025-02-24T16:09:32.3859401Z E           
2025-02-24T16:09:32.3859508Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3859886Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3860221Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3860661Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3860670Z 
2025-02-24T16:09:32.3861126Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3861519Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T16:09:32.3861536Z 
2025-02-24T16:09:32.3861918Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009b3ec0>
2025-02-24T16:09:32.3862127Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3862217Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3862222Z 
2025-02-24T16:09:32.3862361Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3862480Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3862565Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3862639Z         try:
2025-02-24T16:09:32.3862778Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3862862Z         except KeyError:
2025-02-24T16:09:32.3862999Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3863071Z     
2025-02-24T16:09:32.3863157Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3863255Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3863352Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3863484Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3863572Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3863665Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3863778Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3863785Z 
2025-02-24T16:09:32.3863916Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3864028Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3864033Z 
2025-02-24T16:09:32.3864172Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3864255Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3864368Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3864452Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3864593Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3864676Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3864783Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3864864Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3864938Z err_msg = None
2025-02-24T16:09:32.3865052Z 
2025-02-24T16:09:32.3865169Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3865251Z         if err_msg is None:
2025-02-24T16:09:32.3865344Z             if left.shape != right.shape:
2025-02-24T16:09:32.3865429Z                 raise_assert_detail(
2025-02-24T16:09:32.3865571Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3865643Z                 )
2025-02-24T16:09:32.3865709Z     
2025-02-24T16:09:32.3865783Z             diff = 0
2025-02-24T16:09:32.3865900Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3866063Z                 # count up differences
2025-02-24T16:09:32.3866240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3866435Z                     diff += 1
2025-02-24T16:09:32.3866507Z     
2025-02-24T16:09:32.3866592Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3866735Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3866911Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3867019Z E           AssertionError: Series are different
2025-02-24T16:09:32.3867094Z E           
2025-02-24T16:09:32.3867193Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3867571Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3867962Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3868344Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3868356Z 
2025-02-24T16:09:32.3868667Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3868864Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T16:09:32.3868868Z 
2025-02-24T16:09:32.3868998Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3869129Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3869232Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3869367Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3869491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3869584Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3869665Z err_msg = None
2025-02-24T16:09:32.3869670Z 
2025-02-24T16:09:32.3869778Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3869858Z         if err_msg is None:
2025-02-24T16:09:32.3869954Z             if left.shape != right.shape:
2025-02-24T16:09:32.3870036Z                 raise_assert_detail(
2025-02-24T16:09:32.3870404Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3870477Z                 )
2025-02-24T16:09:32.3870546Z     
2025-02-24T16:09:32.3870621Z             diff = 0
2025-02-24T16:09:32.3870730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3870819Z                 # count up differences
2025-02-24T16:09:32.3870986Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3871069Z                     diff += 1
2025-02-24T16:09:32.3871137Z     
2025-02-24T16:09:32.3871229Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3871473Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3871643Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3871760Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3871830Z E           
2025-02-24T16:09:32.3871948Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3872213Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3872480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3872488Z 
2025-02-24T16:09:32.3872797Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3872802Z 
2025-02-24T16:09:32.3872972Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3872979Z 
2025-02-24T16:09:32.3873209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dc140>
2025-02-24T16:09:32.3873407Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>, attr = 'nu'
2025-02-24T16:09:32.3873416Z 
2025-02-24T16:09:32.3873553Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3873671Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3873755Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3873829Z         try:
2025-02-24T16:09:32.3873978Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3874061Z         except KeyError:
2025-02-24T16:09:32.3874200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3874276Z     
2025-02-24T16:09:32.3874367Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3874460Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3874556Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3874689Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3874777Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3874870Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3874983Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3874988Z 
2025-02-24T16:09:32.3875116Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3875228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3875383Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3875452Z     ???
2025-02-24T16:09:32.3875565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3875569Z 
2025-02-24T16:09:32.3875639Z >   ???
2025-02-24T16:09:32.3875770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3875841Z E   
2025-02-24T16:09:32.3876057Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3876171Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3876244Z E          ...
2025-02-24T16:09:32.3876430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3876567Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3876678Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3876750Z E          ...
2025-02-24T16:09:32.3876833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3877071Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3877179Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3877184Z 
2025-02-24T16:09:32.3877272Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3877488Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T16:09:32.3877493Z 
2025-02-24T16:09:32.3877621Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3877753Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3877854Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3877985Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3878108Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3878200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3878279Z err_msg = None
2025-02-24T16:09:32.3878283Z 
2025-02-24T16:09:32.3878399Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3878481Z         if err_msg is None:
2025-02-24T16:09:32.3878576Z             if left.shape != right.shape:
2025-02-24T16:09:32.3878667Z                 raise_assert_detail(
2025-02-24T16:09:32.3878812Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3878887Z                 )
2025-02-24T16:09:32.3878958Z     
2025-02-24T16:09:32.3879030Z             diff = 0
2025-02-24T16:09:32.3879145Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3879231Z                 # count up differences
2025-02-24T16:09:32.3879409Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3879485Z                     diff += 1
2025-02-24T16:09:32.3879557Z     
2025-02-24T16:09:32.3879648Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3879787Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3879962Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3880076Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3880149Z E           
2025-02-24T16:09:32.3880259Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3880528Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3880795Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3880803Z 
2025-02-24T16:09:32.3881114Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3881118Z 
2025-02-24T16:09:32.3881288Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3881407Z 
2025-02-24T16:09:32.3881636Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dc200>
2025-02-24T16:09:32.3881803Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3881890Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3881894Z 
2025-02-24T16:09:32.3882033Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3882145Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3882228Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3882296Z         try:
2025-02-24T16:09:32.3882534Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3882612Z         except KeyError:
2025-02-24T16:09:32.3882753Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3882824Z     
2025-02-24T16:09:32.3882910Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3883008Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3883098Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3883237Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3883323Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3883416Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3883528Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3883533Z 
2025-02-24T16:09:32.3883659Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3883773Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3883924Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3883995Z     ???
2025-02-24T16:09:32.3884107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3884111Z 
2025-02-24T16:09:32.3884182Z >   ???
2025-02-24T16:09:32.3884313Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3884384Z E   
2025-02-24T16:09:32.3884517Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3884626Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3884701Z E          ...
2025-02-24T16:09:32.3884791Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3884978Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3885183Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3885313Z E          ...
2025-02-24T16:09:32.3885460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3885676Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3885855Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3885862Z 
2025-02-24T16:09:32.3886021Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3886227Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T16:09:32.3886231Z 
2025-02-24T16:09:32.3886460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3886585Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3886684Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3886817Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3886938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3887037Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3887110Z err_msg = None
2025-02-24T16:09:32.3887114Z 
2025-02-24T16:09:32.3887229Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3887310Z         if err_msg is None:
2025-02-24T16:09:32.3887402Z             if left.shape != right.shape:
2025-02-24T16:09:32.3887491Z                 raise_assert_detail(
2025-02-24T16:09:32.3887782Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3887856Z                 )
2025-02-24T16:09:32.3887924Z     
2025-02-24T16:09:32.3887998Z             diff = 0
2025-02-24T16:09:32.3888115Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3888201Z                 # count up differences
2025-02-24T16:09:32.3888374Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3888449Z                     diff += 1
2025-02-24T16:09:32.3888519Z     
2025-02-24T16:09:32.3888709Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3888848Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3889020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3889132Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3889207Z E           
2025-02-24T16:09:32.3889323Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3889586Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3889854Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3889862Z 
2025-02-24T16:09:32.3890170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3890174Z 
2025-02-24T16:09:32.3890348Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3890354Z 
2025-02-24T16:09:32.3890580Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dc2c0>
2025-02-24T16:09:32.3890779Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>, attr = 'f_lu'
2025-02-24T16:09:32.3890784Z 
2025-02-24T16:09:32.3890924Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3891038Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3891125Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3891197Z         try:
2025-02-24T16:09:32.3891338Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3891420Z         except KeyError:
2025-02-24T16:09:32.3891559Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3891629Z     
2025-02-24T16:09:32.3891716Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3891811Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3891908Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3892039Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3892128Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3892215Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3892327Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3892331Z 
2025-02-24T16:09:32.3892464Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3892573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3892723Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3892792Z     ???
2025-02-24T16:09:32.3892902Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3892907Z 
2025-02-24T16:09:32.3892974Z >   ???
2025-02-24T16:09:32.3893108Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3893179Z E   
2025-02-24T16:09:32.3893394Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3893505Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3893575Z E          ...
2025-02-24T16:09:32.3893663Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3893791Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3893905Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3893976Z E          ...
2025-02-24T16:09:32.3894056Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3894281Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3894382Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3894386Z 
2025-02-24T16:09:32.3894478Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3894686Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T16:09:32.3894690Z 
2025-02-24T16:09:32.3894821Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3894948Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3895042Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3895174Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3895296Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3895389Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3895469Z err_msg = None
2025-02-24T16:09:32.3895474Z 
2025-02-24T16:09:32.3895584Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3895668Z         if err_msg is None:
2025-02-24T16:09:32.3895759Z             if left.shape != right.shape:
2025-02-24T16:09:32.3895847Z                 raise_assert_detail(
2025-02-24T16:09:32.3895999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3896068Z                 )
2025-02-24T16:09:32.3896138Z     
2025-02-24T16:09:32.3896208Z             diff = 0
2025-02-24T16:09:32.3896445Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3896536Z                 # count up differences
2025-02-24T16:09:32.3896709Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3896788Z                     diff += 1
2025-02-24T16:09:32.3896854Z     
2025-02-24T16:09:32.3896949Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3897084Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3897255Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3897370Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3897437Z E           
2025-02-24T16:09:32.3897549Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3897816Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3898081Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3898090Z 
2025-02-24T16:09:32.3898397Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3898401Z 
2025-02-24T16:09:32.3898568Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3898688Z 
2025-02-24T16:09:32.3898919Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dca40>
2025-02-24T16:09:32.3899085Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3899163Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3899168Z 
2025-02-24T16:09:32.3899314Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3899429Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3899516Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3899692Z         try:
2025-02-24T16:09:32.3899838Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3899922Z         except KeyError:
2025-02-24T16:09:32.3900060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3900131Z     
2025-02-24T16:09:32.3900220Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3900315Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3900406Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3900542Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3900632Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3900722Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3900839Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3900909Z             else:
2025-02-24T16:09:32.3901010Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3901115Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3901126Z 
2025-02-24T16:09:32.3901256Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3901372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3901518Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3901592Z     ???
2025-02-24T16:09:32.3901701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3901712Z 
2025-02-24T16:09:32.3901780Z >   ???
2025-02-24T16:09:32.3901907Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3901974Z E   
2025-02-24T16:09:32.3902106Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3902215Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3902289Z E          ...
2025-02-24T16:09:32.3902374Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3902507Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3902628Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3902697Z E          ...
2025-02-24T16:09:32.3902783Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3902906Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3903013Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3903021Z 
2025-02-24T16:09:32.3903111Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3903314Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T16:09:32.3903318Z 
2025-02-24T16:09:32.3903450Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3903576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3903678Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3903814Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3903938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3904038Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3904111Z err_msg = None
2025-02-24T16:09:32.3904116Z 
2025-02-24T16:09:32.3904230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3904395Z         if err_msg is None:
2025-02-24T16:09:32.3904492Z             if left.shape != right.shape:
2025-02-24T16:09:32.3904580Z                 raise_assert_detail(
2025-02-24T16:09:32.3904722Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3904794Z                 )
2025-02-24T16:09:32.3904861Z     
2025-02-24T16:09:32.3904940Z             diff = 0
2025-02-24T16:09:32.3905049Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3905140Z                 # count up differences
2025-02-24T16:09:32.3905407Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3905483Z                     diff += 1
2025-02-24T16:09:32.3905554Z     
2025-02-24T16:09:32.3905639Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3905778Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3905946Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3906063Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3906136Z E           
2025-02-24T16:09:32.3906246Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3906610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3906882Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3906890Z 
2025-02-24T16:09:32.3907194Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3907199Z 
2025-02-24T16:09:32.3907369Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3907374Z 
2025-02-24T16:09:32.3907599Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dcb00>
2025-02-24T16:09:32.3907766Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3907845Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3907850Z 
2025-02-24T16:09:32.3907990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3908106Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3908189Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3908260Z         try:
2025-02-24T16:09:32.3908402Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3908480Z         except KeyError:
2025-02-24T16:09:32.3908620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3908686Z     
2025-02-24T16:09:32.3908776Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3908870Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3908961Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3909097Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3909180Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3909271Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3909381Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3909458Z             else:
2025-02-24T16:09:32.3909552Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3909662Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3909666Z 
2025-02-24T16:09:32.3909799Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3910006Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3910428Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3910547Z     ???
2025-02-24T16:09:32.3910739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3910746Z 
2025-02-24T16:09:32.3910865Z >   ???
2025-02-24T16:09:32.3911046Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3911119Z E   
2025-02-24T16:09:32.3911247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3911358Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3911542Z E          ...
2025-02-24T16:09:32.3911632Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3911766Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3911877Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3911950Z E          ...
2025-02-24T16:09:32.3912032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3912165Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3912273Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3912278Z 
2025-02-24T16:09:32.3912368Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3912568Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T16:09:32.3912573Z 
2025-02-24T16:09:32.3912701Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3912830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3912933Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3913064Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3913189Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3913283Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3913361Z err_msg = None
2025-02-24T16:09:32.3913365Z 
2025-02-24T16:09:32.3913477Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3913560Z         if err_msg is None:
2025-02-24T16:09:32.3913656Z             if left.shape != right.shape:
2025-02-24T16:09:32.3913738Z                 raise_assert_detail(
2025-02-24T16:09:32.3913884Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3913953Z                 )
2025-02-24T16:09:32.3914028Z     
2025-02-24T16:09:32.3914098Z             diff = 0
2025-02-24T16:09:32.3914212Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3914303Z                 # count up differences
2025-02-24T16:09:32.3914472Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3914549Z                     diff += 1
2025-02-24T16:09:32.3914620Z     
2025-02-24T16:09:32.3914710Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3914846Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3915023Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3915139Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3915206Z E           
2025-02-24T16:09:32.3915329Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3915590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3915859Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3915949Z 
2025-02-24T16:09:32.3916370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3916376Z 
2025-02-24T16:09:32.3916553Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3916558Z 
2025-02-24T16:09:32.3916782Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dcc80>
2025-02-24T16:09:32.3917065Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f88840b0>
2025-02-24T16:09:32.3917139Z attr = 'j_blues'
2025-02-24T16:09:32.3917144Z 
2025-02-24T16:09:32.3917284Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3917397Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3917484Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3917564Z         try:
2025-02-24T16:09:32.3917703Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3917787Z         except KeyError:
2025-02-24T16:09:32.3917920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3917987Z     
2025-02-24T16:09:32.3918075Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3918171Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3918262Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3918394Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3918485Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3918573Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3918681Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3918754Z             else:
2025-02-24T16:09:32.3918847Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3918960Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3918968Z 
2025-02-24T16:09:32.3919093Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3919226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3919484Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3919608Z     ???
2025-02-24T16:09:32.3919801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3919807Z 
2025-02-24T16:09:32.3919920Z >   ???
2025-02-24T16:09:32.3920140Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3920262Z E   
2025-02-24T16:09:32.3920411Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3920524Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3920599Z E          ...
2025-02-24T16:09:32.3920687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3920821Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3920937Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3921007Z E          ...
2025-02-24T16:09:32.3921095Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3921220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3921322Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3921327Z 
2025-02-24T16:09:32.3921418Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3921612Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T16:09:32.3921619Z 
2025-02-24T16:09:32.3921751Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3921881Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3921976Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3922231Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3922355Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3922451Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3922524Z err_msg = None
2025-02-24T16:09:32.3922532Z 
2025-02-24T16:09:32.3922643Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3922727Z         if err_msg is None:
2025-02-24T16:09:32.3922821Z             if left.shape != right.shape:
2025-02-24T16:09:32.3922985Z                 raise_assert_detail(
2025-02-24T16:09:32.3923128Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3923199Z                 )
2025-02-24T16:09:32.3923266Z     
2025-02-24T16:09:32.3923334Z             diff = 0
2025-02-24T16:09:32.3923447Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3923536Z                 # count up differences
2025-02-24T16:09:32.3923707Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3923784Z                     diff += 1
2025-02-24T16:09:32.3923856Z     
2025-02-24T16:09:32.3923947Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3924084Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3924260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3924372Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3924450Z E           
2025-02-24T16:09:32.3924561Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3924828Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3925102Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3925107Z 
2025-02-24T16:09:32.3925415Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3925427Z 
2025-02-24T16:09:32.3925598Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3925602Z 
2025-02-24T16:09:32.3925834Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dda00>
2025-02-24T16:09:32.3926003Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3926079Z attr = 'lines'
2025-02-24T16:09:32.3926086Z 
2025-02-24T16:09:32.3926223Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3926453Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3926541Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3926612Z         try:
2025-02-24T16:09:32.3926752Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3926830Z         except KeyError:
2025-02-24T16:09:32.3926968Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3927035Z     
2025-02-24T16:09:32.3927122Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3927219Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3927306Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3927440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3927526Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3927619Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3927946Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3928070Z             else:
2025-02-24T16:09:32.3928236Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3928414Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3928421Z 
2025-02-24T16:09:32.3928634Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3928826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3929003Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3929195Z     ???
2025-02-24T16:09:32.3929302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3929307Z 
2025-02-24T16:09:32.3929375Z >   ???
2025-02-24T16:09:32.3929501Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3929572Z E   
2025-02-24T16:09:32.3929699Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3929815Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3929892Z E          ...
2025-02-24T16:09:32.3929978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3930110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3930222Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3930295Z E          ...
2025-02-24T16:09:32.3930382Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3930507Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3930618Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3930623Z 
2025-02-24T16:09:32.3930710Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3930940Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T16:09:32.3930945Z 
2025-02-24T16:09:32.3931169Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009ddac0>
2025-02-24T16:09:32.3931344Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3931436Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.3931441Z 
2025-02-24T16:09:32.3931576Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3931691Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3931772Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3931846Z         try:
2025-02-24T16:09:32.3931988Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3932068Z         except KeyError:
2025-02-24T16:09:32.3932211Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3932279Z     
2025-02-24T16:09:32.3932367Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3932459Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3932547Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3932683Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3932769Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3932865Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3932970Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3932975Z 
2025-02-24T16:09:32.3933108Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3933221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3933226Z 
2025-02-24T16:09:32.3933359Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3933448Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3933556Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3933639Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3933777Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.3933861Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.3934055Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3934133Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.3934211Z err_msg = None
2025-02-24T16:09:32.3934215Z 
2025-02-24T16:09:32.3934326Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3934413Z         if err_msg is None:
2025-02-24T16:09:32.3934508Z             if left.shape != right.shape:
2025-02-24T16:09:32.3934590Z                 raise_assert_detail(
2025-02-24T16:09:32.3934739Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3934882Z                 )
2025-02-24T16:09:32.3934952Z     
2025-02-24T16:09:32.3935024Z             diff = 0
2025-02-24T16:09:32.3935143Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3935233Z                 # count up differences
2025-02-24T16:09:32.3935403Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3935486Z                     diff += 1
2025-02-24T16:09:32.3935554Z     
2025-02-24T16:09:32.3935644Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3935779Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3935957Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3936065Z E           AssertionError: Series are different
2025-02-24T16:09:32.3936133Z E           
2025-02-24T16:09:32.3936238Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.3936752Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3937096Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3937434Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3937442Z 
2025-02-24T16:09:32.3937757Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3937982Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T16:09:32.3937987Z 
2025-02-24T16:09:32.3938209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009ddb80>
2025-02-24T16:09:32.3938379Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3938471Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.3938476Z 
2025-02-24T16:09:32.3938615Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3938729Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3938816Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3938884Z         try:
2025-02-24T16:09:32.3939029Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3939107Z         except KeyError:
2025-02-24T16:09:32.3939247Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3939317Z     
2025-02-24T16:09:32.3939402Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3939616Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3939704Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3939839Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3939922Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3940014Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3940125Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3940130Z 
2025-02-24T16:09:32.3940253Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3940487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3940492Z 
2025-02-24T16:09:32.3940628Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3940714Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3940825Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3940911Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3941054Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.3941135Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.3941242Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.3941326Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.3941427Z err_msg = None
2025-02-24T16:09:32.3941434Z 
2025-02-24T16:09:32.3941562Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3941645Z         if err_msg is None:
2025-02-24T16:09:32.3941742Z             if left.shape != right.shape:
2025-02-24T16:09:32.3941824Z                 raise_assert_detail(
2025-02-24T16:09:32.3941972Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3942046Z                 )
2025-02-24T16:09:32.3942112Z     
2025-02-24T16:09:32.3942185Z             diff = 0
2025-02-24T16:09:32.3942300Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3942389Z                 # count up differences
2025-02-24T16:09:32.3942557Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3942637Z                     diff += 1
2025-02-24T16:09:32.3942708Z     
2025-02-24T16:09:32.3942795Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3942933Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3943106Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3943217Z E           AssertionError: Series are different
2025-02-24T16:09:32.3943288Z E           
2025-02-24T16:09:32.3943395Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.3943772Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.3944155Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3944541Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.3944630Z 
2025-02-24T16:09:32.3944938Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3945134Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T16:09:32.3945138Z 
2025-02-24T16:09:32.3945264Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3945392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3945567Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3945705Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3945830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3945928Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3946008Z err_msg = None
2025-02-24T16:09:32.3946012Z 
2025-02-24T16:09:32.3946121Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3946205Z         if err_msg is None:
2025-02-24T16:09:32.3946396Z             if left.shape != right.shape:
2025-02-24T16:09:32.3946487Z                 raise_assert_detail(
2025-02-24T16:09:32.3946639Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3946708Z                 )
2025-02-24T16:09:32.3946782Z     
2025-02-24T16:09:32.3946853Z             diff = 0
2025-02-24T16:09:32.3946970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3947056Z                 # count up differences
2025-02-24T16:09:32.3947229Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3947308Z                     diff += 1
2025-02-24T16:09:32.3947378Z     
2025-02-24T16:09:32.3947464Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3947598Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3947774Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3947885Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3947983Z E           
2025-02-24T16:09:32.3948097Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3948358Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3948628Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3948636Z 
2025-02-24T16:09:32.3948944Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3948949Z 
2025-02-24T16:09:32.3949118Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3949123Z 
2025-02-24T16:09:32.3949351Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dddc0>
2025-02-24T16:09:32.3949561Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>, attr = 'nu'
2025-02-24T16:09:32.3949566Z 
2025-02-24T16:09:32.3949706Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3949824Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3949907Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3950117Z         try:
2025-02-24T16:09:32.3950257Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3950340Z         except KeyError:
2025-02-24T16:09:32.3950478Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3950545Z     
2025-02-24T16:09:32.3950635Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3950729Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3950823Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3950952Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3951144Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3951237Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3951348Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3951351Z 
2025-02-24T16:09:32.3951477Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3951588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3951743Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3951816Z     ???
2025-02-24T16:09:32.3951934Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3951940Z 
2025-02-24T16:09:32.3952073Z >   ???
2025-02-24T16:09:32.3952292Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3952415Z E   
2025-02-24T16:09:32.3952631Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3952818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3952949Z E          ...
2025-02-24T16:09:32.3953090Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3953230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3953344Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3953421Z E          ...
2025-02-24T16:09:32.3953504Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3953637Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3953744Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3953748Z 
2025-02-24T16:09:32.3953836Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3954043Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T16:09:32.3954048Z 
2025-02-24T16:09:32.3954177Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3954310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3954412Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3954542Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3954670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3954762Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3954840Z err_msg = None
2025-02-24T16:09:32.3954845Z 
2025-02-24T16:09:32.3954960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3955039Z         if err_msg is None:
2025-02-24T16:09:32.3955135Z             if left.shape != right.shape:
2025-02-24T16:09:32.3955219Z                 raise_assert_detail(
2025-02-24T16:09:32.3955362Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3955437Z                 )
2025-02-24T16:09:32.3955509Z     
2025-02-24T16:09:32.3955582Z             diff = 0
2025-02-24T16:09:32.3955691Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3955781Z                 # count up differences
2025-02-24T16:09:32.3955948Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3956029Z                     diff += 1
2025-02-24T16:09:32.3956185Z     
2025-02-24T16:09:32.3956380Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3956523Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3956692Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3956809Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3956879Z E           
2025-02-24T16:09:32.3956993Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3957256Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3957636Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3957644Z 
2025-02-24T16:09:32.3957950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3957955Z 
2025-02-24T16:09:32.3958128Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3958133Z 
2025-02-24T16:09:32.3958359Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dde80>
2025-02-24T16:09:32.3958532Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3958610Z attr = 'wavelength_cm'
2025-02-24T16:09:32.3958614Z 
2025-02-24T16:09:32.3958755Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3958872Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3958953Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3959029Z         try:
2025-02-24T16:09:32.3959166Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3959251Z         except KeyError:
2025-02-24T16:09:32.3959386Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3959457Z     
2025-02-24T16:09:32.3959548Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3959638Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3959729Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3959860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3959951Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3960038Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3960154Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3960158Z 
2025-02-24T16:09:32.3960289Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3960401Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3960566Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3960636Z     ???
2025-02-24T16:09:32.3960751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3960755Z 
2025-02-24T16:09:32.3960830Z >   ???
2025-02-24T16:09:32.3960957Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3961030Z E   
2025-02-24T16:09:32.3961160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3961277Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3961348Z E          ...
2025-02-24T16:09:32.3961443Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3961603Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3961801Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3961927Z E          ...
2025-02-24T16:09:32.3962224Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3962443Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3962624Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3962631Z 
2025-02-24T16:09:32.3962778Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3963112Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T16:09:32.3963119Z 
2025-02-24T16:09:32.3963335Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3963658Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3963820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3964048Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3964209Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3964308Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3964388Z err_msg = None
2025-02-24T16:09:32.3964392Z 
2025-02-24T16:09:32.3964510Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3964590Z         if err_msg is None:
2025-02-24T16:09:32.3964687Z             if left.shape != right.shape:
2025-02-24T16:09:32.3964771Z                 raise_assert_detail(
2025-02-24T16:09:32.3964921Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3964995Z                 )
2025-02-24T16:09:32.3965066Z     
2025-02-24T16:09:32.3965142Z             diff = 0
2025-02-24T16:09:32.3965253Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3965345Z                 # count up differences
2025-02-24T16:09:32.3965516Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3965598Z                     diff += 1
2025-02-24T16:09:32.3973075Z     
2025-02-24T16:09:32.3973211Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3973375Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3973559Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3973686Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3973765Z E           
2025-02-24T16:09:32.3973888Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3974162Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3974442Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3974451Z 
2025-02-24T16:09:32.3974777Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3974783Z 
2025-02-24T16:09:32.3974969Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3974975Z 
2025-02-24T16:09:32.3975209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009ddf40>
2025-02-24T16:09:32.3975422Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>, attr = 'f_lu'
2025-02-24T16:09:32.3975427Z 
2025-02-24T16:09:32.3975575Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3975693Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3975785Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3976028Z         try:
2025-02-24T16:09:32.3976175Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3976388Z         except KeyError:
2025-02-24T16:09:32.3976538Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3976611Z     
2025-02-24T16:09:32.3976701Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3976802Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3976891Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3977037Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3977263Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3977354Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3977469Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3977474Z 
2025-02-24T16:09:32.3977607Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.3977728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3977894Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3977965Z     ???
2025-02-24T16:09:32.3978081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3978086Z 
2025-02-24T16:09:32.3978154Z >   ???
2025-02-24T16:09:32.3978293Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3978361Z E   
2025-02-24T16:09:32.3978513Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3978724Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3978853Z E          ...
2025-02-24T16:09:32.3979015Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3979234Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3979428Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3979550Z E          ...
2025-02-24T16:09:32.3979699Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3979868Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3979978Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3979983Z 
2025-02-24T16:09:32.3980081Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3980290Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T16:09:32.3980299Z 
2025-02-24T16:09:32.3980431Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3980576Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3980679Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3980817Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3980942Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3981042Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3981118Z err_msg = None
2025-02-24T16:09:32.3981123Z 
2025-02-24T16:09:32.3981240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3981327Z         if err_msg is None:
2025-02-24T16:09:32.3981424Z             if left.shape != right.shape:
2025-02-24T16:09:32.3981514Z                 raise_assert_detail(
2025-02-24T16:09:32.3981668Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3981738Z                 )
2025-02-24T16:09:32.3981814Z     
2025-02-24T16:09:32.3981885Z             diff = 0
2025-02-24T16:09:32.3982003Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3982090Z                 # count up differences
2025-02-24T16:09:32.3982267Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3982349Z                     diff += 1
2025-02-24T16:09:32.3982545Z     
2025-02-24T16:09:32.3982639Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3982780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3982958Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3983073Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3983146Z E           
2025-02-24T16:09:32.3983260Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3983523Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3983867Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3983876Z 
2025-02-24T16:09:32.3984197Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3984202Z 
2025-02-24T16:09:32.3984376Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3984381Z 
2025-02-24T16:09:32.3984615Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009de6c0>
2025-02-24T16:09:32.3984792Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3984875Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.3984880Z 
2025-02-24T16:09:32.3985025Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3985145Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3985238Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3985308Z         try:
2025-02-24T16:09:32.3985454Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3985539Z         except KeyError:
2025-02-24T16:09:32.3985678Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3985750Z     
2025-02-24T16:09:32.3985837Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3985936Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3986026Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3986164Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3986257Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3986471Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3986588Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3986658Z             else:
2025-02-24T16:09:32.3986761Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3986873Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3986878Z 
2025-02-24T16:09:32.3987008Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3987129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3987279Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3987352Z     ???
2025-02-24T16:09:32.3987462Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3987467Z 
2025-02-24T16:09:32.3987538Z >   ???
2025-02-24T16:09:32.3987672Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3987739Z E   
2025-02-24T16:09:32.3987873Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3987984Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3988060Z E          ...
2025-02-24T16:09:32.3988149Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3988408Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3988524Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3988594Z E          ...
2025-02-24T16:09:32.3988682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3988811Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3988920Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3988925Z 
2025-02-24T16:09:32.3989014Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3989220Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T16:09:32.3989326Z 
2025-02-24T16:09:32.3989461Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3989595Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3989701Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3989838Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3989966Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3990063Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3990138Z err_msg = None
2025-02-24T16:09:32.3990142Z 
2025-02-24T16:09:32.3990260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3990342Z         if err_msg is None:
2025-02-24T16:09:32.3990442Z             if left.shape != right.shape:
2025-02-24T16:09:32.3990534Z                 raise_assert_detail(
2025-02-24T16:09:32.3990684Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3990757Z                 )
2025-02-24T16:09:32.3990826Z     
2025-02-24T16:09:32.3990900Z             diff = 0
2025-02-24T16:09:32.3991010Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3991106Z                 # count up differences
2025-02-24T16:09:32.3991283Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.3991361Z                     diff += 1
2025-02-24T16:09:32.3991435Z     
2025-02-24T16:09:32.3991522Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.3991663Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.3991838Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.3991957Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.3992035Z E           
2025-02-24T16:09:32.3992147Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.3992414Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3992680Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.3992691Z 
2025-02-24T16:09:32.3993002Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.3993009Z 
2025-02-24T16:09:32.3993184Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.3993189Z 
2025-02-24T16:09:32.3993413Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009de780>
2025-02-24T16:09:32.3993587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.3993669Z attr = 'beta_sobolev'
2025-02-24T16:09:32.3993758Z 
2025-02-24T16:09:32.3993898Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.3994017Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.3994099Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.3994172Z         try:
2025-02-24T16:09:32.3994314Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.3994393Z         except KeyError:
2025-02-24T16:09:32.3994538Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.3994606Z     
2025-02-24T16:09:32.3994776Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.3994869Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.3994962Z             if attr == "selected_atoms":
2025-02-24T16:09:32.3995099Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.3995183Z             elif actual.ndim == 1:
2025-02-24T16:09:32.3995276Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.3995388Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.3995460Z             else:
2025-02-24T16:09:32.3995555Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.3995667Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.3995672Z 
2025-02-24T16:09:32.3995800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.3995918Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3996069Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.3996141Z     ???
2025-02-24T16:09:32.3996256Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.3996358Z 
2025-02-24T16:09:32.3996431Z >   ???
2025-02-24T16:09:32.3996570Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.3996657Z E   
2025-02-24T16:09:32.3996789Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.3996908Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3996979Z E          ...
2025-02-24T16:09:32.3997071Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3997206Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3997320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.3997392Z E          ...
2025-02-24T16:09:32.3997474Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.3997605Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.3997713Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.3997718Z 
2025-02-24T16:09:32.3997811Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.3998013Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T16:09:32.3998018Z 
2025-02-24T16:09:32.3998149Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3998287Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3998384Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3998521Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.3998651Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.3998744Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.3998829Z err_msg = None
2025-02-24T16:09:32.3998834Z 
2025-02-24T16:09:32.3998944Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.3999034Z         if err_msg is None:
2025-02-24T16:09:32.3999136Z             if left.shape != right.shape:
2025-02-24T16:09:32.3999221Z                 raise_assert_detail(
2025-02-24T16:09:32.3999373Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.3999559Z                 )
2025-02-24T16:09:32.3999632Z     
2025-02-24T16:09:32.3999704Z             diff = 0
2025-02-24T16:09:32.3999818Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.3999910Z                 # count up differences
2025-02-24T16:09:32.4000085Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4000166Z                     diff += 1
2025-02-24T16:09:32.4000234Z     
2025-02-24T16:09:32.4000325Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4000588Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4000765Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4000884Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4000954Z E           
2025-02-24T16:09:32.4001067Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4001331Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4001601Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4001609Z 
2025-02-24T16:09:32.4001918Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4001923Z 
2025-02-24T16:09:32.4002090Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4002095Z 
2025-02-24T16:09:32.4002327Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009de900>
2025-02-24T16:09:32.4002498Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05cddb7b30>
2025-02-24T16:09:32.4002572Z attr = 'j_blues'
2025-02-24T16:09:32.4002577Z 
2025-02-24T16:09:32.4002719Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4002834Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4002922Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4002996Z         try:
2025-02-24T16:09:32.4003138Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4003224Z         except KeyError:
2025-02-24T16:09:32.4003661Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4003732Z     
2025-02-24T16:09:32.4003820Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4003917Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4004013Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4004149Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4004242Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4004332Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4004446Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4004517Z             else:
2025-02-24T16:09:32.4004617Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4004727Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4004732Z 
2025-02-24T16:09:32.4004857Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4004979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4005126Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4005200Z     ???
2025-02-24T16:09:32.4005312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4005401Z 
2025-02-24T16:09:32.4005471Z >   ???
2025-02-24T16:09:32.4005605Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4005673Z E   
2025-02-24T16:09:32.4005805Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4005917Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4005991Z E          ...
2025-02-24T16:09:32.4006079Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4006208Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4006423Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4006625Z E          ...
2025-02-24T16:09:32.4006719Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4006847Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4006952Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4006956Z 
2025-02-24T16:09:32.4007053Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4007265Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T16:09:32.4007269Z 
2025-02-24T16:09:32.4007400Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4007530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4007627Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4007762Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4007890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4007985Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4008066Z err_msg = None
2025-02-24T16:09:32.4008070Z 
2025-02-24T16:09:32.4008183Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4008271Z         if err_msg is None:
2025-02-24T16:09:32.4008368Z             if left.shape != right.shape:
2025-02-24T16:09:32.4008457Z                 raise_assert_detail(
2025-02-24T16:09:32.4008604Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4008674Z                 )
2025-02-24T16:09:32.4008742Z     
2025-02-24T16:09:32.4008813Z             diff = 0
2025-02-24T16:09:32.4008927Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4009014Z                 # count up differences
2025-02-24T16:09:32.4009189Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4009271Z                     diff += 1
2025-02-24T16:09:32.4009339Z     
2025-02-24T16:09:32.4009431Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4009567Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4009746Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4009865Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4009936Z E           
2025-02-24T16:09:32.4010049Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4010309Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4010621Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4010638Z 
2025-02-24T16:09:32.4011173Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4011331Z 
2025-02-24T16:09:32.4011619Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4011625Z 
2025-02-24T16:09:32.4011952Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009df680>
2025-02-24T16:09:32.4012128Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4012201Z attr = 'lines'
2025-02-24T16:09:32.4012205Z 
2025-02-24T16:09:32.4012345Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4012556Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4012644Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4012714Z         try:
2025-02-24T16:09:32.4012857Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4012938Z         except KeyError:
2025-02-24T16:09:32.4013076Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4013150Z     
2025-02-24T16:09:32.4013237Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4013336Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4013424Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4013560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4013648Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4013736Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4013852Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4013922Z             else:
2025-02-24T16:09:32.4014024Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4014130Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4014139Z 
2025-02-24T16:09:32.4014265Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4014381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4014527Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4014606Z     ???
2025-02-24T16:09:32.4014717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4014721Z 
2025-02-24T16:09:32.4014793Z >   ???
2025-02-24T16:09:32.4014923Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4014990Z E   
2025-02-24T16:09:32.4015122Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4015232Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4015305Z E          ...
2025-02-24T16:09:32.4015394Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4015534Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4015650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4015719Z E          ...
2025-02-24T16:09:32.4015808Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4015933Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4016047Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4016052Z 
2025-02-24T16:09:32.4016142Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4016578Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T16:09:32.4016585Z 
2025-02-24T16:09:32.4016820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009df740>
2025-02-24T16:09:32.4016993Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4017089Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.4017094Z 
2025-02-24T16:09:32.4017232Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4017345Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4017430Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4017500Z         try:
2025-02-24T16:09:32.4017642Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4017848Z         except KeyError:
2025-02-24T16:09:32.4017990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4018063Z     
2025-02-24T16:09:32.4018150Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4018244Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4018332Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4018469Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4018556Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4018647Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4018862Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4018867Z 
2025-02-24T16:09:32.4018992Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4019104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4019108Z 
2025-02-24T16:09:32.4019244Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4019336Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4019448Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4019530Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4019673Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4019753Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4019862Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4019943Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4020022Z err_msg = None
2025-02-24T16:09:32.4020026Z 
2025-02-24T16:09:32.4020142Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4020221Z         if err_msg is None:
2025-02-24T16:09:32.4020317Z             if left.shape != right.shape:
2025-02-24T16:09:32.4020402Z                 raise_assert_detail(
2025-02-24T16:09:32.4020556Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4020631Z                 )
2025-02-24T16:09:32.4020698Z     
2025-02-24T16:09:32.4020775Z             diff = 0
2025-02-24T16:09:32.4020885Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4020976Z                 # count up differences
2025-02-24T16:09:32.4021148Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4021230Z                     diff += 1
2025-02-24T16:09:32.4021305Z     
2025-02-24T16:09:32.4021391Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4021530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4021706Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4021817Z E           AssertionError: Series are different
2025-02-24T16:09:32.4021887Z E           
2025-02-24T16:09:32.4022007Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.4022388Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4022722Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4023062Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4023170Z 
2025-02-24T16:09:32.4023489Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4023743Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T16:09:32.4023826Z 
2025-02-24T16:09:32.4024048Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009df800>
2025-02-24T16:09:32.4024223Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4024312Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.4024317Z 
2025-02-24T16:09:32.4024460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4024577Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4024663Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4024738Z         try:
2025-02-24T16:09:32.4024877Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4024963Z         except KeyError:
2025-02-24T16:09:32.4025102Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4025174Z     
2025-02-24T16:09:32.4025260Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4025358Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4025455Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4025587Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4025676Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4025779Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4025898Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4025902Z 
2025-02-24T16:09:32.4026032Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4026154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4026158Z 
2025-02-24T16:09:32.4026400Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4026487Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4026598Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4026677Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4026825Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4026914Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4027020Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4027102Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4027177Z err_msg = None
2025-02-24T16:09:32.4027182Z 
2025-02-24T16:09:32.4027296Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4027383Z         if err_msg is None:
2025-02-24T16:09:32.4027479Z             if left.shape != right.shape:
2025-02-24T16:09:32.4027567Z                 raise_assert_detail(
2025-02-24T16:09:32.4027710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4027781Z                 )
2025-02-24T16:09:32.4027848Z     
2025-02-24T16:09:32.4027923Z             diff = 0
2025-02-24T16:09:32.4028038Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4028127Z                 # count up differences
2025-02-24T16:09:32.4028301Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4028378Z                     diff += 1
2025-02-24T16:09:32.4028452Z     
2025-02-24T16:09:32.4028539Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4028678Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4028969Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4029076Z E           AssertionError: Series are different
2025-02-24T16:09:32.4029147Z E           
2025-02-24T16:09:32.4029248Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.4029625Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4030109Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4030491Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4030503Z 
2025-02-24T16:09:32.4030814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4031021Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T16:09:32.4031026Z 
2025-02-24T16:09:32.4031152Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4031284Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4031388Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4031519Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4031645Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4031740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4031820Z err_msg = None
2025-02-24T16:09:32.4031825Z 
2025-02-24T16:09:32.4031937Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4032018Z         if err_msg is None:
2025-02-24T16:09:32.4032117Z             if left.shape != right.shape:
2025-02-24T16:09:32.4032200Z                 raise_assert_detail(
2025-02-24T16:09:32.4032345Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4032418Z                 )
2025-02-24T16:09:32.4032493Z     
2025-02-24T16:09:32.4032569Z             diff = 0
2025-02-24T16:09:32.4032682Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4032774Z                 # count up differences
2025-02-24T16:09:32.4032944Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4033026Z                     diff += 1
2025-02-24T16:09:32.4033094Z     
2025-02-24T16:09:32.4033185Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4033327Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4033497Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4033614Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4033685Z E           
2025-02-24T16:09:32.4033803Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4034154Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4034423Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4034501Z 
2025-02-24T16:09:32.4034806Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4034810Z 
2025-02-24T16:09:32.4034982Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4034989Z 
2025-02-24T16:09:32.4035213Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dfa40>
2025-02-24T16:09:32.4035419Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>, attr = 'nu'
2025-02-24T16:09:32.4035423Z 
2025-02-24T16:09:32.4035561Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4035679Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4035774Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4035844Z         try:
2025-02-24T16:09:32.4035988Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4036069Z         except KeyError:
2025-02-24T16:09:32.4036212Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4036376Z     
2025-02-24T16:09:32.4036469Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4036565Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4036652Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4036788Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4036874Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4036967Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4037074Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4037083Z 
2025-02-24T16:09:32.4037211Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4037328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4037476Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4037553Z     ???
2025-02-24T16:09:32.4037662Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4037666Z 
2025-02-24T16:09:32.4037738Z >   ???
2025-02-24T16:09:32.4037873Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4037940Z E   
2025-02-24T16:09:32.4038071Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4038184Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4038258Z E          ...
2025-02-24T16:09:32.4038345Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4038482Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4038596Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4038666Z E          ...
2025-02-24T16:09:32.4038754Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4038877Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4038991Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4038995Z 
2025-02-24T16:09:32.4039087Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4039307Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T16:09:32.4039311Z 
2025-02-24T16:09:32.4039441Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4039687Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4039786Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4039918Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4040046Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4040144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4040319Z err_msg = None
2025-02-24T16:09:32.4040323Z 
2025-02-24T16:09:32.4040439Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4040520Z         if err_msg is None:
2025-02-24T16:09:32.4040617Z             if left.shape != right.shape:
2025-02-24T16:09:32.4040705Z                 raise_assert_detail(
2025-02-24T16:09:32.4040850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4040928Z                 )
2025-02-24T16:09:32.4040999Z     
2025-02-24T16:09:32.4041069Z             diff = 0
2025-02-24T16:09:32.4041185Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4041273Z                 # count up differences
2025-02-24T16:09:32.4041446Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4041524Z                     diff += 1
2025-02-24T16:09:32.4041595Z     
2025-02-24T16:09:32.4041688Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4041826Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4042000Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4042115Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4042191Z E           
2025-02-24T16:09:32.4042307Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4042569Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4042838Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4042847Z 
2025-02-24T16:09:32.4043401Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4043410Z 
2025-02-24T16:09:32.4043701Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4043712Z 
2025-02-24T16:09:32.4044088Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dfb00>
2025-02-24T16:09:32.4044264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4044349Z attr = 'wavelength_cm'
2025-02-24T16:09:32.4044353Z 
2025-02-24T16:09:32.4044496Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4044610Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4044698Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4044771Z         try:
2025-02-24T16:09:32.4044916Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4044999Z         except KeyError:
2025-02-24T16:09:32.4045142Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4045216Z     
2025-02-24T16:09:32.4045304Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4045401Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4045490Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4045742Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4045828Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4045924Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4046041Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4046046Z 
2025-02-24T16:09:32.4046171Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4046399Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4046552Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4046741Z     ???
2025-02-24T16:09:32.4046857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4046861Z 
2025-02-24T16:09:32.4046929Z >   ???
2025-02-24T16:09:32.4047059Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4047126Z E   
2025-02-24T16:09:32.4047262Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4047378Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4047461Z E          ...
2025-02-24T16:09:32.4047549Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4047683Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4047795Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4047867Z E          ...
2025-02-24T16:09:32.4047984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4048114Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4048223Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4048228Z 
2025-02-24T16:09:32.4048317Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4048532Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T16:09:32.4048537Z 
2025-02-24T16:09:32.4048668Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4048804Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4048905Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4049041Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4049169Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4049267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4049342Z err_msg = None
2025-02-24T16:09:32.4049346Z 
2025-02-24T16:09:32.4049464Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4049545Z         if err_msg is None:
2025-02-24T16:09:32.4049643Z             if left.shape != right.shape:
2025-02-24T16:09:32.4049726Z                 raise_assert_detail(
2025-02-24T16:09:32.4049875Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4049951Z                 )
2025-02-24T16:09:32.4050018Z     
2025-02-24T16:09:32.4050093Z             diff = 0
2025-02-24T16:09:32.4050206Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4050296Z                 # count up differences
2025-02-24T16:09:32.4050470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4050551Z                     diff += 1
2025-02-24T16:09:32.4050624Z     
2025-02-24T16:09:32.4050712Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4050858Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4051031Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4051149Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4051219Z E           
2025-02-24T16:09:32.4051335Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4051721Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4051982Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4052062Z 
2025-02-24T16:09:32.4052372Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4052376Z 
2025-02-24T16:09:32.4052554Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4052562Z 
2025-02-24T16:09:32.4052790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06009dfbc0>
2025-02-24T16:09:32.4053001Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>, attr = 'f_lu'
2025-02-24T16:09:32.4053006Z 
2025-02-24T16:09:32.4053147Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4053268Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4053356Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4053426Z         try:
2025-02-24T16:09:32.4053571Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4053654Z         except KeyError:
2025-02-24T16:09:32.4053797Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4053870Z     
2025-02-24T16:09:32.4053959Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4054056Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4054145Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4054285Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4054371Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4054465Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4054579Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4054583Z 
2025-02-24T16:09:32.4054707Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4054824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4054970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4055044Z     ???
2025-02-24T16:09:32.4055154Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4055158Z 
2025-02-24T16:09:32.4055224Z >   ???
2025-02-24T16:09:32.4055354Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4055421Z E   
2025-02-24T16:09:32.4055551Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4055665Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4055740Z E          ...
2025-02-24T16:09:32.4055830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4055961Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4056073Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4056143Z E          ...
2025-02-24T16:09:32.4056233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4056489Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4056609Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4056613Z 
2025-02-24T16:09:32.4056707Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4056922Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T16:09:32.4056926Z 
2025-02-24T16:09:32.4057061Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4057304Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4057404Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4057543Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4057667Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4057763Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4057940Z err_msg = None
2025-02-24T16:09:32.4057944Z 
2025-02-24T16:09:32.4058060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4058147Z         if err_msg is None:
2025-02-24T16:09:32.4058244Z             if left.shape != right.shape:
2025-02-24T16:09:32.4058333Z                 raise_assert_detail(
2025-02-24T16:09:32.4058479Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4058558Z                 )
2025-02-24T16:09:32.4058625Z     
2025-02-24T16:09:32.4058700Z             diff = 0
2025-02-24T16:09:32.4058815Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4058901Z                 # count up differences
2025-02-24T16:09:32.4059078Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4059155Z                     diff += 1
2025-02-24T16:09:32.4059228Z     
2025-02-24T16:09:32.4059318Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4059465Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4059637Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4059749Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4059825Z E           
2025-02-24T16:09:32.4059936Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4060205Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4060474Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4060482Z 
2025-02-24T16:09:32.4060790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4060794Z 
2025-02-24T16:09:32.4060968Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4060975Z 
2025-02-24T16:09:32.4061204Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600804380>
2025-02-24T16:09:32.4061373Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4061453Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.4061457Z 
2025-02-24T16:09:32.4061594Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4061718Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4061807Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4061877Z         try:
2025-02-24T16:09:32.4062025Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4062105Z         except KeyError:
2025-02-24T16:09:32.4062248Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4062316Z     
2025-02-24T16:09:32.4062407Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4062505Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4062777Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4062912Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4062998Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4063091Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4063201Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4063278Z             else:
2025-02-24T16:09:32.4063378Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4063485Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4063489Z 
2025-02-24T16:09:32.4063711Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4063823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4063972Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4064045Z     ???
2025-02-24T16:09:32.4064155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4064162Z 
2025-02-24T16:09:32.4064232Z >   ???
2025-02-24T16:09:32.4064358Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4064429Z E   
2025-02-24T16:09:32.4064556Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4064670Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4064742Z E          ...
2025-02-24T16:09:32.4064829Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4064963Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4065076Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4065151Z E          ...
2025-02-24T16:09:32.4065236Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4065366Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4065474Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4065479Z 
2025-02-24T16:09:32.4065572Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4065788Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T16:09:32.4065793Z 
2025-02-24T16:09:32.4065922Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4066052Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4066149Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4066377Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4066508Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4066600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4066677Z err_msg = None
2025-02-24T16:09:32.4066681Z 
2025-02-24T16:09:32.4066792Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4066878Z         if err_msg is None:
2025-02-24T16:09:32.4066975Z             if left.shape != right.shape:
2025-02-24T16:09:32.4067059Z                 raise_assert_detail(
2025-02-24T16:09:32.4067215Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4067283Z                 )
2025-02-24T16:09:32.4067355Z     
2025-02-24T16:09:32.4067429Z             diff = 0
2025-02-24T16:09:32.4067538Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4067628Z                 # count up differences
2025-02-24T16:09:32.4067797Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4067881Z                     diff += 1
2025-02-24T16:09:32.4067947Z     
2025-02-24T16:09:32.4068039Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4068179Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4068349Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4068585Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4068656Z E           
2025-02-24T16:09:32.4068773Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4069037Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4069407Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4069413Z 
2025-02-24T16:09:32.4069723Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4069730Z 
2025-02-24T16:09:32.4069903Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4069909Z 
2025-02-24T16:09:32.4070134Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600804440>
2025-02-24T16:09:32.4070309Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4070387Z attr = 'beta_sobolev'
2025-02-24T16:09:32.4070391Z 
2025-02-24T16:09:32.4070529Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4070650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4070734Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4070808Z         try:
2025-02-24T16:09:32.4070948Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4071031Z         except KeyError:
2025-02-24T16:09:32.4071168Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4071242Z     
2025-02-24T16:09:32.4071335Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4071428Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4071523Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4071655Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4071750Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4071840Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4071952Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4072032Z             else:
2025-02-24T16:09:32.4072128Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4072237Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4072241Z 
2025-02-24T16:09:32.4072366Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4072483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4072637Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4072706Z     ???
2025-02-24T16:09:32.4072819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4072823Z 
2025-02-24T16:09:32.4072892Z >   ???
2025-02-24T16:09:32.4073026Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4073095Z E   
2025-02-24T16:09:32.4073233Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4073353Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4073430Z E          ...
2025-02-24T16:09:32.4073524Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4073659Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4073776Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4073847Z E          ...
2025-02-24T16:09:32.4073938Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4074159Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4074267Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4074272Z 
2025-02-24T16:09:32.4074367Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4074582Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T16:09:32.4074586Z 
2025-02-24T16:09:32.4074720Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4074855Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4075118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4075356Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4075568Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4075740Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4075870Z err_msg = None
2025-02-24T16:09:32.4075876Z 
2025-02-24T16:09:32.4076061Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4076173Z         if err_msg is None:
2025-02-24T16:09:32.4076363Z             if left.shape != right.shape:
2025-02-24T16:09:32.4076459Z                 raise_assert_detail(
2025-02-24T16:09:32.4076604Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4076679Z                 )
2025-02-24T16:09:32.4076752Z     
2025-02-24T16:09:32.4076826Z             diff = 0
2025-02-24T16:09:32.4076943Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4077031Z                 # count up differences
2025-02-24T16:09:32.4077208Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4077285Z                     diff += 1
2025-02-24T16:09:32.4077356Z     
2025-02-24T16:09:32.4077455Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4077593Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4077771Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4077887Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4077965Z E           
2025-02-24T16:09:32.4078079Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4078347Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4078618Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4078626Z 
2025-02-24T16:09:32.4078943Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4078948Z 
2025-02-24T16:09:32.4079120Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4079125Z 
2025-02-24T16:09:32.4079351Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008045c0>
2025-02-24T16:09:32.4079528Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05c5998bc0>
2025-02-24T16:09:32.4079607Z attr = 'j_blues'
2025-02-24T16:09:32.4079612Z 
2025-02-24T16:09:32.4079755Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4079869Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4079957Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4080158Z         try:
2025-02-24T16:09:32.4080310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4080395Z         except KeyError:
2025-02-24T16:09:32.4080541Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4080614Z     
2025-02-24T16:09:32.4080701Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4080799Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4080889Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4081028Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4081218Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4081313Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4081424Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4081496Z             else:
2025-02-24T16:09:32.4081597Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4081705Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4081713Z 
2025-02-24T16:09:32.4081842Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4081960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4082109Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4082183Z     ???
2025-02-24T16:09:32.4082293Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4082297Z 
2025-02-24T16:09:32.4082370Z >   ???
2025-02-24T16:09:32.4082498Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4082573Z E   
2025-02-24T16:09:32.4082703Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4082816Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4082890Z E          ...
2025-02-24T16:09:32.4082981Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4083122Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4083240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4083313Z E          ...
2025-02-24T16:09:32.4083403Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4083531Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4083639Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4083644Z 
2025-02-24T16:09:32.4083732Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4083999Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T16:09:32.4084008Z 
2025-02-24T16:09:32.4084144Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4084273Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4084374Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4084508Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4084641Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4084738Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4084813Z err_msg = None
2025-02-24T16:09:32.4084818Z 
2025-02-24T16:09:32.4084947Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4085095Z         if err_msg is None:
2025-02-24T16:09:32.4085264Z             if left.shape != right.shape:
2025-02-24T16:09:32.4085410Z                 raise_assert_detail(
2025-02-24T16:09:32.4085658Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4085781Z                 )
2025-02-24T16:09:32.4085895Z     
2025-02-24T16:09:32.4086023Z             diff = 0
2025-02-24T16:09:32.4086187Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4086380Z                 # count up differences
2025-02-24T16:09:32.4086735Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4086818Z                     diff += 1
2025-02-24T16:09:32.4086889Z     
2025-02-24T16:09:32.4086978Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4087120Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4087292Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4087409Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4087605Z E           
2025-02-24T16:09:32.4087719Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4087982Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4088249Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4088264Z 
2025-02-24T16:09:32.4088577Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4088585Z 
2025-02-24T16:09:32.4088763Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4088768Z 
2025-02-24T16:09:32.4088994Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805340>
2025-02-24T16:09:32.4089169Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4089246Z attr = 'lines'
2025-02-24T16:09:32.4089251Z 
2025-02-24T16:09:32.4089394Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4089515Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4089604Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4089678Z         try:
2025-02-24T16:09:32.4089819Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4089906Z         except KeyError:
2025-02-24T16:09:32.4090050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4090118Z     
2025-02-24T16:09:32.4090211Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4090308Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4090400Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4090533Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4090623Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4090716Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4090828Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4090910Z             else:
2025-02-24T16:09:32.4091006Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4091120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4091125Z 
2025-02-24T16:09:32.4091259Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4091374Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4091524Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4091594Z     ???
2025-02-24T16:09:32.4091712Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4091716Z 
2025-02-24T16:09:32.4091787Z >   ???
2025-02-24T16:09:32.4091917Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4091989Z E   
2025-02-24T16:09:32.4092123Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4092239Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4092400Z E          ...
2025-02-24T16:09:32.4092493Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4092624Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4092741Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4092817Z E          ...
2025-02-24T16:09:32.4092903Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4093031Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4093136Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4093214Z 
2025-02-24T16:09:32.4093311Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4093640Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T16:09:32.4093645Z 
2025-02-24T16:09:32.4093872Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805400>
2025-02-24T16:09:32.4094051Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4094140Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.4094145Z 
2025-02-24T16:09:32.4094289Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4094484Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4094628Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4094748Z         try:
2025-02-24T16:09:32.4094985Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4095124Z         except KeyError:
2025-02-24T16:09:32.4095360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4095479Z     
2025-02-24T16:09:32.4095575Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4095668Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4095762Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4095901Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4095995Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4096083Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4096196Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4096201Z 
2025-02-24T16:09:32.4096455Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4096571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4096576Z 
2025-02-24T16:09:32.4096718Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4096807Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4096920Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4097006Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4097147Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T16:09:32.4097238Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T16:09:32.4097347Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4097430Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T16:09:32.4097509Z err_msg = None
2025-02-24T16:09:32.4097514Z 
2025-02-24T16:09:32.4097623Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4097706Z         if err_msg is None:
2025-02-24T16:09:32.4097805Z             if left.shape != right.shape:
2025-02-24T16:09:32.4097893Z                 raise_assert_detail(
2025-02-24T16:09:32.4098041Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4098117Z                 )
2025-02-24T16:09:32.4098188Z     
2025-02-24T16:09:32.4098262Z             diff = 0
2025-02-24T16:09:32.4098377Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4098467Z                 # count up differences
2025-02-24T16:09:32.4098645Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4098851Z                     diff += 1
2025-02-24T16:09:32.4098924Z     
2025-02-24T16:09:32.4099015Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4099154Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4099335Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4099439Z E           AssertionError: Series are different
2025-02-24T16:09:32.4099514Z E           
2025-02-24T16:09:32.4099616Z E           Series values are different (4.04858 %)
2025-02-24T16:09:32.4100099Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4100443Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4100782Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4100790Z 
2025-02-24T16:09:32.4101102Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4101426Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T16:09:32.4101430Z 
2025-02-24T16:09:32.4101660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008054c0>
2025-02-24T16:09:32.4101831Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4101925Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.4101930Z 
2025-02-24T16:09:32.4102066Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4102189Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4102275Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4102351Z         try:
2025-02-24T16:09:32.4102495Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4102575Z         except KeyError:
2025-02-24T16:09:32.4102716Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4102783Z     
2025-02-24T16:09:32.4102875Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4102968Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4103061Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4103198Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4103283Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4103377Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4103487Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4103492Z 
2025-02-24T16:09:32.4103620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4103743Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4103748Z 
2025-02-24T16:09:32.4103883Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4103971Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4104082Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4104252Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4104396Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T16:09:32.4104479Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T16:09:32.4104590Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T16:09:32.4104669Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T16:09:32.4104747Z err_msg = None
2025-02-24T16:09:32.4104751Z 
2025-02-24T16:09:32.4104864Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4105025Z         if err_msg is None:
2025-02-24T16:09:32.4105121Z             if left.shape != right.shape:
2025-02-24T16:09:32.4105204Z                 raise_assert_detail(
2025-02-24T16:09:32.4105355Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4105424Z                 )
2025-02-24T16:09:32.4105497Z     
2025-02-24T16:09:32.4105572Z             diff = 0
2025-02-24T16:09:32.4105688Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4105779Z                 # count up differences
2025-02-24T16:09:32.4105950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4106031Z                     diff += 1
2025-02-24T16:09:32.4106100Z     
2025-02-24T16:09:32.4106190Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4106420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4106598Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4106712Z E           AssertionError: Series are different
2025-02-24T16:09:32.4106783Z E           
2025-02-24T16:09:32.4106888Z E           Series values are different (6.47773 %)
2025-02-24T16:09:32.4107259Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4107645Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4108026Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.4108035Z 
2025-02-24T16:09:32.4108344Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4108589Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T16:09:32.4108595Z 
2025-02-24T16:09:32.4108730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4108860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4108964Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4109101Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4109223Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4109459Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4109533Z err_msg = None
2025-02-24T16:09:32.4109540Z 
2025-02-24T16:09:32.4109651Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4109735Z         if err_msg is None:
2025-02-24T16:09:32.4109831Z             if left.shape != right.shape:
2025-02-24T16:09:32.4109920Z                 raise_assert_detail(
2025-02-24T16:09:32.4110066Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4110246Z                 )
2025-02-24T16:09:32.4110314Z     
2025-02-24T16:09:32.4110391Z             diff = 0
2025-02-24T16:09:32.4110506Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4110596Z                 # count up differences
2025-02-24T16:09:32.4110814Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4110958Z                     diff += 1
2025-02-24T16:09:32.4111079Z     
2025-02-24T16:09:32.4111229Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4111469Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4111768Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4111938Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4112015Z E           
2025-02-24T16:09:32.4112132Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4112397Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4112669Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4112678Z 
2025-02-24T16:09:32.4112988Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4112997Z 
2025-02-24T16:09:32.4113172Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4113177Z 
2025-02-24T16:09:32.4113408Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805700>
2025-02-24T16:09:32.4113612Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>, attr = 'nu'
2025-02-24T16:09:32.4113616Z 
2025-02-24T16:09:32.4113761Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4113881Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4113970Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4114045Z         try:
2025-02-24T16:09:32.4114188Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4114275Z         except KeyError:
2025-02-24T16:09:32.4114413Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4114487Z     
2025-02-24T16:09:32.4114574Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4114672Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4114766Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4114900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4114993Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4115083Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4115201Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4115206Z 
2025-02-24T16:09:32.4115342Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4115551Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4115704Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4115775Z     ???
2025-02-24T16:09:32.4115889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4115893Z 
2025-02-24T16:09:32.4115968Z >   ???
2025-02-24T16:09:32.4116098Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4116171Z E   
2025-02-24T16:09:32.4116416Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4116650Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4116723Z E          ...
2025-02-24T16:09:32.4116817Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4116949Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4117068Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4117144Z E          ...
2025-02-24T16:09:32.4117233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4117364Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4117470Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4117475Z 
2025-02-24T16:09:32.4117569Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4117863Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T16:09:32.4117869Z 
2025-02-24T16:09:32.4117999Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4118137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4118234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4118368Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4118497Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4118592Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4118669Z err_msg = None
2025-02-24T16:09:32.4118674Z 
2025-02-24T16:09:32.4118784Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4118870Z         if err_msg is None:
2025-02-24T16:09:32.4118973Z             if left.shape != right.shape:
2025-02-24T16:09:32.4119060Z                 raise_assert_detail(
2025-02-24T16:09:32.4119213Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4119287Z                 )
2025-02-24T16:09:32.4119359Z     
2025-02-24T16:09:32.4119432Z             diff = 0
2025-02-24T16:09:32.4119548Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4119640Z                 # count up differences
2025-02-24T16:09:32.4119814Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4119899Z                     diff += 1
2025-02-24T16:09:32.4119966Z     
2025-02-24T16:09:32.4120059Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4120197Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4120411Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4120615Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4120736Z E           
2025-02-24T16:09:32.4120928Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4121397Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4121724Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4121867Z 
2025-02-24T16:09:32.4122188Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4122193Z 
2025-02-24T16:09:32.4122364Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4122369Z 
2025-02-24T16:09:32.4122677Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008057c0>
2025-02-24T16:09:32.4122853Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4122934Z attr = 'wavelength_cm'
2025-02-24T16:09:32.4122939Z 
2025-02-24T16:09:32.4123082Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4123198Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4123290Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4123365Z         try:
2025-02-24T16:09:32.4123508Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4123593Z         except KeyError:
2025-02-24T16:09:32.4123732Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4123805Z     
2025-02-24T16:09:32.4123893Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4123992Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4124084Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4124218Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4124311Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4124403Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4124516Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4124521Z 
2025-02-24T16:09:32.4124646Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4124769Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4124918Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4124990Z     ???
2025-02-24T16:09:32.4125103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4125107Z 
2025-02-24T16:09:32.4125175Z >   ???
2025-02-24T16:09:32.4125308Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4125379Z E   
2025-02-24T16:09:32.4125507Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4125627Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4125698Z E          ...
2025-02-24T16:09:32.4125790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4125920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4126039Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4126117Z E          ...
2025-02-24T16:09:32.4126203Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4126459Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4126569Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4126573Z 
2025-02-24T16:09:32.4126666Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4126923Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T16:09:32.4126932Z 
2025-02-24T16:09:32.4127060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4127194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4127290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4127427Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4127669Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4127768Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4127877Z err_msg = None
2025-02-24T16:09:32.4127885Z 
2025-02-24T16:09:32.4128071Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4128200Z         if err_msg is None:
2025-02-24T16:09:32.4128347Z             if left.shape != right.shape:
2025-02-24T16:09:32.4128481Z                 raise_assert_detail(
2025-02-24T16:09:32.4128714Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4128988Z                 )
2025-02-24T16:09:32.4129099Z     
2025-02-24T16:09:32.4129211Z             diff = 0
2025-02-24T16:09:32.4129393Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4129533Z                 # count up differences
2025-02-24T16:09:32.4129804Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4129936Z                     diff += 1
2025-02-24T16:09:32.4130045Z     
2025-02-24T16:09:32.4130187Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4130393Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4130671Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4130847Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4130965Z E           
2025-02-24T16:09:32.4131145Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4131572Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4132073Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4132093Z 
2025-02-24T16:09:32.4132639Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4132653Z 
2025-02-24T16:09:32.4132941Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4132961Z 
2025-02-24T16:09:32.4133344Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600805880>
2025-02-24T16:09:32.4133562Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>, attr = 'f_lu'
2025-02-24T16:09:32.4133573Z 
2025-02-24T16:09:32.4133718Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4133841Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4133932Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4134008Z         try:
2025-02-24T16:09:32.4134154Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4134241Z         except KeyError:
2025-02-24T16:09:32.4134387Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4134459Z     
2025-02-24T16:09:32.4134554Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4134649Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4134744Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4134881Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4134972Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4135068Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4135182Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4135187Z 
2025-02-24T16:09:32.4135317Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T16:09:32.4135580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4135733Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4135808Z     ???
2025-02-24T16:09:32.4135918Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4135923Z 
2025-02-24T16:09:32.4135996Z >   ???
2025-02-24T16:09:32.4136125Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4136197Z E   
2025-02-24T16:09:32.4136547Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4136823Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4136903Z E          ...
2025-02-24T16:09:32.4136991Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4137126Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4137245Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4137326Z E          ...
2025-02-24T16:09:32.4137414Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4137544Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4137658Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4137663Z 
2025-02-24T16:09:32.4137754Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4138050Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T16:09:32.4138055Z 
2025-02-24T16:09:32.4138189Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4138325Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4138428Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4138564Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4138700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4138846Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4138988Z err_msg = None
2025-02-24T16:09:32.4138995Z 
2025-02-24T16:09:32.4139189Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4139327Z         if err_msg is None:
2025-02-24T16:09:32.4139493Z             if left.shape != right.shape:
2025-02-24T16:09:32.4139633Z                 raise_assert_detail(
2025-02-24T16:09:32.4139886Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4140010Z                 )
2025-02-24T16:09:32.4140091Z     
2025-02-24T16:09:32.4140171Z             diff = 0
2025-02-24T16:09:32.4140287Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4140381Z                 # count up differences
2025-02-24T16:09:32.4140556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4140643Z                     diff += 1
2025-02-24T16:09:32.4140713Z     
2025-02-24T16:09:32.4140809Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4140952Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4141126Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4141246Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4141319Z E           
2025-02-24T16:09:32.4141441Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4141706Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4141979Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4142108Z 
2025-02-24T16:09:32.4158486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4158515Z 
2025-02-24T16:09:32.4158839Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4159053Z 
2025-02-24T16:09:32.4159481Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600806000>
2025-02-24T16:09:32.4159786Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4159928Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.4159938Z 
2025-02-24T16:09:32.4160184Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4160402Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4160556Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4160680Z         try:
2025-02-24T16:09:32.4160943Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4161091Z         except KeyError:
2025-02-24T16:09:32.4161344Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4161471Z     
2025-02-24T16:09:32.4161627Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4161799Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4161965Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4162215Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4162371Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4162527Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4162729Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4162851Z             else:
2025-02-24T16:09:32.4163032Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4163227Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4163242Z 
2025-02-24T16:09:32.4163468Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4163678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4163949Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4164074Z     ???
2025-02-24T16:09:32.4164274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4164288Z 
2025-02-24T16:09:32.4164414Z >   ???
2025-02-24T16:09:32.4164630Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4164743Z E   
2025-02-24T16:09:32.4164960Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4165081Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4165155Z E          ...
2025-02-24T16:09:32.4165254Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4165397Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4165518Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4165588Z E          ...
2025-02-24T16:09:32.4165682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4165813Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4165929Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4165934Z 
2025-02-24T16:09:32.4166036Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4166544Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T16:09:32.4166553Z 
2025-02-24T16:09:32.4166697Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4166833Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4167148Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4167286Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4167421Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4167520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4167597Z err_msg = None
2025-02-24T16:09:32.4167602Z 
2025-02-24T16:09:32.4167728Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4167915Z         if err_msg is None:
2025-02-24T16:09:32.4168021Z             if left.shape != right.shape:
2025-02-24T16:09:32.4168110Z                 raise_assert_detail(
2025-02-24T16:09:32.4168291Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4168426Z                 )
2025-02-24T16:09:32.4168535Z     
2025-02-24T16:09:32.4168666Z             diff = 0
2025-02-24T16:09:32.4168788Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4168882Z                 # count up differences
2025-02-24T16:09:32.4169066Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4169145Z                     diff += 1
2025-02-24T16:09:32.4169215Z     
2025-02-24T16:09:32.4169304Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4169448Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4169627Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4169753Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4169829Z E           
2025-02-24T16:09:32.4169948Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4170221Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4170492Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4170506Z 
2025-02-24T16:09:32.4170835Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4170840Z 
2025-02-24T16:09:32.4171025Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4171030Z 
2025-02-24T16:09:32.4171266Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f06008060c0>
2025-02-24T16:09:32.4171436Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4171520Z attr = 'beta_sobolev'
2025-02-24T16:09:32.4171525Z 
2025-02-24T16:09:32.4171669Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4171794Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4171881Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4171956Z         try:
2025-02-24T16:09:32.4172104Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4172186Z         except KeyError:
2025-02-24T16:09:32.4172335Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4172403Z     
2025-02-24T16:09:32.4172496Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4172591Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4172686Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4172826Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4173005Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4173099Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4173211Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4173287Z             else:
2025-02-24T16:09:32.4173383Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4173496Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4173500Z 
2025-02-24T16:09:32.4173632Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4173747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4173975Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4174044Z     ???
2025-02-24T16:09:32.4174159Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4174163Z 
2025-02-24T16:09:32.4174233Z >   ???
2025-02-24T16:09:32.4174363Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4174439Z E   
2025-02-24T16:09:32.4174568Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4174683Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4174753Z E          ...
2025-02-24T16:09:32.4174845Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4174980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4175092Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4175166Z E          ...
2025-02-24T16:09:32.4175252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4175384Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4175487Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4175496Z 
2025-02-24T16:09:32.4175586Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4175861Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T16:09:32.4175869Z 
2025-02-24T16:09:32.4176002Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4176139Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4176242Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4176584Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T16:09:32.4176719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T16:09:32.4176820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T16:09:32.4176903Z err_msg = None
2025-02-24T16:09:32.4176908Z 
2025-02-24T16:09:32.4177022Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T16:09:32.4177107Z         if err_msg is None:
2025-02-24T16:09:32.4177209Z             if left.shape != right.shape:
2025-02-24T16:09:32.4177294Z                 raise_assert_detail(
2025-02-24T16:09:32.4177457Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T16:09:32.4177526Z                 )
2025-02-24T16:09:32.4177597Z     
2025-02-24T16:09:32.4177668Z             diff = 0
2025-02-24T16:09:32.4177788Z             for left_arr, right_arr in zip(left, right):
2025-02-24T16:09:32.4177882Z                 # count up differences
2025-02-24T16:09:32.4178056Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T16:09:32.4178137Z                     diff += 1
2025-02-24T16:09:32.4178206Z     
2025-02-24T16:09:32.4178299Z             diff = diff * 100.0 / left.size
2025-02-24T16:09:32.4178437Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T16:09:32.4178615Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T16:09:32.4178735Z E           AssertionError: numpy array are different
2025-02-24T16:09:32.4178933Z E           
2025-02-24T16:09:32.4179052Z E           numpy array values are different (4.04858 %)
2025-02-24T16:09:32.4179317Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4179585Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.4179689Z 
2025-02-24T16:09:32.4180016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T16:09:32.4180021Z 
2025-02-24T16:09:32.4180199Z During handling of the above exception, another exception occurred:
2025-02-24T16:09:32.4180211Z 
2025-02-24T16:09:32.4180435Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f0600806240>
2025-02-24T16:09:32.4180610Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f05f23ba660>
2025-02-24T16:09:32.4180684Z attr = 'j_blues'
2025-02-24T16:09:32.4180688Z 
2025-02-24T16:09:32.4180838Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T16:09:32.4180957Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T16:09:32.4181047Z         key = f"plasma/{attr}"
2025-02-24T16:09:32.4181126Z         try:
2025-02-24T16:09:32.4181269Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T16:09:32.4181357Z         except KeyError:
2025-02-24T16:09:32.4181498Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T16:09:32.4181568Z     
2025-02-24T16:09:32.4181657Z         if hasattr(plasma, attr):
2025-02-24T16:09:32.4181759Z             actual = getattr(plasma, attr)
2025-02-24T16:09:32.4181854Z             if attr == "selected_atoms":
2025-02-24T16:09:32.4181992Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T16:09:32.4182085Z             elif actual.ndim == 1:
2025-02-24T16:09:32.4182175Z                 actual = pd.Series(actual)
2025-02-24T16:09:32.4182291Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T16:09:32.4182363Z             else:
2025-02-24T16:09:32.4182466Z                 actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4182582Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T16:09:32.4182587Z 
2025-02-24T16:09:32.4182713Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T16:09:32.4182832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4182981Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4183056Z     ???
2025-02-24T16:09:32.4183179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4183184Z 
2025-02-24T16:09:32.4183251Z >   ???
2025-02-24T16:09:32.4183387Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.4183454Z E   
2025-02-24T16:09:32.4183587Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.4183697Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4183773Z E          ...
2025-02-24T16:09:32.4183866Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4184000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4184116Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.4184186Z E          ...
2025-02-24T16:09:32.4184277Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.4184398Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.4184509Z E   At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.4184597Z 
2025-02-24T16:09:32.4184693Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4184863Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T16:09:32.4184867Z 
2025-02-24T16:09:32.4185107Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4185199Z attr = 'stimulated_emission_factor'
2025-02-24T16:09:32.4185481Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05e8c541a0>
2025-02-24T16:09:32.4185485Z 
2025-02-24T16:09:32.4185733Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4185906Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4186036Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4186171Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4186462Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4186597Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4186691Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4186800Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4186804Z 
2025-02-24T16:09:32.4186910Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4187026Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4187031Z 
2025-02-24T16:09:32.4187355Z args = (<function assert_allclose.<locals>.compare at 0x7f05c62c7a60>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-24T16:09:32.4187433Z         0.01476858],
2025-02-24T16:09:32.4187573Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T16:09:32.4187645Z         0.01473787]]))
2025-02-24T16:09:32.4187899Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4187908Z 
2025-02-24T16:09:32.4187988Z     @wraps(func)
2025-02-24T16:09:32.4188072Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4188165Z         with self._recreate_cm():
2025-02-24T16:09:32.4188254Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4188344Z E           AssertionError: 
2025-02-24T16:09:32.4188454Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4188530Z E           
2025-02-24T16:09:32.4188640Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:09:32.4188734Z E           Max absolute difference: 1.
2025-02-24T16:09:32.4188831Z E           Max relative difference: 1.
2025-02-24T16:09:32.4188962Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189071Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189176Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.4189303Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189407Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.4189507Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.4189512Z 
2025-02-24T16:09:32.4189723Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4189901Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T16:09:32.4189925Z 
2025-02-24T16:09:32.4190336Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4190493Z attr = 'lines_lower_level_index'
2025-02-24T16:09:32.4190961Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f236e600>
2025-02-24T16:09:32.4190969Z 
2025-02-24T16:09:32.4191185Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4191502Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4191631Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4191770Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4191887Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4191977Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4192066Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4192172Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4192279Z 
2025-02-24T16:09:32.4192389Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4192500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4192504Z 
2025-02-24T16:09:32.4192913Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a17d80>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T16:09:32.4193167Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4193177Z 
2025-02-24T16:09:32.4193249Z     @wraps(func)
2025-02-24T16:09:32.4193336Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4193420Z         with self._recreate_cm():
2025-02-24T16:09:32.4193511Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4193595Z E           AssertionError: 
2025-02-24T16:09:32.4193707Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4193777Z E           
2025-02-24T16:09:32.4193886Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:09:32.4193985Z E           Max absolute difference: 4005
2025-02-24T16:09:32.4194084Z E           Max relative difference: 26.00649351
2025-02-24T16:09:32.4194197Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.4194301Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.4194308Z 
2025-02-24T16:09:32.4194519Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4194683Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T16:09:32.4194688Z 
2025-02-24T16:09:32.4194917Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4195012Z attr = 'lines_upper_level_index'
2025-02-24T16:09:32.4195284Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f06008619d0>
2025-02-24T16:09:32.4195292Z 
2025-02-24T16:09:32.4195445Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4195620Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4195744Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4195877Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4195996Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4196092Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4196181Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4196407Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4196413Z 
2025-02-24T16:09:32.4196524Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4196635Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4196640Z 
2025-02-24T16:09:32.4197040Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a15a80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T16:09:32.4197295Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4197300Z 
2025-02-24T16:09:32.4197377Z     @wraps(func)
2025-02-24T16:09:32.4197460Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4197549Z         with self._recreate_cm():
2025-02-24T16:09:32.4197754Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4197842Z E           AssertionError: 
2025-02-24T16:09:32.4197950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4198023Z E           
2025-02-24T16:09:32.4198123Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:09:32.4198220Z E           Max absolute difference: 4046
2025-02-24T16:09:32.4198323Z E           Max relative difference: 24.82208589
2025-02-24T16:09:32.4198429Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.4198661Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.4198665Z 
2025-02-24T16:09:32.4198868Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4199027Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T16:09:32.4199032Z 
2025-02-24T16:09:32.4199269Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4199349Z attr = 'beta_sobolev'
2025-02-24T16:09:32.4199625Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f2345880>
2025-02-24T16:09:32.4199630Z 
2025-02-24T16:09:32.4199769Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4199934Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4200055Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4200184Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4200310Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4200397Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4200491Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4200596Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4200601Z 
2025-02-24T16:09:32.4200704Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4200818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4200823Z 
2025-02-24T16:09:32.4201091Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a165c0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4201168Z        [1., 1., .....,
2025-02-24T16:09:32.4201251Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4201326Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4201406Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T16:09:32.4201648Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4201656Z 
2025-02-24T16:09:32.4201733Z     @wraps(func)
2025-02-24T16:09:32.4201815Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4201904Z         with self._recreate_cm():
2025-02-24T16:09:32.4201994Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4202077Z E           AssertionError: 
2025-02-24T16:09:32.4202191Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4202260Z E           
2025-02-24T16:09:32.4202364Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.4202462Z E           Max absolute difference: 0.99984222
2025-02-24T16:09:32.4202568Z E           Max relative difference: 6337.12154973
2025-02-24T16:09:32.4202661Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4202744Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4202834Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.4202926Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4203010Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.4203094Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.4203103Z 
2025-02-24T16:09:32.4203301Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4203547Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T16:09:32.4203552Z 
2025-02-24T16:09:32.4203788Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4203867Z attr = 'lines'
2025-02-24T16:09:32.4204142Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05c6269430>
2025-02-24T16:09:32.4204146Z 
2025-02-24T16:09:32.4204293Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4204462Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4204660Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4204794Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4204915Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4205005Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4205094Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4205200Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4205204Z 
2025-02-24T16:09:32.4205308Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4205420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4205425Z 
2025-02-24T16:09:32.4205884Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a59bc0>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T16:09:32.4205991Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T16:09:32.4206243Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4206248Z 
2025-02-24T16:09:32.4206430Z     @wraps(func)
2025-02-24T16:09:32.4206514Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4206604Z         with self._recreate_cm():
2025-02-24T16:09:32.4206690Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4206783Z E           AssertionError: 
2025-02-24T16:09:32.4206887Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4206959Z E           
2025-02-24T16:09:32.4207064Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:09:32.4207165Z E           Max absolute difference: 4.25260542e+12
2025-02-24T16:09:32.4207264Z E           Max relative difference: 18196.0085861
2025-02-24T16:09:32.4207413Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.4207504Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.4207647Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.4207795Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.4207884Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.4208017Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.4208024Z 
2025-02-24T16:09:32.4208314Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4208567Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T16:09:32.4208574Z 
2025-02-24T16:09:32.4208974Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4209101Z attr = 'f_lu'
2025-02-24T16:09:32.4209486Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05c62685c0>
2025-02-24T16:09:32.4209496Z 
2025-02-24T16:09:32.4209646Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4209812Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4209934Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4210070Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4210189Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4210409Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4210499Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4210603Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4210607Z 
2025-02-24T16:09:32.4210712Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4210818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4210823Z 
2025-02-24T16:09:32.4211301Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a142c0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T16:09:32.4211533Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T16:09:32.4211783Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4211788Z 
2025-02-24T16:09:32.4211867Z     @wraps(func)
2025-02-24T16:09:32.4211953Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4212043Z         with self._recreate_cm():
2025-02-24T16:09:32.4212128Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4212214Z E           AssertionError: 
2025-02-24T16:09:32.4212319Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4212390Z E           
2025-02-24T16:09:32.4212491Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:09:32.4212590Z E           Max absolute difference: 2.92713618
2025-02-24T16:09:32.4212691Z E           Max relative difference: 18196.0085861
2025-02-24T16:09:32.4212844Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.4212933Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.4213074Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.4213161Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.4213169Z 
2025-02-24T16:09:32.4213372Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4213522Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T16:09:32.4213527Z 
2025-02-24T16:09:32.4213759Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f05d2cf6d80>
2025-02-24T16:09:32.4213838Z attr = 'tau_sobolevs'
2025-02-24T16:09:32.4214114Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05c62e0920>
2025-02-24T16:09:32.4214120Z 
2025-02-24T16:09:32.4214270Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T16:09:32.4214436Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T16:09:32.4214558Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T16:09:32.4214688Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T16:09:32.4214810Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T16:09:32.4214903Z             if hasattr(actual, "cgs"):
2025-02-24T16:09:32.4214992Z                 actual = actual.cgs.value
2025-02-24T16:09:32.4215095Z >           npt.assert_allclose(actual, expected)
2025-02-24T16:09:32.4215100Z 
2025-02-24T16:09:32.4215203Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T16:09:32.4215313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4215317Z 
2025-02-24T16:09:32.4215781Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a59620>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T16:09:32.4215895Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T16:09:32.4216141Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4216146Z 
2025-02-24T16:09:32.4216219Z     @wraps(func)
2025-02-24T16:09:32.4216559Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4216649Z         with self._recreate_cm():
2025-02-24T16:09:32.4216738Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4216824Z E           AssertionError: 
2025-02-24T16:09:32.4216931Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4217005Z E           
2025-02-24T16:09:32.4217106Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:09:32.4217213Z E           Max absolute difference: 282815.33818472
2025-02-24T16:09:32.4217316Z E           Max relative difference: 4.12352828e+47
2025-02-24T16:09:32.4217571Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.4217662Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.4217797Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.4217943Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.4218035Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.4218162Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.4218167Z 
2025-02-24T16:09:32.4218376Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4218544Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T16:09:32.4218548Z 
2025-02-24T16:09:32.4218772Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4218857Z attr = 'iterations_w'
2025-02-24T16:09:32.4219125Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d5b17590>
2025-02-24T16:09:32.4219129Z 
2025-02-24T16:09:32.4219224Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4219295Z         "attr",
2025-02-24T16:09:32.4219365Z         [
2025-02-24T16:09:32.4219444Z             "iterations_w",
2025-02-24T16:09:32.4219529Z             "iterations_t_rad",
2025-02-24T16:09:32.4219636Z             "iterations_electron_densities",
2025-02-24T16:09:32.4219717Z             "iterations_t_inner",
2025-02-24T16:09:32.4219789Z         ],
2025-02-24T16:09:32.4219857Z     )
2025-02-24T16:09:32.4220057Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4220166Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:09:32.4220258Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4220342Z             actual = actual.value
2025-02-24T16:09:32.4220432Z         actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4220564Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4220742Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4220747Z 
2025-02-24T16:09:32.4220871Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:09:32.4220983Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4221136Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4221212Z     ???
2025-02-24T16:09:32.4221317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4221321Z 
2025-02-24T16:09:32.4221392Z >   ???
2025-02-24T16:09:32.4221574Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.4221644Z E   
2025-02-24T16:09:32.4221808Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.4221883Z E   [index]: [0, 1]
2025-02-24T16:09:32.4221991Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:09:32.4222090Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:09:32.4222270Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.4222274Z 
2025-02-24T16:09:32.4222364Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4222520Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4223040Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4223497Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4223651Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:09:32.4223656Z 
2025-02-24T16:09:32.4223660Z 
2025-02-24T16:09:32.4223904Z Packets:                                                                                   4031/? [04:48<00:00, 10.42it/s]   [A
2025-02-24T16:09:32.4223986Z 
2025-02-24T16:09:32.4224215Z Packets:                                                                                   14224/? [04:49<00:00, 60.80it/s][A
2025-02-24T16:09:32.4224220Z 
2025-02-24T16:09:32.4224447Z Packets:                                                                                   24995/? [04:49<00:00, 136.76it/s][A
2025-02-24T16:09:32.4224456Z 
2025-02-24T16:09:32.4224678Z Packets:                                                                                   35624/? [04:49<00:00, 243.65it/s][A
2025-02-24T16:09:32.4225145Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:49<00:00, 101.68s/it]
2025-02-24T16:09:32.4225154Z 
2025-02-24T16:09:32.4225386Z Packets:                                                                                   44030/? [04:49<00:00, 243.65it/s][A
2025-02-24T16:09:32.4225391Z 
2025-02-24T16:09:32.4225609Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T16:09:32.4225627Z 
2025-02-24T16:09:32.4225886Z Packets:   ███████████████████▏                                                            9605/40000 [00:00<00:00, 35249.15it/s][A
2025-02-24T16:09:32.4225891Z 
2025-02-24T16:09:32.4226154Z Packets:   ██████████████████████████▎                                                     13130/40000 [00:00<00:00, 35240.00it/s][A
2025-02-24T16:09:32.4226172Z 
2025-02-24T16:09:32.4226835Z Packets:   █████████████████████████████████▎                                              16654/40000 [00:00<00:00, 35229.89it/s][A
2025-02-24T16:09:32.4226855Z 
2025-02-24T16:09:32.4227373Z Packets:   ████████████████████████████████████████▎                                       20177/40000 [00:00<00:00, 35106.78it/s][A
2025-02-24T16:09:32.4227381Z 
2025-02-24T16:09:32.4227828Z Packets:   ███████████████████████████████████████████████▍                                23714/40000 [00:00<00:00, 35187.90it/s][A
2025-02-24T16:09:32.4227848Z 
2025-02-24T16:09:32.4228139Z Packets:   ██████████████████████████████████████████████████████▌                         27270/40000 [00:00<00:00, 35302.52it/s][A
2025-02-24T16:09:32.4228147Z 
2025-02-24T16:09:32.4228441Z Packets:   █████████████████████████████████████████████████████████████▌                  30801/40000 [00:00<00:00, 35233.60it/s][A
2025-02-24T16:09:32.4228597Z 
2025-02-24T16:09:32.4228906Z Packets:   ████████████████████████████████████████████████████████████████████▋           34327/40000 [00:00<00:00, 35241.58it/s][A
2025-02-24T16:09:32.4228911Z 
2025-02-24T16:09:32.4229215Z Packets:   ███████████████████████████████████████████████████████████████████████████▊    37876/40000 [00:01<00:00, 35315.18it/s][A
2025-02-24T16:09:32.4229365Z Iterations:                                                                                6/? [04:51<00:00, 67.91s/it] 
2025-02-24T16:09:32.4229371Z 
2025-02-24T16:09:32.4229810Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35315.18it/s][A
2025-02-24T16:09:32.4229970Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4230489Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4230679Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T16:09:32.4230684Z 
2025-02-24T16:09:32.4230903Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4230992Z attr = 'iterations_t_rad'
2025-02-24T16:09:32.4231267Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f150bb00>
2025-02-24T16:09:32.4231273Z 
2025-02-24T16:09:32.4231370Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4231443Z         "attr",
2025-02-24T16:09:32.4231518Z         [
2025-02-24T16:09:32.4231601Z             "iterations_w",
2025-02-24T16:09:32.4231681Z             "iterations_t_rad",
2025-02-24T16:09:32.4231784Z             "iterations_electron_densities",
2025-02-24T16:09:32.4231867Z             "iterations_t_inner",
2025-02-24T16:09:32.4231938Z         ],
2025-02-24T16:09:32.4232006Z     )
2025-02-24T16:09:32.4232211Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4232331Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:09:32.4232419Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4232507Z             actual = actual.value
2025-02-24T16:09:32.4232597Z         actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4232728Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4232907Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4232914Z 
2025-02-24T16:09:32.4233035Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:09:32.4233156Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4233308Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4233380Z     ???
2025-02-24T16:09:32.4233489Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4233497Z 
2025-02-24T16:09:32.4233570Z >   ???
2025-02-24T16:09:32.4233760Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.4233828Z E   
2025-02-24T16:09:32.4233992Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.4234066Z E   [index]: [0, 1]
2025-02-24T16:09:32.4234172Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:09:32.4234270Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:09:32.4234448Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.4234456Z 
2025-02-24T16:09:32.4234549Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4234732Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T16:09:32.4234737Z 
2025-02-24T16:09:32.4234959Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4235057Z attr = 'iterations_electron_densities'
2025-02-24T16:09:32.4235439Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d05476b0>
2025-02-24T16:09:32.4235444Z 
2025-02-24T16:09:32.4235539Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4235609Z         "attr",
2025-02-24T16:09:32.4235681Z         [
2025-02-24T16:09:32.4235760Z             "iterations_w",
2025-02-24T16:09:32.4235845Z             "iterations_t_rad",
2025-02-24T16:09:32.4235952Z             "iterations_electron_densities",
2025-02-24T16:09:32.4236034Z             "iterations_t_inner",
2025-02-24T16:09:32.4236107Z         ],
2025-02-24T16:09:32.4236181Z     )
2025-02-24T16:09:32.4236586Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4236700Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T16:09:32.4236794Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4236881Z             actual = actual.value
2025-02-24T16:09:32.4236972Z         actual = pd.DataFrame(actual)
2025-02-24T16:09:32.4237108Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4237292Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4237296Z 
2025-02-24T16:09:32.4237423Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T16:09:32.4237535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4237690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4237761Z     ???
2025-02-24T16:09:32.4237866Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4237874Z 
2025-02-24T16:09:32.4237943Z >   ???
2025-02-24T16:09:32.4238122Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.4238194Z E   
2025-02-24T16:09:32.4238364Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.4238437Z E   [index]: [0, 1]
2025-02-24T16:09:32.4238541Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:09:32.4238642Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:09:32.4238814Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:09:32.4238819Z 
2025-02-24T16:09:32.4238907Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4239076Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T16:09:32.4239080Z 
2025-02-24T16:09:32.4239304Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4239387Z attr = 'nu_bar_estimator'
2025-02-24T16:09:32.4239667Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05cdb2b620>
2025-02-24T16:09:32.4239672Z 
2025-02-24T16:09:32.4239763Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4239836Z         "attr",
2025-02-24T16:09:32.4239907Z         [
2025-02-24T16:09:32.4239987Z             "nu_bar_estimator",
2025-02-24T16:09:32.4240066Z             "j_estimator",
2025-02-24T16:09:32.4240145Z             "t_radiative",
2025-02-24T16:09:32.4240233Z             "dilution_factor",
2025-02-24T16:09:32.4240311Z             "output_nus",
2025-02-24T16:09:32.4240394Z             "output_energies",
2025-02-24T16:09:32.4240464Z         ],
2025-02-24T16:09:32.4240530Z     )
2025-02-24T16:09:32.4240717Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4240833Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4240916Z             actual = getattr(
2025-02-24T16:09:32.4241113Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4241190Z                 attr,
2025-02-24T16:09:32.4241266Z             )
2025-02-24T16:09:32.4241382Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4241536Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4241650Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4241852Z             actual = getattr(
2025-02-24T16:09:32.4242028Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4242106Z                 attr,
2025-02-24T16:09:32.4242176Z             )
2025-02-24T16:09:32.4242243Z         else:
2025-02-24T16:09:32.4242381Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4242448Z     
2025-02-24T16:09:32.4242539Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4242620Z             actual = actual.value
2025-02-24T16:09:32.4242816Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4242944Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4243125Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4243129Z 
2025-02-24T16:09:32.4243248Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4243358Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4243512Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4243582Z     ???
2025-02-24T16:09:32.4243688Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4243692Z 
2025-02-24T16:09:32.4243761Z >   ???
2025-02-24T16:09:32.4243861Z E   AssertionError: Series are different
2025-02-24T16:09:32.4243932Z E   
2025-02-24T16:09:32.4244027Z E   Series values are different (100.0 %)
2025-02-24T16:09:32.4244160Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4245934Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:09:32.4247247Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:09:32.4247449Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:09:32.4247455Z 
2025-02-24T16:09:32.4247545Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4247709Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T16:09:32.4247714Z 
2025-02-24T16:09:32.4247935Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4248046Z attr = 'j_estimator'
2025-02-24T16:09:32.4248322Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f143aba0>
2025-02-24T16:09:32.4248327Z 
2025-02-24T16:09:32.4248420Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4248489Z         "attr",
2025-02-24T16:09:32.4248557Z         [
2025-02-24T16:09:32.4248639Z             "nu_bar_estimator",
2025-02-24T16:09:32.4248724Z             "j_estimator",
2025-02-24T16:09:32.4248803Z             "t_radiative",
2025-02-24T16:09:32.4248889Z             "dilution_factor",
2025-02-24T16:09:32.4248971Z             "output_nus",
2025-02-24T16:09:32.4249048Z             "output_energies",
2025-02-24T16:09:32.4249119Z         ],
2025-02-24T16:09:32.4249185Z     )
2025-02-24T16:09:32.4249375Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4249492Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4249703Z             actual = getattr(
2025-02-24T16:09:32.4249901Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4249972Z                 attr,
2025-02-24T16:09:32.4250044Z             )
2025-02-24T16:09:32.4250160Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4250313Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4250429Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4250507Z             actual = getattr(
2025-02-24T16:09:32.4250787Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4250859Z                 attr,
2025-02-24T16:09:32.4250931Z             )
2025-02-24T16:09:32.4250997Z         else:
2025-02-24T16:09:32.4251137Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4251206Z     
2025-02-24T16:09:32.4251293Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4251382Z             actual = actual.value
2025-02-24T16:09:32.4251466Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4251590Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4251769Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4251778Z 
2025-02-24T16:09:32.4251894Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4252015Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4252166Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4252241Z     ???
2025-02-24T16:09:32.4252348Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4252352Z 
2025-02-24T16:09:32.4252423Z >   ???
2025-02-24T16:09:32.4252527Z E   AssertionError: Series are different
2025-02-24T16:09:32.4252592Z E   
2025-02-24T16:09:32.4252692Z E   Series values are different (100.0 %)
2025-02-24T16:09:32.4252820Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4253816Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:09:32.4254797Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:09:32.4254972Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:09:32.4254979Z 
2025-02-24T16:09:32.4255072Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4255232Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T16:09:32.4255237Z 
2025-02-24T16:09:32.4255453Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4255537Z attr = 't_radiative'
2025-02-24T16:09:32.4255809Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f143be00>
2025-02-24T16:09:32.4255813Z 
2025-02-24T16:09:32.4255911Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4255987Z         "attr",
2025-02-24T16:09:32.4256056Z         [
2025-02-24T16:09:32.4256139Z             "nu_bar_estimator",
2025-02-24T16:09:32.4256217Z             "j_estimator",
2025-02-24T16:09:32.4256398Z             "t_radiative",
2025-02-24T16:09:32.4256481Z             "dilution_factor",
2025-02-24T16:09:32.4256563Z             "output_nus",
2025-02-24T16:09:32.4256762Z             "output_energies",
2025-02-24T16:09:32.4256829Z         ],
2025-02-24T16:09:32.4256900Z     )
2025-02-24T16:09:32.4257079Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4257194Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4257276Z             actual = getattr(
2025-02-24T16:09:32.4257472Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4257548Z                 attr,
2025-02-24T16:09:32.4257617Z             )
2025-02-24T16:09:32.4257845Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4257995Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4258109Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4258186Z             actual = getattr(
2025-02-24T16:09:32.4258364Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4258443Z                 attr,
2025-02-24T16:09:32.4258510Z             )
2025-02-24T16:09:32.4258582Z         else:
2025-02-24T16:09:32.4258716Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4258787Z     
2025-02-24T16:09:32.4258874Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4258961Z             actual = actual.value
2025-02-24T16:09:32.4259054Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4259175Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4259361Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4259369Z 
2025-02-24T16:09:32.4259487Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4259602Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4259747Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4259818Z     ???
2025-02-24T16:09:32.4259934Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4259938Z 
2025-02-24T16:09:32.4260005Z >   ???
2025-02-24T16:09:32.4260111Z E   AssertionError: Series are different
2025-02-24T16:09:32.4260178Z E   
2025-02-24T16:09:32.4260276Z E   Series values are different (90.0 %)
2025-02-24T16:09:32.4260399Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4261415Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:09:32.4262443Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:09:32.4262620Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.4262625Z 
2025-02-24T16:09:32.4262739Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4263040Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T16:09:32.4263053Z 
2025-02-24T16:09:32.4263424Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4263566Z attr = 'dilution_factor'
2025-02-24T16:09:32.4263985Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f15b8c80>
2025-02-24T16:09:32.4263990Z 
2025-02-24T16:09:32.4264081Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4264263Z         "attr",
2025-02-24T16:09:32.4264330Z         [
2025-02-24T16:09:32.4264413Z             "nu_bar_estimator",
2025-02-24T16:09:32.4264489Z             "j_estimator",
2025-02-24T16:09:32.4264570Z             "t_radiative",
2025-02-24T16:09:32.4264655Z             "dilution_factor",
2025-02-24T16:09:32.4264732Z             "output_nus",
2025-02-24T16:09:32.4264815Z             "output_energies",
2025-02-24T16:09:32.4264882Z         ],
2025-02-24T16:09:32.4264951Z     )
2025-02-24T16:09:32.4265136Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4265347Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4265429Z             actual = getattr(
2025-02-24T16:09:32.4265622Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4265698Z                 attr,
2025-02-24T16:09:32.4265765Z             )
2025-02-24T16:09:32.4265885Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4266039Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4266154Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4266233Z             actual = getattr(
2025-02-24T16:09:32.4266544Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4266621Z                 attr,
2025-02-24T16:09:32.4266689Z             )
2025-02-24T16:09:32.4266760Z         else:
2025-02-24T16:09:32.4266895Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4266970Z     
2025-02-24T16:09:32.4267061Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4267143Z             actual = actual.value
2025-02-24T16:09:32.4267236Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4267359Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4267540Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4267549Z 
2025-02-24T16:09:32.4267672Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4267781Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4267931Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4267999Z     ???
2025-02-24T16:09:32.4268109Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4268114Z 
2025-02-24T16:09:32.4268180Z >   ???
2025-02-24T16:09:32.4268281Z E   AssertionError: Series are different
2025-02-24T16:09:32.4268353Z E   
2025-02-24T16:09:32.4268445Z E   Series values are different (95.0 %)
2025-02-24T16:09:32.4268576Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.4269685Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:09:32.4270793Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:09:32.4270973Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.4270978Z 
2025-02-24T16:09:32.4271064Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4271221Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T16:09:32.4271359Z 
2025-02-24T16:09:32.4271584Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4271661Z attr = 'output_nus'
2025-02-24T16:09:32.4271940Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f15b8b30>
2025-02-24T16:09:32.4271945Z 
2025-02-24T16:09:32.4272034Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4272107Z         "attr",
2025-02-24T16:09:32.4272178Z         [
2025-02-24T16:09:32.4272259Z             "nu_bar_estimator",
2025-02-24T16:09:32.4272340Z             "j_estimator",
2025-02-24T16:09:32.4272518Z             "t_radiative",
2025-02-24T16:09:32.4272602Z             "dilution_factor",
2025-02-24T16:09:32.4272680Z             "output_nus",
2025-02-24T16:09:32.4272763Z             "output_energies",
2025-02-24T16:09:32.4272834Z         ],
2025-02-24T16:09:32.4272900Z     )
2025-02-24T16:09:32.4273084Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4273199Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4273280Z             actual = getattr(
2025-02-24T16:09:32.4273471Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4273546Z                 attr,
2025-02-24T16:09:32.4273617Z             )
2025-02-24T16:09:32.4273732Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4273888Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4274000Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4274085Z             actual = getattr(
2025-02-24T16:09:32.4274258Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4274333Z                 attr,
2025-02-24T16:09:32.4274405Z             )
2025-02-24T16:09:32.4274476Z         else:
2025-02-24T16:09:32.4274612Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4274682Z     
2025-02-24T16:09:32.4274772Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4274855Z             actual = actual.value
2025-02-24T16:09:32.4274946Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4275072Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4275252Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4275257Z 
2025-02-24T16:09:32.4275375Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4275483Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4275637Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4275707Z     ???
2025-02-24T16:09:32.4275813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4275817Z 
2025-02-24T16:09:32.4275885Z >   ???
2025-02-24T16:09:32.4275983Z E   AssertionError: Series are different
2025-02-24T16:09:32.4276058Z E   
2025-02-24T16:09:32.4276154Z E   Series values are different (5.1125 %)
2025-02-24T16:09:32.4276628Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4281814Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:09:32.4287329Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:09:32.4287528Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:09:32.4287534Z 
2025-02-24T16:09:32.4287623Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4287800Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T16:09:32.4287804Z 
2025-02-24T16:09:32.4288150Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f05d80a80b0>
2025-02-24T16:09:32.4288291Z attr = 'output_energies'
2025-02-24T16:09:32.4288767Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f15ba300>
2025-02-24T16:09:32.4288923Z 
2025-02-24T16:09:32.4289063Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4289140Z         "attr",
2025-02-24T16:09:32.4289214Z         [
2025-02-24T16:09:32.4289296Z             "nu_bar_estimator",
2025-02-24T16:09:32.4289378Z             "j_estimator",
2025-02-24T16:09:32.4289454Z             "t_radiative",
2025-02-24T16:09:32.4289537Z             "dilution_factor",
2025-02-24T16:09:32.4289615Z             "output_nus",
2025-02-24T16:09:32.4289698Z             "output_energies",
2025-02-24T16:09:32.4289766Z         ],
2025-02-24T16:09:32.4289971Z     )
2025-02-24T16:09:32.4290161Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T16:09:32.4290277Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T16:09:32.4290359Z             actual = getattr(
2025-02-24T16:09:32.4290553Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T16:09:32.4290630Z                 attr,
2025-02-24T16:09:32.4290703Z             )
2025-02-24T16:09:32.4290825Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T16:09:32.4290984Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T16:09:32.4291097Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T16:09:32.4291181Z             actual = getattr(
2025-02-24T16:09:32.4291428Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T16:09:32.4291556Z                 attr,
2025-02-24T16:09:32.4291661Z             )
2025-02-24T16:09:32.4291735Z         else:
2025-02-24T16:09:32.4291877Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T16:09:32.4291945Z     
2025-02-24T16:09:32.4292035Z         if hasattr(actual, "value"):
2025-02-24T16:09:32.4292122Z             actual = actual.value
2025-02-24T16:09:32.4292213Z         actual = pd.Series(actual)
2025-02-24T16:09:32.4292337Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T16:09:32.4292531Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T16:09:32.4292536Z 
2025-02-24T16:09:32.4292659Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T16:09:32.4292773Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4292930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T16:09:32.4292999Z     ???
2025-02-24T16:09:32.4293112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4293117Z 
2025-02-24T16:09:32.4293194Z >   ???
2025-02-24T16:09:32.4293296Z E   AssertionError: Series are different
2025-02-24T16:09:32.4293367Z E   
2025-02-24T16:09:32.4293464Z E   Series values are different (1.3025 %)
2025-02-24T16:09:32.4293842Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.4300428Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.4307094Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.4307435Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:09:32.4307442Z 
2025-02-24T16:09:32.4307538Z testing.pyx:173: AssertionError
2025-02-24T16:09:32.4307727Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T16:09:32.4307732Z 
2025-02-24T16:09:32.4308000Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f0600734d40>
2025-02-24T16:09:32.4308200Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ceb30080>
2025-02-24T16:09:32.4308305Z 
2025-02-24T16:09:32.4308429Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T16:09:32.4308589Z         transport_state = simulation.transport.transport_state
2025-02-24T16:09:32.4308781Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:09:32.4308852Z     
2025-02-24T16:09:32.4309039Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:09:32.4309174Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4309361Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:09:32.4309467Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4309539Z     
2025-02-24T16:09:32.4309648Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4309718Z     
2025-02-24T16:09:32.4309811Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4309882Z             result,
2025-02-24T16:09:32.4309962Z             luminosity,
2025-02-24T16:09:32.4310034Z         )
2025-02-24T16:09:32.4310038Z 
2025-02-24T16:09:32.4310168Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T16:09:32.4310281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4310632Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4310733Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4310844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4310848Z 
2025-02-24T16:09:32.4311331Z args = (<function assert_allclose.<locals>.compare at 0x7f05cd020fe0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:09:32.4311435Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4311691Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4311699Z 
2025-02-24T16:09:32.4311779Z     @wraps(func)
2025-02-24T16:09:32.4311864Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4311952Z         with self._recreate_cm():
2025-02-24T16:09:32.4312041Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4312131Z E           AssertionError: 
2025-02-24T16:09:32.4312240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4312318Z E           
2025-02-24T16:09:32.4312426Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.4312531Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.4312625Z E           Max relative difference: 1.
2025-02-24T16:09:32.4312781Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4312874Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4313024Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4313111Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4313115Z 
2025-02-24T16:09:32.4313322Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4313519Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T16:09:32.4313523Z 
2025-02-24T16:09:32.4313915Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f0600734d10>
2025-02-24T16:09:32.4314383Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ceb30080>
2025-02-24T16:09:32.4314390Z 
2025-02-24T16:09:32.4314643Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T16:09:32.4314881Z         transport_state = simulation.transport.transport_state
2025-02-24T16:09:32.4315077Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:09:32.4315147Z     
2025-02-24T16:09:32.4315338Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:09:32.4315571Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T16:09:32.4315781Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T16:09:32.4315882Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4315956Z     
2025-02-24T16:09:32.4316064Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4316137Z     
2025-02-24T16:09:32.4316227Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4316407Z             result,
2025-02-24T16:09:32.4316490Z             luminosity,
2025-02-24T16:09:32.4316559Z         )
2025-02-24T16:09:32.4316563Z 
2025-02-24T16:09:32.4316691Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T16:09:32.4316804Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4317145Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4317243Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4317350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4317355Z 
2025-02-24T16:09:32.4317833Z args = (<function assert_allclose.<locals>.compare at 0x7f05d57132e0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T16:09:32.4317939Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4318190Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4318196Z 
2025-02-24T16:09:32.4318271Z     @wraps(func)
2025-02-24T16:09:32.4318354Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4318442Z         with self._recreate_cm():
2025-02-24T16:09:32.4318529Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4318618Z E           AssertionError: 
2025-02-24T16:09:32.4318731Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4318804Z E           
2025-02-24T16:09:32.4318910Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:09:32.4319009Z E           Max absolute difference: 4.15247374e+37
2025-02-24T16:09:32.4319104Z E           Max relative difference: 1.
2025-02-24T16:09:32.4319255Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4319346Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4319489Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4319571Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4319576Z 
2025-02-24T16:09:32.4319780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4319945Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T16:09:32.4319949Z 
2025-02-24T16:09:32.4320213Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f06007345f0>
2025-02-24T16:09:32.4320417Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ceb30080>
2025-02-24T16:09:32.4320422Z 
2025-02-24T16:09:32.4320514Z     def test_solve(self, simulation):
2025-02-24T16:09:32.4320667Z         transport_state = simulation.transport.transport_state
2025-02-24T16:09:32.4320859Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T16:09:32.4321066Z     
2025-02-24T16:09:32.4321259Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T16:09:32.4321417Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T16:09:32.4321500Z             transport_state
2025-02-24T16:09:32.4321568Z         )
2025-02-24T16:09:32.4321749Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:09:32.4321868Z         expected_real = self.get_expected_data(key_real)
2025-02-24T16:09:32.4322057Z     
2025-02-24T16:09:32.4322195Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T16:09:32.4322262Z     
2025-02-24T16:09:32.4322350Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4322441Z             result_real.luminosity,
2025-02-24T16:09:32.4322527Z             luminosity_real,
2025-02-24T16:09:32.4322596Z         )
2025-02-24T16:09:32.4322600Z 
2025-02-24T16:09:32.4322735Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T16:09:32.4322848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4323186Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4323280Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4323390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4323394Z 
2025-02-24T16:09:32.4323870Z args = (<function assert_allclose.<locals>.compare at 0x7f05d4975800>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T16:09:32.4323980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4324226Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4324231Z 
2025-02-24T16:09:32.4324307Z     @wraps(func)
2025-02-24T16:09:32.4324396Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4324483Z         with self._recreate_cm():
2025-02-24T16:09:32.4324577Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4324661Z E           AssertionError: 
2025-02-24T16:09:32.4324775Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4324846Z E           
2025-02-24T16:09:32.4324952Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.4325053Z E           Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.4325146Z E           Max relative difference: 1.
2025-02-24T16:09:32.4325302Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4325389Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4325536Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.4325619Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4325626Z 
2025-02-24T16:09:32.4325828Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4326011Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T16:09:32.4326016Z 
2025-02-24T16:09:32.4326235Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f0600736090>
2025-02-24T16:09:32.4326535Z simulation = <tardis.simulation.base.Simulation object at 0x7f05eef1b8c0>
2025-02-24T16:09:32.4326540Z 
2025-02-24T16:09:32.4326652Z     def test_j_blue_estimators(self, simulation):
2025-02-24T16:09:32.4326809Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T16:09:32.4326921Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4326988Z     
2025-02-24T16:09:32.4327081Z >       npt.assert_allclose(
2025-02-24T16:09:32.4327308Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T16:09:32.4327392Z             expected.values,
2025-02-24T16:09:32.4327577Z         )
2025-02-24T16:09:32.4327582Z 
2025-02-24T16:09:32.4327681Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T16:09:32.4327794Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4327798Z 
2025-02-24T16:09:32.4328067Z args = (<function assert_allclose.<locals>.compare at 0x7f05f8546c00>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4328144Z        [0., 0., .....,
2025-02-24T16:09:32.4328223Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4328302Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4328484Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4328724Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4328729Z 
2025-02-24T16:09:32.4328805Z     @wraps(func)
2025-02-24T16:09:32.4328887Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4328977Z         with self._recreate_cm():
2025-02-24T16:09:32.4329070Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4329156Z E           AssertionError: 
2025-02-24T16:09:32.4329270Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4329340Z E           
2025-02-24T16:09:32.4329453Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:09:32.4329557Z E           Max absolute difference: 5.32418652e-19
2025-02-24T16:09:32.4329661Z E           Max relative difference: 12.23359055
2025-02-24T16:09:32.4329752Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4329842Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4329939Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4330028Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4330115Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4330199Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4330204Z 
2025-02-24T16:09:32.4330415Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4330573Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4330815Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4330893Z 	
2025-02-24T16:09:32.4331455Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T16:09:32.4331633Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4332116Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T16:09:32.4332365Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4332935Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T16:09:32.4333237Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4333873Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4334102Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4334480Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4334735Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4334820Z 	
2025-02-24T16:09:32.4335119Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4335324Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4335458Z 	
2025-02-24T16:09:32.4335635Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:09:32.4335747Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:09:32.4335961Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4336105Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4336605Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4336707Z 	
2025-02-24T16:09:32.4336918Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4337223Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4337324Z 	
2025-02-24T16:09:32.4337517Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:09:32.4337638Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:09:32.4337771Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:09:32.4337933Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:09:32.4338242Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:09:32.4338423Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4338621Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4338737Z 	
2025-02-24T16:09:32.4339060Z 	Current t_inner = 9974.969 K
2025-02-24T16:09:32.4339373Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:09:32.4339707Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4340061Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4340280Z 	
2025-02-24T16:09:32.4340485Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4340730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4340814Z 	
2025-02-24T16:09:32.4341050Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:09:32.4341209Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:09:32.4341331Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4341521Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4341696Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4341893Z 	
2025-02-24T16:09:32.4342077Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4342321Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4342455Z 	
2025-02-24T16:09:32.4342581Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4342795Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:09:32.4342918Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:09:32.4343089Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:09:32.4343205Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:09:32.4343364Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4343660Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4343759Z 	
2025-02-24T16:09:32.4343928Z 	Current t_inner = 10736.790 K
2025-02-24T16:09:32.4344077Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:09:32.4344235Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4344477Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4344626Z 	
2025-02-24T16:09:32.4344862Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4345052Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4345170Z 	
2025-02-24T16:09:32.4345340Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:09:32.4345531Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:09:32.4345693Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4345829Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4346039Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4346503Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:09:32.4346783Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4346884Z 	
2025-02-24T16:09:32.4347101Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4347314Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4347476Z 	
2025-02-24T16:09:32.4347682Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4347799Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:09:32.4347949Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:09:32.4348094Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:09:32.4348277Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:09:32.4348651Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4348849Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4348980Z 	
2025-02-24T16:09:32.4349097Z 	Current t_inner = 10718.574 K
2025-02-24T16:09:32.4349336Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:09:32.4349522Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4349715Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4349847Z 	
2025-02-24T16:09:32.4350030Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4350302Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4350530Z 	
2025-02-24T16:09:32.4350694Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:09:32.4350869Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:09:32.4350991Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4351218Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4351430Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4351722Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T16:09:32.4351916Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4352066Z 	
2025-02-24T16:09:32.4352313Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T16:09:32.4352520Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4352653Z 	
2025-02-24T16:09:32.4352804Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4352955Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:09:32.4353054Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:09:32.4353271Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:09:32.4353420Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:09:32.4353573Z  ([1mbase.py[0m:650)
2025-02-24T16:09:32.4353800Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4353884Z 	
2025-02-24T16:09:32.4354099Z 	Current t_inner = 10696.150 K
2025-02-24T16:09:32.4354305Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:09:32.4354443Z  ([1mbase.py[0m:652)
2025-02-24T16:09:32.4354667Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4354751Z 	
2025-02-24T16:09:32.4354975Z 	Simulation finished in 4 iterations 
2025-02-24T16:09:32.4355091Z 	Simulation took 12.74 s
2025-02-24T16:09:32.4355279Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4355509Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4355593Z 	
2025-02-24T16:09:32.4355872Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4356085Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4356216Z 	
2025-02-24T16:09:32.4356462Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:09:32.4356613Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:09:32.4356836Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4356997Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4357230Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T16:09:32.4357241Z 
2025-02-24T16:09:32.4357246Z 
2025-02-24T16:09:32.4357527Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T16:09:32.4357533Z 
2025-02-24T16:09:32.4357805Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T16:09:32.4357812Z 
2025-02-24T16:09:32.4358208Z Packets:   ████▏                                                                           10463/200000 [00:00<00:01, 104623.86it/s][A
2025-02-24T16:09:32.4358221Z 
2025-02-24T16:09:32.4358502Z Packets:   ████████▌                                                                       21274/200000 [00:00<00:01, 106668.71it/s][A
2025-02-24T16:09:32.4358508Z 
2025-02-24T16:09:32.4358822Z Packets:   ████████████▊                                                                   32032/200000 [00:00<00:01, 107084.50it/s][A
2025-02-24T16:09:32.4358950Z 
2025-02-24T16:09:32.4359277Z Packets:   █████████████████                                                               42741/200000 [00:00<00:01, 106902.98it/s][A
2025-02-24T16:09:32.4359282Z 
2025-02-24T16:09:32.4359557Z Packets:   █████████████████████▍                                                          53524/200000 [00:00<00:01, 107234.72it/s][A
2025-02-24T16:09:32.4359563Z 
2025-02-24T16:09:32.4359977Z Packets:   █████████████████████████▋                                                      64308/200000 [00:00<00:01, 107438.31it/s][A
2025-02-24T16:09:32.4360094Z 
2025-02-24T16:09:32.4360433Z Packets:   ██████████████████████████████                                                  75052/200000 [00:00<00:01, 107368.72it/s][A
2025-02-24T16:09:32.4360439Z 
2025-02-24T16:09:32.4360744Z Packets:   ██████████████████████████████████▎                                             85789/200000 [00:00<00:01, 107273.00it/s][A
2025-02-24T16:09:32.4360760Z 
2025-02-24T16:09:32.4361126Z Packets:   ██████████████████████████████████████▋                                         96627/200000 [00:00<00:00, 107617.65it/s][A
2025-02-24T16:09:32.4361131Z 
2025-02-24T16:09:32.4361519Z Packets:   ██████████████████████████████████████████▉                                     107389/200000 [00:01<00:00, 107446.53it/s][A
2025-02-24T16:09:32.4361525Z 
2025-02-24T16:09:32.4361862Z Packets:   ███████████████████████████████████████████████▎                                118134/200000 [00:01<00:00, 107404.20it/s][A
2025-02-24T16:09:32.4361868Z 
2025-02-24T16:09:32.4362243Z Packets:   ███████████████████████████████████████████████████▌                            128956/200000 [00:01<00:00, 107651.19it/s][A
2025-02-24T16:09:32.4362248Z 
2025-02-24T16:09:32.4362636Z Packets:   ███████████████████████████████████████████████████████▉                        139722/200000 [00:01<00:00, 107519.06it/s][A
2025-02-24T16:09:32.4362641Z 
2025-02-24T16:09:32.4362996Z Packets:   ████████████████████████████████████████████████████████████▏                   150474/200000 [00:01<00:00, 107278.87it/s][A
2025-02-24T16:09:32.4363014Z 
2025-02-24T16:09:32.4363419Z Packets:   ████████████████████████████████████████████████████████████████▍               161208/200000 [00:01<00:00, 107296.20it/s][A
2025-02-24T16:09:32.4363425Z 
2025-02-24T16:09:32.4363816Z Packets:   ████████████████████████████████████████████████████████████████████▊           171938/200000 [00:01<00:00, 107291.53it/s][A
2025-02-24T16:09:32.4363822Z 
2025-02-24T16:09:32.4364414Z Packets:   █████████████████████████████████████████████████████████████████████████       182668/200000 [00:01<00:00, 104310.13it/s][A
2025-02-24T16:09:32.4364447Z 
2025-02-24T16:09:32.4365260Z Packets:   █████████████████████████████████████████████████████████████████████████████▎  193370/200000 [00:01<00:00, 105106.61it/s][A
2025-02-24T16:09:32.4365489Z Iterations:                                                                                13/? [05:52<00:00, 12.21s/it]
2025-02-24T16:09:32.4365603Z 
2025-02-24T16:09:32.4365973Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:02<00:00, 105106.61it/s][A
2025-02-24T16:09:32.4365980Z 
2025-02-24T16:09:32.4366397Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4366404Z 
2025-02-24T16:09:32.4366790Z Packets:   ████▎                                                                           10782/200000 [00:00<00:01, 107818.82it/s][A
2025-02-24T16:09:32.4366922Z 
2025-02-24T16:09:32.4367224Z Packets:   ████████▋                                                                       21653/200000 [00:00<00:01, 108339.76it/s][A
2025-02-24T16:09:32.4367231Z 
2025-02-24T16:09:32.4367544Z Packets:   █████████████                                                                   32580/200000 [00:00<00:01, 108761.25it/s][A
2025-02-24T16:09:32.4367560Z 
2025-02-24T16:09:32.4367882Z Packets:   █████████████████▍                                                              43457/200000 [00:00<00:01, 108610.89it/s][A
2025-02-24T16:09:32.4367888Z 
2025-02-24T16:09:32.4368193Z Packets:   █████████████████████▋                                                          54339/200000 [00:00<00:01, 108684.68it/s][A
2025-02-24T16:09:32.4368199Z 
2025-02-24T16:09:32.4368563Z Packets:   ██████████████████████████                                                      65208/200000 [00:00<00:01, 107209.42it/s][A
2025-02-24T16:09:32.4368569Z 
2025-02-24T16:09:32.4368928Z Packets:   ██████████████████████████████▍                                                 76176/200000 [00:00<00:01, 108006.80it/s][A
2025-02-24T16:09:32.4368934Z 
2025-02-24T16:09:32.4369233Z Packets:   ██████████████████████████████████▊                                             87005/200000 [00:00<00:01, 108092.00it/s][A
2025-02-24T16:09:32.4369239Z 
2025-02-24T16:09:32.4369608Z Packets:   ███████████████████████████████████████▏                                        97929/200000 [00:00<00:00, 108448.63it/s][A
2025-02-24T16:09:32.4369614Z 
2025-02-24T16:09:32.4369947Z Packets:   ███████████████████████████████████████████▌                                    108776/200000 [00:01<00:00, 108448.63it/s][A
2025-02-24T16:09:32.4369953Z 
2025-02-24T16:09:32.4370435Z Packets:   ███████████████████████████████████████████████▉                                119708/200000 [00:01<00:00, 108713.17it/s][A
2025-02-24T16:09:32.4370442Z 
2025-02-24T16:09:32.4370822Z Packets:   ████████████████████████████████████████████████████▏                           130581/200000 [00:01<00:00, 108567.99it/s][A
2025-02-24T16:09:32.4370840Z 
2025-02-24T16:09:32.4371203Z Packets:   ████████████████████████████████████████████████████████▌                       141529/200000 [00:01<00:00, 108841.62it/s][A
2025-02-24T16:09:32.4371208Z 
2025-02-24T16:09:32.4371556Z Packets:   ████████████████████████████████████████████████████████████▉                   152414/200000 [00:01<00:00, 108581.36it/s][A
2025-02-24T16:09:32.4371686Z 
2025-02-24T16:09:32.4372054Z Packets:   █████████████████████████████████████████████████████████████████▎              163273/200000 [00:01<00:00, 108464.58it/s][A
2025-02-24T16:09:32.4372060Z 
2025-02-24T16:09:32.4372500Z Packets:   █████████████████████████████████████████████████████████████████████▋          174120/200000 [00:01<00:00, 108120.94it/s][A
2025-02-24T16:09:32.4372506Z 
2025-02-24T16:09:32.4372854Z Packets:   ██████████████████████████████████████████████████████████████████████████      185024/200000 [00:01<00:00, 108394.19it/s][A
2025-02-24T16:09:32.4372969Z 
2025-02-24T16:09:32.4373359Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 195875/200000 [00:01<00:00, 108427.68it/s][A
2025-02-24T16:09:32.4373573Z Iterations:                                                                                14/? [05:55<00:00,  9.48s/it]
2025-02-24T16:09:32.4373593Z 
2025-02-24T16:09:32.4373932Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108427.68it/s][A
2025-02-24T16:09:32.4373937Z 
2025-02-24T16:09:32.4374299Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4374305Z 
2025-02-24T16:09:32.4374629Z Packets:   ████▎                                                                           10844/200000 [00:00<00:01, 106275.47it/s][A
2025-02-24T16:09:32.4374648Z 
2025-02-24T16:09:32.4374924Z Packets:   ████████▋                                                                       21591/200000 [00:00<00:01, 106970.71it/s][A
2025-02-24T16:09:32.4374929Z 
2025-02-24T16:09:32.4375245Z Packets:   ████████████▉                                                                   32427/200000 [00:00<00:01, 107601.32it/s][A
2025-02-24T16:09:32.4375250Z 
2025-02-24T16:09:32.4375662Z Packets:   █████████████████▎                                                              43188/200000 [00:00<00:01, 107470.41it/s][A
2025-02-24T16:09:32.4375675Z 
2025-02-24T16:09:32.4376001Z Packets:   █████████████████████▌                                                          53936/200000 [00:00<00:01, 107028.57it/s][A
2025-02-24T16:09:32.4376007Z 
2025-02-24T16:09:32.4376448Z Packets:   █████████████████████████▊                                                      64640/200000 [00:00<00:01, 106910.30it/s][A
2025-02-24T16:09:32.4376454Z 
2025-02-24T16:09:32.4376792Z Packets:   ██████████████████████████████▏                                                 75332/200000 [00:00<00:01, 106819.51it/s][A
2025-02-24T16:09:32.4376808Z 
2025-02-24T16:09:32.4377109Z Packets:   ██████████████████████████████████▍                                             86015/200000 [00:00<00:01, 106793.87it/s][A
2025-02-24T16:09:32.4377115Z 
2025-02-24T16:09:32.4377489Z Packets:   ██████████████████████████████████████▋                                         96849/200000 [00:00<00:00, 107275.70it/s][A
2025-02-24T16:09:32.4377635Z 
2025-02-24T16:09:32.4378015Z Packets:   ███████████████████████████████████████████                                     107650/200000 [00:01<00:00, 107500.16it/s][A
2025-02-24T16:09:32.4378021Z 
2025-02-24T16:09:32.4378342Z Packets:   ███████████████████████████████████████████████▍                                118508/200000 [00:01<00:00, 107827.94it/s][A
2025-02-24T16:09:32.4378347Z 
2025-02-24T16:09:32.4378704Z Packets:   ███████████████████████████████████████████████████▋                            129345/200000 [00:01<00:00, 107991.17it/s][A
2025-02-24T16:09:32.4378821Z 
2025-02-24T16:09:32.4379194Z Packets:   ████████████████████████████████████████████████████████                        140166/200000 [00:01<00:00, 108055.90it/s][A
2025-02-24T16:09:32.4379200Z 
2025-02-24T16:09:32.4379587Z Packets:   ████████████████████████████████████████████████████████████▍                   150972/200000 [00:01<00:00, 107727.51it/s][A
2025-02-24T16:09:32.4379607Z 
2025-02-24T16:09:32.4379995Z Packets:   ████████████████████████████████████████████████████████████████▋               161746/200000 [00:01<00:00, 107471.41it/s][A
2025-02-24T16:09:32.4380001Z 
2025-02-24T16:09:32.4380374Z Packets:   ████████████████████████████████████████████████████████████████████▉           172494/200000 [00:01<00:00, 107409.11it/s][A
2025-02-24T16:09:32.4380379Z 
2025-02-24T16:09:32.4380722Z Packets:   █████████████████████████████████████████████████████████████████████████▎      183260/200000 [00:01<00:00, 107483.83it/s][A
2025-02-24T16:09:32.4380743Z 
2025-02-24T16:09:32.4381129Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  194025/200000 [00:01<00:00, 107532.24it/s][A
2025-02-24T16:09:32.4381402Z Iterations:                                                                                15/? [05:58<00:00,  7.58s/it]
2025-02-24T16:09:32.4381408Z 
2025-02-24T16:09:32.4381860Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 107532.24it/s][A
2025-02-24T16:09:32.4381865Z 
2025-02-24T16:09:32.4382181Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4382186Z 
2025-02-24T16:09:32.4382488Z Packets:   ████▎                                                                           10857/200000 [00:00<00:01, 108569.59it/s][A
2025-02-24T16:09:32.4382493Z 
2025-02-24T16:09:32.4382833Z Packets:   ████████▋                                                                       21818/200000 [00:00<00:01, 109179.97it/s][A
2025-02-24T16:09:32.4382839Z 
2025-02-24T16:09:32.4383219Z Packets:   █████████████                                                                   32812/200000 [00:00<00:01, 109524.56it/s][A
2025-02-24T16:09:32.4383225Z 
2025-02-24T16:09:32.4383560Z Packets:   █████████████████▌                                                              43765/200000 [00:00<00:01, 109050.39it/s][A
2025-02-24T16:09:32.4383574Z 
2025-02-24T16:09:32.4383860Z Packets:   █████████████████████▉                                                          54722/200000 [00:00<00:01, 109236.25it/s][A
2025-02-24T16:09:32.4383865Z 
2025-02-24T16:09:32.4384190Z Packets:   ██████████████████████████▎                                                     65646/200000 [00:00<00:01, 108217.55it/s][A
2025-02-24T16:09:32.4384196Z 
2025-02-24T16:09:32.4384555Z Packets:   ██████████████████████████████▋                                                 76628/200000 [00:00<00:01, 108735.66it/s][A
2025-02-24T16:09:32.4384570Z 
2025-02-24T16:09:32.4384890Z Packets:   ███████████████████████████████████                                             87600/200000 [00:00<00:01, 109047.36it/s][A
2025-02-24T16:09:32.4384896Z 
2025-02-24T16:09:32.4385255Z Packets:   ███████████████████████████████████████▍                                        98506/200000 [00:00<00:00, 108972.99it/s][A
2025-02-24T16:09:32.4385271Z 
2025-02-24T16:09:32.4385620Z Packets:   ███████████████████████████████████████████▊                                    109469/200000 [00:01<00:00, 109172.53it/s][A
2025-02-24T16:09:32.4385626Z 
2025-02-24T16:09:32.4385944Z Packets:   ████████████████████████████████████████████████▏                               120387/200000 [00:01<00:00, 108897.70it/s][A
2025-02-24T16:09:32.4385949Z 
2025-02-24T16:09:32.4386527Z Packets:   ████████████████████████████████████████████████████▌                           131312/200000 [00:01<00:00, 109000.15it/s][A
2025-02-24T16:09:32.4386549Z 
2025-02-24T16:09:32.4386969Z Packets:   ████████████████████████████████████████████████████████▉                       142228/200000 [00:01<00:00, 109046.06it/s][A
2025-02-24T16:09:32.4386975Z 
2025-02-24T16:09:32.4387316Z Packets:   █████████████████████████████████████████████████████████████▎                  153133/200000 [00:01<00:00, 106248.82it/s][A
2025-02-24T16:09:32.4387451Z 
2025-02-24T16:09:32.4387838Z Packets:   █████████████████████████████████████████████████████████████████▋              164070/200000 [00:01<00:00, 107170.20it/s][A
2025-02-24T16:09:32.4387843Z 
2025-02-24T16:09:32.4388208Z Packets:   ██████████████████████████████████████████████████████████████████████          175016/200000 [00:01<00:00, 107848.87it/s][A
2025-02-24T16:09:32.4388213Z 
2025-02-24T16:09:32.4388613Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     185906/200000 [00:01<00:00, 108159.52it/s][A
2025-02-24T16:09:32.4388752Z 
2025-02-24T16:09:32.4389168Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 196730/200000 [00:01<00:00, 108002.26it/s][A
2025-02-24T16:09:32.4389380Z Iterations:                                                                                16/? [06:02<00:00,  6.25s/it]
2025-02-24T16:09:32.4389385Z 
2025-02-24T16:09:32.4389740Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108002.26it/s][A
2025-02-24T16:09:32.4389760Z 
2025-02-24T16:09:32.4390063Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T16:09:32.4390068Z 
2025-02-24T16:09:32.4390433Z Packets:   █▋                                                                              10806/500000 [00:00<00:13, 35198.79it/s][A
2025-02-24T16:09:32.4390439Z 
2025-02-24T16:09:32.4390707Z Packets:   ██▎                                                                             14326/500000 [00:00<00:13, 35015.96it/s][A
2025-02-24T16:09:32.4390723Z 
2025-02-24T16:09:32.4391017Z Packets:   ██▊                                                                             17868/500000 [00:00<00:13, 35139.87it/s][A
2025-02-24T16:09:32.4391023Z 
2025-02-24T16:09:32.4391336Z Packets:   ███▍                                                                            21380/500000 [00:00<00:13, 35088.02it/s][A
2025-02-24T16:09:32.4391350Z 
2025-02-24T16:09:32.4391599Z Packets:   ███▉                                                                            24886/500000 [00:00<00:13, 35056.11it/s][A
2025-02-24T16:09:32.4391605Z 
2025-02-24T16:09:32.4391964Z Packets:   ████▌                                                                           28390/500000 [00:00<00:13, 34972.07it/s][A
2025-02-24T16:09:32.4391970Z 
2025-02-24T16:09:32.4392450Z Packets:   █████                                                                           31885/500000 [00:00<00:13, 34933.66it/s][A
2025-02-24T16:09:32.4392467Z 
2025-02-24T16:09:32.4392744Z Packets:   █████▋                                                                          35377/500000 [00:01<00:13, 34746.99it/s][A
2025-02-24T16:09:32.4392750Z 
2025-02-24T16:09:32.4393068Z Packets:   ██████▏                                                                         38850/500000 [00:01<00:13, 33638.29it/s][A
2025-02-24T16:09:32.4393169Z 
2025-02-24T16:09:32.4393520Z Packets:   ██████▊                                                                         42356/500000 [00:01<00:13, 34054.13it/s][A
2025-02-24T16:09:32.4393526Z 
2025-02-24T16:09:32.4393813Z Packets:   ███████▎                                                                        45894/500000 [00:01<00:13, 34444.47it/s][A
2025-02-24T16:09:32.4393818Z 
2025-02-24T16:09:32.4394126Z Packets:   ███████▉                                                                        49374/500000 [00:01<00:13, 34549.51it/s][A
2025-02-24T16:09:32.4394140Z 
2025-02-24T16:09:32.4394459Z Packets:   ████████▍                                                                       52893/500000 [00:01<00:12, 34727.47it/s][A
2025-02-24T16:09:32.4394465Z 
2025-02-24T16:09:32.4394733Z Packets:   █████████                                                                       56386/500000 [00:01<00:12, 34786.86it/s][A
2025-02-24T16:09:32.4394739Z 
2025-02-24T16:09:32.4395081Z Packets:   █████████▌                                                                      59901/500000 [00:01<00:12, 34895.28it/s][A
2025-02-24T16:09:32.4395087Z 
2025-02-24T16:09:32.4395410Z Packets:   ██████████▏                                                                     63392/500000 [00:01<00:12, 34872.74it/s][A
2025-02-24T16:09:32.4395415Z 
2025-02-24T16:09:32.4395684Z Packets:   ██████████▋                                                                     66912/500000 [00:01<00:12, 34966.93it/s][A
2025-02-24T16:09:32.4395689Z 
2025-02-24T16:09:32.4396158Z Packets:   ███████████▎                                                                    70410/500000 [00:02<00:12, 34894.50it/s][A
2025-02-24T16:09:32.4396169Z 
2025-02-24T16:09:32.4396901Z Packets:   ███████████▊                                                                    73900/500000 [00:02<00:12, 34243.14it/s][A
2025-02-24T16:09:32.4396911Z 
2025-02-24T16:09:32.4397397Z Packets:   ████████████▍                                                                   77450/500000 [00:02<00:12, 34612.15it/s][A
2025-02-24T16:09:32.4397419Z 
2025-02-24T16:09:32.4397855Z Packets:   ████████████▉                                                                   80961/500000 [00:02<00:12, 34759.48it/s][A
2025-02-24T16:09:32.4397862Z 
2025-02-24T16:09:32.4398161Z Packets:   █████████████▌                                                                  84439/500000 [00:02<00:11, 34731.82it/s][A
2025-02-24T16:09:32.4398166Z 
2025-02-24T16:09:32.4398506Z Packets:   ██████████████                                                                  87922/500000 [00:02<00:11, 34759.48it/s][A
2025-02-24T16:09:32.4398522Z 
2025-02-24T16:09:32.4398852Z Packets:   ██████████████▌                                                                 91399/500000 [00:02<00:11, 34638.36it/s][A
2025-02-24T16:09:32.4398857Z 
2025-02-24T16:09:32.4399184Z Packets:   ███████████████▏                                                                94865/500000 [00:02<00:11, 34642.68it/s][A
2025-02-24T16:09:32.4399198Z 
2025-02-24T16:09:32.4399474Z Packets:   ███████████████▋                                                                98330/500000 [00:02<00:11, 34514.37it/s][A
2025-02-24T16:09:32.4399480Z 
2025-02-24T16:09:32.4399787Z Packets:   ████████████████▎                                                               101782/500000 [00:02<00:11, 34406.09it/s][A
2025-02-24T16:09:32.4399792Z 
2025-02-24T16:09:32.4400164Z Packets:   ████████████████▊                                                               105288/500000 [00:03<00:11, 34598.05it/s][A
2025-02-24T16:09:32.4400179Z 
2025-02-24T16:09:32.4400468Z Packets:   █████████████████▍                                                              108749/500000 [00:03<00:11, 33585.83it/s][A
2025-02-24T16:09:32.4400474Z 
2025-02-24T16:09:32.4400810Z Packets:   █████████████████▉                                                              112238/500000 [00:03<00:11, 33962.42it/s][A
2025-02-24T16:09:32.4400950Z 
2025-02-24T16:09:32.4401279Z Packets:   ██████████████████▌                                                             115711/500000 [00:03<00:11, 34188.04it/s][A
2025-02-24T16:09:32.4401284Z 
2025-02-24T16:09:32.4401634Z Packets:   ███████████████████                                                             119158/500000 [00:03<00:11, 34270.11it/s][A
2025-02-24T16:09:32.4401640Z 
2025-02-24T16:09:32.4408303Z Packets:   ███████████████████▌                                                            122602/500000 [00:03<00:10, 34320.47it/s][A
2025-02-24T16:09:32.4408542Z 
2025-02-24T16:09:32.4408997Z Packets:   ████████████████████▏                                                           126092/500000 [00:03<00:10, 34493.12it/s][A
2025-02-24T16:09:32.4409005Z 
2025-02-24T16:09:32.4409284Z Packets:   ████████████████████▋                                                           129591/500000 [00:03<00:10, 34638.89it/s][A
2025-02-24T16:09:32.4409289Z 
2025-02-24T16:09:32.4409565Z Packets:   █████████████████████▎                                                          133057/500000 [00:03<00:10, 34627.21it/s][A
2025-02-24T16:09:32.4409571Z 
2025-02-24T16:09:32.4409840Z Packets:   █████████████████████▊                                                          136521/500000 [00:03<00:10, 34612.45it/s][A
2025-02-24T16:09:32.4409845Z 
2025-02-24T16:09:32.4410106Z Packets:   ██████████████████████▍                                                         139990/500000 [00:04<00:10, 34633.92it/s][A
2025-02-24T16:09:32.4410111Z 
2025-02-24T16:09:32.4410367Z Packets:   ██████████████████████▉                                                         143454/500000 [00:04<00:10, 33304.85it/s][A
2025-02-24T16:09:32.4410382Z 
2025-02-24T16:09:32.4410649Z Packets:   ███████████████████████▌                                                        146907/500000 [00:04<00:10, 33661.58it/s][A
2025-02-24T16:09:32.4410654Z 
2025-02-24T16:09:32.4410910Z Packets:   ████████████████████████                                                        150408/500000 [00:04<00:10, 34055.78it/s][A
2025-02-24T16:09:32.4410925Z 
2025-02-24T16:09:32.4411176Z Packets:   ████████████████████████▋                                                       153926/500000 [00:04<00:10, 34385.73it/s][A
2025-02-24T16:09:32.4411182Z 
2025-02-24T16:09:32.4411439Z Packets:   █████████████████████████▏                                                      157391/500000 [00:04<00:09, 34460.53it/s][A
2025-02-24T16:09:32.4411444Z 
2025-02-24T16:09:32.4411705Z Packets:   █████████████████████████▋                                                      160876/500000 [00:04<00:09, 34572.18it/s][A
2025-02-24T16:09:32.4411721Z 
2025-02-24T16:09:32.4411977Z Packets:   ██████████████████████████▎                                                     164336/500000 [00:04<00:09, 34468.71it/s][A
2025-02-24T16:09:32.4411982Z 
2025-02-24T16:09:32.4412239Z Packets:   ██████████████████████████▊                                                     167806/500000 [00:04<00:09, 34536.85it/s][A
2025-02-24T16:09:32.4412397Z 
2025-02-24T16:09:32.4412665Z Packets:   ███████████████████████████▍                                                    171367/500000 [00:04<00:09, 34855.97it/s][A
2025-02-24T16:09:32.4412671Z 
2025-02-24T16:09:32.4412931Z Packets:   ███████████████████████████▉                                                    174864/500000 [00:05<00:09, 34887.61it/s][A
2025-02-24T16:09:32.4412935Z 
2025-02-24T16:09:32.4413200Z Packets:   ████████████████████████████▌                                                   178354/500000 [00:05<00:09, 33746.99it/s][A
2025-02-24T16:09:32.4413287Z 
2025-02-24T16:09:32.4413553Z Packets:   █████████████████████████████                                                   181809/500000 [00:05<00:09, 33981.36it/s][A
2025-02-24T16:09:32.4413558Z 
2025-02-24T16:09:32.4413816Z Packets:   █████████████████████████████▋                                                  185299/500000 [00:05<00:09, 34246.85it/s][A
2025-02-24T16:09:32.4413832Z 
2025-02-24T16:09:32.4414096Z Packets:   ██████████████████████████████▏                                                 188771/500000 [00:05<00:09, 34384.60it/s][A
2025-02-24T16:09:32.4414101Z 
2025-02-24T16:09:32.4414449Z Packets:   ██████████████████████████████▊                                                 192264/500000 [00:05<00:08, 34546.00it/s][A
2025-02-24T16:09:32.4414458Z 
2025-02-24T16:09:32.4414967Z Packets:   ███████████████████████████████▎                                                195722/500000 [00:05<00:08, 34331.86it/s][A
2025-02-24T16:09:32.4414993Z 
2025-02-24T16:09:32.4415490Z Packets:   ███████████████████████████████▊                                                199166/500000 [00:05<00:08, 34362.59it/s][A
2025-02-24T16:09:32.4415499Z 
2025-02-24T16:09:32.4415790Z Packets:   ████████████████████████████████▍                                               202604/500000 [00:05<00:08, 34194.66it/s][A
2025-02-24T16:09:32.4415796Z 
2025-02-24T16:09:32.4416071Z Packets:   ████████████████████████████████▉                                               206025/500000 [00:05<00:08, 34195.89it/s][A
2025-02-24T16:09:32.4416076Z 
2025-02-24T16:09:32.4416478Z Packets:   █████████████████████████████████▌                                              209446/500000 [00:06<00:08, 34143.02it/s][A
2025-02-24T16:09:32.4416484Z 
2025-02-24T16:09:32.4416759Z Packets:   ██████████████████████████████████                                              212861/500000 [00:06<00:08, 32978.55it/s][A
2025-02-24T16:09:32.4416764Z 
2025-02-24T16:09:32.4417033Z Packets:   ██████████████████████████████████▌                                             216307/500000 [00:06<00:08, 33407.41it/s][A
2025-02-24T16:09:32.4417050Z 
2025-02-24T16:09:32.4417319Z Packets:   ███████████████████████████████████▏                                            219741/500000 [00:06<00:08, 33679.18it/s][A
2025-02-24T16:09:32.4417323Z 
2025-02-24T16:09:32.4417592Z Packets:   ███████████████████████████████████▋                                            223115/500000 [00:06<00:08, 33693.15it/s][A
2025-02-24T16:09:32.4417757Z 
2025-02-24T16:09:32.4418036Z Packets:   ████████████████████████████████████▏                                           226553/500000 [00:06<00:08, 33895.41it/s][A
2025-02-24T16:09:32.4418042Z 
2025-02-24T16:09:32.4418319Z Packets:   ████████████████████████████████████▊                                           229946/500000 [00:06<00:07, 33816.95it/s][A
2025-02-24T16:09:32.4418324Z 
2025-02-24T16:09:32.4418594Z Packets:   █████████████████████████████████████▎                                          233406/500000 [00:06<00:07, 34047.18it/s][A
2025-02-24T16:09:32.4418713Z 
2025-02-24T16:09:32.4418988Z Packets:   █████████████████████████████████████▉                                          236825/500000 [00:06<00:07, 34085.95it/s][A
2025-02-24T16:09:32.4418993Z 
2025-02-24T16:09:32.4419266Z Packets:   ██████████████████████████████████████▍                                         240235/500000 [00:06<00:07, 33941.70it/s][A
2025-02-24T16:09:32.4419282Z 
2025-02-24T16:09:32.4419552Z Packets:   ██████████████████████████████████████▉                                         243631/500000 [00:07<00:07, 33943.33it/s][A
2025-02-24T16:09:32.4419562Z 
2025-02-24T16:09:32.4419832Z Packets:   ███████████████████████████████████████▌                                        247026/500000 [00:07<00:07, 32602.13it/s][A
2025-02-24T16:09:32.4419837Z 
2025-02-24T16:09:32.4420118Z Packets:   ████████████████████████████████████████                                        250499/500000 [00:07<00:07, 33219.74it/s][A
2025-02-24T16:09:32.4420135Z 
2025-02-24T16:09:32.4420415Z Packets:   ████████████████████████████████████████▌                                       253905/500000 [00:07<00:07, 33461.69it/s][A
2025-02-24T16:09:32.4420424Z 
2025-02-24T16:09:32.4420706Z Packets:   █████████████████████████████████████████▏                                      257259/500000 [00:07<00:07, 33462.91it/s][A
2025-02-24T16:09:32.4420722Z 
2025-02-24T16:09:32.4421004Z Packets:   █████████████████████████████████████████▋                                      260646/500000 [00:07<00:07, 33582.89it/s][A
2025-02-24T16:09:32.4421009Z 
2025-02-24T16:09:32.4421283Z Packets:   ██████████████████████████████████████████▎                                     264101/500000 [00:07<00:06, 33869.79it/s][A
2025-02-24T16:09:32.4421293Z 
2025-02-24T16:09:32.4421567Z Packets:   ██████████████████████████████████████████▊                                     267560/500000 [00:07<00:06, 34081.79it/s][A
2025-02-24T16:09:32.4421585Z 
2025-02-24T16:09:32.4421863Z Packets:   ███████████████████████████████████████████▎                                    271041/500000 [00:07<00:06, 34296.32it/s][A
2025-02-24T16:09:32.4421868Z 
2025-02-24T16:09:32.4422143Z Packets:   ███████████████████████████████████████████▉                                    274483/500000 [00:08<00:06, 34329.38it/s][A
2025-02-24T16:09:32.4422153Z 
2025-02-24T16:09:32.4422523Z Packets:   ████████████████████████████████████████████▍                                   277918/500000 [00:08<00:06, 34316.68it/s][A
2025-02-24T16:09:32.4422528Z 
2025-02-24T16:09:32.4422809Z Packets:   █████████████████████████████████████████████                                   281351/500000 [00:08<00:06, 33510.71it/s][A
2025-02-24T16:09:32.4422814Z 
2025-02-24T16:09:32.4423093Z Packets:   █████████████████████████████████████████████▌                                  284805/500000 [00:08<00:06, 33813.76it/s][A
2025-02-24T16:09:32.4423098Z 
2025-02-24T16:09:32.4423382Z Packets:   ██████████████████████████████████████████████▏                                 288286/500000 [00:08<00:06, 34107.50it/s][A
2025-02-24T16:09:32.4423468Z 
2025-02-24T16:09:32.4423754Z Packets:   ██████████████████████████████████████████████▋                                 291768/500000 [00:08<00:06, 34318.51it/s][A
2025-02-24T16:09:32.4423759Z 
2025-02-24T16:09:32.4424041Z Packets:   ███████████████████████████████████████████████▏                                295240/500000 [00:08<00:05, 34436.94it/s][A
2025-02-24T16:09:32.4424058Z 
2025-02-24T16:09:32.4424344Z Packets:   ███████████████████████████████████████████████▊                                298746/500000 [00:08<00:05, 34622.43it/s][A
2025-02-24T16:09:32.4424350Z 
2025-02-24T16:09:32.4424636Z Packets:   ████████████████████████████████████████████████▎                               302253/500000 [00:08<00:05, 34747.77it/s][A
2025-02-24T16:09:32.4424641Z 
2025-02-24T16:09:32.4424923Z Packets:   ████████████████████████████████████████████████▉                               305785/500000 [00:08<00:05, 34915.36it/s][A
2025-02-24T16:09:32.4424940Z 
2025-02-24T16:09:32.4425227Z Packets:   █████████████████████████████████████████████████▍                              309278/500000 [00:09<00:05, 34785.73it/s][A
2025-02-24T16:09:32.4425232Z 
2025-02-24T16:09:32.4425520Z Packets:   ██████████████████████████████████████████████████                              312758/500000 [00:09<00:05, 34756.08it/s][A
2025-02-24T16:09:32.4425538Z 
2025-02-24T16:09:32.4425822Z Packets:   ██████████████████████████████████████████████████▌                             316234/500000 [00:09<00:05, 34744.21it/s][A
2025-02-24T16:09:32.4425827Z 
2025-02-24T16:09:32.4426114Z Packets:   ███████████████████████████████████████████████████▏                            319709/500000 [00:09<00:05, 34103.54it/s][A
2025-02-24T16:09:32.4426119Z 
2025-02-24T16:09:32.4426716Z Packets:   ███████████████████████████████████████████████████▋                            323199/500000 [00:09<00:05, 34338.67it/s][A
2025-02-24T16:09:32.4426738Z 
2025-02-24T16:09:32.4427042Z Packets:   ████████████████████████████████████████████████████▎                           326659/500000 [00:09<00:05, 34414.97it/s][A
2025-02-24T16:09:32.4427047Z 
2025-02-24T16:09:32.4427341Z Packets:   ████████████████████████████████████████████████████▊                           330134/500000 [00:09<00:04, 34511.12it/s][A
2025-02-24T16:09:32.4427479Z 
2025-02-24T16:09:32.4427776Z Packets:   █████████████████████████████████████████████████████▍                          333645/500000 [00:09<00:04, 34687.14it/s][A
2025-02-24T16:09:32.4427781Z 
2025-02-24T16:09:32.4428067Z Packets:   █████████████████████████████████████████████████████▉                          337117/500000 [00:09<00:04, 34696.72it/s][A
2025-02-24T16:09:32.4428072Z 
2025-02-24T16:09:32.4428361Z Packets:   ██████████████████████████████████████████████████████▍                         340623/500000 [00:09<00:04, 34805.33it/s][A
2025-02-24T16:09:32.4428479Z 
2025-02-24T16:09:32.4428771Z Packets:   ███████████████████████████████████████████████████████                         344109/500000 [00:10<00:04, 34821.69it/s][A
2025-02-24T16:09:32.4428777Z 
2025-02-24T16:09:32.4429063Z Packets:   ███████████████████████████████████████████████████████▌                        347592/500000 [00:10<00:04, 34712.08it/s][A
2025-02-24T16:09:32.4429068Z 
2025-02-24T16:09:32.4429374Z Packets:   ████████████████████████████████████████████████████████▏                       351064/500000 [00:10<00:04, 34673.89it/s][A
2025-02-24T16:09:32.4429379Z 
2025-02-24T16:09:32.4429671Z Packets:   ████████████████████████████████████████████████████████▋                       354532/500000 [00:10<00:04, 33066.71it/s][A
2025-02-24T16:09:32.4429676Z 
2025-02-24T16:09:32.4429964Z Packets:   █████████████████████████████████████████████████████████▎                      357972/500000 [00:10<00:04, 33449.37it/s][A
2025-02-24T16:09:32.4429969Z 
2025-02-24T16:09:32.4430261Z Packets:   █████████████████████████████████████████████████████████▊                      361466/500000 [00:10<00:04, 33881.28it/s][A
2025-02-24T16:09:32.4430279Z 
2025-02-24T16:09:32.4430575Z Packets:   ██████████████████████████████████████████████████████████▍                     364918/500000 [00:10<00:03, 34064.86it/s][A
2025-02-24T16:09:32.4430580Z 
2025-02-24T16:09:32.4430869Z Packets:   ██████████████████████████████████████████████████████████▉                     368377/500000 [00:10<00:03, 34218.54it/s][A
2025-02-24T16:09:32.4430980Z 
2025-02-24T16:09:32.4431280Z Packets:   ███████████████████████████████████████████████████████████▌                    371896/500000 [00:10<00:03, 34505.80it/s][A
2025-02-24T16:09:32.4431285Z 
2025-02-24T16:09:32.4431580Z Packets:   ████████████████████████████████████████████████████████████                    375355/500000 [00:10<00:03, 34527.01it/s][A
2025-02-24T16:09:32.4431585Z 
2025-02-24T16:09:32.4431876Z Packets:   ████████████████████████████████████████████████████████████▌                   378811/500000 [00:11<00:03, 34385.80it/s][A
2025-02-24T16:09:32.4431964Z 
2025-02-24T16:09:32.4432265Z Packets:   █████████████████████████████████████████████████████████████▏                  382252/500000 [00:11<00:03, 34291.65it/s][A
2025-02-24T16:09:32.4432271Z 
2025-02-24T16:09:32.4432569Z Packets:   █████████████████████████████████████████████████████████████▋                  385683/500000 [00:11<00:03, 34220.18it/s][A
2025-02-24T16:09:32.4432588Z 
2025-02-24T16:09:32.4432881Z Packets:   ██████████████████████████████████████████████████████████████▎                 389106/500000 [00:11<00:03, 33065.98it/s][A
2025-02-24T16:09:32.4432886Z 
2025-02-24T16:09:32.4433186Z Packets:   ██████████████████████████████████████████████████████████████▊                 392576/500000 [00:11<00:03, 33539.70it/s][A
2025-02-24T16:09:32.4433190Z 
2025-02-24T16:09:32.4433491Z Packets:   ███████████████████████████████████████████████████████████████▎                396043/500000 [00:11<00:03, 33870.65it/s][A
2025-02-24T16:09:32.4433511Z 
2025-02-24T16:09:32.4433807Z Packets:   ███████████████████████████████████████████████████████████████▉                399510/500000 [00:11<00:02, 34106.74it/s][A
2025-02-24T16:09:32.4433812Z 
2025-02-24T16:09:32.4434114Z Packets:   ████████████████████████████████████████████████████████████████▍               402926/500000 [00:11<00:02, 33570.69it/s][A
2025-02-24T16:09:32.4434133Z 
2025-02-24T16:09:32.4434428Z Packets:   █████████████████████████████████████████████████████████████████               406413/500000 [00:11<00:02, 33950.11it/s][A
2025-02-24T16:09:32.4434438Z 
2025-02-24T16:09:32.4434735Z Packets:   █████████████████████████████████████████████████████████████████▌              409880/500000 [00:11<00:02, 34162.81it/s][A
2025-02-24T16:09:32.4434741Z 
2025-02-24T16:09:32.4435043Z Packets:   ██████████████████████████████████████████████████████████████████▏             413300/500000 [00:12<00:02, 34154.68it/s][A
2025-02-24T16:09:32.4435063Z 
2025-02-24T16:09:32.4435360Z Packets:   ██████████████████████████████████████████████████████████████████▋             416741/500000 [00:12<00:02, 34230.23it/s][A
2025-02-24T16:09:32.4435369Z 
2025-02-24T16:09:32.4435668Z Packets:   ███████████████████████████████████████████████████████████████████▏            420235/500000 [00:12<00:02, 34439.73it/s][A
2025-02-24T16:09:32.4435673Z 
2025-02-24T16:09:32.4436067Z Packets:   ███████████████████████████████████████████████████████████████████▊            423681/500000 [00:12<00:02, 33271.20it/s][A
2025-02-24T16:09:32.4436073Z 
2025-02-24T16:09:32.4436498Z Packets:   ████████████████████████████████████████████████████████████████████▎           427143/500000 [00:12<00:02, 33664.11it/s][A
2025-02-24T16:09:32.4436509Z 
2025-02-24T16:09:32.4436814Z Packets:   ████████████████████████████████████████████████████████████████████▉           430588/500000 [00:12<00:02, 33895.10it/s][A
2025-02-24T16:09:32.4436819Z 
2025-02-24T16:09:32.4437127Z Packets:   █████████████████████████████████████████████████████████████████████▍          434102/500000 [00:12<00:01, 34262.48it/s][A
2025-02-24T16:09:32.4437257Z 
2025-02-24T16:09:32.4437562Z Packets:   ██████████████████████████████████████████████████████████████████████          437564/500000 [00:12<00:01, 34368.48it/s][A
2025-02-24T16:09:32.4437572Z 
2025-02-24T16:09:32.4437874Z Packets:   ██████████████████████████████████████████████████████████████████████▌         441046/500000 [00:12<00:01, 34502.60it/s][A
2025-02-24T16:09:32.4437894Z 
2025-02-24T16:09:32.4438202Z Packets:   ███████████████████████████████████████████████████████████████████████         444499/500000 [00:12<00:01, 34436.18it/s][A
2025-02-24T16:09:32.4438207Z 
2025-02-24T16:09:32.4438519Z Packets:   ███████████████████████████████████████████████████████████████████████▋        447945/500000 [00:13<00:01, 34362.21it/s][A
2025-02-24T16:09:32.4438529Z 
2025-02-24T16:09:32.4438838Z Packets:   ████████████████████████████████████████████████████████████████████████▏       451402/500000 [00:13<00:01, 34423.27it/s][A
2025-02-24T16:09:32.4438859Z 
2025-02-24T16:09:32.4439168Z Packets:   ████████████████████████████████████████████████████████████████████████▊       454913/500000 [00:13<00:01, 34627.25it/s][A
2025-02-24T16:09:32.4439173Z 
2025-02-24T16:09:32.4439478Z Packets:   █████████████████████████████████████████████████████████████████████████▎      458377/500000 [00:13<00:01, 32135.79it/s][A
2025-02-24T16:09:32.4439636Z 
2025-02-24T16:09:32.4440250Z Packets:   █████████████████████████████████████████████████████████████████████████▉      461725/500000 [00:13<00:01, 32515.73it/s][A
2025-02-24T16:09:32.4440261Z 
2025-02-24T16:09:32.4440829Z Packets:   ██████████████████████████████████████████████████████████████████████████▍     465183/500000 [00:13<00:01, 33110.56it/s][A
2025-02-24T16:09:32.4440835Z 
2025-02-24T16:09:32.4441148Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     468654/500000 [00:13<00:00, 33576.56it/s][A
2025-02-24T16:09:32.4441255Z 
2025-02-24T16:09:32.4441574Z Packets:   ███████████████████████████████████████████████████████████████████████████▌    472128/500000 [00:13<00:00, 33918.74it/s][A
2025-02-24T16:09:32.4441580Z 
2025-02-24T16:09:32.4441893Z Packets:   ████████████████████████████████████████████████████████████████████████████    475581/500000 [00:13<00:00, 34099.24it/s][A
2025-02-24T16:09:32.4441914Z 
2025-02-24T16:09:32.4442224Z Packets:   ████████████████████████████████████████████████████████████████████████████▋   479044/500000 [00:13<00:00, 34255.55it/s][A
2025-02-24T16:09:32.4442229Z 
2025-02-24T16:09:32.4442546Z Packets:   █████████████████████████████████████████████████████████████████████████████▏  482553/500000 [00:14<00:00, 34501.88it/s][A
2025-02-24T16:09:32.4442551Z 
2025-02-24T16:09:32.4442868Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  486008/500000 [00:14<00:00, 34422.92it/s][A
2025-02-24T16:09:32.4442889Z 
2025-02-24T16:09:32.4443203Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 489475/500000 [00:14<00:00, 34496.23it/s][A
2025-02-24T16:09:32.4443209Z 
2025-02-24T16:09:32.4443521Z Packets:   ██████████████████████████████████████████████████████████████████████████████▊ 492927/500000 [00:14<00:00, 33346.84it/s][A
2025-02-24T16:09:32.4443527Z 
2025-02-24T16:09:32.4443942Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496401/500000 [00:14<00:00, 33749.39it/s][A
2025-02-24T16:09:32.4443947Z 
2025-02-24T16:09:32.4444260Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉499845/500000 [00:14<00:00, 33952.16it/s][A
2025-02-24T16:09:32.4444418Z Iterations:                                                                                17/? [06:18<00:00,  9.39s/it]
2025-02-24T16:09:32.4444424Z 
2025-02-24T16:09:32.4444746Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:15<00:00, 33952.16it/s][A
2025-02-24T16:09:32.4445033Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4445202Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T16:09:32.4445557Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T16:09:32.4445963Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T16:09:32.4446534Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T16:09:32.4447047Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4447287Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4447401Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4447492Z 	Starting iteration 1 of 5
2025-02-24T16:09:32.4447603Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4447695Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T16:09:32.4447788Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T16:09:32.4447881Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4447886Z 
2025-02-24T16:09:32.4447994Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4448109Z 	Plasma stratification:
2025-02-24T16:09:32.4448215Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4448326Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T16:09:32.4448410Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T16:09:32.4448492Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T16:09:32.4448575Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T16:09:32.4448662Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T16:09:32.4448666Z 
2025-02-24T16:09:32.4448773Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4448857Z 	Current t_inner = 9974.969 K
2025-02-24T16:09:32.4448981Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T16:09:32.4448986Z 
2025-02-24T16:09:32.4449096Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4449188Z 	Starting iteration 2 of 5
2025-02-24T16:09:32.4449299Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4449389Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T16:09:32.4449483Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T16:09:32.4449572Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4449576Z 
2025-02-24T16:09:32.4449683Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4449767Z 	Plasma stratification:
2025-02-24T16:09:32.4449875Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4449989Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4450075Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T16:09:32.4450162Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T16:09:32.4450244Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T16:09:32.4450331Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T16:09:32.4450459Z 
2025-02-24T16:09:32.4450564Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4450654Z 	Current t_inner = 10736.790 K
2025-02-24T16:09:32.4450772Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T16:09:32.4450777Z 
2025-02-24T16:09:32.4450878Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4450966Z 	Starting iteration 3 of 5
2025-02-24T16:09:32.4451066Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4451160Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T16:09:32.4451251Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T16:09:32.4451445Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4451449Z 
2025-02-24T16:09:32.4451673Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T16:09:32.4451781Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4451869Z 	Plasma stratification:
2025-02-24T16:09:32.4451972Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4452084Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4452170Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T16:09:32.4452249Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T16:09:32.4452336Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T16:09:32.4452418Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T16:09:32.4452423Z 
2025-02-24T16:09:32.4452529Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4452618Z 	Current t_inner = 10718.574 K
2025-02-24T16:09:32.4452733Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T16:09:32.4452741Z 
2025-02-24T16:09:32.4452849Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4452932Z 	Starting iteration 4 of 5
2025-02-24T16:09:32.4453037Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4453128Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T16:09:32.4453223Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T16:09:32.4453322Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4453326Z 
2025-02-24T16:09:32.4453541Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T16:09:32.4453650Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T16:09:32.4453733Z 	Plasma stratification:
2025-02-24T16:09:32.4453843Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T16:09:32.4453946Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T16:09:32.4454033Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T16:09:32.4454119Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T16:09:32.4454202Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T16:09:32.4454289Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T16:09:32.4454293Z 
2025-02-24T16:09:32.4454394Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T16:09:32.4454480Z 	Current t_inner = 10696.150 K
2025-02-24T16:09:32.4454599Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T16:09:32.4454607Z 
2025-02-24T16:09:32.4454713Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4454817Z 	Simulation finished in 4 iterations 
2025-02-24T16:09:32.4454900Z 	Simulation took 12.74 s
2025-02-24T16:09:32.4454904Z 
2025-02-24T16:09:32.4455014Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4455098Z 	Starting iteration 5 of 5
2025-02-24T16:09:32.4455202Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4455293Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T16:09:32.4455382Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T16:09:32.4455474Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4455650Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T16:09:32.4455655Z 
2025-02-24T16:09:32.4455874Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f0600736330>
2025-02-24T16:09:32.4456076Z simulation = <tardis.simulation.base.Simulation object at 0x7f05eef1b8c0>
2025-02-24T16:09:32.4456175Z 
2025-02-24T16:09:32.4456373Z     def test_spectrum(self, simulation):
2025-02-24T16:09:32.4456555Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T16:09:32.4456655Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4456726Z     
2025-02-24T16:09:32.4456837Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4456906Z     
2025-02-24T16:09:32.4456997Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4457167Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T16:09:32.4457355Z             luminosity,
2025-02-24T16:09:32.4457422Z         )
2025-02-24T16:09:32.4457426Z 
2025-02-24T16:09:32.4457524Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T16:09:32.4457715Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4458307Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4458474Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4458666Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4458673Z 
2025-02-24T16:09:32.4459205Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff607560>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T16:09:32.4459321Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4459572Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4459582Z 
2025-02-24T16:09:32.4459659Z     @wraps(func)
2025-02-24T16:09:32.4459742Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4459831Z         with self._recreate_cm():
2025-02-24T16:09:32.4459922Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4460008Z E           AssertionError: 
2025-02-24T16:09:32.4460127Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4460200Z E           
2025-02-24T16:09:32.4460306Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:09:32.4460410Z E           Max absolute difference: 1.38672909e+39
2025-02-24T16:09:32.4460512Z E           Max relative difference: 5.25284451
2025-02-24T16:09:32.4460674Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4460759Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4460911Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4460994Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4460999Z 
2025-02-24T16:09:32.4461212Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4461399Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T16:09:32.4461409Z 
2025-02-24T16:09:32.4461623Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f0600736570>
2025-02-24T16:09:32.4461827Z simulation = <tardis.simulation.base.Simulation object at 0x7f05eef1b8c0>
2025-02-24T16:09:32.4461832Z 
2025-02-24T16:09:32.4461943Z     def test_virtual_spectrum(self, simulation):
2025-02-24T16:09:32.4462124Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T16:09:32.4462231Z         expected = self.get_expected_data(key)
2025-02-24T16:09:32.4462296Z     
2025-02-24T16:09:32.4462407Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4462479Z     
2025-02-24T16:09:32.4462566Z >       assert_quantity_allclose(
2025-02-24T16:09:32.4462745Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T16:09:32.4462821Z             luminosity,
2025-02-24T16:09:32.4462891Z         )
2025-02-24T16:09:32.4462896Z 
2025-02-24T16:09:32.4462990Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T16:09:32.4463230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4463574Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4463662Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4463778Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4463783Z 
2025-02-24T16:09:32.4464257Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff0a8c20>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T16:09:32.4464460Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4464714Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4464718Z 
2025-02-24T16:09:32.4464789Z     @wraps(func)
2025-02-24T16:09:32.4464876Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4464964Z         with self._recreate_cm():
2025-02-24T16:09:32.4465054Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4465140Z E           AssertionError: 
2025-02-24T16:09:32.4465252Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4465343Z E           
2025-02-24T16:09:32.4465444Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:09:32.4465546Z E           Max absolute difference: 5.26760031e+38
2025-02-24T16:09:32.4465643Z E           Max relative difference: 35562.41947434
2025-02-24T16:09:32.4465805Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4465910Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4466728Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4466821Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4466826Z 
2025-02-24T16:09:32.4467028Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4467286Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T16:09:32.4467291Z 
2025-02-24T16:09:32.4467626Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600736fc0>
2025-02-24T16:09:32.4467823Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ebf4ce00>
2025-02-24T16:09:32.4468027Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T16:09:32.4468031Z 
2025-02-24T16:09:32.4468162Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4468277Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4468363Z         j_blue_estimator = (
2025-02-24T16:09:32.4468586Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4468660Z         )
2025-02-24T16:09:32.4468807Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4468936Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4468941Z 
2025-02-24T16:09:32.4469073Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4469185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4469189Z 
2025-02-24T16:09:32.4469462Z args = (<function assert_allclose.<locals>.compare at 0x7f05f853e2a0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4469534Z        [0., 0., .....,
2025-02-24T16:09:32.4469624Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4469705Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4469787Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4470029Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4470034Z 
2025-02-24T16:09:32.4470110Z     @wraps(func)
2025-02-24T16:09:32.4470193Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4470465Z         with self._recreate_cm():
2025-02-24T16:09:32.4470556Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4470640Z E           AssertionError: 
2025-02-24T16:09:32.4470752Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4470820Z E           
2025-02-24T16:09:32.4470935Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.4471037Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.4471137Z E           Max relative difference: 7.72237896
2025-02-24T16:09:32.4471230Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471442Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471533Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4471618Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471703Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4471788Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4471796Z 
2025-02-24T16:09:32.4472001Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4472226Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T16:09:32.4472230Z 
2025-02-24T16:09:32.4472560Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737650>
2025-02-24T16:09:32.4472759Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ebf4ce00>
2025-02-24T16:09:32.4472942Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T16:09:32.4472949Z 
2025-02-24T16:09:32.4473058Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4473163Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4473360Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4473526Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4473636Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4473757Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4473761Z 
2025-02-24T16:09:32.4473897Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4474008Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4474357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4474452Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4474564Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4474568Z 
2025-02-24T16:09:32.4475049Z args = (<function assert_allclose.<locals>.compare at 0x7f05fe538fe0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:09:32.4475152Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4475404Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4475409Z 
2025-02-24T16:09:32.4475484Z     @wraps(func)
2025-02-24T16:09:32.4475568Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4475658Z         with self._recreate_cm():
2025-02-24T16:09:32.4475746Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4475881Z E           AssertionError: 
2025-02-24T16:09:32.4476065Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4476197Z E           
2025-02-24T16:09:32.4476515Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.4476688Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.4476857Z E           Max relative difference: 4.0036592
2025-02-24T16:09:32.4477114Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4477272Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4477557Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4477642Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4477646Z 
2025-02-24T16:09:32.4477853Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4478086Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T16:09:32.4478090Z 
2025-02-24T16:09:32.4478419Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c320>
2025-02-24T16:09:32.4478723Z simulation = <tardis.simulation.base.Simulation object at 0x7f05ebf4ce00>
2025-02-24T16:09:32.4478933Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T16:09:32.4478938Z 
2025-02-24T16:09:32.4479082Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4479188Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4479388Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4479552Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4479651Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4479773Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4479778Z 
2025-02-24T16:09:32.4479910Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4480026Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4480370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4480468Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4480581Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4480585Z 
2025-02-24T16:09:32.4481062Z args = (<function assert_allclose.<locals>.compare at 0x7f05d34428e0>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T16:09:32.4481177Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T16:09:32.4481434Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4481439Z 
2025-02-24T16:09:32.4481511Z     @wraps(func)
2025-02-24T16:09:32.4481599Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4481685Z         with self._recreate_cm():
2025-02-24T16:09:32.4481782Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4481865Z E           AssertionError: 
2025-02-24T16:09:32.4481979Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4482056Z E           
2025-02-24T16:09:32.4482156Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4482264Z E           Max absolute difference: 5.00661745e+37
2025-02-24T16:09:32.4482370Z E           Max relative difference: 17.51202125
2025-02-24T16:09:32.4482530Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:09:32.4482616Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T16:09:32.4482764Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:09:32.4482854Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T16:09:32.4482858Z 
2025-02-24T16:09:32.4483070Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4483241Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4483246Z 
2025-02-24T16:09:32.4483249Z 
2025-02-24T16:09:32.4483632Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:10<00:00, 111787.24it/s][A
2025-02-24T16:09:32.4483863Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T16:09:32.4483957Z 
2025-02-24T16:09:32.4484291Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737800>
2025-02-24T16:09:32.4484488Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f158e090>
2025-02-24T16:09:32.4484695Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T16:09:32.4484699Z 
2025-02-24T16:09:32.4484831Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4484939Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4485102Z         j_blue_estimator = (
2025-02-24T16:09:32.4485318Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4485389Z         )
2025-02-24T16:09:32.4485534Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4485662Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4485669Z 
2025-02-24T16:09:32.4485804Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4485914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4485918Z 
2025-02-24T16:09:32.4486193Z args = (<function assert_allclose.<locals>.compare at 0x7f05f800c860>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4486388Z        [0., 0., .....,
2025-02-24T16:09:32.4486473Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4486552Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4486629Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4486881Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4486886Z 
2025-02-24T16:09:32.4486958Z     @wraps(func)
2025-02-24T16:09:32.4487044Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4487136Z         with self._recreate_cm():
2025-02-24T16:09:32.4487222Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4487315Z E           AssertionError: 
2025-02-24T16:09:32.4487420Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4487491Z E           
2025-02-24T16:09:32.4487599Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.4487703Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.4487803Z E           Max relative difference: 3.25828651
2025-02-24T16:09:32.4487893Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4487981Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4488070Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4488161Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4488243Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4488330Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4488334Z 
2025-02-24T16:09:32.4488541Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4488766Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T16:09:32.4488771Z 
2025-02-24T16:09:32.4489110Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737f50>
2025-02-24T16:09:32.4489308Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f158e090>
2025-02-24T16:09:32.4489487Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T16:09:32.4489492Z 
2025-02-24T16:09:32.4489604Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4489712Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4489910Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4490067Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4490172Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4490293Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4490416Z 
2025-02-24T16:09:32.4490548Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4490660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4490996Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4491091Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4491203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4491306Z 
2025-02-24T16:09:32.4491781Z args = (<function assert_allclose.<locals>.compare at 0x7f05d76565c0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:09:32.4491888Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4492132Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4492144Z 
2025-02-24T16:09:32.4492216Z     @wraps(func)
2025-02-24T16:09:32.4492302Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4492386Z         with self._recreate_cm():
2025-02-24T16:09:32.4492478Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4492561Z E           AssertionError: 
2025-02-24T16:09:32.4492669Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4492742Z E           
2025-02-24T16:09:32.4492841Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.4492949Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.4493044Z E           Max relative difference: 1.86186015
2025-02-24T16:09:32.4493200Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4493283Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4493434Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4493523Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4493527Z 
2025-02-24T16:09:32.4493726Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4493961Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T16:09:32.4493966Z 
2025-02-24T16:09:32.4494290Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c4d0>
2025-02-24T16:09:32.4494490Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f158e090>
2025-02-24T16:09:32.4494697Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T16:09:32.4494702Z 
2025-02-24T16:09:32.4494841Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4494950Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4495142Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4495308Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4495412Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4495530Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4495535Z 
2025-02-24T16:09:32.4495670Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4495777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4496117Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4496214Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4496419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4496424Z 
2025-02-24T16:09:32.4496892Z args = (<function assert_allclose.<locals>.compare at 0x7f05d237b600>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T16:09:32.4497128Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T16:09:32.4497376Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4497381Z 
2025-02-24T16:09:32.4497454Z     @wraps(func)
2025-02-24T16:09:32.4497536Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4497624Z         with self._recreate_cm():
2025-02-24T16:09:32.4497709Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4497795Z E           AssertionError: 
2025-02-24T16:09:32.4497998Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4498070Z E           
2025-02-24T16:09:32.4498169Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4498269Z E           Max absolute difference: 2.90101642e+37
2025-02-24T16:09:32.4498364Z E           Max relative difference: 0.98973757
2025-02-24T16:09:32.4498510Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:09:32.4498598Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T16:09:32.4498742Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:09:32.4498823Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T16:09:32.4498827Z 
2025-02-24T16:09:32.4499026Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4499256Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T16:09:32.4499260Z 
2025-02-24T16:09:32.4499592Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f0600737b00>
2025-02-24T16:09:32.4499792Z simulation = <tardis.simulation.base.Simulation object at 0x7f05d13fbaa0>
2025-02-24T16:09:32.4499991Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T16:09:32.4499996Z 
2025-02-24T16:09:32.4500132Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4500243Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4500328Z         j_blue_estimator = (
2025-02-24T16:09:32.4500551Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4500624Z         )
2025-02-24T16:09:32.4500774Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4500893Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4500898Z 
2025-02-24T16:09:32.4501042Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4501254Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4501270Z 
2025-02-24T16:09:32.4501729Z args = (<function assert_allclose.<locals>.compare at 0x7f05fe6b1b20>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4501856Z        [0., 0., .....,
2025-02-24T16:09:32.4501988Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4502127Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4502257Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4502504Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4502509Z 
2025-02-24T16:09:32.4502584Z     @wraps(func)
2025-02-24T16:09:32.4502665Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4502754Z         with self._recreate_cm():
2025-02-24T16:09:32.4502842Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4502928Z E           AssertionError: 
2025-02-24T16:09:32.4503040Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4503117Z E           
2025-02-24T16:09:32.4503228Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.4503329Z E           Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.4503428Z E           Max relative difference: 3.25828651
2025-02-24T16:09:32.4503518Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4503698Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4503785Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4503877Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4503964Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4504047Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4504052Z 
2025-02-24T16:09:32.4504260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4504555Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T16:09:32.4504564Z 
2025-02-24T16:09:32.4504889Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c0e0>
2025-02-24T16:09:32.4505089Z simulation = <tardis.simulation.base.Simulation object at 0x7f05d13fbaa0>
2025-02-24T16:09:32.4505261Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T16:09:32.4505268Z 
2025-02-24T16:09:32.4505381Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4505485Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4505684Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4505845Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4505945Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4506068Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4506077Z 
2025-02-24T16:09:32.4506211Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4506528Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4506884Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4506975Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4507092Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4507097Z 
2025-02-24T16:09:32.4507568Z args = (<function assert_allclose.<locals>.compare at 0x7f05e8cb8d60>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T16:09:32.4507674Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4507922Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4507930Z 
2025-02-24T16:09:32.4508001Z     @wraps(func)
2025-02-24T16:09:32.4508092Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4508177Z         with self._recreate_cm():
2025-02-24T16:09:32.4508272Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4508361Z E           AssertionError: 
2025-02-24T16:09:32.4508474Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4508551Z E           
2025-02-24T16:09:32.4508653Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.4508758Z E           Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.4508856Z E           Max relative difference: 1.86186015
2025-02-24T16:09:32.4509013Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4509102Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4509250Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4509336Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4509344Z 
2025-02-24T16:09:32.4509547Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4509789Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T16:09:32.4509794Z 
2025-02-24T16:09:32.4510125Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c6e0>
2025-02-24T16:09:32.4510447Z simulation = <tardis.simulation.base.Simulation object at 0x7f05d13fbaa0>
2025-02-24T16:09:32.4510657Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T16:09:32.4510661Z 
2025-02-24T16:09:32.4510800Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4510912Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4511109Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4511271Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4511480Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4511601Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4511606Z 
2025-02-24T16:09:32.4511743Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4511858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4512200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4512295Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4512403Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4512409Z 
2025-02-24T16:09:32.4512886Z args = (<function assert_allclose.<locals>.compare at 0x7f05d2c9cc20>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T16:09:32.4512998Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T16:09:32.4513247Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4513251Z 
2025-02-24T16:09:32.4513329Z     @wraps(func)
2025-02-24T16:09:32.4513414Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4513504Z         with self._recreate_cm():
2025-02-24T16:09:32.4513603Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4513686Z E           AssertionError: 
2025-02-24T16:09:32.4513800Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4513871Z E           
2025-02-24T16:09:32.4513975Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4514079Z E           Max absolute difference: 2.99183385e+37
2025-02-24T16:09:32.4514181Z E           Max relative difference: 0.98992197
2025-02-24T16:09:32.4514336Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:09:32.4514423Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T16:09:32.4514571Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:09:32.4514653Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T16:09:32.4514657Z 
2025-02-24T16:09:32.4514866Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4515106Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T16:09:32.4515115Z 
2025-02-24T16:09:32.4515445Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f06007379e0>
2025-02-24T16:09:32.4515648Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f8756300>
2025-02-24T16:09:32.4515850Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T16:09:32.4515854Z 
2025-02-24T16:09:32.4515992Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T16:09:32.4516105Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4516187Z         j_blue_estimator = (
2025-02-24T16:09:32.4516511Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T16:09:32.4516579Z         )
2025-02-24T16:09:32.4516731Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T16:09:32.4516851Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T16:09:32.4516969Z 
2025-02-24T16:09:32.4517104Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T16:09:32.4517220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4517224Z 
2025-02-24T16:09:32.4517493Z args = (<function assert_allclose.<locals>.compare at 0x7f05d7a16fc0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4517568Z        [0., 0., .....,
2025-02-24T16:09:32.4517646Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4517727Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4517908Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T16:09:32.4518150Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4518155Z 
2025-02-24T16:09:32.4518231Z     @wraps(func)
2025-02-24T16:09:32.4518313Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4518402Z         with self._recreate_cm():
2025-02-24T16:09:32.4518491Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4518580Z E           AssertionError: 
2025-02-24T16:09:32.4518689Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4518756Z E           
2025-02-24T16:09:32.4518867Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.4518971Z E           Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.4519072Z E           Max relative difference: 7.72237896
2025-02-24T16:09:32.4519160Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519327Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519485Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4519638Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519786Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.4519928Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.4519934Z 
2025-02-24T16:09:32.4520284Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4520569Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T16:09:32.4520574Z 
2025-02-24T16:09:32.4520898Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076da00>
2025-02-24T16:09:32.4521094Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f8756300>
2025-02-24T16:09:32.4521272Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T16:09:32.4521284Z 
2025-02-24T16:09:32.4521392Z     def test_spectrum(self, simulation, request):
2025-02-24T16:09:32.4521500Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4521697Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T16:09:32.4521862Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4521963Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4522086Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4522090Z 
2025-02-24T16:09:32.4522222Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T16:09:32.4522330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4522674Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4522763Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4522877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4522884Z 
2025-02-24T16:09:32.4523364Z args = (<function assert_allclose.<locals>.compare at 0x7f05d6f9ccc0>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T16:09:32.4523472Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4523831Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4523836Z 
2025-02-24T16:09:32.4523908Z     @wraps(func)
2025-02-24T16:09:32.4523995Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4524081Z         with self._recreate_cm():
2025-02-24T16:09:32.4524166Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4524252Z E           AssertionError: 
2025-02-24T16:09:32.4524354Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4524427Z E           
2025-02-24T16:09:32.4524525Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.4524705Z E           Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.4524807Z E           Max relative difference: 4.0036592
2025-02-24T16:09:32.4524958Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4525047Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4525195Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.4525282Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4525287Z 
2025-02-24T16:09:32.4525489Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4525720Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T16:09:32.4525725Z 
2025-02-24T16:09:32.4526052Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f060076c620>
2025-02-24T16:09:32.4526249Z simulation = <tardis.simulation.base.Simulation object at 0x7f05f8756300>
2025-02-24T16:09:32.4526568Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T16:09:32.4526574Z 
2025-02-24T16:09:32.4526717Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T16:09:32.4526823Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4527022Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T16:09:32.4527182Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T16:09:32.4527289Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T16:09:32.4527410Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T16:09:32.4527414Z 
2025-02-24T16:09:32.4527541Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T16:09:32.4527652Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4527983Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T16:09:32.4528079Z     np.testing.assert_allclose(
2025-02-24T16:09:32.4528185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4528192Z 
2025-02-24T16:09:32.4528662Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff0a8f40>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T16:09:32.4528767Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T16:09:32.4529007Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4529012Z 
2025-02-24T16:09:32.4529089Z     @wraps(func)
2025-02-24T16:09:32.4529172Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4529258Z         with self._recreate_cm():
2025-02-24T16:09:32.4529352Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4529437Z E           AssertionError: 
2025-02-24T16:09:32.4529546Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4529616Z E           
2025-02-24T16:09:32.4529719Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.4529822Z E           Max absolute difference: 5.0153284e+37
2025-02-24T16:09:32.4529918Z E           Max relative difference: 4.90769503
2025-02-24T16:09:32.4530189Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:09:32.4530273Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T16:09:32.4530418Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:09:32.4530498Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T16:09:32.4530507Z 
2025-02-24T16:09:32.4530704Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4530861Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T16:09:32.4530985Z 
2025-02-24T16:09:32.4531686Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:09:32.4531968Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f0600651220>
2025-02-24T16:09:32.4532329Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:09:32.4532335Z 
2025-02-24T16:09:32.4532425Z     def test_montecarlo_main_loop(
2025-02-24T16:09:32.4532519Z         montecarlo_main_loop_config,
2025-02-24T16:09:32.4532598Z         regression_data,
2025-02-24T16:09:32.4532678Z         atomic_dataset,
2025-02-24T16:09:32.4532746Z     ):
2025-02-24T16:09:32.4532852Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:09:32.4533009Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:09:32.4533101Z             montecarlo_main_loop_config,
2025-02-24T16:09:32.4533194Z             atom_data=atomic_dataset,
2025-02-24T16:09:32.4533285Z             virtual_packet_logging=False,
2025-02-24T16:09:32.4533375Z             legacy_mode_enabled=True,
2025-02-24T16:09:32.4533447Z         )
2025-02-24T16:09:32.4533579Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:09:32.4533689Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:09:32.4533754Z     
2025-02-24T16:09:32.4533887Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:09:32.4533980Z             montecarlo_main_loop_simulation
2025-02-24T16:09:32.4534051Z         )
2025-02-24T16:09:32.4534122Z     
2025-02-24T16:09:32.4534211Z         # Load compare data from refdata
2025-02-24T16:09:32.4534281Z     
2025-02-24T16:09:32.4534372Z         expected_nu = expected_hdf_store[
2025-02-24T16:09:32.4534503Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:09:32.4534569Z         ]
2025-02-24T16:09:32.4534671Z         expected_energy = expected_hdf_store[
2025-02-24T16:09:32.4534804Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:09:32.4534875Z         ]
2025-02-24T16:09:32.4535000Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:09:32.4535145Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:09:32.4535216Z         ]
2025-02-24T16:09:32.4535321Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:09:32.4535453Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:09:32.4535522Z         ]
2025-02-24T16:09:32.4535610Z         expected_hdf_store.close()
2025-02-24T16:09:32.4535817Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T16:09:32.4535987Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:09:32.4536134Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:09:32.4536222Z         actual_nu_bar_estimator = (
2025-02-24T16:09:32.4536478Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:09:32.4536551Z         )
2025-02-24T16:09:32.4536745Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:09:32.4536933Z     
2025-02-24T16:09:32.4537006Z         # Compare
2025-02-24T16:09:32.4537092Z >       npt.assert_allclose(
2025-02-24T16:09:32.4537252Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T16:09:32.4537325Z         )
2025-02-24T16:09:32.4537329Z 
2025-02-24T16:09:32.4537516Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T16:09:32.4537628Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4537633Z 
2025-02-24T16:09:32.4538080Z args = (<function assert_allclose.<locals>.compare at 0x7f05cd4428e0>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T16:09:32.4538323Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T16:09:32.4538578Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T16:09:32.4538586Z 
2025-02-24T16:09:32.4538664Z     @wraps(func)
2025-02-24T16:09:32.4538746Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4538836Z         with self._recreate_cm():
2025-02-24T16:09:32.4538925Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4539011Z E           AssertionError: 
2025-02-24T16:09:32.4539119Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:09:32.4539188Z E           
2025-02-24T16:09:32.4539286Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.4539385Z E           Max absolute difference: 2.25821059e+25
2025-02-24T16:09:32.4539486Z E           Max relative difference: 0.00054426
2025-02-24T16:09:32.4539625Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:09:32.4539746Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:09:32.4539874Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:09:32.4540006Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:09:32.4540126Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:09:32.4540247Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:09:32.4540252Z 
2025-02-24T16:09:32.4540455Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4540613Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:09:32.4540887Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4541346Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4541528Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4541783Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4542096Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4542220Z 	
2025-02-24T16:09:32.4542385Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4542524Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4542707Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4542959Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4543032Z 	
2025-02-24T16:09:32.4543188Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4543352Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4543419Z 	
2025-02-24T16:09:32.4543511Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4543612Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4543702Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4543808Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4543964Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4543974Z 
2025-02-24T16:09:32.4543977Z 
2025-02-24T16:09:32.4544213Z Packets:                                                                                   11201/? [00:10<00:00, 1079.15it/s][A
2025-02-24T16:09:32.4544310Z 
2025-02-24T16:09:32.4544544Z Packets:                                                                                   21697/? [00:10<00:00, 2489.49it/s][A
2025-02-24T16:09:32.4544549Z 
2025-02-24T16:09:32.4544772Z Packets:                                                                                   32512/? [00:10<00:00, 4499.78it/s][A
2025-02-24T16:09:32.4544781Z 
2025-02-24T16:09:32.4544999Z Packets:                                                                                   43359/? [00:10<00:00, 7250.92it/s][A
2025-02-24T16:09:32.4545094Z 
2025-02-24T16:09:32.4545325Z Packets:                                                                                   54173/? [00:10<00:00, 10925.68it/s][A
2025-02-24T16:09:32.4545330Z 
2025-02-24T16:09:32.4545550Z Packets:                                                                                   65049/? [00:10<00:00, 15764.64it/s][A
2025-02-24T16:09:32.4545563Z 
2025-02-24T16:09:32.4545783Z Packets:                                                                                   75864/? [00:10<00:00, 21852.95it/s][A
2025-02-24T16:09:32.4545787Z 
2025-02-24T16:09:32.4546010Z Packets:                                                                                   86743/? [00:11<00:00, 29340.24it/s][A
2025-02-24T16:09:32.4546015Z 
2025-02-24T16:09:32.4546232Z Packets:                                                                                   97658/? [00:11<00:00, 38083.73it/s][A
2025-02-24T16:09:32.4546528Z Iterations:                                                                                40/? [07:57<00:00,  5.57s/it]
2025-02-24T16:09:32.4546535Z 
2025-02-24T16:09:32.4546770Z Packets:                                                                                   104009/? [00:11<00:00, 38083.73it/s][A
2025-02-24T16:09:32.4546930Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:09:32.4547450Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4547684Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4547796Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4547896Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4547977Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4547981Z 
2025-02-24T16:09:32.4548124Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4548210Z 	Starting iteration 1 of 1
2025-02-24T16:09:32.4548321Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4548417Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4548506Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4548598Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4548765Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T16:09:32.4548769Z 
2025-02-24T16:09:32.4549467Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:09:32.4549750Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d7600980>
2025-02-24T16:09:32.4550101Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:09:32.4550109Z 
2025-02-24T16:09:32.4550222Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T16:09:32.4550312Z         montecarlo_main_loop_config,
2025-02-24T16:09:32.4550400Z         regression_data,
2025-02-24T16:09:32.4550483Z         atomic_dataset,
2025-02-24T16:09:32.4550551Z     ):
2025-02-24T16:09:32.4550793Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:09:32.4550967Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T16:09:32.4551040Z     
2025-02-24T16:09:32.4551190Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T16:09:32.4551286Z             montecarlo_main_loop_config,
2025-02-24T16:09:32.4551377Z             atom_data=atomic_dataset,
2025-02-24T16:09:32.4551466Z             virtual_packet_logging=True,
2025-02-24T16:09:32.4551555Z             legacy_mode_enabled=True,
2025-02-24T16:09:32.4551725Z         )
2025-02-24T16:09:32.4551862Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T16:09:32.4551974Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T16:09:32.4552044Z     
2025-02-24T16:09:32.4552184Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T16:09:32.4552250Z     
2025-02-24T16:09:32.4552455Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T16:09:32.4552524Z     
2025-02-24T16:09:32.4552655Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T16:09:32.4552749Z             montecarlo_main_loop_simulation
2025-02-24T16:09:32.4552821Z         )
2025-02-24T16:09:32.4552889Z     
2025-02-24T16:09:32.4552979Z         expected_nu = expected_hdf_store[
2025-02-24T16:09:32.4553111Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:09:32.4553177Z         ]
2025-02-24T16:09:32.4553280Z         expected_energy = expected_hdf_store[
2025-02-24T16:09:32.4553415Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:09:32.4553486Z         ]
2025-02-24T16:09:32.4553610Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:09:32.4553753Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:09:32.4553822Z         ]
2025-02-24T16:09:32.4553928Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:09:32.4554066Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:09:32.4554133Z         ]
2025-02-24T16:09:32.4554252Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T16:09:32.4554396Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T16:09:32.4554464Z         ]
2025-02-24T16:09:32.4554592Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T16:09:32.4554751Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T16:09:32.4554823Z         ]
2025-02-24T16:09:32.4554887Z     
2025-02-24T16:09:32.4555004Z         transport_state = transport.transport_state
2025-02-24T16:09:32.4555074Z     
2025-02-24T16:09:32.4555243Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:09:32.4555386Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:09:32.4555526Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T16:09:32.4555652Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T16:09:32.4555804Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T16:09:32.4555990Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T16:09:32.4556060Z     
2025-02-24T16:09:32.4556149Z         expected_hdf_store.close()
2025-02-24T16:09:32.4556223Z         # Compare
2025-02-24T16:09:32.4556408Z >       npt.assert_allclose(
2025-02-24T16:09:32.4556500Z             actual_nu_bar_estimator,
2025-02-24T16:09:32.4556593Z             expected_nu_bar_estimator,
2025-02-24T16:09:32.4556678Z             rtol=1e-12,
2025-02-24T16:09:32.4556755Z             atol=1e-15,
2025-02-24T16:09:32.4556828Z         )
2025-02-24T16:09:32.4556832Z 
2025-02-24T16:09:32.4557021Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T16:09:32.4557133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4557253Z 
2025-02-24T16:09:32.4557703Z args = (<function assert_allclose.<locals>.compare at 0x7f05cd440d60>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T16:09:32.4557849Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T16:09:32.4558111Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T16:09:32.4558116Z 
2025-02-24T16:09:32.4558190Z     @wraps(func)
2025-02-24T16:09:32.4558272Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4558461Z         with self._recreate_cm():
2025-02-24T16:09:32.4558552Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4558634Z E           AssertionError: 
2025-02-24T16:09:32.4558755Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:09:32.4558824Z E           
2025-02-24T16:09:32.4558927Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.4559027Z E           Max absolute difference: 1.93283629e+25
2025-02-24T16:09:32.4559130Z E           Max relative difference: 0.00029148
2025-02-24T16:09:32.4559274Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:09:32.4559391Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:09:32.4559517Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:09:32.4559648Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:09:32.4559768Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:09:32.4559894Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:09:32.4559898Z 
2025-02-24T16:09:32.4560100Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4560259Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:09:32.4560514Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4560967Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4561150Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4561358Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4561524Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4561591Z 	
2025-02-24T16:09:32.4561688Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4561773Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4561881Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4562045Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4562110Z 	
2025-02-24T16:09:32.4562269Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4562426Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4562502Z 	
2025-02-24T16:09:32.4562596Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:09:32.4562691Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:09:32.4562783Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4562885Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4563043Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4563048Z 
2025-02-24T16:09:32.4563051Z 
2025-02-24T16:09:32.4563285Z Packets:                                                                                   108509/? [00:13<00:00, 10526.12it/s][A
2025-02-24T16:09:32.4563293Z 
2025-02-24T16:09:32.4563524Z Packets:                                                                                   116093/? [00:14<00:00, 12604.68it/s][A
2025-02-24T16:09:32.4563529Z 
2025-02-24T16:09:32.4563758Z Packets:                                                                                   122421/? [00:14<00:00, 14659.03it/s][A
2025-02-24T16:09:32.4563762Z 
2025-02-24T16:09:32.4564073Z Packets:                                                                                   127883/? [00:14<00:00, 16736.92it/s][A
2025-02-24T16:09:32.4564078Z 
2025-02-24T16:09:32.4564302Z Packets:                                                                                   132754/? [00:14<00:00, 18810.62it/s][A
2025-02-24T16:09:32.4564307Z 
2025-02-24T16:09:32.4564528Z Packets:                                                                                   137199/? [00:14<00:00, 20889.89it/s][A
2025-02-24T16:09:32.4564533Z 
2025-02-24T16:09:32.4564753Z Packets:                                                                                   141349/? [00:14<00:00, 23006.75it/s][A
2025-02-24T16:09:32.4564830Z 
2025-02-24T16:09:32.4565054Z Packets:                                                                                   145314/? [00:14<00:00, 25037.26it/s][A
2025-02-24T16:09:32.4565058Z 
2025-02-24T16:09:32.4565281Z Packets:                                                                                   149144/? [00:15<00:00, 26890.14it/s][A
2025-02-24T16:09:32.4565288Z 
2025-02-24T16:09:32.4565508Z Packets:                                                                                   152870/? [00:15<00:00, 28425.54it/s][A
2025-02-24T16:09:32.4565512Z 
2025-02-24T16:09:32.4565732Z Packets:                                                                                   156503/? [00:15<00:00, 29811.62it/s][A
2025-02-24T16:09:32.4565737Z 
2025-02-24T16:09:32.4565958Z Packets:                                                                                   160084/? [00:15<00:00, 31017.56it/s][A
2025-02-24T16:09:32.4565965Z 
2025-02-24T16:09:32.4566181Z Packets:                                                                                   163636/? [00:15<00:00, 32051.32it/s][A
2025-02-24T16:09:32.4566186Z 
2025-02-24T16:09:32.4566509Z Packets:                                                                                   167176/? [00:15<00:00, 32878.93it/s][A
2025-02-24T16:09:32.4566517Z 
2025-02-24T16:09:32.4566740Z Packets:                                                                                   170710/? [00:15<00:00, 33505.86it/s][A
2025-02-24T16:09:32.4566744Z 
2025-02-24T16:09:32.4566963Z Packets:                                                                                   174239/? [00:15<00:00, 33781.10it/s][A
2025-02-24T16:09:32.4566967Z 
2025-02-24T16:09:32.4567192Z Packets:                                                                                   177776/? [00:15<00:00, 34231.60it/s][A
2025-02-24T16:09:32.4567196Z 
2025-02-24T16:09:32.4567427Z Packets:                                                                                   181293/? [00:15<00:00, 34500.50it/s][A
2025-02-24T16:09:32.4567431Z 
2025-02-24T16:09:32.4567655Z Packets:                                                                                   184808/? [00:16<00:00, 34685.99it/s][A
2025-02-24T16:09:32.4567659Z 
2025-02-24T16:09:32.4567884Z Packets:                                                                                   188323/? [00:16<00:00, 34655.26it/s][A
2025-02-24T16:09:32.4567892Z 
2025-02-24T16:09:32.4568115Z Packets:                                                                                   191836/? [00:16<00:00, 34795.23it/s][A
2025-02-24T16:09:32.4568120Z 
2025-02-24T16:09:32.4568340Z Packets:                                                                                   195339/? [00:16<00:00, 34768.60it/s][A
2025-02-24T16:09:32.4568344Z 
2025-02-24T16:09:32.4568566Z Packets:                                                                                   198832/? [00:16<00:00, 34751.41it/s][A
2025-02-24T16:09:32.4568573Z 
2025-02-24T16:09:32.4568796Z Packets:                                                                                   202348/? [00:16<00:00, 34870.32it/s][A
2025-02-24T16:09:32.4568947Z Iterations:                                                                                41/? [08:02<00:00,  5.52s/it]
2025-02-24T16:09:32.4569067Z 
2025-02-24T16:09:32.4569297Z Packets:                                                                                   204009/? [00:16<00:00, 34870.32it/s][A
2025-02-24T16:09:32.4569446Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:09:32.4569962Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4570190Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4570419Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4570516Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4570597Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4570601Z 
2025-02-24T16:09:32.4570708Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4570798Z 	Starting iteration 1 of 1
2025-02-24T16:09:32.4570901Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4571000Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T16:09:32.4571089Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T16:09:32.4571182Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4571335Z __________________________ test_boundary_interactions __________________________
2025-02-24T16:09:32.4571340Z 
2025-02-24T16:09:32.4572148Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f060ad24d10<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f05eef3cf10>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f05d69e66b0>])
2025-02-24T16:09:32.4572433Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05d37bf500>
2025-02-24T16:09:32.4572438Z 
2025-02-24T16:09:32.4572602Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T16:09:32.4572703Z         no_of_packets = len(rpacket_tracker)
2025-02-24T16:09:32.4572776Z     
2025-02-24T16:09:32.4572868Z         # Hard coding the number of columns
2025-02-24T16:09:32.4573023Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T16:09:32.4573130Z         obtained_boundary_interaction = np.full(
2025-02-24T16:09:32.4573221Z             (no_of_packets, 64),
2025-02-24T16:09:32.4573290Z             [-1],
2025-02-24T16:09:32.4573432Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T16:09:32.4573502Z         )
2025-02-24T16:09:32.4573567Z     
2025-02-24T16:09:32.4573688Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T16:09:32.4573788Z             obtained_boundary_interaction[
2025-02-24T16:09:32.4573900Z                 i, : tracker.boundary_interaction.size
2025-02-24T16:09:32.4573993Z             ] = tracker.boundary_interaction
2025-02-24T16:09:32.4574066Z     
2025-02-24T16:09:32.4574225Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T16:09:32.4574323Z             obtained_boundary_interaction
2025-02-24T16:09:32.4574399Z         )
2025-02-24T16:09:32.4574485Z >       npt.assert_array_equal(
2025-02-24T16:09:32.4574648Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T16:09:32.4574716Z         )
2025-02-24T16:09:32.4574720Z 
2025-02-24T16:09:32.4574900Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T16:09:32.4575018Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4575023Z 
2025-02-24T16:09:32.4575240Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.4575351Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T16:09:32.4575535Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T16:09:32.4575736Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T16:09:32.4575741Z 
2025-02-24T16:09:32.4575905Z     @wraps(func)
2025-02-24T16:09:32.4575989Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4576081Z         with self._recreate_cm():
2025-02-24T16:09:32.4576169Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4576258Z E           AssertionError: 
2025-02-24T16:09:32.4576441Z E           Arrays are not equal
2025-02-24T16:09:32.4576515Z E           
2025-02-24T16:09:32.4576616Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:09:32.4576749Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.4576954Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.4577062Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.4577190Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.4577277Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.4577383Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.4577391Z 
2025-02-24T16:09:32.4577604Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4577768Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T16:09:32.4577772Z 
2025-02-24T16:09:32.4578467Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T16:09:32.4578752Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f05f0dc9ca0>
2025-02-24T16:09:32.4579104Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T16:09:32.4579513Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f05d6b50bf0>
2025-02-24T16:09:32.4579521Z 
2025-02-24T16:09:32.4579621Z     def test_montecarlo_main_loop_weighted(
2025-02-24T16:09:32.4579715Z         montecarlo_main_loop_config,
2025-02-24T16:09:32.4579798Z         regression_data,
2025-02-24T16:09:32.4579875Z         atomic_dataset,
2025-02-24T16:09:32.4579972Z         simple_weighted_packet_source,
2025-02-24T16:09:32.4580040Z     ):
2025-02-24T16:09:32.4580152Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T16:09:32.4580324Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T16:09:32.4580423Z             montecarlo_main_loop_config,
2025-02-24T16:09:32.4580514Z             atom_data=atomic_dataset,
2025-02-24T16:09:32.4580607Z             virtual_packet_logging=False,
2025-02-24T16:09:32.4580696Z             legacy_mode_enabled=True,
2025-02-24T16:09:32.4580764Z         )
2025-02-24T16:09:32.4580926Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T16:09:32.4581020Z             simple_weighted_packet_source
2025-02-24T16:09:32.4581091Z         )
2025-02-24T16:09:32.4581245Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T16:09:32.4581380Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T16:09:32.4581451Z     
2025-02-24T16:09:32.4581558Z         # Get the montecarlo simple regression data
2025-02-24T16:09:32.4581647Z         regression_data_dir = (
2025-02-24T16:09:32.4581823Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T16:09:32.4581974Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T16:09:32.4582046Z         )
2025-02-24T16:09:32.4582204Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T16:09:32.4582274Z     
2025-02-24T16:09:32.4582362Z         # Load compare data from refdata
2025-02-24T16:09:32.4582432Z     
2025-02-24T16:09:32.4582522Z         expected_nu = expected_hdf_store[
2025-02-24T16:09:32.4582779Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T16:09:32.4582852Z         ]
2025-02-24T16:09:32.4582953Z         expected_energy = expected_hdf_store[
2025-02-24T16:09:32.4583090Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T16:09:32.4583155Z         ]
2025-02-24T16:09:32.4583279Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T16:09:32.4583426Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T16:09:32.4583492Z         ]
2025-02-24T16:09:32.4583675Z         expected_j_estimator = expected_hdf_store[
2025-02-24T16:09:32.4583802Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T16:09:32.4583874Z         ]
2025-02-24T16:09:32.4583962Z         expected_hdf_store.close()
2025-02-24T16:09:32.4584050Z         transport_state = (
2025-02-24T16:09:32.4584231Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T16:09:32.4584301Z         )
2025-02-24T16:09:32.4584475Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T16:09:32.4584614Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T16:09:32.4584703Z         actual_nu_bar_estimator = (
2025-02-24T16:09:32.4584844Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T16:09:32.4584916Z         )
2025-02-24T16:09:32.4585103Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T16:09:32.4585170Z     
2025-02-24T16:09:32.4585247Z         # Compare
2025-02-24T16:09:32.4585330Z         npt.assert_allclose(
2025-02-24T16:09:32.4585485Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T16:09:32.4585554Z         )
2025-02-24T16:09:32.4585745Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T16:09:32.4585904Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T16:09:32.4585912Z 
2025-02-24T16:09:32.4586146Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T16:09:32.4586394Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4586400Z 
2025-02-24T16:09:32.4586943Z args = (<function assert_allclose.<locals>.compare at 0x7f0613d6f420>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T16:09:32.4587149Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T16:09:32.4587582Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T16:09:32.4587591Z 
2025-02-24T16:09:32.4587715Z     @wraps(func)
2025-02-24T16:09:32.4587862Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4588011Z         with self._recreate_cm():
2025-02-24T16:09:32.4588173Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4588326Z E           AssertionError: 
2025-02-24T16:09:32.4588505Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:09:32.4588629Z E           
2025-02-24T16:09:32.4588803Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:09:32.4588986Z E           Max absolute difference: 2.00640487e-05
2025-02-24T16:09:32.4589150Z E           Max relative difference: 2.06329455
2025-02-24T16:09:32.4589428Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.4589587Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.4589853Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.4590008Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.4590014Z 
2025-02-24T16:09:32.4590359Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4590627Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T16:09:32.4591239Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T16:09:32.4592026Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T16:09:32.4592349Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4592721Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T16:09:32.4593014Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4593134Z 	
2025-02-24T16:09:32.4593452Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4593596Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4593777Z  ([1mbase.py[0m:542)
2025-02-24T16:09:32.4594072Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4594186Z 	
2025-02-24T16:09:32.4594459Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T16:09:32.4594745Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4594866Z 	
2025-02-24T16:09:32.4595028Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4595185Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4595357Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4595541Z  ([1mbase.py[0m:657)
2025-02-24T16:09:32.4595813Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T16:09:32.4595820Z 
2025-02-24T16:09:32.4595825Z 
2025-02-24T16:09:32.4596254Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T16:09:32.4596402Z 
2025-02-24T16:09:32.4596802Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T16:09:32.4596810Z 
2025-02-24T16:09:32.4597269Z Packets:   ████████▍                                                                       10595/100000 [00:00<00:00, 105944.29it/s][A
2025-02-24T16:09:32.4597288Z 
2025-02-24T16:09:32.4597755Z Packets:   █████████████████▏                                                              21545/100000 [00:00<00:00, 108031.96it/s][A
2025-02-24T16:09:32.4597763Z 
2025-02-24T16:09:32.4598121Z Packets:   █████████████████████████▉                                                      32458/100000 [00:00<00:00, 108531.13it/s][A
2025-02-24T16:09:32.4598128Z 
2025-02-24T16:09:32.4598402Z Packets:   ██████████████████████████████████▋                                             43406/100000 [00:00<00:00, 108900.95it/s][A
2025-02-24T16:09:32.4598407Z 
2025-02-24T16:09:32.4598699Z Packets:   ███████████████████████████████████████████▌                                    54402/100000 [00:00<00:00, 109282.49it/s][A
2025-02-24T16:09:32.4598704Z 
2025-02-24T16:09:32.4598993Z Packets:   ████████████████████████████████████████████████████▎                           65331/100000 [00:00<00:00, 108900.29it/s][A
2025-02-24T16:09:32.4598999Z 
2025-02-24T16:09:32.4599477Z Packets:   ████████████████████████████████████████████████████████████▉                   76238/100000 [00:00<00:00, 108953.98it/s][A
2025-02-24T16:09:32.4599483Z 
2025-02-24T16:09:32.4599797Z Packets:   █████████████████████████████████████████████████████████████████████▊          87231/100000 [00:00<00:00, 109262.23it/s][A
2025-02-24T16:09:32.4599801Z 
2025-02-24T16:09:32.4600115Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 98163/100000 [00:00<00:00, 109277.54it/s][A
2025-02-24T16:09:32.4600269Z Iterations:                                                                                45/? [08:52<00:00,  7.87s/it]
2025-02-24T16:09:32.4600388Z 
2025-02-24T16:09:32.4600714Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 109277.54it/s][A
2025-02-24T16:09:32.4600873Z ------------------------------ Captured log call -------------------------------
2025-02-24T16:09:32.4601396Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T16:09:32.4601640Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T16:09:32.4601755Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T16:09:32.4601856Z 	Simulation finished in 0 iterations 
2025-02-24T16:09:32.4601938Z 	Simulation took 0.00 s
2025-02-24T16:09:32.4601942Z 
2025-02-24T16:09:32.4602049Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T16:09:32.4602143Z 	Starting iteration 1 of 1
2025-02-24T16:09:32.4602251Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T16:09:32.4602344Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T16:09:32.4602441Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T16:09:32.4602536Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T16:09:32.4602753Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T16:09:32.4602760Z 
2025-02-24T16:09:32.4603032Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d4d70>
2025-02-24T16:09:32.4603319Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4603599Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T16:09:32.4603684Z attribute = 'plot_data'
2025-02-24T16:09:32.4603689Z 
2025-02-24T16:09:32.4603780Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4603858Z         "attribute",
2025-02-24T16:09:32.4603929Z         [
2025-02-24T16:09:32.4604009Z             "plot_data",
2025-02-24T16:09:32.4604091Z             "plot_colors",
2025-02-24T16:09:32.4604170Z             "new_bin_edges",
2025-02-24T16:09:32.4604243Z         ],
2025-02-24T16:09:32.4604309Z     )
2025-02-24T16:09:32.4604404Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4604473Z         self,
2025-02-24T16:09:32.4604572Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4604643Z         request,
2025-02-24T16:09:32.4604721Z         attribute,
2025-02-24T16:09:32.4604792Z     ):
2025-02-24T16:09:32.4604859Z         """
2025-02-24T16:09:32.4605002Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4605070Z     
2025-02-24T16:09:32.4605188Z         Parameters:
2025-02-24T16:09:32.4605322Z         -----------
2025-02-24T16:09:32.4605637Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4605802Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4606087Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4606213Z         """
2025-02-24T16:09:32.4606456Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4606603Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4606754Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4607069Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4607225Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4607348Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4607474Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4607595Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4607600Z 
2025-02-24T16:09:32.4607752Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4607971Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4607976Z 
2025-02-24T16:09:32.4608457Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1806a20>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:09:32.4608564Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:09:32.4608818Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4608829Z 
2025-02-24T16:09:32.4608901Z     @wraps(func)
2025-02-24T16:09:32.4608990Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4609076Z         with self._recreate_cm():
2025-02-24T16:09:32.4609171Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4609256Z E           AssertionError: 
2025-02-24T16:09:32.4609369Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4609443Z E           
2025-02-24T16:09:32.4609541Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.4609686Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.4609805Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.4609931Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.4610068Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.4610189Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.4610314Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.4610319Z 
2025-02-24T16:09:32.4610523Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4610683Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4610927Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4611194Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4611357Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4611858Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4612087Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T16:09:32.4612091Z 
2025-02-24T16:09:32.4612356Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d51f0>
2025-02-24T16:09:32.4612649Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4612928Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T16:09:32.4613010Z attribute = 'plot_data'
2025-02-24T16:09:32.4613019Z 
2025-02-24T16:09:32.4613113Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4613188Z         "attribute",
2025-02-24T16:09:32.4613257Z         [
2025-02-24T16:09:32.4613413Z             "plot_data",
2025-02-24T16:09:32.4613525Z             "plot_colors",
2025-02-24T16:09:32.4613668Z             "new_bin_edges",
2025-02-24T16:09:32.4613789Z         ],
2025-02-24T16:09:32.4613923Z     )
2025-02-24T16:09:32.4614242Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4614395Z         self,
2025-02-24T16:09:32.4614535Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4614674Z         request,
2025-02-24T16:09:32.4614777Z         attribute,
2025-02-24T16:09:32.4614948Z     ):
2025-02-24T16:09:32.4615062Z         """
2025-02-24T16:09:32.4615294Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4615429Z     
2025-02-24T16:09:32.4615536Z         Parameters:
2025-02-24T16:09:32.4615711Z         -----------
2025-02-24T16:09:32.4615944Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4616197Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4625433Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4625575Z         """
2025-02-24T16:09:32.4625705Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4625875Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4626056Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4626234Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4626621Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4626865Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4627007Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4627131Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4627141Z 
2025-02-24T16:09:32.4627297Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4627413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4627418Z 
2025-02-24T16:09:32.4627875Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e29a80>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T16:09:32.4628023Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:09:32.4628276Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4628281Z 
2025-02-24T16:09:32.4628362Z     @wraps(func)
2025-02-24T16:09:32.4628448Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4628540Z         with self._recreate_cm():
2025-02-24T16:09:32.4628632Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4628718Z E           AssertionError: 
2025-02-24T16:09:32.4628834Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4628903Z E           
2025-02-24T16:09:32.4628999Z E           (shapes (558,), (560,) mismatch)
2025-02-24T16:09:32.4629144Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.4629270Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.4629402Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.4629534Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.4629649Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.4629767Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.4629771Z 
2025-02-24T16:09:32.4629985Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4630209Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T16:09:32.4630217Z 
2025-02-24T16:09:32.4630490Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5430>
2025-02-24T16:09:32.4630787Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4631070Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T16:09:32.4631336Z attribute = 'plot_data'
2025-02-24T16:09:32.4631341Z 
2025-02-24T16:09:32.4631439Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4631512Z         "attribute",
2025-02-24T16:09:32.4631588Z         [
2025-02-24T16:09:32.4631665Z             "plot_data",
2025-02-24T16:09:32.4631751Z             "plot_colors",
2025-02-24T16:09:32.4631832Z             "new_bin_edges",
2025-02-24T16:09:32.4631906Z         ],
2025-02-24T16:09:32.4631977Z     )
2025-02-24T16:09:32.4632067Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4632249Z         self,
2025-02-24T16:09:32.4632340Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4632460Z         request,
2025-02-24T16:09:32.4632599Z         attribute,
2025-02-24T16:09:32.4632713Z     ):
2025-02-24T16:09:32.4632785Z         """
2025-02-24T16:09:32.4632935Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4633005Z     
2025-02-24T16:09:32.4633083Z         Parameters:
2025-02-24T16:09:32.4633159Z         -----------
2025-02-24T16:09:32.4633344Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4633448Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4633615Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4633688Z         """
2025-02-24T16:09:32.4633802Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4633943Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4634099Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4634266Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4634425Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4634556Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4634678Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4634805Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4634810Z 
2025-02-24T16:09:32.4634958Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4635080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4635085Z 
2025-02-24T16:09:32.4635536Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e296c0>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:09:32.4635677Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:09:32.4635931Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4635937Z 
2025-02-24T16:09:32.4636009Z     @wraps(func)
2025-02-24T16:09:32.4636098Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4636192Z         with self._recreate_cm():
2025-02-24T16:09:32.4636421Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4636517Z E           AssertionError: 
2025-02-24T16:09:32.4636628Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4636701Z E           
2025-02-24T16:09:32.4636791Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.4636933Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.4637055Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.4637175Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.4637312Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.4637423Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.4637544Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.4637549Z 
2025-02-24T16:09:32.4637890Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4638047Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4638470Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4638736Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4638897Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4639215Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4639554Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T16:09:32.4639559Z 
2025-02-24T16:09:32.4639829Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5670>
2025-02-24T16:09:32.4640114Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4640395Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T16:09:32.4640481Z attribute = 'plot_data'
2025-02-24T16:09:32.4640486Z 
2025-02-24T16:09:32.4640579Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4640657Z         "attribute",
2025-02-24T16:09:32.4640724Z         [
2025-02-24T16:09:32.4640807Z             "plot_data",
2025-02-24T16:09:32.4640884Z             "plot_colors",
2025-02-24T16:09:32.4640967Z             "new_bin_edges",
2025-02-24T16:09:32.4641040Z         ],
2025-02-24T16:09:32.4641110Z     )
2025-02-24T16:09:32.4641202Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4641270Z         self,
2025-02-24T16:09:32.4641364Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4641434Z         request,
2025-02-24T16:09:32.4641511Z         attribute,
2025-02-24T16:09:32.4641579Z     ):
2025-02-24T16:09:32.4641652Z         """
2025-02-24T16:09:32.4641797Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4641867Z     
2025-02-24T16:09:32.4641946Z         Parameters:
2025-02-24T16:09:32.4642020Z         -----------
2025-02-24T16:09:32.4642281Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4642453Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4642632Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4642706Z         """
2025-02-24T16:09:32.4642815Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4642964Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4643111Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4643280Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4643434Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4643560Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4643686Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4643805Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4643810Z 
2025-02-24T16:09:32.4643960Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4644074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4644088Z 
2025-02-24T16:09:32.4644476Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e2b100>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-24T16:09:32.4644619Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:09:32.4644691Z        11042.97481792]))
2025-02-24T16:09:32.4644946Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4644951Z 
2025-02-24T16:09:32.4645119Z     @wraps(func)
2025-02-24T16:09:32.4645203Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4645294Z         with self._recreate_cm():
2025-02-24T16:09:32.4645382Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4645473Z E           AssertionError: 
2025-02-24T16:09:32.4645583Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4645662Z E           
2025-02-24T16:09:32.4645757Z E           (shapes (159,), (153,) mismatch)
2025-02-24T16:09:32.4645985Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.4646518Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.4646737Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.4646968Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.4647160Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.4647349Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.4647354Z 
2025-02-24T16:09:32.4647568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4647787Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T16:09:32.4647791Z 
2025-02-24T16:09:32.4648094Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d58e0>
2025-02-24T16:09:32.4648382Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4648664Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T16:09:32.4648751Z attribute = 'plot_data'
2025-02-24T16:09:32.4648756Z 
2025-02-24T16:09:32.4648845Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4648924Z         "attribute",
2025-02-24T16:09:32.4648991Z         [
2025-02-24T16:09:32.4649074Z             "plot_data",
2025-02-24T16:09:32.4649163Z             "plot_colors",
2025-02-24T16:09:32.4649240Z             "new_bin_edges",
2025-02-24T16:09:32.4649313Z         ],
2025-02-24T16:09:32.4649381Z     )
2025-02-24T16:09:32.4649470Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4649540Z         self,
2025-02-24T16:09:32.4649635Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4649705Z         request,
2025-02-24T16:09:32.4649780Z         attribute,
2025-02-24T16:09:32.4649852Z     ):
2025-02-24T16:09:32.4649918Z         """
2025-02-24T16:09:32.4650060Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4650128Z     
2025-02-24T16:09:32.4650261Z         Parameters:
2025-02-24T16:09:32.4650391Z         -----------
2025-02-24T16:09:32.4650698Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4650864Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4651145Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4651228Z         """
2025-02-24T16:09:32.4651339Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4651484Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4651633Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4651800Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4651950Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4652072Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4652201Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4652320Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4652325Z 
2025-02-24T16:09:32.4652473Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4652592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4652732Z 
2025-02-24T16:09:32.4653220Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e287c0>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T16:09:32.4653333Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T16:09:32.4653580Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4653590Z 
2025-02-24T16:09:32.4653662Z     @wraps(func)
2025-02-24T16:09:32.4653747Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4653939Z         with self._recreate_cm():
2025-02-24T16:09:32.4654034Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4654117Z E           AssertionError: 
2025-02-24T16:09:32.4654231Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4654303Z E           
2025-02-24T16:09:32.4654395Z E           (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.4654539Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.4654659Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.4654784Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.4654912Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.4655029Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.4655150Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.4655158Z 
2025-02-24T16:09:32.4655360Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4655522Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4655775Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4656036Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4656192Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4656646Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4656864Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T16:09:32.4656869Z 
2025-02-24T16:09:32.4657132Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5b20>
2025-02-24T16:09:32.4657427Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4657705Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T16:09:32.4657786Z attribute = 'plot_data'
2025-02-24T16:09:32.4657791Z 
2025-02-24T16:09:32.4657886Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4657965Z         "attribute",
2025-02-24T16:09:32.4658036Z         [
2025-02-24T16:09:32.4658115Z             "plot_data",
2025-02-24T16:09:32.4658192Z             "plot_colors",
2025-02-24T16:09:32.4658284Z             "new_bin_edges",
2025-02-24T16:09:32.4658410Z         ],
2025-02-24T16:09:32.4658535Z     )
2025-02-24T16:09:32.4658683Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4658806Z         self,
2025-02-24T16:09:32.4658961Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4659081Z         request,
2025-02-24T16:09:32.4659212Z         attribute,
2025-02-24T16:09:32.4659312Z     ):
2025-02-24T16:09:32.4659386Z         """
2025-02-24T16:09:32.4659523Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4659591Z     
2025-02-24T16:09:32.4659665Z         Parameters:
2025-02-24T16:09:32.4659747Z         -----------
2025-02-24T16:09:32.4659929Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4660026Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4660329Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4660398Z         """
2025-02-24T16:09:32.4660508Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4660647Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4660802Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4660967Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4661113Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4661342Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4661460Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4661581Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4661585Z 
2025-02-24T16:09:32.4661732Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4661845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4661850Z 
2025-02-24T16:09:32.4662328Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e29d00>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T16:09:32.4662428Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T16:09:32.4662689Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4662697Z 
2025-02-24T16:09:32.4662772Z     @wraps(func)
2025-02-24T16:09:32.4662860Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4662949Z         with self._recreate_cm():
2025-02-24T16:09:32.4663034Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4663120Z E           AssertionError: 
2025-02-24T16:09:32.4663227Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4663302Z E           
2025-02-24T16:09:32.4663394Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T16:09:32.4663548Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:09:32.4663697Z E                  11152.962595, 11172.044815])
2025-02-24T16:09:32.4663948Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:09:32.4664097Z E                  11398.237865, 11111.204868])
2025-02-24T16:09:32.4664104Z 
2025-02-24T16:09:32.4664443Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4664670Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4664917Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4665257Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4665411Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4665774Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4665990Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T16:09:32.4665995Z 
2025-02-24T16:09:32.4666418Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5d60>
2025-02-24T16:09:32.4666708Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4666996Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T16:09:32.4667079Z attribute = 'plot_data'
2025-02-24T16:09:32.4667083Z 
2025-02-24T16:09:32.4667179Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4667258Z         "attribute",
2025-02-24T16:09:32.4667324Z         [
2025-02-24T16:09:32.4667540Z             "plot_data",
2025-02-24T16:09:32.4667617Z             "plot_colors",
2025-02-24T16:09:32.4667697Z             "new_bin_edges",
2025-02-24T16:09:32.4667765Z         ],
2025-02-24T16:09:32.4667835Z     )
2025-02-24T16:09:32.4667923Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4667996Z         self,
2025-02-24T16:09:32.4668089Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4668159Z         request,
2025-02-24T16:09:32.4668236Z         attribute,
2025-02-24T16:09:32.4668302Z     ):
2025-02-24T16:09:32.4668373Z         """
2025-02-24T16:09:32.4668615Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4668685Z     
2025-02-24T16:09:32.4668763Z         Parameters:
2025-02-24T16:09:32.4668836Z         -----------
2025-02-24T16:09:32.4669019Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4669116Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4669285Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4669357Z         """
2025-02-24T16:09:32.4669472Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4669616Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4669765Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4669934Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4670084Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4670216Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4670336Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4670459Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4670463Z 
2025-02-24T16:09:32.4670623Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4670826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4670839Z 
2025-02-24T16:09:32.4671604Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e2a160>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T16:09:32.4671759Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T16:09:32.4672009Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4672014Z 
2025-02-24T16:09:32.4672091Z     @wraps(func)
2025-02-24T16:09:32.4672176Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4672265Z         with self._recreate_cm():
2025-02-24T16:09:32.4672354Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4672441Z E           AssertionError: 
2025-02-24T16:09:32.4672552Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4672621Z E           
2025-02-24T16:09:32.4672720Z E           (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.4672856Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.4672977Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.4673099Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.4673233Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.4673351Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.4673469Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.4673476Z 
2025-02-24T16:09:32.4673681Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4673835Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4674080Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4674462Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4674611Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4675082Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4675445Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T16:09:32.4675458Z 
2025-02-24T16:09:32.4675828Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d5f40>
2025-02-24T16:09:32.4676207Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>
2025-02-24T16:09:32.4676586Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T16:09:32.4676681Z attribute = 'plot_data'
2025-02-24T16:09:32.4676686Z 
2025-02-24T16:09:32.4676780Z     @pytest.mark.parametrize(
2025-02-24T16:09:32.4676860Z         "attribute",
2025-02-24T16:09:32.4676931Z         [
2025-02-24T16:09:32.4677007Z             "plot_data",
2025-02-24T16:09:32.4677089Z             "plot_colors",
2025-02-24T16:09:32.4677165Z             "new_bin_edges",
2025-02-24T16:09:32.4677234Z         ],
2025-02-24T16:09:32.4677300Z     )
2025-02-24T16:09:32.4677391Z     def test_prepare_plot_data(
2025-02-24T16:09:32.4677469Z         self,
2025-02-24T16:09:32.4677558Z         plotter_prepare_plot_data,
2025-02-24T16:09:32.4677631Z         request,
2025-02-24T16:09:32.4677701Z         attribute,
2025-02-24T16:09:32.4677775Z     ):
2025-02-24T16:09:32.4677842Z         """
2025-02-24T16:09:32.4677982Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T16:09:32.4678051Z     
2025-02-24T16:09:32.4678125Z         Parameters:
2025-02-24T16:09:32.4678203Z         -----------
2025-02-24T16:09:32.4678380Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T16:09:32.4678489Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4678654Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T16:09:32.4678729Z         """
2025-02-24T16:09:32.4678841Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4678980Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T16:09:32.4679129Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T16:09:32.4679293Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T16:09:32.4679448Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T16:09:32.4679570Z                 plot_object = [item.value for item in plot_object]
2025-02-24T16:09:32.4679693Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T16:09:32.4679813Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T16:09:32.4679818Z 
2025-02-24T16:09:32.4679962Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T16:09:32.4680078Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4680082Z 
2025-02-24T16:09:32.4680577Z args = (<function assert_allclose.<locals>.compare at 0x7f05e9e2a520>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-24T16:09:32.4680812Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T16:09:32.4680940Z        11042.97481792]))
2025-02-24T16:09:32.4681337Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4681347Z 
2025-02-24T16:09:32.4681428Z     @wraps(func)
2025-02-24T16:09:32.4681510Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4681602Z         with self._recreate_cm():
2025-02-24T16:09:32.4681694Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4681777Z E           AssertionError: 
2025-02-24T16:09:32.4682052Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4682120Z E           
2025-02-24T16:09:32.4682215Z E           (shapes (379,), (381,) mismatch)
2025-02-24T16:09:32.4682352Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:09:32.4682472Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:09:32.4682602Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:09:32.4682728Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:09:32.4682944Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:09:32.4683064Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:09:32.4683068Z 
2025-02-24T16:09:32.4683271Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4683427Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4683671Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4683969Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4684232Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4684783Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4685055Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T16:09:32.4685065Z 
2025-02-24T16:09:32.4685331Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d4aa0>
2025-02-24T16:09:32.4685640Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05e8bc3ad0>
2025-02-24T16:09:32.4686141Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4686507Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T16:09:32.4686513Z 
2025-02-24T16:09:32.4686602Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4686761Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4686831Z     ):
2025-02-24T16:09:32.4686899Z         """
2025-02-24T16:09:32.4687031Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4687103Z     
2025-02-24T16:09:32.4687228Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4687303Z     
2025-02-24T16:09:32.4687378Z         Parameters:
2025-02-24T16:09:32.4687452Z         -----------
2025-02-24T16:09:32.4687610Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4687768Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4687871Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4687937Z         """
2025-02-24T16:09:32.4688032Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4688139Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4688309Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4688567Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4688736Z             expected_values = expected.get(
2025-02-24T16:09:32.4688886Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4689032Z             ).values.flatten()
2025-02-24T16:09:32.4689264Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4689345Z     
2025-02-24T16:09:32.4689483Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4689576Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4689662Z                     expected_values,
2025-02-24T16:09:32.4689879Z                     actual_values,
2025-02-24T16:09:32.4689956Z                     rtol=0.3,
2025-02-24T16:09:32.4690032Z                     atol=3,
2025-02-24T16:09:32.4690099Z                 )
2025-02-24T16:09:32.4690172Z             else:
2025-02-24T16:09:32.4690309Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4690379Z     
2025-02-24T16:09:32.4690491Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:09:32.4690611Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:09:32.4690815Z             if isinstance(data.get_label(), str):
2025-02-24T16:09:32.4690892Z                 assert (
2025-02-24T16:09:32.4691018Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:09:32.4691099Z                     == data.get_label()
2025-02-24T16:09:32.4691170Z                 )
2025-02-24T16:09:32.4691262Z             if isinstance(data, Line2D):
2025-02-24T16:09:32.4691357Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4691443Z                     data.get_xydata(),
2025-02-24T16:09:32.4691583Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:09:32.4691664Z                     rtol=0.3,
2025-02-24T16:09:32.4691737Z                     atol=3,
2025-02-24T16:09:32.4691807Z                 )
2025-02-24T16:09:32.4691811Z 
2025-02-24T16:09:32.4691958Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:09:32.4692071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4692079Z 
2025-02-24T16:09:32.4692375Z args = (<function assert_allclose.<locals>.compare at 0x7f05d29a6a20>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4692507Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:09:32.4692639Z        [1.82e+04, 0.00e+00],
2025-02-24T16:09:32.4692768Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4692891Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4693026Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:09:32.4693378Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4693384Z 
2025-02-24T16:09:32.4693460Z     @wraps(func)
2025-02-24T16:09:32.4693541Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4693630Z         with self._recreate_cm():
2025-02-24T16:09:32.4693720Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4693801Z E           AssertionError: 
2025-02-24T16:09:32.4693907Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4693978Z E           
2025-02-24T16:09:32.4694079Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.4694169Z E           Max absolute difference: 22.
2025-02-24T16:09:32.4694262Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4694355Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4694432Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.4694519Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.4694601Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.4694681Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.4694760Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.4694771Z 
2025-02-24T16:09:32.4694976Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4695135Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4695378Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4695824Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T16:09:32.4695975Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4696565Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:09:32.4696907Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T16:09:32.4696912Z 
2025-02-24T16:09:32.4697180Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6480>
2025-02-24T16:09:32.4697490Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05d9184410>
2025-02-24T16:09:32.4698033Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4698613Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T16:09:32.4698620Z 
2025-02-24T16:09:32.4698774Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4699015Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4699091Z     ):
2025-02-24T16:09:32.4699168Z         """
2025-02-24T16:09:32.4699299Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4699369Z     
2025-02-24T16:09:32.4699498Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4699567Z     
2025-02-24T16:09:32.4699644Z         Parameters:
2025-02-24T16:09:32.4699722Z         -----------
2025-02-24T16:09:32.4699881Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4700036Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4700136Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4700207Z         """
2025-02-24T16:09:32.4700304Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4700412Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4700586Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4700734Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4700837Z             expected_values = expected.get(
2025-02-24T16:09:32.4700930Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4701015Z             ).values.flatten()
2025-02-24T16:09:32.4701149Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4701216Z     
2025-02-24T16:09:32.4701351Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4701449Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4701532Z                     expected_values,
2025-02-24T16:09:32.4701627Z                     actual_values,
2025-02-24T16:09:32.4701768Z                     rtol=0.3,
2025-02-24T16:09:32.4701901Z                     atol=3,
2025-02-24T16:09:32.4702018Z                 )
2025-02-24T16:09:32.4702142Z             else:
2025-02-24T16:09:32.4702369Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4702489Z     
2025-02-24T16:09:32.4702645Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:09:32.4702775Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:09:32.4702878Z             if isinstance(data.get_label(), str):
2025-02-24T16:09:32.4702952Z                 assert (
2025-02-24T16:09:32.4703077Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:09:32.4703165Z                     == data.get_label()
2025-02-24T16:09:32.4703232Z                 )
2025-02-24T16:09:32.4703325Z             if isinstance(data, Line2D):
2025-02-24T16:09:32.4703415Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4703505Z                     data.get_xydata(),
2025-02-24T16:09:32.4703640Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:09:32.4703721Z                     rtol=0.3,
2025-02-24T16:09:32.4703798Z                     atol=3,
2025-02-24T16:09:32.4703866Z                 )
2025-02-24T16:09:32.4703870Z 
2025-02-24T16:09:32.4704022Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:09:32.4704247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4704252Z 
2025-02-24T16:09:32.4704506Z args = (<function assert_allclose.<locals>.compare at 0x7f05f8546980>, array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4704586Z        [1.19e+04, 1.67e+0...,
2025-02-24T16:09:32.4704662Z        [1.82e+04, 0.00e+00],
2025-02-24T16:09:32.4704740Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4704814Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4704892Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:09:32.4705212Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4705217Z 
2025-02-24T16:09:32.4705293Z     @wraps(func)
2025-02-24T16:09:32.4705380Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4705467Z         with self._recreate_cm():
2025-02-24T16:09:32.4705557Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4705693Z E           AssertionError: 
2025-02-24T16:09:32.4705877Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4705995Z E           
2025-02-24T16:09:32.4706161Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.4706459Z E           Max absolute difference: 22.
2025-02-24T16:09:32.4706618Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4706771Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.4706853Z E                  [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.4706939Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.4707029Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.4707113Z E                  [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.4707197Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.4707201Z 
2025-02-24T16:09:32.4707406Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4707615Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T16:09:32.4707623Z 
2025-02-24T16:09:32.4707884Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6870>
2025-02-24T16:09:32.4708195Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05e9ef4e00>
2025-02-24T16:09:32.4708696Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4708937Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T16:09:32.4708945Z 
2025-02-24T16:09:32.4709036Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4709196Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4709269Z     ):
2025-02-24T16:09:32.4709339Z         """
2025-02-24T16:09:32.4709469Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4709543Z     
2025-02-24T16:09:32.4709667Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4709739Z     
2025-02-24T16:09:32.4709813Z         Parameters:
2025-02-24T16:09:32.4709890Z         -----------
2025-02-24T16:09:32.4710054Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4710207Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4710303Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4710371Z         """
2025-02-24T16:09:32.4710481Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4710595Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4710769Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4710924Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4711023Z             expected_values = expected.get(
2025-02-24T16:09:32.4711115Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4711331Z             ).values.flatten()
2025-02-24T16:09:32.4711468Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4711535Z     
2025-02-24T16:09:32.4711671Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4711768Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4711852Z                     expected_values,
2025-02-24T16:09:32.4711938Z                     actual_values,
2025-02-24T16:09:32.4712017Z                     rtol=0.3,
2025-02-24T16:09:32.4712199Z                     atol=3,
2025-02-24T16:09:32.4712268Z                 )
2025-02-24T16:09:32.4712277Z 
2025-02-24T16:09:32.4712497Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T16:09:32.4712703Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4712710Z 
2025-02-24T16:09:32.4713398Z args = (<function assert_allclose.<locals>.compare at 0x7f05ff0ab6a0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4713492Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:09:32.4713735Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4713746Z 
2025-02-24T16:09:32.4713820Z     @wraps(func)
2025-02-24T16:09:32.4713906Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4713993Z         with self._recreate_cm():
2025-02-24T16:09:32.4714086Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4714173Z E           AssertionError: 
2025-02-24T16:09:32.4714283Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4714361Z E           
2025-02-24T16:09:32.4714457Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4714554Z E           Max absolute difference: 34
2025-02-24T16:09:32.4714652Z E           Max relative difference: 0.71428571
2025-02-24T16:09:32.4714802Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4714893Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4715033Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4715123Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4715128Z 
2025-02-24T16:09:32.4715333Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4715493Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4715747Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4716006Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4716164Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4716780Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4717146Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T16:09:32.4717153Z 
2025-02-24T16:09:32.4717556Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6930>
2025-02-24T16:09:32.4717874Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05d481d880>
2025-02-24T16:09:32.4718377Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4718625Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T16:09:32.4718630Z 
2025-02-24T16:09:32.4718724Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4718887Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T16:09:32.4719098Z     ):
2025-02-24T16:09:32.4719173Z         """
2025-02-24T16:09:32.4719306Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4719379Z     
2025-02-24T16:09:32.4719508Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4719580Z     
2025-02-24T16:09:32.4719655Z         Parameters:
2025-02-24T16:09:32.4719734Z         -----------
2025-02-24T16:09:32.4719902Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T16:09:32.4720054Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T16:09:32.4720260Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4720330Z         """
2025-02-24T16:09:32.4720427Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T16:09:32.4720536Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4720706Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T16:09:32.4720862Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4720961Z             expected_values = expected.get(
2025-02-24T16:09:32.4721054Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4721137Z             ).values.flatten()
2025-02-24T16:09:32.4721274Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T16:09:32.4721345Z     
2025-02-24T16:09:32.4721478Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4721576Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4721659Z                     expected_values,
2025-02-24T16:09:32.4721750Z                     actual_values,
2025-02-24T16:09:32.4721845Z                     rtol=0.3,
2025-02-24T16:09:32.4721986Z                     atol=3,
2025-02-24T16:09:32.4722107Z                 )
2025-02-24T16:09:32.4722233Z             else:
2025-02-24T16:09:32.4722469Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4722589Z     
2025-02-24T16:09:32.4722777Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T16:09:32.4722917Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T16:09:32.4723024Z             if isinstance(data.get_label(), str):
2025-02-24T16:09:32.4723099Z                 assert (
2025-02-24T16:09:32.4723226Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T16:09:32.4723313Z                     == data.get_label()
2025-02-24T16:09:32.4723381Z                 )
2025-02-24T16:09:32.4723478Z             if isinstance(data, Line2D):
2025-02-24T16:09:32.4723574Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4723665Z                     data.get_xydata(),
2025-02-24T16:09:32.4723801Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T16:09:32.4723882Z                     rtol=0.3,
2025-02-24T16:09:32.4723960Z                     atol=3,
2025-02-24T16:09:32.4724028Z                 )
2025-02-24T16:09:32.4724036Z 
2025-02-24T16:09:32.4724184Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T16:09:32.4724297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4724302Z 
2025-02-24T16:09:32.4724559Z args = (<function assert_allclose.<locals>.compare at 0x7f05cddd8180>, array([[1.10e+04, 2.72e+02],
2025-02-24T16:09:32.4724638Z        [1.19e+04, 2.72e+0...,
2025-02-24T16:09:32.4724714Z        [1.82e+04, 5.00e+00],
2025-02-24T16:09:32.4724793Z        [1.91e+04, 5.00e+00],
2025-02-24T16:09:32.4724865Z        [1.91e+04, 0.00e+00],
2025-02-24T16:09:32.4724952Z        [2.00e+04, 0.00e+00]]))
2025-02-24T16:09:32.4725197Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4725208Z 
2025-02-24T16:09:32.4725280Z     @wraps(func)
2025-02-24T16:09:32.4725368Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4725454Z         with self._recreate_cm():
2025-02-24T16:09:32.4725724Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4725868Z E           AssertionError: 
2025-02-24T16:09:32.4726047Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4726173Z E           
2025-02-24T16:09:32.4726471Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.4726637Z E           Max absolute difference: 34.
2025-02-24T16:09:32.4726782Z E           Max relative difference: 0.65
2025-02-24T16:09:32.4726878Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:09:32.4726957Z E                  [1.19e+04, 2.72e+02],
2025-02-24T16:09:32.4727204Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T16:09:32.4727295Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:09:32.4727371Z E                  [1.19e+04, 3.06e+02],
2025-02-24T16:09:32.4727455Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T16:09:32.4727459Z 
2025-02-24T16:09:32.4727663Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4727826Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4728072Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4728407Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4728564Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4728925Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4729138Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T16:09:32.4729142Z 
2025-02-24T16:09:32.4729413Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d6db0>
2025-02-24T16:09:32.4729735Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05edba0b30>
2025-02-24T16:09:32.4729841Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4729992Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4730134Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4730340Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4730590Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T16:09:32.4730594Z 
2025-02-24T16:09:32.4730693Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4730863Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4730936Z     ):
2025-02-24T16:09:32.4731004Z         """
2025-02-24T16:09:32.4731159Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4731291Z     
2025-02-24T16:09:32.4731508Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4731632Z     
2025-02-24T16:09:32.4731758Z         Parameters:
2025-02-24T16:09:32.4731887Z         ----------
2025-02-24T16:09:32.4732132Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4732281Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4732380Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4732449Z         """
2025-02-24T16:09:32.4732547Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4732654Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4732838Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4732904Z     
2025-02-24T16:09:32.4733056Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4733155Z             expected_values = expected.get(
2025-02-24T16:09:32.4733242Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4733331Z             ).values.flatten()
2025-02-24T16:09:32.4733593Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4733665Z     
2025-02-24T16:09:32.4733810Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4733987Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4734134Z                     expected_values,
2025-02-24T16:09:32.4734233Z                     actual_values,
2025-02-24T16:09:32.4734316Z                     rtol=0.3,
2025-02-24T16:09:32.4734389Z                     atol=3,
2025-02-24T16:09:32.4734463Z                 )
2025-02-24T16:09:32.4734621Z             else:
2025-02-24T16:09:32.4734833Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4735013Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4735187Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4735333Z             if data.stackgroup:
2025-02-24T16:09:32.4735457Z                 assert (
2025-02-24T16:09:32.4735609Z                     data.stackgroup
2025-02-24T16:09:32.4735718Z                     == getattr(
2025-02-24T16:09:32.4735832Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4735940Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4736015Z                     ).decode()
2025-02-24T16:09:32.4736091Z                 )
2025-02-24T16:09:32.4736167Z             if data.name:
2025-02-24T16:09:32.4736244Z                 assert (
2025-02-24T16:09:32.4736503Z                     data.name
2025-02-24T16:09:32.4736589Z                     == getattr(
2025-02-24T16:09:32.4736710Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4736802Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4736884Z                     ).decode()
2025-02-24T16:09:32.4736953Z                 )
2025-02-24T16:09:32.4737053Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4737125Z                 data.x,
2025-02-24T16:09:32.4737253Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:09:32.4737335Z                 rtol=0.3,
2025-02-24T16:09:32.4737406Z                 atol=3,
2025-02-24T16:09:32.4737480Z             )
2025-02-24T16:09:32.4737572Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4737648Z                 data.y,
2025-02-24T16:09:32.4737754Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:09:32.4737834Z                 rtol=0.3,
2025-02-24T16:09:32.4737910Z                 atol=3,
2025-02-24T16:09:32.4737977Z             )
2025-02-24T16:09:32.4737985Z 
2025-02-24T16:09:32.4738134Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:09:32.4738251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4738256Z 
2025-02-24T16:09:32.4738671Z args = (<function assert_allclose.<locals>.compare at 0x7f05e727b600>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4738762Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:09:32.4739006Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4739011Z 
2025-02-24T16:09:32.4739088Z     @wraps(func)
2025-02-24T16:09:32.4739171Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4739263Z         with self._recreate_cm():
2025-02-24T16:09:32.4739411Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4739566Z E           AssertionError: 
2025-02-24T16:09:32.4739749Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4739868Z E           
2025-02-24T16:09:32.4740032Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4740185Z E           Max absolute difference: 22
2025-02-24T16:09:32.4740335Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4740479Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.4740720Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4740859Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4740944Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4740949Z 
2025-02-24T16:09:32.4741163Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4741322Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4741577Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4742124Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T16:09:32.4742275Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4742719Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T16:09:32.4742925Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T16:09:32.4742935Z 
2025-02-24T16:09:32.4743345Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d7890>
2025-02-24T16:09:32.4743906Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05f1709d60>
2025-02-24T16:09:32.4744054Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4744216Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4744354Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4744565Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4744815Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T16:09:32.4744823Z 
2025-02-24T16:09:32.4744912Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4745082Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4745150Z     ):
2025-02-24T16:09:32.4745224Z         """
2025-02-24T16:09:32.4745357Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4745425Z     
2025-02-24T16:09:32.4745559Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4745624Z     
2025-02-24T16:09:32.4745705Z         Parameters:
2025-02-24T16:09:32.4745779Z         ----------
2025-02-24T16:09:32.4745954Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4746099Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4746197Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4746386Z         """
2025-02-24T16:09:32.4746484Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4746598Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4746779Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4746850Z     
2025-02-24T16:09:32.4747007Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4747106Z             expected_values = expected.get(
2025-02-24T16:09:32.4747199Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4747282Z             ).values.flatten()
2025-02-24T16:09:32.4747426Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4747492Z     
2025-02-24T16:09:32.4747632Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4747730Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4747813Z                     expected_values,
2025-02-24T16:09:32.4747937Z                     actual_values,
2025-02-24T16:09:32.4748107Z                     rtol=0.3,
2025-02-24T16:09:32.4748239Z                     atol=3,
2025-02-24T16:09:32.4748518Z                 )
2025-02-24T16:09:32.4748642Z             else:
2025-02-24T16:09:32.4748888Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4749001Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4749113Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4749197Z             if data.stackgroup:
2025-02-24T16:09:32.4749275Z                 assert (
2025-02-24T16:09:32.4749358Z                     data.stackgroup
2025-02-24T16:09:32.4749437Z                     == getattr(
2025-02-24T16:09:32.4749699Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4749802Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4749881Z                     ).decode()
2025-02-24T16:09:32.4749951Z                 )
2025-02-24T16:09:32.4750031Z             if data.name:
2025-02-24T16:09:32.4750106Z                 assert (
2025-02-24T16:09:32.4750185Z                     data.name
2025-02-24T16:09:32.4750267Z                     == getattr(
2025-02-24T16:09:32.4750369Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4750465Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4750539Z                     ).decode()
2025-02-24T16:09:32.4750611Z                 )
2025-02-24T16:09:32.4750702Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4750781Z                 data.x,
2025-02-24T16:09:32.4750893Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:09:32.4750968Z                 rtol=0.3,
2025-02-24T16:09:32.4751049Z                 atol=3,
2025-02-24T16:09:32.4751117Z             )
2025-02-24T16:09:32.4751211Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4751283Z                 data.y,
2025-02-24T16:09:32.4751396Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:09:32.4751476Z                 rtol=0.3,
2025-02-24T16:09:32.4751553Z                 atol=3,
2025-02-24T16:09:32.4751630Z             )
2025-02-24T16:09:32.4751634Z 
2025-02-24T16:09:32.4751780Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:09:32.4751900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4751904Z 
2025-02-24T16:09:32.4752314Z args = (<function assert_allclose.<locals>.compare at 0x7f05e7233c40>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4752403Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T16:09:32.4752657Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4752662Z 
2025-02-24T16:09:32.4752735Z     @wraps(func)
2025-02-24T16:09:32.4752824Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4752910Z         with self._recreate_cm():
2025-02-24T16:09:32.4753005Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4753099Z E           AssertionError: 
2025-02-24T16:09:32.4753203Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4753327Z E           
2025-02-24T16:09:32.4753493Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4753653Z E           Max absolute difference: 22
2025-02-24T16:09:32.4753808Z E           Max relative difference: 0.8
2025-02-24T16:09:32.4754043Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.4754206Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4754351Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.4754445Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.4754449Z 
2025-02-24T16:09:32.4754653Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4754861Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T16:09:32.4754953Z 
2025-02-24T16:09:32.4755226Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d7ce0>
2025-02-24T16:09:32.4755545Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05d87e1130>
2025-02-24T16:09:32.4755645Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4755794Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4755934Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4756237Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4756595Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T16:09:32.4756601Z 
2025-02-24T16:09:32.4756692Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4756862Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4756945Z     ):
2025-02-24T16:09:32.4757027Z         """
2025-02-24T16:09:32.4757161Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4757237Z     
2025-02-24T16:09:32.4757363Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4757437Z     
2025-02-24T16:09:32.4757510Z         Parameters:
2025-02-24T16:09:32.4757591Z         ----------
2025-02-24T16:09:32.4757749Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4757891Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4758003Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4758075Z         """
2025-02-24T16:09:32.4758177Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4758287Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4758469Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4758541Z     
2025-02-24T16:09:32.4758728Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4758903Z             expected_values = expected.get(
2025-02-24T16:09:32.4759048Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4759194Z             ).values.flatten()
2025-02-24T16:09:32.4759428Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4759548Z     
2025-02-24T16:09:32.4759736Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4759831Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4759926Z                     expected_values,
2025-02-24T16:09:32.4760009Z                     actual_values,
2025-02-24T16:09:32.4760093Z                     rtol=0.3,
2025-02-24T16:09:32.4760166Z                     atol=3,
2025-02-24T16:09:32.4760245Z                 )
2025-02-24T16:09:32.4760249Z 
2025-02-24T16:09:32.4760399Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T16:09:32.4760515Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4760520Z 
2025-02-24T16:09:32.4760948Z args = (<function assert_allclose.<locals>.compare at 0x7f05e7232fc0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4761029Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:09:32.4761277Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4761282Z 
2025-02-24T16:09:32.4761365Z     @wraps(func)
2025-02-24T16:09:32.4761447Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4761540Z         with self._recreate_cm():
2025-02-24T16:09:32.4761629Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4761723Z E           AssertionError: 
2025-02-24T16:09:32.4761828Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4761906Z E           
2025-02-24T16:09:32.4762139Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4762230Z E           Max absolute difference: 34
2025-02-24T16:09:32.4762337Z E           Max relative difference: 0.71428571
2025-02-24T16:09:32.4762477Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4762574Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4762714Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4762800Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4762903Z 
2025-02-24T16:09:32.4763112Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4763268Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4763535Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4763999Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4764274Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4764695Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4764903Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T16:09:32.4764908Z 
2025-02-24T16:09:32.4765182Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f06005d7da0>
2025-02-24T16:09:32.4765510Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f05f23c36e0>
2025-02-24T16:09:32.4765614Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4765776Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T16:09:32.4765910Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T16:09:32.4766125Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f05e8bc1ac0>)
2025-02-24T16:09:32.4766482Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T16:09:32.4766493Z 
2025-02-24T16:09:32.4766588Z     def test_generate_plot_ply(
2025-02-24T16:09:32.4766765Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4766834Z     ):
2025-02-24T16:09:32.4766909Z         """
2025-02-24T16:09:32.4767043Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T16:09:32.4767115Z     
2025-02-24T16:09:32.4767253Z         Compares generated plot data with regression data.
2025-02-24T16:09:32.4767321Z     
2025-02-24T16:09:32.4767402Z         Parameters:
2025-02-24T16:09:32.4767480Z         ----------
2025-02-24T16:09:32.4767650Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T16:09:32.4767789Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T16:09:32.4767896Z         request: Pytest's request fixture.
2025-02-24T16:09:32.4767971Z         """
2025-02-24T16:09:32.4768066Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4768179Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4768355Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4768429Z     
2025-02-24T16:09:32.4768578Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T16:09:32.4768684Z             expected_values = expected.get(
2025-02-24T16:09:32.4768778Z                 "plot_data_hdf/" + item
2025-02-24T16:09:32.4768866Z             ).values.flatten()
2025-02-24T16:09:32.4769093Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T16:09:32.4769212Z     
2025-02-24T16:09:32.4769438Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T16:09:32.4769599Z                 np.testing.assert_allclose(
2025-02-24T16:09:32.4769745Z                     expected_values,
2025-02-24T16:09:32.4770021Z                     actual_values,
2025-02-24T16:09:32.4770104Z                     rtol=0.3,
2025-02-24T16:09:32.4770185Z                     atol=3,
2025-02-24T16:09:32.4770255Z                 )
2025-02-24T16:09:32.4770333Z             else:
2025-02-24T16:09:32.4770473Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T16:09:32.4770584Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4770698Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4770784Z             if data.stackgroup:
2025-02-24T16:09:32.4770971Z                 assert (
2025-02-24T16:09:32.4771057Z                     data.stackgroup
2025-02-24T16:09:32.4771138Z                     == getattr(
2025-02-24T16:09:32.4771248Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4771354Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4771436Z                     ).decode()
2025-02-24T16:09:32.4771507Z                 )
2025-02-24T16:09:32.4771589Z             if data.name:
2025-02-24T16:09:32.4771662Z                 assert (
2025-02-24T16:09:32.4771746Z                     data.name
2025-02-24T16:09:32.4771821Z                     == getattr(
2025-02-24T16:09:32.4771929Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4772026Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4772104Z                     ).decode()
2025-02-24T16:09:32.4772177Z                 )
2025-02-24T16:09:32.4772270Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4772351Z                 data.x,
2025-02-24T16:09:32.4772461Z                 expected.get(group + "x").values.flatten(),
2025-02-24T16:09:32.4772542Z                 rtol=0.3,
2025-02-24T16:09:32.4772621Z                 atol=3,
2025-02-24T16:09:32.4772688Z             )
2025-02-24T16:09:32.4772784Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4772855Z                 data.y,
2025-02-24T16:09:32.4772971Z                 expected.get(group + "y").values.flatten(),
2025-02-24T16:09:32.4773046Z                 rtol=0.3,
2025-02-24T16:09:32.4773125Z                 atol=3,
2025-02-24T16:09:32.4773193Z             )
2025-02-24T16:09:32.4773203Z 
2025-02-24T16:09:32.4773349Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T16:09:32.4773471Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4773475Z 
2025-02-24T16:09:32.4773897Z args = (<function assert_allclose.<locals>.compare at 0x7f05e727b4c0>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4773998Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T16:09:32.4774427Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T16:09:32.4774435Z 
2025-02-24T16:09:32.4774559Z     @wraps(func)
2025-02-24T16:09:32.4774706Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4774851Z         with self._recreate_cm():
2025-02-24T16:09:32.4774999Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4775086Z E           AssertionError: 
2025-02-24T16:09:32.4775198Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.4775273Z E           
2025-02-24T16:09:32.4775371Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.4775469Z E           Max absolute difference: 34
2025-02-24T16:09:32.4775562Z E           Max relative difference: 0.65
2025-02-24T16:09:32.4775719Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.4775811Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4775954Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.4776048Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.4776140Z 
2025-02-24T16:09:32.4776499Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4776662Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T16:09:32.4776909Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T16:09:32.4777249Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T16:09:32.4777406Z ------------------------------ Captured log setup ------------------------------
2025-02-24T16:09:32.4778052Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T16:09:32.4778301Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T16:09:32.4778306Z 
2025-02-24T16:09:32.4778584Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005db770>
2025-02-24T16:09:32.4778906Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4779246Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d5e52690>
2025-02-24T16:09:32.4779534Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T16:09:32.4779539Z 
2025-02-24T16:09:32.4779640Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4779715Z         self,
2025-02-24T16:09:32.4779815Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4779909Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4779980Z         request,
2025-02-24T16:09:32.4780053Z     ):
2025-02-24T16:09:32.4780216Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4780544Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4780693Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4780999Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4781135Z             plot_object = getattr(
2025-02-24T16:09:32.4781269Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4781347Z             )
2025-02-24T16:09:32.4781449Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4781623Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4781738Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4781840Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4781974Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4782044Z                 )
2025-02-24T16:09:32.4782048Z 
2025-02-24T16:09:32.4782205Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4782320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4782335Z 
2025-02-24T16:09:32.4782823Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0cfe700>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4782937Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4783189Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4783194Z 
2025-02-24T16:09:32.4783275Z     @wraps(func)
2025-02-24T16:09:32.4783369Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4783457Z         with self._recreate_cm():
2025-02-24T16:09:32.4783555Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4783637Z E           AssertionError: 
2025-02-24T16:09:32.4783750Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4783819Z E           
2025-02-24T16:09:32.4783925Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4784186Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4784286Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4784448Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4784533Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4784683Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4784767Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4784777Z 
2025-02-24T16:09:32.4785059Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4785292Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T16:09:32.4785297Z 
2025-02-24T16:09:32.4785568Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005dbe60>
2025-02-24T16:09:32.4785889Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4786235Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d6b4f050>
2025-02-24T16:09:32.4786640Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T16:09:32.4786646Z 
2025-02-24T16:09:32.4786751Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4786822Z         self,
2025-02-24T16:09:32.4786927Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4787018Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4787098Z         request,
2025-02-24T16:09:32.4787179Z     ):
2025-02-24T16:09:32.4787288Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4787484Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4787572Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4787816Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4787971Z             plot_object = getattr(
2025-02-24T16:09:32.4788191Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4788314Z             )
2025-02-24T16:09:32.4788485Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4788744Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4788856Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4788959Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4789097Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4789167Z                 )
2025-02-24T16:09:32.4789172Z 
2025-02-24T16:09:32.4789329Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4789445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4789451Z 
2025-02-24T16:09:32.4789937Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b1440>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4790049Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4790301Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4790306Z 
2025-02-24T16:09:32.4790386Z     @wraps(func)
2025-02-24T16:09:32.4790472Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4790570Z         with self._recreate_cm():
2025-02-24T16:09:32.4790662Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4790754Z E           AssertionError: 
2025-02-24T16:09:32.4790870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4790943Z E           
2025-02-24T16:09:32.4791052Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4791155Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4791530Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4791793Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4791936Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4792195Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4792304Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4792310Z 
2025-02-24T16:09:32.4792524Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4792864Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T16:09:32.4792875Z 
2025-02-24T16:09:32.4793150Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550110>
2025-02-24T16:09:32.4793471Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4793808Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05e92a42c0>
2025-02-24T16:09:32.4794099Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T16:09:32.4794104Z 
2025-02-24T16:09:32.4794205Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4794279Z         self,
2025-02-24T16:09:32.4794386Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4794478Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4794557Z         request,
2025-02-24T16:09:32.4794629Z     ):
2025-02-24T16:09:32.4794743Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4794936Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4795023Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4795208Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4795298Z             plot_object = getattr(
2025-02-24T16:09:32.4795440Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4795511Z             )
2025-02-24T16:09:32.4795618Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4795790Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4795896Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4795997Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4796126Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4796208Z                 )
2025-02-24T16:09:32.4796213Z 
2025-02-24T16:09:32.4796479Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4796669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4796677Z 
2025-02-24T16:09:32.4797500Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b2de0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4797610Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4797866Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4797871Z 
2025-02-24T16:09:32.4797951Z     @wraps(func)
2025-02-24T16:09:32.4798034Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4798130Z         with self._recreate_cm():
2025-02-24T16:09:32.4798219Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4798313Z E           AssertionError: 
2025-02-24T16:09:32.4798421Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4798497Z E           
2025-02-24T16:09:32.4798603Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4798705Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4798807Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4799085Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4799176Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4799320Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4799408Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4799412Z 
2025-02-24T16:09:32.4799628Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4799852Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T16:09:32.4799958Z 
2025-02-24T16:09:32.4800238Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005514c0>
2025-02-24T16:09:32.4800561Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4800894Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f2242ae0>
2025-02-24T16:09:32.4801184Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T16:09:32.4801189Z 
2025-02-24T16:09:32.4801285Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4801362Z         self,
2025-02-24T16:09:32.4801462Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4801554Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4801647Z         request,
2025-02-24T16:09:32.4801774Z     ):
2025-02-24T16:09:32.4801963Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4802279Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4802430Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4802685Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4802780Z             plot_object = getattr(
2025-02-24T16:09:32.4802912Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4802987Z             )
2025-02-24T16:09:32.4803095Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4803258Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4803371Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4803471Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4803598Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4803677Z                 )
2025-02-24T16:09:32.4803681Z 
2025-02-24T16:09:32.4803828Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4803950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4803954Z 
2025-02-24T16:09:32.4804437Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1413600>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T16:09:32.4804544Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4804801Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4804806Z 
2025-02-24T16:09:32.4804879Z     @wraps(func)
2025-02-24T16:09:32.4804970Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4805062Z         with self._recreate_cm():
2025-02-24T16:09:32.4805216Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4805371Z E           AssertionError: 
2025-02-24T16:09:32.4805551Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4805681Z E           
2025-02-24T16:09:32.4805846Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4806028Z E           Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.4806153Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4806406Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4806642Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4806791Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4806882Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4806886Z 
2025-02-24T16:09:32.4807090Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4807320Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T16:09:32.4807324Z 
2025-02-24T16:09:32.4807607Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550080>
2025-02-24T16:09:32.4808032Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4808380Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05c59bb6e0>
2025-02-24T16:09:32.4808701Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T16:09:32.4808717Z 
2025-02-24T16:09:32.4808879Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4809006Z         self,
2025-02-24T16:09:32.4809170Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4809327Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4809448Z         request,
2025-02-24T16:09:32.4809572Z     ):
2025-02-24T16:09:32.4809717Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4809907Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4810005Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4810300Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4810456Z             plot_object = getattr(
2025-02-24T16:09:32.4810613Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4810948Z             )
2025-02-24T16:09:32.4811094Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4811346Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4811486Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4811633Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4811893Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4812012Z                 )
2025-02-24T16:09:32.4812016Z 
2025-02-24T16:09:32.4812229Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4812372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4812381Z 
2025-02-24T16:09:32.4813277Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0c7fb00>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4813572Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4813880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4813885Z 
2025-02-24T16:09:32.4814026Z     @wraps(func)
2025-02-24T16:09:32.4814142Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4814284Z         with self._recreate_cm():
2025-02-24T16:09:32.4814530Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4814648Z E           AssertionError: 
2025-02-24T16:09:32.4814821Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4814923Z E           
2025-02-24T16:09:32.4815081Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4815325Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4815459Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4815676Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4815795Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4816085Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4816443Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4816506Z 
2025-02-24T16:09:32.4816753Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4817040Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T16:09:32.4817045Z 
2025-02-24T16:09:32.4817348Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550170>
2025-02-24T16:09:32.4817859Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4818332Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d29cbb90>
2025-02-24T16:09:32.4818645Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T16:09:32.4818654Z 
2025-02-24T16:09:32.4818812Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4818932Z         self,
2025-02-24T16:09:32.4819082Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4819300Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4819403Z         request,
2025-02-24T16:09:32.4819537Z     ):
2025-02-24T16:09:32.4819691Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4819925Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4820089Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4820355Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4820524Z             plot_object = getattr(
2025-02-24T16:09:32.4820682Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4820802Z             )
2025-02-24T16:09:32.4820975Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4821224Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4821365Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4821542Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4821720Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4829278Z                 )
2025-02-24T16:09:32.4829299Z 
2025-02-24T16:09:32.4829521Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4829742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4829764Z 
2025-02-24T16:09:32.4830551Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0cff920>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4830755Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4831035Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4831048Z 
2025-02-24T16:09:32.4831127Z     @wraps(func)
2025-02-24T16:09:32.4831222Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4831312Z         with self._recreate_cm():
2025-02-24T16:09:32.4831415Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4831509Z E           AssertionError: 
2025-02-24T16:09:32.4831627Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4831704Z E           
2025-02-24T16:09:32.4831809Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4831917Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4832026Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4832196Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4832293Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4832444Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4832717Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4832722Z 
2025-02-24T16:09:32.4832942Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4833186Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T16:09:32.4833191Z 
2025-02-24T16:09:32.4833474Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550230>
2025-02-24T16:09:32.4833796Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4834277Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d864acf0>
2025-02-24T16:09:32.4834563Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T16:09:32.4834576Z 
2025-02-24T16:09:32.4834756Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4834895Z         self,
2025-02-24T16:09:32.4834996Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4835096Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4835169Z         request,
2025-02-24T16:09:32.4835244Z     ):
2025-02-24T16:09:32.4835357Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4835553Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4835647Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4835830Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4835931Z             plot_object = getattr(
2025-02-24T16:09:32.4836058Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4836135Z             )
2025-02-24T16:09:32.4836240Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4836604Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4836723Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4836825Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4836960Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4837032Z                 )
2025-02-24T16:09:32.4837037Z 
2025-02-24T16:09:32.4837195Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4837317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4837322Z 
2025-02-24T16:09:32.4837799Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1476ac0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4837918Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4838169Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4838179Z 
2025-02-24T16:09:32.4838256Z     @wraps(func)
2025-02-24T16:09:32.4838348Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4838435Z         with self._recreate_cm():
2025-02-24T16:09:32.4838534Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4838621Z E           AssertionError: 
2025-02-24T16:09:32.4838737Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4838808Z E           
2025-02-24T16:09:32.4838917Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4839024Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4839124Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4839289Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4839379Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4839529Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4839620Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4839756Z 
2025-02-24T16:09:32.4839969Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4840200Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T16:09:32.4840205Z 
2025-02-24T16:09:32.4840484Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005502f0>
2025-02-24T16:09:32.4840804Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4841146Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f00d8ef0>
2025-02-24T16:09:32.4841550Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T16:09:32.4841555Z 
2025-02-24T16:09:32.4841655Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4841727Z         self,
2025-02-24T16:09:32.4841835Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4841935Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4842007Z         request,
2025-02-24T16:09:32.4842081Z     ):
2025-02-24T16:09:32.4842190Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4842381Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4842469Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4842655Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4842749Z             plot_object = getattr(
2025-02-24T16:09:32.4842879Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4842959Z             )
2025-02-24T16:09:32.4843059Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4843229Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4843335Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4843436Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4843577Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4843649Z                 )
2025-02-24T16:09:32.4843653Z 
2025-02-24T16:09:32.4843808Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4843921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4843926Z 
2025-02-24T16:09:32.4844410Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b2660>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T16:09:32.4844522Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4844771Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4844776Z 
2025-02-24T16:09:32.4844857Z     @wraps(func)
2025-02-24T16:09:32.4844942Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4845043Z         with self._recreate_cm():
2025-02-24T16:09:32.4845139Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4845226Z E           AssertionError: 
2025-02-24T16:09:32.4845340Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4845411Z E           
2025-02-24T16:09:32.4845524Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4845626Z E           Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.4845731Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4845892Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4845984Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4846137Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.4846221Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4846225Z 
2025-02-24T16:09:32.4846610Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4846968Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T16:09:32.4846973Z 
2025-02-24T16:09:32.4847250Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005503b0>
2025-02-24T16:09:32.4847573Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4847909Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d44ae570>
2025-02-24T16:09:32.4848335Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T16:09:32.4848341Z 
2025-02-24T16:09:32.4848445Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4848517Z         self,
2025-02-24T16:09:32.4848620Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4848711Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4848793Z         request,
2025-02-24T16:09:32.4848863Z     ):
2025-02-24T16:09:32.4848976Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4849165Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4849252Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4849436Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4849527Z             plot_object = getattr(
2025-02-24T16:09:32.4849660Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4849735Z             )
2025-02-24T16:09:32.4849839Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4850016Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4850125Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4850227Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4850358Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4850438Z                 )
2025-02-24T16:09:32.4850442Z 
2025-02-24T16:09:32.4850598Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4850713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4850717Z 
2025-02-24T16:09:32.4851195Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1411300>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4851300Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4851557Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4851561Z 
2025-02-24T16:09:32.4851641Z     @wraps(func)
2025-02-24T16:09:32.4851725Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4851818Z         with self._recreate_cm():
2025-02-24T16:09:32.4851906Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4852002Z E           AssertionError: 
2025-02-24T16:09:32.4852122Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4852193Z E           
2025-02-24T16:09:32.4852300Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4852401Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4852505Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4852659Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4852751Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4852906Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4852988Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4852993Z 
2025-02-24T16:09:32.4853209Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4853439Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T16:09:32.4853543Z 
2025-02-24T16:09:32.4853825Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550470>
2025-02-24T16:09:32.4854150Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4854486Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f00d9580>
2025-02-24T16:09:32.4854774Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T16:09:32.4854851Z 
2025-02-24T16:09:32.4854946Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4855025Z         self,
2025-02-24T16:09:32.4855127Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4855221Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4855299Z         request,
2025-02-24T16:09:32.4855367Z     ):
2025-02-24T16:09:32.4855478Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4855665Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4855758Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4855939Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4856026Z             plot_object = getattr(
2025-02-24T16:09:32.4856158Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4856229Z             )
2025-02-24T16:09:32.4856494Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4856669Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4856782Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4856884Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4857012Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4857089Z                 )
2025-02-24T16:09:32.4857097Z 
2025-02-24T16:09:32.4857244Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4857365Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4857370Z 
2025-02-24T16:09:32.4857846Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0cfe700>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4857949Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4858203Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4858211Z 
2025-02-24T16:09:32.4858285Z     @wraps(func)
2025-02-24T16:09:32.4858377Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4858472Z         with self._recreate_cm():
2025-02-24T16:09:32.4858562Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4858652Z E           AssertionError: 
2025-02-24T16:09:32.4858767Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4858843Z E           
2025-02-24T16:09:32.4858944Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4859050Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4859154Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4859306Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4859399Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4859550Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4859643Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4859647Z 
2025-02-24T16:09:32.4859857Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4860091Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T16:09:32.4860097Z 
2025-02-24T16:09:32.4860500Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550530>
2025-02-24T16:09:32.4860815Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4861154Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f00d9640>
2025-02-24T16:09:32.4861440Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T16:09:32.4861450Z 
2025-02-24T16:09:32.4861544Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4861725Z         self,
2025-02-24T16:09:32.4861822Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4861917Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4861988Z         request,
2025-02-24T16:09:32.4862063Z     ):
2025-02-24T16:09:32.4862169Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4862357Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4862453Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4862629Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4862720Z             plot_object = getattr(
2025-02-24T16:09:32.4862847Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4862923Z             )
2025-02-24T16:09:32.4863030Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4863191Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4863306Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4863402Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4863533Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4863604Z                 )
2025-02-24T16:09:32.4863608Z 
2025-02-24T16:09:32.4863758Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4863877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4863882Z 
2025-02-24T16:09:32.4864347Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1476020>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4864454Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4864702Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4864715Z 
2025-02-24T16:09:32.4864790Z     @wraps(func)
2025-02-24T16:09:32.4864878Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4864964Z         with self._recreate_cm():
2025-02-24T16:09:32.4865056Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4865139Z E           AssertionError: 
2025-02-24T16:09:32.4865252Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4865333Z E           
2025-02-24T16:09:32.4865433Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4865539Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4865638Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4865791Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4865878Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4866026Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4866116Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4866124Z 
2025-02-24T16:09:32.4866560Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4866798Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T16:09:32.4866802Z 
2025-02-24T16:09:32.4867074Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005505f0>
2025-02-24T16:09:32.4867537Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4867872Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d8649c70>
2025-02-24T16:09:32.4868159Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T16:09:32.4868163Z 
2025-02-24T16:09:32.4868263Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4868333Z         self,
2025-02-24T16:09:32.4868547Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4868640Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4868721Z         request,
2025-02-24T16:09:32.4868790Z     ):
2025-02-24T16:09:32.4868900Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4869088Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4869175Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4869360Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4869447Z             plot_object = getattr(
2025-02-24T16:09:32.4869586Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4869657Z             )
2025-02-24T16:09:32.4869765Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4869932Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4870042Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4870149Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4870277Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4870355Z                 )
2025-02-24T16:09:32.4870360Z 
2025-02-24T16:09:32.4870513Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4870626Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4870633Z 
2025-02-24T16:09:32.4871111Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0c7fb00>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T16:09:32.4871214Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4871467Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4871472Z 
2025-02-24T16:09:32.4871552Z     @wraps(func)
2025-02-24T16:09:32.4871640Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4871735Z         with self._recreate_cm():
2025-02-24T16:09:32.4871823Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4871911Z E           AssertionError: 
2025-02-24T16:09:32.4872018Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4872095Z E           
2025-02-24T16:09:32.4872200Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.4872305Z E           Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.4872405Z E           Max relative difference: 4.76021355
2025-02-24T16:09:32.4872556Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4872649Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4872797Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4872887Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4872891Z 
2025-02-24T16:09:32.4873100Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4873329Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T16:09:32.4873333Z 
2025-02-24T16:09:32.4873610Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005506b0>
2025-02-24T16:09:32.4873931Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4874351Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05f239ff80>
2025-02-24T16:09:32.4874640Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T16:09:32.4874645Z 
2025-02-24T16:09:32.4874738Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4874815Z         self,
2025-02-24T16:09:32.4874910Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4875004Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4875156Z         request,
2025-02-24T16:09:32.4875224Z     ):
2025-02-24T16:09:32.4875335Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4875516Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4875608Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4875779Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4875872Z             plot_object = getattr(
2025-02-24T16:09:32.4876004Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4876074Z             )
2025-02-24T16:09:32.4876178Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4876505Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4876620Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4876722Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4876855Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4876932Z                 )
2025-02-24T16:09:32.4876936Z 
2025-02-24T16:09:32.4877081Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4877200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4877204Z 
2025-02-24T16:09:32.4877677Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149b060>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4877785Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4878036Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4878041Z 
2025-02-24T16:09:32.4878115Z     @wraps(func)
2025-02-24T16:09:32.4878205Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4878298Z         with self._recreate_cm():
2025-02-24T16:09:32.4878389Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4878480Z E           AssertionError: 
2025-02-24T16:09:32.4878589Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4878665Z E           
2025-02-24T16:09:32.4878765Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4878877Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4878985Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4879132Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4879222Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4879369Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4879460Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4879464Z 
2025-02-24T16:09:32.4879665Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4879904Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T16:09:32.4879908Z 
2025-02-24T16:09:32.4880183Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550770>
2025-02-24T16:09:32.4880500Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4880962Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d0d0c5f0>
2025-02-24T16:09:32.4881255Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T16:09:32.4881260Z 
2025-02-24T16:09:32.4881351Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4881430Z         self,
2025-02-24T16:09:32.4881525Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4881624Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4881698Z         request,
2025-02-24T16:09:32.4881884Z     ):
2025-02-24T16:09:32.4881998Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4882182Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4882275Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4882452Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4882546Z             plot_object = getattr(
2025-02-24T16:09:32.4882678Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4882754Z             )
2025-02-24T16:09:32.4882860Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4883024Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4883135Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4883230Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4883364Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4883444Z                 )
2025-02-24T16:09:32.4883448Z 
2025-02-24T16:09:32.4883592Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4883709Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4883714Z 
2025-02-24T16:09:32.4884181Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14999e0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4884293Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4884543Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4884548Z 
2025-02-24T16:09:32.4884623Z     @wraps(func)
2025-02-24T16:09:32.4884712Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4884798Z         with self._recreate_cm():
2025-02-24T16:09:32.4884893Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4884984Z E           AssertionError: 
2025-02-24T16:09:32.4885099Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4885176Z E           
2025-02-24T16:09:32.4885273Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4885377Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4885475Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4885631Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4885718Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4885868Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4885959Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4885964Z 
2025-02-24T16:09:32.4886163Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4886558Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T16:09:32.4886569Z 
2025-02-24T16:09:32.4886849Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550890>
2025-02-24T16:09:32.4887162Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4887502Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05e723d9a0>
2025-02-24T16:09:32.4887910Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T16:09:32.4887915Z 
2025-02-24T16:09:32.4888013Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4888093Z         self,
2025-02-24T16:09:32.4888191Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4888286Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4888358Z         request,
2025-02-24T16:09:32.4888432Z     ):
2025-02-24T16:09:32.4888539Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4888832Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4888925Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4889100Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4889191Z             plot_object = getattr(
2025-02-24T16:09:32.4889318Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4889397Z             )
2025-02-24T16:09:32.4889496Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4889663Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4889774Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4889870Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4890003Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4890073Z                 )
2025-02-24T16:09:32.4890077Z 
2025-02-24T16:09:32.4890233Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4890345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4890355Z 
2025-02-24T16:09:32.4890824Z args = (<function assert_allclose.<locals>.compare at 0x7f05f0c1bd80>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4890934Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4891180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4891185Z 
2025-02-24T16:09:32.4891266Z     @wraps(func)
2025-02-24T16:09:32.4891353Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4891438Z         with self._recreate_cm():
2025-02-24T16:09:32.4891533Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4891617Z E           AssertionError: 
2025-02-24T16:09:32.4891729Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4891803Z E           
2025-02-24T16:09:32.4891910Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4892020Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4892123Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4892285Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4892375Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4892526Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4892612Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4892622Z 
2025-02-24T16:09:32.4892829Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4893059Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T16:09:32.4893064Z 
2025-02-24T16:09:32.4893336Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005509b0>
2025-02-24T16:09:32.4893660Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>
2025-02-24T16:09:32.4893999Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05eef6bf80>
2025-02-24T16:09:32.4894283Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T16:09:32.4894390Z 
2025-02-24T16:09:32.4894496Z     def test_calculate_plotting_data(
2025-02-24T16:09:32.4894567Z         self,
2025-02-24T16:09:32.4894670Z         plotter_calculate_plotting_data,
2025-02-24T16:09:32.4894759Z         calculate_plotting_data_hdf,
2025-02-24T16:09:32.4894839Z         request,
2025-02-24T16:09:32.4894914Z     ):
2025-02-24T16:09:32.4895020Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4895212Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T16:09:32.4895372Z         group = "plot_data_hdf/"
2025-02-24T16:09:32.4895551Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T16:09:32.4895635Z             plot_object = getattr(
2025-02-24T16:09:32.4895764Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T16:09:32.4895838Z             )
2025-02-24T16:09:32.4895937Z             if attribute_type == "attributes_np":
2025-02-24T16:09:32.4896108Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T16:09:32.4896213Z                     plot_object = plot_object.cgs.value
2025-02-24T16:09:32.4896470Z >               np.testing.assert_allclose(
2025-02-24T16:09:32.4896609Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T16:09:32.4896678Z                 )
2025-02-24T16:09:32.4896682Z 
2025-02-24T16:09:32.4896832Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T16:09:32.4896944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4896951Z 
2025-02-24T16:09:32.4897428Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14b2de0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T16:09:32.4897543Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4897797Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4897802Z 
2025-02-24T16:09:32.4897880Z     @wraps(func)
2025-02-24T16:09:32.4897964Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4898057Z         with self._recreate_cm():
2025-02-24T16:09:32.4898147Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4898235Z E           AssertionError: 
2025-02-24T16:09:32.4898351Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4898422Z E           
2025-02-24T16:09:32.4898529Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.4898628Z E           Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.4898732Z E           Max relative difference: 178.93768705
2025-02-24T16:09:32.4898887Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4898974Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4899127Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.4899212Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4899216Z 
2025-02-24T16:09:32.4899424Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4899631Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T16:09:32.4899641Z 
2025-02-24T16:09:32.4899917Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550d40>
2025-02-24T16:09:32.4900250Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d7acd640>
2025-02-24T16:09:32.4900348Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4900443Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4900547Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4900687Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4901067Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4901317Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T16:09:32.4901322Z 
2025-02-24T16:09:32.4901418Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4901590Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4901666Z     ):
2025-02-24T16:09:32.4901770Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4901878Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4902166Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4902236Z     
2025-02-24T16:09:32.4902353Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4902454Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4902605Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4902725Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4902794Z             )
2025-02-24T16:09:32.4902869Z     
2025-02-24T16:09:32.4902970Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4903081Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4903167Z             if data.stackgroup:
2025-02-24T16:09:32.4903250Z                 assert (
2025-02-24T16:09:32.4903341Z                     data.stackgroup
2025-02-24T16:09:32.4903418Z                     == getattr(
2025-02-24T16:09:32.4903536Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4903638Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4903723Z                     ).decode()
2025-02-24T16:09:32.4903794Z                 )
2025-02-24T16:09:32.4903879Z             if data.name:
2025-02-24T16:09:32.4903961Z                 assert (
2025-02-24T16:09:32.4904038Z                     data.name
2025-02-24T16:09:32.4904124Z                     == getattr(
2025-02-24T16:09:32.4904230Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4904333Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4904408Z                     ).decode()
2025-02-24T16:09:32.4904489Z                 )
2025-02-24T16:09:32.4904596Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4904730Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4904805Z             )
2025-02-24T16:09:32.4904900Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4905033Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4905102Z             )
2025-02-24T16:09:32.4905106Z 
2025-02-24T16:09:32.4905263Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4905382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4905386Z 
2025-02-24T16:09:32.4905869Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fa840>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4905976Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4906225Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4906236Z 
2025-02-24T16:09:32.4906538Z     @wraps(func)
2025-02-24T16:09:32.4906692Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4906781Z         with self._recreate_cm():
2025-02-24T16:09:32.4906881Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4906965Z E           AssertionError: 
2025-02-24T16:09:32.4907078Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4907155Z E           
2025-02-24T16:09:32.4907261Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4907370Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4907595Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4907754Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4907839Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4907988Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4908076Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4908080Z 
2025-02-24T16:09:32.4908285Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4908598Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T16:09:32.4908602Z 
2025-02-24T16:09:32.4908877Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600550e00>
2025-02-24T16:09:32.4909206Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05eabc7470>
2025-02-24T16:09:32.4909313Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4909401Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4909512Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4909610Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4909823Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4910077Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T16:09:32.4910082Z 
2025-02-24T16:09:32.4910170Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4910348Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4910419Z     ):
2025-02-24T16:09:32.4910524Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4910634Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4910816Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4910894Z     
2025-02-24T16:09:32.4911003Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4911103Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4911245Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4911360Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4911438Z             )
2025-02-24T16:09:32.4911507Z     
2025-02-24T16:09:32.4911616Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4911721Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4911820Z             if data.stackgroup:
2025-02-24T16:09:32.4911898Z                 assert (
2025-02-24T16:09:32.4911992Z                     data.stackgroup
2025-02-24T16:09:32.4912067Z                     == getattr(
2025-02-24T16:09:32.4912179Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4912284Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4912364Z                     ).decode()
2025-02-24T16:09:32.4912442Z                 )
2025-02-24T16:09:32.4912521Z             if data.name:
2025-02-24T16:09:32.4912604Z                 assert (
2025-02-24T16:09:32.4912681Z                     data.name
2025-02-24T16:09:32.4912763Z                     == getattr(
2025-02-24T16:09:32.4912874Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4912968Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4913053Z                     ).decode()
2025-02-24T16:09:32.4913123Z                 )
2025-02-24T16:09:32.4913225Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4913354Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4913430Z             )
2025-02-24T16:09:32.4913531Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4913651Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4913730Z             )
2025-02-24T16:09:32.4913823Z 
2025-02-24T16:09:32.4913973Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4914091Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4914096Z 
2025-02-24T16:09:32.4914581Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fb920>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4914683Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4914934Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4915050Z 
2025-02-24T16:09:32.4915125Z     @wraps(func)
2025-02-24T16:09:32.4915216Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4915305Z         with self._recreate_cm():
2025-02-24T16:09:32.4915396Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4915487Z E           AssertionError: 
2025-02-24T16:09:32.4915598Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4915673Z E           
2025-02-24T16:09:32.4915772Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4915879Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4915979Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4916129Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4916216Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4916474Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4916568Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4916572Z 
2025-02-24T16:09:32.4916782Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4916984Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T16:09:32.4916992Z 
2025-02-24T16:09:32.4917265Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551250>
2025-02-24T16:09:32.4917587Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d4406600>
2025-02-24T16:09:32.4917687Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4917778Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4917882Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4917982Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4918192Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4918437Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T16:09:32.4918442Z 
2025-02-24T16:09:32.4918533Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4918702Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4918778Z     ):
2025-02-24T16:09:32.4918873Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4918983Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4919158Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4919232Z     
2025-02-24T16:09:32.4919348Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4919447Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4919594Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4919699Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4919777Z             )
2025-02-24T16:09:32.4919845Z     
2025-02-24T16:09:32.4919948Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4920055Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4920140Z             if data.stackgroup:
2025-02-24T16:09:32.4920220Z                 assert (
2025-02-24T16:09:32.4920425Z                     data.stackgroup
2025-02-24T16:09:32.4920506Z                     == getattr(
2025-02-24T16:09:32.4920611Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4920712Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4920794Z                     ).decode()
2025-02-24T16:09:32.4920865Z                 )
2025-02-24T16:09:32.4920946Z             if data.name:
2025-02-24T16:09:32.4921020Z                 assert (
2025-02-24T16:09:32.4921102Z                     data.name
2025-02-24T16:09:32.4921176Z                     == getattr(
2025-02-24T16:09:32.4921393Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4921490Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4921565Z                     ).decode()
2025-02-24T16:09:32.4921639Z                 )
2025-02-24T16:09:32.4921731Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4921860Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4921933Z             )
2025-02-24T16:09:32.4922029Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4922153Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4922223Z             )
2025-02-24T16:09:32.4922227Z 
2025-02-24T16:09:32.4922381Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4922494Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4922499Z 
2025-02-24T16:09:32.4922979Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fb7e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4923087Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4923332Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4923337Z 
2025-02-24T16:09:32.4923419Z     @wraps(func)
2025-02-24T16:09:32.4923501Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4923592Z         with self._recreate_cm():
2025-02-24T16:09:32.4923680Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4923770Z E           AssertionError: 
2025-02-24T16:09:32.4923881Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4923952Z E           
2025-02-24T16:09:32.4924056Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4924160Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4924262Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4924416Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4924505Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4924654Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4924737Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4924745Z 
2025-02-24T16:09:32.4924953Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4925156Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T16:09:32.4925166Z 
2025-02-24T16:09:32.4925436Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551310>
2025-02-24T16:09:32.4925760Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05eef19970>
2025-02-24T16:09:32.4925858Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4925953Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4926054Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4926156Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4926497Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4926738Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T16:09:32.4926859Z 
2025-02-24T16:09:32.4926954Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4927124Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4927197Z     ):
2025-02-24T16:09:32.4927299Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4927404Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4927583Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4927650Z     
2025-02-24T16:09:32.4927863Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4927960Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4928108Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4928218Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4928288Z             )
2025-02-24T16:09:32.4928361Z     
2025-02-24T16:09:32.4928465Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4928576Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4928661Z             if data.stackgroup:
2025-02-24T16:09:32.4928742Z                 assert (
2025-02-24T16:09:32.4928831Z                     data.stackgroup
2025-02-24T16:09:32.4928906Z                     == getattr(
2025-02-24T16:09:32.4929017Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4929111Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4929192Z                     ).decode()
2025-02-24T16:09:32.4929266Z                 )
2025-02-24T16:09:32.4929351Z             if data.name:
2025-02-24T16:09:32.4929431Z                 assert (
2025-02-24T16:09:32.4929508Z                     data.name
2025-02-24T16:09:32.4929586Z                     == getattr(
2025-02-24T16:09:32.4929689Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4929784Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4929866Z                     ).decode()
2025-02-24T16:09:32.4929941Z                 )
2025-02-24T16:09:32.4930038Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4930170Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4930244Z             )
2025-02-24T16:09:32.4930336Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4930461Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4930530Z             )
2025-02-24T16:09:32.4930535Z 
2025-02-24T16:09:32.4930689Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4930806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4930811Z 
2025-02-24T16:09:32.4931281Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149b240>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T16:09:32.4931388Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4931638Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4931648Z 
2025-02-24T16:09:32.4931721Z     @wraps(func)
2025-02-24T16:09:32.4931809Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4931893Z         with self._recreate_cm():
2025-02-24T16:09:32.4931985Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4932068Z E           AssertionError: 
2025-02-24T16:09:32.4932180Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4932259Z E           
2025-02-24T16:09:32.4932358Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.4932465Z E           Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.4932561Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.4932718Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4932889Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4933041Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4933130Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4933134Z 
2025-02-24T16:09:32.4933340Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4933547Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T16:09:32.4933552Z 
2025-02-24T16:09:32.4933823Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005dbbf0>
2025-02-24T16:09:32.4934227Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05ff11b920>
2025-02-24T16:09:32.4934326Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4934414Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4934521Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4934622Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4934837Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4935085Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T16:09:32.4935091Z 
2025-02-24T16:09:32.4935176Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4935349Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4935417Z     ):
2025-02-24T16:09:32.4935520Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4935627Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4935805Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4935877Z     
2025-02-24T16:09:32.4935985Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4936085Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4936229Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4936443Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4936515Z             )
2025-02-24T16:09:32.4936586Z     
2025-02-24T16:09:32.4936691Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4936796Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4936886Z             if data.stackgroup:
2025-02-24T16:09:32.4936961Z                 assert (
2025-02-24T16:09:32.4937049Z                     data.stackgroup
2025-02-24T16:09:32.4937125Z                     == getattr(
2025-02-24T16:09:32.4937235Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4937336Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4937411Z                     ).decode()
2025-02-24T16:09:32.4937485Z                 )
2025-02-24T16:09:32.4937563Z             if data.name:
2025-02-24T16:09:32.4937647Z                 assert (
2025-02-24T16:09:32.4937722Z                     data.name
2025-02-24T16:09:32.4937804Z                     == getattr(
2025-02-24T16:09:32.4937912Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4938002Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4938081Z                     ).decode()
2025-02-24T16:09:32.4938150Z                 )
2025-02-24T16:09:32.4938247Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4938373Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4938451Z             )
2025-02-24T16:09:32.4938548Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4938672Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4938748Z             )
2025-02-24T16:09:32.4938752Z 
2025-02-24T16:09:32.4938897Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4939014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4939136Z 
2025-02-24T16:09:32.4939611Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffd580>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.4939711Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4939960Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4939965Z 
2025-02-24T16:09:32.4940039Z     @wraps(func)
2025-02-24T16:09:32.4940244Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4940334Z         with self._recreate_cm():
2025-02-24T16:09:32.4940422Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4940510Z E           AssertionError: 
2025-02-24T16:09:32.4940615Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4940690Z E           
2025-02-24T16:09:32.4940789Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.4940898Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.4941001Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.4941154Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4941244Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4941390Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4941480Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4941485Z 
2025-02-24T16:09:32.4941699Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4941901Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T16:09:32.4941905Z 
2025-02-24T16:09:32.4942178Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005db0e0>
2025-02-24T16:09:32.4942499Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05fe3fe6f0>
2025-02-24T16:09:32.4942602Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4942694Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4942797Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4942899Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4943106Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4943354Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T16:09:32.4943362Z 
2025-02-24T16:09:32.4943450Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4943623Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4943697Z     ):
2025-02-24T16:09:32.4943792Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4943903Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4944082Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4944154Z     
2025-02-24T16:09:32.4944263Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4944370Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4944516Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4944623Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4944696Z             )
2025-02-24T16:09:32.4944768Z     
2025-02-24T16:09:32.4944874Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4944985Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4945069Z             if data.stackgroup:
2025-02-24T16:09:32.4945151Z                 assert (
2025-02-24T16:09:32.4945235Z                     data.stackgroup
2025-02-24T16:09:32.4945316Z                     == getattr(
2025-02-24T16:09:32.4945420Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4945607Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4945689Z                     ).decode()
2025-02-24T16:09:32.4945758Z                 )
2025-02-24T16:09:32.4945839Z             if data.name:
2025-02-24T16:09:32.4945913Z                 assert (
2025-02-24T16:09:32.4945995Z                     data.name
2025-02-24T16:09:32.4946069Z                     == getattr(
2025-02-24T16:09:32.4946177Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4946372Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4946577Z                     ).decode()
2025-02-24T16:09:32.4946652Z                 )
2025-02-24T16:09:32.4946748Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4946880Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4946949Z             )
2025-02-24T16:09:32.4947044Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4947169Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4947242Z             )
2025-02-24T16:09:32.4947246Z 
2025-02-24T16:09:32.4947401Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4947518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4947523Z 
2025-02-24T16:09:32.4948003Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffc5e0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.4948156Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4948405Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4948410Z 
2025-02-24T16:09:32.4948492Z     @wraps(func)
2025-02-24T16:09:32.4948579Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4948672Z         with self._recreate_cm():
2025-02-24T16:09:32.4948766Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4948857Z E           AssertionError: 
2025-02-24T16:09:32.4948976Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4949047Z E           
2025-02-24T16:09:32.4949157Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.4949260Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.4949367Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.4949524Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4949626Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4949778Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4949866Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4949870Z 
2025-02-24T16:09:32.4950084Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4950296Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T16:09:32.4950307Z 
2025-02-24T16:09:32.4950580Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551640>
2025-02-24T16:09:32.4950908Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05fa3f40e0>
2025-02-24T16:09:32.4951005Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4951103Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4951208Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4951318Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4951534Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4951781Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T16:09:32.4951785Z 
2025-02-24T16:09:32.4951880Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4952168Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4952242Z     ):
2025-02-24T16:09:32.4952345Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4952454Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4952634Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4952702Z     
2025-02-24T16:09:32.4952819Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4952918Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4953067Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4953259Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4953331Z             )
2025-02-24T16:09:32.4953403Z     
2025-02-24T16:09:32.4953506Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4953618Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4953710Z             if data.stackgroup:
2025-02-24T16:09:32.4953790Z                 assert (
2025-02-24T16:09:32.4953880Z                     data.stackgroup
2025-02-24T16:09:32.4953956Z                     == getattr(
2025-02-24T16:09:32.4954070Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4954167Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4954250Z                     ).decode()
2025-02-24T16:09:32.4954321Z                 )
2025-02-24T16:09:32.4954403Z             if data.name:
2025-02-24T16:09:32.4954486Z                 assert (
2025-02-24T16:09:32.4954569Z                     data.name
2025-02-24T16:09:32.4954649Z                     == getattr(
2025-02-24T16:09:32.4954755Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4954857Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.4954933Z                     ).decode()
2025-02-24T16:09:32.4955008Z                 )
2025-02-24T16:09:32.4955111Z             np.testing.assert_allclose(
2025-02-24T16:09:32.4955244Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.4955319Z             )
2025-02-24T16:09:32.4955412Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.4955542Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.4955614Z             )
2025-02-24T16:09:32.4955618Z 
2025-02-24T16:09:32.4955775Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.4955896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.4955905Z 
2025-02-24T16:09:32.4956481Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14984a0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.4956590Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.4956838Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.4956857Z 
2025-02-24T16:09:32.4956932Z     @wraps(func)
2025-02-24T16:09:32.4957021Z     def inner(*args, **kwds):
2025-02-24T16:09:32.4957108Z         with self._recreate_cm():
2025-02-24T16:09:32.4957204Z >           return func(*args, **kwds)
2025-02-24T16:09:32.4957288Z E           AssertionError: 
2025-02-24T16:09:32.4957410Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.4957485Z E           
2025-02-24T16:09:32.4957588Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.4957695Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.4957794Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.4957955Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4958041Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4958194Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.4958402Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.4958407Z 
2025-02-24T16:09:32.4958614Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.4958823Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T16:09:32.4958827Z 
2025-02-24T16:09:32.4959101Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551700>
2025-02-24T16:09:32.4959429Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05ff84ec30>
2025-02-24T16:09:32.4959632Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.4959719Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.4959830Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.4959930Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T16:09:32.4960148Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.4960403Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T16:09:32.4960407Z 
2025-02-24T16:09:32.4960494Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.4960667Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.4960738Z     ):
2025-02-24T16:09:32.4960840Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.4960949Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.4961129Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.4961204Z     
2025-02-24T16:09:32.4961314Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.4961416Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.4961559Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.4961670Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.4961744Z             )
2025-02-24T16:09:32.4961818Z     
2025-02-24T16:09:32.4961921Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.4962028Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.4962117Z             if data.stackgroup:
2025-02-24T16:09:32.4962191Z                 assert (
2025-02-24T16:09:32.4962281Z                     data.stackgroup
2025-02-24T16:09:32.4962356Z                     == getattr(
2025-02-24T16:09:32.4962467Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.4962571Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.4962646Z                     ).decode()
2025-02-24T16:09:32.4962720Z                 )
2025-02-24T16:09:32.4962799Z             if data.name:
2025-02-24T16:09:32.4962879Z                 assert (
2025-02-24T16:09:32.4963677Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4963687Z 
2025-02-24T16:09:32.4964367Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T16:09:32.4964372Z 
2025-02-24T16:09:32.4964695Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4964700Z 
2025-02-24T16:09:32.4965373Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T16:09:32.4965382Z 
2025-02-24T16:09:32.4965703Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4965707Z 
2025-02-24T16:09:32.4966465Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T16:09:32.4966631Z 
2025-02-24T16:09:32.4966952Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4966957Z 
2025-02-24T16:09:32.4967624Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T16:09:32.4967629Z 
2025-02-24T16:09:32.4967940Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4968047Z 
2025-02-24T16:09:32.4968756Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T16:09:32.4968762Z 
2025-02-24T16:09:32.4969089Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4969093Z 
2025-02-24T16:09:32.4969800Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T16:09:32.4969811Z 
2025-02-24T16:09:32.4970122Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4970126Z 
2025-02-24T16:09:32.4970832Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T16:09:32.4970836Z 
2025-02-24T16:09:32.4971149Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4971162Z 
2025-02-24T16:09:32.4971821Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T16:09:32.4971826Z 
2025-02-24T16:09:32.4972142Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4972147Z 
2025-02-24T16:09:32.4972809Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T16:09:32.4972823Z 
2025-02-24T16:09:32.4973134Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4973138Z 
2025-02-24T16:09:32.4973798Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T16:09:32.4973806Z 
2025-02-24T16:09:32.4974118Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4974127Z 
2025-02-24T16:09:32.4974826Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T16:09:32.4974831Z 
2025-02-24T16:09:32.4975144Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4975151Z 
2025-02-24T16:09:32.4975814Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T16:09:32.4975824Z 
2025-02-24T16:09:32.4976134Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4976220Z 
2025-02-24T16:09:32.4977029Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T16:09:32.4977036Z 
2025-02-24T16:09:32.4977345Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4977354Z 
2025-02-24T16:09:32.4978038Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T16:09:32.4978150Z 
2025-02-24T16:09:32.4978466Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4978471Z 
2025-02-24T16:09:32.4979177Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T16:09:32.4979187Z 
2025-02-24T16:09:32.4979497Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4979501Z 
2025-02-24T16:09:32.4980168Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T16:09:32.4980175Z 
2025-02-24T16:09:32.4980492Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4980496Z 
2025-02-24T16:09:32.4981200Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T16:09:32.4981208Z 
2025-02-24T16:09:32.4981522Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4981526Z 
2025-02-24T16:09:32.4982228Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T16:09:32.4982233Z 
2025-02-24T16:09:32.4982542Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4982549Z 
2025-02-24T16:09:32.4983214Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T16:09:32.4983219Z 
2025-02-24T16:09:32.4983536Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4983543Z 
2025-02-24T16:09:32.4984188Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T16:09:32.4984193Z 
2025-02-24T16:09:32.4984506Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4984510Z 
2025-02-24T16:09:32.4985178Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T16:09:32.4985186Z 
2025-02-24T16:09:32.4985497Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4985501Z 
2025-02-24T16:09:32.4986207Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T16:09:32.4986426Z 
2025-02-24T16:09:32.4986754Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4986758Z 
2025-02-24T16:09:32.4987421Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T16:09:32.4987525Z 
2025-02-24T16:09:32.4987842Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4987847Z 
2025-02-24T16:09:32.4988548Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T16:09:32.4988555Z 
2025-02-24T16:09:32.4988867Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4988871Z 
2025-02-24T16:09:32.4989574Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T16:09:32.4989579Z 
2025-02-24T16:09:32.4989897Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4989904Z 
2025-02-24T16:09:32.4990605Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T16:09:32.4990611Z 
2025-02-24T16:09:32.4990927Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4990934Z 
2025-02-24T16:09:32.4991588Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T16:09:32.4991593Z 
2025-02-24T16:09:32.4991906Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4991910Z 
2025-02-24T16:09:32.4992581Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T16:09:32.4992589Z 
2025-02-24T16:09:32.4992905Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4992909Z 
2025-02-24T16:09:32.4993566Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T16:09:32.4993574Z 
2025-02-24T16:09:32.4993892Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4993897Z 
2025-02-24T16:09:32.4994551Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T16:09:32.4994559Z 
2025-02-24T16:09:32.4994871Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4994875Z 
2025-02-24T16:09:32.4995536Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T16:09:32.4995644Z 
2025-02-24T16:09:32.4995967Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4995971Z 
2025-02-24T16:09:32.4996742Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T16:09:32.4996748Z 
2025-02-24T16:09:32.4997067Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4997176Z 
2025-02-24T16:09:32.4997841Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T16:09:32.4997845Z 
2025-02-24T16:09:32.4998160Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4998168Z 
2025-02-24T16:09:32.4998822Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T16:09:32.4998826Z 
2025-02-24T16:09:32.4999146Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.4999150Z 
2025-02-24T16:09:32.4999850Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T16:09:32.4999857Z 
2025-02-24T16:09:32.5000176Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5000180Z 
2025-02-24T16:09:32.5000845Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T16:09:32.5000852Z 
2025-02-24T16:09:32.5001164Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5001168Z 
2025-02-24T16:09:32.5001830Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T16:09:32.5001835Z 
2025-02-24T16:09:32.5002153Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5002157Z 
2025-02-24T16:09:32.5002865Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T16:09:32.5002875Z 
2025-02-24T16:09:32.5003191Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5003195Z 
2025-02-24T16:09:32.5003896Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T16:09:32.5003901Z 
2025-02-24T16:09:32.5004213Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5004222Z 
2025-02-24T16:09:32.5004925Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T16:09:32.5004929Z 
2025-02-24T16:09:32.5005246Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T16:09:32.5005376Z 
2025-02-24T16:09:32.5006041Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T16:09:32.5006051Z 
2025-02-24T16:09:32.5006131Z                     data.name
2025-02-24T16:09:32.5006215Z                     == getattr(
2025-02-24T16:09:32.5006424Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5006528Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5006608Z                     ).decode()
2025-02-24T16:09:32.5006792Z                 )
2025-02-24T16:09:32.5006894Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5007026Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5007103Z             )
2025-02-24T16:09:32.5007195Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5007321Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5007397Z             )
2025-02-24T16:09:32.5007402Z 
2025-02-24T16:09:32.5007561Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5007684Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5007689Z 
2025-02-24T16:09:32.5008168Z args = (<function assert_allclose.<locals>.compare at 0x7f05f1499da0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T16:09:32.5008279Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5008536Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5008547Z 
2025-02-24T16:09:32.5008621Z     @wraps(func)
2025-02-24T16:09:32.5008715Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5008804Z         with self._recreate_cm():
2025-02-24T16:09:32.5008898Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5008986Z E           AssertionError: 
2025-02-24T16:09:32.5009102Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5009180Z E           
2025-02-24T16:09:32.5009282Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5009388Z E           Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5009488Z E           Max relative difference: 15766.1580412
2025-02-24T16:09:32.5009649Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5009737Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5009891Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5009981Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5009986Z 
2025-02-24T16:09:32.5010192Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5010406Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T16:09:32.5010414Z 
2025-02-24T16:09:32.5010687Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f06005517c0>
2025-02-24T16:09:32.5011020Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05c5c78ce0>
2025-02-24T16:09:32.5011123Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5011212Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5011320Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5011425Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5011648Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5011906Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T16:09:32.5011911Z 
2025-02-24T16:09:32.5011998Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5012173Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5012360Z     ):
2025-02-24T16:09:32.5012465Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5012575Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5012758Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5012830Z     
2025-02-24T16:09:32.5012943Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5013043Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5013188Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5013377Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5013447Z             )
2025-02-24T16:09:32.5013521Z     
2025-02-24T16:09:32.5013626Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5013731Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5013822Z             if data.stackgroup:
2025-02-24T16:09:32.5013901Z                 assert (
2025-02-24T16:09:32.5013991Z                     data.stackgroup
2025-02-24T16:09:32.5014067Z                     == getattr(
2025-02-24T16:09:32.5014180Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5014282Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5014361Z                     ).decode()
2025-02-24T16:09:32.5014438Z                 )
2025-02-24T16:09:32.5014519Z             if data.name:
2025-02-24T16:09:32.5014598Z                 assert (
2025-02-24T16:09:32.5014676Z                     data.name
2025-02-24T16:09:32.5014759Z                     == getattr(
2025-02-24T16:09:32.5014869Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5014963Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5015049Z                     ).decode()
2025-02-24T16:09:32.5015119Z                 )
2025-02-24T16:09:32.5015218Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5015350Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5015425Z             )
2025-02-24T16:09:32.5015522Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5015644Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5015719Z             )
2025-02-24T16:09:32.5015724Z 
2025-02-24T16:09:32.5015869Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5015992Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5016001Z 
2025-02-24T16:09:32.5016589Z args = (<function assert_allclose.<locals>.compare at 0x7f05cefff920>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5016692Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5016952Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5016960Z 
2025-02-24T16:09:32.5017035Z     @wraps(func)
2025-02-24T16:09:32.5017123Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5017215Z         with self._recreate_cm():
2025-02-24T16:09:32.5017305Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5017395Z E           AssertionError: 
2025-02-24T16:09:32.5017503Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5017580Z E           
2025-02-24T16:09:32.5017680Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5017789Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5017895Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5018052Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5018144Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5018294Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5018501Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5018506Z 
2025-02-24T16:09:32.5018719Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5018922Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T16:09:32.5018927Z 
2025-02-24T16:09:32.5019208Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551880>
2025-02-24T16:09:32.5019531Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05cdbeab40>
2025-02-24T16:09:32.5019733Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5019826Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5019929Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5020032Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5020243Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5020497Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T16:09:32.5020502Z 
2025-02-24T16:09:32.5020588Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5020766Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5020844Z     ):
2025-02-24T16:09:32.5020946Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5021060Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5021235Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5021312Z     
2025-02-24T16:09:32.5021424Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5021524Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5021675Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5021784Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5021865Z             )
2025-02-24T16:09:32.5021933Z     
2025-02-24T16:09:32.5022039Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5022149Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5022233Z             if data.stackgroup:
2025-02-24T16:09:32.5022313Z                 assert (
2025-02-24T16:09:32.5022398Z                     data.stackgroup
2025-02-24T16:09:32.5022480Z                     == getattr(
2025-02-24T16:09:32.5022587Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5022688Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5022773Z                     ).decode()
2025-02-24T16:09:32.5022843Z                 )
2025-02-24T16:09:32.5022926Z             if data.name:
2025-02-24T16:09:32.5023003Z                 assert (
2025-02-24T16:09:32.5023087Z                     data.name
2025-02-24T16:09:32.5023164Z                     == getattr(
2025-02-24T16:09:32.5023278Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5023374Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5023458Z                     ).decode()
2025-02-24T16:09:32.5023533Z                 )
2025-02-24T16:09:32.5023627Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5023762Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5023832Z             )
2025-02-24T16:09:32.5023931Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5024053Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5024131Z             )
2025-02-24T16:09:32.5024135Z 
2025-02-24T16:09:32.5024291Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5024409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5024414Z 
2025-02-24T16:09:32.5024890Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffca40>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5025086Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5025338Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5025343Z 
2025-02-24T16:09:32.5025422Z     @wraps(func)
2025-02-24T16:09:32.5025507Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5025599Z         with self._recreate_cm():
2025-02-24T16:09:32.5025687Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5025868Z E           AssertionError: 
2025-02-24T16:09:32.5025986Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5026058Z E           
2025-02-24T16:09:32.5026166Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5026371Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5026480Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5026640Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5026733Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5026883Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5026966Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5026970Z 
2025-02-24T16:09:32.5027182Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5027392Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T16:09:32.5027406Z 
2025-02-24T16:09:32.5027677Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551940>
2025-02-24T16:09:32.5028013Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d0f7a3c0>
2025-02-24T16:09:32.5028113Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5028206Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5028317Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5028426Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5028650Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5028899Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T16:09:32.5028904Z 
2025-02-24T16:09:32.5029000Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5029170Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5029250Z     ):
2025-02-24T16:09:32.5029357Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5029466Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5029651Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5029720Z     
2025-02-24T16:09:32.5029839Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5029939Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5030092Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5030210Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5030282Z             )
2025-02-24T16:09:32.5030358Z     
2025-02-24T16:09:32.5030460Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5030572Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5030660Z             if data.stackgroup:
2025-02-24T16:09:32.5030743Z                 assert (
2025-02-24T16:09:32.5030836Z                     data.stackgroup
2025-02-24T16:09:32.5030911Z                     == getattr(
2025-02-24T16:09:32.5031021Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5031117Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5031199Z                     ).decode()
2025-02-24T16:09:32.5031270Z                 )
2025-02-24T16:09:32.5031475Z             if data.name:
2025-02-24T16:09:32.5031554Z                 assert (
2025-02-24T16:09:32.5031631Z                     data.name
2025-02-24T16:09:32.5031713Z                     == getattr(
2025-02-24T16:09:32.5031819Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5031917Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5031993Z                     ).decode()
2025-02-24T16:09:32.5032069Z                 )
2025-02-24T16:09:32.5032167Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5032401Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5032478Z             )
2025-02-24T16:09:32.5032571Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5032699Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5032769Z             )
2025-02-24T16:09:32.5032773Z 
2025-02-24T16:09:32.5032925Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5033051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5033056Z 
2025-02-24T16:09:32.5033534Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffc400>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5033642Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5033893Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5033909Z 
2025-02-24T16:09:32.5033984Z     @wraps(func)
2025-02-24T16:09:32.5034075Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5034162Z         with self._recreate_cm():
2025-02-24T16:09:32.5034258Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5034345Z E           AssertionError: 
2025-02-24T16:09:32.5034464Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5034544Z E           
2025-02-24T16:09:32.5034646Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5034758Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5034856Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5035016Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5035102Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5035255Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5035347Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5035355Z 
2025-02-24T16:09:32.5035561Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5035774Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T16:09:32.5035778Z 
2025-02-24T16:09:32.5036053Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551a00>
2025-02-24T16:09:32.5036487Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05cdbeb920>
2025-02-24T16:09:32.5036592Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5036681Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5036794Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5036893Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5037111Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5037498Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T16:09:32.5037503Z 
2025-02-24T16:09:32.5037623Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5044200Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5044301Z     ):
2025-02-24T16:09:32.5044411Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5044697Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5044888Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5044959Z     
2025-02-24T16:09:32.5045077Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5045175Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5045323Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5045435Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5045506Z             )
2025-02-24T16:09:32.5045733Z     
2025-02-24T16:09:32.5045843Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5045952Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5046038Z             if data.stackgroup:
2025-02-24T16:09:32.5046114Z                 assert (
2025-02-24T16:09:32.5046197Z                     data.stackgroup
2025-02-24T16:09:32.5046422Z                     == getattr(
2025-02-24T16:09:32.5046545Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5046650Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5046728Z                     ).decode()
2025-02-24T16:09:32.5046796Z                 )
2025-02-24T16:09:32.5046880Z             if data.name:
2025-02-24T16:09:32.5046953Z                 assert (
2025-02-24T16:09:32.5047036Z                     data.name
2025-02-24T16:09:32.5047111Z                     == getattr(
2025-02-24T16:09:32.5047223Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5047328Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5047405Z                     ).decode()
2025-02-24T16:09:32.5047484Z                 )
2025-02-24T16:09:32.5047582Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5047725Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5047799Z             )
2025-02-24T16:09:32.5047904Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5048035Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5048106Z             )
2025-02-24T16:09:32.5048110Z 
2025-02-24T16:09:32.5048305Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5048428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5048433Z 
2025-02-24T16:09:32.5048920Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149a160>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T16:09:32.5049036Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5049294Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5049298Z 
2025-02-24T16:09:32.5049379Z     @wraps(func)
2025-02-24T16:09:32.5049469Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5049566Z         with self._recreate_cm():
2025-02-24T16:09:32.5049662Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5049749Z E           AssertionError: 
2025-02-24T16:09:32.5049869Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5049941Z E           
2025-02-24T16:09:32.5050049Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5050153Z E           Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5050261Z E           Max relative difference: 3.01858991
2025-02-24T16:09:32.5050428Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5050521Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5050677Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5050762Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5050767Z 
2025-02-24T16:09:32.5050986Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5051328Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T16:09:32.5051334Z 
2025-02-24T16:09:32.5051612Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551ac0>
2025-02-24T16:09:32.5051951Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d0d3b560>
2025-02-24T16:09:32.5052054Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5052152Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5052366Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5052472Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5052700Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5052954Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T16:09:32.5052962Z 
2025-02-24T16:09:32.5053059Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5053237Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5053316Z     ):
2025-02-24T16:09:32.5053419Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5053531Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5053714Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5053783Z     
2025-02-24T16:09:32.5053908Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5054015Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5054167Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5054289Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5054360Z             )
2025-02-24T16:09:32.5054434Z     
2025-02-24T16:09:32.5054536Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5054649Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5054746Z             if data.stackgroup:
2025-02-24T16:09:32.5054823Z                 assert (
2025-02-24T16:09:32.5054915Z                     data.stackgroup
2025-02-24T16:09:32.5054992Z                     == getattr(
2025-02-24T16:09:32.5055109Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5055209Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5055294Z                     ).decode()
2025-02-24T16:09:32.5055373Z                 )
2025-02-24T16:09:32.5055451Z             if data.name:
2025-02-24T16:09:32.5055537Z                 assert (
2025-02-24T16:09:32.5055615Z                     data.name
2025-02-24T16:09:32.5055699Z                     == getattr(
2025-02-24T16:09:32.5055805Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5055906Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5055988Z                     ).decode()
2025-02-24T16:09:32.5056062Z                 )
2025-02-24T16:09:32.5056165Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5056405Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5056483Z             )
2025-02-24T16:09:32.5056579Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5056711Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5056787Z             )
2025-02-24T16:09:32.5056791Z 
2025-02-24T16:09:32.5056943Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5057072Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5057076Z 
2025-02-24T16:09:32.5057560Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffe0c0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5057668Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5058049Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5058054Z 
2025-02-24T16:09:32.5058132Z     @wraps(func)
2025-02-24T16:09:32.5058223Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5058311Z         with self._recreate_cm():
2025-02-24T16:09:32.5058408Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5058495Z E           AssertionError: 
2025-02-24T16:09:32.5058612Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5058690Z E           
2025-02-24T16:09:32.5058894Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5059000Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5059097Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5059257Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5059351Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5059501Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5059592Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5059597Z 
2025-02-24T16:09:32.5059808Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5060025Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T16:09:32.5060030Z 
2025-02-24T16:09:32.5060311Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551b80>
2025-02-24T16:09:32.5060640Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d72a1eb0>
2025-02-24T16:09:32.5060745Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5060833Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5060942Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5061043Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5061262Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5061519Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T16:09:32.5061524Z 
2025-02-24T16:09:32.5061610Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5061792Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5061863Z     ):
2025-02-24T16:09:32.5061966Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5062082Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5062265Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5062340Z     
2025-02-24T16:09:32.5062453Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5062556Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5062703Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5062821Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5062897Z             )
2025-02-24T16:09:32.5062966Z     
2025-02-24T16:09:32.5063072Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5063179Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5063271Z             if data.stackgroup:
2025-02-24T16:09:32.5063348Z                 assert (
2025-02-24T16:09:32.5063442Z                     data.stackgroup
2025-02-24T16:09:32.5063525Z                     == getattr(
2025-02-24T16:09:32.5063638Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5063743Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5063820Z                     ).decode()
2025-02-24T16:09:32.5063898Z                 )
2025-02-24T16:09:32.5063976Z             if data.name:
2025-02-24T16:09:32.5064056Z                 assert (
2025-02-24T16:09:32.5064140Z                     data.name
2025-02-24T16:09:32.5064306Z                     == getattr(
2025-02-24T16:09:32.5064417Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5064509Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5064591Z                     ).decode()
2025-02-24T16:09:32.5064663Z                 )
2025-02-24T16:09:32.5064762Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5064897Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5064968Z             )
2025-02-24T16:09:32.5065069Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5065268Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5065344Z             )
2025-02-24T16:09:32.5065348Z 
2025-02-24T16:09:32.5065495Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5065615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5065620Z 
2025-02-24T16:09:32.5066106Z args = (<function assert_allclose.<locals>.compare at 0x7f05f14fbec0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5066208Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5066566Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5066573Z 
2025-02-24T16:09:32.5066654Z     @wraps(func)
2025-02-24T16:09:32.5066740Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5066831Z         with self._recreate_cm():
2025-02-24T16:09:32.5066926Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5067016Z E           AssertionError: 
2025-02-24T16:09:32.5067127Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5067206Z E           
2025-02-24T16:09:32.5067312Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5067414Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5067519Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5067673Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5067764Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5067913Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5068003Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5068008Z 
2025-02-24T16:09:32.5068221Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5068432Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T16:09:32.5068436Z 
2025-02-24T16:09:32.5068716Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551c40>
2025-02-24T16:09:32.5069040Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05d13d8770>
2025-02-24T16:09:32.5069149Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5069244Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5069349Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5069454Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5069666Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5069928Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T16:09:32.5069933Z 
2025-02-24T16:09:32.5070028Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5070199Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5070274Z     ):
2025-02-24T16:09:32.5070371Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5070489Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5070665Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5070881Z     
2025-02-24T16:09:32.5070997Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5071095Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5071246Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5071356Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5071432Z             )
2025-02-24T16:09:32.5071501Z     
2025-02-24T16:09:32.5071609Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5071722Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5071913Z             if data.stackgroup:
2025-02-24T16:09:32.5071995Z                 assert (
2025-02-24T16:09:32.5072080Z                     data.stackgroup
2025-02-24T16:09:32.5072162Z                     == getattr(
2025-02-24T16:09:32.5072269Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5072372Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5072460Z                     ).decode()
2025-02-24T16:09:32.5072530Z                 )
2025-02-24T16:09:32.5072610Z             if data.name:
2025-02-24T16:09:32.5072691Z                 assert (
2025-02-24T16:09:32.5072776Z                     data.name
2025-02-24T16:09:32.5072851Z                     == getattr(
2025-02-24T16:09:32.5072961Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5073057Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5073133Z                     ).decode()
2025-02-24T16:09:32.5073211Z                 )
2025-02-24T16:09:32.5073305Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5073440Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5073512Z             )
2025-02-24T16:09:32.5073610Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5073739Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5073813Z             )
2025-02-24T16:09:32.5073818Z 
2025-02-24T16:09:32.5073969Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5074081Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5074085Z 
2025-02-24T16:09:32.5074560Z args = (<function assert_allclose.<locals>.compare at 0x7f05f149b240>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5074665Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5074916Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5074920Z 
2025-02-24T16:09:32.5075000Z     @wraps(func)
2025-02-24T16:09:32.5075085Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5075180Z         with self._recreate_cm():
2025-02-24T16:09:32.5075274Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5075362Z E           AssertionError: 
2025-02-24T16:09:32.5075475Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5075548Z E           
2025-02-24T16:09:32.5075652Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5075752Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5075855Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5076009Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5076094Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5076249Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5076436Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5076441Z 
2025-02-24T16:09:32.5076651Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5076862Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T16:09:32.5076980Z 
2025-02-24T16:09:32.5077251Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f0600551d00>
2025-02-24T16:09:32.5077580Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f05fe511f70>
2025-02-24T16:09:32.5077675Z plotter_generate_plot_ply = (Figure({
2025-02-24T16:09:32.5077769Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T16:09:32.5077876Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T16:09:32.5077974Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T16:09:32.5078294Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f05d6b4ccb0>)
2025-02-24T16:09:32.5078547Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T16:09:32.5078552Z 
2025-02-24T16:09:32.5078643Z     def test_generate_plot_mpl(
2025-02-24T16:09:32.5078813Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T16:09:32.5078891Z     ):
2025-02-24T16:09:32.5078994Z         fig, _ = plotter_generate_plot_ply
2025-02-24T16:09:32.5079102Z         regression_data = RegressionData(request)
2025-02-24T16:09:32.5079278Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T16:09:32.5079346Z     
2025-02-24T16:09:32.5079464Z         for item in ["_species_name", "_color_list"]:
2025-02-24T16:09:32.5079560Z             np.testing.assert_array_equal(
2025-02-24T16:09:32.5079711Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T16:09:32.5079827Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T16:09:32.5079907Z             )
2025-02-24T16:09:32.5079974Z     
2025-02-24T16:09:32.5080083Z         for index, data in enumerate(fig.data):
2025-02-24T16:09:32.5080194Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T16:09:32.5080279Z             if data.stackgroup:
2025-02-24T16:09:32.5080359Z                 assert (
2025-02-24T16:09:32.5080447Z                     data.stackgroup
2025-02-24T16:09:32.5080527Z                     == getattr(
2025-02-24T16:09:32.5080632Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5080733Z                         "_" + str(index) + "stackgroup",
2025-02-24T16:09:32.5080814Z                     ).decode()
2025-02-24T16:09:32.5080884Z                 )
2025-02-24T16:09:32.5080968Z             if data.name:
2025-02-24T16:09:32.5081041Z                 assert (
2025-02-24T16:09:32.5081121Z                     data.name
2025-02-24T16:09:32.5081200Z                     == getattr(
2025-02-24T16:09:32.5081307Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T16:09:32.5081403Z                         "_" + str(index) + "name",
2025-02-24T16:09:32.5081479Z                     ).decode()
2025-02-24T16:09:32.5081556Z                 )
2025-02-24T16:09:32.5081650Z             np.testing.assert_allclose(
2025-02-24T16:09:32.5081781Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T16:09:32.5081855Z             )
2025-02-24T16:09:32.5081952Z >           np.testing.assert_allclose(
2025-02-24T16:09:32.5082078Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T16:09:32.5082147Z             )
2025-02-24T16:09:32.5082151Z 
2025-02-24T16:09:32.5082301Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T16:09:32.5082412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T16:09:32.5082416Z 
2025-02-24T16:09:32.5082890Z args = (<function assert_allclose.<locals>.compare at 0x7f05ceffe8e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T16:09:32.5082999Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T16:09:32.5083244Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T16:09:32.5083335Z 
2025-02-24T16:09:32.5083416Z     @wraps(func)
2025-02-24T16:09:32.5083499Z     def inner(*args, **kwds):
2025-02-24T16:09:32.5083591Z         with self._recreate_cm():
2025-02-24T16:09:32.5083684Z >           return func(*args, **kwds)
2025-02-24T16:09:32.5083768Z E           AssertionError: 
2025-02-24T16:09:32.5083880Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5083951Z E           
2025-02-24T16:09:32.5084055Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5084153Z E           Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5084329Z E           Max relative difference: 15766.15804934
2025-02-24T16:09:32.5084487Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5084572Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5084723Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5084807Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5084814Z 
2025-02-24T16:09:32.5085023Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T16:09:32.5085144Z =============================== warnings summary ===============================
2025-02-24T16:09:32.5085262Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:09:32.5085382Z tardis/io/configuration/config_validator.py:6
2025-02-24T16:09:32.5085692Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T16:09:32.5085773Z   
2025-02-24T16:09:32.5087033Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T16:09:32.5087050Z 
2025-02-24T16:09:32.5087292Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T16:09:32.5087660Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T16:09:32.5087729Z   
2025-02-24T16:09:32.5087889Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T16:09:32.5088053Z   given by the platformdirs library.  To remove this warning and
2025-02-24T16:09:32.5088222Z   see the appropriate new directories, set the environment variable
2025-02-24T16:09:32.5088376Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T16:09:32.5088533Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T16:09:32.5088538Z 
2025-02-24T16:09:32.5092921Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T16:09:32.5093228Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5093467Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T16:09:32.5093542Z   
2025-02-24T16:09:32.5093611Z   
2025-02-24T16:09:32.5093832Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:09:32.5094099Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:09:32.5094105Z 
2025-02-24T16:09:32.5094317Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T16:09:32.5094545Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T16:09:32.5094784Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T16:09:32.5094973Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T16:09:32.5095291Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T16:09:32.5095534Z   
2025-02-24T16:09:32.5095662Z   The current CMFGEN model parser is deprecated
2025-02-24T16:09:32.5095667Z 
2025-02-24T16:09:32.5095782Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T16:09:32.5095966Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T16:09:32.5096434Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T16:09:32.5096514Z   
2025-02-24T16:09:32.5096625Z   The current CMFGEN model parser is deprecated
2025-02-24T16:09:32.5096635Z 
2025-02-24T16:09:32.5096851Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T16:09:32.5097383Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T16:09:32.5097454Z   
2025-02-24T16:09:32.5097903Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T16:09:32.5097908Z 
2025-02-24T16:09:32.5098018Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:09:32.5098152Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:09:32.5098339Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:09:32.5098615Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T16:09:32.5098690Z   
2025-02-24T16:09:32.5098800Z   v_inner_boundary < 0, assuming default value
2025-02-24T16:09:32.5098805Z 
2025-02-24T16:09:32.5098909Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T16:09:32.5099027Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T16:09:32.5099207Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T16:09:32.5099477Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T16:09:32.5099544Z   
2025-02-24T16:09:32.5099651Z   v_outer_boundary < 0, assuming default value
2025-02-24T16:09:32.5099656Z 
2025-02-24T16:09:32.5100136Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T16:09:32.5100447Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T16:09:32.5100524Z   
2025-02-24T16:09:32.5100806Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T16:09:32.5101267Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T16:09:32.5101344Z   
2025-02-24T16:09:32.5101881Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T16:09:32.5101887Z 
2025-02-24T16:09:32.5102113Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T16:09:32.5102326Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T16:09:32.5102538Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T16:09:32.5102784Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T16:09:32.5102852Z   
2025-02-24T16:09:32.5103052Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T16:09:32.5103057Z 
2025-02-24T16:09:32.5103271Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:09:32.5103484Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T16:09:32.5103557Z   
2025-02-24T16:09:32.5103888Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T16:09:32.5103894Z 
2025-02-24T16:09:32.5104111Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T16:09:32.5104434Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T16:09:32.5104507Z   
2025-02-24T16:09:32.5104859Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T16:09:32.5104869Z 
2025-02-24T16:09:32.5105081Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T16:09:32.5105204Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T16:09:32.5105271Z   
2025-02-24T16:09:32.5106445Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T16:09:32.5106650Z   Exception origin:
2025-02-24T16:09:32.5106912Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T16:09:32.5107014Z       raise TypeError(msg) from None
2025-02-24T16:09:32.5107113Z   [0m[0m
2025-02-24T16:09:32.5107118Z 
2025-02-24T16:09:32.5107461Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T16:09:32.5107746Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T16:09:32.5107819Z   
2025-02-24T16:09:32.5108691Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T16:09:32.5108700Z 
2025-02-24T16:09:32.5109063Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5109421Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5109779Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5110127Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5110476Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5110823Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5111192Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:09:32.5111266Z   
2025-02-24T16:09:32.5111461Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T16:09:32.5111644Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:09:32.5111888Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:09:32.5111893Z 
2025-02-24T16:09:32.5112250Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5112610Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5112969Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:09:32.5113045Z   
2025-02-24T16:09:32.5113222Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T16:09:32.5113400Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:09:32.5113643Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:09:32.5113647Z 
2025-02-24T16:09:32.5114118Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T16:09:32.5114477Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T16:09:32.5114544Z   
2025-02-24T16:09:32.5114729Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T16:09:32.5114907Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T16:09:32.5115141Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T16:09:32.5115219Z 
2025-02-24T16:09:32.5115663Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T16:09:32.5115994Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-02-24T16:09:32.5116067Z   
2025-02-24T16:09:32.5116461Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T16:09:32.5116468Z 
2025-02-24T16:09:32.5116731Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5116950Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T16:09:32.5117018Z   
2025-02-24T16:09:32.5117095Z   
2025-02-24T16:09:32.5117308Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:09:32.5117573Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T16:09:32.5117581Z 
2025-02-24T16:09:32.5117852Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5118058Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T16:09:32.5118131Z   
2025-02-24T16:09:32.5118201Z   
2025-02-24T16:09:32.5118413Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T16:09:32.5118598Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T16:09:32.5118603Z 
2025-02-24T16:09:32.5118859Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T16:09:32.5119111Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T16:09:32.5119179Z   
2025-02-24T16:09:32.5119374Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T16:09:32.5119382Z 
2025-02-24T16:09:32.5119577Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T16:09:32.5119582Z 
2025-02-24T16:09:32.5119749Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-24T16:09:32.5119877Z Coverage HTML written to dir coverage_html_report
2025-02-24T16:09:32.5119981Z Coverage XML written to file coverage.xml
2025-02-24T16:09:32.5119989Z 
2025-02-24T16:09:32.5120122Z =========================== short test summary info ============================
2025-02-24T16:09:32.5120540Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T16:09:32.5120545Z 
2025-02-24T16:09:32.5120678Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T16:09:32.5120799Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.5120870Z        ...
2025-02-24T16:09:32.5120963Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.5121093Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.5121206Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T16:09:32.5121279Z        ...
2025-02-24T16:09:32.5121360Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T16:09:32.5121479Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T16:09:32.5121585Z At positional index 54, first diff: 14 != 12
2025-02-24T16:09:32.5121994Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T16:09:32.5122099Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5122103Z 
2025-02-24T16:09:32.5122200Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.5122297Z Max absolute difference: 0.99984222
2025-02-24T16:09:32.5122390Z Max relative difference: 6337.12154973
2025-02-24T16:09:32.5122480Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5122565Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5122777Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5122867Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5122942Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5123024Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5123638Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T16:09:32.5124143Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5124149Z 
2025-02-24T16:09:32.5124282Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5124390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5124465Z        ...
2025-02-24T16:09:32.5124549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5124688Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5124802Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5124870Z        ...
2025-02-24T16:09:32.5124961Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5125088Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5125197Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5125723Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5125734Z 
2025-02-24T16:09:32.5125827Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5126204Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5126656Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5126997Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5127513Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5127521Z 
2025-02-24T16:09:32.5127617Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5127985Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5128477Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5128975Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5129465Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5129475Z 
2025-02-24T16:09:32.5129601Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5129716Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5129784Z        ...
2025-02-24T16:09:32.5129877Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5130007Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5130120Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5130193Z        ...
2025-02-24T16:09:32.5130274Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5130401Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5130500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5131035Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5131041Z 
2025-02-24T16:09:32.5131170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5131276Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5131350Z        ...
2025-02-24T16:09:32.5131430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5131556Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5131666Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5131740Z        ...
2025-02-24T16:09:32.5131826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5131944Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5132048Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5132535Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5132540Z 
2025-02-24T16:09:32.5132670Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5132780Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5132848Z        ...
2025-02-24T16:09:32.5132936Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5133056Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5133172Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5133243Z        ...
2025-02-24T16:09:32.5133328Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5133452Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5133551Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5134076Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5134169Z 
2025-02-24T16:09:32.5134294Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5134403Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5134476Z        ...
2025-02-24T16:09:32.5134555Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5134680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5134786Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5134932Z        ...
2025-02-24T16:09:32.5135012Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5135137Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5135239Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5135760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5135768Z 
2025-02-24T16:09:32.5135893Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5135996Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5136069Z        ...
2025-02-24T16:09:32.5136154Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5136380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5136492Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5136560Z        ...
2025-02-24T16:09:32.5136649Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5136767Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5136869Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5137378Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5137387Z 
2025-02-24T16:09:32.5137508Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5137615Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5137684Z        ...
2025-02-24T16:09:32.5137772Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5137897Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5138003Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5138077Z        ...
2025-02-24T16:09:32.5138157Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5138286Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5138385Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5138869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5138875Z 
2025-02-24T16:09:32.5139002Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5139109Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5139183Z        ...
2025-02-24T16:09:32.5139261Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5139389Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5139502Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5139571Z        ...
2025-02-24T16:09:32.5139654Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5139774Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5139880Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5140373Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5140385Z 
2025-02-24T16:09:32.5140478Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5140969Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5141300Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5141735Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5142237Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5142242Z 
2025-02-24T16:09:32.5142343Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5142708Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5143090Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5143471Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5143941Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5143946Z 
2025-02-24T16:09:32.5144076Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5144191Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5144260Z        ...
2025-02-24T16:09:32.5144346Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5144469Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5144582Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5144650Z        ...
2025-02-24T16:09:32.5144736Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5144863Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5144964Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5145483Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5145488Z 
2025-02-24T16:09:32.5145610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5145805Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5145879Z        ...
2025-02-24T16:09:32.5145959Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5146084Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5146190Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5146379Z        ...
2025-02-24T16:09:32.5146464Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5146591Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5146691Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5147275Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5147280Z 
2025-02-24T16:09:32.5147408Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5147513Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5147591Z        ...
2025-02-24T16:09:32.5147675Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5147797Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5147909Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5147977Z        ...
2025-02-24T16:09:32.5148062Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5148210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5148314Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5148817Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5148826Z 
2025-02-24T16:09:32.5148947Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5149057Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5149125Z        ...
2025-02-24T16:09:32.5149214Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5149339Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5149447Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5149519Z        ...
2025-02-24T16:09:32.5149600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5149725Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5149822Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5150325Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5150332Z 
2025-02-24T16:09:32.5150458Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5150561Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5150635Z        ...
2025-02-24T16:09:32.5150716Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5150843Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5150953Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5151022Z        ...
2025-02-24T16:09:32.5151107Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5151226Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5151330Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5151811Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5151823Z 
2025-02-24T16:09:32.5151945Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5152052Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5152120Z        ...
2025-02-24T16:09:32.5152206Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5152324Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5152571Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5152644Z        ...
2025-02-24T16:09:32.5152725Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5152849Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5152947Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5153428Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5153506Z 
2025-02-24T16:09:32.5153632Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5153735Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5153807Z        ...
2025-02-24T16:09:32.5153887Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5154012Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5154118Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5154197Z        ...
2025-02-24T16:09:32.5154281Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5154399Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5154500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5154987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5154993Z 
2025-02-24T16:09:32.5155091Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5155467Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5155798Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5156133Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5156733Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5156743Z 
2025-02-24T16:09:32.5156836Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5157210Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5157587Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5157962Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5158549Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5158554Z 
2025-02-24T16:09:32.5158781Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5158887Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5158961Z        ...
2025-02-24T16:09:32.5159047Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5159169Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5159280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5159352Z        ...
2025-02-24T16:09:32.5159437Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5159594Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5159775Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5160429Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5160435Z 
2025-02-24T16:09:32.5160559Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5160672Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5160741Z        ...
2025-02-24T16:09:32.5160826Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5160953Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5161061Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5161138Z        ...
2025-02-24T16:09:32.5161217Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5161342Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5161445Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5161920Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5161925Z 
2025-02-24T16:09:32.5162053Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5162159Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5162236Z        ...
2025-02-24T16:09:32.5162320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5162448Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5162563Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5162633Z        ...
2025-02-24T16:09:32.5162721Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5162843Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5162947Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5163440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5163453Z 
2025-02-24T16:09:32.5163574Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5163683Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5163755Z        ...
2025-02-24T16:09:32.5163840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5163959Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5164072Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5164145Z        ...
2025-02-24T16:09:32.5164227Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5164446Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5164543Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5165046Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5165051Z 
2025-02-24T16:09:32.5165178Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5165281Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5165354Z        ...
2025-02-24T16:09:32.5165434Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5165640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5165746Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5165819Z        ...
2025-02-24T16:09:32.5165904Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5166023Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5166130Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5166733Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5166739Z 
2025-02-24T16:09:32.5166867Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5166974Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5167042Z        ...
2025-02-24T16:09:32.5167126Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5167251Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5167361Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5167429Z        ...
2025-02-24T16:09:32.5167515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5167641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5167743Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5168259Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5168264Z 
2025-02-24T16:09:32.5168385Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5168492Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5168565Z        ...
2025-02-24T16:09:32.5168647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5168776Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5168886Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5168959Z        ...
2025-02-24T16:09:32.5169040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5169163Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5169266Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5169790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5169798Z 
2025-02-24T16:09:32.5169897Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5170264Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5170599Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5171055Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5171584Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5171687Z 
2025-02-24T16:09:32.5171781Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5172148Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5172527Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5172903Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5173403Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5173408Z 
2025-02-24T16:09:32.5173537Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5173643Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5173717Z        ...
2025-02-24T16:09:32.5173804Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5173926Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5174041Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5174112Z        ...
2025-02-24T16:09:32.5174204Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5174332Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5174439Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5174987Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5174995Z 
2025-02-24T16:09:32.5175127Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5175244Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5175314Z        ...
2025-02-24T16:09:32.5175406Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5175536Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5175647Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5175725Z        ...
2025-02-24T16:09:32.5175808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5175934Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5176034Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5176676Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5176817Z 
2025-02-24T16:09:32.5176956Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5177061Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5177134Z        ...
2025-02-24T16:09:32.5177217Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5177344Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5177459Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5177629Z        ...
2025-02-24T16:09:32.5177713Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5177835Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5177937Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5178469Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5178483Z 
2025-02-24T16:09:32.5178611Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5178722Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5178790Z        ...
2025-02-24T16:09:32.5178877Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5178998Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5179112Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5179185Z        ...
2025-02-24T16:09:32.5179270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5179395Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5179493Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5180026Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5180034Z 
2025-02-24T16:09:32.5180164Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5180268Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5180341Z        ...
2025-02-24T16:09:32.5180422Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5180548Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5180656Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5180730Z        ...
2025-02-24T16:09:32.5180820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5180944Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5181045Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5181559Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5181565Z 
2025-02-24T16:09:32.5181696Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5181807Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5181877Z        ...
2025-02-24T16:09:32.5181963Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5182086Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5182198Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5182268Z        ...
2025-02-24T16:09:32.5182356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5182480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5182580Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5183163Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5183168Z 
2025-02-24T16:09:32.5183292Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5183510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5183584Z        ...
2025-02-24T16:09:32.5183663Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5183792Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5183898Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5183971Z        ...
2025-02-24T16:09:32.5184051Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5184174Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5184354Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5184951Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5184957Z 
2025-02-24T16:09:32.5185058Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5185430Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5185766Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5186105Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5186848Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5186854Z 
2025-02-24T16:09:32.5186949Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5187319Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5187698Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5188074Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5188647Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5188767Z 
2025-02-24T16:09:32.5188902Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5189009Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5189083Z        ...
2025-02-24T16:09:32.5189165Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5189296Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5189410Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5189479Z        ...
2025-02-24T16:09:32.5189567Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5189802Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5189909Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5190518Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5190526Z 
2025-02-24T16:09:32.5190650Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5190759Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5190828Z        ...
2025-02-24T16:09:32.5190916Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5191043Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5191149Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5191222Z        ...
2025-02-24T16:09:32.5191304Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5191437Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5191537Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5192108Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5192113Z 
2025-02-24T16:09:32.5192242Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5192349Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5192423Z        ...
2025-02-24T16:09:32.5192504Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5192631Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5192743Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5192811Z        ...
2025-02-24T16:09:32.5192898Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5193019Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5193126Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5193726Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5193736Z 
2025-02-24T16:09:32.5193859Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5193975Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5194044Z        ...
2025-02-24T16:09:32.5194132Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5194257Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5194369Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5194442Z        ...
2025-02-24T16:09:32.5194523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5194650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5194753Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5195352Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5195357Z 
2025-02-24T16:09:32.5195489Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5195695Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5195769Z        ...
2025-02-24T16:09:32.5195849Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5195975Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5196082Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5196155Z        ...
2025-02-24T16:09:32.5196243Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5196466Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5196699Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5197276Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5197281Z 
2025-02-24T16:09:32.5197409Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5197520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5197592Z        ...
2025-02-24T16:09:32.5197680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5197801Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5197913Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5197981Z        ...
2025-02-24T16:09:32.5198066Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5198192Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5198292Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5198837Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5198842Z 
2025-02-24T16:09:32.5198965Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5199077Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5199165Z        ...
2025-02-24T16:09:32.5199250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5199380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5199488Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5199563Z        ...
2025-02-24T16:09:32.5199645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5199780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5199889Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5200442Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5200451Z 
2025-02-24T16:09:32.5200558Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5200930Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5201268Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5201606Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5202280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5202286Z 
2025-02-24T16:09:32.5202380Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5202752Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5203205Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5203586Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5204117Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5204123Z 
2025-02-24T16:09:32.5204260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5204371Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5204452Z        ...
2025-02-24T16:09:32.5204541Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5204677Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5204795Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5204869Z        ...
2025-02-24T16:09:32.5204958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5205082Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5205194Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5205769Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5205775Z 
2025-02-24T16:09:32.5205903Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5206020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5206094Z        ...
2025-02-24T16:09:32.5206185Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5206415Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5206529Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5206605Z        ...
2025-02-24T16:09:32.5206688Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5206816Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5206916Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5207444Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5207452Z 
2025-02-24T16:09:32.5207584Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5207693Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5207770Z        ...
2025-02-24T16:09:32.5207967Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5208096Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5208212Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5208283Z        ...
2025-02-24T16:09:32.5208369Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5208489Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5208595Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5209150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5209261Z 
2025-02-24T16:09:32.5209386Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5209496Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5209565Z        ...
2025-02-24T16:09:32.5209652Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5209780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5209897Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5209972Z        ...
2025-02-24T16:09:32.5210052Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5210178Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5210280Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5210839Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5210848Z 
2025-02-24T16:09:32.5210973Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5211083Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5211158Z        ...
2025-02-24T16:09:32.5211239Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5211372Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5211480Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5211556Z        ...
2025-02-24T16:09:32.5211639Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5211769Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5211879Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5212413Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5212420Z 
2025-02-24T16:09:32.5212551Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5212660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5212736Z        ...
2025-02-24T16:09:32.5212825Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5212946Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5213063Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5213133Z        ...
2025-02-24T16:09:32.5213223Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5213345Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5213455Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5213997Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5214006Z 
2025-02-24T16:09:32.5214131Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5214246Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5214316Z        ...
2025-02-24T16:09:32.5214404Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5214531Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5214641Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5214812Z        ...
2025-02-24T16:09:32.5214897Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5215026Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5215133Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5215685Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5215690Z 
2025-02-24T16:09:32.5215794Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5216239Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5216675Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5217012Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5217571Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5217579Z 
2025-02-24T16:09:32.5217675Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5218045Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5218421Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5218799Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5219326Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5219334Z 
2025-02-24T16:09:32.5219462Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5219569Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5219645Z        ...
2025-02-24T16:09:32.5219728Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5219859Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5220090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5220160Z        ...
2025-02-24T16:09:32.5220251Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5220373Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5220477Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5221045Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5221174Z 
2025-02-24T16:09:32.5221302Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5221416Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5221487Z        ...
2025-02-24T16:09:32.5221575Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5221700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5221813Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5221892Z        ...
2025-02-24T16:09:32.5221974Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5222105Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5222205Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5222736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5222741Z 
2025-02-24T16:09:32.5222871Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5222981Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5223058Z        ...
2025-02-24T16:09:32.5223140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5223269Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5223379Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5223458Z        ...
2025-02-24T16:09:32.5223545Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5223667Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5223773Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5224333Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5224338Z 
2025-02-24T16:09:32.5224468Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5224583Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5224655Z        ...
2025-02-24T16:09:32.5224744Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5224871Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5224987Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5225057Z        ...
2025-02-24T16:09:32.5225146Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5225272Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5225373Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5225938Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5225943Z 
2025-02-24T16:09:32.5226068Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5226178Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5226257Z        ...
2025-02-24T16:09:32.5226467Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5226595Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5226703Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5226777Z        ...
2025-02-24T16:09:32.5226857Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5227100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5227206Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5227743Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5227748Z 
2025-02-24T16:09:32.5227879Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5227987Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5228167Z        ...
2025-02-24T16:09:32.5228257Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5228381Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5228496Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5228568Z        ...
2025-02-24T16:09:32.5228655Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5228781Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5228887Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5229460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5229465Z 
2025-02-24T16:09:32.5229591Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5229705Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5229776Z        ...
2025-02-24T16:09:32.5229868Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5229999Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5230109Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5230184Z        ...
2025-02-24T16:09:32.5230268Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5230400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5230504Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5231087Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5231092Z 
2025-02-24T16:09:32.5231192Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5231557Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5231894Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5232233Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5232815Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5232820Z 
2025-02-24T16:09:32.5232916Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5233285Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5234084Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5234531Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5235092Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5235097Z 
2025-02-24T16:09:32.5235224Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5235334Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5235413Z        ...
2025-02-24T16:09:32.5235495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5235626Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5235740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5235811Z        ...
2025-02-24T16:09:32.5235898Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5236026Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5236133Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5236826Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5236837Z 
2025-02-24T16:09:32.5236964Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5237075Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5237146Z        ...
2025-02-24T16:09:32.5237237Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5237358Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5237475Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5237551Z        ...
2025-02-24T16:09:32.5237634Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5237767Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5237871Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5238429Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5238435Z 
2025-02-24T16:09:32.5238568Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5238674Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5238750Z        ...
2025-02-24T16:09:32.5238831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5238965Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5239075Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5239150Z        ...
2025-02-24T16:09:32.5239238Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5239362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5239589Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5240175Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5240180Z 
2025-02-24T16:09:32.5240310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5240423Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5240495Z        ...
2025-02-24T16:09:32.5240586Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5240811Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5240925Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5240995Z        ...
2025-02-24T16:09:32.5241083Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5241210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5241314Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5241906Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5241911Z 
2025-02-24T16:09:32.5242036Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5242149Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5242224Z        ...
2025-02-24T16:09:32.5242307Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5242438Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5242548Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5242625Z        ...
2025-02-24T16:09:32.5242708Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5242838Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5242945Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5243516Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5243522Z 
2025-02-24T16:09:32.5243652Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5243758Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5243836Z        ...
2025-02-24T16:09:32.5243925Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5244049Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5244168Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5244240Z        ...
2025-02-24T16:09:32.5244329Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5244450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5244557Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5245092Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5245100Z 
2025-02-24T16:09:32.5245225Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5245339Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5245409Z        ...
2025-02-24T16:09:32.5245497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5245623Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5245733Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5245807Z        ...
2025-02-24T16:09:32.5245887Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5246015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5246115Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5246764Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5246919Z 
2025-02-24T16:09:32.5247021Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5247405Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5247838Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5248201Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5248748Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5248763Z 
2025-02-24T16:09:32.5248856Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5249226Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5249603Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5249989Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5250516Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5250521Z 
2025-02-24T16:09:32.5250649Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5250757Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5250835Z        ...
2025-02-24T16:09:32.5250919Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5251051Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5251170Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5251241Z        ...
2025-02-24T16:09:32.5251330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5251451Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5251557Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5252115Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5252209Z 
2025-02-24T16:09:32.5252335Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5252448Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5252516Z        ...
2025-02-24T16:09:32.5252605Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5252731Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5252846Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5252994Z        ...
2025-02-24T16:09:32.5253076Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5253203Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5253303Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5253832Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5253840Z 
2025-02-24T16:09:32.5253971Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5254077Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5254152Z        ...
2025-02-24T16:09:32.5254234Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5254362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5254471Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5254553Z        ...
2025-02-24T16:09:32.5254643Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5254763Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5254868Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5255424Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5255431Z 
2025-02-24T16:09:32.5255559Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5255671Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5255740Z        ...
2025-02-24T16:09:32.5255828Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5255953Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5256065Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5256133Z        ...
2025-02-24T16:09:32.5256236Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5256486Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5256589Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5257129Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5257138Z 
2025-02-24T16:09:32.5257263Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5257378Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5257456Z        ...
2025-02-24T16:09:32.5257539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5257667Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5257777Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5257856Z        ...
2025-02-24T16:09:32.5257939Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5258072Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5258177Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5258719Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5258839Z 
2025-02-24T16:09:32.5258975Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5259082Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5259162Z        ...
2025-02-24T16:09:32.5259252Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5259374Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5259487Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5259560Z        ...
2025-02-24T16:09:32.5259646Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5259871Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5259977Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5260536Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5260541Z 
2025-02-24T16:09:32.5260634Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5261006Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5261338Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5261670Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5262233Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5262238Z 
2025-02-24T16:09:32.5262337Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5262700Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5263083Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5263464Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5263996Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5264078Z 
2025-02-24T16:09:32.5264205Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5264318Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5264385Z        ...
2025-02-24T16:09:32.5264474Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5264605Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5264715Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5264788Z        ...
2025-02-24T16:09:32.5264869Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5265073Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5265172Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5265750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5265758Z 
2025-02-24T16:09:32.5265889Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5271808Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5271917Z        ...
2025-02-24T16:09:32.5272025Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5272176Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5272304Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5272377Z        ...
2025-02-24T16:09:32.5272470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5272615Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5272725Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5273293Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5273299Z 
2025-02-24T16:09:32.5273436Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5273560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5273636Z        ...
2025-02-24T16:09:32.5273725Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5273857Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5273968Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5274041Z        ...
2025-02-24T16:09:32.5274124Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5274256Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5274371Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5274945Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5274950Z 
2025-02-24T16:09:32.5275087Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5275202Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5275276Z        ...
2025-02-24T16:09:32.5275368Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5275497Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5275613Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5275682Z        ...
2025-02-24T16:09:32.5275768Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5275889Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5275997Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5276744Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5276751Z 
2025-02-24T16:09:32.5276878Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5276990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5277247Z        ...
2025-02-24T16:09:32.5277336Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5277464Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5277573Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5277646Z        ...
2025-02-24T16:09:32.5277725Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5277850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5277948Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5278604Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5278609Z 
2025-02-24T16:09:32.5278738Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5278843Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5278926Z        ...
2025-02-24T16:09:32.5279007Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5279134Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5279247Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5279316Z        ...
2025-02-24T16:09:32.5279401Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5279519Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5279623Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5280163Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5280178Z 
2025-02-24T16:09:32.5280300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5280409Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5280477Z        ...
2025-02-24T16:09:32.5280567Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5280688Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5280804Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5280879Z        ...
2025-02-24T16:09:32.5280958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5281082Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5281181Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5281753Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5281761Z 
2025-02-24T16:09:32.5281862Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5282237Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5282577Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5282915Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5283568Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5283573Z 
2025-02-24T16:09:32.5283673Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5284043Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5284486Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5284872Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5285406Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5285411Z 
2025-02-24T16:09:32.5285542Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5285654Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5285734Z        ...
2025-02-24T16:09:32.5285823Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5285961Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5286077Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5286155Z        ...
2025-02-24T16:09:32.5286247Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5286479Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5286591Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5287164Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5287174Z 
2025-02-24T16:09:32.5287310Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5287430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5287501Z        ...
2025-02-24T16:09:32.5287593Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5287719Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5287834Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5287904Z        ...
2025-02-24T16:09:32.5287995Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5288121Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5288224Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5288760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5288768Z 
2025-02-24T16:09:32.5288897Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5289011Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5289089Z        ...
2025-02-24T16:09:32.5289173Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5289421Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5289529Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5289603Z        ...
2025-02-24T16:09:32.5289685Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5289812Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5289918Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5290480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5290588Z 
2025-02-24T16:09:32.5290724Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5290831Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5290907Z        ...
2025-02-24T16:09:32.5290995Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5291118Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5291232Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5291302Z        ...
2025-02-24T16:09:32.5291391Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5291510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5291614Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5292176Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5292184Z 
2025-02-24T16:09:32.5292303Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5292413Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5292482Z        ...
2025-02-24T16:09:32.5292573Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5292702Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5292813Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5292889Z        ...
2025-02-24T16:09:32.5292969Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5293095Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5293195Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5293750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5293758Z 
2025-02-24T16:09:32.5293887Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5293991Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5294066Z        ...
2025-02-24T16:09:32.5294147Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5294274Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5294391Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5294460Z        ...
2025-02-24T16:09:32.5294549Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5294669Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5294775Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5295311Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5295325Z 
2025-02-24T16:09:32.5295460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5295577Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5295645Z        ...
2025-02-24T16:09:32.5295732Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5295857Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5295971Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5296137Z        ...
2025-02-24T16:09:32.5296218Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5296442Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5296545Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5297121Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5297126Z 
2025-02-24T16:09:32.5297219Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5297722Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5298060Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5298393Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5298954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5298962Z 
2025-02-24T16:09:32.5299064Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5299435Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5299809Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5300193Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5300727Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5300735Z 
2025-02-24T16:09:32.5300864Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5300978Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5301052Z        ...
2025-02-24T16:09:32.5301136Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5301268Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5301488Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5301564Z        ...
2025-02-24T16:09:32.5301647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5301774Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5301880Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5302445Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5302450Z 
2025-02-24T16:09:32.5302663Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5302770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5302846Z        ...
2025-02-24T16:09:32.5302934Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5303058Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5303172Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5303246Z        ...
2025-02-24T16:09:32.5303336Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5303458Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5303562Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5304098Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5304103Z 
2025-02-24T16:09:32.5304224Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5304340Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5304409Z        ...
2025-02-24T16:09:32.5304497Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5304625Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5304732Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5304812Z        ...
2025-02-24T16:09:32.5304894Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5305022Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5305120Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5305692Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5305698Z 
2025-02-24T16:09:32.5305828Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5305936Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5306012Z        ...
2025-02-24T16:09:32.5306094Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5306225Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5306447Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5306519Z        ...
2025-02-24T16:09:32.5306610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5306732Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5306840Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5307401Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5307412Z 
2025-02-24T16:09:32.5307534Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5307644Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5307718Z        ...
2025-02-24T16:09:32.5307806Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5307929Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5308041Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5308117Z        ...
2025-02-24T16:09:32.5308197Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5308439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5308537Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5309088Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5309094Z 
2025-02-24T16:09:32.5309222Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5309324Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5309528Z        ...
2025-02-24T16:09:32.5309608Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5309733Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5309839Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5309915Z        ...
2025-02-24T16:09:32.5310001Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5310128Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5310230Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5310775Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5310780Z 
2025-02-24T16:09:32.5310909Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5311017Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5311086Z        ...
2025-02-24T16:09:32.5311176Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5311295Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5311407Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5311476Z        ...
2025-02-24T16:09:32.5311565Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5311692Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5311794Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5312360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5312365Z 
2025-02-24T16:09:32.5312459Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5312840Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5313179Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5313511Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5314080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5314085Z 
2025-02-24T16:09:32.5314182Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5314546Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5315011Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5315464Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5316002Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5316007Z 
2025-02-24T16:09:32.5316133Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5316244Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5316430Z        ...
2025-02-24T16:09:32.5316516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5316648Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5316755Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5316830Z        ...
2025-02-24T16:09:32.5316912Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5317039Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5317149Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5317725Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5317730Z 
2025-02-24T16:09:32.5317859Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5317964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5318038Z        ...
2025-02-24T16:09:32.5318130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5318252Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5318365Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5318435Z        ...
2025-02-24T16:09:32.5318521Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5318642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5318750Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5319286Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5319291Z 
2025-02-24T16:09:32.5319426Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5319539Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5319609Z        ...
2025-02-24T16:09:32.5319697Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5319823Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5319943Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5320012Z        ...
2025-02-24T16:09:32.5320100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5320230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5320450Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5321024Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5321029Z 
2025-02-24T16:09:32.5321153Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5321266Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5321343Z        ...
2025-02-24T16:09:32.5321423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5321671Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5321781Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5321857Z        ...
2025-02-24T16:09:32.5321940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5322066Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5322171Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5322741Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5322746Z 
2025-02-24T16:09:32.5322873Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5322977Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5323055Z        ...
2025-02-24T16:09:32.5323140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5323260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5323378Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5323447Z        ...
2025-02-24T16:09:32.5323532Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5323650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5323759Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5324312Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5324321Z 
2025-02-24T16:09:32.5324442Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5324553Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5324622Z        ...
2025-02-24T16:09:32.5324708Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5324834Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5324943Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5325021Z        ...
2025-02-24T16:09:32.5325102Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5325225Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5325326Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5325913Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5325922Z 
2025-02-24T16:09:32.5326049Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5326152Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5326225Z        ...
2025-02-24T16:09:32.5326409Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5326537Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5326649Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5326722Z        ...
2025-02-24T16:09:32.5326808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5326930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5327035Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5327621Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5327747Z 
2025-02-24T16:09:32.5327842Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5328219Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5328646Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5328982Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5329575Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5329583Z 
2025-02-24T16:09:32.5329684Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5330050Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5330428Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5330809Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5331374Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5331385Z 
2025-02-24T16:09:32.5331509Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5331620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5331690Z        ...
2025-02-24T16:09:32.5331778Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5331906Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5332020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5332095Z        ...
2025-02-24T16:09:32.5332178Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5332308Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5332410Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5333099Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5333104Z 
2025-02-24T16:09:32.5333231Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5333338Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5333414Z        ...
2025-02-24T16:09:32.5333498Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5333626Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5333807Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5333886Z        ...
2025-02-24T16:09:32.5333973Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5334095Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5334202Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5334772Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5334777Z 
2025-02-24T16:09:32.5334909Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5335020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5335088Z        ...
2025-02-24T16:09:32.5335176Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5335300Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5335417Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5335488Z        ...
2025-02-24T16:09:32.5335579Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5335708Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5335807Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5336651Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5336661Z 
2025-02-24T16:09:32.5336831Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T16:09:32.5337203Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5341847Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.5346843Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T16:09:32.5347053Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T16:09:32.5347686Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5347695Z 
2025-02-24T16:09:32.5347826Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5347939Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5348008Z        ...
2025-02-24T16:09:32.5348097Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5348251Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5348371Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5348440Z        ...
2025-02-24T16:09:32.5348527Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5348658Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5348760Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5349357Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5349366Z 
2025-02-24T16:09:32.5349489Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5349600Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5349675Z        ...
2025-02-24T16:09:32.5349758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5350023Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5350130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5350203Z        ...
2025-02-24T16:09:32.5350284Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5350411Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5350516Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5351103Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5351211Z 
2025-02-24T16:09:32.5351343Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5351452Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5351528Z        ...
2025-02-24T16:09:32.5351614Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5351740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5351851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5351920Z        ...
2025-02-24T16:09:32.5352007Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5352128Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5352235Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5352819Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5352828Z 
2025-02-24T16:09:32.5352954Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5353065Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5353135Z        ...
2025-02-24T16:09:32.5353224Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5353351Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5353465Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5353542Z        ...
2025-02-24T16:09:32.5353623Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5353748Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5353847Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5354407Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5354415Z 
2025-02-24T16:09:32.5354542Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5354645Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5354719Z        ...
2025-02-24T16:09:32.5354801Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5354937Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5355080Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5355151Z        ...
2025-02-24T16:09:32.5355239Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5355360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5355464Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5356033Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5356051Z 
2025-02-24T16:09:32.5356148Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5356624Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5357073Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5357417Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5358100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5358109Z 
2025-02-24T16:09:32.5358209Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5358573Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5358956Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5359343Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5359891Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5359908Z 
2025-02-24T16:09:32.5360038Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5360153Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5360222Z        ...
2025-02-24T16:09:32.5360319Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5360446Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5360563Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5360642Z        ...
2025-02-24T16:09:32.5360725Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5360854Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5360957Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5361547Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5361556Z 
2025-02-24T16:09:32.5361686Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5361793Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5361866Z        ...
2025-02-24T16:09:32.5361949Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5362160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5362266Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5362340Z        ...
2025-02-24T16:09:32.5362427Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5362545Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5362651Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5363200Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5363300Z 
2025-02-24T16:09:32.5363431Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5363540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5363610Z        ...
2025-02-24T16:09:32.5363700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5363826Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5363938Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5364007Z        ...
2025-02-24T16:09:32.5364095Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5364225Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5364323Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5365020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5365029Z 
2025-02-24T16:09:32.5365199Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.5365575Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5370633Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5375721Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5376018Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.5376722Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5376729Z 
2025-02-24T16:09:32.5376858Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5376971Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5377040Z        ...
2025-02-24T16:09:32.5377130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5377259Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5377373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5377443Z        ...
2025-02-24T16:09:32.5377529Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5377657Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5377758Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5378345Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5378351Z 
2025-02-24T16:09:32.5378475Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5378586Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5378662Z        ...
2025-02-24T16:09:32.5378743Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5378876Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5378986Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5379064Z        ...
2025-02-24T16:09:32.5379146Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5379278Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5379529Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5380102Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5380107Z 
2025-02-24T16:09:32.5380237Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5380343Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5380418Z        ...
2025-02-24T16:09:32.5380506Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5380759Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5380871Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5380939Z        ...
2025-02-24T16:09:32.5381027Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5381151Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5381259Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5381828Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5381833Z 
2025-02-24T16:09:32.5381955Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5382067Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5382139Z        ...
2025-02-24T16:09:32.5382229Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5382363Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5382472Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5382548Z        ...
2025-02-24T16:09:32.5382630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5382760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5382859Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5383359Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5383364Z 
2025-02-24T16:09:32.5383494Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5383597Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5383673Z        ...
2025-02-24T16:09:32.5383757Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5383887Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5384007Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5384077Z        ...
2025-02-24T16:09:32.5384166Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5384287Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5384397Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5384893Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5384906Z 
2025-02-24T16:09:32.5385000Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5385373Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5385706Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5386126Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5386760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5386873Z 
2025-02-24T16:09:32.5386977Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5387340Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5387720Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5388102Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5388583Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5388594Z 
2025-02-24T16:09:32.5388719Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5388830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5388900Z        ...
2025-02-24T16:09:32.5388988Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5389112Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5389228Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5389303Z        ...
2025-02-24T16:09:32.5389385Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5389514Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5389613Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5390133Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5390139Z 
2025-02-24T16:09:32.5390268Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5390372Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5390446Z        ...
2025-02-24T16:09:32.5390529Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5390658Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5390768Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5390844Z        ...
2025-02-24T16:09:32.5390932Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5391055Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5391163Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5391637Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5391839Z 
2025-02-24T16:09:32.5391972Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5392081Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5392151Z        ...
2025-02-24T16:09:32.5392238Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5392361Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5392472Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5392621Z        ...
2025-02-24T16:09:32.5392710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5392837Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5392937Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5393554Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5393563Z 
2025-02-24T16:09:32.5393730Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T16:09:32.5394106Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5399156Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5404124Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T16:09:32.5404541Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T16:09:32.5405082Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5405090Z 
2025-02-24T16:09:32.5405221Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5405335Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5405404Z        ...
2025-02-24T16:09:32.5405499Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5405628Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5405739Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5405808Z        ...
2025-02-24T16:09:32.5405898Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5406025Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5406123Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5406731Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5406740Z 
2025-02-24T16:09:32.5406865Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5406974Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5407047Z        ...
2025-02-24T16:09:32.5407130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5407261Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5407368Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5407440Z        ...
2025-02-24T16:09:32.5407520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5407645Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5407748Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5408249Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5408256Z 
2025-02-24T16:09:32.5408383Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5408487Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5408560Z        ...
2025-02-24T16:09:32.5408645Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5408767Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5408996Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5409064Z        ...
2025-02-24T16:09:32.5409148Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5409268Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5409371Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5409868Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5409977Z 
2025-02-24T16:09:32.5410101Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5410211Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5410280Z        ...
2025-02-24T16:09:32.5410364Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5410493Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5410604Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5410678Z        ...
2025-02-24T16:09:32.5410758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5410884Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5410983Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5411492Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5411497Z 
2025-02-24T16:09:32.5411628Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5411731Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5411806Z        ...
2025-02-24T16:09:32.5411886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5412010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5412122Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5412193Z        ...
2025-02-24T16:09:32.5412279Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5412431Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5412607Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5413364Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5413375Z 
2025-02-24T16:09:32.5413471Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5413847Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5414179Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5414516Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5415039Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5415145Z 
2025-02-24T16:09:32.5415245Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5415609Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5415985Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5416551Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5417047Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5417058Z 
2025-02-24T16:09:32.5417184Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5417294Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5417364Z        ...
2025-02-24T16:09:32.5417453Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5417577Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5417689Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5417766Z        ...
2025-02-24T16:09:32.5417847Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5417974Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5418072Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5418599Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5418605Z 
2025-02-24T16:09:32.5418736Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5418844Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5418917Z        ...
2025-02-24T16:09:32.5418998Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5419125Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5419232Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5419309Z        ...
2025-02-24T16:09:32.5419395Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5419519Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5419623Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5420114Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5420119Z 
2025-02-24T16:09:32.5420246Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5420356Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5420428Z        ...
2025-02-24T16:09:32.5420516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5420639Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5420753Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5420820Z        ...
2025-02-24T16:09:32.5420907Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5421155Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5421254Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5421779Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5421784Z 
2025-02-24T16:09:32.5421906Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5422014Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5422192Z        ...
2025-02-24T16:09:32.5422274Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5422398Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5422504Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5422577Z        ...
2025-02-24T16:09:32.5422657Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5422790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5422898Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5423422Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5423427Z 
2025-02-24T16:09:32.5423554Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5423660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5423734Z        ...
2025-02-24T16:09:32.5423819Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5423946Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5424056Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5424129Z        ...
2025-02-24T16:09:32.5424217Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5424336Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5424441Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5424949Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5424955Z 
2025-02-24T16:09:32.5425076Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5425187Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5425256Z        ...
2025-02-24T16:09:32.5425343Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5425469Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5425581Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5425656Z        ...
2025-02-24T16:09:32.5425737Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5425861Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5425962Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5426558Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5426564Z 
2025-02-24T16:09:32.5426691Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5426795Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5426869Z        ...
2025-02-24T16:09:32.5426948Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5427074Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5427189Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5427262Z        ...
2025-02-24T16:09:32.5427345Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5427465Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5427569Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5428188Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5428193Z 
2025-02-24T16:09:32.5428290Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5428658Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5429106Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5429442Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5429954Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5429962Z 
2025-02-24T16:09:32.5430061Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5430423Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5430801Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5431179Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5431656Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5431661Z 
2025-02-24T16:09:32.5431789Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5431898Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5431967Z        ...
2025-02-24T16:09:32.5432054Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5432177Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5432291Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5432360Z        ...
2025-02-24T16:09:32.5432448Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5432574Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5432672Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5433272Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5433277Z 
2025-02-24T16:09:32.5433402Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5433511Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5433584Z        ...
2025-02-24T16:09:32.5433665Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5433794Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5433977Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5434051Z        ...
2025-02-24T16:09:32.5434131Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5434256Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5434359Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5434843Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5434852Z 
2025-02-24T16:09:32.5434980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5435086Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5435159Z        ...
2025-02-24T16:09:32.5435244Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5435367Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5435483Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5435556Z        ...
2025-02-24T16:09:32.5435644Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5435765Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5435869Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5436489Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5436498Z 
2025-02-24T16:09:32.5436624Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5436731Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5436801Z        ...
2025-02-24T16:09:32.5436886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5437013Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5437118Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5437194Z        ...
2025-02-24T16:09:32.5437273Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5437401Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5437500Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5438019Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5438028Z 
2025-02-24T16:09:32.5438156Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5438260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5438333Z        ...
2025-02-24T16:09:32.5438416Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5438551Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5438663Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5438731Z        ...
2025-02-24T16:09:32.5438817Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5438940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5439043Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5439534Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5439661Z 
2025-02-24T16:09:32.5439785Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5439893Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5439962Z        ...
2025-02-24T16:09:32.5440049Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5440173Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5440283Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5440357Z        ...
2025-02-24T16:09:32.5440438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5440664Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5440761Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5441291Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5441296Z 
2025-02-24T16:09:32.5441427Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5441532Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5441607Z        ...
2025-02-24T16:09:32.5441692Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5441816Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5441921Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5441995Z        ...
2025-02-24T16:09:32.5442080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5442201Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5442308Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5442852Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5442857Z 
2025-02-24T16:09:32.5442957Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5443332Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5443659Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5443998Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5444553Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5444558Z 
2025-02-24T16:09:32.5444650Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5445018Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5445398Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5445892Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5446578Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5446587Z 
2025-02-24T16:09:32.5446717Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5446827Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5446897Z        ...
2025-02-24T16:09:32.5446986Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5447109Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5447222Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5447290Z        ...
2025-02-24T16:09:32.5447381Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5447512Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5447614Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5448179Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5448184Z 
2025-02-24T16:09:32.5448335Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5448448Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5448522Z        ...
2025-02-24T16:09:32.5448602Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5448730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5448835Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5448909Z        ...
2025-02-24T16:09:32.5448988Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5449113Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5449219Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5449734Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5449739Z 
2025-02-24T16:09:32.5449870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5449977Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5450051Z        ...
2025-02-24T16:09:32.5450136Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5450257Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5450369Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5450437Z        ...
2025-02-24T16:09:32.5450523Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5450642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5450745Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5451299Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5451304Z 
2025-02-24T16:09:32.5451425Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5451533Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5451735Z        ...
2025-02-24T16:09:32.5451825Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5451953Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5452059Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5452132Z        ...
2025-02-24T16:09:32.5452211Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5452335Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5452432Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5453086Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5453091Z 
2025-02-24T16:09:32.5453218Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5453319Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5453397Z        ...
2025-02-24T16:09:32.5453477Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5453604Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5453717Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5453785Z        ...
2025-02-24T16:09:32.5453870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5453989Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5454092Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5454624Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5454638Z 
2025-02-24T16:09:32.5454760Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5454869Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5454938Z        ...
2025-02-24T16:09:32.5455026Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5455146Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5455258Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5455331Z        ...
2025-02-24T16:09:32.5455411Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5455536Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5455634Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5456229Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5456237Z 
2025-02-24T16:09:32.5456469Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5456576Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5456651Z        ...
2025-02-24T16:09:32.5456731Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5456863Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5456968Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5457042Z        ...
2025-02-24T16:09:32.5457127Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5457247Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5457349Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5457959Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5457967Z 
2025-02-24T16:09:32.5458064Z Series values are different (4.04858 %)
2025-02-24T16:09:32.5458438Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5458885Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5459318Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T16:09:32.5459931Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T16:09:32.5459935Z 
2025-02-24T16:09:32.5460026Z Series values are different (6.47773 %)
2025-02-24T16:09:32.5460394Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5460776Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5461152Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T16:09:32.5461736Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5461741Z 
2025-02-24T16:09:32.5461871Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5461985Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5462058Z        ...
2025-02-24T16:09:32.5462145Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5462268Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5462381Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5462451Z        ...
2025-02-24T16:09:32.5462540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5462667Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5462765Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5463382Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5463390Z 
2025-02-24T16:09:32.5463514Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5463626Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5463785Z        ...
2025-02-24T16:09:32.5463867Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5463996Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5464104Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5464178Z        ...
2025-02-24T16:09:32.5464259Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5464385Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5464489Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5465065Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5465149Z 
2025-02-24T16:09:32.5465277Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5465383Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5465469Z        ...
2025-02-24T16:09:32.5465557Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5465677Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5465787Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5465855Z        ...
2025-02-24T16:09:32.5465941Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5466062Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5466168Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5466921Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5466930Z 
2025-02-24T16:09:32.5467053Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5467164Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5467233Z        ...
2025-02-24T16:09:32.5467318Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5467450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5467557Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5467630Z        ...
2025-02-24T16:09:32.5467712Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5467838Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5467935Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5468548Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5468557Z 
2025-02-24T16:09:32.5468685Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5468789Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5468864Z        ...
2025-02-24T16:09:32.5468944Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5469073Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5469186Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5469256Z        ...
2025-02-24T16:09:32.5469341Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5469462Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5469570Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5470159Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T16:09:32.5470173Z 
2025-02-24T16:09:32.5470295Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T16:09:32.5470405Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5470474Z        ...
2025-02-24T16:09:32.5470559Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5470798Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5470909Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T16:09:32.5470982Z        ...
2025-02-24T16:09:32.5471065Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T16:09:32.5471190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T16:09:32.5471287Z At positional index 75, first diff: 6 != 7
2025-02-24T16:09:32.5471606Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T16:09:32.5471708Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5471820Z 
2025-02-24T16:09:32.5471917Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T16:09:32.5472013Z Max absolute difference: 1.
2025-02-24T16:09:32.5472100Z Max relative difference: 1.
2025-02-24T16:09:32.5472233Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472337Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472447Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.5472568Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472665Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T16:09:32.5472764Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T16:09:32.5473065Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T16:09:32.5473175Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5473180Z 
2025-02-24T16:09:32.5473278Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T16:09:32.5473367Z Max absolute difference: 4005
2025-02-24T16:09:32.5473467Z Max relative difference: 26.00649351
2025-02-24T16:09:32.5473572Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.5473677Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T16:09:32.5473970Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T16:09:32.5474073Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5474078Z 
2025-02-24T16:09:32.5474176Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T16:09:32.5474264Z Max absolute difference: 4046
2025-02-24T16:09:32.5474360Z Max relative difference: 24.82208589
2025-02-24T16:09:32.5474456Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.5474557Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T16:09:32.5474826Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T16:09:32.5474927Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5474932Z 
2025-02-24T16:09:32.5475032Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T16:09:32.5475123Z Max absolute difference: 0.99984222
2025-02-24T16:09:32.5475225Z Max relative difference: 6337.12154973
2025-02-24T16:09:32.5475309Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475394Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475481Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5475562Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475645Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T16:09:32.5475722Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T16:09:32.5475968Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T16:09:32.5476068Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5476077Z 
2025-02-24T16:09:32.5476171Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T16:09:32.5476390Z Max absolute difference: 4.25260542e+12
2025-02-24T16:09:32.5476486Z Max relative difference: 18196.0085861
2025-02-24T16:09:32.5476642Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.5476722Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.5477001Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.5477148Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T16:09:32.5477225Z         4.043917e+10, 6.677200e-07],
2025-02-24T16:09:32.5477358Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T16:09:32.5477599Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T16:09:32.5477700Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5477807Z 
2025-02-24T16:09:32.5477900Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T16:09:32.5477997Z Max absolute difference: 2.92713618
2025-02-24T16:09:32.5478095Z Max relative difference: 18196.0085861
2025-02-24T16:09:32.5478237Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.5478320Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.5478456Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T16:09:32.5478542Z        1.126883e+00, 4.414472e-04])
2025-02-24T16:09:32.5478812Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T16:09:32.5478911Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5478915Z 
2025-02-24T16:09:32.5479015Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T16:09:32.5479111Z Max absolute difference: 282815.33818472
2025-02-24T16:09:32.5479209Z Max relative difference: 4.12352828e+47
2025-02-24T16:09:32.5479353Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.5479444Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.5479581Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.5479719Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T16:09:32.5479801Z         0.000000e+00, 0.000000e+00],
2025-02-24T16:09:32.5479930Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T16:09:32.5480429Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5480435Z 
2025-02-24T16:09:32.5480603Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.5480679Z [index]: [0, 1]
2025-02-24T16:09:32.5480784Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T16:09:32.5480885Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T16:09:32.5481071Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.5481567Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5481577Z 
2025-02-24T16:09:32.5481738Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.5481821Z [index]: [0, 1]
2025-02-24T16:09:32.5481917Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T16:09:32.5482020Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T16:09:32.5482190Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.5482732Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T16:09:32.5482738Z 
2025-02-24T16:09:32.5482901Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T16:09:32.5482980Z [index]: [0, 1]
2025-02-24T16:09:32.5483083Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T16:09:32.5483179Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T16:09:32.5483351Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T16:09:32.5483733Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T16:09:32.5483833Z 
2025-02-24T16:09:32.5483929Z Series values are different (100.0 %)
2025-02-24T16:09:32.5484061Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5485284Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T16:09:32.5486667Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T16:09:32.5486869Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T16:09:32.5487241Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T16:09:32.5487246Z 
2025-02-24T16:09:32.5487344Z Series values are different (100.0 %)
2025-02-24T16:09:32.5487471Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5488455Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T16:09:32.5489429Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T16:09:32.5489606Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T16:09:32.5489971Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T16:09:32.5489976Z 
2025-02-24T16:09:32.5490070Z Series values are different (90.0 %)
2025-02-24T16:09:32.5490195Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5491214Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T16:09:32.5492251Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T16:09:32.5492428Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T16:09:32.5492804Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T16:09:32.5492928Z 
2025-02-24T16:09:32.5493021Z Series values are different (95.0 %)
2025-02-24T16:09:32.5493145Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T16:09:32.5494244Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T16:09:32.5495447Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T16:09:32.5495628Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T16:09:32.5495990Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T16:09:32.5495995Z 
2025-02-24T16:09:32.5496097Z Series values are different (5.1125 %)
2025-02-24T16:09:32.5496618Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5501811Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T16:09:32.5507141Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T16:09:32.5507562Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T16:09:32.5507950Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T16:09:32.5507958Z 
2025-02-24T16:09:32.5508061Z Series values are different (1.3025 %)
2025-02-24T16:09:32.5508429Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T16:09:32.5514722Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.5521275Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T16:09:32.5521497Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T16:09:32.5521872Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T16:09:32.5521982Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5521986Z 
2025-02-24T16:09:32.5522080Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.5522180Z Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.5522269Z Max relative difference: 1.
2025-02-24T16:09:32.5522426Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5522649Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5522795Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5522876Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5523271Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T16:09:32.5523374Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5523379Z 
2025-02-24T16:09:32.5523471Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T16:09:32.5523671Z Max absolute difference: 4.15247374e+37
2025-02-24T16:09:32.5523765Z Max relative difference: 1.
2025-02-24T16:09:32.5523905Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5523986Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5524129Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5524213Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5524515Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T16:09:32.5524619Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5524623Z 
2025-02-24T16:09:32.5524716Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T16:09:32.5524810Z Max absolute difference: 4.30543741e+37
2025-02-24T16:09:32.5524904Z Max relative difference: 1.
2025-02-24T16:09:32.5525048Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5525135Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5525277Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5525354Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5525652Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T16:09:32.5525751Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5525758Z 
2025-02-24T16:09:32.5525863Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T16:09:32.5525954Z Max absolute difference: 5.32418652e-19
2025-02-24T16:09:32.5526052Z Max relative difference: 12.23359055
2025-02-24T16:09:32.5526142Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526223Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526404Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5526492Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526575Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5526654Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5526924Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T16:09:32.5527024Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5527028Z 
2025-02-24T16:09:32.5527119Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T16:09:32.5527216Z Max absolute difference: 1.38672909e+39
2025-02-24T16:09:32.5527310Z Max relative difference: 5.25284451
2025-02-24T16:09:32.5527456Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5527537Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5527675Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5527757Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5528047Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T16:09:32.5528151Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5528158Z 
2025-02-24T16:09:32.5528252Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T16:09:32.5528342Z Max absolute difference: 5.26760031e+38
2025-02-24T16:09:32.5528438Z Max relative difference: 35562.41947434
2025-02-24T16:09:32.5528577Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5528660Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5528920Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5529005Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5529470Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T16:09:32.5529568Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5529572Z 
2025-02-24T16:09:32.5529676Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.5529767Z Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.5529859Z Max relative difference: 7.72237896
2025-02-24T16:09:32.5530049Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530126Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530207Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5530290Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530371Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5530447Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5530883Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T16:09:32.5530984Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5530988Z 
2025-02-24T16:09:32.5531077Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.5531171Z Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.5531262Z Max relative difference: 4.0036592
2025-02-24T16:09:32.5531408Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5531489Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5531633Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5531716Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5532176Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T16:09:32.5532280Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5532284Z 
2025-02-24T16:09:32.5532375Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5532474Z Max absolute difference: 5.00661745e+37
2025-02-24T16:09:32.5532569Z Max relative difference: 17.51202125
2025-02-24T16:09:32.5532704Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T16:09:32.5532786Z        2.279436e+31, 2.243943e+31])
2025-02-24T16:09:32.5532922Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T16:09:32.5533003Z        2.292907e+31, 2.257206e+31])
2025-02-24T16:09:32.5533462Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T16:09:32.5533571Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5533575Z 
2025-02-24T16:09:32.5533679Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.5533773Z Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.5533868Z Max relative difference: 3.25828651
2025-02-24T16:09:32.5533950Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534036Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534116Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5534197Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534277Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5534353Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5534786Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T16:09:32.5534886Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5534895Z 
2025-02-24T16:09:32.5534985Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.5535085Z Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.5535173Z Max relative difference: 1.86186015
2025-02-24T16:09:32.5535316Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5535484Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5535628Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5535708Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5536164Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T16:09:32.5536360Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5536365Z 
2025-02-24T16:09:32.5536460Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5536688Z Max absolute difference: 2.90101642e+37
2025-02-24T16:09:32.5536780Z Max relative difference: 0.98973757
2025-02-24T16:09:32.5536919Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T16:09:32.5536999Z        1.330497e+31, 1.294462e+31])
2025-02-24T16:09:32.5537135Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T16:09:32.5537219Z        1.375141e+31, 1.337928e+31])
2025-02-24T16:09:32.5537663Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T16:09:32.5537765Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5537769Z 
2025-02-24T16:09:32.5537872Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T16:09:32.5537964Z Max absolute difference: 4.67863561e-19
2025-02-24T16:09:32.5538058Z Max relative difference: 3.25828651
2025-02-24T16:09:32.5538140Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538227Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538309Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5538392Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538476Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5538552Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5538977Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T16:09:32.5539077Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5539081Z 
2025-02-24T16:09:32.5539178Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T16:09:32.5539286Z Max absolute difference: 8.5486318e+38
2025-02-24T16:09:32.5539376Z Max relative difference: 1.86186015
2025-02-24T16:09:32.5539522Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5539599Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5539749Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5539827Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5540290Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T16:09:32.5540396Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5540403Z 
2025-02-24T16:09:32.5540494Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5540593Z Max absolute difference: 2.99183385e+37
2025-02-24T16:09:32.5540684Z Max relative difference: 0.98992197
2025-02-24T16:09:32.5540832Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T16:09:32.5540916Z        1.260980e+31, 1.222587e+31])
2025-02-24T16:09:32.5541057Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T16:09:32.5541140Z        1.193005e+31, 1.164854e+31])
2025-02-24T16:09:32.5541586Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T16:09:32.5541694Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5541698Z 
2025-02-24T16:09:32.5541803Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T16:09:32.5541897Z Max absolute difference: 7.03072887e-19
2025-02-24T16:09:32.5541995Z Max relative difference: 7.72237896
2025-02-24T16:09:32.5542208Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542289Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542368Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5542455Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542537Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T16:09:32.5542615Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T16:09:32.5543047Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T16:09:32.5543217Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5543221Z 
2025-02-24T16:09:32.5543318Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T16:09:32.5543414Z Max absolute difference: 2.09719426e+39
2025-02-24T16:09:32.5543504Z Max relative difference: 4.0036592
2025-02-24T16:09:32.5543648Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5543731Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5543874Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T16:09:32.5543952Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5544415Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T16:09:32.5544518Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5544521Z 
2025-02-24T16:09:32.5544613Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T16:09:32.5544710Z Max absolute difference: 5.0153284e+37
2025-02-24T16:09:32.5544802Z Max relative difference: 4.90769503
2025-02-24T16:09:32.5544947Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T16:09:32.5545029Z        2.088676e+31, 2.060278e+31])
2025-02-24T16:09:32.5545166Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T16:09:32.5545248Z        2.124305e+31, 2.101081e+31])
2025-02-24T16:09:32.5545605Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T16:09:32.5545706Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T16:09:32.5545710Z 
2025-02-24T16:09:32.5545796Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.5545895Z Max absolute difference: 2.25821059e+25
2025-02-24T16:09:32.5545991Z Max relative difference: 0.00054426
2025-02-24T16:09:32.5546125Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T16:09:32.5552124Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T16:09:32.5552322Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T16:09:32.5552474Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T16:09:32.5552601Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T16:09:32.5552727Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T16:09:32.5553179Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T16:09:32.5553304Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T16:09:32.5553309Z 
2025-02-24T16:09:32.5553406Z Mismatched elements: 20 / 20 (100%)
2025-02-24T16:09:32.5553511Z Max absolute difference: 1.93283629e+25
2025-02-24T16:09:32.5553599Z Max relative difference: 0.00029148
2025-02-24T16:09:32.5553750Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T16:09:32.5553872Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T16:09:32.5553999Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T16:09:32.5554137Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T16:09:32.5554251Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T16:09:32.5554374Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T16:09:32.5554900Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T16:09:32.5554990Z Arrays are not equal
2025-02-24T16:09:32.5554995Z 
2025-02-24T16:09:32.5555093Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T16:09:32.5555232Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.5555326Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.5555434Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.5555567Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T16:09:32.5555763Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T16:09:32.5555864Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T16:09:32.5556468Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T16:09:32.5556573Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T16:09:32.5556582Z 
2025-02-24T16:09:32.5556684Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T16:09:32.5556785Z Max absolute difference: 2.00640487e-05
2025-02-24T16:09:32.5556876Z Max relative difference: 2.06329455
2025-02-24T16:09:32.5557046Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.5557133Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.5557298Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T16:09:32.5557379Z        -9.757136e-06,  1.019764e-05])
2025-02-24T16:09:32.5557880Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T16:09:32.5557990Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5557995Z 
2025-02-24T16:09:32.5558082Z (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.5558227Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.5558347Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.5558474Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.5558611Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.5558723Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.5558848Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.5559314Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T16:09:32.5559429Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5559434Z 
2025-02-24T16:09:32.5559520Z (shapes (558,), (560,) mismatch)
2025-02-24T16:09:32.5559658Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.5559783Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.5559902Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.5560034Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.5560147Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.5560261Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.5560727Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T16:09:32.5560823Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5560831Z 
2025-02-24T16:09:32.5560919Z (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.5561045Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.5561161Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.5561281Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.5561528Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.5561643Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.5561757Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.5562215Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T16:09:32.5562317Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5562322Z 
2025-02-24T16:09:32.5562408Z (shapes (159,), (153,) mismatch)
2025-02-24T16:09:32.5562646Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.5562753Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.5562874Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.5563011Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.5563122Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.5563241Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.5563694Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T16:09:32.5563795Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5563799Z 
2025-02-24T16:09:32.5563885Z (shapes (508,), (515,) mismatch)
2025-02-24T16:09:32.5564013Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T16:09:32.5564130Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T16:09:32.5564245Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T16:09:32.5564375Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T16:09:32.5564484Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T16:09:32.5564603Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T16:09:32.5565069Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T16:09:32.5565164Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5565168Z 
2025-02-24T16:09:32.5565260Z (shapes (1466,), (1481,) mismatch)
2025-02-24T16:09:32.5565408Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T16:09:32.5565491Z        11152.962595, 11172.044815])
2025-02-24T16:09:32.5565639Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T16:09:32.5565718Z        11398.237865, 11111.204868])
2025-02-24T16:09:32.5566176Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T16:09:32.5566375Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5566381Z 
2025-02-24T16:09:32.5566474Z (shapes (147,), (136,) mismatch)
2025-02-24T16:09:32.5566609Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T16:09:32.5566720Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T16:09:32.5566844Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T16:09:32.5566968Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T16:09:32.5567084Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T16:09:32.5567199Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T16:09:32.5567664Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T16:09:32.5567768Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5567773Z 
2025-02-24T16:09:32.5567852Z (shapes (379,), (381,) mismatch)
2025-02-24T16:09:32.5567981Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T16:09:32.5568228Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T16:09:32.5568353Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T16:09:32.5568482Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T16:09:32.5568589Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T16:09:32.5568707Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T16:09:32.5569137Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T16:09:32.5569343Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5569348Z 
2025-02-24T16:09:32.5569442Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.5569535Z Max absolute difference: 22.
2025-02-24T16:09:32.5569628Z Max relative difference: 0.8
2025-02-24T16:09:32.5569711Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.5569797Z        [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.5569875Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.5569962Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.5570043Z        [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.5570118Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.5570555Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T16:09:32.5570655Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5570660Z 
2025-02-24T16:09:32.5570759Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.5570855Z Max absolute difference: 22.
2025-02-24T16:09:32.5570940Z Max relative difference: 0.8
2025-02-24T16:09:32.5571024Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T16:09:32.5571098Z        [1.19e+04, 1.67e+02],
2025-02-24T16:09:32.5571182Z        [1.19e+04, 7.60e+01],...
2025-02-24T16:09:32.5571261Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T16:09:32.5571349Z        [1.19e+04, 1.89e+02],
2025-02-24T16:09:32.5571431Z        [1.19e+04, 8.20e+01],...
2025-02-24T16:09:32.5571863Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T16:09:32.5571963Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5571968Z 
2025-02-24T16:09:32.5572055Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5572148Z Max absolute difference: 34
2025-02-24T16:09:32.5572241Z Max relative difference: 0.71428571
2025-02-24T16:09:32.5572391Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.5572483Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5572614Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.5572702Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5573128Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T16:09:32.5573231Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5573236Z 
2025-02-24T16:09:32.5573329Z Mismatched elements: 4 / 40 (10%)
2025-02-24T16:09:32.5573418Z Max absolute difference: 34.
2025-02-24T16:09:32.5573512Z Max relative difference: 0.65
2025-02-24T16:09:32.5573592Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T16:09:32.5573673Z        [1.19e+04, 2.72e+02],
2025-02-24T16:09:32.5573748Z        [1.19e+04, 1.10e+02],...
2025-02-24T16:09:32.5573832Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T16:09:32.5573912Z        [1.19e+04, 3.06e+02],
2025-02-24T16:09:32.5573991Z        [1.19e+04, 1.18e+02],...
2025-02-24T16:09:32.5574422Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:09:32.5574520Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5574524Z 
2025-02-24T16:09:32.5574616Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5574790Z Max absolute difference: 22
2025-02-24T16:09:32.5574882Z Max relative difference: 0.8
2025-02-24T16:09:32.5575015Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.5575095Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5575223Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.5575305Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5575726Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:09:32.5575900Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5575904Z 
2025-02-24T16:09:32.5575989Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5576081Z Max absolute difference: 22
2025-02-24T16:09:32.5576168Z Max relative difference: 0.8
2025-02-24T16:09:32.5576405Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T16:09:32.5576491Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5576622Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T16:09:32.5576706Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T16:09:32.5577127Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:09:32.5577225Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5577230Z 
2025-02-24T16:09:32.5577316Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5577412Z Max absolute difference: 34
2025-02-24T16:09:32.5577507Z Max relative difference: 0.71428571
2025-02-24T16:09:32.5577636Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.5577720Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5577848Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.5577932Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5578355Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:09:32.5578457Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T16:09:32.5578462Z 
2025-02-24T16:09:32.5578555Z Mismatched elements: 4 / 20 (20%)
2025-02-24T16:09:32.5578641Z Max absolute difference: 34
2025-02-24T16:09:32.5578736Z Max relative difference: 0.65
2025-02-24T16:09:32.5578865Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T16:09:32.5578955Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5579086Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T16:09:32.5579165Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T16:09:32.5579654Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T16:09:32.5579760Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5579764Z 
2025-02-24T16:09:32.5579859Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5579963Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5580053Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5580209Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5580286Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5580433Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5580510Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5580994Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T16:09:32.5581104Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5581108Z 
2025-02-24T16:09:32.5581198Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5581416Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5581506Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5581654Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5581736Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5581873Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5581954Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5582430Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T16:09:32.5582640Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5582644Z 
2025-02-24T16:09:32.5582740Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5582832Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5582924Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5583063Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5583149Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5583287Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5583369Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5583847Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T16:09:32.5583943Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5583947Z 
2025-02-24T16:09:32.5584042Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5584135Z Max absolute difference: 4.3299331e-05
2025-02-24T16:09:32.5584228Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5584374Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5584449Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5584595Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5584671Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5585151Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T16:09:32.5585248Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5585258Z 
2025-02-24T16:09:32.5585349Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5585446Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5585539Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5585682Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5585761Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5585905Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5585985Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5586590Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T16:09:32.5586698Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5586702Z 
2025-02-24T16:09:32.5586789Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5586887Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5586979Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5587122Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5587202Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5587337Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5587422Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5587896Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T16:09:32.5587996Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5588000Z 
2025-02-24T16:09:32.5588094Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5588303Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5588400Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5588539Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5588619Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5588756Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5588838Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5589316Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T16:09:32.5589553Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5589557Z 
2025-02-24T16:09:32.5589651Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5589741Z Max absolute difference: 3.16368526e-05
2025-02-24T16:09:32.5589836Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5589982Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5590062Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5590204Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T16:09:32.5590278Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5590754Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T16:09:32.5590855Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5590859Z 
2025-02-24T16:09:32.5590947Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5591048Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5591135Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5591279Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5591355Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5591499Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5591586Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5592060Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T16:09:32.5592163Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5592167Z 
2025-02-24T16:09:32.5592254Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5592352Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5592446Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5592586Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5592670Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5592806Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5592887Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5593374Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T16:09:32.5593484Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5593488Z 
2025-02-24T16:09:32.5593576Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5593672Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5593762Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5593898Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5593979Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5594114Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5594198Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5594671Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T16:09:32.5594773Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5594777Z 
2025-02-24T16:09:32.5594870Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T16:09:32.5595066Z Max absolute difference: 5.1807441e+47
2025-02-24T16:09:32.5595159Z Max relative difference: 4.76021355
2025-02-24T16:09:32.5595294Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5595374Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5595515Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5595590Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5596069Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T16:09:32.5596242Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5596245Z 
2025-02-24T16:09:32.5596445Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5596545Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5596636Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5596777Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5596856Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5596996Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5597072Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5597549Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T16:09:32.5597648Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5597652Z 
2025-02-24T16:09:32.5597739Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5597840Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5597929Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5598071Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5598151Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5598287Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5598371Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5598844Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T16:09:32.5598945Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5598950Z 
2025-02-24T16:09:32.5599038Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5599132Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5599225Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5599364Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5599446Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5599581Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5599666Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5600144Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T16:09:32.5600244Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5600248Z 
2025-02-24T16:09:32.5600342Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T16:09:32.5600435Z Max absolute difference: 3.78533417e+47
2025-02-24T16:09:32.5600533Z Max relative difference: 178.93768705
2025-02-24T16:09:32.5600671Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5600752Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5600892Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T16:09:32.5600971Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5601407Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T16:09:32.5601503Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5601507Z 
2025-02-24T16:09:32.5601600Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5601825Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5601912Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5602055Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5602128Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5602271Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5602346Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5602780Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T16:09:32.5602984Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5602988Z 
2025-02-24T16:09:32.5603076Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5603171Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5603258Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5603400Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5603484Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5603622Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5603703Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5604141Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T16:09:32.5604245Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5604249Z 
2025-02-24T16:09:32.5604342Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5604438Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5604531Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5604668Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5604749Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5604886Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5604970Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5605403Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T16:09:32.5605499Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5605503Z 
2025-02-24T16:09:32.5605594Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5605688Z Max absolute difference: 2.08771842e-13
2025-02-24T16:09:32.5605781Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5605922Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5606000Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5606144Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5606219Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5606752Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T16:09:32.5606856Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5606865Z 
2025-02-24T16:09:32.5606956Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5607052Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5607142Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5607285Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5607361Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5607503Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5607585Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5608019Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T16:09:32.5608119Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5608123Z 
2025-02-24T16:09:32.5608214Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5608434Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5608528Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5608664Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5608744Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5608880Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5608961Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5609387Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T16:09:32.5609590Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5609594Z 
2025-02-24T16:09:32.5609686Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5609779Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5609876Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5610015Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5610098Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5610239Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5610315Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5610746Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T16:09:32.5610841Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5610846Z 
2025-02-24T16:09:32.5610939Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5611033Z Max absolute difference: 3.02728422e-13
2025-02-24T16:09:32.5611128Z Max relative difference: 15766.1580412
2025-02-24T16:09:32.5611270Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5611344Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5611488Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T16:09:32.5611566Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5611998Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T16:09:32.5612100Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5612105Z 
2025-02-24T16:09:32.5612195Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5612290Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5612377Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5612531Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5612617Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5612769Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5612852Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5613298Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T16:09:32.5613408Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5613413Z 
2025-02-24T16:09:32.5613505Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5613607Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5613700Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5613844Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5613926Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5614064Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5614146Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5614585Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T16:09:32.5614694Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5614698Z 
2025-02-24T16:09:32.5614791Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5614883Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5615064Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5615203Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5615285Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5615426Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5615502Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5615937Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T16:09:32.5616129Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5616133Z 
2025-02-24T16:09:32.5616227Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T16:09:32.5616436Z Max absolute difference: 2.49794504e+39
2025-02-24T16:09:32.5616527Z Max relative difference: 3.01858991
2025-02-24T16:09:32.5616680Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5616760Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5616903Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5616979Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5617422Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T16:09:32.5617527Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5617531Z 
2025-02-24T16:09:32.5617622Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5617717Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5617812Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5617962Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5618044Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5618179Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5618260Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5618691Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T16:09:32.5618795Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5618798Z 
2025-02-24T16:09:32.5618892Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5618984Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5619077Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5619215Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5619299Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5619435Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5619517Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5619952Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T16:09:32.5620048Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5620056Z 
2025-02-24T16:09:32.5620154Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5620244Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5620339Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5620480Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5620557Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5620700Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5620776Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5621213Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T16:09:32.5621311Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T16:09:32.5621321Z 
2025-02-24T16:09:32.5621408Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T16:09:32.5621503Z Max absolute difference: 3.62213099e+39
2025-02-24T16:09:32.5621718Z Max relative difference: 15766.15804934
2025-02-24T16:09:32.5621859Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5621936Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5622077Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T16:09:32.5622158Z        0.000000e+00, 0.000000e+00])
2025-02-24T16:09:32.5622432Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 753.85s (0:12:33) =
2025-02-24T16:09:34.8072971Z ##[error]Process completed with exit code 1.
